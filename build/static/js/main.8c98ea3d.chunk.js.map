{"version":3,"sources":["redux/actions.js","redux/reducerBuilder.js","redux/reducerCabinet.js","redux/reducers.js","redux/store.js","Firebase/firebaseConfig.js","Firebase/Firebase.js","redux/middleware/loadUserMiddleware.js","components/firebaseHOC.jsx","components/loading/Loader.jsx","EventEmitter.js","components/Registration/Registration.jsx","Pages/Index/Index.jsx","components/Icon/icon.jsx","components/header/Header.jsx","components/modalWindow/ModalWindow.jsx","redux/middleware/createProjectMiddleware.js","components/List/Item.jsx","components/List/List.jsx","components/ProjectsSection/ProjectsSection.jsx","Pages/Cabinet/Cabinet.jsx","Pages/About/About.jsx","components/instrumentsPanel/InstrumentsPanel.jsx","components/buildComponents/header/components/headerComponents.jsx","components/componentsBuildMenu/BuildMenu.jsx","components/buildComponents/header/headerBuild.jsx","Pages/Build/Build.jsx","App.jsx","index.js"],"names":["loadUserAction","state","console","log","type","active","idUser","uid","error","projects","Object","toConsumableArray","errorAction","initialState","nameEditComponent","settingsEditComponent","dateConnect","Date","now","toLocaleString","replace","split","combineReducers","builder","arguments","length","undefined","action","objectSpread","currentEditable","cabinet","middleware","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","thunk","store","createStore","firebaseConfig","apiKey","authDomain","process","REACT_APP_AUTH_DOMAIN","databaseURL","REACT_APP_DATABASE_URL","projectId","storageBucket","REACT_APP_STORAGE_BUCKET","messagingSenderId","REACT_APP_MESSAGING_SENDER_ID","appId","REACT_APP_APPID","interfaceFirebase","require","Firebase","classCallCheck","this","firebase","initializeApp","auth","db","firestore","rules","setPersistence","Auth","Persistence","email","password","signInWithEmailAndPassword","createUserWithEmailAndPassword","signOut","currentUser","saveSession","middlewareLogin","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","dispatch","wrap","_context","prev","next","login","then","response","collection","doc","user","get","docUser","data","id","catch","message","stop","_x","apply","middlewareLogOutUser","_ref3","_callee3","_context3","_x3","withFirebase","Component","props","react_default","createElement","assign","Loader","_useState","useState","path","slicedToArray","className","src","alt","stream","EventEmitter","_this","emailRef","passwordRef","setRefEmail","node","setRefPassword","createUser","event","value","registration","set","eventStream","emit","setState","ref","onClick","React","PureComponent","Index","title","registrationActive","regStatus","wrongEnter","statusRegistration","additionalUserInfo","isNewUser","showBox","authTo","emailImput","passwordImput","componentDidMount","e","on","componentWillUnmount","off","react_router","to","currentSelected","components_Registration_Registration","connect","Icon","_useState3","iconPath","CabinetIcon","Header","logOut","redirect","location","pathname","history","push","add","icon","react_router_dom","withRouter","ModalWindow","workMode","newProject","validateName","validateType","disabled","name","warning","lengthMax","lengthMin","inputSelect","disabledButton","addNewProject","mode","selectOption","inputs","target","defineProperty","lengthInput","cancel","refSelect","onChange","placeholder","react","middlewareCreateProject","list","lastProject","lastIndex","components","update","_useState5","concat","stopPropagation","data-id","List","item","makeList","map","project","List_Item","key","componentWillMount","ProjectsSection","components_List_List","Cabinet","changeWorkMode","header_Header","modalWindow_ModalWindow","components_ProjectsSection_ProjectsSection","getCurrentUser","config","about","developer","year","InstrumentsPanel","idProject","acceptInstruments","editComponent","edit","makePanelInstruments","componentDidUpdate","oldProps","oldState","TitleHeader","styled","h1","_templateObject","size","textColor","BackgroundHeader","div","_templateObject2","backgroundColor","backgroundImage","Title","color","Background","BuildMenu","component","addText","componentArrayWrapper","headerComponents_Title","addBackground","headerComponents_Background","HeaderBuild","viewComponentMenu","children","changeMode","eventEmitter","componentMenu","startMode","menuActive","componentsBuildMenu_BuildMenu","build","editStart","readyBuild","Build","parseInt","match","params","param","typeProject","workModeEdit","addHeaderComponent","itemEvent","instrumentsPanel_InstrumentsPanel","header_headerBuild","App","firebaseLoadState","_this2","onAuthStateChanged","_ref2","_callee2","_context2","_x2","_this3","exact","render","Pages_Index_Index","Pages_About_About","ReactDOM","es","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.8c98ea3d.chunk.js","sourcesContent":["const CREATE_PROJECT = 'CREATE_PROJECT';\r\nconst LOAD_CURRENT = 'LOAD_CURRENT';\r\nconst LOG_OUT_CABINET = 'LOG_OUT_CABINET';\r\nconst LOAD_USER_CABINET = 'LOAD_USER_CABINET';\r\nconst ERROR_CABINET = 'ERROR_CABINET';\r\n\r\n\r\nconst createProjectAction = (state) => {\r\n    return {\r\n        type: CREATE_PROJECT,\r\n        projects: [...state],\r\n    }\r\n}\r\n\r\nconst loadCurrentProjectAction = (state) => {\r\n    return {\r\n        type: LOAD_CURRENT,\r\n        currentEditable: state,\r\n    }\r\n\r\n}\r\n\r\nconst loadUserAction = (state) => {\r\n    console.log(state);\r\n    return {\r\n        type: LOAD_USER_CABINET,\r\n        active: true,\r\n        idUser: state.uid,\r\n        error: '',\r\n        projects: [...state.projects]\r\n    }\r\n}\r\n\r\nconst logOutAction = (state) => {\r\n\r\n    return {\r\n        type: LOG_OUT_CABINET,\r\n        active: false,\r\n        idUser: null,\r\n        error: '',\r\n        projects: []\r\n    }\r\n}\r\n\r\nconst errorAction = (state) => {\r\n    return {\r\n        type: ERROR_CABINET,\r\n        error: state\r\n    }\r\n}\r\n\r\nexport {\r\n    CREATE_PROJECT, createProjectAction, /* cabinet */\r\n    LOAD_USER_CABINET, loadUserAction, /* cabinet */\r\n    LOG_OUT_CABINET, logOutAction, /* cabinet */\r\n    LOAD_CURRENT, loadCurrentProjectAction, /* builder */\r\n    ERROR_CABINET, errorAction, /* both */\r\n}","import {LOAD_CURRENT} from './actions';\r\n\r\nconst initialState = {\r\n    nameEditComponent: null,\r\n    settingsEditComponent: {},\r\n};\r\nexport default (state = initialState, action) => {\r\n    switch (action.type){\r\n\r\n        case LOAD_CURRENT: {\r\n            return {\r\n                ...state,\r\n                currentEditable: {...action.currentEditable}\r\n            }\r\n        }\r\n        default: return state;\r\n    }\r\n};","import {LOAD_USER_CABINET, LOG_OUT_CABINET, ERROR_CABINET, CREATE_PROJECT} from './actions';\r\n\r\nconst initialState = {\r\n    active: false,\r\n    idUser: null,\r\n    projects: [],\r\n    error: null,\r\n    dateConnect: new Date(Date.now()).toLocaleString().replace(/\\s/ig,'').split(','),\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n\r\n    switch(action.type) {\r\n        case LOAD_USER_CABINET: {\r\n\r\n            return {\r\n                ...state,\r\n                active: action.active,\r\n                idUser: action.idUser,\r\n                projects: action.projects\r\n            }\r\n        }\r\n\r\n        case CREATE_PROJECT: {\r\n            return {\r\n                ...state,\r\n                projects: action.projects\r\n            }\r\n        }\r\n\r\n        case LOG_OUT_CABINET: {\r\n            return {\r\n                ...state,\r\n                active: false,\r\n                idUser: null,\r\n                projects: []\r\n            }\r\n        }\r\n\r\n        case ERROR_CABINET: {\r\n            return {\r\n                ...state,\r\n                error: action.error\r\n            }\r\n        }\r\n        default: return state;\r\n    }\r\n}\r\n\r\n","import {combineReducers} from 'redux';\r\nimport reducerBuilder from './reducerBuilder';\r\nimport reducerCabinet from './reducerCabinet';\r\n\r\nexport default combineReducers({\r\n    builder: reducerBuilder,\r\n    cabinet: reducerCabinet,\r\n});","import {createStore, applyMiddleware, compose} from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport combineReducers from './reducers';\r\n\r\nconst composeEnhancers =\r\n  typeof window === 'object' &&\r\n  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?\r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\r\n    }) : compose;\r\n\r\nconst middleware = composeEnhancers(\r\n  applyMiddleware(thunk)\r\n);\r\nconst store = createStore(combineReducers, middleware);\r\n\r\n\r\nexport default store;","// setings in root folder / firebase.env\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyBrLv9RyGWXCeEETRqBbBo3EVOcibmnJwU\",\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n    databaseURL: process.env.REACT_APP_DATABASE_URL,\r\n    projectId: \"constructor-acb61\",\r\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n    appId: process.env.REACT_APP_APPID\r\n};\r\n\r\nexport {firebaseConfig}","import firebase from '@firebase/app';\r\nimport {firebaseConfig} from './firebaseConfig';\r\n\r\nconst auth = require('firebase/auth');\r\nconst firestore = require('firebase/firestore');\r\n\r\nclass Firebase {\r\n\r\n        constructor(){\r\n                firebase.initializeApp(firebaseConfig);\r\n                this.auth = firebase.auth();\r\n                this.db = firebase.firestore();\r\n        }\r\n\r\n        saveSession(rules){\r\n                return this.auth.setPersistence(firebase.auth.Auth.Persistence[rules]);\r\n        }\r\n\r\n        login(email, password){\r\n                return this.auth.signInWithEmailAndPassword(email, password);\r\n        }\r\n\r\n        registration(email, password){\r\n                return this.auth.createUserWithEmailAndPassword(email, password)\r\n        }\r\n\r\n        signOut(){\r\n                return this.auth.signOut()\r\n        }\r\n\r\n        getCurrentUser() {\r\n                return this.auth.currentUser\r\n        }\r\n}\r\n\r\nlet interfaceFirebase = new Firebase();\r\ninterfaceFirebase.saveSession('SESSION');\r\n\r\nexport default interfaceFirebase;\r\n\r\nexport { auth, firestore };\r\n\r\n","import firebase from '../../Firebase/Firebase';\r\nimport {loadUserAction, errorAction, logOutAction} from '../actions';\r\n\r\nconst middlewareLogin = (email,password) => async dispatch => {\r\n        await firebase.login(email,password)\r\n        .then(response =>{\r\n            firebase.db.collection(\"users\").doc(response.user.uid).get()\r\n            .then(docUser => {\r\n                let user = docUser.data();\r\n                dispatch(loadUserAction({uid: docUser.id, projects: [...user.projects]}))\r\n            })\r\n        })\r\n        .catch((error) => dispatch(errorAction(error.message)));\r\n    }\r\n\r\nconst middlewareLoadUserData = (uid) => async dispatch => {\r\n        await firebase.db.collection(\"users\").doc(uid).get()\r\n        .then(docUser => {\r\n            let user = docUser.data();\r\n            dispatch(loadUserAction({uid: uid, projects: [...user.projects]}))\r\n        })\r\n        .catch(error => dispatch(errorAction(error.message)));\r\n    }\r\n\r\nconst middlewareLogOutUser = (uid) => async dispatch => {\r\n    await firebase.signOut()\r\n    .then (response => {\r\n        dispatch(logOutAction());\r\n    })\r\n    .catch(error => dispatch(errorAction(error.message)));\r\n}\r\nexport {\r\n    middlewareLogin,middlewareLoadUserData, middlewareLogOutUser\r\n}","import React from 'react';\r\nimport firebase from '../Firebase/Firebase';\r\n\r\nconst withFirebase = Component => props => (\r\n    <Component firebase = {firebase} {...props} />\r\n);\r\n\r\nexport default withFirebase;","import React,{useState} from 'react';\r\n\r\nexport default function(props) {\r\n    const [path] = useState(props.path);\r\n    return (\r\n            <div className = 'loaderBox'>\r\n                <img className = 'loader' src = {path} alt = 'loader'></img> \r\n                <p>Loading {props.type}</p>\r\n            </div>\r\n    )\r\n}","import {EventEmitter} from 'events';\r\nconst stream = new EventEmitter();\r\nexport default stream;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport eventStream from '../../EventEmitter';\r\nimport './registration.scss';\r\n\r\nimport withFirebase from '../../components/firebaseHOC';\r\n\r\n\r\nclass Registration extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        firebase: PropTypes.object.isRequired,\r\n    }\r\n\r\n    state = {\r\n        firebase: this.props.firebase,\r\n        error: null,\r\n    }\r\n\r\n    emailRef = null;\r\n    passwordRef = null;\r\n\r\n    setRefEmail = (node) => this.emailRef = node;\r\n    setRefPassword = (node) => this.passwordRef = node;\r\n\r\n    createUser = (event) => {\r\n\r\n        const email = this.emailRef.value;\r\n        const password = this.passwordRef.value;\r\n        const { firebase } = this.props;\r\n\r\n        firebase.registration(email, password)\r\n        .then(response => {\r\n            firebase.db.collection(\"users\").doc(response.user.uid).set({\r\n                'projects': [],\r\n                'email': email,\r\n            }).then(() => eventStream.emit('EventRegistrationCorrect', response))\r\n        })\r\n        .catch((error) => this.setState({error: error.message}));\r\n    };\r\n\r\n    render(){\r\n        let  { error } = this.state;\r\n\r\n        return (\r\n            <div className = 'RegistrationBox'>\r\n                <div className = 'RegistrationForm'>\r\n                    <h3>Registration</h3>\r\n                    <div className = 'RegForm'>\r\n                        { error ?\r\n                            <p className = 'error'>{error}</p>\r\n                            : null\r\n                        }\r\n                        <p>E-mail</p>\r\n                        <input ref = {this.setRefEmail} type = 'text' />\r\n                        <p>Password</p>\r\n                        <input ref = {this.setRefPassword} type = 'password' />\r\n                        <input onClick = {this.createUser}\r\n                                className = 'loginButton'\r\n                                type = 'button'\r\n                                value = 'registration'\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\nexport default withFirebase(Registration);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport eventStream from '../../EventEmitter';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nimport {middlewareLogin} from '../../redux/middleware/loadUserMiddleware';\r\n\r\nimport Loader from '../../components/loading/Loader';\r\nimport Registration from '../../components/Registration/Registration';\r\n\r\nimport {connect} from 'react-redux';\r\n\r\nimport './index.scss';\r\n\r\nclass Index extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        config: PropTypes.object,\r\n    }\r\n\r\n    state = {\r\n        title:  \"Constructor\",\r\n        registrationActive: false,\r\n        regStatus: false,\r\n        wrongEnter: false,\r\n        error: ''\r\n    }\r\n\r\n    statusRegistration = (event) => {\r\n        event.additionalUserInfo.isNewUser ?\r\n        this.setState({...this.state,\r\n                        regStatus: true,\r\n                        registrationActive: false,\r\n                        error: 'Account create!'\r\n                    })\r\n        : console.log('error registration');\r\n    }\r\n\r\n    showBox = (event) => {\r\n        this.setState ({\r\n            ...this.state,\r\n        registrationActive: this.state.registrationActive ? false : true\r\n        })\r\n    }\r\n\r\n    authTo = (event) => {\r\n            this.props.dispatch(middlewareLogin(this.emailImput.value, this.passwordImput.value));\r\n}\r\n    emailImput = null;\r\n    passwordImput = null;\r\n    emailRef = (node) => this.emailImput = node;\r\n    passwordRef = (node) => this.passwordImput = node;\r\n\r\n    render(){\r\n        console.log('index render');\r\n        console.log(this.props);\r\n        if (!this.props.active) {\r\n            let currentSelected = this.state.registrationActive;\r\n            return (\r\n                <div className = 'LoginPage flex-column'>\r\n                        <h1>{this.state.title}</h1>\r\n                        <div className = 'LoginBox'>\r\n                            <div className = 'LoginForm'>\r\n                                <h3>Connect form</h3>\r\n                                {\r\n                                    this.props.wrongEnter || this.state.regStatus ?\r\n                                    <p className = 'error'>{this.props.wrongEnter}</p>\r\n                                    : null\r\n                                }\r\n                                <p>E-mail</p>\r\n                                <input ref = {this.emailRef} type = 'text' />\r\n                                <p>Password</p>\r\n                                <input ref = {this.passwordRef} type = 'password' />\r\n                                <input \r\n                                    onClick = {this.authTo} \r\n                                    className = 'loginButton'\r\n                                    type = 'button'\r\n                                    value = 'enter' />\r\n                                <input\r\n                                    onClick = {this.showBox}\r\n                                    className = {currentSelected ? `loginButton selected`\r\n                                        : 'loginButton'}\r\n                                    type = 'button'\r\n                                    value = 'registration'\r\n                                    />\r\n                            </div>\r\n                        </div>\r\n                        {\r\n                            this.state.registrationActive ?\r\n                            <Registration auth = {this.props.auth} />\r\n                            : null\r\n                        }\r\n                </div>\r\n            )\r\n        } else if (this.props.active) return <Redirect to = '/Cabinet' />\r\n        else  return <Loader path = '/img/loading.gif' type = 'session' />\r\n    }\r\n\r\n    componentDidMount = (e) => {\r\n        eventStream.on('EventRegistrationCorrect', this.statusRegistration);\r\n    }\r\n    componentWillUnmount = (e) => {\r\n        eventStream.off('EventRegistrationCorrect', this.statusRegistration);\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {active: state.cabinet.active, wrongEnter: state.cabinet.error}\r\n  }\r\n\r\nexport default connect(mapStateToProps)(Index);","import React, {useState} from 'react';\r\n\r\nfunction Icon(props){\r\n    const [path] = useState(props.path);\r\n    const [className] = useState(props.className ? props.className : null);\r\n    return (\r\n    <img\r\n        onClick = {props.onClick ? props.onClick : null}\r\n        className = {className}\r\n        title = {props.title ? props.title : null}\r\n        src = {path} alt = 'icon'>\r\n    </img>\r\n    )\r\n}\r\n\r\nexport default Icon;","import React from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport './header.scss';\r\n\r\nimport {middlewareLogOutUser} from '../../redux/middleware/loadUserMiddleware';\r\nimport {connect} from 'react-redux';\r\nimport {withRouter, NavLink} from 'react-router-dom';\r\n\r\nimport eventStream from '../../EventEmitter.js';\r\nimport Icon from '../Icon/icon';\r\n\r\n\r\nconst iconPath = require('../../config.json').CabinetIcon;\r\n\r\nclass Header extends React.Component {\r\n\r\n    static propTypes = {\r\n        title: PropTypes.string.isRequired,\r\n    };\r\n\r\n    state = {\r\n        title: this.props.title,\r\n    };\r\n\r\n    logOut = (event) => {\r\n        this.props.dispatch(middlewareLogOutUser(this.props.idUser));\r\n    };\r\n\r\n    redirect = (e) => {\r\n        if (this.props.location.pathname !== '/Cabinet/About')\r\n            this.props.history.push('/Cabinet/About');\r\n    };\r\n\r\n    add = (e) => {\r\n        eventStream.emit('EventChangeWorkMode',{action: 'newProject'});\r\n    };\r\n\r\n    render(){\r\n        return (\r\n            <header>\r\n                <div className = 'container'>\r\n                    <div className = 'flex-row'>\r\n                            <div className = 'header__CabinetInfo'>\r\n                                <Icon path = {iconPath} />\r\n                                <NavLink to = '/Cabinet'><h3>{this.state.title}</h3></NavLink>\r\n                            </div>\r\n                            {this.props.location.pathname === '/Cabinet' ?\r\n                                <div onClick = {this.add} className = 'header__newProject__AddButton'>\r\n                                    <Icon path = '/img/plus.png' />\r\n                                </div>\r\n                                : null\r\n                            }\r\n                                <div  className = 'Navigator'>\r\n                                    <Icon onClick = {this.redirect} title = 'about' path = '/img/about_logo.svg' />\r\n                                    <Icon onClick = {this.logOut} title = 'logOut' path = '/img/logOut.svg' />\r\n                                </div>\r\n                    </div>\r\n               </div>\r\n            </header>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect()(withRouter(Header));","import React,{Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport eventStream from '../../EventEmitter.js';\r\n\r\nimport './modal.scss';\r\n\r\nclass ModalWindow extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        mode: PropTypes.string\r\n    }\r\n\r\n    state = {\r\n        workMode: this.props.workMode,\r\n\r\n        newProject: {\r\n            validateName: false,\r\n            validateType: false,\r\n            disabled: true,\r\n            name: '',\r\n            type: 'empty'\r\n        },\r\n        warning: {\r\n            lengthMax: 'Max length: 20 symbols',\r\n            lengthMin: 'Min length: 3 symbol',\r\n            type: 'Select type of webpage',\r\n        }\r\n    }\r\n\r\n    inputSelect = null;\r\n\r\n    disabledButton = (action) => {\r\n\r\n    }\r\n\r\n    addNewProject = (event) => {\r\n        let mode = this.state[this.state.workMode];\r\n        if (mode.validateType &&  mode.validateName) {\r\n            eventStream.emit('EventAddProject',\r\n            {\r\n                title: this.state[this.state.workMode].name,\r\n                type: this.state[this.state.workMode].type\r\n            });\r\n\r\n            eventStream.emit('EventChangeWorkMode',{action: 'default'});\r\n        }\r\n    }\r\n\r\n    selectOption = (event) => {\r\n\r\n        let inputs = {...this.state[this.state.workMode]};\r\n        inputs.type = event.target.value;\r\n        inputs.validateType = inputs.type !== 'empty';\r\n        inputs.disabled = inputs.validateType && inputs.validateName ? false : true;\r\n        this.setState({\r\n            ...this.state,\r\n            [this.state.workMode]: inputs\r\n        });\r\n    }\r\n\r\n    validateName = (event) => {\r\n\r\n        let inputs = {...this.state[this.state.workMode]};\r\n        inputs.name = event.target.value;\r\n        let lengthInput = inputs.name.length;\r\n        inputs.validateName = lengthInput > 0 && lengthInput < 20 ? true : false;\r\n        inputs.disabled = inputs.validateType && inputs.validateName ? false : true;\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            [this.state.workMode]: inputs\r\n        })\r\n    };\r\n\r\n    cancel = (event) => {\r\n        eventStream.emit('EventChangeWorkMode',{action: 'default'});\r\n    }\r\n\r\n    refSelect = (node) => this.inputSelect = node;\r\n\r\n    render(){\r\n\r\n        switch (this.state.workMode){\r\n\r\n            case 'newProject': {\r\n                return (\r\n                        <div className = 'Modal'>\r\n                            <h3>Create new Project</h3>\r\n                            {\r\n                                this.state[this.state.workMode].name.length <= 0 ?\r\n                                <span className = 'warning'>{this.state.warning.lengthMin}</span> : null\r\n                            }\r\n                            {\r\n                                this.state[this.state.workMode].name.length >= 20 ?\r\n                                <span className = 'warning'>{this.state.warning.lengthMax}</span> : null\r\n                            }\r\n                            <input\r\n                                className = {this.state[this.state.workMode].validateName ? 'ready' : 'wrong'}\r\n                                value = {this.state[this.state.workMode].name}\r\n                                onChange = {this.validateName}\r\n                                type = 'text'\r\n                                placeholder = \"Project name\"\r\n                            />\r\n                            {\r\n                                !this.state[this.state.workMode].validateType ?\r\n                                <span className = 'warning'>{this.state.warning.type}</span> : null\r\n                            }\r\n                            <select onChange = {this.selectOption} >\r\n                                <option value = 'empty'>--------</option>\r\n                                <option value = 'landing'>Landing</option>\r\n                                <option value = 'portfolio'>Portfolio</option>\r\n                            </select>\r\n                            <input \r\n                                onClick = {this.addNewProject}\r\n                                className = 'acceptButton'\r\n                                disabled = {this.state[this.state.workMode].disabled}\r\n                                type = 'button'\r\n                                value = 'Submit'\r\n                            />\r\n                            <input onClick = {this.cancel} type ='button' value = 'Cancel' />\r\n                        </div>\r\n                )\r\n            }\r\n            default: {\r\n                return (\r\n                    <Fragment></Fragment>\r\n                )\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default ModalWindow;","import firebase from '../../Firebase/Firebase';\r\nimport {createProjectAction, errorAction} from '../actions';\r\n\r\n\r\nconst middlewareCreateProject = (uid, list, title, type) => async dispatch => {\r\n    console.log('middlewareCreateProject');\r\n    let lastProject = [...list];\r\n    const lastIndex = lastProject.length  ? lastProject[lastProject.length-1].id + 1 : 0;\r\n    lastProject.push({\"id\": lastIndex, \"title\": title, \"type\": type, components: {}});\r\n\r\n    await firebase.db.collection(\"users\").doc(uid).update({\r\n        'projects': lastProject,\r\n    })\r\n    .then (() => dispatch(createProjectAction(lastProject)))\r\n    .catch(error => dispatch(errorAction(error.message)));\r\n};\r\n\r\nexport {\r\n    middlewareCreateProject\r\n}","import React, {useState} from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\n\r\nfunction Item(props) {\r\n    const [id] = useState(props.id);\r\n    const [name] = useState(props.name);\r\n    const [type] = useState(props.type);\r\n\r\n    const build = (event) => {\r\n        props.history.push(`/Cabinet/Build/${id}`);\r\n        event.stopPropagation();\r\n    };\r\n    return (\r\n        <div onClick = {build} className = 'item' data-id = {id}>\r\n            <p className = 'ProjectName'>{name}</p>\r\n            <p className = 'ProjectType'>{type}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(Item);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport {middlewareCreateProject} from '../../redux/middleware/createProjectMiddleware';\r\n\r\nimport './list.scss';\r\n\r\nimport Item from './Item';\r\nimport eventStream from '../../EventEmitter.js';\r\n\r\nclass List extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        children: PropTypes.shape({\r\n            projects: PropTypes.array.isRequired,\r\n           count: PropTypes.number.isRequired,\r\n        }),\r\n        list: PropTypes.array.isRequired,\r\n    }\r\n\r\n    state = {\r\n        redirect: false,\r\n    }\r\n\r\n    addNewProject = (item) => {\r\n        if (this.props.idUser) {\r\n            this.props.dispatch(middlewareCreateProject(this.props.idUser, this.props.list, item.title, item.type));\r\n        } else this.setState({...this.state, redirect: true});\r\n    }\r\n\r\n\r\n    makeList = (list) => {\r\n\r\n        return list.map (project => {\r\n\r\n            return(\r\n                <Item\r\n                    key = {project.id}\r\n                    id = {project.id}\r\n                    name = {project.title}\r\n                    type = {project.type}\r\n                />\r\n            )\r\n        });\r\n    }\r\n\r\n    render(){\r\n        if (this.state.redirect)\r\n            return <Redirect to = '/' />\r\n            else return (\r\n                    <div className = 'projectsList__list'>\r\n                        {this.makeList([...this.props.list])}\r\n                    </div>\r\n                )\r\n    }\r\n\r\n    componentWillMount = () =>\r\n        eventStream.on('EventAddProject',this.addNewProject);\r\n\r\n      componentWillUnmount = () =>\r\n        eventStream.off('EventAddProject',this.addNewProject);\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        idUser: state.cabinet.idUser,\r\n        list: [...state.cabinet.projects]\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(List);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nimport List from '../List/List.jsx';\r\n\r\nimport './ProjectsSection.scss';\r\n\r\nclass ProjectsSection extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        projects: PropTypes.array,\r\n    }\r\n\r\n    render(){\r\n        return (\r\n                <section className = 'projectsList'>\r\n                <div className = 'container'>\r\n                <div className = 'flex-column'>\r\n                        <div className = 'projectsList__about'>\r\n                            <h3>Your Projects</h3>\r\n                        </div>\r\n                        <List />\r\n                    </div>\r\n                </div>\r\n                </section>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default ProjectsSection;","import React,{Fragment} from 'react';\nimport PropTypes from 'prop-types';\nimport eventStream from '../../EventEmitter.js';\nimport {Redirect} from 'react-router-dom';\nimport withFirebase from '../../components/firebaseHOC';\n\nimport {middlewareLogOutUser} from '../../redux/middleware/loadUserMiddleware';\nimport Loader from '../../components/loading/Loader';\nimport {connect} from 'react-redux';\n\nimport Header from '../../components/header/Header';\nimport Modal from '../../components/modalWindow/ModalWindow';\nimport ProjectsSection from '../../components/ProjectsSection/ProjectsSection';\n\nimport './Cabinet.scss';\n\nconst title = require('../../config.json').title;\n\nclass Cabinet extends React.PureComponent {\n\n  static propTypes = {\n    firebase: PropTypes.object.isRequired\n  }\n\n  state = {\n    workMode: 'default',\n  }\n\n  logOut = (event) => {\n    this.props.dispatch(middlewareLogOutUser(this.props.idUser));\n  }\n\n  changeWorkMode = (event) => {\n    this.setState ({\n      ...this.state,\n      workMode: event.action,\n    });\n  }\n\n  render(){\n    if (this.props.active){\n      return (\n        <Fragment>\n          <Header title = {title} idUser = {this.props.idUser} />\n          {(this.state.workMode === 'newProject') ? <Modal workMode = {this.state.workMode} /> : null}\n            <ProjectsSection />\n        </Fragment>\n      )\n    } else if (!this.props.firebase.getCurrentUser()) return <Redirect to = '/' />\n    else return <Loader path = '/img/loading.gif' type = 'Cabinet' />\n    }\n\n\n  componentDidMount = () => {\n    eventStream.on('EventChangeWorkMode', this.changeWorkMode);\n  }\n\n  componentWillUnmount = () => {\n    eventStream.off('EventChangeWorkMode', this.changeWorkMode);\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    idUser: state.cabinet.idUser,\n    projects: [...state.cabinet.projects],\n    active: state.cabinet.active\n  }\n}\n\n\n\nexport default connect(mapStateToProps)(withFirebase(Cabinet));\n","import React, {Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nimport withFirebase from '../../components/firebaseHOC';\r\nimport Header from '../../components/header/Header';\r\n\r\nimport './about.scss';\r\n\r\nclass About extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        config: PropTypes.object.isRequired,\r\n        firebase: PropTypes.object.isRequired,\r\n    }\r\n\r\n    state = {\r\n        config: this.props.config\r\n    };\r\n\r\n    render(){\r\n        console.log('About render');\r\n        if (this.props.firebase.getCurrentUser()) {\r\n            const { config } = this.state;\r\n            return (\r\n                <Fragment>\r\n                    <Header title = {config.title} />\r\n                    <section className = 'About'>\r\n                        <div className = 'container'>\r\n                            <div className = 'col-12'>\r\n                                <div className = 'information'>\r\n                                <img alt = 'img' className = 'logoAbout' src = {process.env.PUBLIC_URL + '/img/about.jpg'}/>\r\n                                    <p className ='developer'><span>Developer:</span> {config.about.developer}</p>\r\n                                    <p className = 'year'><span>Year:</span> {config.about.year}</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </section>\r\n                </Fragment>\r\n            )\r\n        } else return <Redirect to = '/' />\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default withFirebase(About);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './instrumentsPanel.scss';\r\n\r\nclass InstrumentsPanel extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        id: PropTypes.number,\r\n        editComponent: PropTypes.object.isRequired\r\n    }\r\n\r\n    state = {\r\n        idProject: this.props.id,\r\n        acceptInstruments: this.props.editComponent.edit,\r\n    }\r\n\r\n    makePanelInstruments = (type) => {\r\n\r\n        return (\r\n            <div  className= 'instuments'>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    render(){\r\n        console.log(this.props);\r\n        return (\r\n            <div className = 'instumentsPanel'>\r\n                <h3>Instruments</h3>\r\n                {\r\n                    this.state.acceptInstruments ? \r\n                    <p className = 'titleComponent important'>{this.props.editComponent.name}</p>\r\n                    : null\r\n                }\r\n                {\r\n                    this.state.acceptInstruments ? this.makePanelInstruments() :\r\n                    <p className = 'warningInstruments'>Select elements for accses edit instruments</p>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n\r\n    componentDidUpdate = (oldProps, oldState) => {\r\n\r\n        if (oldProps.editComponent.edit !== this.props.editComponent.edit){\r\n            this.setState({\r\n                ...this.state,\r\n                acceptInstruments: this.props.editComponent.edit\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport default InstrumentsPanel;","import React, {Fragment, useState} from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst TitleHeader = styled.h1`\r\n    font-size: ${props => props.size};\r\n    color: ${props => props.textColor};\r\n    text-align: center;\r\n`;\r\n\r\nconst BackgroundHeader = styled.div`\r\n    width: 100%;\r\n    height: 95vh;\r\n    background-color: ${props => props.backgroundColor ? props.backgroundColor : null}\r\n    background-image: ${props => props.backgroundImage ? props.backgroundImage : null}\r\n`;\r\n\r\n\r\nconst Title = props => <TitleHeader textColor = {props.color} size = {props.size} >{props.title}</TitleHeader>\r\nconst Background = props => <BackgroundHeader backgroundColor = 'red' />\r\n\r\nexport {\r\n    Title, Background\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport {Title, Background} from '../buildComponents/header/components/headerComponents';\r\n\r\nimport eventStream from '../../EventEmitter';\r\n\r\nimport './buildMenu.scss';\r\n\r\nclass BuildMenu extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        component: PropTypes.object\r\n    }\r\n\r\n    state = {\r\n        component: {...this.props.component}\r\n    }\r\n\r\n    addText = event => {\r\n\r\n        let componentArrayWrapper = [];\r\n        componentArrayWrapper.push(<Title key = 'header' title = 'test' color = 'red' size = '150px' />);\r\n        eventStream.emit('EventBuildHeaderComponents',{target: 'Header', type: 'text', component: componentArrayWrapper});\r\n        event.stopPropagation();\r\n    }\r\n\r\n    addBackground = event => {\r\n\r\n        let componentArrayWrapper = [];\r\n        componentArrayWrapper.push(<Background key = 'bgHeader' color = 'red' />);\r\n        eventStream.emit('EventBuildHeaderComponents',{target: 'Header', type: 'background', component: componentArrayWrapper});\r\n\r\n        event.stopPropagation();\r\n    }\r\n\r\n    render(){\r\n\r\n        return (\r\n            <div className = 'ComponentsMenu'>\r\n                <button onClick = {this.addBackground} className = 'ImageTool CompoentnsMenu_button' ><span>Image</span></button>\r\n                <button onClick = {this.addText} className = 'TextTool CompoentnsMenu_button' ><span>Text</span></button>\r\n                <button \r\n                    disabled = {this.state.component.name !== 'Header' ? false : true}\r\n                    className = 'ButtonTool CompoentnsMenu_button' >\r\n                    <span>Button</span>\r\n                </button>\r\n                <button className = 'VideoTool CompoentnsMenu_button' ><span>Video</span></button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default BuildMenu;","import React, {Fragment} from 'react';\r\nimport eventEmitter from '../../../EventEmitter';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Icon from '../../Icon/icon';\r\nimport BuildMenu from '../../componentsBuildMenu/BuildMenu';\r\nimport './headerBuild.scss';\r\n\r\nclass HeaderBuild extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        id: PropTypes.number.isRequired,\r\n    }\r\n\r\n    state = {\r\n        idProject: this.props.id,\r\n        viewComponentMenu: false,\r\n        component: {...this.props.children}\r\n        }\r\n\r\n\r\n    changeMode = (event) => {\r\n        eventEmitter.emit('EventModeEdit', {...this.state})\r\n    }\r\n\r\n    componentMenu = (event) => {\r\n        this.setState({viewComponentMenu: this.state.viewComponentMenu ? false : true})\r\n    }\r\n\r\n    startMode = () => {\r\n        return (\r\n            <Fragment>\r\n            { this.props.menuActive ?\r\n                <div className = 'ControllersEditComponent'>\r\n                    <Icon\r\n                        onClick = {this.componentMenu}\r\n                        className = 'addButton'\r\n                        path = '/img/addButton.png'\r\n                    />\r\n                    {this.state.viewComponentMenu ? <BuildMenu component = {{...this.state.component}} /> : null}\r\n                </div>\r\n                : null\r\n            }\r\n            </Fragment>\r\n        )\r\n    }\r\n\r\n    render() {\r\n\r\n        console.log('headerBuild');\r\n        console.log(this.props.children);\r\n        return (\r\n            <Fragment>\r\n                <Fragment>\r\n                {  this.props.children.build.type === 'background' ?\r\n                    this.props.children.build.component : null\r\n                }\r\n                </Fragment>\r\n                <Fragment>\r\n                <div onClick = {this.changeMode} className = 'Header'>\r\n                    <h2 className = 'titleCompoentBuild'>Header</h2>\r\n                    {  this.props.children.build.component && this.props.children.build.type === 'text'  ?\r\n                        this.props.children.build.component : null\r\n                    }\r\n                    {!this.props.editStart ? <p className = 'warningEdit'>Click for start edit</p> : null}\r\n                    {!this.state.readyBuild ? this.startMode() : null}\r\n                </div>\r\n                </Fragment>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\nexport default HeaderBuild;","import React,{Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Redirect} from 'react-router-dom';\r\nimport eventEmitter from '../../EventEmitter';\r\n\r\nimport withFirebase from '../../components/firebaseHOC';\r\nimport {connect} from 'react-redux';\r\n\r\nimport Loader from '../../components/loading/Loader';\r\nimport Header from '../../components/header/Header';\r\nimport InstrumentsPanel from '../../components/instrumentsPanel/InstrumentsPanel';\r\n\r\nimport HeaderBuild from '../../components/buildComponents/header/headerBuild';\r\n\r\nimport './build.scss';\r\n\r\n\r\nclass Build extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        param: PropTypes.string,\r\n        match: PropTypes.shape({\r\n            params: PropTypes.shape({\r\n                param: PropTypes.string.isRequired\r\n            }).isRequired\r\n        }).isRequired\r\n    }\r\n\r\n    state = {\r\n            idProject: parseInt(this.props.match.params.param),\r\n            typeProject: null,\r\n            editComponent: {name: null, build: {}, edit: false},\r\n            menuActive: false,\r\n        }\r\n\r\n    workModeEdit = (event) => {\r\n        console.log('workMode');\r\n        this.setState({\r\n            ...this.state,\r\n            idProject: event.idProject,\r\n            editComponent: {...event.component},\r\n            menuActive: true,\r\n            editStart: true\r\n        });\r\n\r\n    }\r\n\r\n    addHeaderComponent = (itemEvent) => {\r\n        this.setState({\r\n            ...this.state,\r\n            editComponent: {...this.state.editComponent,\r\n                build: {target: itemEvent.target, type: itemEvent.type, component: [...itemEvent.component]},\r\n            },\r\n            menuActive: false,\r\n        });\r\n    };\r\n\r\n\r\n    render(){\r\n        console.log('Build');\r\n        console.log(this.state);\r\n        if (this.props.active){\r\n            return (\r\n                <Fragment>\r\n                    <Header title = \"Constructor\"  />\r\n                    { this.state.editComponent.edit ?\r\n                        <InstrumentsPanel\r\n                            editComponent =  {{...this.state.editComponent, name: 'Header'}}\r\n                            id = {this.state.idProject}\r\n                        />\r\n                        : null\r\n                    }\r\n                    <HeaderBuild\r\n                            editStart = {this.state.editStart}\r\n                            menuActive = {this.state.menuActive}\r\n                            id = {this.state.idProject}\r\n                    >\r\n                        {{...this.state.editComponent, name: 'Header'}}\r\n                    </HeaderBuild>\r\n                </Fragment>\r\n            )\r\n        } else if (!this.props.firebase.getCurrentUser()) return <Redirect to = '/' />\r\n        else return <Loader path = '/img/loading.gif' type = 'build' />\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        eventEmitter.on('EventBuildHeaderComponents', this.addHeaderComponent);\r\n        eventEmitter.on('EventModeEdit', this.workModeEdit);\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        eventEmitter.off('EventBuildHeaderComponents', this.addHeaderComponent);\r\n        eventEmitter.off('EventModeEdit', this.workModeEdit);\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n\r\n    return {\r\n        ...state.builder,\r\n        active: state.cabinet.active,\r\n        idUser: state.cabinet.idUser,\r\n        currentEditable: {}\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(withFirebase(Build));","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {BrowserRouter, Route, Switch} from 'react-router-dom';\r\n\r\nimport {middlewareLoadUserData} from './redux/middleware/loadUserMiddleware';\r\nimport {connect} from 'react-redux';\r\nimport withFirebase from './components/firebaseHOC';\r\nimport Loader from './components/loading/Loader';\r\n\r\nimport Index from './Pages/Index/Index';\r\nimport Cabinet from './Pages/Cabinet/Cabinet';\r\nimport About from './Pages/About/About';\r\nimport Build from './Pages/Build/Build';\r\n\r\nclass App extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        config: PropTypes.object.isRequired,\r\n        firebase: PropTypes.object.isRequired,\r\n    }\r\n\r\n    state = {\r\n        firebase: this.props.firebase,\r\n        firebaseLoadState: false,\r\n    }\r\n\r\n    componentDidMount(){\r\n\r\n        this.props.firebase.auth.onAuthStateChanged((user) => {\r\n\r\n            if (!this.state.firebaseLoadState){\r\n                if (user) this.props.dispatch(middlewareLoadUserData(user.uid));\r\n                this.setState({firebaseLoadState: true});\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    render(){\r\n        if (this.state.firebaseLoadState){\r\n        return (\r\n            <BrowserRouter>\r\n                    <Switch>\r\n                        <Route\r\n                            path = '/' exact\r\n                            render = {(props) => <Index {...props} />}\r\n                        />\r\n                        <Route path = '/Cabinet/' exact component = {Cabinet}/>\r\n                        <Route\r\n                            path = '/Cabinet/About'\r\n                            render = {(props) => <About {...props} config = {this.props.config} />}\r\n                        />\r\n                        <Route path = '/Cabinet/Build/:param' component = {Build}/>\r\n                    </Switch>\r\n            </BrowserRouter>\r\n        )\r\n        } else return <Loader path = '/img/loading.gif' type = 'application' />\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n      active: state.cabinet.active\r\n    }\r\n  }\r\n\r\nexport default connect(mapStateToProps)(withFirebase(App));","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport {Provider} from 'react-redux';\nimport store from './redux/store';\nimport App from './App.jsx';\nimport 'normalize.css';\n\nconst config = require('./config.json');\n\n\nReactDOM.render(\n    <Provider store = {store}>\n        <App config = {config} />\n    </Provider>,\n        document.getElementById('root')\n);\n\n"],"sourceRoot":""}