{"version":3,"sources":["redux/actions.js","redux/reducerBuilder.js","redux/reducerCabinet.js","redux/reducers.js","redux/store.js","Firebase/firebaseConfig.js","Firebase/Firebase.js","redux/middleware/loadUserMiddleware.js","components/firebaseHOC.jsx","components/loading/Loader.jsx","EventEmitter.js","components/Registration/Registration.jsx","Pages/Index/Index.jsx","redux/middleware/middlewareDelete.js","components/Icon/icon.jsx","components/header/Header.jsx","components/imageViewer/imageItem.jsx","components/modalWindow/ModalWindow.jsx","redux/middleware/createProjectMiddleware.js","components/List/Item.jsx","components/List/List.jsx","components/ProjectsSection/ProjectsSection.jsx","Pages/Cabinet/Cabinet.jsx","Pages/About/About.jsx","components/imageViewer/imageViewer.jsx","components/instrumentsPanel/InstrumentsPanel.jsx","components/buildComponents/components/Background.jsx","components/buildComponents/components/Text.jsx","components/componentsBuildMenu/BuildMenu.jsx","components/controllers/controllers.jsx","components/buildComponents/header/headerBuild.jsx","Pages/Build/Build.jsx","App.jsx","index.js"],"names":["loadUserAction","state","type","active","idUser","uid","error","projects","Object","toConsumableArray","errorAction","initialState","nameEditComponent","settingsEditComponent","dateConnect","Date","now","toLocaleString","replace","split","combineReducers","builder","arguments","length","undefined","action","objectSpread","currentEditable","cabinet","middleware","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","thunk","store","createStore","firebaseConfig","apiKey","authDomain","process","REACT_APP_AUTH_DOMAIN","databaseURL","REACT_APP_DATABASE_URL","projectId","storageBucket","REACT_APP_STORAGE_BUCKET","messagingSenderId","REACT_APP_MESSAGING_SENDER_ID","appId","REACT_APP_APPID","interfaceFirebase","require","Firebase","classCallCheck","this","firebase","auth","db","rules","setPersistence","Auth","Persistence","email","password","signInWithEmailAndPassword","createUserWithEmailAndPassword","signOut","currentUser","saveSession","middlewareLogin","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","dispatch","wrap","_context","prev","next","login","then","response","collection","doc","user","get","docUser","data","id","catch","console","message","stop","_x","apply","middlewareLogOutUser","_ref3","_callee3","_context3","_x3","withFirebase","Component","props","react_default","createElement","assign","Loader","_useState","useState","path","slicedToArray","className","src","alt","stream","EventEmitter","_this","emailRef","passwordRef","setRefEmail","node","setRefPassword","createUser","event","value","registration","set","eventEmitter","emit","setState","autoComplete","ref","onClick","React","PureComponent","Index","title","registrationActive","regStatus","wrongEnter","statusRegistration","additionalUserInfo","isNewUser","log","showBox","authTo","emailImput","passwordImput","componentDidMount","e","on","componentWillUnmount","off","react_router","to","currentSelected","components_Registration_Registration","connect","middlewareDelete","item","filter","itemdb","update","Icon","_useState3","_useState5","draggable","iconPath","CabinetIcon","Header","logOut","redirect","location","pathname","history","push","add","icon","react_router_dom","withRouter","ImageItem","urls","regular","urlRegular","full","urlFull","_useState7","isFull","selected","url","ModalWindow","workMode","images","selectedItem","showUrl","imageBoxView","newProject","validateName","validateType","disabled","name","imageMenuActive","warning","lengthMax","lengthMin","inputSearch","inputSelect","searchBackground","search","isFetch","concat","ok","json","Error","results","showMenuImage","showImage","target","stopPropagation","setSelectedImage","makeImageResultBox","items","map","i","imageItem","key","addNewProject","mode","selectOption","inputs","defineProperty","lengthInput","cancel","refSelect","refSearch","onChange","placeholder","react","middlewareCreateProject","list","lastProject","lastIndex","components","data-id","List","makeList","project","List_Item","componentWillMount","ProjectsSection","components_List_List","Cabinet","deletItem","getCurrentUser","changeWorkMode","header_Header","modalWindow_ModalWindow","components_ProjectsSection_ProjectsSection","config","about","developer","year","ImageViewer","InstrumentsPanel","instrumentPanel","sizeTextValue","colorPickerAvtive","updateSizeText","resetAll","closePanel","close","setSize","size","setContent","contentValue","content","setColor","handleChangeComplete","searchImage","makePanelInstruments","min","max","lib","onChangeComplete","maxLength","defaultValue","componentDidUpdate","oldProps","oldState","instrumentActive","Background","styled","div","_templateObject","backgroundColor","backgroundImage","BackgroundComponent","background","_useState2","setBgColor","_useState4","setImage","changeColor","rgb","colorRGB","r","g","b","setBackgroundImage","useEffect","children","Title","h1","attrs","style","display","shadowDisplay","left","coordX","top","coordY","Text_templateObject","textColor","TitleComponent","color","colorText","setColorText","sizeText","setSizeText","_useState6","contentText","setText","_useState8","shiftCoords","setShiftCoords","_useState9","_useState10","dragNdrop","setDragNdrop","changeColorText","colorHash","changeSizeText","eventSize","changeContentText","eventContent","moveText","pageX","x","pageY","y","onMouseDown","rect","getBoundingClientRect","width","height","onDrag","onDragEnd","onWheel","shiftKey","deltaY","counter","BuildMenu","component","addText","componentArrayWrapper","Text","addBackground","components_Background","ControllersBox","controllers_templateObject","Controllers","viewComponentMenu","shiftX","shiftY","coordsX","coordsY","componentMenu","saveCoords","controlBox","drag","refControll","menuActive","componentsBuildMenu_BuildMenu","HeaderBuild","idProject","changeMode","editStart","currentTarget","build","readyBuild","controllers","mainWidth","mainBoxWidth","mainHeight","mainBoxHeight","Build","parseInt","match","params","param","typeProject","editComponent","edit","changeEdit","modalSearch","modalImageViewer","image","modalSearchOn","imageViewerSwitch","workModeEdit","itemEvent","openInstrument","addHeaderComponent","imageViewer_imageViewer","instrumentsPanel_InstrumentsPanel","header_headerBuild","polyfill","App","firebaseLoadState","_this2","onAuthStateChanged","_ref2","_callee2","_context2","_x2","_this3","basename","exact","render","Pages_Index_Index","Pages_About_About","ReactDOM","es","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.b3497886.chunk.js","sourcesContent":["const CREATE_PROJECT = 'CREATE_PROJECT';\r\nconst LOAD_CURRENT = 'LOAD_CURRENT';\r\nconst LOG_OUT_CABINET = 'LOG_OUT_CABINET';\r\nconst LOAD_USER_CABINET = 'LOAD_USER_CABINET';\r\nconst ERROR_CABINET = 'ERROR_CABINET';\r\n\r\n\r\nconst createProjectAction = (state) => {\r\n    return {\r\n        type: CREATE_PROJECT,\r\n        projects: [...state],\r\n    }\r\n}\r\n\r\nconst loadCurrentProjectAction = (state) => {\r\n    return {\r\n        type: LOAD_CURRENT,\r\n        currentEditable: state,\r\n    }\r\n\r\n}\r\n\r\nconst loadUserAction = (state) => {\r\n    return {\r\n        type: LOAD_USER_CABINET,\r\n        active: true,\r\n        idUser: state.uid,\r\n        error: '',\r\n        projects: [...state.projects]\r\n    }\r\n}\r\n\r\nconst logOutAction = (state) => {\r\n\r\n    return {\r\n        type: LOG_OUT_CABINET,\r\n        active: false,\r\n        idUser: null,\r\n        error: '',\r\n        projects: []\r\n    }\r\n}\r\n\r\nconst errorAction = (state) => {\r\n    return {\r\n        type: ERROR_CABINET,\r\n        error: state\r\n    }\r\n}\r\n\r\nexport {\r\n    CREATE_PROJECT, createProjectAction, /* cabinet */\r\n    LOAD_USER_CABINET, loadUserAction, /* cabinet */\r\n    LOG_OUT_CABINET, logOutAction, /* cabinet */\r\n    LOAD_CURRENT, loadCurrentProjectAction, /* builder */\r\n    ERROR_CABINET, errorAction, /* both */\r\n}","import {LOAD_CURRENT} from './actions';\r\n\r\nconst initialState = {\r\n    nameEditComponent: null,\r\n    settingsEditComponent: {},\r\n};\r\nexport default (state = initialState, action) => {\r\n    switch (action.type){\r\n\r\n        case LOAD_CURRENT: {\r\n            return {\r\n                ...state,\r\n                currentEditable: {...action.currentEditable}\r\n            }\r\n        }\r\n        default: return state;\r\n    }\r\n};","import {LOAD_USER_CABINET, LOG_OUT_CABINET, ERROR_CABINET, CREATE_PROJECT} from './actions';\r\n\r\nconst initialState = {\r\n    active: false,\r\n    idUser: null,\r\n    projects: [],\r\n    error: null,\r\n    dateConnect: new Date(Date.now()).toLocaleString().replace(/\\s/ig,'').split(','),\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n\r\n    switch(action.type) {\r\n        case LOAD_USER_CABINET: {\r\n\r\n            return {\r\n                ...state,\r\n                active: action.active,\r\n                idUser: action.idUser,\r\n                projects: action.projects\r\n            }\r\n        }\r\n\r\n        case CREATE_PROJECT: {\r\n            return {\r\n                ...state,\r\n                projects: action.projects\r\n            }\r\n        }\r\n\r\n        case LOG_OUT_CABINET: {\r\n            return {\r\n                ...state,\r\n                active: false,\r\n                idUser: null,\r\n                projects: []\r\n            }\r\n        }\r\n\r\n        case ERROR_CABINET: {\r\n            return {\r\n                ...state,\r\n                error: action.error\r\n            }\r\n        }\r\n        default: return state;\r\n    }\r\n}\r\n\r\n","import {combineReducers} from 'redux';\r\nimport reducerBuilder from './reducerBuilder';\r\nimport reducerCabinet from './reducerCabinet';\r\n\r\nexport default combineReducers({\r\n    builder: reducerBuilder,\r\n    cabinet: reducerCabinet,\r\n});","import {createStore, applyMiddleware, compose} from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport combineReducers from './reducers';\r\n\r\nconst composeEnhancers =\r\n  typeof window === 'object' &&\r\n  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?\r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\r\n    }) : compose;\r\n\r\nconst middleware = composeEnhancers(\r\n  applyMiddleware(thunk)\r\n);\r\nconst store = createStore(combineReducers, middleware);\r\n\r\n\r\nexport default store;","// setings in root folder / firebase.env\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyBrLv9RyGWXCeEETRqBbBo3EVOcibmnJwU\",\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n    databaseURL: process.env.REACT_APP_DATABASE_URL,\r\n    projectId: \"constructor-acb61\",\r\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n    appId: process.env.REACT_APP_APPID\r\n};\r\n\r\nexport {firebaseConfig}","import * as firebase from 'firebase/app';\r\nimport {firebaseConfig} from './firebaseConfig';\r\n\r\nconst auth = require('firebase/auth');\r\nconst firestore = require('firebase/firestore');\r\n\r\nclass Firebase {\r\n\r\n        constructor(){\r\n                firebase.initializeApp(firebaseConfig);\r\n                this.auth = firebase.auth();\r\n                this.db = firebase.firestore();\r\n        }\r\n\r\n        saveSession(rules){\r\n                return this.auth.setPersistence(firebase.auth.Auth.Persistence[rules]);\r\n        }\r\n\r\n        login(email, password){\r\n                return this.auth.signInWithEmailAndPassword(email, password);\r\n        }\r\n\r\n        registration(email, password){\r\n                return this.auth.createUserWithEmailAndPassword(email, password)\r\n        }\r\n\r\n        signOut(){\r\n                return this.auth.signOut()\r\n        }\r\n\r\n        getCurrentUser() {\r\n                return this.auth.currentUser\r\n        }\r\n}\r\n\r\nlet interfaceFirebase = new Firebase();\r\ninterfaceFirebase.saveSession('SESSION');\r\n\r\nexport default interfaceFirebase;\r\n\r\nexport { auth, firestore };\r\n\r\n","import firebase from '../../Firebase/Firebase';\r\nimport {loadUserAction, errorAction, logOutAction} from '../actions';\r\n\r\nconst middlewareLogin = (email,password) => async dispatch => {\r\n        await firebase.login(email,password)\r\n        .then(response =>{\r\n            firebase.db.collection(\"users\").doc(response.user.uid).get()\r\n            .then(docUser => {\r\n                let user = docUser.data();\r\n                dispatch(loadUserAction({uid: docUser.id, projects: [...user.projects]}))\r\n            })\r\n        })\r\n        .catch((error) => {\r\n            console.error(error.message);\r\n            dispatch(errorAction(error.message));\r\n        });\r\n    }\r\n\r\nconst middlewareLoadUserData = (uid) => async dispatch => {\r\n        await firebase.db.collection(\"users\").doc(uid).get()\r\n        .then(docUser => {\r\n            let user = docUser.data();\r\n            dispatch(loadUserAction({uid: uid, projects: [...user.projects]}))\r\n        })\r\n        .catch((error) => {\r\n            console.error(error.message);\r\n            dispatch(errorAction(error.message));\r\n        });\r\n    }\r\n\r\nconst middlewareLogOutUser = (uid) => async dispatch => {\r\n    await firebase.signOut()\r\n    .then (response => {\r\n        dispatch(logOutAction());\r\n    })\r\n    .catch((error) => {\r\n        console.error(error.message);\r\n        dispatch(errorAction(error.message));\r\n    });\r\n}\r\nexport {\r\n    middlewareLogin,middlewareLoadUserData, middlewareLogOutUser\r\n}","import React from 'react';\r\nimport firebase from '../Firebase/Firebase';\r\n\r\nconst withFirebase = Component => props => (\r\n    <Component firebase = {firebase} {...props} />\r\n);\r\n\r\nexport default withFirebase;","import React,{useState} from 'react';\r\n\r\nexport default function(props) {\r\n    const [path] = useState(props.path);\r\n    return (\r\n            <div className = 'loaderBox'>\r\n                <img className = 'loader' src = {path} alt = 'loader'></img> \r\n                <p>Loading {props.type}</p>\r\n            </div>\r\n    )\r\n}","import {EventEmitter} from 'events';\r\nconst stream = new EventEmitter();\r\nexport default stream;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport eventEmitter from '../../EventEmitter';\r\nimport './registration.scss';\r\n\r\nimport withFirebase from '../../components/firebaseHOC';\r\n\r\n\r\nclass Registration extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        firebase: PropTypes.object.isRequired,\r\n    }\r\n\r\n    state = {\r\n        firebase: this.props.firebase,\r\n        error: null,\r\n    }\r\n\r\n    emailRef = null;\r\n    passwordRef = null;\r\n\r\n    setRefEmail = (node) => this.emailRef = node;\r\n    setRefPassword = (node) => this.passwordRef = node;\r\n\r\n    createUser = (event) => {\r\n\r\n        const email = this.emailRef.value;\r\n        const password = this.passwordRef.value;\r\n        const { firebase } = this.props;\r\n\r\n        firebase.registration(email, password)\r\n        .then(response => {\r\n            firebase.db.collection(\"users\").doc(response.user.uid).set({\r\n                'projects': [],\r\n                'email': email,\r\n            }).then(() => eventEmitter.emit('EventRegistrationCorrect', response))\r\n        })\r\n        .catch((error) => {\r\n        console.error(error.message);\r\n        this.setState({error: error.message});\r\n        });\r\n    };\r\n\r\n    render(){\r\n        let  { error } = this.state;\r\n\r\n        return (\r\n            <div className = 'RegistrationBox'>\r\n                <div  className = 'RegistrationForm'>\r\n                    <h3>Registration</h3>\r\n                    <form autoComplete = 'off' className = 'RegForm'>\r\n                        { error ?\r\n                            <p className = 'error'>{error}</p>\r\n                            : null\r\n                        }\r\n                        <span>E-mail</span>\r\n                        <input ref = {this.setRefEmail} type = 'text' />\r\n                        <span>Password</span>\r\n                        <input  autoComplete = \"off\" ref = {this.setRefPassword} type = 'password' />\r\n                        <input onClick = {this.createUser}\r\n                                className = 'loginButton'\r\n                                type = 'button'\r\n                                value = 'registration'\r\n                        />\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\nexport default withFirebase(Registration);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport eventEmitter from '../../EventEmitter';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nimport {middlewareLogin} from '../../redux/middleware/loadUserMiddleware';\r\n\r\nimport Loader from '../../components/loading/Loader';\r\nimport Registration from '../../components/Registration/Registration';\r\n\r\nimport {connect} from 'react-redux';\r\n\r\nimport './index.scss';\r\n\r\nclass Index extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        config: PropTypes.object,\r\n    }\r\n\r\n    state = {\r\n        title:  \"Constructor\",\r\n        registrationActive: false,\r\n        regStatus: false,\r\n        wrongEnter: false,\r\n        error: ''\r\n    }\r\n\r\n    statusRegistration = (event) => {\r\n        event.additionalUserInfo.isNewUser ?\r\n        this.setState({...this.state,\r\n                        regStatus: true,\r\n                        registrationActive: false,\r\n                        error: 'Account create!'\r\n                    })\r\n        : console.log('error registration');\r\n    }\r\n\r\n    showBox = (event) => {\r\n        this.setState ({\r\n            ...this.state,\r\n        registrationActive: this.state.registrationActive ? false : true\r\n        })\r\n    }\r\n\r\n    authTo = (event) => {\r\n            this.props.dispatch(middlewareLogin(this.emailImput.value, this.passwordImput.value));\r\n}\r\n    emailImput = null;\r\n    passwordImput = null;\r\n    emailRef = (node) => this.emailImput = node;\r\n    passwordRef = (node) => this.passwordImput = node;\r\n\r\n    render(){\r\n\r\n        if (this.props.active) return <Redirect to = '/Cabinet' />\r\n        else if (!this.props.active) {\r\n            let currentSelected = this.state.registrationActive;\r\n            return (\r\n                <div className = 'LoginPage flex-column'>\r\n                        <h1>{this.state.title}</h1>\r\n                        <div className = 'LoginBox'>\r\n                            <div className = 'LoginForm'>\r\n                                <h3>Connect form</h3>\r\n                                {\r\n                                    this.props.wrongEnter || this.state.regStatus ?\r\n                                    <p className = 'error'>{this.props.wrongEnter}</p>\r\n                                    : null\r\n                                }\r\n                                <p>E-mail</p>\r\n                                <input ref = {this.emailRef} type = 'text' />\r\n                                <p>Password</p>\r\n                                <input ref = {this.passwordRef} type = 'password' />\r\n                                <input \r\n                                    onClick = {this.authTo} \r\n                                    className = 'loginButton'\r\n                                    type = 'button'\r\n                                    value = 'enter' />\r\n                                <input\r\n                                    onClick = {this.showBox}\r\n                                    className = {currentSelected ? `loginButton selected`\r\n                                        : 'loginButton'}\r\n                                    type = 'button'\r\n                                    value = 'registration'\r\n                                    />\r\n                            </div>\r\n                        </div>\r\n                        {\r\n                            this.state.registrationActive ?\r\n                            <Registration auth = {this.props.auth} />\r\n                            : null\r\n                        }\r\n                </div>\r\n            )\r\n        } else  return <Loader path = '/img/loading.gif' type = 'session' />\r\n    }\r\n\r\n    componentDidMount = (e) => {\r\n        eventEmitter.on('EventRegistrationCorrect', this.statusRegistration);\r\n    }\r\n    componentWillUnmount = (e) => {\r\n        eventEmitter.off('EventRegistrationCorrect', this.statusRegistration);\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {active: state.cabinet.active, wrongEnter: state.cabinet.error}\r\n  }\r\n\r\nexport default connect(mapStateToProps)(Index);","import firebase from '../../Firebase/Firebase';\r\nimport {errorAction, loadUserAction} from '../actions';\r\n\r\nconst middlewareDelete = item => async dispatch => {\r\n    console.log('middleware');\r\n    await firebase.db.collection('users').doc(item.uid).get()\r\n    .then(user => user.data())\r\n    .then(data => {\r\n        return {id: data.id, projects: data.projects.filter(itemdb => itemdb.id !== item.id)};\r\n    })\r\n    .then(data => {\r\n        firebase.db.collection(\"users\").doc(item.uid).update({\r\n            \"projects\": data.projects\r\n        })\r\n        .then(response => {\r\n            dispatch(loadUserAction({uid: data.id, projects: data.projects}));\r\n        });\r\n    })\r\n    .catch((error) => {\r\n        console.error(error.message);\r\n        dispatch(errorAction(error.message));\r\n    });\r\n}\r\n\r\nexport default middlewareDelete;\r\n","import React, {useState} from 'react';\r\n\r\n\r\nfunction Icon(props){\r\n    const [path] = useState(props.path);\r\n    const [className] = useState(props.className ? props.className : null);\r\n    const [draggable] = useState(props.draggable ? true : false);\r\n\r\n    return (\r\n    <img\r\n        draggable = {draggable}\r\n        onClick = {props.onClick ? props.onClick : null}\r\n        className = {className}\r\n        title = {props.title ? props.title : null}\r\n        src = {path} alt = 'icon'>\r\n    </img>\r\n    )\r\n}\r\n\r\nexport default Icon;","import React from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport './header.scss';\r\n\r\nimport {middlewareLogOutUser} from '../../redux/middleware/loadUserMiddleware';\r\nimport {connect} from 'react-redux';\r\nimport {withRouter, NavLink} from 'react-router-dom';\r\n\r\nimport eventEmitter from '../../EventEmitter.js';\r\nimport Icon from '../Icon/icon';\r\n\r\n\r\nconst iconPath = require('../../config.json').CabinetIcon;\r\n\r\nclass Header extends React.Component {\r\n\r\n    static propTypes = {\r\n        title: PropTypes.string.isRequired,\r\n    };\r\n\r\n    state = {\r\n        title: this.props.title,\r\n    };\r\n\r\n    logOut = (event) => {\r\n        this.props.dispatch(middlewareLogOutUser(this.props.idUser));\r\n    };\r\n\r\n    redirect = (e) => {\r\n        if (this.props.location.pathname !== '/Cabinet/About')\r\n            this.props.history.push('/Cabinet/About');\r\n    };\r\n\r\n    add = (e) => {\r\n        eventEmitter.emit('EventChangeWorkMode',{action: 'newProject'});\r\n    };\r\n\r\n    render(){\r\n        return (\r\n            <header>\r\n                <div className = 'container'>\r\n                    <div className = 'flex-row'>\r\n                            <div className = 'header__CabinetInfo'>\r\n                                <Icon path = {iconPath} />\r\n                                <NavLink to = '/Cabinet'><h3>{this.state.title}</h3></NavLink>\r\n                            </div>\r\n                            {this.props.location.pathname === '/Cabinet' ?\r\n                                <div onClick = {this.add} className = 'header__newProject__AddButton'>\r\n                                    <Icon path = '/img/plus.png' />\r\n                                </div>\r\n                                : null\r\n                            }\r\n                                <div  className = 'Navigator'>\r\n                                    <Icon onClick = {this.redirect} title = 'about' path = '/img/about_logo.svg' />\r\n                                    <Icon onClick = {this.logOut} title = 'logOut' path = '/img/logOut.svg' />\r\n                                </div>\r\n                    </div>\r\n               </div>\r\n            </header>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect()(withRouter(Header));","import React, {useState} from 'react';\r\nimport eventEmitter from '../../EventEmitter';\r\n\r\nfunction ImageItem (props){\r\n\r\n    const [id] = useState(props.id);\r\n    const [urlRegular] = useState(props.urls.regular);\r\n    const [urlFull] = useState(props.urls.full);\r\n    const [isFull] = useState(props.isFull);\r\n\r\n    const showImageMenu = event => {\r\n       eventEmitter.emit(\"EventShowMenuImage\", {id: id, url: urlRegular, urlFull: urlFull});\r\n    }\r\n\r\n\r\n    return (\r\n        <div className = {props.selected ? 'ItemBox selected' : 'ItemBox'}>\r\n            <img\r\n                onClick = {showImageMenu}\r\n                src = {isFull ? urlFull : urlRegular}\r\n                alt = 'item'\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ImageItem;","import React,{Fragment} from 'react';\r\nimport isFetch from 'isomorphic-fetch';\r\nimport PropTypes from 'prop-types';\r\nimport eventEmitter from '../../EventEmitter.js';\r\n\r\nimport ImageItem from '../imageViewer/imageItem';\r\nimport Icon from '../Icon/icon';\r\n\r\nimport './modal.scss';\r\n\r\nclass ModalWindow extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        mode: PropTypes.string\r\n    }\r\n\r\n    state = {\r\n        workMode: this.props.workMode,\r\n        images: {\r\n            selectedItem: null, \r\n            showUrl: null, \r\n            images: null,\r\n            urlFull: null,\r\n            imageBoxView: false, \r\n            error: ''\r\n        },\r\n        newProject: {\r\n            validateName: false,\r\n            validateType: false,\r\n            disabled: true,\r\n            name: '',\r\n            type: 'empty'\r\n        },\r\n        imageMenuActive: false,\r\n        warning: {\r\n            lengthMax: 'Max length: 20 symbols',\r\n            lengthMin: 'Min length: 4 symbol',\r\n            type: 'Select type of webpage',\r\n        }\r\n    }\r\n\r\n    inputSearch = null;\r\n    inputSelect = null;\r\n\r\n    searchBackground = event => {\r\n\r\n        const api = 'https://api.unsplash.com/search/photos/?page=1&per_page=40&query=';\r\n        const search = this.inputSearch.value;\r\n        const token = \"421b12ae729e1f6e4a0cac207496874099ab8a738378ec07a8e2598b11201802\";\r\n\r\n        isFetch(`${api + search}&client_id=${token}`)\r\n        .then(response => {\r\n            if (response.ok) return response.json();\r\n            else throw new Error('request invalid');\r\n        })\r\n        .then(response => {\r\n\r\n            let {results} = response;\r\n            if (results.length)\r\n            this.setState({\r\n                ...this.state,\r\n                images: {\r\n                    ...this.state.images,\r\n                    imageBoxView: true,\r\n                    error: '',\r\n                    images: [...results]\r\n                },\r\n            });\r\n            else throw new Error('Photos not found');\r\n        })\r\n        .catch(error => {\r\n            console.error(error.message);\r\n            this.setState({\r\n                ...this.state,\r\n                 images: {...this.state.images, error: error.message},\r\n                 imageBoxView: false,\r\n                });\r\n        });\r\n    }\r\n\r\n    showMenuImage = event => {\r\n        this.setState({\r\n            ...this.state, \r\n            imageMenuActive: true,\r\n            images: {\r\n                ...this.state.images,\r\n                selectedItem: event.id, \r\n                showUrl: event.url,\r\n                urlFull: event.urlFull\r\n\r\n            }\r\n        });\r\n    }\r\n\r\n    showImage = event => {\r\n\r\n        const {showUrl} = this.state.images;\r\n        // if (event.type === 'mouseenter')\r\n        eventEmitter.emit(\"EventImageView\", {action: true, target: showUrl ? showUrl : null});\r\n        // else  eventEmitter.emit(\"EventImageView\", {action: false, target: null});\r\n        event.stopPropagation();\r\n    }\r\n\r\n    setSelectedImage = event => {\r\n\r\n        eventEmitter.emit('EventSetBackgroundImage',{...this.state.images});\r\n    };\r\n\r\n    makeImageResultBox = (items) => {\r\n        if (!items) return null;\r\n\r\n        return items.map((item,i) =>{\r\n           return <ImageItem \r\n                key = {`item${i}`} \r\n                id = {i}\r\n                selected = {this.state.images.selectedItem === i ? true : false} \r\n                isFull = {false}\r\n                urls = {{...item.urls}} \r\n            />\r\n        });\r\n    }\r\n\r\n    addNewProject = (event) => {\r\n        let mode = this.state[this.state.workMode];\r\n        if (mode.validateType &&  mode.validateName) {\r\n            eventEmitter.emit('EventAddProject',\r\n            {\r\n                title: this.state[this.state.workMode].name,\r\n                type: this.state[this.state.workMode].type\r\n            });\r\n\r\n            eventEmitter.emit('EventChangeWorkMode',{action: 'default'});\r\n        }\r\n    }\r\n\r\n    selectOption = (event) => {\r\n\r\n        let inputs = {...this.state[this.state.workMode]};\r\n        inputs.type = event.target.value;\r\n        inputs.validateType = inputs.type !== 'empty';\r\n        inputs.disabled = inputs.validateType && inputs.validateName ? false : true;\r\n        this.setState({\r\n            ...this.state,\r\n            [this.state.workMode]: inputs\r\n        });\r\n    }\r\n\r\n    validateName = (event) => {\r\n\r\n        let inputs = {...this.state[this.state.workMode]};\r\n        inputs.name = event.target.value;\r\n        let lengthInput = inputs.name.length;\r\n        inputs.validateName = lengthInput >= 4 && lengthInput < 20 ? true : false;\r\n        inputs.disabled = inputs.validateType && inputs.validateName ? false : true;\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            [this.state.workMode]: inputs\r\n        })\r\n    };\r\n\r\n    cancel = (event) => {\r\n\r\n        if (this.state.workMode === 'Search')\r\n            eventEmitter.emit(\"EventModalSearchOn\");\r\n        else  eventEmitter.emit('EventChangeWorkMode',{action: 'default'});\r\n    }\r\n\r\n    refSelect = (node) => this.inputSelect = node;\r\n    refSearch = node => this.inputSearch = node;\r\n\r\n    render(){\r\n\r\n        switch (this.state.workMode){\r\n            case 'newProject':\r\n                return (\r\n                    <div className = 'Modal'>\r\n                        <h3>Create new Project</h3>\r\n                        { this.state[this.state.workMode].name.length <= 3 ?\r\n                            <span className = 'warning'>{this.state.warning.lengthMin}</span> : null\r\n                        }\r\n                        { this.state[this.state.workMode].name.length >= 20 ?\r\n                            <span className = 'warning'>{this.state.warning.lengthMax}</span> : null\r\n                        }\r\n                        <input\r\n                            className = {this.state[this.state.workMode].validateName ? 'ready' : 'wrong'}\r\n                            value = {this.state[this.state.workMode].name}\r\n                            onChange = {this.validateName}\r\n                            type = 'text'\r\n                            placeholder = \"Project name\"\r\n                        />\r\n                        { !this.state[this.state.workMode].validateType ?\r\n                            <span className = 'warning'>{this.state.warning.type}</span> : null\r\n                        }\r\n                        <select onChange = {this.selectOption} >\r\n                            <option value = 'empty'>--------</option>\r\n                            <option value = 'landing'>Landing</option>\r\n                            <option value = 'portfolio'>Portfolio</option>\r\n                        </select>\r\n                        <input \r\n                            onClick = {this.addNewProject}\r\n                            className = 'acceptButton'\r\n                            disabled = {this.state[this.state.workMode].disabled}\r\n                            type = 'button'\r\n                            value = 'Submit'\r\n                        />\r\n                            <input onClick = {this.cancel} type ='button' value = 'Cancel' />\r\n                    </div>\r\n                )\r\n            case 'Search':\r\n                return (\r\n                    <Fragment>\r\n                        <div className = 'Modal Modal-search'>\r\n                            <h3>Search background image</h3>\r\n                            { this.state.images.error ?\r\n                                <span className = 'error'>{this.state.images.error}</span> : null\r\n                            }\r\n                            <input ref = {this.refSearch} type = 'text' placeholder = \"Photo name\" />\r\n                            <input className = 'acceptButton' type = 'button' value = 'Search'\r\n                                onClick = {this.searchBackground}\r\n                            />\r\n                            <input onClick = {this.cancel} type ='button' value = 'Cancel' />\r\n                            {\r\n                                this.state.images.imageBoxView ?\r\n                                <div className = 'searchResultBox'>\r\n                                    {this.makeImageResultBox(this.state.images['images'])}\r\n                                </div>\r\n                                : null\r\n                            }\r\n                        </div>\r\n                        {  this.state.imageMenuActive ?\r\n                            <div className = 'ActionModalSearch'>\r\n                            <button onClick = {this.showImage} className = 'actionModalSearch__view'>\r\n                                <Icon path = '/img/view.png' />\r\n                            </button>\r\n                            <button onClick = {this.setSelectedImage} className = 'actionModalSearch__settings'>\r\n                                <Icon path = '/img/settings.png' />\r\n                            </button>\r\n                            </div>\r\n                            : null\r\n                        }\r\n                    </Fragment>\r\n                )\r\n            default: return <Fragment></Fragment>\r\n        }\r\n    }\r\n\r\n    componentDidMount = event => {\r\n        if (this.state.workMode === 'Search')\r\n            eventEmitter.on('EventShowMenuImage', this.showMenuImage);\r\n    }\r\n\r\n    componentWillUnmount = event => {\r\n        if (this.state.workMode === 'Search')\r\n            eventEmitter.off('EventShowMenuImage', this.showMenuImage);\r\n    }\r\n}\r\n\r\nexport default ModalWindow;\r\n\r\n","import firebase from '../../Firebase/Firebase';\r\nimport {createProjectAction, errorAction} from '../actions';\r\n\r\n\r\nconst middlewareCreateProject = (uid, list, title, type) => async dispatch => {\r\n    let lastProject = [...list];\r\n    const lastIndex = lastProject.length  ? lastProject[lastProject.length-1].id + 1 : 0;\r\n    lastProject.push({\"id\": lastIndex, \"title\": title, \"type\": type, components: {}});\r\n\r\n    await firebase.db.collection(\"users\").doc(uid).update({\r\n        'projects': lastProject,\r\n    })\r\n    .then (() => dispatch(createProjectAction(lastProject)))\r\n    .catch(error => {\r\n        console.error(error.message);\r\n        dispatch(errorAction(error.message));\r\n    })\r\n};\r\n\r\nexport {\r\n    middlewareCreateProject\r\n}","import React, {useState} from 'react';\r\nimport eventEmitter from '../../EventEmitter';\r\nimport {withRouter} from 'react-router-dom';\r\n\r\nfunction Item(props) {\r\n    const [id] = useState(props.id);\r\n    const [name] = useState(props.name);\r\n    const [type] = useState(props.type);\r\n\r\n\r\n    const build = event => {\r\n        props.history.push(`/Cabinet/Build/${id}`);\r\n        event.stopPropagation();\r\n    };\r\n\r\n    const deleteItem = event => {\r\n        eventEmitter.emit('EventDeleteItem',{id: props.id, name: props.name, type: props.type});\r\n        event.stopPropagation();\r\n    };\r\n\r\n    return (\r\n        <div className = 'item' data-id = {id}>\r\n            <p className = 'ProjectName'>{name}</p>\r\n            <p className = 'ProjectType'>{type}</p>\r\n            <div className = 'projectController'>\r\n            <input onClick = {build} className = 'projectControllerButton_enter' type = 'button' value = 'enter build' />\r\n            <input onClick = {deleteItem} className = 'projectControllerButton_delete' type = 'button' value = 'delete' />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(Item);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport {middlewareCreateProject} from '../../redux/middleware/createProjectMiddleware';\r\n\r\nimport './list.scss';\r\n\r\nimport Item from './Item';\r\nimport eventEmitter from '../../EventEmitter.js';\r\n\r\nclass List extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        children: PropTypes.shape({\r\n            projects: PropTypes.array.isRequired,\r\n           count: PropTypes.number.isRequired,\r\n        }),\r\n        list: PropTypes.array.isRequired,\r\n    }\r\n\r\n    state = {\r\n        redirect: false,\r\n    }\r\n\r\n    addNewProject = (item) => {\r\n        if (this.props.idUser) {\r\n            this.props.dispatch(middlewareCreateProject(this.props.idUser, this.props.list, item.title, item.type));\r\n        } else this.setState({...this.state, redirect: true});\r\n    }\r\n\r\n\r\n    makeList = (list) => {\r\n\r\n        return list.map (project => {\r\n\r\n            return(\r\n                <Item\r\n                    key = {project.id}\r\n                    id = {project.id}\r\n                    name = {project.title}\r\n                    type = {project.type}\r\n                />\r\n            )\r\n        });\r\n    }\r\n\r\n    render(){\r\n        if (this.state.redirect)\r\n            return <Redirect to = '/' />\r\n            else return (\r\n                    <div className = 'projectsList__list'>\r\n                        {this.makeList([...this.props.list])}\r\n                    </div>\r\n                )\r\n    }\r\n\r\n    componentWillMount = () =>\r\n        eventEmitter.on('EventAddProject',this.addNewProject);\r\n\r\n      componentWillUnmount = () =>\r\n        eventEmitter.off('EventAddProject',this.addNewProject);\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        idUser: state.cabinet.idUser,\r\n        list: [...state.cabinet.projects]\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(List);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nimport List from '../List/List.jsx';\r\n\r\nimport './ProjectsSection.scss';\r\n\r\nclass ProjectsSection extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        projects: PropTypes.array,\r\n    }\r\n\r\n    render(){\r\n        return (\r\n                <section className = 'projectsList'>\r\n                <div className = 'container'>\r\n                <div className = 'flex-column'>\r\n                        <div className = 'projectsList__about'>\r\n                            <h3>Your Projects</h3>\r\n                        </div>\r\n                        <List />\r\n                    </div>\r\n                </div>\r\n                </section>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default ProjectsSection;","import React,{Fragment} from 'react';\nimport PropTypes from 'prop-types';\nimport eventEmitter from '../../EventEmitter.js';\nimport {Redirect} from 'react-router-dom';\nimport withFirebase from '../../components/firebaseHOC';\n\nimport {middlewareLogOutUser} from '../../redux/middleware/loadUserMiddleware';\nimport middlewareDelete from '../../redux/middleware/middlewareDelete';\nimport Loader from '../../components/loading/Loader';\nimport {connect} from 'react-redux';\n\nimport Header from '../../components/header/Header';\nimport Modal from '../../components/modalWindow/ModalWindow';\nimport ProjectsSection from '../../components/ProjectsSection/ProjectsSection';\n\nimport './Cabinet.scss';\n\nconst title = require('../../config.json').title;\n\nclass Cabinet extends React.PureComponent {\n\n  static propTypes = {\n    firebase: PropTypes.object.isRequired\n  }\n\n  state = {\n    workMode: 'default',\n  }\n\n  logOut = event => {\n    this.props.dispatch(middlewareLogOutUser(this.props.idUser));\n  }\n\n  deletItem = event => {\n    this.props.dispatch(middlewareDelete({...event, uid: this.props.firebase.getCurrentUser().uid}));\n  }\n\n  changeWorkMode = event => {\n    this.setState ({\n      ...this.state,\n      workMode: event.action,\n    });\n  }\n\n  render(){\n    if (this.props.active){\n      return (\n        <Fragment>\n          <Header title = {title} idUser = {this.props.idUser} />\n          {(this.state.workMode === 'newProject') ? <Modal workMode = {this.state.workMode} /> : null}\n            <ProjectsSection />\n        </Fragment>\n      )\n    } else if (!this.props.firebase.getCurrentUser()) return <Redirect to = '/' />\n    else return <Loader path = '/img/loading.gif' type = 'Cabinet' />\n    }\n\n\n  componentDidMount = () => {\n    eventEmitter.on('EventDeleteItem', this.deletItem);\n    eventEmitter.on('EventChangeWorkMode', this.changeWorkMode);\n  }\n\n  componentWillUnmount = () => {\n    eventEmitter.off('EventDeleteItem', this.deletItem);\n    eventEmitter.off('EventChangeWorkMode', this.changeWorkMode);\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    idUser: state.cabinet.idUser,\n    projects: [...state.cabinet.projects],\n    active: state.cabinet.active\n  }\n}\n\n\n\nexport default connect(mapStateToProps)(withFirebase(Cabinet));\n","import React, {Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nimport withFirebase from '../../components/firebaseHOC';\r\nimport Header from '../../components/header/Header';\r\n\r\nimport './about.scss';\r\n\r\nclass About extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        config: PropTypes.object.isRequired,\r\n        firebase: PropTypes.object.isRequired,\r\n    }\r\n\r\n    state = {\r\n        config: this.props.config\r\n    };\r\n\r\n    render(){\r\n        if (this.props.firebase.getCurrentUser()) {\r\n            const { config } = this.state;\r\n            return (\r\n                <Fragment>\r\n                    <Header title = {config.title} />\r\n                    <section className = 'About'>\r\n                        <div className = 'container'>\r\n                            <div className = 'col-12'>\r\n                                <div className = 'information'>\r\n                                <img alt = 'img' className = 'logoAbout' src = {process.env.PUBLIC_URL + '/img/about.jpg'}/>\r\n                                    <p className ='developer'><span>Developer:</span> {config.about.developer}</p>\r\n                                    <p className = 'year'><span>Year:</span> {config.about.year}</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </section>\r\n                </Fragment>\r\n            )\r\n        } else return <Redirect to = '/' />\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default withFirebase(About);","import React,{useState} from 'react';\r\nimport eventEmitter from '../../EventEmitter';\r\n\r\nimport './imageViewer.scss';\r\n\r\nfunction ImageViewer(props){\r\n\r\n    let [path] = useState(props.path);\r\n\r\n    const closeViewer = event => {\r\n        eventEmitter.emit(\"EventImageView\", { action: false, target: null});\r\n        event.stopPropagation();\r\n    }\r\n\r\n    return (\r\n        <div onClick = {closeViewer} className = 'ImageViewer'>\r\n            <img src = {path} alt = 'fullImage' />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ImageViewer;","import React, {Fragment} from 'react';\r\nimport eventEmitter from '../../EventEmitter';\r\nimport PropTypes from 'prop-types';\r\nimport { SketchPicker } from 'react-color';\r\nimport './instrumentsPanel.scss';\r\n\r\nimport Icon from '../Icon/icon';\r\n\r\nclass InstrumentsPanel extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        instrumentPanel:  PropTypes.object.isRequired,\r\n        editComponent: PropTypes.object.isRequired\r\n    }\r\n\r\n    state = {\r\n        instrumentPanel: {...this.props.instrumentPanel},\r\n        sizeTextValue: 120,\r\n        colorPickerAvtive: false,\r\n        images: null,\r\n    }\r\n\r\n    updateSizeText = event => {\r\n        this.setState({...this.state, sizeTextValue: event});\r\n    }\r\n\r\n    resetAll = event => {\r\n        console.log(event.target);\r\n        event.stopPropagation();\r\n        if (this.state.colorPickerAvtive)\r\n        this.setState({...this.state, colorPickerAvtive: false });\r\n    }\r\n\r\n    closePanel = event => {\r\n        eventEmitter.emit('EventClosePanel', {close: false});\r\n    }\r\n\r\n    setSize = event => {\r\n        let size = event.target.value > 200 ? 200 : event.target.value;\r\n        event.stopPropagation();\r\n        this.setState({sizeTextValue: size}, () => {\r\n            eventEmitter.emit('EventChangeSizeText', {size: this.state.sizeTextValue });\r\n        });\r\n    }\r\n\r\n    setContent = event => {\r\n        let contentValue = event.target.value;\r\n        event.stopPropagation();\r\n        eventEmitter.emit(\"EventChangeContentText\",{content: contentValue});\r\n    }\r\n\r\n    setColor = event => {\r\n        event.stopPropagation();\r\n        this.setState({...this.state, colorPickerAvtive: this.state.colorPickerAvtive ? false : true});\r\n    };\r\n\r\n    handleChangeComplete = event => {\r\n\r\n        if (this.state.instrumentPanel.target === 'background')\r\n            eventEmitter.emit('EventChangeColor', event);\r\n        else if (this.state.instrumentPanel.target === 'text')\r\n            eventEmitter.emit('EventChangeColorText', event);\r\n    }\r\n\r\n    searchImage = event => {\r\n        eventEmitter.emit('EventModalSearchOn');\r\n    };\r\n\r\n    makePanelInstruments = (type) => {\r\n        switch (type){\r\n            case 'text': {\r\n            return (\r\n                    <Fragment>\r\n                    <p className = 'titleInstument'>Color: </p>\r\n                    <input onClick = {this.setColor} className = 'button_switchColor' type = 'button' value = 'color pick' />\r\n                    <p className = 'titleInstument'>Text size: </p>\r\n                    <input \r\n                        onChange = {this.setSize} \r\n                        type=\"number\"\r\n                        min = '10' max = '200'\r\n                        value = {this.state.sizeTextValue}\r\n                    />\r\n                        { this.state.colorPickerAvtive ?\r\n                            <SketchPicker\r\n                            onChangeComplete={this.handleChangeComplete}\r\n                            />\r\n                            : null\r\n                        }\r\n                    <p className = 'titleInstument'>Content: </p>\r\n                    <input onChange = {this.setContent} maxLength = '20' type = 'text' defaultValue = 'Title' />\r\n                    <input className = 'saveButtonInstument' type = 'button' value = 'save changes' />\r\n                    </Fragment>\r\n            )\r\n            }\r\n            case 'background': {\r\n                return (\r\n                    <Fragment>\r\n                    <p className = 'titleInstument'>Color: </p>\r\n                    <input onClick = {this.setColor} className = 'button_switchColor' type = 'button' value = 'color pick' />\r\n                        { this.state.colorPickerAvtive ?\r\n                            <SketchPicker\r\n                            onChangeComplete={this.handleChangeComplete}\r\n                            />\r\n                            : null\r\n                        }\r\n                        <input onClick = {this.searchImage} className = 'ImageSearchButton' type = 'button' value = 'background-image' />\r\n                        <input className = 'saveButtonInstument' type = 'button' value = 'save changes' />\r\n                    </Fragment>\r\n                )\r\n\r\n            }\r\n            default:{\r\n                return (\r\n                    <p className = 'warningInstruments'>Select elements for accses edit instruments</p>\r\n                )\r\n            }\r\n        }\r\n    }\r\n\r\n    render(){\r\n        let { instrumentActive } = this.state.instrumentPanel;\r\n        return (\r\n            <Fragment>\r\n                <div  className = 'instumentsPanel'>\r\n                <button onClick = {this.closePanel} className = 'closeInstrumentsPanel'><Icon path = '/img/close.svg' /></button>\r\n                    <h3>Instruments</h3>\r\n                    {\r\n                        instrumentActive ? \r\n                        <p className = 'titleComponent'>{this.state.instrumentPanel.target}</p>\r\n                        : null\r\n                    }\r\n                    {\r\n                        instrumentActive ?\r\n                        <div  className= 'instuments'>{this.makePanelInstruments(this.state.instrumentPanel.target)}</div>\r\n                        : null\r\n                    }\r\n                </div>\r\n            </Fragment>\r\n        )\r\n    }\r\n\r\n    componentDidUpdate = (oldProps, oldState) => {\r\n\r\n      if (oldState.instrumentPanel.target !== this.props.instrumentPanel.target)\r\n        this.setState({\r\n            ...this.state,\r\n            colorPickerAvtive: false,\r\n            instrumentPanel: {...this.props.instrumentPanel}\r\n        })\r\n      return true;\r\n    }\r\n\r\n    componentDidMount = event => {\r\n        eventEmitter.on(\"EventUpdateSizeText\", this.updateSizeText);\r\n    };\r\n\r\n    componentWillUnmount = event => {\r\n        eventEmitter.off(\"EventUpdateSizeText\", this.updateSizeText);\r\n    }\r\n}\r\n\r\nexport default InstrumentsPanel;","import React, {useEffect, useState} from 'react';\r\nimport eventEmitter from '../../../EventEmitter';\r\nimport styled from 'styled-components';\r\n\r\n\r\nconst Background = styled.div`\r\n    position: relative;\r\n    width: 100%;\r\n    height: 95vh;\r\n    background-size: cover;\r\n    background-color: ${props => props.backgroundColor};\r\n    background-image: url(${props => props.backgroundImage});\r\n`;\r\n\r\nconst BackgroundComponent = props => {\r\n\r\n    let [backgroundColor, setBgColor] = useState(props.background);\r\n    let [backgroundImage, setImage] = useState(props.backgroundImage ? props.backgroundImage : null);\r\n\r\n    const openBgInstruments = event => {\r\n\r\n        eventEmitter.emit('EventInstrumentPanel',{target: 'background'});\r\n        event.stopPropagation();\r\n    }\r\n\r\n    const changeColor = event => {\r\n        const {rgb} = event;\r\n        let colorRGB = `rgb(${rgb.r},${rgb.g},${rgb.b},${rgb.a})`;\r\n        setBgColor(colorRGB);\r\n    }\r\n\r\n    const setBackgroundImage = event => {\r\n        const {urlFull} = event;\r\n        setImage(urlFull);\r\n    };\r\n\r\n    const didUpdate = event => {\r\n        eventEmitter.on('EventChangeColor', changeColor);\r\n        eventEmitter.on('EventSetBackgroundImage', setBackgroundImage);\r\n        return () => {\r\n            eventEmitter.off('EventChangeColor', changeColor);\r\n            eventEmitter.off('EventSetBackgroundImage', setBackgroundImage);\r\n        }\r\n    }\r\n\r\n    useEffect(didUpdate);\r\n    return (\r\n        <Background\r\n            onClick={openBgInstruments}\r\n            backgroundColor = {backgroundColor}\r\n            backgroundImage = {backgroundImage}\r\n        >\r\n            {props.children}\r\n        </Background>\r\n    )\r\n}\r\n\r\nexport default BackgroundComponent;","\r\nimport React, {useEffect, useState} from 'react';\r\nimport eventEmitter from '../../../EventEmitter';\r\nimport styled from 'styled-components';\r\n\r\n\r\nconst Title = styled.h1.attrs(props => ({\r\n    style: {\r\n        display: props.shadowDisplay ? 'none' : 'block',\r\n        left: props.coordX,\r\n        top: props.coordY,\r\n}}))`\r\n    position: absolute;\r\n    left: 50%;\r\n    transform: translate(-50%);\r\n    font-size: ${props => props.size};\r\n    color: ${props => props.textColor};\r\n    text-align: center;\r\n    margin: 0;\r\n`;\r\n\r\n\r\nconst TitleComponent = props =>  {\r\n\r\n    let [colorText, setColorText] = useState(props.color);\r\n    let [sizeText, setSizeText] = useState(props.size ? props.size : 120);\r\n    let [contentText, setText] = useState(props.children);\r\n    const [shiftCoords, setShiftCoords] = useState(null)\r\n    const [dragNdrop, setDragNdrop] = useState(null);\r\n\r\n    const openTitleInstruments = event => {\r\n\r\n        eventEmitter.emit('EventInstrumentPanel',{target: 'text'});\r\n        event.stopPropagation();\r\n    }\r\n\r\n    const changeColorText = colorHash => {\r\n        const {rgb} = colorHash;\r\n        let colorRGB = `rgb(${rgb.r},${rgb.g},${rgb.b},${rgb.a})`;\r\n        setColorText(colorRGB);\r\n    }\r\n\r\n    const changeSizeText = eventSize => {\r\n        \r\n        const {size} = eventSize;\r\n        setSizeText(size);\r\n    }\r\n\r\n    const changeContentText = eventContent => {\r\n        const {content} = eventContent;\r\n        setText(content);\r\n    }\r\n\r\n\r\n    const didUpdate = event => {\r\n        eventEmitter.on('EventChangeColorText', changeColorText);\r\n        eventEmitter.on('EventChangeSizeText', changeSizeText);\r\n        eventEmitter.on('EventChangeContentText', changeContentText);\r\n        return () => {\r\n            eventEmitter.off('EventChangeColorText', changeColorText);\r\n            eventEmitter.off('EventChangeSizeText', changeSizeText);\r\n            eventEmitter.off('EventChangeContentText', changeContentText);\r\n        }\r\n    }\r\n\r\n    const saveCoords = event => {\r\n\r\n        let rect = event.target.getBoundingClientRect();\r\n        let left = rect.left;\r\n        let top = rect.top;\r\n        let width = rect.width;\r\n        let height = rect.height;\r\n        setShiftCoords({x: event.pageX - left - width/2, y: event.pageY - top + height/2.8});\r\n\r\n        event.stopPropagation();\r\n    }\r\n\r\n    const moveText = event => {\r\n\r\n        \r\n        let coordX = event.pageX - shiftCoords.x;\r\n        let coordY = event.pageY - shiftCoords.y;\r\n\r\n        coordX = coordX <= 130 ? 130 : coordX;\r\n        coordY = coordY <= 0 ? 0 : coordY;\r\n\r\n            setDragNdrop({x: coordX + 'px', y: coordY + 'px', shadowDisplay: event.type === 'drag' ? true : false});\r\n            event.stopPropagation();\r\n    }\r\n\r\n    const weelResizeText = event => {\r\n\r\n        if (event.shiftKey && event.deltaY === -100) {\r\n            let counter = sizeText + 1;\r\n            counter = counter > 200 ? 200 : counter;\r\n            setSizeText(counter);\r\n            eventEmitter.emit('EventUpdateSizeText', counter);\r\n        }\r\n\r\n        if (event.shiftKey && event.deltaY === 100) {\r\n            let counter = sizeText - 1;\r\n             counter = counter <= 10 ? 10 : counter;\r\n             setSizeText(counter);\r\n             eventEmitter.emit('EventUpdateSizeText', counter);\r\n            }\r\n        event.stopPropagation();\r\n    }\r\n    useEffect(didUpdate);\r\n\r\n    return (\r\n        <Title\r\n            onClick={openTitleInstruments}\r\n            textColor = {colorText ? colorText : 'red'}\r\n            size = {sizeText ? sizeText + 'px' : '120px'}\r\n            draggable = {true}\r\n            onMouseDown = {saveCoords}\r\n            onDrag   = {moveText}\r\n            onDragEnd = {moveText}\r\n            onWheel = {weelResizeText}\r\n            coordX = {dragNdrop ? dragNdrop.x : null}\r\n            coordY = {dragNdrop ? dragNdrop.y : null}\r\n            shadowDisplay = {dragNdrop ? dragNdrop.shadowDisplay : false}\r\n        >\r\n            {contentText}\r\n        </Title>\r\n    )\r\n}\r\n\r\nexport default TitleComponent;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport TitleComponent from '../buildComponents/components/Text';\r\nimport BackgroundComponent from '../buildComponents/components/Background';\r\n\r\nimport eventEmitter from '../../EventEmitter';\r\n\r\nimport './buildMenu.scss';\r\n\r\nclass BuildMenu extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        component: PropTypes.object\r\n    }\r\n\r\n    state = {\r\n        component: {...this.props.component},\r\n        title: 'Title'\r\n    }\r\n\r\n    addText = event => {\r\n\r\n        let componentArrayWrapper = [];\r\n        componentArrayWrapper.push(<TitleComponent key = 'header'>{this.state.title}</TitleComponent>);\r\n        eventEmitter.emit('EventBuildHeaderComponents',{target: 'Header', type: 'text', component: componentArrayWrapper});\r\n        event.stopPropagation();\r\n    }\r\n\r\n    addBackground = event => {\r\n\r\n        let componentArrayWrapper = [];\r\n        componentArrayWrapper.push(<BackgroundComponent key = 'bgHeader'/>);\r\n        eventEmitter.emit('EventBuildHeaderComponents',{target: 'Header', type: 'background', component: componentArrayWrapper});\r\n\r\n        event.stopPropagation();\r\n    }\r\n\r\n    render(){\r\n\r\n        return (\r\n            <div className = 'ComponentsMenu'>\r\n                <button onClick = {this.addBackground} className = 'ImageTool CompoentnsMenu_button' ><span>Image</span></button>\r\n                <button onClick = {this.addText} className = 'TextTool CompoentnsMenu_button' ><span>Text</span></button>\r\n                <button \r\n                    disabled = {this.state.component.name !== 'Header' ? false : true}\r\n                    className = 'ButtonTool CompoentnsMenu_button' >\r\n                    <span>Button</span>\r\n                </button>\r\n                <button className = 'VideoTool CompoentnsMenu_button' ><span>Video</span></button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default BuildMenu;","import React,{Fragment} from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Icon from '../Icon/icon';\r\nimport BuildMenu from '../componentsBuildMenu/BuildMenu';\r\n\r\n\r\nconst ControllersBox = styled.div\r\n    .attrs(props =>({\r\n        style: {\r\n                left: props.coordX,\r\n                top: props.coordY,\r\n        }\r\n    }))\r\n    `position: absolute;\r\n    display: ${props => props.shadowDisplay}\r\n    `;\r\n\r\n\r\nclass Controllers extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        menuActive: PropTypes.bool,\r\n    }\r\n\r\n    state = {\r\n        viewComponentMenu: false,\r\n        shiftX: 0,\r\n        shiftY: 0,\r\n        coordsX: '50%',\r\n        coordsY: '0',\r\n        shadowDisplay: 'block'\r\n    }\r\n\r\n    componentMenu = (event) => {\r\n        this.setState({viewComponentMenu: this.state.viewComponentMenu ? false : true})\r\n    }\r\n\r\n    saveCoords = event => {\r\n        let left = this.controlBox.getBoundingClientRect().left;\r\n        let top = this.controlBox.getBoundingClientRect().top;\r\n        this.setState({...this.state, shiftX: event.pageX - left, \r\n        shiftY: event.pageY - top + 55 });\r\n\r\n        event.stopPropagation();\r\n    }\r\n\r\n    drag = event => {\r\n        if (!this.state.viewComponentMenu)\r\n            this.setState({\r\n                ...this.state,\r\n                coordsX: event.pageX - this.state.shiftX + 'px', \r\n                coordsY: event.pageY - this.state.shiftY + 'px',\r\n                shadowDisplay: event.type === 'drag' ? 'none' : 'block'\r\n            });\r\n        event.stopPropagation();\r\n    }\r\n\r\n    controlBox = null;\r\n    refControll = (node) => this.controlBox = node;\r\n\r\n\r\n    render(){\r\n        return (\r\n            <Fragment>\r\n            { this.props.menuActive ?\r\n                <ControllersBox\r\n                ref = {this.refControll}\r\n                className = 'ControllersEditComponent'\r\n                coordX = {this.state.coordsX}\r\n                coordY = {this.state.coordsY}\r\n                draggable = {!this.state.viewComponentMenu}\r\n                onMouseDown = {this.saveCoords}\r\n                onClick = {this.componentMenu}\r\n                onDrag   = {this.drag}\r\n                onDragEnd = {this.drag}\r\n                shadowDisplay = {this.state.shadowDisplay}\r\n                >\r\n                    <Icon\r\n                        draggable = {true}\r\n                        onClick = {this.componentMenu}\r\n                        className = 'addButton'\r\n                        path = '/img/addButton.png'\r\n                    />\r\n                    {this.state.viewComponentMenu ? <BuildMenu component = {{...this.props.component}} /> : null}\r\n                </ControllersBox>\r\n                : null\r\n            }\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Controllers;","import React, {Fragment} from 'react';\r\nimport eventEmitter from '../../../EventEmitter';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nimport BackgroundComponent from '../../buildComponents/components/Background';\r\nimport Controllers from '../../controllers/controllers';\r\n\r\n\r\nimport './headerBuild.scss';\r\n\r\nclass HeaderBuild extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        id: PropTypes.number.isRequired,\r\n    }\r\n\r\n    state = {\r\n        idProject: this.props.id,\r\n        component: {...this.props.children}\r\n        }\r\n\r\n\r\n    changeMode = (event) => {\r\n        if (!this.props.editStart) {\r\n            let rect = event.currentTarget.getBoundingClientRect();\r\n            const width = rect.width;\r\n            const height = rect.height;\r\n        eventEmitter.emit('EventModeEdit', {...this.state, width: width, height: height});\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <div onClick = {this.changeMode} className = 'Header'>\r\n                    <BackgroundComponent background = 'grey'>\r\n                    {  this.props.children.build.component && this.props.children.build.type === 'text'  ?\r\n                            this.props.children.build.component : null\r\n                    }\r\n                    </BackgroundComponent>\r\n                    {!this.props.editStart ? <p className = 'warningEdit'>Click for start edit</p> : null}\r\n                    {!this.state.readyBuild ? \r\n                        <Controllers\r\n                            menuActive = {this.props.menuActive}\r\n                            component = {{...this.state.component}}\r\n                            mainWidth = {this.props.children.mainBoxWidth}\r\n                            mainHeight = {this.props.children.mainBoxHeight}\r\n\r\n                        />\r\n                        : null}\r\n                </div>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\nexport default HeaderBuild;","import React,{Fragment} from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport {Redirect} from 'react-router-dom';\r\nimport eventEmitter from '../../EventEmitter';\r\n\r\nimport withFirebase from '../../components/firebaseHOC';\r\nimport {connect} from 'react-redux';\r\n\r\nimport ImageViewer from '../../components/imageViewer/imageViewer';\r\nimport Loader from '../../components/loading/Loader';\r\nimport Header from '../../components/header/Header';\r\nimport InstrumentsPanel from '../../components/instrumentsPanel/InstrumentsPanel';\r\nimport ModalWindow from '../../components/modalWindow/ModalWindow';\r\nimport HeaderBuild from '../../components/buildComponents/header/headerBuild';\r\n\r\nimport './build.scss';\r\n\r\n\r\nclass Build extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        param: PropTypes.string,\r\n        match: PropTypes.shape({\r\n            params: PropTypes.shape({\r\n                param: PropTypes.string.isRequired\r\n            }).isRequired\r\n        }).isRequired\r\n    }\r\n\r\n    state = {\r\n            idProject: parseInt(this.props.match.params.param),\r\n            typeProject: null,\r\n            editComponent: {name: null, build: {}, edit: false},\r\n            changeEdit: false,\r\n            instrumentPanel: { instrumentActive: false, target: '' },\r\n            menuActive: false,\r\n            editStart: false,\r\n            modalSearch: false,\r\n            modalImageViewer: {action: false, image: null },\r\n        }\r\n\r\n    modalSearchOn = event => {\r\n        this.setState({...this.state, modalSearch: this.state.modalSearch ? false : true});\r\n    }\r\n\r\n    imageViewerSwitch = event => {\r\n        this.setState({\r\n            ...this.state,\r\n            modalImageViewer: {...this.state.modalImageViewer, action: event.action, target: event.target}\r\n        });\r\n    };\r\n\r\n    workModeEdit = itemEvent => {\r\n        if (!this.state.editStart || this.state.changeEdit)\r\n        this.setState({\r\n            ...this.state,\r\n            idProject: itemEvent.idProject,\r\n            editComponent: {\r\n                ...itemEvent.component,\r\n                mainBoxWidth: itemEvent.width,\r\n                mainBoxHeight: itemEvent.height\r\n            },\r\n            menuActive: true,\r\n            editStart: true\r\n        });\r\n\r\n    }\r\n\r\n    openInstrument = itemEvent => {\r\n        if (this.state.editStart)\r\n        this.setState({\r\n            ...this.state,\r\n            instrumentPanel: {\r\n                ...this.state.instrumentPanel, \r\n                instrumentActive: true, \r\n                target: itemEvent.target }\r\n        })\r\n    }\r\n\r\n    closePanel = event => {\r\n        this.setState({\r\n            ...this.state,\r\n            instrumentPanel: {\r\n                ...this.state.instrumentPanel,\r\n                colorPickerAvtive: false,\r\n                instrumentActive: event.close\r\n            }\r\n        });\r\n    };\r\n\r\n    addHeaderComponent = itemEvent => {\r\n        this.setState({\r\n            ...this.state,\r\n            editComponent: {\r\n                ...this.state.editComponent,\r\n                build: {\r\n                    target: itemEvent.target,\r\n                    type: itemEvent.type,\r\n                    component: [...itemEvent.component]},\r\n            },\r\n        });\r\n    };\r\n\r\n\r\n    render(){\r\n        let { instrumentActive } = this.state.instrumentPanel;\r\n        if (this.props.active){\r\n            return (\r\n                <Fragment>\r\n                {   this.state.modalImageViewer.action ?\r\n                    <ImageViewer path = {this.state.modalImageViewer.target} /> : null\r\n                }\r\n                {this.state.modalSearch ?\r\n                    <ModalWindow workMode = 'Search' /> : null\r\n                }\r\n                { instrumentActive ?\r\n                    <InstrumentsPanel\r\n                        editComponent =  {{...this.state.editComponent}}\r\n                        instrumentPanel = {{...this.state.instrumentPanel}}\r\n                    />\r\n                    : null\r\n                }\r\n                    <Header title = \"Constructor\"  />\r\n                    <HeaderBuild\r\n                            editStart = {this.state.editStart}\r\n                            menuActive = {this.state.menuActive}\r\n                            id = {this.state.idProject}\r\n                    >\r\n                        {{...this.state.editComponent, name: 'Header'}}\r\n                    </HeaderBuild>\r\n                </Fragment>\r\n            )\r\n        } else if (!this.props.firebase.getCurrentUser()) return <Redirect to = '/' />\r\n        else return <Loader path = '/img/loading.gif' type = 'build' />\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        eventEmitter.on('EventBuildHeaderComponents', this.addHeaderComponent);\r\n        eventEmitter.on('EventClosePanel', this.closePanel);\r\n        eventEmitter.on('EventModalSearchOn', this.modalSearchOn);\r\n        eventEmitter.on('EventInstrumentPanel', this.openInstrument);\r\n        eventEmitter.on('EventImageView', this.imageViewerSwitch);\r\n        eventEmitter.on('EventModeEdit', this.workModeEdit);\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        eventEmitter.off('EventBuildHeaderComponents', this.addHeaderComponent);\r\n        eventEmitter.off('EventModalSearchOn', this.modalSearchOn);\r\n        eventEmitter.off('EventClosePanel', this.closePanel);\r\n        eventEmitter.off('EventInstrumentPanel', this.openInstrument);\r\n        eventEmitter.off('EventImageView', this.imageViewerSwitch);\r\n        eventEmitter.off('EventModeEdit', this.workModeEdit);\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n\r\n    return {\r\n        ...state.builder,\r\n        active: state.cabinet.active,\r\n        idUser: state.cabinet.idUser,\r\n        currentEditable: {}\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(withFirebase(Build));","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {BrowserRouter, Route, Switch} from 'react-router-dom';\r\n\r\nimport {middlewareLoadUserData} from './redux/middleware/loadUserMiddleware';\r\nimport {connect} from 'react-redux';\r\nimport withFirebase from './components/firebaseHOC';\r\nimport Loader from './components/loading/Loader';\r\n\r\nimport Index from './Pages/Index/Index';\r\nimport Cabinet from './Pages/Cabinet/Cabinet';\r\nimport About from './Pages/About/About';\r\nimport Build from './Pages/Build/Build';\r\n\r\nrequire('es6-promise').polyfill();\r\n\r\nclass App extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        config: PropTypes.object.isRequired,\r\n        firebase: PropTypes.object.isRequired,\r\n    }\r\n\r\n    state = {\r\n        firebase: this.props.firebase,\r\n        firebaseLoadState: false,\r\n    }\r\n\r\n    componentDidMount(){\r\n\r\n        this.props.firebase.auth.onAuthStateChanged((user) => {\r\n\r\n            if (!this.state.firebaseLoadState){\r\n                if (user) this.props.dispatch(middlewareLoadUserData(user.uid));\r\n                this.setState({firebaseLoadState: true});\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    render(){\r\n        if (this.state.firebaseLoadState){\r\n        return (\r\n            <BrowserRouter basename = '/'>\r\n                    <Switch>\r\n                        <Route\r\n                            path = '/' exact\r\n                            render = {(props) => <Index {...props} />}\r\n                        />\r\n                        <Route path = '/Cabinet/' exact component = {Cabinet}/>\r\n                        <Route\r\n                            path = '/Cabinet/About'\r\n                            render = {(props) => <About {...props} config = {this.props.config} />}\r\n                        />\r\n                        <Route path = '/Cabinet/Build/:param' component = {Build}/>\r\n                        <Route path = '*' component = {Index} />;\r\n                    </Switch>\r\n            </BrowserRouter>\r\n        )\r\n        } else return <Loader path = '/img/loading.gif' type = 'application' />\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n      active: state.cabinet.active\r\n    }\r\n  }\r\n\r\nexport default connect(mapStateToProps)(withFirebase(App));","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport {Provider} from 'react-redux';\nimport store from './redux/store';\nimport App from './App.jsx';\nimport 'normalize.css';\n\nconst config = require('./config.json');\n\n\nReactDOM.render(\n    <Provider store = {store}>\n        <App config = {config} />\n    </Provider>,\n        document.getElementById('root')\n);\n\n"],"sourceRoot":""}