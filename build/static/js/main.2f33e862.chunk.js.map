{"version":3,"sources":["serviceWorker.js","Firebase/firebaseConfig.js","Firebase/Firebase.js","redux/actions.js","redux/reducerBuilder.js","redux/reducerCabinet.js","redux/reducers.js","redux/store.js","redux/middleware/loadUserMiddleware.js","components/firebaseHOC.jsx","components/loading/Loader.jsx","EventEmitter.js","components/Registration/Registration.jsx","Pages/Index/Index.jsx","redux/middleware/middlewareDelete.js","components/Icon/icon.jsx","components/header/Header.jsx","components/imageViewer/imageItem.jsx","components/modalWindow/ModalWindow.jsx","redux/middleware/createProjectMiddleware.js","components/List/Item.jsx","components/List/List.jsx","components/ProjectsSection/ProjectsSection.jsx","Pages/Cabinet/Cabinet.jsx","Pages/About/About.jsx","redux/middleware/updateMiddleware.js","components/imageViewer/imageViewer.jsx","components/instrumentsPanel/InstrumentsPanel.jsx","components/buildComponents/components/Background.jsx","components/buildComponents/components/Text.jsx","components/componentsBuildMenu/BuildMenu.jsx","components/controllers/controllers.jsx","components/buildComponents/header/headerBuild.jsx","Pages/Build/Build.jsx","App.jsx","index.js"],"names":["Boolean","window","location","hostname","match","console","log","firebaseConfig","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","interfaceFirebase","require","Firebase","Object","classCallCheck","this","firebase","auth","db","rules","setPersistence","Auth","Persistence","email","password","signInWithEmailAndPassword","createUserWithEmailAndPassword","signOut","currentUser","saveSession","exitProjectAction","state","type","exit","loadCurrentProjectAction","id","typeProject","component","toConsumableArray","loadUserAction","active","idUser","uid","error","projects","errorAction","initialState","loadProject","haveUpdateLoading","idProject","dateConnect","Date","now","toLocaleString","replace","split","combineReducers","builder","arguments","length","undefined","action","objectSpread","cabinet","map","item","middleware","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","thunk","withExtraArgument","store","createStore","middlewareLogin","_ref2","asyncToGenerator","regenerator_default","a","mark","_callee","dispatch","getState","_ref","wrap","_context","prev","next","login","then","response","collection","doc","user","get","docUser","data","catch","message","stop","_x","_x2","_x3","apply","middlewareLogOutUser","_ref6","_callee3","_ref5","_context3","_x7","_x8","_x9","withFirebase","Component","props","react_default","createElement","assign","Loader","_useState","useState","path","slicedToArray","className","src","alt","stream","EventEmitter","_this","emailRef","passwordRef","setRefEmail","node","setRefPassword","createUser","event","value","registration","set","eventEmitter","emit","setState","autoComplete","ref","onClick","React","PureComponent","Index","title","registrationActive","regStatus","wrongEnter","statusRegistration","additionalUserInfo","isNewUser","showBox","authTo","emailImput","passwordImput","componentDidMount","e","on","componentWillUnmount","off","react_router","to","currentSelected","components_Registration_Registration","connect","middlewareDelete","filter","itemdb","update","Icon","_useState3","_useState5","draggable","iconPath","CabinetIcon","Header","logOut","redirect","pathname","history","push","add","icon","react_router_dom","withRouter","ImageItem","urls","regular","urlRegular","full","urlFull","_useState7","isFull","selected","url","ModalWindow","workMode","images","buttonSearchDisabled","selectedItem","showUrl","imageBoxView","newProject","validateName","validateType","disabled","name","imageMenuActive","warning","lengthMax","lengthMin","inputSearch","inputSelect","searchBackground","search","inages","isFetch","concat","ok","json","Error","results","showMenuImage","showImage","target","stopPropagation","setSelectedImage","makeImageResultBox","items","i","imageItem","key","addNewProject","mode","selectOption","inputs","defineProperty","lengthInput","cancel","refSelect","refSearch","onChange","placeholder","react","middlewareCreateProject","list","lastProject","lastIndex","data-id","List","makeList","project","List_Item","componentWillMount","ProjectsSection","components_List_List","Cabinet","deletItem","getCurrentUser","changeWorkMode","header_Header","modalWindow_ModalWindow","components_ProjectsSection_ProjectsSection","config","about","developer","year","updateMiddleware","newProjects","find","ImageViewer","InstrumentsPanel","instrumentPanel","componentsStats","content","fontSize","color","backgroundImage","image","coords","left","top","colorPickerAvtive","updateSizeText","eventSize","closePanel","close","setSize","idComponent","size","setContent","contentValue","updatePosition","eventItem","x","y","setColor","handleChangeComplete","rgb","colorRGB","r","g","b","saveChanges","searchImage","makePanelInstruments","min","max","lib","onChangeComplete","maxLength","defaultValue","componentDidUpdate","oldProps","oldState","targetBool","idBool","instrumentActive","Background","styled","div","_templateObject","backgroundColor","BackgroundComponent","_useState2","count","setCount","boxComponent","createRef","background","_useState4","setBgColor","_useState6","setImage","changeColor","setBackgroundImage","useEffect","current","focus","boxInform","getBoundingClientRect","width","height","saveWidth","children","Title","h1","attrs","style","display","shadowDisplay","coordX","coordY","Text_templateObject","textColor","TextComponent","sizeParenBox","colorText","setColorText","_useState8","sizeText","setSizeText","_useState9","_useState10","contentText","setText","_useState11","_useState12","shiftCoords","setShiftCoords","_useState13","_useState14","dragNdrop","setDragNdrop","changeColorText","changeSizeText","changeContentText","eventContent","moveText","pageX","pageY","position","sizeTextValue","onMouseDown","rect","onDrag","onDragEnd","onWheel","shiftKey","deltaY","counter","BuildMenu","addText","countComponents","Text","addBackground","components_Background","ControllersBox","controllers_templateObject","Controllers","viewComponentMenu","shiftX","shiftY","coordsX","coordsY","componentMenu","saveCoords","controlBox","drag","refControll","menuActive","componentsBuildMenu_BuildMenu","HeaderBuild","changeMode","editStart","currentTarget","refBox","refBackground","build","readyBuild","controllers","mainWidth","mainBoxWidth","mainHeight","mainBoxHeight","Build","parseInt","params","param","editComponent","edit","changeEdit","modalSearch","modalImageViewer","modalSearchOn","imageViewerSwitch","workModeEdit","itemEvent","openInstrument","addHeaderComponent","saveChangesComponent","componentArray","currentProject","imageViewer_imageViewer","instrumentsPanel_InstrumentsPanel","header_headerBuild","prevProps","prevState","_this2","polyfill","App","firebaseLoadState","onAuthStateChanged","_ref4","_callee2","_ref3","_context2","_x4","_x5","_x6","_this3","basename","exact","render","Pages_Index_Index","Pages_About_About","ReactDOM","es","src_App","document","getElementById","navigator","serviceWorker","ready","unregister"],"mappings":"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","file":"static/js/main.2f33e862.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","// setings in root folder / firebase.env\r\n\r\nconsole.log('firebase');\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n    databaseURL: process.env.REACT_APP_DATABASE_URL,\r\n    projectId: process.env.REACT_APP_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n    appId: process.env.REACT_APP_APPID\r\n};\r\n\r\nexport {firebaseConfig}","import * as firebase from 'firebase/app';\r\nimport {firebaseConfig} from './firebaseConfig';\r\n\r\nconst auth = require('firebase/auth');\r\nconst firestore = require('firebase/firestore');\r\n\r\nclass Firebase {\r\n\r\n        constructor(){\r\n                firebase.initializeApp(firebaseConfig);\r\n                this.auth = firebase.auth();\r\n                this.db = firebase.firestore();\r\n        }\r\n\r\n        saveSession(rules){\r\n                return this.auth.setPersistence(firebase.auth.Auth.Persistence[rules]);\r\n        }\r\n\r\n        login(email, password){\r\n                return this.auth.signInWithEmailAndPassword(email, password);\r\n        }\r\n\r\n        registration(email, password){\r\n                return this.auth.createUserWithEmailAndPassword(email, password)\r\n        }\r\n\r\n        signOut(){\r\n                return this.auth.signOut()\r\n        }\r\n\r\n        getCurrentUser() {\r\n                return this.auth.currentUser\r\n        }\r\n}\r\n\r\nlet interfaceFirebase = new Firebase();\r\ninterfaceFirebase.saveSession('SESSION');\r\n\r\nexport default interfaceFirebase;\r\n\r\nexport { auth, firestore };\r\n\r\n","const CREATE_PROJECT = 'CREATE_PROJECT';\r\nconst LOAD_UPDATE_PROJECT = \"LOAD_UPDATE_PROJECT\";\r\nconst LOAD_CURRENT = 'LOAD_CURRENT';\r\nconst LOG_OUT_CABINET = 'LOG_OUT_CABINET';\r\nconst LOAD_USER_CABINET = 'LOAD_USER_CABINET';\r\nconst ERROR_CABINET = 'ERROR_CABINET';\r\nconst EXIT_PROJECT = 'EXIT_PROJECT';\r\n\r\nconst createProjectAction = (state) => {\r\n    return {\r\n        type: CREATE_PROJECT,\r\n        projects: [...state],\r\n    }\r\n}\r\n\r\nconst exitProjectAction = (state) => {\r\n    return {\r\n        type: EXIT_PROJECT,\r\n        exit: state\r\n    }\r\n}\r\n\r\nconst loadCurrentProjectAction = (state) => {\r\n    console.log(state);\r\n    return {\r\n        type: LOAD_CURRENT,\r\n        id: state.id,\r\n        typeProject: state.typeProject,\r\n        component: [...state.component]\r\n    }\r\n}\r\n\r\nconst loadUpdateCurrentProject = (state) => {\r\n    return {\r\n        type: LOAD_UPDATE_PROJECT,\r\n        idProject: state.idProject,\r\n        component: [...state.component]\r\n    }\r\n}\r\n\r\nconst loadUserAction = (state) => {\r\n    return {\r\n        type: LOAD_USER_CABINET,\r\n        active: true,\r\n        idUser: state.uid,\r\n        error: '',\r\n        projects: [...state.projects]\r\n    }\r\n}\r\n\r\nconst logOutAction = (state) => {\r\n\r\n    return {\r\n        type: LOG_OUT_CABINET,\r\n        active: false,\r\n        idUser: null,\r\n        error: '',\r\n        projects: []\r\n    }\r\n}\r\n\r\nconst errorAction = (state) => {\r\n    return {\r\n        type: ERROR_CABINET,\r\n        error: state\r\n    }\r\n}\r\n\r\nexport {\r\n    CREATE_PROJECT, createProjectAction, /* cabinet */\r\n    LOAD_USER_CABINET, loadUserAction, /* cabinet */\r\n    LOG_OUT_CABINET, logOutAction, /* cabinet */\r\n    LOAD_CURRENT, loadCurrentProjectAction, /* builder */\r\n    LOAD_UPDATE_PROJECT, loadUpdateCurrentProject,\r\n    EXIT_PROJECT, exitProjectAction,\r\n    ERROR_CABINET, errorAction, /* both */\r\n}","import {LOAD_CURRENT,LOAD_UPDATE_PROJECT, EXIT_PROJECT} from './actions';\r\n\r\nconst initialState = {\r\n    loadProject: false,\r\n    haveUpdateLoading: true,\r\n    idProject: null,\r\n    typeProject: null,\r\n    component: []\r\n};\r\nexport default (state = initialState, action) => {\r\n    console.log('reducer');\r\n    switch (action.type){\r\n\r\n        case LOAD_CURRENT: {\r\n            return {\r\n                ...state,\r\n                haveUpdateLoading: state.haveUpdateLoading ? false : true,\r\n                loadProject: true,\r\n                idProject: action.id,\r\n                typeProject: action.typeProject,\r\n                component: [...action.component]\r\n            }\r\n        }\r\n\r\n        case LOAD_UPDATE_PROJECT: {\r\n            return {\r\n                ...state,\r\n                haveUpdateLoading: false,\r\n                component: [...action.component]\r\n            }\r\n        }\r\n\r\n        case EXIT_PROJECT: {\r\n            if (action.exit)\r\n            return {\r\n                ...state,\r\n                haveUpdateLoading: true,\r\n                loadProject: false,\r\n                idProject: null,\r\n                typeProject: null,\r\n                component: []\r\n            }\r\n            else return state;\r\n        }\r\n        default: return state;\r\n    }\r\n};","import {LOAD_USER_CABINET, LOG_OUT_CABINET, ERROR_CABINET, CREATE_PROJECT, LOAD_UPDATE_PROJECT} from './actions';\r\n\r\nconst initialState = {\r\n    active: false,\r\n    idUser: null,\r\n    projects: [],\r\n    error: null,\r\n    dateConnect: new Date(Date.now()).toLocaleString().replace(/\\s/ig,'').split(','),\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n    console.log(\"Cabinet\");\r\n    switch(action.type) {\r\n        case LOAD_USER_CABINET: {\r\n\r\n            return {\r\n                ...state,\r\n                active: action.active,\r\n                idUser: action.idUser,\r\n                projects: action.projects\r\n            }\r\n        }\r\n\r\n        case CREATE_PROJECT: {\r\n            return {\r\n                ...state,\r\n                projects: action.projects\r\n            }\r\n        }\r\n\r\n        case LOAD_UPDATE_PROJECT: {\r\n            return {\r\n                ...state,\r\n                projects: state.projects.map(item => {\r\n                    if (item.id === action.idProject)\r\n                        item.component = [...action.component]\r\n                return item;\r\n                })\r\n            }\r\n        }\r\n\r\n        case LOG_OUT_CABINET: {\r\n            return {\r\n                ...state,\r\n                active: false,\r\n                idUser: null,\r\n                projects: []\r\n            }\r\n        }\r\n\r\n        case ERROR_CABINET: {\r\n            return {\r\n                ...state,\r\n                error: action.error\r\n            }\r\n        }\r\n        default: return state;\r\n    }\r\n}\r\n\r\n","import {combineReducers} from 'redux';\r\nimport reducerBuilder from './reducerBuilder';\r\nimport reducerCabinet from './reducerCabinet';\r\n\r\nexport default combineReducers({\r\n    builder: reducerBuilder,\r\n    cabinet: reducerCabinet,\r\n});","import {createStore, applyMiddleware, compose} from 'redux';\r\nimport firebase from  '../Firebase/Firebase';\r\nimport thunk from 'redux-thunk';\r\nimport combineReducers from './reducers';\r\n\r\nconst composeEnhancers =\r\n  typeof window === 'object' &&\r\n  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?\r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\r\n    }) : compose;\r\n\r\nconst middleware = composeEnhancers(\r\n  applyMiddleware(thunk.withExtraArgument({firebase}))\r\n);\r\nconst store = createStore(combineReducers, middleware);\r\n\r\n\r\nexport default store;","import {loadUserAction, errorAction, logOutAction} from '../actions';\r\n\r\nconst middlewareLogin = (email,password) => async (dispatch,getState, {firebase}) => {\r\n        await firebase.login(email,password)\r\n        .then(response =>{\r\n            firebase.db.collection(\"users\").doc(response.user.uid).get()\r\n            .then(docUser => {\r\n                let user = docUser.data();\r\n                dispatch(loadUserAction({uid: docUser.id, projects: [...user.projects]}))\r\n            })\r\n        })\r\n        .catch((error) => {\r\n            console.error(error.message);\r\n            dispatch(errorAction(error.message));\r\n        });\r\n    }\r\n\r\nconst middlewareLoadUserData = (uid) => async (dispatch,getState, {firebase}) => {\r\n        await firebase.db.collection(\"users\").doc(uid).get()\r\n        .then(docUser => {\r\n            let user = docUser.data();\r\n            dispatch(loadUserAction({uid: uid, projects: [...user.projects]}))\r\n        })\r\n        .catch((error) => {\r\n            console.error(error.message);\r\n            dispatch(errorAction(error.message));\r\n        });\r\n    }\r\n\r\nconst middlewareLogOutUser = (uid) => async (dispatch,getState, {firebase}) => {\r\n    await firebase.signOut()\r\n    .then (response => {\r\n        dispatch(logOutAction());\r\n    })\r\n    .catch((error) => {\r\n        console.error(error.message);\r\n        dispatch(errorAction(error.message));\r\n    });\r\n}\r\nexport {\r\n    middlewareLogin,middlewareLoadUserData, middlewareLogOutUser\r\n}","import React from 'react';\r\nimport firebase from '../Firebase/Firebase';\r\n\r\nconst withFirebase = Component => props => (\r\n    <Component firebase = {firebase} {...props} />\r\n);\r\n\r\nexport default withFirebase;","import React,{useState} from 'react';\r\n\r\nexport default function(props) {\r\n    const [path] = useState(props.path);\r\n    return (\r\n            <div className = 'loaderBox'>\r\n                <img className = 'loader' src = {path} alt = 'loader'></img> \r\n                <p>Loading {props.type}</p>\r\n            </div>\r\n    )\r\n}","import {EventEmitter} from 'events';\r\nconst stream = new EventEmitter();\r\nexport default stream;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport eventEmitter from '../../EventEmitter';\r\nimport './registration.scss';\r\n\r\nimport withFirebase from '../../components/firebaseHOC';\r\n\r\n\r\nclass Registration extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        firebase: PropTypes.object.isRequired,\r\n    }\r\n\r\n    state = {\r\n        firebase: this.props.firebase,\r\n        error: null,\r\n    }\r\n\r\n    emailRef = null;\r\n    passwordRef = null;\r\n\r\n    setRefEmail = (node) => this.emailRef = node;\r\n    setRefPassword = (node) => this.passwordRef = node;\r\n\r\n    createUser = (event) => {\r\n\r\n        const email = this.emailRef.value;\r\n        const password = this.passwordRef.value;\r\n        const { firebase } = this.props;\r\n\r\n        firebase.registration(email, password)\r\n        .then(response => {\r\n            firebase.db.collection(\"users\").doc(response.user.uid).set({\r\n                'projects': [],\r\n                'email': email,\r\n            }).then(() => eventEmitter.emit('EventRegistrationCorrect', response))\r\n        })\r\n        .catch((error) => {\r\n        console.error(error.message);\r\n        this.setState({error: error.message});\r\n        });\r\n    };\r\n\r\n    render(){\r\n        let  { error } = this.state;\r\n\r\n        return (\r\n            <div className = 'RegistrationBox'>\r\n                <div  className = 'RegistrationForm'>\r\n                    <h3>Registration</h3>\r\n                    <form autoComplete = 'off' className = 'RegForm'>\r\n                        { error ?\r\n                            <p className = 'error'>{error}</p>\r\n                            : null\r\n                        }\r\n                        <span>E-mail</span>\r\n                        <input ref = {this.setRefEmail} type = 'text' />\r\n                        <span>Password</span>\r\n                        <input  autoComplete = \"off\" ref = {this.setRefPassword} type = 'password' />\r\n                        <input onClick = {this.createUser}\r\n                                className = 'loginButton'\r\n                                type = 'button'\r\n                                value = 'registration'\r\n                        />\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\nexport default withFirebase(Registration);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport eventEmitter from '../../EventEmitter';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nimport {middlewareLogin} from '../../redux/middleware/loadUserMiddleware';\r\n\r\nimport Loader from '../../components/loading/Loader';\r\nimport Registration from '../../components/Registration/Registration';\r\n\r\nimport {connect} from 'react-redux';\r\n\r\nimport './index.scss';\r\n\r\nclass Index extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        config: PropTypes.object,\r\n    }\r\n\r\n    state = {\r\n        title:  \"Constructor\",\r\n        registrationActive: false,\r\n        regStatus: false,\r\n        wrongEnter: false,\r\n        error: ''\r\n    }\r\n\r\n    statusRegistration = (event) => {\r\n        event.additionalUserInfo.isNewUser ?\r\n        this.setState({...this.state,\r\n                        regStatus: true,\r\n                        registrationActive: false,\r\n                        error: 'Account create!'\r\n                    })\r\n        : console.log('error registration');\r\n    }\r\n\r\n    showBox = (event) => {\r\n        this.setState ({\r\n            ...this.state,\r\n        registrationActive: this.state.registrationActive ? false : true\r\n        })\r\n    }\r\n\r\n    authTo = (event) => {\r\n            this.props.dispatch(middlewareLogin(this.emailImput.value, this.passwordImput.value));\r\n}\r\n    emailImput = null;\r\n    passwordImput = null;\r\n    emailRef = (node) => this.emailImput = node;\r\n    passwordRef = (node) => this.passwordImput = node;\r\n\r\n    render(){\r\n\r\n        if (this.props.active) return <Redirect to = '/Cabinet' />\r\n        else if (!this.props.active) {\r\n            let currentSelected = this.state.registrationActive;\r\n            return (\r\n                <div className = 'LoginPage flex-column'>\r\n                        <h1>{this.state.title}</h1>\r\n                        <div className = 'LoginBox'>\r\n                            <div className = 'LoginForm'>\r\n                                <h3>Connect form</h3>\r\n                                {\r\n                                    this.props.wrongEnter || this.state.regStatus ?\r\n                                    <p className = 'error'>{this.props.wrongEnter}</p>\r\n                                    : null\r\n                                }\r\n                                <p>E-mail</p>\r\n                                <input ref = {this.emailRef} type = 'text' />\r\n                                <p>Password</p>\r\n                                <input ref = {this.passwordRef} type = 'password' />\r\n                                <input \r\n                                    onClick = {this.authTo} \r\n                                    className = 'loginButton'\r\n                                    type = 'button'\r\n                                    value = 'enter' />\r\n                                <input\r\n                                    onClick = {this.showBox}\r\n                                    className = {currentSelected ? `loginButton selected`\r\n                                        : 'loginButton'}\r\n                                    type = 'button'\r\n                                    value = 'registration'\r\n                                    />\r\n                            </div>\r\n                        </div>\r\n                        {\r\n                            this.state.registrationActive ?\r\n                            <Registration auth = {this.props.auth} />\r\n                            : null\r\n                        }\r\n                </div>\r\n            )\r\n        } else  return <Loader path = '/img/loading.gif' type = 'session' />\r\n    }\r\n\r\n    componentDidMount = (e) => {\r\n        eventEmitter.on('EventRegistrationCorrect', this.statusRegistration);\r\n    }\r\n    componentWillUnmount = (e) => {\r\n        eventEmitter.off('EventRegistrationCorrect', this.statusRegistration);\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    console.log('state index');\r\n    return {\r\n        active: state.cabinet.active, \r\n        wrongEnter: state.cabinet.error\r\n    }\r\n  }\r\n\r\nexport default connect(mapStateToProps)(Index);","\r\nimport {errorAction, loadUserAction} from '../actions';\r\n\r\nconst middlewareDelete = item => async (dispatch,getState, {firebase}) => {\r\n    console.log('middleware');\r\n    await firebase.db.collection('users').doc(item.uid).get()\r\n    .then(user => user.data())\r\n    .then(data => {\r\n        return {id: data.id, projects: data.projects.filter(itemdb => itemdb.id !== item.id)};\r\n    })\r\n    .then(data => {\r\n        firebase.db.collection(\"users\").doc(item.uid).update({\r\n            \"projects\": data.projects\r\n        })\r\n        .then(response => {\r\n            dispatch(loadUserAction({uid: data.id, projects: data.projects}));\r\n        });\r\n    })\r\n    .catch((error) => {\r\n        console.error(error.message);\r\n        dispatch(errorAction(error.message));\r\n    });\r\n}\r\n\r\nexport default middlewareDelete;\r\n","import React, {useState} from 'react';\r\n\r\n\r\nfunction Icon(props){\r\n    const [path] = useState(props.path);\r\n    const [className] = useState(props.className ? props.className : null);\r\n    const [draggable] = useState(props.draggable ? true : false);\r\n\r\n    return (\r\n    <img\r\n        draggable = {draggable}\r\n        onClick = {props.onClick ? props.onClick : null}\r\n        className = {className}\r\n        title = {props.title ? props.title : null}\r\n        src = {path} alt = 'icon'>\r\n    </img>\r\n    )\r\n}\r\n\r\nexport default Icon;","import React from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport './header.scss';\r\n\r\nimport {middlewareLogOutUser} from '../../redux/middleware/loadUserMiddleware';\r\nimport {connect} from 'react-redux';\r\nimport {withRouter, NavLink} from 'react-router-dom';\r\n\r\nimport eventEmitter from '../../EventEmitter.js';\r\nimport Icon from '../Icon/icon';\r\n\r\n\r\nconst iconPath = require('../../config.json').CabinetIcon;\r\n\r\nclass Header extends React.Component {\r\n\r\n    static propTypes = {\r\n        title: PropTypes.string.isRequired,\r\n    };\r\n\r\n    state = {\r\n        title: this.props.title,\r\n    };\r\n\r\n    logOut = (event) => {\r\n        this.props.dispatch(middlewareLogOutUser(this.props.idUser));\r\n    };\r\n\r\n    redirect = (e) => {\r\n        if (this.props.location.pathname !== '/Cabinet/About')\r\n            this.props.history.push('/Cabinet/About');\r\n    };\r\n\r\n    add = (e) => {\r\n        eventEmitter.emit('EventChangeWorkMode',{action: 'newProject'});\r\n    };\r\n\r\n    render(){\r\n        return (\r\n            <header>\r\n                <div className = 'container'>\r\n                    <div className = 'flex-row'>\r\n                            <div className = 'header__CabinetInfo'>\r\n                                <Icon path = {iconPath} />\r\n                                <NavLink to = '/Cabinet'><h3>{this.state.title}</h3></NavLink>\r\n                            </div>\r\n                            {this.props.location.pathname === '/Cabinet' ?\r\n                                <div onClick = {this.add} className = 'header__newProject__AddButton'>\r\n                                    <Icon path = '/img/plus.png' />\r\n                                </div>\r\n                                : null\r\n                            }\r\n                                <div  className = 'Navigator'>\r\n                                    <Icon onClick = {this.redirect} title = 'about' path = '/img/about_logo.svg' />\r\n                                    <Icon onClick = {this.logOut} title = 'logOut' path = '/img/logOut.svg' />\r\n                                </div>\r\n                    </div>\r\n               </div>\r\n            </header>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect()(withRouter(Header));","import React, {useState} from 'react';\r\nimport eventEmitter from '../../EventEmitter';\r\n\r\nconst ImageItem = props => {\r\n\r\n    const [id] = useState(props.id);\r\n    const [urlRegular] = useState(props.urls.regular);\r\n    const [urlFull] = useState(props.urls.full);\r\n    const [isFull] = useState(props.isFull);\r\n\r\n    const showImageMenu = event => {\r\n       eventEmitter.emit(\"EventShowMenuImage\", {id: id, url: urlRegular, urlFull: urlFull});\r\n    }\r\n\r\n\r\n    return (\r\n        <div className = {props.selected ? 'ItemBox selected' : 'ItemBox'}>\r\n            <img\r\n                onClick = {showImageMenu}\r\n                src = {isFull ? urlFull : urlRegular}\r\n                alt = 'item'\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ImageItem;","import React,{Fragment} from 'react';\r\nimport isFetch from 'isomorphic-fetch';\r\nimport PropTypes from 'prop-types';\r\nimport eventEmitter from '../../EventEmitter.js';\r\n\r\nimport ImageItem from '../imageViewer/imageItem';\r\nimport Icon from '../Icon/icon';\r\n\r\nimport './modal.scss';\r\n\r\nclass ModalWindow extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        mode: PropTypes.string\r\n    }\r\n\r\n    state = {\r\n        workMode: this.props.workMode,\r\n        images: {\r\n            buttonSearchDisabled: false,\r\n            selectedItem: null, \r\n            showUrl: null, \r\n            images: null,\r\n            urlFull: null,\r\n            imageBoxView: false, \r\n            error: ''\r\n        },\r\n        newProject: {\r\n            validateName: false,\r\n            validateType: false,\r\n            disabled: true,\r\n            name: '',\r\n            type: 'empty'\r\n        },\r\n        imageMenuActive: false,\r\n        warning: {\r\n            lengthMax: 'Max length: 20 symbols',\r\n            lengthMin: 'Min length: 4 symbol',\r\n            type: 'Select type of webpage',\r\n        }\r\n    }\r\n\r\n    inputSearch = null;\r\n    inputSelect = null;\r\n\r\n    searchBackground = event => {\r\n\r\n        const api = 'https://api.unsplash.com/search/photos/?page=1&per_page=40&query=';\r\n        const search = this.inputSearch.value;\r\n        const token = \"421b12ae729e1f6e4a0cac207496874099ab8a738378ec07a8e2598b11201802\";\r\n\r\n        this.setState({...this.state, images: {...this.state.inages, buttonSearchDisabled: true}})\r\n\r\n        isFetch(`${api + search}&client_id=${token}`)\r\n        .then(response => {\r\n            if (response.ok) return response.json();\r\n            else throw new Error('request invalid');\r\n        })\r\n        .then(response => {\r\n\r\n            let {results} = response;\r\n            if (results.length)\r\n            this.setState({\r\n                ...this.state,\r\n                images: {\r\n                    ...this.state.images,\r\n                    imageBoxView: true,\r\n                    error: '',\r\n                    images: [...results],\r\n                    buttonSearchDisabled: false\r\n                },\r\n            });\r\n            else throw new Error('Photos not found');\r\n        })\r\n        .catch(error => {\r\n            console.error(error.message);\r\n            this.setState({\r\n                ...this.state,\r\n                images: {...this.state.images, error: error.message},\r\n                imageBoxView: false,\r\n                buttonSearchDisabled: false\r\n                });\r\n        });\r\n    }\r\n\r\n    showMenuImage = event => {\r\n        this.setState({\r\n            ...this.state, \r\n            imageMenuActive: true,\r\n            images: {\r\n                ...this.state.images,\r\n                selectedItem: event.id, \r\n                showUrl: event.url,\r\n                urlFull: event.urlFull\r\n\r\n            }\r\n        });\r\n    }\r\n\r\n    showImage = event => {\r\n\r\n        const {showUrl} = this.state.images;\r\n        // if (event.type === 'mouseenter')\r\n        eventEmitter.emit(\"EventImageView\", {action: true, target: showUrl ? showUrl : null});\r\n        // else  eventEmitter.emit(\"EventImageView\", {action: false, target: null});\r\n        event.stopPropagation();\r\n    }\r\n\r\n    setSelectedImage = event => {\r\n\r\n        eventEmitter.emit('EventSetBackgroundImage',{...this.state.images});\r\n    };\r\n\r\n    makeImageResultBox = (items) => {\r\n        if (!items) return null;\r\n        console.log('item');\r\n        return items.map((item,i) =>{\r\n           return <ImageItem \r\n                key = {`item${i}`} \r\n                id = {i}\r\n                selected = {this.state.images.selectedItem === i ? true : false} \r\n                isFull = {false}\r\n                urls = {{...item.urls}} \r\n            />\r\n        });\r\n    }\r\n\r\n    addNewProject = (event) => {\r\n        let mode = this.state[this.state.workMode];\r\n        if (mode.validateType &&  mode.validateName) {\r\n            eventEmitter.emit('EventAddProject',\r\n            {\r\n                title: this.state[this.state.workMode].name,\r\n                type: this.state[this.state.workMode].type\r\n            });\r\n\r\n            eventEmitter.emit('EventChangeWorkMode',{action: 'default'});\r\n        }\r\n    }\r\n\r\n    selectOption = (event) => {\r\n\r\n        let inputs = {...this.state[this.state.workMode]};\r\n        inputs.type = event.target.value;\r\n        inputs.validateType = inputs.type !== 'empty';\r\n        inputs.disabled = inputs.validateType && inputs.validateName ? false : true;\r\n        this.setState({\r\n            ...this.state,\r\n            [this.state.workMode]: inputs\r\n        });\r\n    }\r\n\r\n    validateName = (event) => {\r\n\r\n        let inputs = {...this.state[this.state.workMode]};\r\n        inputs.name = event.target.value;\r\n        let lengthInput = inputs.name.length;\r\n        inputs.validateName = lengthInput >= 4 && lengthInput < 20 ? true : false;\r\n        inputs.disabled = inputs.validateType && inputs.validateName ? false : true;\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            [this.state.workMode]: inputs\r\n        })\r\n    };\r\n\r\n    cancel = (event) => {\r\n\r\n        if (this.state.workMode === 'Search')\r\n            eventEmitter.emit(\"EventModalSearchOn\");\r\n        else  eventEmitter.emit('EventChangeWorkMode',{action: 'default'});\r\n    }\r\n\r\n    refSelect = (node) => this.inputSelect = node;\r\n    refSearch = node => this.inputSearch = node;\r\n\r\n    render(){\r\n\r\n        switch (this.state.workMode){\r\n            case 'newProject':\r\n                return (\r\n                    <div className = 'Modal'>\r\n                        <h3>Create new Project</h3>\r\n                        { this.state[this.state.workMode].name.length <= 3 ?\r\n                            <span className = 'warning'>{this.state.warning.lengthMin}</span> : null\r\n                        }\r\n                        { this.state[this.state.workMode].name.length >= 20 ?\r\n                            <span className = 'warning'>{this.state.warning.lengthMax}</span> : null\r\n                        }\r\n                        <input\r\n                            className = {this.state[this.state.workMode].validateName ? 'ready' : 'wrong'}\r\n                            value = {this.state[this.state.workMode].name}\r\n                            onChange = {this.validateName}\r\n                            type = 'text'\r\n                            placeholder = \"Project name\"\r\n                        />\r\n                        { !this.state[this.state.workMode].validateType ?\r\n                            <span className = 'warning'>{this.state.warning.type}</span> : null\r\n                        }\r\n                        <select onChange = {this.selectOption} >\r\n                            <option value = 'empty'>--------</option>\r\n                            <option value = 'landing'>Landing</option>\r\n                            <option value = 'portfolio'>Portfolio</option>\r\n                        </select>\r\n                        <input \r\n                            onClick = {this.addNewProject}\r\n                            className = 'acceptButton'\r\n                            disabled = {this.state[this.state.workMode].disabled}\r\n                            type = 'button'\r\n                            value = 'Submit'\r\n                        />\r\n                            <input onClick = {this.cancel} type ='button' value = 'Cancel' />\r\n                    </div>\r\n                )\r\n            case 'Search':\r\n                console.log('Search render');\r\n                return (\r\n                    <Fragment>\r\n                        <div className = 'Modal Modal-search'>\r\n                            <h3>Search background image</h3>\r\n                            { this.state.images.error ?\r\n                                <span className = 'error'>{this.state.images.error}</span> : null\r\n                            }\r\n                            <input ref = {this.refSearch} type = 'text' placeholder = \"Photo name\" />\r\n                            <input \r\n                                disabled = {this.state.images.buttonSearchDisabled} \r\n                                className = 'acceptButton' \r\n                                type = 'button' \r\n                                value = 'Search'\r\n                                onClick = {this.searchBackground}\r\n                            />\r\n                            <input onClick = {this.cancel} type ='button' value = 'Cancel' />\r\n                            {\r\n                                this.state.images.imageBoxView ?\r\n                                <div className = 'searchResultBox'>\r\n                                    {this.makeImageResultBox([...this.state.images['images']])}\r\n                                </div>\r\n                                : null\r\n                            }\r\n                        </div>\r\n                        {  this.state.imageMenuActive ?\r\n                            <div className = 'ActionModalSearch'>\r\n                            <button onClick = {this.showImage} className = 'actionModalSearch__view'>\r\n                                <Icon path = '/img/view.png' />\r\n                            </button>\r\n                            <button onClick = {this.setSelectedImage} className = 'actionModalSearch__settings'>\r\n                                <Icon path = '/img/settings.png' />\r\n                            </button>\r\n                            </div>\r\n                            : null\r\n                        }\r\n                    </Fragment>\r\n                )\r\n            default: return <Fragment></Fragment>\r\n        }\r\n    }\r\n\r\n    componentDidMount = event => {\r\n        if (this.state.workMode === 'Search')\r\n            eventEmitter.on('EventShowMenuImage', this.showMenuImage);\r\n    }\r\n\r\n    componentWillUnmount = event => {\r\n        if (this.state.workMode === 'Search')\r\n            eventEmitter.off('EventShowMenuImage', this.showMenuImage);\r\n    }\r\n}\r\n\r\nexport default ModalWindow;\r\n\r\n","import {createProjectAction, errorAction} from '../actions';\r\n\r\n\r\nconst middlewareCreateProject = (uid, list, title, type) => async (dispatch,getState, {firebase}) => {\r\n    let lastProject = [...list];\r\n    const lastIndex = lastProject.length  ? lastProject[lastProject.length-1].id + 1 : 0;\r\n    lastProject.push({\"id\": lastIndex, \"title\": title, \"type\": type, component: []});\r\n\r\n    await firebase.db.collection(\"users\").doc(uid).update({\r\n        'projects': lastProject,\r\n    })\r\n    .then (() => dispatch(createProjectAction(lastProject)))\r\n    .catch(error => {\r\n        console.error(error.message);\r\n        dispatch(errorAction(error.message));\r\n    })\r\n};\r\n\r\nexport {\r\n    middlewareCreateProject\r\n}","import React, {useState} from 'react';\r\nimport eventEmitter from '../../EventEmitter';\r\nimport {withRouter} from 'react-router-dom';\r\n\r\nfunction Item(props) {\r\n    const [id] = useState(props.id);\r\n    const [name] = useState(props.name);\r\n    const [type] = useState(props.type);\r\n\r\n\r\n    const build = event => {\r\n        props.history.push(`/Cabinet/Build/${id}`);\r\n        event.stopPropagation();\r\n    };\r\n\r\n    const deleteItem = event => {\r\n        eventEmitter.emit('EventDeleteItem',{id: props.id, name: props.name, type: props.type});\r\n        event.stopPropagation();\r\n    };\r\n\r\n    return (\r\n        <div className = 'item' data-id = {id}>\r\n            <p className = 'ProjectName'>{name}</p>\r\n            <p className = 'ProjectType'>{type}</p>\r\n            <div className = 'projectController'>\r\n            <input onClick = {build} className = 'projectControllerButton_enter' type = 'button' value = 'enter build' />\r\n            <input onClick = {deleteItem} className = 'projectControllerButton_delete' type = 'button' value = 'delete' />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(Item);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport {middlewareCreateProject} from '../../redux/middleware/createProjectMiddleware';\r\n\r\nimport './list.scss';\r\n\r\nimport Item from './Item';\r\nimport eventEmitter from '../../EventEmitter.js';\r\n\r\nclass List extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        children: PropTypes.shape({\r\n            projects: PropTypes.array.isRequired,\r\n           count: PropTypes.number.isRequired,\r\n        }),\r\n        list: PropTypes.array.isRequired,\r\n    }\r\n\r\n    state = {\r\n        redirect: false,\r\n    }\r\n\r\n    addNewProject = (item) => {\r\n        if (this.props.idUser) {\r\n            this.props.dispatch(middlewareCreateProject(this.props.idUser, this.props.list, item.title, item.type));\r\n        } else this.setState({...this.state, redirect: true});\r\n    }\r\n\r\n\r\n    makeList = (list) => {\r\n\r\n        return list.map (project => {\r\n\r\n            return(\r\n                <Item\r\n                    key = {project.id}\r\n                    id = {project.id}\r\n                    name = {project.title}\r\n                    type = {project.type}\r\n                />\r\n            )\r\n        });\r\n    }\r\n\r\n    render(){\r\n        if (this.state.redirect)\r\n            return <Redirect to = '/' />\r\n            else return (\r\n                    <div className = 'projectsList__list'>\r\n                        {this.makeList([...this.props.list])}\r\n                    </div>\r\n                )\r\n    }\r\n\r\n    componentWillMount = () =>\r\n        eventEmitter.on('EventAddProject',this.addNewProject);\r\n\r\n      componentWillUnmount = () =>\r\n        eventEmitter.off('EventAddProject',this.addNewProject);\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        idUser: state.cabinet.idUser,\r\n        list: [...state.cabinet.projects]\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(List);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nimport List from '../List/List.jsx';\r\n\r\nimport './ProjectsSection.scss';\r\n\r\nclass ProjectsSection extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        projects: PropTypes.array,\r\n    }\r\n\r\n    render(){\r\n        return (\r\n                <section className = 'projectsList'>\r\n                <div className = 'container'>\r\n                <div className = 'flex-column'>\r\n                        <div className = 'projectsList__about'>\r\n                            <h3>Your Projects</h3>\r\n                        </div>\r\n                        <List />\r\n                    </div>\r\n                </div>\r\n                </section>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default ProjectsSection;","import React,{Fragment} from 'react';\nimport PropTypes from 'prop-types';\nimport eventEmitter from '../../EventEmitter.js';\nimport {Redirect} from 'react-router-dom';\nimport withFirebase from '../../components/firebaseHOC';\n\nimport {middlewareLogOutUser} from '../../redux/middleware/loadUserMiddleware';\nimport middlewareDelete from '../../redux/middleware/middlewareDelete';\nimport Loader from '../../components/loading/Loader';\nimport {connect} from 'react-redux';\n\nimport Header from '../../components/header/Header';\nimport Modal from '../../components/modalWindow/ModalWindow';\nimport ProjectsSection from '../../components/ProjectsSection/ProjectsSection';\n\nimport './Cabinet.scss';\n\nconst title = require('../../config.json').title;\n\nclass Cabinet extends React.PureComponent {\n\n  static propTypes = {\n    firebase: PropTypes.object.isRequired\n  }\n\n  state = {\n    workMode: 'default',\n  }\n\n  logOut = event => {\n    this.props.dispatch(middlewareLogOutUser(this.props.idUser));\n  }\n\n  deletItem = event => {\n    this.props.dispatch(middlewareDelete({...event, uid: this.props.firebase.getCurrentUser().uid}));\n  }\n\n  changeWorkMode = event => {\n    this.setState ({\n      ...this.state,\n      workMode: event.action,\n    });\n  }\n\n  render(){\n    if (this.props.active){\n      return (\n        <Fragment>\n          <Header title = {title} idUser = {this.props.idUser} />\n          {(this.state.workMode === 'newProject') ? <Modal workMode = {this.state.workMode} /> : null}\n            <ProjectsSection />\n        </Fragment>\n      )\n    } else if (!this.props.firebase.getCurrentUser()) return <Redirect to = '/' />\n    else return <Loader path = '/img/loading.gif' type = 'Cabinet' />\n    }\n\n\n  componentDidMount = () => {\n    eventEmitter.on('EventDeleteItem', this.deletItem);\n    eventEmitter.on('EventChangeWorkMode', this.changeWorkMode);\n  }\n\n  componentWillUnmount = () => {\n    eventEmitter.off('EventDeleteItem', this.deletItem);\n    eventEmitter.off('EventChangeWorkMode', this.changeWorkMode);\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    idUser: state.cabinet.idUser,\n    projects: [...state.cabinet.projects],\n    active: state.cabinet.active\n  }\n}\n\n\n\nexport default connect(mapStateToProps)(withFirebase(Cabinet));\n","import React, {Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nimport withFirebase from '../../components/firebaseHOC';\r\nimport Header from '../../components/header/Header';\r\n\r\nimport './about.scss';\r\n\r\nclass About extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        config: PropTypes.object.isRequired,\r\n        firebase: PropTypes.object.isRequired,\r\n    }\r\n\r\n    state = {\r\n        config: this.props.config\r\n    };\r\n\r\n    render(){\r\n        if (this.props.firebase.getCurrentUser()) {\r\n            const { config } = this.state;\r\n            return (\r\n                <Fragment>\r\n                    <Header title = {config.title} />\r\n                    <section className = 'About'>\r\n                        <div className = 'container'>\r\n                            <div className = 'col-12'>\r\n                                <div className = 'information'>\r\n                                <img alt = 'img' className = 'logoAbout' src = {process.env.PUBLIC_URL + '/img/about.jpg'}/>\r\n                                    <p className ='developer'><span>Developer:</span> {config.about.developer}</p>\r\n                                    <p className = 'year'><span>Year:</span> {config.about.year}</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </section>\r\n                </Fragment>\r\n            )\r\n        } else return <Redirect to = '/' />\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default withFirebase(About);","import {errorAction, loadUpdateCurrentProject} from '../actions';\r\n\r\nconst updateMiddleware = (item) => async (dispatch,getState, {firebase}) => {\r\n    console.log('update');\r\n\r\n    let newProjects = item.projects.map(project => {\r\n        if (project.id === item.idProject) { project.component = [...item.component] }\r\n        return project;\r\n    });\r\n    await firebase.db.collection(\"users\").doc(item.uid).update({\r\n        'projects': newProjects\r\n    })\r\n    .then(response => {\r\n        let project = item.projects.find(itemdb => itemdb.id === item.idProject);\r\n        dispatch(loadUpdateCurrentProject({component: [...project.component], idProject: item.idProject}))\r\n    })\r\n    .catch(error => dispatch(errorAction(error.message)));\r\n};\r\n\r\nexport default updateMiddleware;","import React,{useState} from 'react';\r\nimport eventEmitter from '../../EventEmitter';\r\n\r\nimport './imageViewer.scss';\r\n\r\nfunction ImageViewer(props){\r\n\r\n    let [path] = useState(props.path);\r\n\r\n    const closeViewer = event => {\r\n        eventEmitter.emit(\"EventImageView\", { action: false, target: null});\r\n        event.stopPropagation();\r\n    }\r\n\r\n    return (\r\n        <div onClick = {closeViewer} className = 'ImageViewer'>\r\n            <img src = {path} alt = 'fullImage' />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ImageViewer;","import React, {Fragment} from 'react';\r\nimport eventEmitter from '../../EventEmitter';\r\nimport PropTypes from 'prop-types';\r\nimport { SketchPicker } from 'react-color';\r\nimport './instrumentsPanel.scss';\r\n\r\nimport Icon from '../Icon/icon';\r\n\r\nclass InstrumentsPanel extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        instrumentPanel:  PropTypes.object.isRequired,\r\n        editComponent: PropTypes.object.isRequired\r\n    };\r\n\r\n    state = {\r\n        instrumentPanel: {...this.props.instrumentPanel},\r\n        componentsStats: {\r\n            content: null,\r\n            fontSize: null,\r\n            color: null,\r\n            backgroundImage: null,\r\n            image: null,\r\n            coords: {left: null, top: null} // x, y\r\n        },\r\n        colorPickerAvtive: false,\r\n        images: null,\r\n    };\r\n\r\n    updateSizeText = eventSize => {\r\n        this.setState({\r\n            ...this.state, \r\n            instrumentPanel: {...this.state.instrumentPanel},\r\n            componentsStats: {...this.state.componentsStats, fontSize: eventSize}\r\n        });\r\n    };\r\n\r\n    closePanel = event => {\r\n        eventEmitter.emit('EventClosePanel', {close: false});\r\n    };\r\n\r\n    setSize = event => {\r\n        // let {fontSize} = this.state.componentsStats;\r\n        let {idComponent} = this.state.instrumentPanel;\r\n        let size = event.target.value > 200 ? 200 : event.target.value;\r\n        event.stopPropagation();\r\n        this.setState({\r\n            ...this.state, \r\n            instrumentPanel: {...this.state.instrumentPanel},\r\n            componentsStats: {...this.state.componentsStats,fontSize: size}\r\n        },\r\n            () => eventEmitter.emit(`EventChangeSizeText${idComponent}`, {size: size })\r\n        );\r\n    };\r\n\r\n    setContent = event => {\r\n        let {idComponent} = this.state.instrumentPanel;\r\n        let contentValue = event.target.value;\r\n        this.setState({\r\n            ...this.state, \r\n            instrumentPanel: {...this.state.instrumentPanel},\r\n            componentsStats: {...this.state.componentsStats,content: contentValue}\r\n        },\r\n        () => eventEmitter.emit(`EventChangeContentText${idComponent}`,{content: contentValue}));\r\n        event.stopPropagation();\r\n    };\r\n\r\n    updatePosition = eventItem => {\r\n\r\n        this.setState({\r\n            ...this.state, \r\n            componentsStats: {\r\n                ...this.state.componentsStats,\r\n                coords: {\r\n                    ...this.state.componentsStats.coords,\r\n                    left: eventItem.x,\r\n                    top: eventItem.y\r\n                }\r\n            }\r\n        });\r\n    };\r\n\r\n    setColor = event => {\r\n        event.stopPropagation();\r\n        this.setState({...this.state, colorPickerAvtive: this.state.colorPickerAvtive ? false : true});\r\n    };\r\n\r\n    handleChangeComplete = event => {\r\n\r\n        const {rgb} = event;\r\n        let colorRGB = `rgb(${rgb.r},${rgb.g},${rgb.b},${rgb.a})`;\r\n\r\n        let {idComponent} = this.state.instrumentPanel;\r\n        if (this.state.instrumentPanel.target === 'background')\r\n            eventEmitter.emit('EventChangeColor', colorRGB);\r\n\r\n        else if (this.state.instrumentPanel.target === 'text') {\r\n            this.setState({\r\n                ...this.state,\r\n                componentsStats: {...this.state.componentsStats,color: colorRGB}\r\n            },\r\n            () => eventEmitter.emit(`EventChangeColorText${idComponent}`, colorRGB));\r\n        }\r\n    };\r\n\r\n    saveChanges = event => {\r\n        eventEmitter.emit(\"EventSaveChangesComponent\", {\r\n            ...this.state.componentsStats,\r\n            type: this.state.instrumentPanel.target\r\n        });\r\n    }\r\n\r\n    searchImage = event => {\r\n        eventEmitter.emit('EventModalSearchOn');\r\n    };\r\n\r\n    makePanelInstruments = (type) => {\r\n\r\n        let {fontSize} = this.state.componentsStats;\r\n            switch (type){\r\n                case 'text':\r\n                    return (\r\n                        <Fragment>\r\n                        <p className = 'titleInstument'>Color: </p>\r\n                        <input onClick = {this.setColor} className = 'button_switchColor' type = 'button' value = 'color pick' />\r\n                        <p className = 'titleInstument'>Text size: </p>\r\n                        <input \r\n                            onChange = {this.setSize} \r\n                            type=\"number\"\r\n                            min = '10' max = '200'\r\n                            value = {fontSize ? fontSize : 120 }\r\n                        />\r\n                            { this.state.colorPickerAvtive ?\r\n                                <SketchPicker\r\n                                onChangeComplete={this.handleChangeComplete}\r\n                                />\r\n                                : null\r\n                            }\r\n                        <p className = 'titleInstument'>Content: </p>\r\n                        <input onChange = {this.setContent} maxLength = '20' type = 'text' defaultValue = 'Title' />\r\n                        <input onClick = {this.saveChanges} className = 'saveButtonInstument' type = 'button' value = 'save changes' />\r\n                        </Fragment>\r\n                )\r\n                case 'background': \r\n                    return (\r\n                        <Fragment>\r\n                        <p className = 'titleInstument'>Color: </p>\r\n                        <input onClick = {this.setColor} className = 'button_switchColor' type = 'button' value = 'color pick' />\r\n                            { this.state.colorPickerAvtive ?\r\n                                <SketchPicker\r\n                                onChangeComplete={this.handleChangeComplete}\r\n                                />\r\n                                : null\r\n                            }\r\n                            <input onClick = {this.searchImage} className = 'ImageSearchButton' type = 'button' value = 'background-image' />\r\n                            <input className = 'saveButtonInstument' type = 'button' value = 'save changes' />\r\n                        </Fragment>\r\n                    )\r\n                default: return <p className = 'warningInstruments'>Select elements for accses edit instruments</p>\r\n            }\r\n    };\r\n\r\n    componentDidUpdate = (oldProps, oldState) => {\r\n        let targetBool = oldState.instrumentPanel.target !== this.props.instrumentPanel.target;\r\n        let idBool = oldState.instrumentPanel.idComponent !== this.props.instrumentPanel.idComponent;\r\n        console.log(this.props.instrumentPanel);\r\n        if (idBool || targetBool)\r\n            this.setState({\r\n                ...this.state,\r\n                colorPickerAvtive: false,\r\n                instrumentPanel: {...this.props.instrumentPanel}\r\n            })\r\n        return true;\r\n    };\r\n\r\n    componentDidMount = event => {\r\n        eventEmitter.on(\"EventUpdateSizeText\", this.updateSizeText);\r\n        eventEmitter.on(\"EventUpdatePosition\", this.updatePosition);\r\n    };\r\n\r\n    componentWillUnmount = event => {\r\n        eventEmitter.off(\"EventUpdateSizeText\", this.updateSizeText);\r\n    };\r\n\r\n    render(){\r\n        let { instrumentActive } = this.state.instrumentPanel;\r\n        return (\r\n            <Fragment>\r\n                <div  className = 'instumentsPanel'>\r\n                <button onClick = {this.closePanel} className = 'closeInstrumentsPanel'><Icon path = '/img/close.svg' /></button>\r\n                    <h3>Instruments</h3>\r\n                    {\r\n                        instrumentActive ? \r\n                        <p className = 'TextComponent'>{this.state.instrumentPanel.target}</p>\r\n                        : null\r\n                    }\r\n                    {\r\n                        instrumentActive ?\r\n                        <div  className= 'instuments'>{this.makePanelInstruments(this.state.instrumentPanel.target)}</div>\r\n                        : null\r\n                    }\r\n                </div>\r\n            </Fragment>\r\n        )\r\n    };\r\n};\r\n\r\nexport default InstrumentsPanel;","import React, {useEffect, useState, useRef} from 'react';\r\nimport eventEmitter from '../../../EventEmitter';\r\nimport styled from 'styled-components';\r\n\r\n\r\nconst Background = styled.div`\r\n    position: relative;\r\n    width: 100%;\r\n    height: 95vh;\r\n    background-size: cover;\r\n    background-color: ${props => props.backgroundColor};\r\n    background-image: url(${props => props.backgroundImage});\r\n`;\r\n\r\nconst BackgroundComponent = props => {\r\n\r\n    const [count, setCount] = useState(0);\r\n    let boxComponent = React.createRef();\r\n    let linkRefBox = null;\r\n    let [backgroundColor, setBgColor] = useState(props.background);\r\n    let [backgroundImage, setImage] = useState(props.backgroundImage ? props.backgroundImage : null);\r\n\r\n\r\n\r\n\r\n    const saveWidth = event => {\r\n        setCount(count + 1);\r\n        boxComponent.current.focus();\r\n        let boxInform =  boxComponent.current.getBoundingClientRect();\r\n        eventEmitter.emit('EventSaveWidth', {width: boxInform.width, height: boxInform.height});\r\n    }\r\n\r\n    const openBgInstruments = event => {\r\n        console.log(Background);\r\n        eventEmitter.emit('EventInstrumentPanel',{target: 'background'});\r\n        event.stopPropagation();\r\n    }\r\n\r\n    const changeColor = color => {\r\n        setBgColor(color);\r\n    }\r\n\r\n    const setBackgroundImage = event => {\r\n        const {urlFull} = event;\r\n        setImage(urlFull);\r\n    };\r\n\r\n    const didUpdate = event => {\r\n        console.log('didUpdate');\r\n        if (count === 0 ) saveWidth();\r\n        eventEmitter.on('EventChangeColor', changeColor);\r\n        eventEmitter.on('EventSetBackgroundImage', setBackgroundImage);\r\n        return () => {\r\n            eventEmitter.off('EventChangeColor', changeColor);\r\n            eventEmitter.off('EventSetBackgroundImage', setBackgroundImage);\r\n        }\r\n    }\r\n\r\n    useEffect(didUpdate);\r\n    return (\r\n        <Background\r\n            ref  = {boxComponent}\r\n            onClick={openBgInstruments}\r\n            backgroundColor = {backgroundColor}\r\n            backgroundImage = {backgroundImage}\r\n        >\r\n            {props.children}\r\n        </Background>\r\n    )\r\n}\r\n\r\nexport default BackgroundComponent;","\r\nimport React, {useEffect, useState} from 'react';\r\nimport eventEmitter from '../../../EventEmitter';\r\nimport styled from 'styled-components';\r\n\r\n\r\nconst Title = styled.h1.attrs(props => ({\r\n    style: {\r\n        display: props.shadowDisplay ? 'none' : 'block',\r\n        left: props.coordX ? props.coordX : '50%',\r\n        top:  props.coordY,\r\n}}))`\r\n    position: absolute;\r\n    transform: translate(-50%);\r\n    font-size: ${props => props.size};\r\n    color: ${props => props.textColor};\r\n    text-align: center;\r\n    margin: 0;\r\n`;\r\n\r\n// left: ${props => props.coordX ? props.coordX : '50%'};\r\n// top:  ${props => props.coordY};\r\n\r\nconst TextComponent = props =>  {\r\n\r\n    const [id] = useState(props.id);\r\n\r\n    console.log ('text');\r\n    const [sizeParenBox] = useState({...props.sizeParenBox});\r\n\r\n    let [colorText, setColorText] = useState(props.color);\r\n    let [sizeText, setSizeText] = useState(props.size ? props.size : 120);\r\n    let [contentText, setText] = useState(props.children);\r\n    const [shiftCoords, setShiftCoords] = useState(null)\r\n    const [dragNdrop, setDragNdrop] = useState(null);\r\n\r\n    const openTitleInstruments = event => {\r\n\r\n        eventEmitter.emit(`EventInstrumentPanel`,{\r\n            target: 'text',\r\n            id: id,\r\n            sizeTextValue: sizeText\r\n        });\r\n        event.stopPropagation();\r\n    }\r\n\r\n    const changeColorText = color => {\r\n        setColorText(color);\r\n    }\r\n\r\n    const changeSizeText = eventSize => {\r\n        const {size} = eventSize;\r\n        setSizeText(size);\r\n    }\r\n\r\n    const changeContentText = eventContent => {\r\n        const {content} = eventContent;\r\n        setText(content);\r\n    }\r\n\r\n\r\n    const didUpdate = event => {\r\n        eventEmitter.on(`EventChangeColorText${id}`, changeColorText);\r\n        eventEmitter.on(`EventChangeSizeText${id}`, changeSizeText);\r\n        eventEmitter.on(`EventChangeContentText${id}`, changeContentText);\r\n        return () => {\r\n            eventEmitter.off(`EventChangeColorText${id}`, changeColorText);\r\n            eventEmitter.off(`EventChangeSizeText${id}`, changeSizeText);\r\n            eventEmitter.off(`EventChangeContentText${id}`, changeContentText);\r\n        }\r\n    }\r\n\r\n    const saveCoords = event => {\r\n\r\n        let rect = event.target.getBoundingClientRect();\r\n        let left = rect.left;\r\n        let top = rect.top;\r\n        let width = rect.width;\r\n        let height = rect.height;\r\n        setShiftCoords({x: event.pageX - left - width/2, y: event.pageY - top + height/2.8});\r\n\r\n        event.stopPropagation();\r\n    }\r\n\r\n    const moveText = event => {\r\n\r\n        let coordX = event.pageX - shiftCoords.x;\r\n        let coordY = event.pageY - shiftCoords.y;\r\n        console.log(Title);\r\n        coordX = coordX <= 130 ? 130 : coordX;\r\n        coordY = coordY <= 0 ? 0 : coordY;\r\n        console.log(sizeParenBox);\r\n        let convertToPercentX = (coordX * 100) / sizeParenBox.width;\r\n        let convertToPercentY = (coordY * 100) / sizeParenBox.height;\r\n\r\n        const position = {\r\n            x: convertToPercentX + '%', \r\n            y: convertToPercentY + '%', \r\n            shadowDisplay: event.type === 'drag' ? true : false\r\n        };\r\n        setDragNdrop(position);\r\n        \r\n        if (event.type === 'dragend') \r\n            eventEmitter.emit('EventUpdatePosition', position);\r\n        event.stopPropagation();\r\n    }\r\n\r\n    const weelResizeText = event => {\r\n\r\n        if (event.shiftKey && event.deltaY === -100) {\r\n            let counter = sizeText + 1;\r\n            counter = counter > 200 ? 200 : counter;\r\n            setSizeText(counter);\r\n            eventEmitter.emit('EventUpdateSizeText', counter);\r\n        }\r\n\r\n        if (event.shiftKey && event.deltaY === 100) {\r\n            let counter = sizeText - 1;\r\n             counter = counter <= 10 ? 10 : counter;\r\n             setSizeText(counter);\r\n             eventEmitter.emit('EventUpdateSizeText', counter);\r\n            }\r\n        event.stopPropagation();\r\n    }\r\n    useEffect(didUpdate);\r\n\r\n    return (\r\n        <Title\r\n            onClick={openTitleInstruments}\r\n            textColor = {colorText ? colorText : 'red'}\r\n            size = {sizeText ? sizeText + 'px' : '120px'}\r\n            draggable = {true}\r\n            onMouseDown = {saveCoords}\r\n            onDrag   = {moveText}\r\n            onDragEnd = {moveText}\r\n            onWheel = {weelResizeText}\r\n            coordX = {dragNdrop ? dragNdrop.x : null}\r\n            coordY = {dragNdrop ? dragNdrop.y : null}\r\n            shadowDisplay = {dragNdrop ? dragNdrop.shadowDisplay : false}\r\n        >\r\n            {contentText}\r\n        </Title>\r\n    )\r\n}\r\n\r\nexport default TextComponent;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport TextComponent from '../buildComponents/components/Text';\r\nimport BackgroundComponent from '../buildComponents/components/Background';\r\n\r\nimport eventEmitter from '../../EventEmitter';\r\n\r\nimport './buildMenu.scss';\r\n\r\nclass BuildMenu extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        component: PropTypes.object\r\n    }\r\n\r\n    state = {\r\n        component: {...this.props.component},\r\n        sizeParenBox: {...this.props.sizeParenBox},\r\n        title: 'Title'\r\n    }\r\n\r\n    addText = event => {\r\n        let id = this.props.countComponents;\r\n        let component = [<TextComponent sizeParenBox = {{...this.props.sizeParenBox}} id = {id} key = {`text${id}`}>{this.state.title}</TextComponent>];\r\n        eventEmitter.emit('EventBuildHeaderComponents',{target: 'Header', type: 'text', component: component});\r\n        event.stopPropagation();\r\n    }\r\n\r\n    addBackground = event => {\r\n        let id = this.props.countComponents;\r\n        let background = [<BackgroundComponent id = {id} key = {`bg${id}`}/>];\r\n        eventEmitter.emit('EventBuildHeaderComponents',{target: 'Header', type: 'background', component: background});\r\n\r\n        event.stopPropagation();\r\n    }\r\n\r\n    render(){\r\n        console.log('menuBuild');\r\n        return (\r\n            <div className = 'ComponentsMenu'>\r\n                <button onClick = {this.addBackground} className = 'ImageTool CompoentnsMenu_button' ><span>Image</span></button>\r\n                <button onClick = {this.addText} className = 'TextTool CompoentnsMenu_button' ><span>Text</span></button>\r\n                <button \r\n                    disabled = {this.state.component.name !== 'Header' ? false : true}\r\n                    className = 'ButtonTool CompoentnsMenu_button' >\r\n                    <span>Button</span>\r\n                </button>\r\n                <button className = 'VideoTool CompoentnsMenu_button' ><span>Video</span></button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default BuildMenu;","import React,{Fragment} from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Icon from '../Icon/icon';\r\nimport BuildMenu from '../componentsBuildMenu/BuildMenu';\r\n\r\n\r\nconst ControllersBox = styled.div\r\n    .attrs(props =>({\r\n        style: {\r\n                left: props.coordX,\r\n                top: props.coordY,\r\n        }\r\n    }))\r\n    `position: absolute;\r\n    display: ${props => props.shadowDisplay}\r\n    `;\r\n\r\n\r\nclass Controllers extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        menuActive: PropTypes.bool,\r\n    }\r\n\r\n    state = {\r\n        viewComponentMenu: false,\r\n        shiftX: 0,\r\n        shiftY: 0,\r\n        coordsX: '50%',\r\n        coordsY: '0',\r\n        shadowDisplay: 'block'\r\n    }\r\n\r\n    componentMenu = (event) => {\r\n        this.setState({viewComponentMenu: this.state.viewComponentMenu ? false : true})\r\n    }\r\n\r\n    saveCoords = event => {\r\n        let left = this.controlBox.getBoundingClientRect().left;\r\n        let top = this.controlBox.getBoundingClientRect().top;\r\n        this.setState({...this.state, shiftX: event.pageX - left, \r\n        shiftY: event.pageY - top + 55 });\r\n\r\n        event.stopPropagation();\r\n    }\r\n\r\n    drag = event => {\r\n        if (!this.state.viewComponentMenu)\r\n            this.setState({\r\n                ...this.state,\r\n                coordsX: event.pageX - this.state.shiftX + 'px', \r\n                coordsY: event.pageY - this.state.shiftY + 'px',\r\n                shadowDisplay: event.type === 'drag' ? 'none' : 'block'\r\n            });\r\n        event.stopPropagation();\r\n    }\r\n\r\n    controlBox = null;\r\n    refControll = (node) => this.controlBox = node;\r\n\r\n\r\n    render(){\r\n\r\n        return (\r\n            <Fragment>\r\n            { this.props.menuActive ?\r\n                <ControllersBox\r\n                ref = {this.refControll}\r\n                className = 'ControllersEditComponent'\r\n                coordX = {this.state.coordsX}\r\n                coordY = {this.state.coordsY}\r\n                draggable = {!this.state.viewComponentMenu}\r\n                onMouseDown = {this.saveCoords}\r\n                onClick = {this.componentMenu}\r\n                onDrag   = {this.drag}\r\n                onDragEnd = {this.drag}\r\n                shadowDisplay = {this.state.shadowDisplay}\r\n                >\r\n                    <Icon\r\n                        draggable = {true}\r\n                        onClick = {this.componentMenu}\r\n                        className = 'addButton'\r\n                        path = '/img/addButton.png'\r\n                    />\r\n                    {this.state.viewComponentMenu ? \r\n                        <BuildMenu\r\n                            sizeParenBox = {this.props.sizeParenBox}\r\n                            countComponents = {this.props.countComponents}\r\n                            component = {{...this.props.component}}\r\n                        /> : null\r\n                    }\r\n                </ControllersBox>\r\n                : null\r\n            }\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Controllers;","import React, {Fragment} from 'react';\r\nimport eventEmitter from '../../../EventEmitter';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nimport BackgroundComponent from '../../buildComponents/components/Background';\r\nimport Controllers from '../../controllers/controllers';\r\n\r\n\r\nimport './headerBuild.scss';\r\n\r\nclass HeaderBuild extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        id: PropTypes.number.isRequired,\r\n    }\r\n\r\n    state = {\r\n        idProject: this.props.id,\r\n        component: {...this.props.children},\r\n        sizeParenBox: null,\r\n    }\r\n\r\n    saveWidth = eventItem => {\r\n        this.setState({sizeParenBox: {...eventItem}});\r\n    };\r\n\r\n\r\n    changeMode = (event) => {\r\n        if (!this.props.editStart) {\r\n            let rect = event.currentTarget.getBoundingClientRect();\r\n            const width = rect.width;\r\n            const height = rect.height;\r\n        eventEmitter.emit('EventModeEdit', {...this.state, width: width, height: height});\r\n        }\r\n    }\r\n\r\n    refBox = null;\r\n    refBackground = node => this.refBox = node;\r\n\r\n    render() {\r\n\r\n        console.log('header');\r\n        return (\r\n            <Fragment>\r\n                <div onClick = {this.changeMode} className = 'Header'>\r\n                    <BackgroundComponent background = 'grey'>\r\n                    {  this.props.children.build.component && this.props.children.build.type === 'text'  ?\r\n                            this.props.children.build.component : null\r\n                    }\r\n                    </BackgroundComponent>\r\n                    {!this.props.editStart ? <p className = 'warningEdit'>Click for start edit</p> : null}\r\n                    {!this.state.readyBuild ? \r\n                        <Controllers\r\n                            countComponents = {this.props.countComponents}\r\n                            menuActive = {this.props.menuActive}\r\n                            component = {{...this.state.component}}\r\n                            sizeParenBox = {this.state.sizeParenBox}\r\n                            mainWidth = {this.props.children.mainBoxWidth}\r\n                            mainHeight = {this.props.children.mainBoxHeight}\r\n\r\n                        />\r\n                        : null}\r\n                </div>\r\n            </Fragment>\r\n        )\r\n    }\r\n\r\n    componentDidMount = event => {\r\n        eventEmitter.on('EventSaveWidth', this.saveWidth);\r\n    }\r\n\r\n    componentWillUnmount = event => {\r\n        eventEmitter.off('EventSaveWidth', this.saveWidth);\r\n    }\r\n}\r\nexport default HeaderBuild;","import React,{Fragment} from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport {Redirect} from 'react-router-dom';\r\nimport eventEmitter from '../../EventEmitter';\r\n\r\nimport {loadCurrentProjectAction, exitProjectAction} from '../../redux/actions';\r\nimport updateMiddleware from '../../redux/middleware/updateMiddleware';\r\nimport withFirebase from '../../components/firebaseHOC';\r\nimport {connect} from 'react-redux';\r\n\r\nimport ImageViewer from '../../components/imageViewer/imageViewer';\r\nimport Loader from '../../components/loading/Loader';\r\nimport Header from '../../components/header/Header';\r\nimport InstrumentsPanel from '../../components/instrumentsPanel/InstrumentsPanel';\r\nimport ModalWindow from '../../components/modalWindow/ModalWindow';\r\nimport HeaderBuild from '../../components/buildComponents/header/headerBuild';\r\n\r\nimport './build.scss';\r\n\r\n\r\nclass Build extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        param: PropTypes.string,\r\n        match: PropTypes.shape({\r\n            params: PropTypes.shape({\r\n                param: PropTypes.string.isRequired\r\n            }).isRequired\r\n        }).isRequired\r\n    }\r\n\r\n    state = {\r\n            idProject: parseInt(this.props.match.params.param),\r\n            typeProject: null,\r\n            editComponent: {\r\n                name: null,\r\n                build: {\r\n                    target: null,\r\n                    type: null,\r\n                    component: []\r\n                },\r\n                edit: false\r\n            },\r\n            changeEdit: false,\r\n            instrumentPanel: {\r\n                colorPickerAvtive: false,\r\n                instrumentActive: false,\r\n                target: '',\r\n                idComponent: null,\r\n            },\r\n            menuActive: false,\r\n            editStart: false,\r\n            modalSearch: false,\r\n            modalImageViewer: {action: false, image: null },\r\n        }\r\n\r\n    modalSearchOn = event => {\r\n        this.setState({...this.state, modalSearch: this.state.modalSearch ? false : true});\r\n    }\r\n\r\n    imageViewerSwitch = event => {\r\n        this.setState({\r\n            ...this.state,\r\n            modalImageViewer: {\r\n                ...this.state.modalImageViewer, \r\n                action: event.action, \r\n                target: event.target\r\n            }\r\n        });\r\n    };\r\n\r\n    workModeEdit = itemEvent => {\r\n        if (!this.state.editStart || this.state.changeEdit)\r\n        this.setState({\r\n            ...this.state,\r\n            idProject: itemEvent.idProject,\r\n            editComponent: {\r\n                ...itemEvent.component,\r\n                mainBoxWidth: itemEvent.width,\r\n                mainBoxHeight: itemEvent.height\r\n            },\r\n            menuActive: true,\r\n            editStart: true\r\n        });\r\n\r\n    }\r\n\r\n    openInstrument = itemEvent => {\r\n        console.log(itemEvent);\r\n        if (this.state.editStart)\r\n        this.setState({\r\n            ...this.state,\r\n            instrumentPanel: {\r\n                ...this.state.instrumentPanel,\r\n                instrumentActive: true,\r\n                sizeTextValue: itemEvent.sizeTextValue,\r\n                idComponent: itemEvent.id,\r\n                target: itemEvent.target\r\n            }\r\n        })\r\n    }\r\n\r\n    closePanel = event => {\r\n        this.setState({\r\n            ...this.state,\r\n            instrumentPanel: {\r\n                ...this.state.instrumentPanel,\r\n                colorPickerAvtive: false,\r\n                instrumentActive: event.close\r\n            }\r\n        });\r\n    };\r\n\r\n    addHeaderComponent = itemEvent => {\r\n\r\n        let {component} = this.state.editComponent.build;\r\n        this.setState({\r\n            ...this.state,\r\n            editComponent: {\r\n                ...this.state.editComponent,\r\n                build: {\r\n                    target: itemEvent.target,\r\n                    type: itemEvent.type,\r\n                    component: [...component, ...itemEvent.component]},\r\n            },\r\n        });\r\n    };\r\n\r\n    saveChangesComponent = itemEvent => {\r\n        \r\n        let componentArray = {...itemEvent, name: this.state.editComponent.name};\r\n\r\n        this.props.dispatch(updateMiddleware({\r\n            uid: this.props.idUser,\r\n            projects: [...this.props.currentProject],\r\n            component: [componentArray], \r\n            idProject: this.state.idProject}));\r\n    };\r\n\r\n\r\n    render(){\r\n        let { instrumentActive } = this.state.instrumentPanel;\r\n        if (this.props.active && this.props.loadProject){\r\n            return (\r\n                <Fragment>\r\n                {   this.state.modalImageViewer.action ?\r\n                    <ImageViewer path = {this.state.modalImageViewer.target} /> : null\r\n                }\r\n                {this.state.modalSearch ?\r\n                    <ModalWindow workMode = 'Search' /> : null\r\n                }\r\n                { instrumentActive ?\r\n                    <InstrumentsPanel\r\n                        editComponent =  {{...this.state.editComponent}}\r\n                        instrumentPanel = {{...this.state.instrumentPanel}}\r\n                    />\r\n                    : null\r\n                }\r\n                    <Header title = \"Constructor\"  />\r\n                    <HeaderBuild\r\n                            editStart = {this.state.editStart}\r\n                            countComponents = {this.state.editComponent.build.component.length}\r\n                            menuActive = {this.state.menuActive}\r\n                            id = {this.state.idProject}\r\n                    >\r\n                        {{...this.state.editComponent, name: 'Header'}}\r\n                    </HeaderBuild>\r\n                </Fragment>\r\n            )\r\n        } else if (!this.props.firebase.getCurrentUser()) return <Redirect to = '/' />\r\n        else return <Loader path = '/img/loading.gif' type = 'build' />\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevProps.loadProject === this.props.loadProject && this.props.haveUpdateLoading) {\r\n            let current =  this.props.currentProject.find(item => item.id === this.state.idProject)\r\n            this.props.dispatch(loadCurrentProjectAction({\r\n                id: current.id,\r\n                typeProject: current.type,\r\n                component: [...current.component]\r\n            }))\r\n        }\r\n    }\r\n    \r\n\r\n    componentDidMount = () => {\r\n\r\n        if (this.props.active && !this.props.loadProject && this.props.haveUpdateLoading) {\r\n            let current =  this.props.currentProject.find(item => item.id === this.state.idProject)\r\n            this.props.dispatch(loadCurrentProjectAction({\r\n                id: current.id,\r\n                typeProject: current.type,\r\n                component: [...current.component]\r\n            }))\r\n        };\r\n        eventEmitter.on('EventBuildHeaderComponents', this.addHeaderComponent);\r\n        eventEmitter.on('EventSaveChangesComponent', this.saveChangesComponent);\r\n        eventEmitter.on('EventClosePanel', this.closePanel);\r\n        eventEmitter.on('EventModalSearchOn', this.modalSearchOn);\r\n        eventEmitter.on('EventInstrumentPanel', this.openInstrument);\r\n        eventEmitter.on('EventImageView', this.imageViewerSwitch);\r\n        eventEmitter.on('EventModeEdit', this.workModeEdit);\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        console.log('componentWillUnmount');\r\n        if (this.props.active)  this.props.dispatch(exitProjectAction(true));\r\n        eventEmitter.off('EventBuildHeaderComponents', this.addHeaderComponent);\r\n        eventEmitter.off('EventSaveChangesComponent', this.saveChangesComponent);\r\n        eventEmitter.off('EventModalSearchOn', this.modalSearchOn);\r\n        eventEmitter.off('EventClosePanel', this.closePanel);\r\n        eventEmitter.off('EventInstrumentPanel', this.openInstrument);\r\n        eventEmitter.off('EventImageView', this.imageViewerSwitch);\r\n        eventEmitter.off('EventModeEdit', this.workModeEdit);\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n\r\n    console.log(state);\r\n    return {\r\n        ...state.builder,\r\n        active: state.cabinet.active,\r\n        idUser: state.cabinet.idUser,\r\n        currentProject: state.cabinet.projects\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(withFirebase(Build));","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {BrowserRouter, Route, Switch} from 'react-router-dom';\r\n\r\nimport {middlewareLoadUserData} from './redux/middleware/loadUserMiddleware';\r\nimport {connect} from 'react-redux';\r\nimport withFirebase from './components/firebaseHOC';\r\nimport Loader from './components/loading/Loader';\r\n\r\nimport Index from './Pages/Index/Index';\r\nimport Cabinet from './Pages/Cabinet/Cabinet';\r\nimport About from './Pages/About/About';\r\nimport Build from './Pages/Build/Build';\r\n\r\nrequire('es6-promise').polyfill();\r\n\r\nclass App extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        config: PropTypes.object.isRequired,\r\n        firebase: PropTypes.object.isRequired,\r\n    }\r\n\r\n    state = {\r\n        firebase: this.props.firebase,\r\n        firebaseLoadState: false,\r\n    }\r\n\r\n    componentDidMount(){\r\n\r\n        this.props.firebase.auth.onAuthStateChanged((user) => {\r\n\r\n            if (!this.state.firebaseLoadState){\r\n                if (user) this.props.dispatch(middlewareLoadUserData(user.uid));\r\n                this.setState({firebaseLoadState: true});\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    render(){\r\n        if (this.state.firebaseLoadState){\r\n        return (\r\n            <BrowserRouter basename = '/'>\r\n                    <Switch>\r\n                        <Route\r\n                            path = '/' exact\r\n                            render = {(props) => <Index {...props} />}\r\n                        />\r\n                        <Route path = '/Cabinet/' exact component = {Cabinet}/>\r\n                        <Route\r\n                            path = '/Cabinet/About'\r\n                            render = {(props) => <About {...props} config = {this.props.config} />}\r\n                        />\r\n                        <Route path = '/Cabinet/Build/:param' component = {Build}/>\r\n                        <Route path = '*' component = {Index} />;\r\n                    </Switch>\r\n            </BrowserRouter>\r\n        )\r\n        } else return <Loader path = '/img/loading.gif' type = 'application' />\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n      active: state.cabinet.active\r\n    }\r\n  }\r\n\r\nexport default connect(mapStateToProps)(withFirebase(App));","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\n\nimport {Provider} from 'react-redux';\nimport store from './redux/store';\nimport App from './App.jsx';\nimport 'normalize.css';\n\nconst config = require('./config.json');\n\n\nReactDOM.render(\n    <Provider store = {store}>\n        <App config = {config} />\n    </Provider>,\n        document.getElementById('root')\n);\n\nserviceWorker.unregister();\n\n"],"sourceRoot":""}