{"version":3,"sources":["serviceWorker.js","EventEmitter.js","components/ErrorCatch/ErrorPage.jsx","components/ErrorCatch/ErrorBoundary.jsx","Firebase/firebaseConfig.js","Firebase/Firebase.js","redux/actions.js","redux/reducerBuilder.js","redux/reducerCabinet.js","redux/reducers.js","redux/store.js","redux/middleware/loadUserMiddleware.js","components/firebaseHOC.jsx","components/loading/Loader.jsx","components/Registration/Registration.jsx","Pages/Index/Index.jsx","redux/middleware/middlewareDelete.js","components/Icon/icon.jsx","components/header/Header.jsx","components/imageViewer/imageItem.jsx","components/modalWindow/ModalWindow.jsx","redux/middleware/createProjectMiddleware.js","components/List/Item.jsx","components/List/List.jsx","components/ProjectsSection/ProjectsSection.jsx","Pages/Cabinet/Cabinet.jsx","Pages/About/About.jsx","redux/middleware/updateMiddleware.js","components/imageViewer/imageViewer.jsx","components/instrumentsPanel/InstrumentsPanel.jsx","components/buildComponents/components/Background.jsx","components/buildComponents/components/Text.jsx","components/componentsBuildMenu/BuildMenu.jsx","components/controllers/controllers.jsx","components/buildComponents/header/headerBuild.jsx","Pages/Build/Build.jsx","App.jsx","index.js"],"names":["Boolean","window","location","hostname","match","stream","EventEmitter","ErrorPage","update","event","_this","props","history","push","eventEmitter","emit","console","log","react_default","a","createElement","class","onClick","this","React","PureComponent","withRouter","ErrorBoundary","state","hasError","logger","updateApplication","setState","componentDidMount","on","componentWillUnmount","off","error","info","ErrorCatch_ErrorPage","children","firebaseConfig","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","interfaceFirebase","require","Firebase","Object","classCallCheck","firebase","auth","db","rules","setPersistence","Auth","Persistence","email","password","signInWithEmailAndPassword","createUserWithEmailAndPassword","signOut","currentUser","saveSession","exitProjectAction","type","exit","loadCurrentProjectAction","id","typeProject","component","toConsumableArray","loadUserAction","active","idUser","uid","projects","errorAction","initialState","loadProject","haveUpdateLoading","idProject","dateConnect","Date","now","toLocaleString","replace","split","combineReducers","builder","arguments","length","undefined","action","objectSpread","cabinet","map","item","middleware","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","thunk","withExtraArgument","reduxCatch","getState","lastAction","dispatch","debug","store","createStore","middlewareLogin","_ref2","asyncToGenerator","regenerator_default","mark","_callee","_ref","wrap","_context","prev","next","login","then","response","collection","doc","user","get","docUser","data","catch","message","stop","_x","_x2","_x3","apply","middlewareLogOutUser","_ref6","_callee3","_ref5","_context3","_x7","_x8","_x9","withFirebase","Component","assign","Loader","_useState","useState","path","slicedToArray","className","src","alt","emailRef","passwordRef","setRefEmail","node","setRefPassword","createUser","value","registration","set","autoComplete","ref","Index","title","registrationActive","regStatus","wrongEnter","statusRegistration","additionalUserInfo","isNewUser","showBox","authTo","emailImput","passwordImput","e","react_router","to","currentSelected","components_Registration_Registration","connect","middlewareDelete","filter","itemdb","Icon","_useState3","_useState5","draggable","iconPath","CabinetIcon","Header","logOut","redirect","pathname","add","icon","react_router_dom","ImageItem","urls","regular","urlRegular","full","urlFull","_useState7","isFull","selected","url","ModalWindow","workMode","images","buttonSearchDisabled","selectedItem","showUrl","imageBoxView","newProject","validateName","validateType","disabled","name","imageMenuActive","warning","lengthMax","lengthMin","inputSearch","inputSelect","searchBackground","search","inages","isFetch","concat","ok","json","Error","results","showMenuImage","showImage","target","stopPropagation","setSelectedImage","makeImageResultBox","items","i","imageItem","key","addNewProject","mode","selectOption","inputs","defineProperty","lengthInput","cancel","refSelect","refSearch","onChange","placeholder","react","middlewareCreateProject","list","lastProject","lastIndex","data-id","List","makeList","project","List_Item","componentWillMount","ProjectsSection","components_List_List","Cabinet","deletItem","getCurrentUser","changeWorkMode","header_Header","modalWindow_ModalWindow","components_ProjectsSection_ProjectsSection","config","about","developer","year","updateMiddleware","newProjects","find","ImageViewer","InstrumentsPanel","instrumentPanel","componentsStats","content","fontSize","color","backgroundImage","image","coords","left","top","colorPickerAvtive","updateSizeText","eventSize","closePanel","close","setSize","idComponent","size","setContent","contentValue","updatePosition","eventItem","x","y","setColor","handleChangeComplete","rgb","colorRGB","r","g","b","saveChanges","searchImage","makePanelInstruments","min","max","lib","onChangeComplete","maxLength","defaultValue","componentDidUpdate","oldProps","oldState","targetBool","idBool","instrumentActive","Background","styled","div","_templateObject","backgroundColor","BackgroundComponent","_useState2","count","setCount","boxComponent","createRef","background","_useState4","setBgColor","_useState6","setImage","changeColor","setBackgroundImage","useEffect","current","focus","boxInform","getBoundingClientRect","width","height","saveWidth","Title","h1","attrs","style","display","shadowDisplay","coordX","coordY","Text_templateObject","textColor","TextComponent","sizeParenBox","colorText","setColorText","_useState8","sizeText","setSizeText","_useState9","_useState10","contentText","setText","_useState11","_useState12","shiftCoords","setShiftCoords","_useState13","_useState14","dragNdrop","setDragNdrop","changeColorText","changeSizeText","changeContentText","eventContent","moveText","pageX","pageY","position","sizeTextValue","onMouseDown","rect","onDrag","onDragEnd","onWheel","shiftKey","deltaY","counter","BuildMenu","addText","countComponents","Text","addBackground","components_Background","ControllersBox","controllers_templateObject","Controllers","viewComponentMenu","shiftX","shiftY","coordsX","coordsY","componentMenu","saveCoords","controlBox","drag","refControll","menuActive","componentsBuildMenu_BuildMenu","HeaderBuild","changeMode","editStart","currentTarget","refBox","refBackground","build","readyBuild","controllers","mainWidth","mainBoxWidth","mainHeight","mainBoxHeight","Build","parseInt","params","param","editComponent","edit","changeEdit","modalSearch","modalImageViewer","modalSearchOn","imageViewerSwitch","workModeEdit","itemEvent","openInstrument","addHeaderComponent","saveChangesComponent","componentArray","currentProject","imageViewer_imageViewer","instrumentsPanel_InstrumentsPanel","header_headerBuild","prevProps","prevState","_this2","polyfill","App","firebaseLoadState","onAuthStateChanged","_ref4","_callee2","_ref3","_context2","_x4","_x5","_x6","_this3","exact","render","Pages_Index_Index","Pages_About_About","ReactDOM","basename","ErrorCatch_ErrorBoundary","es","src_App","document","getElementById","navigator","serviceWorker","ready","unregister"],"mappings":"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","file":"static/js/main.a4417acc.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {EventEmitter} from 'events';\r\nconst stream = new EventEmitter();\r\nexport default stream;","import React,{Fragment} from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport eventEmitter from '../../EventEmitter';\r\n\r\nimport './errorPage.scss';\r\n\r\n\r\nclass ErrorPage extends React.PureComponent {\r\n\r\n    update = event => {\r\n        this.props.history.push('/');\r\n        eventEmitter.emit('EventErrorCatchUpdate');\r\n    }\r\n\r\n    render(){\r\n        console.log('error');\r\n        return (\r\n        <div class = 'container'>\r\n            <div class = 'flex-column'>\r\n                <h1>Application crash</h1>\r\n                <button onClick = {this.update}>Update</button>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(ErrorPage);","\r\n\r\nimport React from 'react';\r\nimport eventEmitter from '../../EventEmitter';\r\nimport ErrorPage from './ErrorPage';\r\nimport {Redirect} from 'react-router-dom';\r\nclass ErrorBoundary extends React.PureComponent {\r\n\r\n      state = { \r\n        hasError: false,\r\n        logger: []\r\n      };\r\n\r\n    static getDerivedStateFromError(error) {\r\n        console.log(error);\r\n      // Обновить состояние с тем, чтобы следующий рендер показал запасной UI.\r\n      return { hasError: true};\r\n    }\r\n\r\n    updateApplication = event => {\r\n      this.setState({hasError: false});\r\n    };\r\n  \r\n    componentDidCatch(error, info) {\r\n      // Можно также сохранить информацию об ошибке в соответствующую службу журнала ошибок\r\n     console.error(error + \",\" + info);\r\n    }\r\n  \r\n    render() {\r\n      if (this.state.hasError) return <ErrorPage />\r\n      return this.props.children;\r\n    }\r\n\r\n    componentDidMount = () => {\r\n      eventEmitter.on('EventErrorCatchUpdate',this.updateApplication);\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n      eventEmitter.off('EventErrorCatchUpdate',this.updateApplication);\r\n    }\r\n  }\r\n\r\n  export default ErrorBoundary;","// setings in root folder / firebase.env\r\n\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n    databaseURL: process.env.REACT_APP_DATABASE_URL,\r\n    projectId: process.env.REACT_APP_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n    appId: process.env.REACT_APP_APPID\r\n};\r\n\r\nexport {firebaseConfig}","import * as firebase from 'firebase/app';\r\nimport {firebaseConfig} from './firebaseConfig';\r\n\r\nconst auth = require('firebase/auth');\r\nconst firestore = require('firebase/firestore');\r\n\r\nclass Firebase {\r\n\r\n        constructor(){\r\n                firebase.initializeApp(firebaseConfig);\r\n                this.auth = firebase.auth();\r\n                this.db = firebase.firestore();\r\n        }\r\n\r\n        saveSession(rules){\r\n                return this.auth.setPersistence(firebase.auth.Auth.Persistence[rules]);\r\n        }\r\n\r\n        login(email, password){\r\n                return this.auth.signInWithEmailAndPassword(email, password);\r\n        }\r\n\r\n        registration(email, password){\r\n                return this.auth.createUserWithEmailAndPassword(email, password)\r\n        }\r\n\r\n        signOut(){\r\n                return this.auth.signOut()\r\n        }\r\n\r\n        getCurrentUser() {\r\n                return this.auth.currentUser\r\n        }\r\n}\r\n\r\nlet interfaceFirebase = new Firebase();\r\ninterfaceFirebase.saveSession('SESSION');\r\n\r\nexport default interfaceFirebase;\r\n\r\nexport { auth, firestore };\r\n\r\n","const CREATE_PROJECT = 'CREATE_PROJECT';\r\nconst LOAD_UPDATE_PROJECT = \"LOAD_UPDATE_PROJECT\";\r\nconst LOAD_CURRENT = 'LOAD_CURRENT';\r\nconst LOG_OUT_CABINET = 'LOG_OUT_CABINET';\r\nconst LOAD_USER_CABINET = 'LOAD_USER_CABINET';\r\nconst ERROR_CABINET = 'ERROR_CABINET';\r\nconst EXIT_PROJECT = 'EXIT_PROJECT';\r\n\r\nconst createProjectAction = (state) => {\r\n    return {\r\n        type: CREATE_PROJECT,\r\n        projects: [...state],\r\n    }\r\n}\r\n\r\nconst exitProjectAction = (state) => {\r\n    return {\r\n        type: EXIT_PROJECT,\r\n        exit: state\r\n    }\r\n}\r\n\r\nconst loadCurrentProjectAction = (state) => {\r\n    console.log(state);\r\n    return {\r\n        type: LOAD_CURRENT,\r\n        id: state.id,\r\n        typeProject: state.typeProject,\r\n        component: [...state.component]\r\n    }\r\n}\r\n\r\nconst loadUpdateCurrentProject = (state) => {\r\n    return {\r\n        type: LOAD_UPDATE_PROJECT,\r\n        idProject: state.idProject,\r\n        component: [...state.component]\r\n    }\r\n}\r\n\r\nconst loadUserAction = (state) => {\r\n    return {\r\n        type: LOAD_USER_CABINET,\r\n        active: true,\r\n        idUser: state.uid,\r\n        error: '',\r\n        projects: [...state.projects]\r\n    }\r\n}\r\n\r\nconst logOutAction = (state) => {\r\n\r\n    return {\r\n        type: LOG_OUT_CABINET,\r\n        active: false,\r\n        idUser: null,\r\n        error: '',\r\n        projects: []\r\n    }\r\n}\r\n\r\nconst errorAction = (state) => {\r\n    return {\r\n        type: ERROR_CABINET,\r\n        error: state\r\n    }\r\n}\r\n\r\nexport {\r\n    CREATE_PROJECT, createProjectAction, /* cabinet */\r\n    LOAD_USER_CABINET, loadUserAction, /* cabinet */\r\n    LOG_OUT_CABINET, logOutAction, /* cabinet */\r\n    LOAD_CURRENT, loadCurrentProjectAction, /* builder */\r\n    LOAD_UPDATE_PROJECT, loadUpdateCurrentProject,\r\n    EXIT_PROJECT, exitProjectAction,\r\n    ERROR_CABINET, errorAction, /* both */\r\n}","import {LOAD_CURRENT,LOAD_UPDATE_PROJECT, EXIT_PROJECT} from './actions';\r\n\r\nconst initialState = {\r\n    loadProject: false,\r\n    haveUpdateLoading: true,\r\n    idProject: null,\r\n    typeProject: null,\r\n    component: []\r\n};\r\nexport default (state = initialState, action) => {\r\n    console.log('reducer');\r\n    switch (action.type){\r\n\r\n        case LOAD_CURRENT: {\r\n            return {\r\n                ...state,\r\n                haveUpdateLoading: state.haveUpdateLoading ? false : true,\r\n                loadProject: true,\r\n                idProject: action.id,\r\n                typeProject: action.typeProject,\r\n                component: [...action.component]\r\n            }\r\n        }\r\n\r\n        case LOAD_UPDATE_PROJECT: {\r\n            return {\r\n                ...state,\r\n                haveUpdateLoading: false,\r\n                component: [...action.component]\r\n            }\r\n        }\r\n\r\n        case EXIT_PROJECT: {\r\n            if (action.exit)\r\n            return {\r\n                ...state,\r\n                haveUpdateLoading: true,\r\n                loadProject: false,\r\n                idProject: null,\r\n                typeProject: null,\r\n                component: []\r\n            }\r\n            else return state;\r\n        }\r\n        default: return state;\r\n    }\r\n};","import {LOAD_USER_CABINET, LOG_OUT_CABINET, ERROR_CABINET, CREATE_PROJECT, LOAD_UPDATE_PROJECT} from './actions';\r\n\r\nconst initialState = {\r\n    active: false,\r\n    idUser: null,\r\n    projects: [],\r\n    error: null,\r\n    dateConnect: new Date(Date.now()).toLocaleString().replace(/\\s/ig,'').split(','),\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n    console.log(\"Cabinet\");\r\n    switch(action.type) {\r\n        case LOAD_USER_CABINET: {\r\n\r\n            return {\r\n                ...state,\r\n                active: action.active,\r\n                idUser: action.idUser,\r\n                projects: action.projects\r\n            }\r\n        }\r\n\r\n        case CREATE_PROJECT: {\r\n            return {\r\n                ...state,\r\n                projects: action.projects\r\n            }\r\n        }\r\n\r\n        case LOAD_UPDATE_PROJECT: {\r\n            return {\r\n                ...state,\r\n                projects: state.projects.map(item => {\r\n                    if (item.id === action.idProject)\r\n                        item.component = [...action.component]\r\n                return item;\r\n                })\r\n            }\r\n        }\r\n\r\n        case LOG_OUT_CABINET: {\r\n            return {\r\n                ...state,\r\n                active: false,\r\n                idUser: null,\r\n                projects: []\r\n            }\r\n        }\r\n\r\n        case ERROR_CABINET: {\r\n            return {\r\n                ...state,\r\n                error: action.error\r\n            }\r\n        }\r\n        default: return state;\r\n    }\r\n}\r\n\r\n","import {combineReducers} from 'redux';\r\nimport reducerBuilder from './reducerBuilder';\r\nimport reducerCabinet from './reducerCabinet';\r\n\r\nexport default combineReducers({\r\n    builder: reducerBuilder,\r\n    cabinet: reducerCabinet,\r\n});","import {createStore, applyMiddleware, compose} from 'redux';\r\nimport firebase from  '../Firebase/Firebase';\r\nimport reduxCatch from 'redux-catch';\r\nimport thunk from 'redux-thunk';\r\nimport combineReducers from './reducers';\r\n\r\nconst composeEnhancers =\r\n  typeof window === 'object' &&\r\n  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?\r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\r\n    }) : compose;\r\n\r\n    function errorHandler(error, getState, lastAction, dispatch) {\r\n      console.error(error);\r\n      console.debug('current state', getState());\r\n      console.debug('last action was', lastAction);\r\n      // optionally dispatch an action due to the error using the dispatch parameter\r\n    }\r\n\r\nconst middleware = composeEnhancers(\r\n  applyMiddleware(thunk.withExtraArgument({firebase})),\r\n  applyMiddleware(reduxCatch(errorHandler))\r\n);\r\nconst store = createStore(combineReducers, middleware);\r\n\r\n\r\nexport default store;","import {loadUserAction, errorAction, logOutAction} from '../actions';\r\n\r\nconst middlewareLogin = (email,password) => async (dispatch,getState, {firebase}) => {\r\n        await firebase.login(email,password)\r\n        .then(response =>{\r\n            firebase.db.collection(\"users\").doc(response.user.uid).get()\r\n            .then(docUser => {\r\n                let user = docUser.data();\r\n                dispatch(loadUserAction({uid: docUser.id, projects: [...user.projects]}))\r\n            })\r\n        })\r\n        .catch((error) => {\r\n            console.error(error.message);\r\n            dispatch(errorAction(error.message));\r\n        });\r\n    }\r\n\r\nconst middlewareLoadUserData = (uid) => async (dispatch,getState, {firebase}) => {\r\n        await firebase.db.collection(\"users\").doc(uid).get()\r\n        .then(docUser => {\r\n            let user = docUser.data();\r\n            dispatch(loadUserAction({uid: uid, projects: [...user.projects]}))\r\n        })\r\n        .catch((error) => {\r\n            console.error(error.message);\r\n            dispatch(errorAction(error.message));\r\n        });\r\n    }\r\n\r\nconst middlewareLogOutUser = (uid) => async (dispatch,getState, {firebase}) => {\r\n    await firebase.signOut()\r\n    .then (response => {\r\n        dispatch(logOutAction());\r\n    })\r\n    .catch((error) => {\r\n        console.error(error.message);\r\n        dispatch(errorAction(error.message));\r\n    });\r\n}\r\nexport {\r\n    middlewareLogin,middlewareLoadUserData, middlewareLogOutUser\r\n}","import React from 'react';\r\nimport firebase from '../Firebase/Firebase';\r\n\r\nconst withFirebase = Component => props => (\r\n    <Component firebase = {firebase} {...props} />\r\n);\r\n\r\nexport default withFirebase;","import React,{useState} from 'react';\r\n\r\nexport default function(props) {\r\n    const [path] = useState(props.path);\r\n    return (\r\n            <div className = 'loaderBox'>\r\n                <img className = 'loader' src = {path} alt = 'loader'></img> \r\n                <p>Loading {props.type}</p>\r\n            </div>\r\n    )\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport eventEmitter from '../../EventEmitter';\r\nimport './registration.scss';\r\n\r\nimport withFirebase from '../../components/firebaseHOC';\r\n\r\n\r\nclass Registration extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        firebase: PropTypes.object.isRequired,\r\n    }\r\n\r\n    state = {\r\n        firebase: this.props.firebase,\r\n        error: null,\r\n    }\r\n\r\n    emailRef = null;\r\n    passwordRef = null;\r\n\r\n    setRefEmail = (node) => this.emailRef = node;\r\n    setRefPassword = (node) => this.passwordRef = node;\r\n\r\n    createUser = (event) => {\r\n\r\n        const email = this.emailRef.value;\r\n        const password = this.passwordRef.value;\r\n        const { firebase } = this.props;\r\n\r\n        firebase.registration(email, password)\r\n        .then(response => {\r\n            firebase.db.collection(\"users\").doc(response.user.uid).set({\r\n                'projects': [],\r\n                'email': email,\r\n            }).then(() => eventEmitter.emit('EventRegistrationCorrect', response))\r\n        })\r\n        .catch((error) => {\r\n        console.error(error.message);\r\n        this.setState({error: error.message});\r\n        });\r\n    };\r\n\r\n    render(){\r\n        let  { error } = this.state;\r\n\r\n        return (\r\n            <div className = 'RegistrationBox'>\r\n                <div  className = 'RegistrationForm'>\r\n                    <h3>Registration</h3>\r\n                    <form autoComplete = 'off' className = 'RegForm'>\r\n                        { error ?\r\n                            <p className = 'error'>{error}</p>\r\n                            : null\r\n                        }\r\n                        <span>E-mail</span>\r\n                        <input ref = {this.setRefEmail} type = 'text' />\r\n                        <span>Password</span>\r\n                        <input  autoComplete = \"off\" ref = {this.setRefPassword} type = 'password' />\r\n                        <input onClick = {this.createUser}\r\n                                className = 'loginButton'\r\n                                type = 'button'\r\n                                value = 'registration'\r\n                        />\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\nexport default withFirebase(Registration);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport eventEmitter from '../../EventEmitter';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nimport {middlewareLogin} from '../../redux/middleware/loadUserMiddleware';\r\n\r\nimport Loader from '../../components/loading/Loader';\r\nimport Registration from '../../components/Registration/Registration';\r\n\r\nimport {connect} from 'react-redux';\r\n\r\nimport './index.scss';\r\n\r\nclass Index extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        config: PropTypes.object,\r\n    }\r\n\r\n    state = {\r\n        title:  \"Constructor\",\r\n        registrationActive: false,\r\n        regStatus: false,\r\n        wrongEnter: false,\r\n        error: ''\r\n    }\r\n\r\n    statusRegistration = (event) => {\r\n        event.additionalUserInfo.isNewUser ?\r\n        this.setState({...this.state,\r\n                        regStatus: true,\r\n                        registrationActive: false,\r\n                        error: 'Account create!'\r\n                    })\r\n        : console.log('error registration');\r\n    }\r\n\r\n    showBox = (event) => {\r\n        this.setState ({\r\n            ...this.state,\r\n        registrationActive: this.state.registrationActive ? false : true\r\n        })\r\n    }\r\n\r\n    authTo = (event) => {\r\n            this.props.dispatch(middlewareLogin(this.emailImput.value, this.passwordImput.value));\r\n}\r\n    emailImput = null;\r\n    passwordImput = null;\r\n    emailRef = (node) => this.emailImput = node;\r\n    passwordRef = (node) => this.passwordImput = node;\r\n\r\n    render(){\r\n\r\n        if (this.props.active) return <Redirect to = '/Cabinet' />\r\n        else if (!this.props.active) {\r\n            let currentSelected = this.state.registrationActive;\r\n            return (\r\n                <div className = 'LoginPage flex-column'>\r\n                        <h1>{this.state.title}</h1>\r\n                        <div className = 'LoginBox'>\r\n                            <div className = 'LoginForm'>\r\n                                <h3>Connect form</h3>\r\n                                {\r\n                                    this.props.wrongEnter || this.state.regStatus ?\r\n                                    <p className = 'error'>{this.props.wrongEnter}</p>\r\n                                    : null\r\n                                }\r\n                                <p>E-mail</p>\r\n                                <input ref = {this.emailRef} type = 'text' />\r\n                                <p>Password</p>\r\n                                <input ref = {this.passwordRef} type = 'password' />\r\n                                <input \r\n                                    onClick = {this.authTo} \r\n                                    className = 'loginButton'\r\n                                    type = 'button'\r\n                                    value = 'enter' />\r\n                                <input\r\n                                    onClick = {this.showBox}\r\n                                    className = {currentSelected ? `loginButton selected`\r\n                                        : 'loginButton'}\r\n                                    type = 'button'\r\n                                    value = 'registration'\r\n                                    />\r\n                            </div>\r\n                        </div>\r\n                        {\r\n                            this.state.registrationActive ?\r\n                            <Registration auth = {this.props.auth} />\r\n                            : null\r\n                        }\r\n                </div>\r\n            )\r\n        } else  return <Loader path = '/img/loading.gif' type = 'session' />\r\n    }\r\n\r\n    componentDidMount = (e) => {\r\n        eventEmitter.on('EventRegistrationCorrect', this.statusRegistration);\r\n    }\r\n    componentWillUnmount = (e) => {\r\n        eventEmitter.off('EventRegistrationCorrect', this.statusRegistration);\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    console.log('state index');\r\n    return {\r\n        active: state.cabinet.active, \r\n        wrongEnter: state.cabinet.error\r\n    }\r\n  }\r\n\r\nexport default connect(mapStateToProps)(Index);","\r\nimport {errorAction, loadUserAction} from '../actions';\r\n\r\nconst middlewareDelete = item => async (dispatch,getState, {firebase}) => {\r\n    console.log('middleware');\r\n    await firebase.db.collection('users').doc(item.uid).get()\r\n    .then(user => user.data())\r\n    .then(data => {\r\n        return {id: data.id, projects: data.projects.filter(itemdb => itemdb.id !== item.id)};\r\n    })\r\n    .then(data => {\r\n        firebase.db.collection(\"users\").doc(item.uid).update({\r\n            \"projects\": data.projects\r\n        })\r\n        .then(response => {\r\n            dispatch(loadUserAction({uid: data.id, projects: data.projects}));\r\n        });\r\n    })\r\n    .catch((error) => {\r\n        console.error(error.message);\r\n        dispatch(errorAction(error.message));\r\n    });\r\n}\r\n\r\nexport default middlewareDelete;\r\n","import React, {useState} from 'react';\r\n\r\n\r\nfunction Icon(props){\r\n    const [path] = useState(props.path);\r\n    const [className] = useState(props.className ? props.className : null);\r\n    const [draggable] = useState(props.draggable ? true : false);\r\n\r\n    return (\r\n    <img\r\n        draggable = {draggable}\r\n        onClick = {props.onClick ? props.onClick : null}\r\n        className = {className}\r\n        title = {props.title ? props.title : null}\r\n        src = {path} alt = 'icon'>\r\n    </img>\r\n    )\r\n}\r\n\r\nexport default Icon;","import React from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport './header.scss';\r\n\r\nimport {middlewareLogOutUser} from '../../redux/middleware/loadUserMiddleware';\r\nimport {connect} from 'react-redux';\r\nimport {withRouter, NavLink} from 'react-router-dom';\r\n\r\nimport eventEmitter from '../../EventEmitter.js';\r\nimport Icon from '../Icon/icon';\r\n\r\n\r\nconst iconPath = require('../../config.json').CabinetIcon;\r\n\r\nclass Header extends React.Component {\r\n\r\n    static propTypes = {\r\n        title: PropTypes.string.isRequired,\r\n    };\r\n\r\n    state = {\r\n        title: this.props.title,\r\n    };\r\n\r\n    logOut = (event) => {\r\n        this.props.dispatch(middlewareLogOutUser(this.props.idUser));\r\n    };\r\n\r\n    redirect = (e) => {\r\n        if (this.props.location.pathname !== '/Cabinet/About')\r\n            this.props.history.push('/Cabinet/About');\r\n    };\r\n\r\n    add = (e) => {\r\n        eventEmitter.emit('EventChangeWorkMode',{action: 'newProject'});\r\n    };\r\n\r\n    render(){\r\n        return (\r\n            <header>\r\n                <div className = 'container'>\r\n                    <div className = 'flex-row'>\r\n                            <div className = 'header__CabinetInfo'>\r\n                                <Icon path = {iconPath} />\r\n                                <NavLink to = '/Cabinet'><h3>{this.state.title}</h3></NavLink>\r\n                            </div>\r\n                            {this.props.location.pathname === '/Cabinet' ?\r\n                                <div onClick = {this.add} className = 'header__newProject__AddButton'>\r\n                                    <Icon path = '/img/plus.png' />\r\n                                </div>\r\n                                : null\r\n                            }\r\n                                <div  className = 'Navigator'>\r\n                                    <Icon onClick = {this.redirect} title = 'about' path = '/img/about_logo.svg' />\r\n                                    <Icon onClick = {this.logOut} title = 'logOut' path = '/img/logOut.svg' />\r\n                                </div>\r\n                    </div>\r\n               </div>\r\n            </header>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect()(withRouter(Header));","import React, {useState} from 'react';\r\nimport eventEmitter from '../../EventEmitter';\r\n\r\nconst ImageItem = props => {\r\n\r\n    const [id] = useState(props.id);\r\n    const [urlRegular] = useState(props.urls.regular);\r\n    const [urlFull] = useState(props.urls.full);\r\n    const [isFull] = useState(props.isFull);\r\n\r\n    const showImageMenu = event => {\r\n       eventEmitter.emit(\"EventShowMenuImage\", {id: id, url: urlRegular, urlFull: urlFull});\r\n    }\r\n\r\n\r\n    return (\r\n        <div className = {props.selected ? 'ItemBox selected' : 'ItemBox'}>\r\n            <img\r\n                onClick = {showImageMenu}\r\n                src = {isFull ? urlFull : urlRegular}\r\n                alt = 'item'\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ImageItem;","import React,{Fragment} from 'react';\r\nimport isFetch from 'isomorphic-fetch';\r\nimport PropTypes from 'prop-types';\r\nimport eventEmitter from '../../EventEmitter.js';\r\n\r\nimport ImageItem from '../imageViewer/imageItem';\r\nimport Icon from '../Icon/icon';\r\n\r\nimport './modal.scss';\r\n\r\nclass ModalWindow extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        mode: PropTypes.string\r\n    }\r\n\r\n    state = {\r\n        workMode: this.props.workMode,\r\n        images: {\r\n            buttonSearchDisabled: false,\r\n            selectedItem: null, \r\n            showUrl: null, \r\n            images: null,\r\n            urlFull: null,\r\n            imageBoxView: false, \r\n            error: ''\r\n        },\r\n        newProject: {\r\n            validateName: false,\r\n            validateType: false,\r\n            disabled: true,\r\n            name: '',\r\n            type: 'empty'\r\n        },\r\n        imageMenuActive: false,\r\n        warning: {\r\n            lengthMax: 'Max length: 20 symbols',\r\n            lengthMin: 'Min length: 4 symbol',\r\n            type: 'Select type of webpage',\r\n        }\r\n    }\r\n\r\n    inputSearch = null;\r\n    inputSelect = null;\r\n\r\n    searchBackground = event => {\r\n\r\n        const api = 'https://api.unsplash.com/search/photos/?page=1&per_page=40&query=';\r\n        const search = this.inputSearch.value;\r\n\r\n        this.setState({...this.state, images: {...this.state.inages, buttonSearchDisabled: true}})\r\n\r\n        isFetch(`${api + search}&client_id=${process.env.REACT_APP_UNSPLASH_TOKEN}`)\r\n        .then(response => {\r\n            if (response.ok) return response.json();\r\n            else throw new Error('request invalid');\r\n        })\r\n        .then(response => {\r\n\r\n            let {results} = response;\r\n            if (results.length)\r\n            this.setState({\r\n                ...this.state,\r\n                images: {\r\n                    ...this.state.images,\r\n                    imageBoxView: true,\r\n                    error: '',\r\n                    images: [...results],\r\n                    buttonSearchDisabled: false\r\n                },\r\n            });\r\n            else throw new Error('Photos not found');\r\n        })\r\n        .catch(error => {\r\n            console.error(error.message);\r\n            this.setState({\r\n                ...this.state,\r\n                images: {...this.state.images, error: error.message},\r\n                imageBoxView: false,\r\n                buttonSearchDisabled: false\r\n                });\r\n        });\r\n    }\r\n\r\n    showMenuImage = event => {\r\n        this.setState({\r\n            ...this.state, \r\n            imageMenuActive: true,\r\n            images: {\r\n                ...this.state.images,\r\n                selectedItem: event.id, \r\n                showUrl: event.url,\r\n                urlFull: event.urlFull\r\n\r\n            }\r\n        });\r\n    }\r\n\r\n    showImage = event => {\r\n\r\n        const {showUrl} = this.state.images;\r\n        // if (event.type === 'mouseenter')\r\n        eventEmitter.emit(\"EventImageView\", {action: true, target: showUrl ? showUrl : null});\r\n        // else  eventEmitter.emit(\"EventImageView\", {action: false, target: null});\r\n        event.stopPropagation();\r\n    }\r\n\r\n    setSelectedImage = event => {\r\n\r\n        eventEmitter.emit('EventSetBackgroundImage',{...this.state.images});\r\n    };\r\n\r\n    makeImageResultBox = (items) => {\r\n        if (!items) return null;\r\n        console.log('item');\r\n        return items.map((item,i) =>{\r\n           return <ImageItem \r\n                key = {`item${i}`} \r\n                id = {i}\r\n                selected = {this.state.images.selectedItem === i ? true : false} \r\n                isFull = {false}\r\n                urls = {{...item.urls}} \r\n            />\r\n        });\r\n    }\r\n\r\n    addNewProject = (event) => {\r\n        let mode = this.state[this.state.workMode];\r\n        if (mode.validateType &&  mode.validateName) {\r\n            eventEmitter.emit('EventAddProject',\r\n            {\r\n                title: this.state[this.state.workMode].name,\r\n                type: this.state[this.state.workMode].type\r\n            });\r\n\r\n            eventEmitter.emit('EventChangeWorkMode',{action: 'default'});\r\n        }\r\n    }\r\n\r\n    selectOption = (event) => {\r\n\r\n        let inputs = {...this.state[this.state.workMode]};\r\n        inputs.type = event.target.value;\r\n        inputs.validateType = inputs.type !== 'empty';\r\n        inputs.disabled = inputs.validateType && inputs.validateName ? false : true;\r\n        this.setState({\r\n            ...this.state,\r\n            [this.state.workMode]: inputs\r\n        });\r\n    }\r\n\r\n    validateName = (event) => {\r\n\r\n        let inputs = {...this.state[this.state.workMode]};\r\n        inputs.name = event.target.value;\r\n        let lengthInput = inputs.name.length;\r\n        inputs.validateName = lengthInput >= 4 && lengthInput < 20 ? true : false;\r\n        inputs.disabled = inputs.validateType && inputs.validateName ? false : true;\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            [this.state.workMode]: inputs\r\n        })\r\n    };\r\n\r\n    cancel = (event) => {\r\n\r\n        if (this.state.workMode === 'Search')\r\n            eventEmitter.emit(\"EventModalSearchOn\");\r\n        else  eventEmitter.emit('EventChangeWorkMode',{action: 'default'});\r\n    }\r\n\r\n    refSelect = (node) => this.inputSelect = node;\r\n    refSearch = node => this.inputSearch = node;\r\n\r\n    render(){\r\n\r\n        switch (this.state.workMode){\r\n            case 'newProject':\r\n                return (\r\n                    <div className = 'Modal'>\r\n                        <h3>Create new Project</h3>\r\n                        { this.state[this.state.workMode].name.length <= 3 ?\r\n                            <span className = 'warning'>{this.state.warning.lengthMin}</span> : null\r\n                        }\r\n                        { this.state[this.state.workMode].name.length >= 20 ?\r\n                            <span className = 'warning'>{this.state.warning.lengthMax}</span> : null\r\n                        }\r\n                        <input\r\n                            className = {this.state[this.state.workMode].validateName ? 'ready' : 'wrong'}\r\n                            value = {this.state[this.state.workMode].name}\r\n                            onChange = {this.validateName}\r\n                            type = 'text'\r\n                            placeholder = \"Project name\"\r\n                        />\r\n                        { !this.state[this.state.workMode].validateType ?\r\n                            <span className = 'warning'>{this.state.warning.type}</span> : null\r\n                        }\r\n                        <select onChange = {this.selectOption} >\r\n                            <option value = 'empty'>--------</option>\r\n                            <option value = 'landing'>Landing</option>\r\n                            <option value = 'portfolio'>Portfolio</option>\r\n                        </select>\r\n                        <input \r\n                            onClick = {this.addNewProject}\r\n                            className = 'acceptButton'\r\n                            disabled = {this.state[this.state.workMode].disabled}\r\n                            type = 'button'\r\n                            value = 'Submit'\r\n                        />\r\n                            <input onClick = {this.cancel} type ='button' value = 'Cancel' />\r\n                    </div>\r\n                )\r\n            case 'Search':\r\n                console.log('Search render');\r\n                return (\r\n                    <Fragment>\r\n                        <div className = 'Modal Modal-search'>\r\n                            <h3>Search background image</h3>\r\n                            { this.state.images.error ?\r\n                                <span className = 'error'>{this.state.images.error}</span> : null\r\n                            }\r\n                            <input ref = {this.refSearch} type = 'text' placeholder = \"Photo name\" />\r\n                            <input \r\n                                disabled = {this.state.images.buttonSearchDisabled} \r\n                                className = 'acceptButton' \r\n                                type = 'button' \r\n                                value = 'Search'\r\n                                onClick = {this.searchBackground}\r\n                            />\r\n                            <input onClick = {this.cancel} type ='button' value = 'Cancel' />\r\n                            {\r\n                                this.state.images.imageBoxView ?\r\n                                <div className = 'searchResultBox'>\r\n                                    {this.makeImageResultBox([...this.state.images['images']])}\r\n                                </div>\r\n                                : null\r\n                            }\r\n                        </div>\r\n                        {  this.state.imageMenuActive ?\r\n                            <div className = 'ActionModalSearch'>\r\n                            <button onClick = {this.showImage} className = 'actionModalSearch__view'>\r\n                                <Icon path = '/img/view.png' />\r\n                            </button>\r\n                            <button onClick = {this.setSelectedImage} className = 'actionModalSearch__settings'>\r\n                                <Icon path = '/img/settings.png' />\r\n                            </button>\r\n                            </div>\r\n                            : null\r\n                        }\r\n                    </Fragment>\r\n                )\r\n            default: return <Fragment></Fragment>\r\n        }\r\n    }\r\n\r\n    componentDidMount = event => {\r\n        if (this.state.workMode === 'Search')\r\n            eventEmitter.on('EventShowMenuImage', this.showMenuImage);\r\n    }\r\n\r\n    componentWillUnmount = event => {\r\n        if (this.state.workMode === 'Search')\r\n            eventEmitter.off('EventShowMenuImage', this.showMenuImage);\r\n    }\r\n}\r\n\r\nexport default ModalWindow;\r\n\r\n","import {createProjectAction, errorAction} from '../actions';\r\n\r\n\r\nconst middlewareCreateProject = (uid, list, title, type) => async (dispatch,getState, {firebase}) => {\r\n    let lastProject = [...list];\r\n    const lastIndex = lastProject.length  ? lastProject[lastProject.length-1].id + 1 : 0;\r\n    lastProject.push({\"id\": lastIndex, \"title\": title, \"type\": type, component: []});\r\n\r\n    await firebase.db.collection(\"users\").doc(uid).update({\r\n        'projects': lastProject,\r\n    })\r\n    .then (() => dispatch(createProjectAction(lastProject)))\r\n    .catch(error => {\r\n        console.error(error.message);\r\n        dispatch(errorAction(error.message));\r\n    })\r\n};\r\n\r\nexport {\r\n    middlewareCreateProject\r\n}","import React, {useState} from 'react';\r\nimport eventEmitter from '../../EventEmitter';\r\nimport {withRouter} from 'react-router-dom';\r\n\r\nfunction Item(props) {\r\n    const [id] = useState(props.id);\r\n    const [name] = useState(props.name);\r\n    const [type] = useState(props.type);\r\n\r\n\r\n    const build = event => {\r\n        props.history.push(`/Cabinet/Build/${id}`);\r\n        event.stopPropagation();\r\n    };\r\n\r\n    const deleteItem = event => {\r\n        eventEmitter.emit('EventDeleteItem',{id: props.id, name: props.name, type: props.type});\r\n        event.stopPropagation();\r\n    };\r\n\r\n    return (\r\n        <div className = 'item' data-id = {id}>\r\n            <p className = 'ProjectName'>{name}</p>\r\n            <p className = 'ProjectType'>{type}</p>\r\n            <div className = 'projectController'>\r\n            <input onClick = {build} className = 'projectControllerButton_enter' type = 'button' value = 'enter build' />\r\n            <input onClick = {deleteItem} className = 'projectControllerButton_delete' type = 'button' value = 'delete' />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(Item);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport {middlewareCreateProject} from '../../redux/middleware/createProjectMiddleware';\r\n\r\nimport './list.scss';\r\n\r\nimport Item from './Item';\r\nimport eventEmitter from '../../EventEmitter.js';\r\n\r\nclass List extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        children: PropTypes.shape({\r\n            projects: PropTypes.array.isRequired,\r\n           count: PropTypes.number.isRequired,\r\n        }),\r\n        list: PropTypes.array.isRequired,\r\n    }\r\n\r\n    state = {\r\n        redirect: false,\r\n    }\r\n\r\n    addNewProject = (item) => {\r\n        if (this.props.idUser) {\r\n            this.props.dispatch(middlewareCreateProject(this.props.idUser, this.props.list, item.title, item.type));\r\n        } else this.setState({...this.state, redirect: true});\r\n    }\r\n\r\n\r\n    makeList = (list) => {\r\n\r\n        return list.map (project => {\r\n\r\n            return(\r\n                <Item\r\n                    key = {project.id}\r\n                    id = {project.id}\r\n                    name = {project.title}\r\n                    type = {project.type}\r\n                />\r\n            )\r\n        });\r\n    }\r\n\r\n    render(){\r\n        if (this.state.redirect)\r\n            return <Redirect to = '/' />\r\n            else return (\r\n                    <div className = 'projectsList__list'>\r\n                        {this.makeList([...this.props.list])}\r\n                    </div>\r\n                )\r\n    }\r\n\r\n    componentWillMount = () =>\r\n        eventEmitter.on('EventAddProject',this.addNewProject);\r\n\r\n      componentWillUnmount = () =>\r\n        eventEmitter.off('EventAddProject',this.addNewProject);\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        idUser: state.cabinet.idUser,\r\n        list: [...state.cabinet.projects]\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(List);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nimport List from '../List/List.jsx';\r\n\r\nimport './ProjectsSection.scss';\r\n\r\nclass ProjectsSection extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        projects: PropTypes.array,\r\n    }\r\n\r\n    render(){\r\n        return (\r\n                <section className = 'projectsList'>\r\n                <div className = 'container'>\r\n                <div className = 'flex-column'>\r\n                        <div className = 'projectsList__about'>\r\n                            <h3>Your Projects</h3>\r\n                        </div>\r\n                        <List />\r\n                    </div>\r\n                </div>\r\n                </section>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default ProjectsSection;","import React,{Fragment} from 'react';\nimport PropTypes from 'prop-types';\nimport eventEmitter from '../../EventEmitter.js';\nimport {Redirect} from 'react-router-dom';\nimport withFirebase from '../../components/firebaseHOC';\n\nimport {middlewareLogOutUser} from '../../redux/middleware/loadUserMiddleware';\nimport middlewareDelete from '../../redux/middleware/middlewareDelete';\nimport Loader from '../../components/loading/Loader';\nimport {connect} from 'react-redux';\n\nimport Header from '../../components/header/Header';\nimport Modal from '../../components/modalWindow/ModalWindow';\nimport ProjectsSection from '../../components/ProjectsSection/ProjectsSection';\n\nimport './Cabinet.scss';\n\nconst title = require('../../config.json').title;\n\nclass Cabinet extends React.PureComponent {\n\n  static propTypes = {\n    firebase: PropTypes.object.isRequired\n  }\n\n  state = {\n    workMode: 'default',\n  }\n\n  logOut = event => {\n    this.props.dispatch(middlewareLogOutUser(this.props.idUser));\n  }\n\n  deletItem = event => {\n    this.props.dispatch(middlewareDelete({...event, uid: this.props.firebase.getCurrentUser().uid}));\n  }\n\n  changeWorkMode = event => {\n    this.setState ({\n      ...this.state,\n      workMode: event.action,\n    });\n  }\n\n  render(){\n    if (this.props.active){\n      return (\n        <Fragment>\n          <Header title = {title} idUser = {this.props.idUser} />\n          {(this.state.workMode === 'newProject') ? <Modal workMode = {this.state.workMode} /> : null}\n            <ProjectsSection />\n        </Fragment>\n      )\n    } else if (!this.props.firebase.getCurrentUser()) return <Redirect to = '/' />\n    else return <Loader path = '/img/loading.gif' type = 'Cabinet' />\n    }\n\n\n  componentDidMount = () => {\n    eventEmitter.on('EventDeleteItem', this.deletItem);\n    eventEmitter.on('EventChangeWorkMode', this.changeWorkMode);\n  }\n\n  componentWillUnmount = () => {\n    eventEmitter.off('EventDeleteItem', this.deletItem);\n    eventEmitter.off('EventChangeWorkMode', this.changeWorkMode);\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    idUser: state.cabinet.idUser,\n    projects: [...state.cabinet.projects],\n    active: state.cabinet.active\n  }\n}\n\n\n\nexport default connect(mapStateToProps)(withFirebase(Cabinet));\n","import React, {Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nimport withFirebase from '../../components/firebaseHOC';\r\nimport Header from '../../components/header/Header';\r\n\r\nimport './about.scss';\r\n\r\nclass About extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        config: PropTypes.object.isRequired,\r\n        firebase: PropTypes.object.isRequired,\r\n    }\r\n\r\n    state = {\r\n        config: this.props.config\r\n    };\r\n\r\n    render(){\r\n        if (this.props.firebase.getCurrentUser()) {\r\n            const { config } = this.state;\r\n            return (\r\n                <Fragment>\r\n                    <Header title = {config.title} />\r\n                    <section className = 'About'>\r\n                        <div className = 'container'>\r\n                            <div className = 'col-12'>\r\n                                <div className = 'information'>\r\n                                <img alt = 'img' className = 'logoAbout' src = {process.env.PUBLIC_URL + '/img/about.jpg'}/>\r\n                                    <p className ='developer'><span>Developer:</span> {config.about.developer}</p>\r\n                                    <p className = 'year'><span>Year:</span> {config.about.year}</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </section>\r\n                </Fragment>\r\n            )\r\n        } else return <Redirect to = '/' />\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default withFirebase(About);","import {errorAction, loadUpdateCurrentProject} from '../actions';\r\n\r\nconst updateMiddleware = (item) => async (dispatch,getState, {firebase}) => {\r\n    console.log('update');\r\n\r\n    let newProjects = item.projects.map(project => {\r\n        if (project.id === item.idProject) { project.component = [...item.component] }\r\n        return project;\r\n    });\r\n    await firebase.db.collection(\"users\").doc(item.uid).update({\r\n        'projects': newProjects\r\n    })\r\n    .then(response => {\r\n        let project = item.projects.find(itemdb => itemdb.id === item.idProject);\r\n        dispatch(loadUpdateCurrentProject({component: [...project.component], idProject: item.idProject}))\r\n    })\r\n    .catch(error => dispatch(errorAction(error.message)));\r\n};\r\n\r\nexport default updateMiddleware;","import React,{useState} from 'react';\r\nimport eventEmitter from '../../EventEmitter';\r\n\r\nimport './imageViewer.scss';\r\n\r\nfunction ImageViewer(props){\r\n\r\n    let [path] = useState(props.path);\r\n\r\n    const closeViewer = event => {\r\n        eventEmitter.emit(\"EventImageView\", { action: false, target: null});\r\n        event.stopPropagation();\r\n    }\r\n\r\n    return (\r\n        <div onClick = {closeViewer} className = 'ImageViewer'>\r\n            <img src = {path} alt = 'fullImage' />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ImageViewer;","import React, {Fragment} from 'react';\r\nimport eventEmitter from '../../EventEmitter';\r\nimport PropTypes from 'prop-types';\r\nimport { SketchPicker } from 'react-color';\r\nimport './instrumentsPanel.scss';\r\n\r\nimport Icon from '../Icon/icon';\r\n\r\nclass InstrumentsPanel extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        instrumentPanel:  PropTypes.object.isRequired,\r\n        editComponent: PropTypes.object.isRequired\r\n    };\r\n\r\n    state = {\r\n        instrumentPanel: {...this.props.instrumentPanel},\r\n        componentsStats: {\r\n            content: null,\r\n            fontSize: null,\r\n            color: null,\r\n            backgroundImage: null,\r\n            image: null,\r\n            coords: {left: null, top: null} // x, y\r\n        },\r\n        colorPickerAvtive: false,\r\n        images: null,\r\n    };\r\n\r\n    updateSizeText = eventSize => {\r\n        this.setState({\r\n            ...this.state, \r\n            instrumentPanel: {...this.state.instrumentPanel},\r\n            componentsStats: {...this.state.componentsStats, fontSize: eventSize}\r\n        });\r\n    };\r\n\r\n    closePanel = event => {\r\n        eventEmitter.emit('EventClosePanel', {close: false});\r\n    };\r\n\r\n    setSize = event => {\r\n        // let {fontSize} = this.state.componentsStats;\r\n        let {idComponent} = this.state.instrumentPanel;\r\n        let size = event.target.value > 200 ? 200 : event.target.value;\r\n        event.stopPropagation();\r\n        this.setState({\r\n            ...this.state, \r\n            instrumentPanel: {...this.state.instrumentPanel},\r\n            componentsStats: {...this.state.componentsStats,fontSize: size}\r\n        },\r\n            () => eventEmitter.emit(`EventChangeSizeText${idComponent}`, {size: size })\r\n        );\r\n    };\r\n\r\n    setContent = event => {\r\n        let {idComponent} = this.state.instrumentPanel;\r\n        let contentValue = event.target.value;\r\n        this.setState({\r\n            ...this.state, \r\n            instrumentPanel: {...this.state.instrumentPanel},\r\n            componentsStats: {...this.state.componentsStats,content: contentValue}\r\n        },\r\n        () => eventEmitter.emit(`EventChangeContentText${idComponent}`,{content: contentValue}));\r\n        event.stopPropagation();\r\n    };\r\n\r\n    updatePosition = eventItem => {\r\n\r\n        this.setState({\r\n            ...this.state, \r\n            componentsStats: {\r\n                ...this.state.componentsStats,\r\n                coords: {\r\n                    ...this.state.componentsStats.coords,\r\n                    left: eventItem.x,\r\n                    top: eventItem.y\r\n                }\r\n            }\r\n        });\r\n    };\r\n\r\n    setColor = event => {\r\n        event.stopPropagation();\r\n        this.setState({...this.state, colorPickerAvtive: this.state.colorPickerAvtive ? false : true});\r\n    };\r\n\r\n    handleChangeComplete = event => {\r\n\r\n        const {rgb} = event;\r\n        let colorRGB = `rgb(${rgb.r},${rgb.g},${rgb.b},${rgb.a})`;\r\n\r\n        let {idComponent} = this.state.instrumentPanel;\r\n        if (this.state.instrumentPanel.target === 'background')\r\n            eventEmitter.emit('EventChangeColor', colorRGB);\r\n\r\n        else if (this.state.instrumentPanel.target === 'text') {\r\n            this.setState({\r\n                ...this.state,\r\n                componentsStats: {...this.state.componentsStats,color: colorRGB}\r\n            },\r\n            () => eventEmitter.emit(`EventChangeColorText${idComponent}`, colorRGB));\r\n        }\r\n    };\r\n\r\n    saveChanges = event => {\r\n        eventEmitter.emit(\"EventSaveChangesComponent\", {\r\n            ...this.state.componentsStats,\r\n            type: this.state.instrumentPanel.target\r\n        });\r\n    }\r\n\r\n    searchImage = event => {\r\n        eventEmitter.emit('EventModalSearchOn');\r\n    };\r\n\r\n    makePanelInstruments = (type) => {\r\n\r\n        let {fontSize} = this.state.componentsStats;\r\n            switch (type){\r\n                case 'text':\r\n                    return (\r\n                        <Fragment>\r\n                        <p className = 'titleInstument'>Color: </p>\r\n                        <input onClick = {this.setColor} className = 'button_switchColor' type = 'button' value = 'color pick' />\r\n                        <p className = 'titleInstument'>Text size: </p>\r\n                        <input \r\n                            onChange = {this.setSize} \r\n                            type=\"number\"\r\n                            min = '10' max = '200'\r\n                            value = {fontSize ? fontSize : 120 }\r\n                        />\r\n                            { this.state.colorPickerAvtive ?\r\n                                <SketchPicker\r\n                                onChangeComplete={this.handleChangeComplete}\r\n                                />\r\n                                : null\r\n                            }\r\n                        <p className = 'titleInstument'>Content: </p>\r\n                        <input onChange = {this.setContent} maxLength = '20' type = 'text' defaultValue = 'Title' />\r\n                        <input onClick = {this.saveChanges} className = 'saveButtonInstument' type = 'button' value = 'save changes' />\r\n                        </Fragment>\r\n                )\r\n                case 'background': \r\n                    return (\r\n                        <Fragment>\r\n                        <p className = 'titleInstument'>Color: </p>\r\n                        <input onClick = {this.setColor} className = 'button_switchColor' type = 'button' value = 'color pick' />\r\n                            { this.state.colorPickerAvtive ?\r\n                                <SketchPicker\r\n                                onChangeComplete={this.handleChangeComplete}\r\n                                />\r\n                                : null\r\n                            }\r\n                            <input onClick = {this.searchImage} className = 'ImageSearchButton' type = 'button' value = 'background-image' />\r\n                            <input className = 'saveButtonInstument' type = 'button' value = 'save changes' />\r\n                        </Fragment>\r\n                    )\r\n                default: return <p className = 'warningInstruments'>Select elements for accses edit instruments</p>\r\n            }\r\n    };\r\n\r\n    componentDidUpdate = (oldProps, oldState) => {\r\n        let targetBool = oldState.instrumentPanel.target !== this.props.instrumentPanel.target;\r\n        let idBool = oldState.instrumentPanel.idComponent !== this.props.instrumentPanel.idComponent;\r\n        console.log(this.props.instrumentPanel);\r\n        if (idBool || targetBool)\r\n            this.setState({\r\n                ...this.state,\r\n                colorPickerAvtive: false,\r\n                instrumentPanel: {...this.props.instrumentPanel}\r\n            })\r\n        return true;\r\n    };\r\n\r\n    componentDidMount = event => {\r\n        eventEmitter.on(\"EventUpdateSizeText\", this.updateSizeText);\r\n        eventEmitter.on(\"EventUpdatePosition\", this.updatePosition);\r\n    };\r\n\r\n    componentWillUnmount = event => {\r\n        eventEmitter.off(\"EventUpdateSizeText\", this.updateSizeText);\r\n    };\r\n\r\n    render(){\r\n        let { instrumentActive } = this.state.instrumentPanel;\r\n        return (\r\n            <Fragment>\r\n                <div  className = 'instumentsPanel'>\r\n                <button onClick = {this.closePanel} className = 'closeInstrumentsPanel'><Icon path = '/img/close.svg' /></button>\r\n                    <h3>Instruments</h3>\r\n                    {\r\n                        instrumentActive ? \r\n                        <p className = 'TextComponent'>{this.state.instrumentPanel.target}</p>\r\n                        : null\r\n                    }\r\n                    {\r\n                        instrumentActive ?\r\n                        <div  className= 'instuments'>{this.makePanelInstruments(this.state.instrumentPanel.target)}</div>\r\n                        : null\r\n                    }\r\n                </div>\r\n            </Fragment>\r\n        )\r\n    };\r\n};\r\n\r\nexport default InstrumentsPanel;","import React, {useEffect, useState, useRef} from 'react';\r\nimport eventEmitter from '../../../EventEmitter';\r\nimport styled from 'styled-components';\r\n\r\n\r\nconst Background = styled.div`\r\n    position: relative;\r\n    width: 100%;\r\n    height: 95vh;\r\n    background-size: cover;\r\n    background-color: ${props => props.backgroundColor};\r\n    background-image: url(${props => props.backgroundImage});\r\n`;\r\n\r\nconst BackgroundComponent = props => {\r\n\r\n    const [count, setCount] = useState(0);\r\n    let boxComponent = React.createRef();\r\n    let linkRefBox = null;\r\n    let [backgroundColor, setBgColor] = useState(props.background);\r\n    let [backgroundImage, setImage] = useState(props.backgroundImage ? props.backgroundImage : null);\r\n\r\n\r\n\r\n\r\n    const saveWidth = event => {\r\n        setCount(count + 1);\r\n        boxComponent.current.focus();\r\n        let boxInform =  boxComponent.current.getBoundingClientRect();\r\n        eventEmitter.emit('EventSaveWidth', {width: boxInform.width, height: boxInform.height});\r\n    }\r\n\r\n    const openBgInstruments = event => {\r\n        console.log(Background);\r\n        eventEmitter.emit('EventInstrumentPanel',{target: 'background'});\r\n        event.stopPropagation();\r\n    }\r\n\r\n    const changeColor = color => {\r\n        setBgColor(color);\r\n    }\r\n\r\n    const setBackgroundImage = event => {\r\n        const {urlFull} = event;\r\n        setImage(urlFull);\r\n    };\r\n\r\n    const didUpdate = event => {\r\n        console.log('didUpdate');\r\n        if (count === 0 ) saveWidth();\r\n        eventEmitter.on('EventChangeColor', changeColor);\r\n        eventEmitter.on('EventSetBackgroundImage', setBackgroundImage);\r\n        return () => {\r\n            eventEmitter.off('EventChangeColor', changeColor);\r\n            eventEmitter.off('EventSetBackgroundImage', setBackgroundImage);\r\n        }\r\n    }\r\n\r\n    useEffect(didUpdate);\r\n    return (\r\n        <Background\r\n            ref  = {boxComponent}\r\n            onClick={openBgInstruments}\r\n            backgroundColor = {backgroundColor}\r\n            backgroundImage = {backgroundImage}\r\n        >\r\n            {props.children}\r\n        </Background>\r\n    )\r\n}\r\n\r\nexport default BackgroundComponent;","\r\nimport React, {useEffect, useState} from 'react';\r\nimport eventEmitter from '../../../EventEmitter';\r\nimport styled from 'styled-components';\r\n\r\n\r\nconst Title = styled.h1.attrs(props => ({\r\n    style: {\r\n        display: props.shadowDisplay ? 'none' : 'block',\r\n        left: props.coordX ? props.coordX : '50%',\r\n        top:  props.coordY,\r\n}}))`\r\n    position: absolute;\r\n    transform: translate(-50%);\r\n    font-size: ${props => props.size};\r\n    color: ${props => props.textColor};\r\n    text-align: center;\r\n    margin: 0;\r\n`;\r\n\r\n// left: ${props => props.coordX ? props.coordX : '50%'};\r\n// top:  ${props => props.coordY};\r\n\r\nconst TextComponent = props =>  {\r\n\r\n    const [id] = useState(props.id);\r\n\r\n    console.log ('text');\r\n    const [sizeParenBox] = useState({...props.sizeParenBox});\r\n\r\n    let [colorText, setColorText] = useState(props.color);\r\n    let [sizeText, setSizeText] = useState(props.size ? props.size : 120);\r\n    let [contentText, setText] = useState(props.children);\r\n    const [shiftCoords, setShiftCoords] = useState(null)\r\n    const [dragNdrop, setDragNdrop] = useState(null);\r\n\r\n    const openTitleInstruments = event => {\r\n\r\n        eventEmitter.emit(`EventInstrumentPanel`,{\r\n            target: 'text',\r\n            id: id,\r\n            sizeTextValue: sizeText\r\n        });\r\n        event.stopPropagation();\r\n    }\r\n\r\n    const changeColorText = color => {\r\n        setColorText(color);\r\n    }\r\n\r\n    const changeSizeText = eventSize => {\r\n        const {size} = eventSize;\r\n        setSizeText(size);\r\n    }\r\n\r\n    const changeContentText = eventContent => {\r\n        const {content} = eventContent;\r\n        setText(content);\r\n    }\r\n\r\n\r\n    const didUpdate = event => {\r\n        eventEmitter.on(`EventChangeColorText${id}`, changeColorText);\r\n        eventEmitter.on(`EventChangeSizeText${id}`, changeSizeText);\r\n        eventEmitter.on(`EventChangeContentText${id}`, changeContentText);\r\n        return () => {\r\n            eventEmitter.off(`EventChangeColorText${id}`, changeColorText);\r\n            eventEmitter.off(`EventChangeSizeText${id}`, changeSizeText);\r\n            eventEmitter.off(`EventChangeContentText${id}`, changeContentText);\r\n        }\r\n    }\r\n\r\n    const saveCoords = event => {\r\n\r\n        let rect = event.target.getBoundingClientRect();\r\n        let left = rect.left;\r\n        let top = rect.top;\r\n        let width = rect.width;\r\n        let height = rect.height;\r\n        setShiftCoords({x: event.pageX - left - width/2, y: event.pageY - top + height/2.8});\r\n\r\n        event.stopPropagation();\r\n    }\r\n\r\n    const moveText = event => {\r\n\r\n        let coordX = event.pageX - shiftCoords.x;\r\n        let coordY = event.pageY - shiftCoords.y;\r\n        console.log(Title);\r\n        coordX = coordX <= 130 ? 130 : coordX;\r\n        coordY = coordY <= 0 ? 0 : coordY;\r\n        console.log(sizeParenBox);\r\n        let convertToPercentX = (coordX * 100) / sizeParenBox.width;\r\n        let convertToPercentY = (coordY * 100) / sizeParenBox.height;\r\n\r\n        const position = {\r\n            x: convertToPercentX + '%', \r\n            y: convertToPercentY + '%', \r\n            shadowDisplay: event.type === 'drag' ? true : false\r\n        };\r\n        setDragNdrop(position);\r\n        \r\n        if (event.type === 'dragend') \r\n            eventEmitter.emit('EventUpdatePosition', position);\r\n        event.stopPropagation();\r\n    }\r\n\r\n    const weelResizeText = event => {\r\n\r\n        if (event.shiftKey && event.deltaY === -100) {\r\n            let counter = sizeText + 1;\r\n            counter = counter > 200 ? 200 : counter;\r\n            setSizeText(counter);\r\n            eventEmitter.emit('EventUpdateSizeText', counter);\r\n        }\r\n\r\n        if (event.shiftKey && event.deltaY === 100) {\r\n            let counter = sizeText - 1;\r\n             counter = counter <= 10 ? 10 : counter;\r\n             setSizeText(counter);\r\n             eventEmitter.emit('EventUpdateSizeText', counter);\r\n            }\r\n        event.stopPropagation();\r\n    }\r\n    useEffect(didUpdate);\r\n\r\n    return (\r\n        <Title\r\n            onClick={openTitleInstruments}\r\n            textColor = {colorText ? colorText : 'red'}\r\n            size = {sizeText ? sizeText + 'px' : '120px'}\r\n            draggable = {true}\r\n            onMouseDown = {saveCoords}\r\n            onDrag   = {moveText}\r\n            onDragEnd = {moveText}\r\n            onWheel = {weelResizeText}\r\n            coordX = {dragNdrop ? dragNdrop.x : null}\r\n            coordY = {dragNdrop ? dragNdrop.y : null}\r\n            shadowDisplay = {dragNdrop ? dragNdrop.shadowDisplay : false}\r\n        >\r\n            {contentText}\r\n        </Title>\r\n    )\r\n}\r\n\r\nexport default TextComponent;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport TextComponent from '../buildComponents/components/Text';\r\nimport BackgroundComponent from '../buildComponents/components/Background';\r\n\r\nimport eventEmitter from '../../EventEmitter';\r\n\r\nimport './buildMenu.scss';\r\n\r\nclass BuildMenu extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        component: PropTypes.object\r\n    }\r\n\r\n    state = {\r\n        component: {...this.props.component},\r\n        sizeParenBox: {...this.props.sizeParenBox},\r\n        title: 'Title'\r\n    }\r\n\r\n    addText = event => {\r\n        let id = this.props.countComponents;\r\n        let component = [<TextComponent sizeParenBox = {{...this.props.sizeParenBox}} id = {id} key = {`text${id}`}>{this.state.title}</TextComponent>];\r\n        eventEmitter.emit('EventBuildHeaderComponents',{target: 'Header', type: 'text', component: component});\r\n        event.stopPropagation();\r\n    }\r\n\r\n    addBackground = event => {\r\n        let id = this.props.countComponents;\r\n        let background = [<BackgroundComponent id = {id} key = {`bg${id}`}/>];\r\n        eventEmitter.emit('EventBuildHeaderComponents',{target: 'Header', type: 'background', component: background});\r\n\r\n        event.stopPropagation();\r\n    }\r\n\r\n    render(){\r\n        console.log('menuBuild');\r\n        return (\r\n            <div className = 'ComponentsMenu'>\r\n                <button onClick = {this.addBackground} className = 'ImageTool CompoentnsMenu_button' ><span>Image</span></button>\r\n                <button onClick = {this.addText} className = 'TextTool CompoentnsMenu_button' ><span>Text</span></button>\r\n                <button \r\n                    disabled = {this.state.component.name !== 'Header' ? false : true}\r\n                    className = 'ButtonTool CompoentnsMenu_button' >\r\n                    <span>Button</span>\r\n                </button>\r\n                <button className = 'VideoTool CompoentnsMenu_button' ><span>Video</span></button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default BuildMenu;","import React,{Fragment} from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Icon from '../Icon/icon';\r\nimport BuildMenu from '../componentsBuildMenu/BuildMenu';\r\n\r\n\r\nconst ControllersBox = styled.div\r\n    .attrs(props =>({\r\n        style: {\r\n                left: props.coordX,\r\n                top: props.coordY,\r\n        }\r\n    }))\r\n    `position: absolute;\r\n    display: ${props => props.shadowDisplay}\r\n    `;\r\n\r\n\r\nclass Controllers extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        menuActive: PropTypes.bool,\r\n    }\r\n\r\n    state = {\r\n        viewComponentMenu: false,\r\n        shiftX: 0,\r\n        shiftY: 0,\r\n        coordsX: '50%',\r\n        coordsY: '0',\r\n        shadowDisplay: 'block'\r\n    }\r\n\r\n    componentMenu = (event) => {\r\n        this.setState({viewComponentMenu: this.state.viewComponentMenu ? false : true})\r\n    }\r\n\r\n    saveCoords = event => {\r\n        let left = this.controlBox.getBoundingClientRect().left;\r\n        let top = this.controlBox.getBoundingClientRect().top;\r\n        this.setState({...this.state, shiftX: event.pageX - left, \r\n        shiftY: event.pageY - top + 55 });\r\n\r\n        event.stopPropagation();\r\n    }\r\n\r\n    drag = event => {\r\n        if (!this.state.viewComponentMenu)\r\n            this.setState({\r\n                ...this.state,\r\n                coordsX: event.pageX - this.state.shiftX + 'px', \r\n                coordsY: event.pageY - this.state.shiftY + 'px',\r\n                shadowDisplay: event.type === 'drag' ? 'none' : 'block'\r\n            });\r\n        event.stopPropagation();\r\n    }\r\n\r\n    controlBox = null;\r\n    refControll = (node) => this.controlBox = node;\r\n\r\n\r\n    render(){\r\n\r\n        return (\r\n            <Fragment>\r\n            { this.props.menuActive ?\r\n                <ControllersBox\r\n                ref = {this.refControll}\r\n                className = 'ControllersEditComponent'\r\n                coordX = {this.state.coordsX}\r\n                coordY = {this.state.coordsY}\r\n                draggable = {!this.state.viewComponentMenu}\r\n                onMouseDown = {this.saveCoords}\r\n                onClick = {this.componentMenu}\r\n                onDrag   = {this.drag}\r\n                onDragEnd = {this.drag}\r\n                shadowDisplay = {this.state.shadowDisplay}\r\n                >\r\n                    <Icon\r\n                        draggable = {true}\r\n                        onClick = {this.componentMenu}\r\n                        className = 'addButton'\r\n                        path = '/img/addButton.png'\r\n                    />\r\n                    {this.state.viewComponentMenu ? \r\n                        <BuildMenu\r\n                            sizeParenBox = {this.props.sizeParenBox}\r\n                            countComponents = {this.props.countComponents}\r\n                            component = {{...this.props.component}}\r\n                        /> : null\r\n                    }\r\n                </ControllersBox>\r\n                : null\r\n            }\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Controllers;","import React, {Fragment} from 'react';\r\nimport eventEmitter from '../../../EventEmitter';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nimport BackgroundComponent from '../../buildComponents/components/Background';\r\nimport Controllers from '../../controllers/controllers';\r\n\r\n\r\nimport './headerBuild.scss';\r\n\r\nclass HeaderBuild extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        id: PropTypes.number.isRequired,\r\n    }\r\n\r\n    state = {\r\n        idProject: this.props.id,\r\n        component: {...this.props.children},\r\n        sizeParenBox: null,\r\n    }\r\n\r\n    saveWidth = eventItem => {\r\n        this.setState({sizeParenBox: {...eventItem}});\r\n    };\r\n\r\n\r\n    changeMode = (event) => {\r\n        if (!this.props.editStart) {\r\n            let rect = event.currentTarget.getBoundingClientRect();\r\n            const width = rect.width;\r\n            const height = rect.height;\r\n        eventEmitter.emit('EventModeEdit', {...this.state, width: width, height: height});\r\n        }\r\n    }\r\n\r\n    refBox = null;\r\n    refBackground = node => this.refBox = node;\r\n\r\n    render() {\r\n\r\n        console.log('header');\r\n        return (\r\n            <Fragment>\r\n                <div onClick = {this.changeMode} className = 'Header'>\r\n                    <BackgroundComponent background = 'grey'>\r\n                    {  this.props.children.build.component && this.props.children.build.type === 'text'  ?\r\n                            this.props.children.build.component : null\r\n                    }\r\n                    </BackgroundComponent>\r\n                    {!this.props.editStart ? <p className = 'warningEdit'>Click for start edit</p> : null}\r\n                    {!this.state.readyBuild ? \r\n                        <Controllers\r\n                            countComponents = {this.props.countComponents}\r\n                            menuActive = {this.props.menuActive}\r\n                            component = {{...this.state.component}}\r\n                            sizeParenBox = {this.state.sizeParenBox}\r\n                            mainWidth = {this.props.children.mainBoxWidth}\r\n                            mainHeight = {this.props.children.mainBoxHeight}\r\n\r\n                        />\r\n                        : null}\r\n                </div>\r\n            </Fragment>\r\n        )\r\n    }\r\n\r\n    componentDidMount = event => {\r\n        eventEmitter.on('EventSaveWidth', this.saveWidth);\r\n    }\r\n\r\n    componentWillUnmount = event => {\r\n        eventEmitter.off('EventSaveWidth', this.saveWidth);\r\n    }\r\n}\r\nexport default HeaderBuild;","import React,{Fragment} from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport {Redirect} from 'react-router-dom';\r\nimport eventEmitter from '../../EventEmitter';\r\n\r\nimport {loadCurrentProjectAction, exitProjectAction} from '../../redux/actions';\r\nimport updateMiddleware from '../../redux/middleware/updateMiddleware';\r\nimport withFirebase from '../../components/firebaseHOC';\r\nimport {connect} from 'react-redux';\r\n\r\nimport ImageViewer from '../../components/imageViewer/imageViewer';\r\nimport Loader from '../../components/loading/Loader';\r\nimport Header from '../../components/header/Header';\r\nimport InstrumentsPanel from '../../components/instrumentsPanel/InstrumentsPanel';\r\nimport ModalWindow from '../../components/modalWindow/ModalWindow';\r\nimport HeaderBuild from '../../components/buildComponents/header/headerBuild';\r\n\r\nimport './build.scss';\r\n\r\n\r\nclass Build extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        param: PropTypes.string,\r\n        match: PropTypes.shape({\r\n            params: PropTypes.shape({\r\n                param: PropTypes.string.isRequired\r\n            }).isRequired\r\n        }).isRequired\r\n    }\r\n\r\n    state = {\r\n            idProject: parseInt(this.props.match.params.param),\r\n            typeProject: null,\r\n            editComponent: {\r\n                name: null,\r\n                build: {\r\n                    target: null,\r\n                    type: null,\r\n                    component: []\r\n                },\r\n                edit: false\r\n            },\r\n            changeEdit: false,\r\n            instrumentPanel: {\r\n                colorPickerAvtive: false,\r\n                instrumentActive: false,\r\n                target: '',\r\n                idComponent: null,\r\n            },\r\n            menuActive: false,\r\n            editStart: false,\r\n            modalSearch: false,\r\n            modalImageViewer: {action: false, image: null },\r\n        }\r\n\r\n    modalSearchOn = event => {\r\n        this.setState({...this.state, modalSearch: this.state.modalSearch ? false : true});\r\n    }\r\n\r\n    imageViewerSwitch = event => {\r\n        this.setState({\r\n            ...this.state,\r\n            modalImageViewer: {\r\n                ...this.state.modalImageViewer, \r\n                action: event.action, \r\n                target: event.target\r\n            }\r\n        });\r\n    };\r\n\r\n    workModeEdit = itemEvent => {\r\n        if (!this.state.editStart || this.state.changeEdit)\r\n        this.setState({\r\n            ...this.state,\r\n            idProject: itemEvent.idProject,\r\n            editComponent: {\r\n                ...itemEvent.component,\r\n                mainBoxWidth: itemEvent.width,\r\n                mainBoxHeight: itemEvent.height\r\n            },\r\n            menuActive: true,\r\n            editStart: true\r\n        });\r\n\r\n    }\r\n\r\n    openInstrument = itemEvent => {\r\n        console.log(itemEvent);\r\n        if (this.state.editStart)\r\n        this.setState({\r\n            ...this.state,\r\n            instrumentPanel: {\r\n                ...this.state.instrumentPanel,\r\n                instrumentActive: true,\r\n                sizeTextValue: itemEvent.sizeTextValue,\r\n                idComponent: itemEvent.id,\r\n                target: itemEvent.target\r\n            }\r\n        })\r\n    }\r\n\r\n    closePanel = event => {\r\n        this.setState({\r\n            ...this.state,\r\n            instrumentPanel: {\r\n                ...this.state.instrumentPanel,\r\n                colorPickerAvtive: false,\r\n                instrumentActive: event.close\r\n            }\r\n        });\r\n    };\r\n\r\n    addHeaderComponent = itemEvent => {\r\n\r\n        let {component} = this.state.editComponent.build;\r\n        this.setState({\r\n            ...this.state,\r\n            editComponent: {\r\n                ...this.state.editComponent,\r\n                build: {\r\n                    target: itemEvent.target,\r\n                    type: itemEvent.type,\r\n                    component: [...component, ...itemEvent.component]},\r\n            },\r\n        });\r\n    };\r\n\r\n    saveChangesComponent = itemEvent => {\r\n        \r\n        let componentArray = {...itemEvent, name: this.state.editComponent.name};\r\n\r\n        this.props.dispatch(updateMiddleware({\r\n            uid: this.props.idUser,\r\n            projects: [...this.props.currentProject],\r\n            component: [componentArray], \r\n            idProject: this.state.idProject}));\r\n    };\r\n\r\n\r\n    render(){\r\n        let { instrumentActive } = this.state.instrumentPanel;\r\n        if (this.props.active && this.props.loadProject){\r\n            return (\r\n                    <Fragment>\r\n                    {   this.state.modalImageViewer.action ?\r\n                        <ImageViewer path = {this.state.modalImageViewer.target} /> : null\r\n                    }\r\n                    {this.state.modalSearch ?\r\n                        <ModalWindow workMode = 'Search' /> : null\r\n                    }\r\n                    { instrumentActive ?\r\n                        <InstrumentsPanel\r\n                            editComponent =  {{...this.state.editComponent}}\r\n                            instrumentPanel = {{...this.state.instrumentPanel}}\r\n                        />\r\n                        : null\r\n                    }\r\n                        <Header title = \"Constructor\"  />\r\n                        <HeaderBuild\r\n                                editStart = {this.state.editStart}\r\n                                countComponents = {this.state.editComponent.build.component.length}\r\n                                menuActive = {this.state.menuActive}\r\n                                id = {this.state.idProject}\r\n                        >\r\n                            {{...this.state.editComponent, name: 'Header'}}\r\n                        </HeaderBuild>\r\n                    </Fragment>\r\n            )\r\n        } else if (!this.props.firebase.getCurrentUser()) return <Redirect to = '/' />\r\n        else return <Loader path = '/img/loading.gif' type = 'build' />\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevProps.loadProject === this.props.loadProject && this.props.haveUpdateLoading) {\r\n            let current =  this.props.currentProject.find(item => item.id === this.state.idProject)\r\n            this.props.dispatch(loadCurrentProjectAction({\r\n                id: current.id,\r\n                typeProject: current.type,\r\n                component: [...current.component]\r\n            }))\r\n        }\r\n    }\r\n    \r\n\r\n    componentDidMount = () => {\r\n\r\n        if (this.props.active && !this.props.loadProject && this.props.haveUpdateLoading) {\r\n            let current =  this.props.currentProject.find(item => item.id === this.state.idProject)\r\n            this.props.dispatch(loadCurrentProjectAction({\r\n                id: current.id,\r\n                typeProject: current.type,\r\n                component: [...current.component]\r\n            }))\r\n        };\r\n        eventEmitter.on('EventBuildHeaderComponents', this.addHeaderComponent);\r\n        eventEmitter.on('EventSaveChangesComponent', this.saveChangesComponent);\r\n        eventEmitter.on('EventClosePanel', this.closePanel);\r\n        eventEmitter.on('EventModalSearchOn', this.modalSearchOn);\r\n        eventEmitter.on('EventInstrumentPanel', this.openInstrument);\r\n        eventEmitter.on('EventImageView', this.imageViewerSwitch);\r\n        eventEmitter.on('EventModeEdit', this.workModeEdit);\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        console.log('componentWillUnmount');\r\n        if (this.props.active)  this.props.dispatch(exitProjectAction(true));\r\n        eventEmitter.off('EventBuildHeaderComponents', this.addHeaderComponent);\r\n        eventEmitter.off('EventSaveChangesComponent', this.saveChangesComponent);\r\n        eventEmitter.off('EventModalSearchOn', this.modalSearchOn);\r\n        eventEmitter.off('EventClosePanel', this.closePanel);\r\n        eventEmitter.off('EventInstrumentPanel', this.openInstrument);\r\n        eventEmitter.off('EventImageView', this.imageViewerSwitch);\r\n        eventEmitter.off('EventModeEdit', this.workModeEdit);\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n\r\n    console.log(state);\r\n    return {\r\n        ...state.builder,\r\n        active: state.cabinet.active,\r\n        idUser: state.cabinet.idUser,\r\n        currentProject: state.cabinet.projects\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(withFirebase(Build));","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport {Route, Switch} from 'react-router-dom';\r\n\r\nimport {middlewareLoadUserData} from './redux/middleware/loadUserMiddleware';\r\nimport {connect} from 'react-redux';\r\nimport withFirebase from './components/firebaseHOC';\r\nimport Loader from './components/loading/Loader';\r\n\r\nimport Index from './Pages/Index/Index';\r\nimport Cabinet from './Pages/Cabinet/Cabinet';\r\nimport About from './Pages/About/About';\r\nimport Build from './Pages/Build/Build';\r\nimport ErrorPage from './components/ErrorCatch/ErrorPage';\r\n\r\nrequire('es6-promise').polyfill();\r\n\r\nclass App extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        config: PropTypes.object.isRequired,\r\n        firebase: PropTypes.object.isRequired,\r\n    }\r\n\r\n    state = {\r\n        firebase: this.props.firebase,\r\n        firebaseLoadState: false,\r\n    }\r\n\r\n    componentDidMount(){\r\n\r\n        this.props.firebase.auth.onAuthStateChanged((user) => {\r\n\r\n            if (!this.state.firebaseLoadState){\r\n                if (user) this.props.dispatch(middlewareLoadUserData(user.uid));\r\n                this.setState({firebaseLoadState: true});\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    render(){\r\n        if (this.state.firebaseLoadState){\r\n        return (\r\n                            <Switch>\r\n                                <Route\r\n                                    path = '/' exact\r\n                                    render = {(props) => <Index {...props} />}\r\n                                />\r\n                                <Route path = '/Cabinet/' exact component = {Cabinet}/>\r\n                                <Route\r\n                                    path = '/Cabinet/About'\r\n                                    render = {(props) => <About {...props} config = {this.props.config} />}\r\n                                />\r\n                                <Route path = '/Cabinet/Build/:param' component = {Build}/>\r\n                                <Route path = '*' component = {Index} />\r\n                                <Route path = '/crashPage' component = {ErrorPage} />\r\n                            </Switch>\r\n\r\n        )\r\n        } else return <Loader path = '/img/loading.gif' type = 'application' />\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n      active: state.cabinet.active\r\n    }\r\n  }\r\n\r\nexport default connect(mapStateToProps)(withFirebase(App));","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\n\nimport ErrorBoundary from './components/ErrorCatch/ErrorBoundary';\nimport {BrowserRouter} from 'react-router-dom';\nimport {Provider} from 'react-redux';\nimport store from './redux/store';\nimport App from './App.jsx';\nimport 'normalize.css';\n\nconst config = require('./config.json');\n\n\nReactDOM.render(\n    <BrowserRouter basename = '/'>\n        <ErrorBoundary>\n        <Provider store = {store}>\n            <App config = {config} />\n        </Provider>\n        </ErrorBoundary>\n    </BrowserRouter>,\n        document.getElementById('root')\n);\n\nserviceWorker.unregister();\n\n"],"sourceRoot":""}