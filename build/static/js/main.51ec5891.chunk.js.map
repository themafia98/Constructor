{"version":3,"sources":["redux/actions.js","redux/reducerBuilder.js","redux/reducerCabinet.js","redux/reducers.js","redux/store.js","Firebase/firebaseConfig.js","Firebase/Firebase.js","redux/middleware/loadUserMiddleware.js","components/firebaseHOC.jsx","components/loading/Loader.jsx","EventEmitter.js","components/Registration/Registration.jsx","Pages/Index/Index.jsx","components/Icon/icon.jsx","components/header/Header.jsx","components/modalWindow/ModalWindow.jsx","redux/middleware/createProjectMiddleware.js","components/List/Item.jsx","components/List/List.jsx","components/ProjectsSection/ProjectsSection.jsx","Pages/Cabinet/Cabinet.jsx","Pages/About/About.jsx","components/instrumentsPanel/InstrumentsPanel.jsx","components/buildComponents/header/components/headerComponents.jsx","components/componentsBuildMenu/BuildMenu.jsx","components/controllers/controllers.jsx","components/buildComponents/header/headerBuild.jsx","Pages/Build/Build.jsx","App.jsx","index.js"],"names":["loadUserAction","state","type","active","idUser","uid","error","projects","Object","toConsumableArray","errorAction","initialState","nameEditComponent","settingsEditComponent","dateConnect","Date","now","toLocaleString","replace","split","combineReducers","builder","arguments","length","undefined","action","objectSpread","currentEditable","cabinet","middleware","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","thunk","store","createStore","firebaseConfig","apiKey","authDomain","process","REACT_APP_AUTH_DOMAIN","databaseURL","REACT_APP_DATABASE_URL","projectId","storageBucket","REACT_APP_STORAGE_BUCKET","messagingSenderId","REACT_APP_MESSAGING_SENDER_ID","appId","REACT_APP_APPID","interfaceFirebase","require","Firebase","classCallCheck","this","firebase","initializeApp","auth","db","firestore","rules","setPersistence","Auth","Persistence","email","password","signInWithEmailAndPassword","createUserWithEmailAndPassword","signOut","currentUser","saveSession","middlewareLogin","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","dispatch","wrap","_context","prev","next","login","then","response","collection","doc","user","get","docUser","data","id","catch","message","stop","_x","apply","middlewareLogOutUser","_ref3","_callee3","_context3","_x3","withFirebase","Component","props","react_default","createElement","assign","Loader","_useState","useState","path","slicedToArray","className","src","alt","stream","EventEmitter","_this","emailRef","passwordRef","setRefEmail","node","setRefPassword","createUser","event","value","registration","set","eventStream","emit","setState","autoComplete","ref","onClick","React","PureComponent","Index","title","registrationActive","regStatus","wrongEnter","statusRegistration","additionalUserInfo","isNewUser","console","log","showBox","authTo","emailImput","passwordImput","componentDidMount","e","on","componentWillUnmount","off","react_router","to","currentSelected","components_Registration_Registration","connect","Icon","_useState3","_useState5","draggable","iconPath","CabinetIcon","Header","logOut","redirect","location","pathname","history","push","add","icon","react_router_dom","withRouter","ModalWindow","workMode","newProject","validateName","validateType","disabled","name","warning","lengthMax","lengthMin","inputSelect","disabledButton","addNewProject","mode","selectOption","inputs","target","defineProperty","lengthInput","cancel","refSelect","onChange","placeholder","react","middlewareCreateProject","list","lastProject","lastIndex","components","update","concat","stopPropagation","data-id","List","item","makeList","map","project","List_Item","key","componentWillMount","ProjectsSection","components_List_List","Cabinet","changeWorkMode","header_Header","modalWindow_ModalWindow","components_ProjectsSection_ProjectsSection","getCurrentUser","config","about","developer","year","InstrumentsPanel","instrumentPanel","colorPickerAvtive","resetAll","closePanel","close","setColor","handleChangeComplete","makePanelInstruments","lib","onChangeComplete","componentDidUpdate","oldProps","oldState","instrumentActive","Title","styled","h1","_templateObject","size","textColor","Background","div","_templateObject2","background","openBgInstruments","video","_templateObject3","openTitleInstruments","TitleComponent","color","children","BackgroundComponent","_useState2","backgroundColor","setBgColor","changeColor","colorHash","rgb","colorRGB","r","g","b","useEffect","BuildMenu","component","addText","componentArrayWrapper","headerComponents_TitleComponent","addBackground","headerComponents_BackgroundComponent","ControllersBox","attrs","style","left","coordX","top","coordY","controllers_templateObject","Controllers","viewComponentMenu","shiftX","shiftY","coordsX","coordsY","componentMenu","saveCoords","getBoundingClientRect","pageX","pageY","drag","controlBox","refControll","menuActive","onMouseDown","onDrag","onDragEnd","componentsBuildMenu_BuildMenu","HeaderBuild","idProject","changeMode","editStart","eventEmitter","build","readyBuild","controllers","Build","parseInt","match","params","param","typeProject","editComponent","edit","changeEdit","workModeEdit","itemEvent","openInstrument","addHeaderComponent","instrumentsPanel_InstrumentsPanel","header_headerBuild","App","firebaseLoadState","_this2","onAuthStateChanged","_ref2","_callee2","_context2","_x2","_this3","exact","render","Pages_Index_Index","Pages_About_About","ReactDOM","es","src_App","document","getElementById"],"mappings":"4dAsBMA,EAAiB,SAACC,GACpB,MAAO,CACHC,KArBkB,oBAsBlBC,QAAQ,EACRC,OAAQH,EAAMI,IACdC,MAAO,GACPC,SAASC,OAAAC,EAAA,EAAAD,CAAKP,EAAMM,YAetBG,EAAc,SAACT,GACjB,MAAO,CACHC,KAzCc,gBA0CdI,MAAOL,IC5CTU,EAAe,CACjBC,kBAAmB,KACnBC,sBAAuB,ICFrBF,EAAe,CACjBR,QAAQ,EACRC,OAAQ,KACRG,SAAU,GACVD,MAAO,KACPQ,YAAa,IAAIC,KAAKA,KAAKC,OAAOC,iBAAiBC,QAAQ,OAAO,IAAIC,MAAM,MCHjEC,cAAgB,CAC3BC,QFCW,WAAkC,IAAjCpB,EAAiCqB,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAzBX,EAAcc,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC7C,OAAQC,EAAOvB,MAEX,IDRa,eCST,OAAOM,OAAAkB,EAAA,EAAAlB,CAAA,GACAP,EADP,CAEI0B,gBAAgBnB,OAAAkB,EAAA,EAAAlB,CAAA,GAAKiB,EAAOE,mBAGpC,QAAS,OAAO1B,IETpB2B,QDIW,WAAkC,IAAjC3B,EAAiCqB,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAzBX,EAAcc,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAE7C,OAAOC,EAAOvB,MACV,IFVkB,oBEYd,OAAOM,OAAAkB,EAAA,EAAAlB,CAAA,GACAP,EADP,CAEIE,OAAQsB,EAAOtB,OACfC,OAAQqB,EAAOrB,OACfG,SAAUkB,EAAOlB,WAIzB,IFvBe,iBEwBX,OAAOC,OAAAkB,EAAA,EAAAlB,CAAA,GACAP,EADP,CAEIM,SAAUkB,EAAOlB,WAIzB,IF5BgB,kBE6BZ,OAAOC,OAAAkB,EAAA,EAAAlB,CAAA,GACAP,EADP,CAEIE,QAAQ,EACRC,OAAQ,KACRG,SAAU,KAIlB,IFnCc,gBEoCV,OAAOC,OAAAkB,EAAA,EAAAlB,CAAA,GACAP,EADP,CAEIK,MAAOmB,EAAOnB,QAGtB,QAAS,OAAOL,MEnClB4B,GALc,kBAAXC,QACPA,OAAOC,qCACLD,OAAOC,qCAAqC,IACvCC,KAGPC,YAAgBC,MAKHC,EAHDC,YAAYhB,EAAiBS,+FCZrCQ,EAAiB,CACnBC,OAAQ,0CACRC,WAAYC,+CAAYC,sBACxBC,YAAaF,+CAAYG,uBACzBC,UAAW,oBACXC,cAAeL,+CAAYM,yBAC3BC,kBAAmBP,+CAAYQ,8BAC/BC,MAAOT,+CAAYU,iBC2BnBC,GAhCSC,EAAQ,KACHA,EAAQ,KA+BF,eA3BhB,SAAAC,IAAc7C,OAAA8C,EAAA,EAAA9C,CAAA+C,KAAAF,GACNG,IAASC,cAAcpB,GACvBkB,KAAKG,KAAOF,IAASE,OACrBH,KAAKI,GAAKH,IAASI,oEAGfC,GACJ,OAAON,KAAKG,KAAKI,eAAeN,IAASE,KAAKK,KAAKC,YAAYH,kCAGjEI,EAAOC,GACL,OAAOX,KAAKG,KAAKS,2BAA2BF,EAAOC,wCAG9CD,EAAOC,GACZ,OAAOX,KAAKG,KAAKU,+BAA+BH,EAAOC,qCAIvD,OAAOX,KAAKG,KAAKW,mDAIjB,OAAOd,KAAKG,KAAKY,uBAKjCnB,EAAkBoB,YAAY,WAEfpB,QCnCTqB,EAAkB,SAACP,EAAMC,GAAP,sBAAAO,EAAAjE,OAAAkE,EAAA,EAAAlE,CAAAmE,EAAAC,EAAAC,KAAoB,SAAAC,EAAMC,GAAN,OAAAJ,EAAAC,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAC9B3B,EAAS4B,MAAMnB,EAAMC,GAC1BmB,KAAK,SAAAC,GACF9B,EAASG,GAAG4B,WAAW,SAASC,IAAIF,EAASG,KAAKpF,KAAKqF,MACtDL,KAAK,SAAAM,GACF,IAAIF,EAAOE,EAAQC,OACnBb,EAAS/E,EAAe,CAACK,IAAKsF,EAAQE,GAAItF,SAASC,OAAAC,EAAA,EAAAD,CAAKiF,EAAKlF,iBAGpEuF,MAAM,SAACxF,GAAD,OAAWyE,EAASrE,EAAYJ,EAAMyF,YATT,wBAAAd,EAAAe,SAAAlB,MAApB,gBAAAmB,GAAA,OAAAxB,EAAAyB,MAAA3C,KAAAjC,YAAA,IAqBlB6E,EAAuB,SAAC9F,GAAD,sBAAA+F,EAAA5F,OAAAkE,EAAA,EAAAlE,CAAAmE,EAAAC,EAAAC,KAAS,SAAAwB,EAAMtB,GAAN,OAAAJ,EAAAC,EAAAI,KAAA,SAAAsB,GAAA,cAAAA,EAAApB,KAAAoB,EAAAnB,MAAA,cAAAmB,EAAAnB,KAAA,EAC5B3B,EAASa,UACdgB,KAAM,SAAAC,GACHP,EPOG,CACH7E,KAjCgB,kBAkChBC,QAAQ,EACRC,OAAQ,KACRE,MAAO,GACPC,SAAU,OOVbuF,MAAM,SAAAxF,GAAK,OAAIyE,EAASrE,EAAYJ,EAAMyF,YALT,wBAAAO,EAAAN,SAAAK,MAAT,gBAAAE,GAAA,OAAAH,EAAAF,MAAA3C,KAAAjC,YAAA,ICjBdkF,EAJM,SAAAC,GAAS,OAAI,SAAAC,GAAK,OACnCC,EAAA/B,EAAAgC,cAACH,EAADjG,OAAAqG,OAAA,CAAWrD,SAAYA,GAAckD,cCF1BI,EAAA,SAASJ,GAAO,IAAAK,EACZC,mBAASN,EAAMO,MAAvBA,EADoBzG,OAAA0G,EAAA,EAAA1G,CAAAuG,EAAA,MAE3B,OACQJ,EAAA/B,EAAAgC,cAAA,OAAKO,UAAY,aACbR,EAAA/B,EAAAgC,cAAA,OAAKO,UAAY,SAASC,IAAOH,EAAMI,IAAM,WAC7CV,EAAA/B,EAAAgC,cAAA,oBAAYF,EAAMxG,QCLnBoH,EADA,WAAIC,cCoEJf,uNAvDXvG,MAAQ,CACJuD,SAAUgE,EAAKd,MAAMlD,SACrBlD,MAAO,QAGXmH,SAAW,OACXC,YAAc,OAEdC,YAAc,SAACC,GAAD,OAAUJ,EAAKC,SAAWG,KACxCC,eAAiB,SAACD,GAAD,OAAUJ,EAAKE,YAAcE,KAE9CE,WAAa,SAACC,GAEV,IAAM9D,EAAQuD,EAAKC,SAASO,MACtB9D,EAAWsD,EAAKE,YAAYM,MAC1BxE,EAAagE,EAAKd,MAAlBlD,SAERA,EAASyE,aAAahE,EAAOC,GAC5BmB,KAAK,SAAAC,GACF9B,EAASG,GAAG4B,WAAW,SAASC,IAAIF,EAASG,KAAKpF,KAAK6H,IAAI,CACvD3H,SAAY,GACZ0D,MAASA,IACVoB,KAAK,kBAAM8C,EAAYC,KAAK,2BAA4B9C,OAE9DQ,MAAM,SAACxF,GAAD,OAAWkH,EAAKa,SAAS,CAAC/H,MAAOA,EAAMyF,qFAG1C,IACGzF,EAAUiD,KAAKtD,MAAfK,MAEP,OACIqG,EAAA/B,EAAAgC,cAAA,OAAKO,UAAY,mBACbR,EAAA/B,EAAAgC,cAAA,OAAMO,UAAY,oBACdR,EAAA/B,EAAAgC,cAAA,0BACAD,EAAA/B,EAAAgC,cAAA,QAAM0B,aAAe,MAAMnB,UAAY,WACjC7G,EACEqG,EAAA/B,EAAAgC,cAAA,KAAGO,UAAY,SAAS7G,GACtB,KAENqG,EAAA/B,EAAAgC,cAAA,sBACAD,EAAA/B,EAAAgC,cAAA,SAAO2B,IAAOhF,KAAKoE,YAAazH,KAAO,SACvCyG,EAAA/B,EAAAgC,cAAA,wBACAD,EAAA/B,EAAAgC,cAAA,SAAQ0B,aAAe,MAAMC,IAAOhF,KAAKsE,eAAgB3H,KAAO,aAChEyG,EAAA/B,EAAAgC,cAAA,SAAO4B,QAAWjF,KAAKuE,WACfX,UAAY,cACZjH,KAAO,SACP8H,MAAQ,2BApDbS,IAAMC,iBCM3BC,qNAMF1I,MAAQ,CACJ2I,MAAQ,cACRC,oBAAoB,EACpBC,WAAW,EACXC,YAAY,EACZzI,MAAO,MAGX0I,mBAAqB,SAACjB,GAClBA,EAAMkB,mBAAmBC,UACzB1B,EAAKa,SAAL7H,OAAAkB,EAAA,EAAAlB,CAAA,GAAkBgH,EAAKvH,MAAvB,CACgB6I,WAAW,EACXD,oBAAoB,EACpBvI,MAAO,qBAErB6I,QAAQC,IAAI,yBAGlBC,QAAU,SAACtB,GACPP,EAAKa,SAAL7H,OAAAkB,EAAA,EAAAlB,CAAA,GACOgH,EAAKvH,MADZ,CAEA4I,oBAAoBrB,EAAKvH,MAAM4I,yBAInCS,OAAS,SAACvB,GACFP,EAAKd,MAAM3B,SAASP,EAAgBgD,EAAK+B,WAAWvB,MAAOR,EAAKgC,cAAcxB,WAEtFuB,WAAa,OACbC,cAAgB,OAChB/B,SAAW,SAACG,GAAD,OAAUJ,EAAK+B,WAAa3B,KACvCF,YAAc,SAACE,GAAD,OAAUJ,EAAKgC,cAAgB5B,KA6C7C6B,kBAAoB,SAACC,GACjBvB,EAAYwB,GAAG,2BAA4BnC,EAAKwB,uBAEpDY,qBAAuB,SAACF,GACpBvB,EAAY0B,IAAI,2BAA4BrC,EAAKwB,6FA9CjD,GAAKzF,KAAKmD,MAAMvG,OAsCT,OAAIoD,KAAKmD,MAAMvG,OAAewG,EAAA/B,EAAAgC,cAACkD,EAAA,EAAD,CAAUC,GAAK,aACvCpD,EAAA/B,EAAAgC,cAACE,EAAD,CAAQG,KAAO,mBAAmB/G,KAAO,YAtClD,IAAI8J,EAAkBzG,KAAKtD,MAAM4I,mBACjC,OACIlC,EAAA/B,EAAAgC,cAAA,OAAKO,UAAY,yBACTR,EAAA/B,EAAAgC,cAAA,UAAKrD,KAAKtD,MAAM2I,OAChBjC,EAAA/B,EAAAgC,cAAA,OAAKO,UAAY,YACbR,EAAA/B,EAAAgC,cAAA,OAAKO,UAAY,aACbR,EAAA/B,EAAAgC,cAAA,0BAEIrD,KAAKmD,MAAMqC,YAAcxF,KAAKtD,MAAM6I,UACpCnC,EAAA/B,EAAAgC,cAAA,KAAGO,UAAY,SAAS5D,KAAKmD,MAAMqC,YACjC,KAENpC,EAAA/B,EAAAgC,cAAA,mBACAD,EAAA/B,EAAAgC,cAAA,SAAO2B,IAAOhF,KAAKkE,SAAUvH,KAAO,SACpCyG,EAAA/B,EAAAgC,cAAA,qBACAD,EAAA/B,EAAAgC,cAAA,SAAO2B,IAAOhF,KAAKmE,YAAaxH,KAAO,aACvCyG,EAAA/B,EAAAgC,cAAA,SACI4B,QAAWjF,KAAK+F,OAChBnC,UAAY,cACZjH,KAAO,SACP8H,MAAQ,UACZrB,EAAA/B,EAAAgC,cAAA,SACI4B,QAAWjF,KAAK8F,QAChBlC,UAAa6C,EAAe,uBACtB,cACN9J,KAAO,SACP8H,MAAQ,mBAKhBzE,KAAKtD,MAAM4I,mBACXlC,EAAA/B,EAAAgC,cAACqD,EAAD,CAAcvG,KAAQH,KAAKmD,MAAMhD,OAC/B,aA1EV+E,IAAMC,gBA8FXwB,cAJS,SAACjK,GACrB,MAAO,CAACE,OAAQF,EAAM2B,QAAQzB,OAAQ4I,WAAY9I,EAAM2B,QAAQtB,QAGrD4J,CAAyBvB,UCzFzBwB,MAhBf,SAAczD,GAAM,IAAAK,EACDC,mBAASN,EAAMO,MAAvBA,EADSzG,OAAA0G,EAAA,EAAA1G,CAAAuG,EAAA,MAAAqD,EAEIpD,mBAASN,EAAMS,UAAYT,EAAMS,UAAY,MAA1DA,EAFS3G,OAAA0G,EAAA,EAAA1G,CAAA4J,EAAA,MAAAC,EAGIrD,qBAASN,EAAM4D,WAA5BA,EAHS9J,OAAA0G,EAAA,EAAA1G,CAAA6J,EAAA,MAKhB,OACA1D,EAAA/B,EAAAgC,cAAA,OACI0D,UAAaA,EACb9B,QAAW9B,EAAM8B,QAAU9B,EAAM8B,QAAU,KAC3CrB,UAAaA,EACbyB,MAASlC,EAAMkC,MAAQlC,EAAMkC,MAAQ,KACrCxB,IAAOH,EAAMI,IAAM,UCDrBkD,EAAWnH,EAAQ,IAAqBoH,YAExCC,6MAMFxK,MAAQ,CACJ2I,MAAOpB,EAAKd,MAAMkC,SAGtB8B,OAAS,SAAC3C,GACNP,EAAKd,MAAM3B,SAASoB,EAAqBqB,EAAKd,MAAMtG,YAGxDuK,SAAW,SAACjB,GAC6B,mBAAjClC,EAAKd,MAAMkE,SAASC,UACpBrD,EAAKd,MAAMoE,QAAQC,KAAK,qBAGhCC,IAAM,SAACtB,GACHvB,EAAYC,KAAK,sBAAsB,CAAC3G,OAAQ,wFAIhD,OACIkF,EAAA/B,EAAAgC,cAAA,cACID,EAAA/B,EAAAgC,cAAA,OAAKO,UAAY,aACbR,EAAA/B,EAAAgC,cAAA,OAAKO,UAAY,YACTR,EAAA/B,EAAAgC,cAAA,OAAKO,UAAY,uBACbR,EAAA/B,EAAAgC,cAACqE,EAAD,CAAMhE,KAAQsD,IACd5D,EAAA/B,EAAAgC,cAACsE,EAAA,EAAD,CAASnB,GAAK,YAAWpD,EAAA/B,EAAAgC,cAAA,UAAKrD,KAAKtD,MAAM2I,SAEX,aAAjCrF,KAAKmD,MAAMkE,SAASC,SACjBlE,EAAA/B,EAAAgC,cAAA,OAAK4B,QAAWjF,KAAKyH,IAAK7D,UAAY,iCAClCR,EAAA/B,EAAAgC,cAACqE,EAAD,CAAMhE,KAAO,mBAEf,KAEFN,EAAA/B,EAAAgC,cAAA,OAAMO,UAAY,aACdR,EAAA/B,EAAAgC,cAACqE,EAAD,CAAMzC,QAAWjF,KAAKoH,SAAU/B,MAAQ,QAAQ3B,KAAO,wBACvDN,EAAA/B,EAAAgC,cAACqE,EAAD,CAAMzC,QAAWjF,KAAKmH,OAAQ9B,MAAQ,SAAS3B,KAAO,+BAxCrEwB,IAAMhC,WAiDZyD,gBAAUiB,YAAWV,YCoErBW,qNAxHXnL,MAAQ,CACJoL,SAAU7D,EAAKd,MAAM2E,SAErBC,WAAY,CACRC,cAAc,EACdC,cAAc,EACdC,UAAU,EACVC,KAAM,GACNxL,KAAM,SAEVyL,QAAS,CACLC,UAAW,yBACXC,UAAW,uBACX3L,KAAM,6BAId4L,YAAc,OAEdC,eAAiB,SAACtK,OAIlBuK,cAAgB,SAACjE,GACb,IAAIkE,EAAOzE,EAAKvH,MAAMuH,EAAKvH,MAAMoL,UAC7BY,EAAKT,cAAiBS,EAAKV,eAC3BpD,EAAYC,KAAK,kBACjB,CACIQ,MAAOpB,EAAKvH,MAAMuH,EAAKvH,MAAMoL,UAAUK,KACvCxL,KAAMsH,EAAKvH,MAAMuH,EAAKvH,MAAMoL,UAAUnL,OAG1CiI,EAAYC,KAAK,sBAAsB,CAAC3G,OAAQ,gBAIxDyK,aAAe,SAACnE,GAEZ,IAAIoE,EAAM3L,OAAAkB,EAAA,EAAAlB,CAAA,GAAOgH,EAAKvH,MAAMuH,EAAKvH,MAAMoL,WACvCc,EAAOjM,KAAO6H,EAAMqE,OAAOpE,MAC3BmE,EAAOX,aAA+B,UAAhBW,EAAOjM,KAC7BiM,EAAOV,UAAWU,EAAOX,eAAgBW,EAAOZ,aAChD/D,EAAKa,SAAL7H,OAAAkB,EAAA,EAAAlB,CAAA,GACOgH,EAAKvH,MADZO,OAAA6L,EAAA,EAAA7L,CAAA,GAEKgH,EAAKvH,MAAMoL,SAAWc,QAI/BZ,aAAe,SAACxD,GAEZ,IAAIoE,EAAM3L,OAAAkB,EAAA,EAAAlB,CAAA,GAAOgH,EAAKvH,MAAMuH,EAAKvH,MAAMoL,WACvCc,EAAOT,KAAO3D,EAAMqE,OAAOpE,MAC3B,IAAIsE,EAAcH,EAAOT,KAAKnK,OAC9B4K,EAAOZ,aAAee,GAAe,GAAKA,EAAc,GACxDH,EAAOV,UAAWU,EAAOX,eAAgBW,EAAOZ,aAEhD/D,EAAKa,SAAL7H,OAAAkB,EAAA,EAAAlB,CAAA,GACOgH,EAAKvH,MADZO,OAAA6L,EAAA,EAAA7L,CAAA,GAEKgH,EAAKvH,MAAMoL,SAAWc,QAI/BI,OAAS,SAACxE,GACNI,EAAYC,KAAK,sBAAsB,CAAC3G,OAAQ,eAGpD+K,UAAY,SAAC5E,GAAD,OAAUJ,EAAKsE,YAAclE,2EAIrC,OAAQrE,KAAKtD,MAAMoL,UAEf,IAAK,aACD,OACQ1E,EAAA/B,EAAAgC,cAAA,OAAKO,UAAY,SACbR,EAAA/B,EAAAgC,cAAA,gCAEIrD,KAAKtD,MAAMsD,KAAKtD,MAAMoL,UAAUK,KAAKnK,QAAU,EAC/CoF,EAAA/B,EAAAgC,cAAA,QAAMO,UAAY,WAAW5D,KAAKtD,MAAM0L,QAAQE,WAAoB,KAGpEtI,KAAKtD,MAAMsD,KAAKtD,MAAMoL,UAAUK,KAAKnK,QAAU,GAC/CoF,EAAA/B,EAAAgC,cAAA,QAAMO,UAAY,WAAW5D,KAAKtD,MAAM0L,QAAQC,WAAoB,KAExEjF,EAAA/B,EAAAgC,cAAA,SACIO,UAAa5D,KAAKtD,MAAMsD,KAAKtD,MAAMoL,UAAUE,aAAe,QAAU,QACtEvD,MAASzE,KAAKtD,MAAMsD,KAAKtD,MAAMoL,UAAUK,KACzCe,SAAYlJ,KAAKgI,aACjBrL,KAAO,OACPwM,YAAc,iBAGbnJ,KAAKtD,MAAMsD,KAAKtD,MAAMoL,UAAUG,aAC8B,KAA/D7E,EAAA/B,EAAAgC,cAAA,QAAMO,UAAY,WAAW5D,KAAKtD,MAAM0L,QAAQzL,MAEpDyG,EAAA/B,EAAAgC,cAAA,UAAQ6F,SAAYlJ,KAAK2I,cACrBvF,EAAA/B,EAAAgC,cAAA,UAAQoB,MAAQ,SAAhB,YACArB,EAAA/B,EAAAgC,cAAA,UAAQoB,MAAQ,WAAhB,WACArB,EAAA/B,EAAAgC,cAAA,UAAQoB,MAAQ,aAAhB,cAEJrB,EAAA/B,EAAAgC,cAAA,SACI4B,QAAWjF,KAAKyI,cAChB7E,UAAY,eACZsE,SAAYlI,KAAKtD,MAAMsD,KAAKtD,MAAMoL,UAAUI,SAC5CvL,KAAO,SACP8H,MAAQ,WAEZrB,EAAA/B,EAAAgC,cAAA,SAAO4B,QAAWjF,KAAKgJ,OAAQrM,KAAM,SAAS8H,MAAQ,YAItE,QACI,OACIrB,EAAA/B,EAAAgC,cAAC+F,EAAA,SAAD,cAvHMlE,IAAMC,gBCF1BkE,EAA0B,SAACvM,EAAKwM,EAAMjE,EAAO1I,GAAnB,sBAAAuE,EAAAjE,OAAAkE,EAAA,EAAAlE,CAAAmE,EAAAC,EAAAC,KAA4B,SAAAC,EAAMC,GAAN,IAAA+H,EAAAC,EAAA,OAAApI,EAAAC,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACpD2H,EADoDtM,OAAAC,EAAA,EAAAD,CAClCqM,GAChBE,EAAYD,EAAYvL,OAAUuL,EAAYA,EAAYvL,OAAO,GAAGsE,GAAK,EAAI,EACnFiH,EAAY/B,KAAK,CAAClF,GAAMkH,EAAWnE,MAASA,EAAO1I,KAAQA,EAAM8M,WAAY,KAHrB/H,EAAAE,KAAA,EAKlD3B,EAASG,GAAG4B,WAAW,SAASC,IAAInF,GAAK4M,OAAO,CAClD1M,SAAYuM,IAEfzH,KAAM,kBAAMN,GhBLY9E,EgBKiB6M,EhBJnC,CACH5M,KATe,iBAUfK,SAASC,OAAAC,EAAA,EAAAD,CAAKP,MAHM,IAACA,IgBMxB6F,MAAM,SAAAxF,GAAK,OAAIyE,EAASrE,EAAYJ,EAAMyF,YATa,wBAAAd,EAAAe,SAAAlB,MAA5B,gBAAAmB,GAAA,OAAAxB,EAAAyB,MAAA3C,KAAAjC,YAAA,WCiBjB6J,kBAlBf,SAAczE,GAAO,IAAAK,EACJC,mBAASN,EAAMb,IAArBA,EADUrF,OAAA0G,EAAA,EAAA1G,CAAAuG,EAAA,MAAAqD,EAEFpD,mBAASN,EAAMgF,MAAvBA,EAFUlL,OAAA0G,EAAA,EAAA1G,CAAA4J,EAAA,MAAAC,EAGFrD,mBAASN,EAAMxG,MAAvBA,EAHUM,OAAA0G,EAAA,EAAA1G,CAAA6J,EAAA,MAUjB,OACI1D,EAAA/B,EAAAgC,cAAA,OAAK4B,QALK,SAACT,GACXrB,EAAMoE,QAAQC,KAAd,kBAAAmC,OAAqCrH,IACrCkC,EAAMoF,mBAGiBhG,UAAY,OAAOiG,UAAWvH,GACjDc,EAAA/B,EAAAgC,cAAA,KAAGO,UAAY,eAAeuE,GAC9B/E,EAAA/B,EAAAgC,cAAA,KAAGO,UAAY,eAAejH,MCLpCmN,6MAUFpN,MAAQ,CACJ0K,UAAU,KAGdqB,cAAgB,SAACsB,GACT9F,EAAKd,MAAMtG,OACXoH,EAAKd,MAAM3B,SAAS6H,EAAwBpF,EAAKd,MAAMtG,OAAQoH,EAAKd,MAAMmG,KAAMS,EAAK1E,MAAO0E,EAAKpN,OAC9FsH,EAAKa,SAAL7H,OAAAkB,EAAA,EAAAlB,CAAA,GAAkBgH,EAAKvH,MAAvB,CAA8B0K,UAAU,QAInD4C,SAAW,SAACV,GAER,OAAOA,EAAKW,IAAK,SAAAC,GAEb,OACI9G,EAAA/B,EAAAgC,cAAC8G,EAAD,CACIC,IAAOF,EAAQ5H,GACfA,GAAM4H,EAAQ5H,GACd6F,KAAQ+B,EAAQ7E,MAChB1I,KAAQuN,EAAQvN,YAgBhC0N,mBAAqB,kBACjBzF,EAAYwB,GAAG,kBAAkBnC,EAAKwE,kBAExCpC,qBAAuB,kBACrBzB,EAAY0B,IAAI,kBAAkBrC,EAAKwE,wFAbvC,OAAIzI,KAAKtD,MAAM0K,SACJhE,EAAA/B,EAAAgC,cAACkD,EAAA,EAAD,CAAUC,GAAK,MAEdpD,EAAA/B,EAAAgC,cAAA,OAAKO,UAAY,sBACZ5D,KAAKgK,SAAL/M,OAAAC,EAAA,EAAAD,CAAkB+C,KAAKmD,MAAMmG,eAzCnCpE,IAAMC,eA6DVwB,cAPS,SAACjK,GACrB,MAAO,CACHG,OAAQH,EAAM2B,QAAQxB,OACtByM,KAAKrM,OAAAC,EAAA,EAAAD,CAAKP,EAAM2B,QAAQrB,YAIjB2J,CAAyBmD,GCzCzBQ,2LAhBP,OACQlH,EAAA/B,EAAAgC,cAAA,WAASO,UAAY,gBACrBR,EAAA/B,EAAAgC,cAAA,OAAKO,UAAY,aACjBR,EAAA/B,EAAAgC,cAAA,OAAKO,UAAY,eACTR,EAAA/B,EAAAgC,cAAA,OAAKO,UAAY,uBACbR,EAAA/B,EAAAgC,cAAA,4BAEJD,EAAA/B,EAAAgC,cAACkH,EAAD,gBAdMrF,IAAMC,gBCQ9BE,WAAQxF,EAAQ,IAAqBwF,OAErCmF,8MAMJ9N,MAAQ,CACNoL,SAAU,aAGZX,OAAS,SAAC3C,GACRP,EAAKd,MAAM3B,SAASoB,EAAqBqB,EAAKd,MAAMtG,YAGtD4N,eAAiB,SAACjG,GAChBP,EAAKa,SAAL7H,OAAAkB,EAAA,EAAAlB,CAAA,GACKgH,EAAKvH,MADV,CAEEoL,SAAUtD,EAAMtG,aAkBpBgI,kBAAoB,WAClBtB,EAAYwB,GAAG,sBAAuBnC,EAAKwG,mBAG7CpE,qBAAuB,WACrBzB,EAAY0B,IAAI,sBAAuBrC,EAAKwG,yFAlB5C,OAAIzK,KAAKmD,MAAMvG,OAEXwG,EAAA/B,EAAAgC,cAAC+F,EAAA,SAAD,KACEhG,EAAA/B,EAAAgC,cAACqH,EAAD,CAAQrF,MAASA,GAAOxI,OAAUmD,KAAKmD,MAAMtG,SACnB,eAAxBmD,KAAKtD,MAAMoL,SAA6B1E,EAAA/B,EAAAgC,cAACsH,EAAD,CAAO7C,SAAY9H,KAAKtD,MAAMoL,WAAe,KACrF1E,EAAA/B,EAAAgC,cAACuH,EAAD,OAGI5K,KAAKmD,MAAMlD,SAAS4K,iBACpBzH,EAAA/B,EAAAgC,cAACE,EAAD,CAAQG,KAAO,mBAAmB/G,KAAO,YADIyG,EAAA/B,EAAAgC,cAACkD,EAAA,EAAD,CAAUC,GAAK,aA9BtDtB,IAAMC,eAsDbwB,eAVS,SAACjK,GACvB,MAAO,CACLG,OAAQH,EAAM2B,QAAQxB,OACtBG,SAASC,OAAAC,EAAA,EAAAD,CAAKP,EAAM2B,QAAQrB,UAC5BJ,OAAQF,EAAM2B,QAAQzB,SAMX+J,CAAyB1D,EAAauH,KC3BtCvH,wNA7BXvG,MAAQ,CACJoO,OAAQ7G,EAAKd,MAAM2H,gFAInB,GAAI9K,KAAKmD,MAAMlD,SAAS4K,iBAAkB,KAC9BC,EAAW9K,KAAKtD,MAAhBoO,OACR,OACI1H,EAAA/B,EAAAgC,cAAC+F,EAAA,SAAD,KACIhG,EAAA/B,EAAAgC,cAACqH,EAAD,CAAQrF,MAASyF,EAAOzF,QACxBjC,EAAA/B,EAAAgC,cAAA,WAASO,UAAY,SACjBR,EAAA/B,EAAAgC,cAAA,OAAKO,UAAY,aACbR,EAAA/B,EAAAgC,cAAA,OAAKO,UAAY,UACbR,EAAA/B,EAAAgC,cAAA,OAAKO,UAAY,eACjBR,EAAA/B,EAAAgC,cAAA,OAAKS,IAAM,MAAMF,UAAY,YAAYC,IAAO5E,oBAC5CmE,EAAA/B,EAAAgC,cAAA,KAAGO,UAAW,aAAYR,EAAA/B,EAAAgC,cAAA,0BAA1B,IAAmDyH,EAAOC,MAAMC,WAChE5H,EAAA/B,EAAAgC,cAAA,KAAGO,UAAY,QAAOR,EAAA/B,EAAAgC,cAAA,qBAAtB,IAA0CyH,EAAOC,MAAME,WAO5E,OAAO7H,EAAA/B,EAAAgC,cAACkD,EAAA,EAAD,CAAUC,GAAK,aA9BjBtB,IAAMC,2BC2FX+F,sNArFXxO,MAAQ,CACJyO,gBAAgBlO,OAAAkB,EAAA,EAAAlB,CAAA,GAAKgH,EAAKd,MAAMgI,iBAChCC,mBAAmB,KAGvBC,SAAW,SAAA7G,GACPoB,QAAQC,IAAIrB,EAAMqE,QAClBrE,EAAMoF,kBACF3F,EAAKvH,MAAM0O,mBACfnH,EAAKa,SAAL7H,OAAAkB,EAAA,EAAAlB,CAAA,GAAkBgH,EAAKvH,MAAvB,CAA8B0O,mBAAmB,QAGrDE,WAAa,SAAA9G,GACTI,EAAYC,KAAK,kBAAmB,CAAC0G,OAAO,OAGhDC,SAAW,SAAAhH,GACPA,EAAMoF,kBACN3F,EAAKa,SAAL7H,OAAAkB,EAAA,EAAAlB,CAAA,GAAkBgH,EAAKvH,MAAvB,CAA8B0O,mBAAmBnH,EAAKvH,MAAM0O,wBAGhEK,qBAAuB,SAAAjH,GACnBI,EAAYC,KAAK,mBAAoBL,MAGzCkH,qBAAuB,SAAC/O,GACpB,OAAQA,GACJ,IAAK,OACL,OACIyG,EAAA/B,EAAAgC,cAAA,SAAI1G,GAGR,IAAK,aACD,OACIyG,EAAA/B,EAAAgC,cAAC+F,EAAA,SAAD,KACAhG,EAAA/B,EAAAgC,cAAA,SAAO4B,QAAWhB,EAAKuH,SAAU5H,UAAY,qBAAqBjH,KAAO,SAAS8H,MAAQ,aACpFR,EAAKvH,MAAM0O,kBACThI,EAAA/B,EAAAgC,cAACsI,GAAA,aAAD,CACAC,iBAAkB3H,EAAKwH,uBAErB,MAMlB,QACI,OACIrI,EAAA/B,EAAAgC,cAAA,KAAGO,UAAY,sBAAf,mDA0BhBiI,mBAAqB,SAACC,EAAUC,GAO9B,OALIA,EAASZ,gBAAgBtC,SAAW5E,EAAKd,MAAMgI,gBAAgBtC,QACjE5E,EAAKa,SAAL7H,OAAAkB,EAAA,EAAAlB,CAAA,GACOgH,EAAKvH,MADZ,CAEIyO,gBAAgBlO,OAAAkB,EAAA,EAAAlB,CAAA,GAAKgH,EAAKd,MAAMgI,qBAE/B,2EA3BD,IACEa,EAAqBhM,KAAKtD,MAAMyO,gBAAhCa,iBACN,OACI5I,EAAA/B,EAAAgC,cAAA,OAAMO,UAAY,mBAClBR,EAAA/B,EAAAgC,cAAA,UAAQ4B,QAAWjF,KAAKsL,WAAY1H,UAAY,yBAAwBR,EAAA/B,EAAAgC,cAACqE,EAAD,CAAMhE,KAAO,oBACjFN,EAAA/B,EAAAgC,cAAA,yBAEI2I,EACA5I,EAAA/B,EAAAgC,cAAA,KAAGO,UAAY,4BAA4B5D,KAAKtD,MAAMyO,gBAAgBtC,QACpE,KAGFmD,EACA5I,EAAA/B,EAAAgC,cAAA,OAAMO,UAAW,cAAc5D,KAAK0L,qBAAqB1L,KAAKtD,MAAMyO,gBAAgBtC,SAClF,aA3ES3D,IAAMC,8fCJrC,IAAM8G,GAAQC,KAAOC,GAAVC,KAIM,SAAAjJ,GAAK,OAAIA,EAAMkJ,MACnB,SAAAlJ,GAAK,OAAIA,EAAMmJ,YAKtBC,GAAaL,KAAOM,IAAVC,KAIE,SAAAtJ,GAAK,OAAIA,EAAMuJ,aAO3BC,IAJQT,KAAOU,MAAVC,MAIe,SAAArI,GAEtBI,EAAYC,KAAK,uBAAuB,CAACgE,OAAQ,eACjDrE,EAAMoF,oBASJkD,GAAuB,SAAAtI,GAEzBI,EAAYC,KAAK,uBAAuB,CAACgE,OAAQ,SACjDrE,EAAMoF,mBAGJmD,GAAiB,SAAA5J,GAAK,OAAIC,EAAA/B,EAAAgC,cAAC4I,GAAD,CAAOhH,QAAS6H,GAAsBR,UAAanJ,EAAM6J,MAAOX,KAAQlJ,EAAMkJ,MAAOlJ,EAAM8J,WAGrHC,GAAsB,SAAA/J,GAAS,IAAAK,EAEGC,mBAASN,EAAMuJ,YAFlBS,EAAAlQ,OAAA0G,EAAA,EAAA1G,CAAAuG,EAAA,GAE5B4J,EAF4BD,EAAA,GAEXE,EAFWF,EAAA,GAI3BG,EAAc,SAAAC,GAAa,IACtBC,EAAOD,EAAPC,IACHC,EAAQ,OAAA9D,OAAU6D,EAAIE,EAAd,KAAA/D,OAAmB6D,EAAIG,EAAvB,KAAAhE,OAA4B6D,EAAII,EAAhC,KAAAjE,OAAqC6D,EAAInM,EAAzC,KACZgM,EAAWI,IAWf,OADAI,oBAPkB,SAAArJ,GAEd,OADAI,EAAYwB,GAAG,mBAAoBkH,GAC5B,WACH1I,EAAY0B,IAAI,mBAAoBgH,MAMxClK,EAAA/B,EAAAgC,cAACkJ,GAAD,CACItH,QAAS0H,GACTD,WAAcU,GAEbjK,EAAM8J,WChBJa,sNAtCXpR,MAAQ,CACJqR,UAAU9Q,OAAAkB,EAAA,EAAAlB,CAAA,GAAKgH,EAAKd,MAAM4K,cAG9BC,QAAU,SAAAxJ,GAEN,IAAIyJ,EAAwB,GAC5BA,EAAsBzG,KAAKpE,EAAA/B,EAAAgC,cAAC6K,GAAD,CAAgB9D,IAAM,SAAS4C,MAAQ,MAAMX,KAAO,SAApD,iBAC3BzH,EAAYC,KAAK,6BAA6B,CAACgE,OAAQ,SAAUlM,KAAM,OAAQoR,UAAWE,IAC1FzJ,EAAMoF,qBAGVuE,cAAgB,SAAA3J,GAEZ,IAAIyJ,EAAwB,GAC5BA,EAAsBzG,KAAKpE,EAAA/B,EAAAgC,cAAC+K,GAAD,CAAqBhE,IAAM,WAAW4C,MAAQ,SACzEpI,EAAYC,KAAK,6BAA6B,CAACgE,OAAQ,SAAUlM,KAAM,aAAcoR,UAAWE,IAEhGzJ,EAAMoF,2FAKN,OACIxG,EAAA/B,EAAAgC,cAAA,OAAKO,UAAY,kBACbR,EAAA/B,EAAAgC,cAAA,UAAQ4B,QAAWjF,KAAKmO,cAAevK,UAAY,mCAAmCR,EAAA/B,EAAAgC,cAAA,sBACtFD,EAAA/B,EAAAgC,cAAA,UAAQ4B,QAAWjF,KAAKgO,QAASpK,UAAY,kCAAkCR,EAAA/B,EAAAgC,cAAA,qBAC/ED,EAAA/B,EAAAgC,cAAA,UACI6E,SAA0C,WAA9BlI,KAAKtD,MAAMqR,UAAU5F,KACjCvE,UAAY,oCACZR,EAAA/B,EAAAgC,cAAA,uBAEJD,EAAA/B,EAAAgC,cAAA,UAAQO,UAAY,mCAAmCR,EAAA/B,EAAAgC,cAAA,8BAtC/C6B,IAAMC,2GCD9B,IAAMkJ,GAAiBnC,KAAOM,IAAI8B,MAAM,SAAAnL,GAAK,MAAK,CACtCoL,MAAO,CACHC,KAAMrL,EAAMsL,OACZC,IAAKvL,EAAMwL,UAHJzC,CAAH0C,MA8ELC,8MA/DXnS,MAAQ,CACJoS,mBAAmB,EACnBC,OAAQ,EACRC,OAAQ,EACRC,QAAS,MACTC,QAAS,OAGbC,cAAgB,SAAC3K,GACbP,EAAKa,SAAS,CAACgK,mBAAmB7K,EAAKvH,MAAMoS,uBAGjDM,WAAa,SAAA5K,GACT,IAAIgK,EAAOhK,EAAMqE,OAAOwG,wBAAwBb,KAC5CE,EAAMlK,EAAMqE,OAAOwG,wBAAwBX,IAC/CzK,EAAKa,SAAL7H,OAAAkB,EAAA,EAAAlB,CAAA,GAAkBgH,EAAKvH,MAAvB,CAA8BqS,OAAQvK,EAAM8K,MAAQd,EACpDQ,OAAQxK,EAAM+K,MAAQb,EAAM,MAE5BlK,EAAMoF,qBAGV4F,KAAO,SAAAhL,GACEP,EAAKvH,MAAMoS,mBAChB7K,EAAKa,SAAL7H,OAAAkB,EAAA,EAAAlB,CAAA,GAAkBgH,EAAKvH,MAAvB,CAA8BuS,QAASzK,EAAM8K,MAAQrL,EAAKvH,MAAMqS,OAAS,KAC7DG,QAAS1K,EAAM+K,MAAQtL,EAAKvH,MAAMsS,OAAS,QAEvDxK,EAAMoF,qBAGV6F,WAAa,OACbC,YAAc,SAACrL,GAAD,OAAUJ,EAAKwL,WAAapL,2EAItC,OACIjB,EAAA/B,EAAAgC,cAAC+F,EAAA,SAAD,KACEpJ,KAAKmD,MAAMwM,WACTvM,EAAA/B,EAAAgC,cAACgL,GAAD,CACArJ,IAAOhF,KAAK0P,YACZ9L,UAAY,2BACZ6K,OAAUzO,KAAKtD,MAAMuS,QACrBN,OAAU3O,KAAKtD,MAAMwS,QACrBnI,WAAc/G,KAAKtD,MAAMoS,kBACzBc,YAAe5P,KAAKoP,WACpBnK,QAAWjF,KAAKmP,cAChBU,OAAY7P,KAAKwP,KACjBM,UAAa9P,KAAKwP,MAEdpM,EAAA/B,EAAAgC,cAACqE,EAAD,CACIX,WAAa,EACb9B,QAAWjF,KAAKmP,cAChBvL,UAAY,YACZF,KAAO,uBAEV1D,KAAKtD,MAAMoS,kBAAoB1L,EAAA/B,EAAAgC,cAAC0M,GAAD,CAAWhC,UAAS9Q,OAAAkB,EAAA,EAAAlB,CAAA,GAAQ+C,KAAKmD,MAAM4K,aAAiB,MAE1F,aA9DQ7I,IAAMC,eCmCjB6K,sNAnCXtT,MAAQ,CACJuT,UAAWhM,EAAKd,MAAMb,GACtByL,UAAU9Q,OAAAkB,EAAA,EAAAlB,CAAA,GAAKgH,EAAKd,MAAM8J,aAI9BiD,WAAa,SAAC1L,GACLP,EAAKd,MAAMgN,WAChBC,EAAavL,KAAK,gBAAlB5H,OAAAkB,EAAA,EAAAlB,CAAA,GAAuCgH,EAAKvH,QAE5CkJ,QAAQC,IAAIrB,EAAMqE,iFAIlB,OACIzF,EAAA/B,EAAAgC,cAAC+F,EAAA,SAAD,KACIhG,EAAA/B,EAAAgC,cAAA,OAAK4B,QAAWjF,KAAKkQ,WAAYtM,UAAY,UACzCR,EAAA/B,EAAAgC,cAAC+K,GAAD,CAAqB1B,WAAa,QAC/B1M,KAAKmD,MAAM8J,SAASoD,MAAMtC,WAAgD,SAAnC/N,KAAKmD,MAAM8J,SAASoD,MAAM1T,KAC5DqD,KAAKmD,MAAM8J,SAASoD,MAAMtC,UAAY,MAG5C/N,KAAKmD,MAAMgN,UAAoE,KAAxD/M,EAAA/B,EAAAgC,cAAA,KAAGO,UAAY,eAAf,wBACvB5D,KAAKtD,MAAM4T,WAMP,KALFlN,EAAA/B,EAAAgC,cAACkN,GAAD,CACIZ,WAAc3P,KAAKmD,MAAMwM,WACzB5B,UAAS9Q,OAAAkB,EAAA,EAAAlB,CAAA,GAAQ+C,KAAKtD,MAAMqR,sBAhC9B7I,IAAMC,gBCO1BqL,sNAWF9T,MAAQ,CACAuT,UAAWQ,SAASxM,EAAKd,MAAMuN,MAAMC,OAAOC,OAC5CC,YAAa,KACbC,cAAe,CAAC3I,KAAM,KAAMkI,MAAO,GAAIU,MAAM,GAC7CC,YAAY,EACZ7F,gBAAiB,CAAEa,kBAAkB,EAAOnD,OAAQ,IACpD8G,YAAY,EACZQ,WAAW,KAGnBc,aAAe,SAAAC,GAENjN,EAAKvH,MAAMyT,YAAalM,EAAKvH,MAAMsU,YACxC/M,EAAKa,SAAL7H,OAAAkB,EAAA,EAAAlB,CAAA,GACOgH,EAAKvH,MADZ,CAEIuT,UAAWiB,EAAUjB,UACrBa,cAAc7T,OAAAkB,EAAA,EAAAlB,CAAA,GAAKiU,EAAUnD,WAC7B4B,YAAY,EACZQ,WAAW,QAKnBgB,eAAiB,SAAAD,GACTjN,EAAKvH,MAAMyT,WACflM,EAAKa,SAAL7H,OAAAkB,EAAA,EAAAlB,CAAA,GACOgH,EAAKvH,MADZ,CAEIyO,gBAAgBlO,OAAAkB,EAAA,EAAAlB,CAAA,GACTgH,EAAKvH,MAAMyO,gBADH,CAEXa,kBAAkB,EAClBnD,OAAQqI,EAAUrI,eAI9ByC,WAAa,SAAA9G,GACTP,EAAKa,SAAL7H,OAAAkB,EAAA,EAAAlB,CAAA,GACOgH,EAAKvH,MADZ,CAEIyO,gBAAgBlO,OAAAkB,EAAA,EAAAlB,CAAA,GAAKgH,EAAKvH,MAAMyO,gBAAjB,CAAkCa,iBAAkBxH,EAAM+G,cAIjF6F,mBAAqB,SAAAF,GACjBjN,EAAKa,SAAL7H,OAAAkB,EAAA,EAAAlB,CAAA,GACOgH,EAAKvH,MADZ,CAEIoU,cAAc7T,OAAAkB,EAAA,EAAAlB,CAAA,GAAKgH,EAAKvH,MAAMoU,cAAjB,CACTT,MAAO,CAACxH,OAAQqI,EAAUrI,OAAQlM,KAAMuU,EAAUvU,KAAMoR,UAAU9Q,OAAAC,EAAA,EAAAD,CAAKiU,EAAUnD,oBAkC7F7H,kBAAoB,WAChBkK,EAAahK,GAAG,6BAA8BnC,EAAKmN,oBACnDhB,EAAahK,GAAG,kBAAmBnC,EAAKqH,YACxC8E,EAAahK,GAAG,uBAAwBnC,EAAKkN,gBAC7Cf,EAAahK,GAAG,gBAAiBnC,EAAKgN,iBAG1C5K,qBAAuB,WACnB+J,EAAa9J,IAAI,6BAA8BrC,EAAKmN,oBACpDhB,EAAa9J,IAAI,kBAAmBrC,EAAKqH,YACzC8E,EAAa9J,IAAI,uBAAwBrC,EAAKkN,gBAC9Cf,EAAa9J,IAAI,gBAAiBrC,EAAKgN,uFAtCvCrL,QAAQC,IAAI,SACZD,QAAQC,IAAI7F,KAAKtD,OAFb,IAGEsP,EAAqBhM,KAAKtD,MAAMyO,gBAAhCa,iBACN,OAAIhM,KAAKmD,MAAMvG,OAEPwG,EAAA/B,EAAAgC,cAAC+F,EAAA,SAAD,KACE4C,EACE5I,EAAA/B,EAAAgC,cAACgO,GAAD,CACIP,cAAa7T,OAAAkB,EAAA,EAAAlB,CAAA,GAAS+C,KAAKtD,MAAMoU,eACjC3F,gBAAelO,OAAAkB,EAAA,EAAAlB,CAAA,GAAQ+C,KAAKtD,MAAMyO,mBAEpC,KAEF/H,EAAA/B,EAAAgC,cAACqH,EAAD,CAAQrF,MAAQ,gBAChBjC,EAAA/B,EAAAgC,cAACiO,GAAD,CACQnB,UAAanQ,KAAKtD,MAAMyT,UACxBR,WAAc3P,KAAKtD,MAAMiT,WACzBrN,GAAMtC,KAAKtD,MAAMuT,WAHzBhT,OAAAkB,EAAA,EAAAlB,CAAA,GAKS+C,KAAKtD,MAAMoU,cALpB,CAKmC3I,KAAM,aAIzCnI,KAAKmD,MAAMlD,SAAS4K,iBACpBzH,EAAA/B,EAAAgC,cAACE,EAAD,CAAQG,KAAO,mBAAmB/G,KAAO,UADIyG,EAAA/B,EAAAgC,cAACkD,EAAA,EAAD,CAAUC,GAAK,aAtF5DtB,IAAMC,gBAmHXwB,eAVS,SAACjK,GAErB,OAAOO,OAAAkB,EAAA,EAAAlB,CAAA,GACAP,EAAMoB,QADb,CAEIlB,OAAQF,EAAM2B,QAAQzB,OACtBC,OAAQH,EAAM2B,QAAQxB,OACtBuB,gBAAiB,MAIVuI,CAAyB1D,EAAauN,KCvH/Ce,8MAOF7U,MAAQ,CACJuD,SAAUgE,EAAKd,MAAMlD,SACrBuR,mBAAmB,sFAGJ,IAAAC,EAAAzR,KAEfA,KAAKmD,MAAMlD,SAASE,KAAKuR,mBAAmB,SAACxP,GrBbtB,IAACpF,EqBef2U,EAAK/U,MAAM8U,oBACRtP,GAAMuP,EAAKtO,MAAM3B,UrBhBL1E,EqBgBqCoF,EAAKpF,IrBhB3C,eAAA6U,EAAA1U,OAAAkE,EAAA,EAAAlE,CAAAmE,EAAAC,EAAAC,KAAS,SAAAsQ,EAAMpQ,GAAN,OAAAJ,EAAAC,EAAAI,KAAA,SAAAoQ,GAAA,cAAAA,EAAAlQ,KAAAkQ,EAAAjQ,MAAA,cAAAiQ,EAAAjQ,KAAA,EAC1B3B,EAASG,GAAG4B,WAAW,SAASC,IAAInF,GAAKqF,MAC9CL,KAAK,SAAAM,GACF,IAAIF,EAAOE,EAAQC,OACnBb,EAAS/E,EAAe,CAACK,IAAKA,EAAKE,SAASC,OAAAC,EAAA,EAAAD,CAAKiF,EAAKlF,eAEzDuF,MAAM,SAAAxF,GAAK,OAAIyE,EAASrE,EAAYJ,EAAMyF,YANX,wBAAAqP,EAAApP,SAAAmP,MAAT,gBAAAE,GAAA,OAAAH,EAAAhP,MAAA3C,KAAAjC,YAAA,KqBiBf0T,EAAK3M,SAAS,CAAC0M,mBAAmB,wCAMtC,IAAAO,EAAA/R,KACJ,OAAIA,KAAKtD,MAAM8U,kBAEXpO,EAAA/B,EAAAgC,cAACsE,EAAA,EAAD,KACQvE,EAAA/B,EAAAgC,cAACkD,EAAA,EAAD,KACInD,EAAA/B,EAAAgC,cAACkD,EAAA,EAAD,CACI7C,KAAO,IAAIsO,OAAK,EAChBC,OAAU,SAAC9O,GAAD,OAAWC,EAAA/B,EAAAgC,cAAC6O,EAAU/O,MAEpCC,EAAA/B,EAAAgC,cAACkD,EAAA,EAAD,CAAO7C,KAAO,YAAYsO,OAAK,EAACjE,UAAavD,KAC7CpH,EAAA/B,EAAAgC,cAACkD,EAAA,EAAD,CACI7C,KAAO,iBACPuO,OAAU,SAAC9O,GAAD,OAAWC,EAAA/B,EAAAgC,cAAC8O,GAADlV,OAAAqG,OAAA,GAAWH,EAAX,CAAkB2H,OAAUiH,EAAK5O,MAAM2H,aAEhE1H,EAAA/B,EAAAgC,cAACkD,EAAA,EAAD,CAAO7C,KAAO,wBAAwBqK,UAAayC,OAIrDpN,EAAA/B,EAAAgC,cAACE,EAAD,CAAQG,KAAO,mBAAmB/G,KAAO,uBA1C7CuI,IAAMC,eAoDTwB,eANS,SAACjK,GACrB,MAAO,CACLE,OAAQF,EAAM2B,QAAQzB,SAIb+J,CAAyB1D,EAAasO,KC1D/CzG,WAASjL,EAAQ,KAGvBuS,IAASH,OACL7O,EAAA/B,EAAAgC,cAACgP,EAAA,EAAD,CAAUzT,MAASA,GACfwE,EAAA/B,EAAAgC,cAACiP,GAAD,CAAKxH,OAAUA,MAEfyH,SAASC,eAAe","file":"static/js/main.51ec5891.chunk.js","sourcesContent":["const CREATE_PROJECT = 'CREATE_PROJECT';\r\nconst LOAD_CURRENT = 'LOAD_CURRENT';\r\nconst LOG_OUT_CABINET = 'LOG_OUT_CABINET';\r\nconst LOAD_USER_CABINET = 'LOAD_USER_CABINET';\r\nconst ERROR_CABINET = 'ERROR_CABINET';\r\n\r\n\r\nconst createProjectAction = (state) => {\r\n    return {\r\n        type: CREATE_PROJECT,\r\n        projects: [...state],\r\n    }\r\n}\r\n\r\nconst loadCurrentProjectAction = (state) => {\r\n    return {\r\n        type: LOAD_CURRENT,\r\n        currentEditable: state,\r\n    }\r\n\r\n}\r\n\r\nconst loadUserAction = (state) => {\r\n    return {\r\n        type: LOAD_USER_CABINET,\r\n        active: true,\r\n        idUser: state.uid,\r\n        error: '',\r\n        projects: [...state.projects]\r\n    }\r\n}\r\n\r\nconst logOutAction = (state) => {\r\n\r\n    return {\r\n        type: LOG_OUT_CABINET,\r\n        active: false,\r\n        idUser: null,\r\n        error: '',\r\n        projects: []\r\n    }\r\n}\r\n\r\nconst errorAction = (state) => {\r\n    return {\r\n        type: ERROR_CABINET,\r\n        error: state\r\n    }\r\n}\r\n\r\nexport {\r\n    CREATE_PROJECT, createProjectAction, /* cabinet */\r\n    LOAD_USER_CABINET, loadUserAction, /* cabinet */\r\n    LOG_OUT_CABINET, logOutAction, /* cabinet */\r\n    LOAD_CURRENT, loadCurrentProjectAction, /* builder */\r\n    ERROR_CABINET, errorAction, /* both */\r\n}","import {LOAD_CURRENT} from './actions';\r\n\r\nconst initialState = {\r\n    nameEditComponent: null,\r\n    settingsEditComponent: {},\r\n};\r\nexport default (state = initialState, action) => {\r\n    switch (action.type){\r\n\r\n        case LOAD_CURRENT: {\r\n            return {\r\n                ...state,\r\n                currentEditable: {...action.currentEditable}\r\n            }\r\n        }\r\n        default: return state;\r\n    }\r\n};","import {LOAD_USER_CABINET, LOG_OUT_CABINET, ERROR_CABINET, CREATE_PROJECT} from './actions';\r\n\r\nconst initialState = {\r\n    active: false,\r\n    idUser: null,\r\n    projects: [],\r\n    error: null,\r\n    dateConnect: new Date(Date.now()).toLocaleString().replace(/\\s/ig,'').split(','),\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n\r\n    switch(action.type) {\r\n        case LOAD_USER_CABINET: {\r\n\r\n            return {\r\n                ...state,\r\n                active: action.active,\r\n                idUser: action.idUser,\r\n                projects: action.projects\r\n            }\r\n        }\r\n\r\n        case CREATE_PROJECT: {\r\n            return {\r\n                ...state,\r\n                projects: action.projects\r\n            }\r\n        }\r\n\r\n        case LOG_OUT_CABINET: {\r\n            return {\r\n                ...state,\r\n                active: false,\r\n                idUser: null,\r\n                projects: []\r\n            }\r\n        }\r\n\r\n        case ERROR_CABINET: {\r\n            return {\r\n                ...state,\r\n                error: action.error\r\n            }\r\n        }\r\n        default: return state;\r\n    }\r\n}\r\n\r\n","import {combineReducers} from 'redux';\r\nimport reducerBuilder from './reducerBuilder';\r\nimport reducerCabinet from './reducerCabinet';\r\n\r\nexport default combineReducers({\r\n    builder: reducerBuilder,\r\n    cabinet: reducerCabinet,\r\n});","import {createStore, applyMiddleware, compose} from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport combineReducers from './reducers';\r\n\r\nconst composeEnhancers =\r\n  typeof window === 'object' &&\r\n  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?\r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\r\n    }) : compose;\r\n\r\nconst middleware = composeEnhancers(\r\n  applyMiddleware(thunk)\r\n);\r\nconst store = createStore(combineReducers, middleware);\r\n\r\n\r\nexport default store;","// setings in root folder / firebase.env\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyBrLv9RyGWXCeEETRqBbBo3EVOcibmnJwU\",\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n    databaseURL: process.env.REACT_APP_DATABASE_URL,\r\n    projectId: \"constructor-acb61\",\r\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n    appId: process.env.REACT_APP_APPID\r\n};\r\n\r\nexport {firebaseConfig}","import firebase from '@firebase/app';\r\nimport {firebaseConfig} from './firebaseConfig';\r\n\r\nconst auth = require('firebase/auth');\r\nconst firestore = require('firebase/firestore');\r\n\r\nclass Firebase {\r\n\r\n        constructor(){\r\n                firebase.initializeApp(firebaseConfig);\r\n                this.auth = firebase.auth();\r\n                this.db = firebase.firestore();\r\n        }\r\n\r\n        saveSession(rules){\r\n                return this.auth.setPersistence(firebase.auth.Auth.Persistence[rules]);\r\n        }\r\n\r\n        login(email, password){\r\n                return this.auth.signInWithEmailAndPassword(email, password);\r\n        }\r\n\r\n        registration(email, password){\r\n                return this.auth.createUserWithEmailAndPassword(email, password)\r\n        }\r\n\r\n        signOut(){\r\n                return this.auth.signOut()\r\n        }\r\n\r\n        getCurrentUser() {\r\n                return this.auth.currentUser\r\n        }\r\n}\r\n\r\nlet interfaceFirebase = new Firebase();\r\ninterfaceFirebase.saveSession('SESSION');\r\n\r\nexport default interfaceFirebase;\r\n\r\nexport { auth, firestore };\r\n\r\n","import firebase from '../../Firebase/Firebase';\r\nimport {loadUserAction, errorAction, logOutAction} from '../actions';\r\n\r\nconst middlewareLogin = (email,password) => async dispatch => {\r\n        await firebase.login(email,password)\r\n        .then(response =>{\r\n            firebase.db.collection(\"users\").doc(response.user.uid).get()\r\n            .then(docUser => {\r\n                let user = docUser.data();\r\n                dispatch(loadUserAction({uid: docUser.id, projects: [...user.projects]}))\r\n            })\r\n        })\r\n        .catch((error) => dispatch(errorAction(error.message)));\r\n    }\r\n\r\nconst middlewareLoadUserData = (uid) => async dispatch => {\r\n        await firebase.db.collection(\"users\").doc(uid).get()\r\n        .then(docUser => {\r\n            let user = docUser.data();\r\n            dispatch(loadUserAction({uid: uid, projects: [...user.projects]}))\r\n        })\r\n        .catch(error => dispatch(errorAction(error.message)));\r\n    }\r\n\r\nconst middlewareLogOutUser = (uid) => async dispatch => {\r\n    await firebase.signOut()\r\n    .then (response => {\r\n        dispatch(logOutAction());\r\n    })\r\n    .catch(error => dispatch(errorAction(error.message)));\r\n}\r\nexport {\r\n    middlewareLogin,middlewareLoadUserData, middlewareLogOutUser\r\n}","import React from 'react';\r\nimport firebase from '../Firebase/Firebase';\r\n\r\nconst withFirebase = Component => props => (\r\n    <Component firebase = {firebase} {...props} />\r\n);\r\n\r\nexport default withFirebase;","import React,{useState} from 'react';\r\n\r\nexport default function(props) {\r\n    const [path] = useState(props.path);\r\n    return (\r\n            <div className = 'loaderBox'>\r\n                <img className = 'loader' src = {path} alt = 'loader'></img> \r\n                <p>Loading {props.type}</p>\r\n            </div>\r\n    )\r\n}","import {EventEmitter} from 'events';\r\nconst stream = new EventEmitter();\r\nexport default stream;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport eventStream from '../../EventEmitter';\r\nimport './registration.scss';\r\n\r\nimport withFirebase from '../../components/firebaseHOC';\r\n\r\n\r\nclass Registration extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        firebase: PropTypes.object.isRequired,\r\n    }\r\n\r\n    state = {\r\n        firebase: this.props.firebase,\r\n        error: null,\r\n    }\r\n\r\n    emailRef = null;\r\n    passwordRef = null;\r\n\r\n    setRefEmail = (node) => this.emailRef = node;\r\n    setRefPassword = (node) => this.passwordRef = node;\r\n\r\n    createUser = (event) => {\r\n\r\n        const email = this.emailRef.value;\r\n        const password = this.passwordRef.value;\r\n        const { firebase } = this.props;\r\n\r\n        firebase.registration(email, password)\r\n        .then(response => {\r\n            firebase.db.collection(\"users\").doc(response.user.uid).set({\r\n                'projects': [],\r\n                'email': email,\r\n            }).then(() => eventStream.emit('EventRegistrationCorrect', response))\r\n        })\r\n        .catch((error) => this.setState({error: error.message}));\r\n    };\r\n\r\n    render(){\r\n        let  { error } = this.state;\r\n\r\n        return (\r\n            <div className = 'RegistrationBox'>\r\n                <div  className = 'RegistrationForm'>\r\n                    <h3>Registration</h3>\r\n                    <form autoComplete = 'off' className = 'RegForm'>\r\n                        { error ?\r\n                            <p className = 'error'>{error}</p>\r\n                            : null\r\n                        }\r\n                        <span>E-mail</span>\r\n                        <input ref = {this.setRefEmail} type = 'text' />\r\n                        <span>Password</span>\r\n                        <input  autoComplete = \"off\" ref = {this.setRefPassword} type = 'password' />\r\n                        <input onClick = {this.createUser}\r\n                                className = 'loginButton'\r\n                                type = 'button'\r\n                                value = 'registration'\r\n                        />\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\nexport default withFirebase(Registration);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport eventStream from '../../EventEmitter';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nimport {middlewareLogin} from '../../redux/middleware/loadUserMiddleware';\r\n\r\nimport Loader from '../../components/loading/Loader';\r\nimport Registration from '../../components/Registration/Registration';\r\n\r\nimport {connect} from 'react-redux';\r\n\r\nimport './index.scss';\r\n\r\nclass Index extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        config: PropTypes.object,\r\n    }\r\n\r\n    state = {\r\n        title:  \"Constructor\",\r\n        registrationActive: false,\r\n        regStatus: false,\r\n        wrongEnter: false,\r\n        error: ''\r\n    }\r\n\r\n    statusRegistration = (event) => {\r\n        event.additionalUserInfo.isNewUser ?\r\n        this.setState({...this.state,\r\n                        regStatus: true,\r\n                        registrationActive: false,\r\n                        error: 'Account create!'\r\n                    })\r\n        : console.log('error registration');\r\n    }\r\n\r\n    showBox = (event) => {\r\n        this.setState ({\r\n            ...this.state,\r\n        registrationActive: this.state.registrationActive ? false : true\r\n        })\r\n    }\r\n\r\n    authTo = (event) => {\r\n            this.props.dispatch(middlewareLogin(this.emailImput.value, this.passwordImput.value));\r\n}\r\n    emailImput = null;\r\n    passwordImput = null;\r\n    emailRef = (node) => this.emailImput = node;\r\n    passwordRef = (node) => this.passwordImput = node;\r\n\r\n    render(){\r\n        if (!this.props.active) {\r\n            let currentSelected = this.state.registrationActive;\r\n            return (\r\n                <div className = 'LoginPage flex-column'>\r\n                        <h1>{this.state.title}</h1>\r\n                        <div className = 'LoginBox'>\r\n                            <div className = 'LoginForm'>\r\n                                <h3>Connect form</h3>\r\n                                {\r\n                                    this.props.wrongEnter || this.state.regStatus ?\r\n                                    <p className = 'error'>{this.props.wrongEnter}</p>\r\n                                    : null\r\n                                }\r\n                                <p>E-mail</p>\r\n                                <input ref = {this.emailRef} type = 'text' />\r\n                                <p>Password</p>\r\n                                <input ref = {this.passwordRef} type = 'password' />\r\n                                <input \r\n                                    onClick = {this.authTo} \r\n                                    className = 'loginButton'\r\n                                    type = 'button'\r\n                                    value = 'enter' />\r\n                                <input\r\n                                    onClick = {this.showBox}\r\n                                    className = {currentSelected ? `loginButton selected`\r\n                                        : 'loginButton'}\r\n                                    type = 'button'\r\n                                    value = 'registration'\r\n                                    />\r\n                            </div>\r\n                        </div>\r\n                        {\r\n                            this.state.registrationActive ?\r\n                            <Registration auth = {this.props.auth} />\r\n                            : null\r\n                        }\r\n                </div>\r\n            )\r\n        } else if (this.props.active) return <Redirect to = '/Cabinet' />\r\n        else  return <Loader path = '/img/loading.gif' type = 'session' />\r\n    }\r\n\r\n    componentDidMount = (e) => {\r\n        eventStream.on('EventRegistrationCorrect', this.statusRegistration);\r\n    }\r\n    componentWillUnmount = (e) => {\r\n        eventStream.off('EventRegistrationCorrect', this.statusRegistration);\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {active: state.cabinet.active, wrongEnter: state.cabinet.error}\r\n  }\r\n\r\nexport default connect(mapStateToProps)(Index);","import React, {useState} from 'react';\r\n\r\n\r\nfunction Icon(props){\r\n    const [path] = useState(props.path);\r\n    const [className] = useState(props.className ? props.className : null);\r\n    const [draggable] = useState(props.draggable ? true : false);\r\n\r\n    return (\r\n    <img\r\n        draggable = {draggable}\r\n        onClick = {props.onClick ? props.onClick : null}\r\n        className = {className}\r\n        title = {props.title ? props.title : null}\r\n        src = {path} alt = 'icon'>\r\n    </img>\r\n    )\r\n}\r\n\r\nexport default Icon;","import React from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport './header.scss';\r\n\r\nimport {middlewareLogOutUser} from '../../redux/middleware/loadUserMiddleware';\r\nimport {connect} from 'react-redux';\r\nimport {withRouter, NavLink} from 'react-router-dom';\r\n\r\nimport eventStream from '../../EventEmitter.js';\r\nimport Icon from '../Icon/icon';\r\n\r\n\r\nconst iconPath = require('../../config.json').CabinetIcon;\r\n\r\nclass Header extends React.Component {\r\n\r\n    static propTypes = {\r\n        title: PropTypes.string.isRequired,\r\n    };\r\n\r\n    state = {\r\n        title: this.props.title,\r\n    };\r\n\r\n    logOut = (event) => {\r\n        this.props.dispatch(middlewareLogOutUser(this.props.idUser));\r\n    };\r\n\r\n    redirect = (e) => {\r\n        if (this.props.location.pathname !== '/Cabinet/About')\r\n            this.props.history.push('/Cabinet/About');\r\n    };\r\n\r\n    add = (e) => {\r\n        eventStream.emit('EventChangeWorkMode',{action: 'newProject'});\r\n    };\r\n\r\n    render(){\r\n        return (\r\n            <header>\r\n                <div className = 'container'>\r\n                    <div className = 'flex-row'>\r\n                            <div className = 'header__CabinetInfo'>\r\n                                <Icon path = {iconPath} />\r\n                                <NavLink to = '/Cabinet'><h3>{this.state.title}</h3></NavLink>\r\n                            </div>\r\n                            {this.props.location.pathname === '/Cabinet' ?\r\n                                <div onClick = {this.add} className = 'header__newProject__AddButton'>\r\n                                    <Icon path = '/img/plus.png' />\r\n                                </div>\r\n                                : null\r\n                            }\r\n                                <div  className = 'Navigator'>\r\n                                    <Icon onClick = {this.redirect} title = 'about' path = '/img/about_logo.svg' />\r\n                                    <Icon onClick = {this.logOut} title = 'logOut' path = '/img/logOut.svg' />\r\n                                </div>\r\n                    </div>\r\n               </div>\r\n            </header>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect()(withRouter(Header));","import React,{Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport eventStream from '../../EventEmitter.js';\r\n\r\nimport './modal.scss';\r\n\r\nclass ModalWindow extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        mode: PropTypes.string\r\n    }\r\n\r\n    state = {\r\n        workMode: this.props.workMode,\r\n\r\n        newProject: {\r\n            validateName: false,\r\n            validateType: false,\r\n            disabled: true,\r\n            name: '',\r\n            type: 'empty'\r\n        },\r\n        warning: {\r\n            lengthMax: 'Max length: 20 symbols',\r\n            lengthMin: 'Min length: 4 symbol',\r\n            type: 'Select type of webpage',\r\n        }\r\n    }\r\n\r\n    inputSelect = null;\r\n\r\n    disabledButton = (action) => {\r\n\r\n    }\r\n\r\n    addNewProject = (event) => {\r\n        let mode = this.state[this.state.workMode];\r\n        if (mode.validateType &&  mode.validateName) {\r\n            eventStream.emit('EventAddProject',\r\n            {\r\n                title: this.state[this.state.workMode].name,\r\n                type: this.state[this.state.workMode].type\r\n            });\r\n\r\n            eventStream.emit('EventChangeWorkMode',{action: 'default'});\r\n        }\r\n    }\r\n\r\n    selectOption = (event) => {\r\n\r\n        let inputs = {...this.state[this.state.workMode]};\r\n        inputs.type = event.target.value;\r\n        inputs.validateType = inputs.type !== 'empty';\r\n        inputs.disabled = inputs.validateType && inputs.validateName ? false : true;\r\n        this.setState({\r\n            ...this.state,\r\n            [this.state.workMode]: inputs\r\n        });\r\n    }\r\n\r\n    validateName = (event) => {\r\n\r\n        let inputs = {...this.state[this.state.workMode]};\r\n        inputs.name = event.target.value;\r\n        let lengthInput = inputs.name.length;\r\n        inputs.validateName = lengthInput >= 4 && lengthInput < 20 ? true : false;\r\n        inputs.disabled = inputs.validateType && inputs.validateName ? false : true;\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            [this.state.workMode]: inputs\r\n        })\r\n    };\r\n\r\n    cancel = (event) => {\r\n        eventStream.emit('EventChangeWorkMode',{action: 'default'});\r\n    }\r\n\r\n    refSelect = (node) => this.inputSelect = node;\r\n\r\n    render(){\r\n\r\n        switch (this.state.workMode){\r\n\r\n            case 'newProject': {\r\n                return (\r\n                        <div className = 'Modal'>\r\n                            <h3>Create new Project</h3>\r\n                            {\r\n                                this.state[this.state.workMode].name.length <= 3 ?\r\n                                <span className = 'warning'>{this.state.warning.lengthMin}</span> : null\r\n                            }\r\n                            {\r\n                                this.state[this.state.workMode].name.length >= 20 ?\r\n                                <span className = 'warning'>{this.state.warning.lengthMax}</span> : null\r\n                            }\r\n                            <input\r\n                                className = {this.state[this.state.workMode].validateName ? 'ready' : 'wrong'}\r\n                                value = {this.state[this.state.workMode].name}\r\n                                onChange = {this.validateName}\r\n                                type = 'text'\r\n                                placeholder = \"Project name\"\r\n                            />\r\n                            {\r\n                                !this.state[this.state.workMode].validateType ?\r\n                                <span className = 'warning'>{this.state.warning.type}</span> : null\r\n                            }\r\n                            <select onChange = {this.selectOption} >\r\n                                <option value = 'empty'>--------</option>\r\n                                <option value = 'landing'>Landing</option>\r\n                                <option value = 'portfolio'>Portfolio</option>\r\n                            </select>\r\n                            <input \r\n                                onClick = {this.addNewProject}\r\n                                className = 'acceptButton'\r\n                                disabled = {this.state[this.state.workMode].disabled}\r\n                                type = 'button'\r\n                                value = 'Submit'\r\n                            />\r\n                            <input onClick = {this.cancel} type ='button' value = 'Cancel' />\r\n                        </div>\r\n                )\r\n            }\r\n            default: {\r\n                return (\r\n                    <Fragment></Fragment>\r\n                )\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default ModalWindow;","import firebase from '../../Firebase/Firebase';\r\nimport {createProjectAction, errorAction} from '../actions';\r\n\r\n\r\nconst middlewareCreateProject = (uid, list, title, type) => async dispatch => {\r\n    let lastProject = [...list];\r\n    const lastIndex = lastProject.length  ? lastProject[lastProject.length-1].id + 1 : 0;\r\n    lastProject.push({\"id\": lastIndex, \"title\": title, \"type\": type, components: {}});\r\n\r\n    await firebase.db.collection(\"users\").doc(uid).update({\r\n        'projects': lastProject,\r\n    })\r\n    .then (() => dispatch(createProjectAction(lastProject)))\r\n    .catch(error => dispatch(errorAction(error.message)));\r\n};\r\n\r\nexport {\r\n    middlewareCreateProject\r\n}","import React, {useState} from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\n\r\nfunction Item(props) {\r\n    const [id] = useState(props.id);\r\n    const [name] = useState(props.name);\r\n    const [type] = useState(props.type);\r\n\r\n\r\n    const build = (event) => {\r\n        props.history.push(`/Cabinet/Build/${id}`);\r\n        event.stopPropagation();\r\n    };\r\n    return (\r\n        <div onClick = {build} className = 'item' data-id = {id}>\r\n            <p className = 'ProjectName'>{name}</p>\r\n            <p className = 'ProjectType'>{type}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(Item);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport {middlewareCreateProject} from '../../redux/middleware/createProjectMiddleware';\r\n\r\nimport './list.scss';\r\n\r\nimport Item from './Item';\r\nimport eventStream from '../../EventEmitter.js';\r\n\r\nclass List extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        children: PropTypes.shape({\r\n            projects: PropTypes.array.isRequired,\r\n           count: PropTypes.number.isRequired,\r\n        }),\r\n        list: PropTypes.array.isRequired,\r\n    }\r\n\r\n    state = {\r\n        redirect: false,\r\n    }\r\n\r\n    addNewProject = (item) => {\r\n        if (this.props.idUser) {\r\n            this.props.dispatch(middlewareCreateProject(this.props.idUser, this.props.list, item.title, item.type));\r\n        } else this.setState({...this.state, redirect: true});\r\n    }\r\n\r\n\r\n    makeList = (list) => {\r\n\r\n        return list.map (project => {\r\n\r\n            return(\r\n                <Item\r\n                    key = {project.id}\r\n                    id = {project.id}\r\n                    name = {project.title}\r\n                    type = {project.type}\r\n                />\r\n            )\r\n        });\r\n    }\r\n\r\n    render(){\r\n        if (this.state.redirect)\r\n            return <Redirect to = '/' />\r\n            else return (\r\n                    <div className = 'projectsList__list'>\r\n                        {this.makeList([...this.props.list])}\r\n                    </div>\r\n                )\r\n    }\r\n\r\n    componentWillMount = () =>\r\n        eventStream.on('EventAddProject',this.addNewProject);\r\n\r\n      componentWillUnmount = () =>\r\n        eventStream.off('EventAddProject',this.addNewProject);\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        idUser: state.cabinet.idUser,\r\n        list: [...state.cabinet.projects]\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(List);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nimport List from '../List/List.jsx';\r\n\r\nimport './ProjectsSection.scss';\r\n\r\nclass ProjectsSection extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        projects: PropTypes.array,\r\n    }\r\n\r\n    render(){\r\n        return (\r\n                <section className = 'projectsList'>\r\n                <div className = 'container'>\r\n                <div className = 'flex-column'>\r\n                        <div className = 'projectsList__about'>\r\n                            <h3>Your Projects</h3>\r\n                        </div>\r\n                        <List />\r\n                    </div>\r\n                </div>\r\n                </section>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default ProjectsSection;","import React,{Fragment} from 'react';\nimport PropTypes from 'prop-types';\nimport eventStream from '../../EventEmitter.js';\nimport {Redirect} from 'react-router-dom';\nimport withFirebase from '../../components/firebaseHOC';\n\nimport {middlewareLogOutUser} from '../../redux/middleware/loadUserMiddleware';\nimport Loader from '../../components/loading/Loader';\nimport {connect} from 'react-redux';\n\nimport Header from '../../components/header/Header';\nimport Modal from '../../components/modalWindow/ModalWindow';\nimport ProjectsSection from '../../components/ProjectsSection/ProjectsSection';\n\nimport './Cabinet.scss';\n\nconst title = require('../../config.json').title;\n\nclass Cabinet extends React.PureComponent {\n\n  static propTypes = {\n    firebase: PropTypes.object.isRequired\n  }\n\n  state = {\n    workMode: 'default',\n  }\n\n  logOut = (event) => {\n    this.props.dispatch(middlewareLogOutUser(this.props.idUser));\n  }\n\n  changeWorkMode = (event) => {\n    this.setState ({\n      ...this.state,\n      workMode: event.action,\n    });\n  }\n\n  render(){\n    if (this.props.active){\n      return (\n        <Fragment>\n          <Header title = {title} idUser = {this.props.idUser} />\n          {(this.state.workMode === 'newProject') ? <Modal workMode = {this.state.workMode} /> : null}\n            <ProjectsSection />\n        </Fragment>\n      )\n    } else if (!this.props.firebase.getCurrentUser()) return <Redirect to = '/' />\n    else return <Loader path = '/img/loading.gif' type = 'Cabinet' />\n    }\n\n\n  componentDidMount = () => {\n    eventStream.on('EventChangeWorkMode', this.changeWorkMode);\n  }\n\n  componentWillUnmount = () => {\n    eventStream.off('EventChangeWorkMode', this.changeWorkMode);\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    idUser: state.cabinet.idUser,\n    projects: [...state.cabinet.projects],\n    active: state.cabinet.active\n  }\n}\n\n\n\nexport default connect(mapStateToProps)(withFirebase(Cabinet));\n","import React, {Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nimport withFirebase from '../../components/firebaseHOC';\r\nimport Header from '../../components/header/Header';\r\n\r\nimport './about.scss';\r\n\r\nclass About extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        config: PropTypes.object.isRequired,\r\n        firebase: PropTypes.object.isRequired,\r\n    }\r\n\r\n    state = {\r\n        config: this.props.config\r\n    };\r\n\r\n    render(){\r\n        if (this.props.firebase.getCurrentUser()) {\r\n            const { config } = this.state;\r\n            return (\r\n                <Fragment>\r\n                    <Header title = {config.title} />\r\n                    <section className = 'About'>\r\n                        <div className = 'container'>\r\n                            <div className = 'col-12'>\r\n                                <div className = 'information'>\r\n                                <img alt = 'img' className = 'logoAbout' src = {process.env.PUBLIC_URL + '/img/about.jpg'}/>\r\n                                    <p className ='developer'><span>Developer:</span> {config.about.developer}</p>\r\n                                    <p className = 'year'><span>Year:</span> {config.about.year}</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </section>\r\n                </Fragment>\r\n            )\r\n        } else return <Redirect to = '/' />\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default withFirebase(About);","import React, {Fragment} from 'react';\r\nimport eventStream from '../../EventEmitter';\r\nimport PropTypes from 'prop-types';\r\nimport { SketchPicker } from 'react-color';\r\nimport './instrumentsPanel.scss';\r\n\r\nimport Icon from '../Icon/icon';\r\n\r\nclass InstrumentsPanel extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        instrumentPanel:  PropTypes.object.isRequired,\r\n        editComponent: PropTypes.object.isRequired\r\n    }\r\n\r\n    state = {\r\n        instrumentPanel: {...this.props.instrumentPanel},\r\n        colorPickerAvtive: false\r\n    }\r\n\r\n    resetAll = event => {\r\n        console.log(event.target);\r\n        event.stopPropagation();\r\n        if (this.state.colorPickerAvtive)\r\n        this.setState({...this.state, colorPickerAvtive: false });\r\n    }\r\n\r\n    closePanel = event => {\r\n        eventStream.emit('EventClosePanel', {close: false});\r\n    }\r\n\r\n    setColor = event => {\r\n        event.stopPropagation();\r\n        this.setState({...this.state, colorPickerAvtive: this.state.colorPickerAvtive ? false : true});\r\n    };\r\n\r\n    handleChangeComplete = event => {\r\n        eventStream.emit('EventChangeColor', event);\r\n    }\r\n\r\n    makePanelInstruments = (type) => {\r\n        switch (type){\r\n            case 'text': {\r\n            return (\r\n                <p>{type}</p>\r\n            )\r\n            }\r\n            case 'background': {\r\n                return (\r\n                    <Fragment>\r\n                    <input onClick = {this.setColor} className = 'button_switchColor' type = 'button' value = 'setColor' />\r\n                        { this.state.colorPickerAvtive ?\r\n                            <SketchPicker\r\n                            onChangeComplete={this.handleChangeComplete}\r\n                            />\r\n                            : null\r\n                        }\r\n                    </Fragment>\r\n                )\r\n\r\n            }\r\n            default:{\r\n                return (\r\n                    <p className = 'warningInstruments'>Select elements for accses edit instruments</p>\r\n                )\r\n            }\r\n        }\r\n    }\r\n\r\n    render(){\r\n        let { instrumentActive } = this.state.instrumentPanel;\r\n        return (\r\n            <div  className = 'instumentsPanel'>\r\n            <button onClick = {this.closePanel} className = 'closeInstrumentsPanel'><Icon path = '/img/close.svg' /></button>\r\n                <h3>Instruments</h3>\r\n                {\r\n                    instrumentActive ? \r\n                    <p className = 'titleComponent important'>{this.state.instrumentPanel.target}</p>\r\n                    : null\r\n                }\r\n                {\r\n                    instrumentActive ?\r\n                    <div  className= 'instuments'>{this.makePanelInstruments(this.state.instrumentPanel.target)}</div>\r\n                    : null\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n\r\n    componentDidUpdate = (oldProps, oldState) => {\r\n\r\n      if (oldState.instrumentPanel.target !== this.props.instrumentPanel.target)\r\n        this.setState({\r\n            ...this.state,\r\n            instrumentPanel: {...this.props.instrumentPanel}\r\n        })\r\n      return true;\r\n    }\r\n}\r\n\r\nexport default InstrumentsPanel;","import React, {useEffect, useState} from 'react';\r\nimport eventStream from '../../../../EventEmitter';\r\nimport styled from 'styled-components';\r\n\r\nconst Title = styled.h1`\r\n    position: absolute;\r\n    left: 50%;\r\n    transform: translate(-50%);\r\n    font-size: ${props => props.size};\r\n    color: ${props => props.textColor};\r\n    text-align: center;\r\n    margin: 0;\r\n`;\r\n\r\nconst Background = styled.div`\r\n    position: relative;\r\n    width: 100%;\r\n    height: 95vh;\r\n    background: ${props => props.background}\r\n`;\r\n\r\nconst Media = styled.video`\r\n    width: 100%;\r\n`;\r\n\r\nconst openBgInstruments = event => {\r\n\r\n    eventStream.emit('EventInstrumentPanel',{target: 'background'});\r\n    event.stopPropagation();\r\n}\r\n\r\nconst openMediaInstruments = event => {\r\n\r\n    eventStream.emit('EventInstrumentPanel',{target: 'media'});\r\n    event.stopPropagation();\r\n}\r\n\r\nconst openTitleInstruments = event => {\r\n\r\n    eventStream.emit('EventInstrumentPanel',{target: 'text'});\r\n    event.stopPropagation();\r\n}\r\n\r\nconst TitleComponent = props => <Title onClick={openTitleInstruments} textColor = {props.color} size = {props.size}>{props.children}</Title>;\r\n\r\n\r\nconst BackgroundComponent = props => {\r\n\r\n    let [backgroundColor, setBgColor] = useState(props.background);\r\n\r\n    const changeColor = colorHash => {\r\n        const {rgb} = colorHash;\r\n        let colorRGB = `rgb(${rgb.r},${rgb.g},${rgb.b},${rgb.a})`;\r\n        setBgColor(colorRGB);\r\n    }\r\n\r\n    const didUpdate = event => {\r\n        eventStream.on('EventChangeColor', changeColor);\r\n        return () => {\r\n            eventStream.off('EventChangeColor', changeColor);\r\n        }\r\n    }\r\n\r\n    useEffect(didUpdate);\r\n    return (\r\n        <Background\r\n            onClick={openBgInstruments}\r\n            background = {backgroundColor}\r\n        >\r\n            {props.children}\r\n            </Background>\r\n    )\r\n        }\r\n\r\nconst MediaComponent = props => <Media onClick={openMediaInstruments} width = {props.width} height = {props.height}>{props.children}</Media>;\r\n\r\nexport {\r\n    TitleComponent, BackgroundComponent,\r\n    MediaComponent\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport {TitleComponent, BackgroundComponent} from '../buildComponents/header/components/headerComponents';\r\n\r\nimport eventStream from '../../EventEmitter';\r\n\r\nimport './buildMenu.scss';\r\n\r\nclass BuildMenu extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        component: PropTypes.object\r\n    }\r\n\r\n    state = {\r\n        component: {...this.props.component}\r\n    }\r\n\r\n    addText = event => {\r\n\r\n        let componentArrayWrapper = [];\r\n        componentArrayWrapper.push(<TitleComponent key = 'header' color = 'red' size = '120px'>Header title</TitleComponent>);\r\n        eventStream.emit('EventBuildHeaderComponents',{target: 'Header', type: 'text', component: componentArrayWrapper});\r\n        event.stopPropagation();\r\n    }\r\n\r\n    addBackground = event => {\r\n\r\n        let componentArrayWrapper = [];\r\n        componentArrayWrapper.push(<BackgroundComponent key = 'bgHeader' color = 'red' />);\r\n        eventStream.emit('EventBuildHeaderComponents',{target: 'Header', type: 'background', component: componentArrayWrapper});\r\n\r\n        event.stopPropagation();\r\n    }\r\n\r\n    render(){\r\n\r\n        return (\r\n            <div className = 'ComponentsMenu'>\r\n                <button onClick = {this.addBackground} className = 'ImageTool CompoentnsMenu_button' ><span>Image</span></button>\r\n                <button onClick = {this.addText} className = 'TextTool CompoentnsMenu_button' ><span>Text</span></button>\r\n                <button \r\n                    disabled = {this.state.component.name !== 'Header' ? false : true}\r\n                    className = 'ButtonTool CompoentnsMenu_button' >\r\n                    <span>Button</span>\r\n                </button>\r\n                <button className = 'VideoTool CompoentnsMenu_button' ><span>Video</span></button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default BuildMenu;","import React,{Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Icon from '../Icon/icon';\r\nimport BuildMenu from '../componentsBuildMenu/BuildMenu';\r\n\r\nimport styled from 'styled-components';\r\n\r\nconst ControllersBox = styled.div.attrs(props => ({\r\n            style: {\r\n                left: props.coordX,\r\n                top: props.coordY,\r\n    }}))\r\n    `position: absolute;`;\r\n\r\n\r\n\r\nclass Controllers extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        menuActive: PropTypes.bool,\r\n    }\r\n\r\n    state = {\r\n        viewComponentMenu: false,\r\n        shiftX: 0,\r\n        shiftY: 0,\r\n        coordsX: '50%',\r\n        coordsY: '0'\r\n    }\r\n\r\n    componentMenu = (event) => {\r\n        this.setState({viewComponentMenu: this.state.viewComponentMenu ? false : true})\r\n    }\r\n\r\n    saveCoords = event => {\r\n        let left = event.target.getBoundingClientRect().left;\r\n        let top = event.target.getBoundingClientRect().top;\r\n        this.setState({...this.state, shiftX: event.pageX - left, \r\n        shiftY: event.pageY - top + 55});\r\n\r\n        event.stopPropagation();\r\n    }\r\n\r\n    drag = event => {\r\n        if (!this.state.viewComponentMenu){\r\n        this.setState({...this.state, coordsX: event.pageX - this.state.shiftX + 'px', \r\n                    coordsY: event.pageY - this.state.shiftY + 'px'});\r\n        }\r\n        event.stopPropagation();\r\n    }\r\n\r\n    controlBox = null;\r\n    refControll = (node) => this.controlBox = node;\r\n\r\n\r\n    render(){\r\n        return (\r\n            <Fragment>\r\n            { this.props.menuActive ?\r\n                <ControllersBox\r\n                ref = {this.refControll}\r\n                className = 'ControllersEditComponent'\r\n                coordX = {this.state.coordsX}\r\n                coordY = {this.state.coordsY}\r\n                draggable = {!this.state.viewComponentMenu}\r\n                onMouseDown = {this.saveCoords}\r\n                onClick = {this.componentMenu}\r\n                onDrag   = {this.drag}\r\n                onDragEnd = {this.drag}\r\n                >\r\n                    <Icon\r\n                        draggable = {true}\r\n                        onClick = {this.componentMenu}\r\n                        className = 'addButton'\r\n                        path = '/img/addButton.png'\r\n                    />\r\n                    {this.state.viewComponentMenu ? <BuildMenu component = {{...this.props.component}} /> : null}\r\n                </ControllersBox>\r\n                : null\r\n            }\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Controllers;","import React, {Fragment} from 'react';\r\nimport eventEmitter from '../../../EventEmitter';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nimport {BackgroundComponent} from '../../buildComponents/header/components/headerComponents';\r\nimport Controllers from '../../controllers/controllers';\r\n\r\n\r\nimport './headerBuild.scss';\r\n\r\nclass HeaderBuild extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        id: PropTypes.number.isRequired,\r\n    }\r\n\r\n    state = {\r\n        idProject: this.props.id,\r\n        component: {...this.props.children}\r\n        }\r\n\r\n\r\n    changeMode = (event) => {\r\n        if (!this.props.editStart)\r\n        eventEmitter.emit('EventModeEdit', {...this.state});\r\n\r\n        console.log(event.target);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <div onClick = {this.changeMode} className = 'Header'>\r\n                    <BackgroundComponent background = 'grey'>\r\n                    {  this.props.children.build.component && this.props.children.build.type === 'text'  ?\r\n                            this.props.children.build.component : null\r\n                    }\r\n                    </BackgroundComponent>\r\n                    {!this.props.editStart ? <p className = 'warningEdit'>Click for start edit</p> : null}\r\n                    {!this.state.readyBuild ? \r\n                        <Controllers\r\n                            menuActive = {this.props.menuActive}\r\n                            component = {{...this.state.component}}\r\n\r\n                        />\r\n                        : null}\r\n                </div>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\nexport default HeaderBuild;","import React,{Fragment} from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport {Redirect} from 'react-router-dom';\r\nimport eventEmitter from '../../EventEmitter';\r\n\r\nimport withFirebase from '../../components/firebaseHOC';\r\nimport {connect} from 'react-redux';\r\n\r\nimport Loader from '../../components/loading/Loader';\r\nimport Header from '../../components/header/Header';\r\nimport InstrumentsPanel from '../../components/instrumentsPanel/InstrumentsPanel';\r\n\r\nimport HeaderBuild from '../../components/buildComponents/header/headerBuild';\r\n\r\nimport './build.scss';\r\n\r\n\r\nclass Build extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        param: PropTypes.string,\r\n        match: PropTypes.shape({\r\n            params: PropTypes.shape({\r\n                param: PropTypes.string.isRequired\r\n            }).isRequired\r\n        }).isRequired\r\n    }\r\n\r\n    state = {\r\n            idProject: parseInt(this.props.match.params.param),\r\n            typeProject: null,\r\n            editComponent: {name: null, build: {}, edit: false},\r\n            changeEdit: false,\r\n            instrumentPanel: { instrumentActive: false, target: '' },\r\n            menuActive: false,\r\n            editStart: false,\r\n        }\r\n\r\n    workModeEdit = itemEvent => {\r\n        \r\n        if (!this.state.editStart || this.state.changeEdit)\r\n        this.setState({\r\n            ...this.state,\r\n            idProject: itemEvent.idProject,\r\n            editComponent: {...itemEvent.component},\r\n            menuActive: true,\r\n            editStart: true\r\n        });\r\n\r\n    }\r\n\r\n    openInstrument = itemEvent => {\r\n        if (this.state.editStart)\r\n        this.setState({\r\n            ...this.state,\r\n            instrumentPanel: {\r\n                ...this.state.instrumentPanel, \r\n                instrumentActive: true, \r\n                target: itemEvent.target }\r\n        })\r\n    }\r\n\r\n    closePanel = event => {\r\n        this.setState({\r\n            ...this.state,\r\n            instrumentPanel: {...this.state.instrumentPanel, instrumentActive: event.close}\r\n        })\r\n    }\r\n\r\n    addHeaderComponent = itemEvent => {\r\n        this.setState({\r\n            ...this.state,\r\n            editComponent: {...this.state.editComponent,\r\n                build: {target: itemEvent.target, type: itemEvent.type, component: [...itemEvent.component]},\r\n            },\r\n        });\r\n    };\r\n\r\n\r\n    render(){\r\n        console.log('Build');\r\n        console.log(this.state);\r\n        let { instrumentActive } = this.state.instrumentPanel;\r\n        if (this.props.active){\r\n            return (\r\n                <Fragment>\r\n                { instrumentActive ?\r\n                    <InstrumentsPanel\r\n                        editComponent =  {{...this.state.editComponent}}\r\n                        instrumentPanel = {{...this.state.instrumentPanel}}\r\n                    />\r\n                    : null\r\n                }\r\n                    <Header title = \"Constructor\"  />\r\n                    <HeaderBuild\r\n                            editStart = {this.state.editStart}\r\n                            menuActive = {this.state.menuActive}\r\n                            id = {this.state.idProject}\r\n                    >\r\n                        {{...this.state.editComponent, name: 'Header'}}\r\n                    </HeaderBuild>\r\n                </Fragment>\r\n            )\r\n        } else if (!this.props.firebase.getCurrentUser()) return <Redirect to = '/' />\r\n        else return <Loader path = '/img/loading.gif' type = 'build' />\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        eventEmitter.on('EventBuildHeaderComponents', this.addHeaderComponent);\r\n        eventEmitter.on('EventClosePanel', this.closePanel);\r\n        eventEmitter.on('EventInstrumentPanel', this.openInstrument);\r\n        eventEmitter.on('EventModeEdit', this.workModeEdit);\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        eventEmitter.off('EventBuildHeaderComponents', this.addHeaderComponent);\r\n        eventEmitter.off('EventClosePanel', this.closePanel);\r\n        eventEmitter.off('EventInstrumentPanel', this.openInstrument);\r\n        eventEmitter.off('EventModeEdit', this.workModeEdit);\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n\r\n    return {\r\n        ...state.builder,\r\n        active: state.cabinet.active,\r\n        idUser: state.cabinet.idUser,\r\n        currentEditable: {}\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(withFirebase(Build));","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {BrowserRouter, Route, Switch} from 'react-router-dom';\r\n\r\nimport {middlewareLoadUserData} from './redux/middleware/loadUserMiddleware';\r\nimport {connect} from 'react-redux';\r\nimport withFirebase from './components/firebaseHOC';\r\nimport Loader from './components/loading/Loader';\r\n\r\nimport Index from './Pages/Index/Index';\r\nimport Cabinet from './Pages/Cabinet/Cabinet';\r\nimport About from './Pages/About/About';\r\nimport Build from './Pages/Build/Build';\r\n\r\nclass App extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        config: PropTypes.object.isRequired,\r\n        firebase: PropTypes.object.isRequired,\r\n    }\r\n\r\n    state = {\r\n        firebase: this.props.firebase,\r\n        firebaseLoadState: false,\r\n    }\r\n\r\n    componentDidMount(){\r\n\r\n        this.props.firebase.auth.onAuthStateChanged((user) => {\r\n\r\n            if (!this.state.firebaseLoadState){\r\n                if (user) this.props.dispatch(middlewareLoadUserData(user.uid));\r\n                this.setState({firebaseLoadState: true});\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    render(){\r\n        if (this.state.firebaseLoadState){\r\n        return (\r\n            <BrowserRouter>\r\n                    <Switch>\r\n                        <Route\r\n                            path = '/' exact\r\n                            render = {(props) => <Index {...props} />}\r\n                        />\r\n                        <Route path = '/Cabinet/' exact component = {Cabinet}/>\r\n                        <Route\r\n                            path = '/Cabinet/About'\r\n                            render = {(props) => <About {...props} config = {this.props.config} />}\r\n                        />\r\n                        <Route path = '/Cabinet/Build/:param' component = {Build}/>\r\n                    </Switch>\r\n            </BrowserRouter>\r\n        )\r\n        } else return <Loader path = '/img/loading.gif' type = 'application' />\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n      active: state.cabinet.active\r\n    }\r\n  }\r\n\r\nexport default connect(mapStateToProps)(withFirebase(App));","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport {Provider} from 'react-redux';\nimport store from './redux/store';\nimport App from './App.jsx';\nimport 'normalize.css';\n\nconst config = require('./config.json');\n\n\nReactDOM.render(\n    <Provider store = {store}>\n        <App config = {config} />\n    </Provider>,\n        document.getElementById('root')\n);\n\n"],"sourceRoot":""}