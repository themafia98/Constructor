{"version":3,"sources":["redux/actions.js","redux/reducerBuilder.js","redux/reducerCabinet.js","redux/reducers.js","redux/store.js","Firebase/firebaseConfig.js","Firebase/Firebase.js","redux/middleware/loadUserMiddleware.js","components/firebaseHOC.jsx","components/loading/Loader.jsx","EventEmitter.js","components/Registration/Registration.jsx","Pages/Index/Index.jsx","redux/middleware/middlewareDelete.js","components/Icon/icon.jsx","components/header/Header.jsx","components/modalWindow/ModalWindow.jsx","redux/middleware/createProjectMiddleware.js","components/List/Item.jsx","components/List/List.jsx","components/ProjectsSection/ProjectsSection.jsx","Pages/Cabinet/Cabinet.jsx","Pages/About/About.jsx","components/instrumentsPanel/InstrumentsPanel.jsx","components/buildComponents/header/components/headerComponents.jsx","components/componentsBuildMenu/BuildMenu.jsx","components/controllers/controllers.jsx","components/buildComponents/header/headerBuild.jsx","Pages/Build/Build.jsx","App.jsx","index.js"],"names":["loadUserAction","state","type","active","idUser","uid","error","projects","Object","toConsumableArray","errorAction","initialState","nameEditComponent","settingsEditComponent","dateConnect","Date","now","toLocaleString","replace","split","combineReducers","builder","arguments","length","undefined","action","objectSpread","currentEditable","cabinet","middleware","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","thunk","store","createStore","firebaseConfig","apiKey","authDomain","process","REACT_APP_AUTH_DOMAIN","databaseURL","REACT_APP_DATABASE_URL","projectId","storageBucket","REACT_APP_STORAGE_BUCKET","messagingSenderId","REACT_APP_MESSAGING_SENDER_ID","appId","REACT_APP_APPID","interfaceFirebase","require","Firebase","classCallCheck","this","firebase","auth","db","rules","setPersistence","Auth","Persistence","email","password","signInWithEmailAndPassword","createUserWithEmailAndPassword","signOut","currentUser","saveSession","middlewareLogin","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","dispatch","wrap","_context","prev","next","login","then","response","collection","doc","user","get","docUser","data","id","catch","message","stop","_x","apply","middlewareLogOutUser","_ref3","_callee3","_context3","_x3","withFirebase","Component","props","react_default","createElement","assign","Loader","_useState","useState","path","slicedToArray","className","src","alt","stream","EventEmitter","_this","emailRef","passwordRef","setRefEmail","node","setRefPassword","createUser","event","value","registration","set","eventEmitter","emit","setState","autoComplete","ref","onClick","React","PureComponent","Index","title","registrationActive","regStatus","wrongEnter","statusRegistration","additionalUserInfo","isNewUser","console","log","showBox","authTo","emailImput","passwordImput","componentDidMount","e","on","componentWillUnmount","off","react_router","to","currentSelected","components_Registration_Registration","connect","middlewareDelete","item","filter","itemdb","update","Icon","_useState3","_useState5","draggable","iconPath","CabinetIcon","Header","logOut","redirect","location","pathname","history","push","add","icon","react_router_dom","withRouter","ModalWindow","workMode","images","imageBoxView","newProject","validateName","validateType","disabled","name","warning","lengthMax","lengthMin","inputSelect","searchBackground","isFetch","concat","json","makeImageResultBox","items","box","keys","i","key","urls","regular","addNewProject","mode","selectOption","inputs","target","defineProperty","lengthInput","cancel","refSelect","onChange","placeholder","react","middlewareCreateProject","list","lastProject","lastIndex","components","data-id","stopPropagation","List","makeList","map","project","List_Item","componentWillMount","ProjectsSection","components_List_List","Cabinet","deletItem","getCurrentUser","changeWorkMode","header_Header","modalWindow_ModalWindow","components_ProjectsSection_ProjectsSection","config","about","developer","year","InstrumentsPanel","instrumentPanel","sizeTextValue","colorPickerAvtive","updateSizeText","resetAll","closePanel","close","setSize","size","setContent","contentValue","content","setColor","handleChangeComplete","searchImage","makePanelInstruments","min","max","lib","onChangeComplete","maxLength","defaultValue","componentDidUpdate","oldProps","oldState","instrumentActive","Title","styled","h1","attrs","style","display","shadowDisplay","left","coordX","top","coordY","_templateObject","textColor","Background","div","_templateObject2","background","openBgInstruments","video","_templateObject3","openTitleInstruments","TitleComponent","color","_useState2","colorText","setColorText","_useState4","sizeText","setSizeText","children","_useState6","contentText","setText","_useState7","_useState8","shiftCoords","setShiftCoords","_useState9","_useState10","dragNdrop","setDragNdrop","changeColorText","colorHash","rgb","colorRGB","r","g","b","changeSizeText","eventSize","changeContentText","eventContent","moveText","pageX","x","pageY","y","useEffect","onMouseDown","rect","getBoundingClientRect","width","height","onDrag","onDragEnd","onWheel","shiftKey","deltaY","counter","BackgroundComponent","_useState11","_useState12","backgroundColor","setBgColor","changeColor","BuildMenu","component","addText","componentArrayWrapper","headerComponents_TitleComponent","addBackground","headerComponents_BackgroundComponent","ControllersBox","controllers_templateObject","Controllers","viewComponentMenu","shiftX","shiftY","coordsX","coordsY","componentMenu","saveCoords","controlBox","drag","refControll","menuActive","componentsBuildMenu_BuildMenu","HeaderBuild","idProject","changeMode","editStart","currentTarget","build","readyBuild","controllers","mainWidth","mainBoxWidth","mainHeight","mainBoxHeight","Build","parseInt","match","params","param","typeProject","editComponent","edit","changeEdit","modalSearch","modalSearchOn","workModeEdit","itemEvent","openInstrument","addHeaderComponent","instrumentsPanel_InstrumentsPanel","header_headerBuild","polyfill","App","firebaseLoadState","_this2","onAuthStateChanged","_ref2","_callee2","_context2","_x2","_this3","exact","render","Pages_Index_Index","Pages_About_About","ReactDOM","es","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.9cd16c88.chunk.js","sourcesContent":["const CREATE_PROJECT = 'CREATE_PROJECT';\r\nconst LOAD_CURRENT = 'LOAD_CURRENT';\r\nconst LOG_OUT_CABINET = 'LOG_OUT_CABINET';\r\nconst LOAD_USER_CABINET = 'LOAD_USER_CABINET';\r\nconst ERROR_CABINET = 'ERROR_CABINET';\r\n\r\n\r\nconst createProjectAction = (state) => {\r\n    return {\r\n        type: CREATE_PROJECT,\r\n        projects: [...state],\r\n    }\r\n}\r\n\r\nconst loadCurrentProjectAction = (state) => {\r\n    return {\r\n        type: LOAD_CURRENT,\r\n        currentEditable: state,\r\n    }\r\n\r\n}\r\n\r\nconst loadUserAction = (state) => {\r\n    return {\r\n        type: LOAD_USER_CABINET,\r\n        active: true,\r\n        idUser: state.uid,\r\n        error: '',\r\n        projects: [...state.projects]\r\n    }\r\n}\r\n\r\nconst logOutAction = (state) => {\r\n\r\n    return {\r\n        type: LOG_OUT_CABINET,\r\n        active: false,\r\n        idUser: null,\r\n        error: '',\r\n        projects: []\r\n    }\r\n}\r\n\r\nconst errorAction = (state) => {\r\n    return {\r\n        type: ERROR_CABINET,\r\n        error: state\r\n    }\r\n}\r\n\r\nexport {\r\n    CREATE_PROJECT, createProjectAction, /* cabinet */\r\n    LOAD_USER_CABINET, loadUserAction, /* cabinet */\r\n    LOG_OUT_CABINET, logOutAction, /* cabinet */\r\n    LOAD_CURRENT, loadCurrentProjectAction, /* builder */\r\n    ERROR_CABINET, errorAction, /* both */\r\n}","import {LOAD_CURRENT} from './actions';\r\n\r\nconst initialState = {\r\n    nameEditComponent: null,\r\n    settingsEditComponent: {},\r\n};\r\nexport default (state = initialState, action) => {\r\n    switch (action.type){\r\n\r\n        case LOAD_CURRENT: {\r\n            return {\r\n                ...state,\r\n                currentEditable: {...action.currentEditable}\r\n            }\r\n        }\r\n        default: return state;\r\n    }\r\n};","import {LOAD_USER_CABINET, LOG_OUT_CABINET, ERROR_CABINET, CREATE_PROJECT} from './actions';\r\n\r\nconst initialState = {\r\n    active: false,\r\n    idUser: null,\r\n    projects: [],\r\n    error: null,\r\n    dateConnect: new Date(Date.now()).toLocaleString().replace(/\\s/ig,'').split(','),\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n\r\n    switch(action.type) {\r\n        case LOAD_USER_CABINET: {\r\n\r\n            return {\r\n                ...state,\r\n                active: action.active,\r\n                idUser: action.idUser,\r\n                projects: action.projects\r\n            }\r\n        }\r\n\r\n        case CREATE_PROJECT: {\r\n            return {\r\n                ...state,\r\n                projects: action.projects\r\n            }\r\n        }\r\n\r\n        case LOG_OUT_CABINET: {\r\n            return {\r\n                ...state,\r\n                active: false,\r\n                idUser: null,\r\n                projects: []\r\n            }\r\n        }\r\n\r\n        case ERROR_CABINET: {\r\n            return {\r\n                ...state,\r\n                error: action.error\r\n            }\r\n        }\r\n        default: return state;\r\n    }\r\n}\r\n\r\n","import {combineReducers} from 'redux';\r\nimport reducerBuilder from './reducerBuilder';\r\nimport reducerCabinet from './reducerCabinet';\r\n\r\nexport default combineReducers({\r\n    builder: reducerBuilder,\r\n    cabinet: reducerCabinet,\r\n});","import {createStore, applyMiddleware, compose} from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport combineReducers from './reducers';\r\n\r\nconst composeEnhancers =\r\n  typeof window === 'object' &&\r\n  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?\r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\r\n    }) : compose;\r\n\r\nconst middleware = composeEnhancers(\r\n  applyMiddleware(thunk)\r\n);\r\nconst store = createStore(combineReducers, middleware);\r\n\r\n\r\nexport default store;","// setings in root folder / firebase.env\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyBrLv9RyGWXCeEETRqBbBo3EVOcibmnJwU\",\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n    databaseURL: process.env.REACT_APP_DATABASE_URL,\r\n    projectId: \"constructor-acb61\",\r\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n    appId: process.env.REACT_APP_APPID\r\n};\r\n\r\nexport {firebaseConfig}","import * as firebase from 'firebase/app';\r\nimport {firebaseConfig} from './firebaseConfig';\r\n\r\nconst auth = require('firebase/auth');\r\nconst firestore = require('firebase/firestore');\r\n\r\nclass Firebase {\r\n\r\n        constructor(){\r\n                firebase.initializeApp(firebaseConfig);\r\n                this.auth = firebase.auth();\r\n                this.db = firebase.firestore();\r\n        }\r\n\r\n        saveSession(rules){\r\n                return this.auth.setPersistence(firebase.auth.Auth.Persistence[rules]);\r\n        }\r\n\r\n        login(email, password){\r\n                return this.auth.signInWithEmailAndPassword(email, password);\r\n        }\r\n\r\n        registration(email, password){\r\n                return this.auth.createUserWithEmailAndPassword(email, password)\r\n        }\r\n\r\n        signOut(){\r\n                return this.auth.signOut()\r\n        }\r\n\r\n        getCurrentUser() {\r\n                return this.auth.currentUser\r\n        }\r\n}\r\n\r\nlet interfaceFirebase = new Firebase();\r\ninterfaceFirebase.saveSession('SESSION');\r\n\r\nexport default interfaceFirebase;\r\n\r\nexport { auth, firestore };\r\n\r\n","import firebase from '../../Firebase/Firebase';\r\nimport {loadUserAction, errorAction, logOutAction} from '../actions';\r\n\r\nconst middlewareLogin = (email,password) => async dispatch => {\r\n        await firebase.login(email,password)\r\n        .then(response =>{\r\n            firebase.db.collection(\"users\").doc(response.user.uid).get()\r\n            .then(docUser => {\r\n                let user = docUser.data();\r\n                dispatch(loadUserAction({uid: docUser.id, projects: [...user.projects]}))\r\n            })\r\n        })\r\n        .catch((error) => dispatch(errorAction(error.message)));\r\n    }\r\n\r\nconst middlewareLoadUserData = (uid) => async dispatch => {\r\n        await firebase.db.collection(\"users\").doc(uid).get()\r\n        .then(docUser => {\r\n            let user = docUser.data();\r\n            dispatch(loadUserAction({uid: uid, projects: [...user.projects]}))\r\n        })\r\n        .catch(error => dispatch(errorAction(error.message)));\r\n    }\r\n\r\nconst middlewareLogOutUser = (uid) => async dispatch => {\r\n    await firebase.signOut()\r\n    .then (response => {\r\n        dispatch(logOutAction());\r\n    })\r\n    .catch(error => dispatch(errorAction(error.message)));\r\n}\r\nexport {\r\n    middlewareLogin,middlewareLoadUserData, middlewareLogOutUser\r\n}","import React from 'react';\r\nimport firebase from '../Firebase/Firebase';\r\n\r\nconst withFirebase = Component => props => (\r\n    <Component firebase = {firebase} {...props} />\r\n);\r\n\r\nexport default withFirebase;","import React,{useState} from 'react';\r\n\r\nexport default function(props) {\r\n    const [path] = useState(props.path);\r\n    return (\r\n            <div className = 'loaderBox'>\r\n                <img className = 'loader' src = {path} alt = 'loader'></img> \r\n                <p>Loading {props.type}</p>\r\n            </div>\r\n    )\r\n}","import {EventEmitter} from 'events';\r\nconst stream = new EventEmitter();\r\nexport default stream;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport eventEmitter from '../../EventEmitter';\r\nimport './registration.scss';\r\n\r\nimport withFirebase from '../../components/firebaseHOC';\r\n\r\n\r\nclass Registration extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        firebase: PropTypes.object.isRequired,\r\n    }\r\n\r\n    state = {\r\n        firebase: this.props.firebase,\r\n        error: null,\r\n    }\r\n\r\n    emailRef = null;\r\n    passwordRef = null;\r\n\r\n    setRefEmail = (node) => this.emailRef = node;\r\n    setRefPassword = (node) => this.passwordRef = node;\r\n\r\n    createUser = (event) => {\r\n\r\n        const email = this.emailRef.value;\r\n        const password = this.passwordRef.value;\r\n        const { firebase } = this.props;\r\n\r\n        firebase.registration(email, password)\r\n        .then(response => {\r\n            firebase.db.collection(\"users\").doc(response.user.uid).set({\r\n                'projects': [],\r\n                'email': email,\r\n            }).then(() => eventEmitter.emit('EventRegistrationCorrect', response))\r\n        })\r\n        .catch((error) => this.setState({error: error.message}));\r\n    };\r\n\r\n    render(){\r\n        let  { error } = this.state;\r\n\r\n        return (\r\n            <div className = 'RegistrationBox'>\r\n                <div  className = 'RegistrationForm'>\r\n                    <h3>Registration</h3>\r\n                    <form autoComplete = 'off' className = 'RegForm'>\r\n                        { error ?\r\n                            <p className = 'error'>{error}</p>\r\n                            : null\r\n                        }\r\n                        <span>E-mail</span>\r\n                        <input ref = {this.setRefEmail} type = 'text' />\r\n                        <span>Password</span>\r\n                        <input  autoComplete = \"off\" ref = {this.setRefPassword} type = 'password' />\r\n                        <input onClick = {this.createUser}\r\n                                className = 'loginButton'\r\n                                type = 'button'\r\n                                value = 'registration'\r\n                        />\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\nexport default withFirebase(Registration);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport eventEmitter from '../../EventEmitter';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nimport {middlewareLogin} from '../../redux/middleware/loadUserMiddleware';\r\n\r\nimport Loader from '../../components/loading/Loader';\r\nimport Registration from '../../components/Registration/Registration';\r\n\r\nimport {connect} from 'react-redux';\r\n\r\nimport './index.scss';\r\n\r\nclass Index extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        config: PropTypes.object,\r\n    }\r\n\r\n    state = {\r\n        title:  \"Constructor\",\r\n        registrationActive: false,\r\n        regStatus: false,\r\n        wrongEnter: false,\r\n        error: ''\r\n    }\r\n\r\n    statusRegistration = (event) => {\r\n        event.additionalUserInfo.isNewUser ?\r\n        this.setState({...this.state,\r\n                        regStatus: true,\r\n                        registrationActive: false,\r\n                        error: 'Account create!'\r\n                    })\r\n        : console.log('error registration');\r\n    }\r\n\r\n    showBox = (event) => {\r\n        this.setState ({\r\n            ...this.state,\r\n        registrationActive: this.state.registrationActive ? false : true\r\n        })\r\n    }\r\n\r\n    authTo = (event) => {\r\n            this.props.dispatch(middlewareLogin(this.emailImput.value, this.passwordImput.value));\r\n}\r\n    emailImput = null;\r\n    passwordImput = null;\r\n    emailRef = (node) => this.emailImput = node;\r\n    passwordRef = (node) => this.passwordImput = node;\r\n\r\n    render(){\r\n\r\n        if (this.props.active) return <Redirect to = '/Cabinet' />\r\n        else if (!this.props.active) {\r\n            let currentSelected = this.state.registrationActive;\r\n            return (\r\n                <div className = 'LoginPage flex-column'>\r\n                        <h1>{this.state.title}</h1>\r\n                        <div className = 'LoginBox'>\r\n                            <div className = 'LoginForm'>\r\n                                <h3>Connect form</h3>\r\n                                {\r\n                                    this.props.wrongEnter || this.state.regStatus ?\r\n                                    <p className = 'error'>{this.props.wrongEnter}</p>\r\n                                    : null\r\n                                }\r\n                                <p>E-mail</p>\r\n                                <input ref = {this.emailRef} type = 'text' />\r\n                                <p>Password</p>\r\n                                <input ref = {this.passwordRef} type = 'password' />\r\n                                <input \r\n                                    onClick = {this.authTo} \r\n                                    className = 'loginButton'\r\n                                    type = 'button'\r\n                                    value = 'enter' />\r\n                                <input\r\n                                    onClick = {this.showBox}\r\n                                    className = {currentSelected ? `loginButton selected`\r\n                                        : 'loginButton'}\r\n                                    type = 'button'\r\n                                    value = 'registration'\r\n                                    />\r\n                            </div>\r\n                        </div>\r\n                        {\r\n                            this.state.registrationActive ?\r\n                            <Registration auth = {this.props.auth} />\r\n                            : null\r\n                        }\r\n                </div>\r\n            )\r\n        } else  return <Loader path = '/img/loading.gif' type = 'session' />\r\n    }\r\n\r\n    componentDidMount = (e) => {\r\n        eventEmitter.on('EventRegistrationCorrect', this.statusRegistration);\r\n    }\r\n    componentWillUnmount = (e) => {\r\n        eventEmitter.off('EventRegistrationCorrect', this.statusRegistration);\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {active: state.cabinet.active, wrongEnter: state.cabinet.error}\r\n  }\r\n\r\nexport default connect(mapStateToProps)(Index);","import firebase from '../../Firebase/Firebase';\r\nimport {errorAction, loadUserAction} from '../actions';\r\n\r\nconst middlewareDelete = item => async dispatch => {\r\n    console.log('middleware');\r\n    await firebase.db.collection('users').doc(item.uid).get()\r\n    .then(user => user.data())\r\n    .then(data => {\r\n        return {id: data.id, projects: data.projects.filter(itemdb => itemdb.id !== item.id)};\r\n    })\r\n    .then(data => {\r\n        firebase.db.collection(\"users\").doc(item.uid).update({\r\n            \"projects\": data.projects\r\n        })\r\n        .then(response => {\r\n            dispatch(loadUserAction({uid: data.id, projects: data.projects}));\r\n        });\r\n    })\r\n    .catch(error => {\r\n        dispatch(errorAction(error.message));\r\n    });\r\n}\r\n\r\nexport default middlewareDelete;\r\n","import React, {useState} from 'react';\r\n\r\n\r\nfunction Icon(props){\r\n    const [path] = useState(props.path);\r\n    const [className] = useState(props.className ? props.className : null);\r\n    const [draggable] = useState(props.draggable ? true : false);\r\n\r\n    return (\r\n    <img\r\n        draggable = {draggable}\r\n        onClick = {props.onClick ? props.onClick : null}\r\n        className = {className}\r\n        title = {props.title ? props.title : null}\r\n        src = {path} alt = 'icon'>\r\n    </img>\r\n    )\r\n}\r\n\r\nexport default Icon;","import React from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport './header.scss';\r\n\r\nimport {middlewareLogOutUser} from '../../redux/middleware/loadUserMiddleware';\r\nimport {connect} from 'react-redux';\r\nimport {withRouter, NavLink} from 'react-router-dom';\r\n\r\nimport eventEmitter from '../../EventEmitter.js';\r\nimport Icon from '../Icon/icon';\r\n\r\n\r\nconst iconPath = require('../../config.json').CabinetIcon;\r\n\r\nclass Header extends React.Component {\r\n\r\n    static propTypes = {\r\n        title: PropTypes.string.isRequired,\r\n    };\r\n\r\n    state = {\r\n        title: this.props.title,\r\n    };\r\n\r\n    logOut = (event) => {\r\n        this.props.dispatch(middlewareLogOutUser(this.props.idUser));\r\n    };\r\n\r\n    redirect = (e) => {\r\n        if (this.props.location.pathname !== '/Cabinet/About')\r\n            this.props.history.push('/Cabinet/About');\r\n    };\r\n\r\n    add = (e) => {\r\n        eventEmitter.emit('EventChangeWorkMode',{action: 'newProject'});\r\n    };\r\n\r\n    render(){\r\n        return (\r\n            <header>\r\n                <div className = 'container'>\r\n                    <div className = 'flex-row'>\r\n                            <div className = 'header__CabinetInfo'>\r\n                                <Icon path = {iconPath} />\r\n                                <NavLink to = '/Cabinet'><h3>{this.state.title}</h3></NavLink>\r\n                            </div>\r\n                            {this.props.location.pathname === '/Cabinet' ?\r\n                                <div onClick = {this.add} className = 'header__newProject__AddButton'>\r\n                                    <Icon path = '/img/plus.png' />\r\n                                </div>\r\n                                : null\r\n                            }\r\n                                <div  className = 'Navigator'>\r\n                                    <Icon onClick = {this.redirect} title = 'about' path = '/img/about_logo.svg' />\r\n                                    <Icon onClick = {this.logOut} title = 'logOut' path = '/img/logOut.svg' />\r\n                                </div>\r\n                    </div>\r\n               </div>\r\n            </header>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect()(withRouter(Header));","import React,{Fragment} from 'react';\r\nimport isFetch from 'isomorphic-fetch';\r\nimport PropTypes from 'prop-types';\r\nimport eventEmitter from '../../EventEmitter.js';\r\n\r\nimport './modal.scss';\r\n\r\nclass ModalWindow extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        mode: PropTypes.string\r\n    }\r\n\r\n    state = {\r\n        workMode: this.props.workMode,\r\n        images: {images: null, imageBoxView: false},\r\n        newProject: {\r\n            validateName: false,\r\n            validateType: false,\r\n            disabled: true,\r\n            name: '',\r\n            type: 'empty'\r\n        },\r\n        warning: {\r\n            lengthMax: 'Max length: 20 symbols',\r\n            lengthMin: 'Min length: 4 symbol',\r\n            type: 'Select type of webpage',\r\n        }\r\n    }\r\n\r\n    inputSelect = null;\r\n\r\n    searchBackground = event => {\r\n        const token = \"421b12ae729e1f6e4a0cac207496874099ab8a738378ec07a8e2598b11201802\";\r\n        isFetch(`https://api.unsplash.com/photos/?client_id=${token}`)\r\n        .then(response => response.json())\r\n        .then(response => {\r\n            this.setState({\r\n                ...this.state,\r\n                images: {\r\n                    ...this.state.images,\r\n                    imageBoxView: true,\r\n                    images: {...response}\r\n                }\r\n            });\r\n        })\r\n        .catch(error => {\r\n            console.log(error);\r\n        });\r\n    }\r\n\r\n    makeImageResultBox = (items) => {\r\n        if (!items) return null;\r\n\r\n        let box = [];\r\n        let keys = Object.keys(items);\r\n\r\n        for (let i = 0; i < keys.length; i++){\r\n            box.push(\r\n                <div key = {`item${i}`} className = 'ItemBox'>\r\n                    <img src = {items[keys[i]].urls.regular} alt = 'item' />\r\n                </div>\r\n                )\r\n        }\r\n\r\n        return box;\r\n    }\r\n\r\n    addNewProject = (event) => {\r\n        let mode = this.state[this.state.workMode];\r\n        if (mode.validateType &&  mode.validateName) {\r\n            eventEmitter.emit('EventAddProject',\r\n            {\r\n                title: this.state[this.state.workMode].name,\r\n                type: this.state[this.state.workMode].type\r\n            });\r\n\r\n            eventEmitter.emit('EventChangeWorkMode',{action: 'default'});\r\n        }\r\n    }\r\n\r\n    selectOption = (event) => {\r\n\r\n        let inputs = {...this.state[this.state.workMode]};\r\n        inputs.type = event.target.value;\r\n        inputs.validateType = inputs.type !== 'empty';\r\n        inputs.disabled = inputs.validateType && inputs.validateName ? false : true;\r\n        this.setState({\r\n            ...this.state,\r\n            [this.state.workMode]: inputs\r\n        });\r\n    }\r\n\r\n    validateName = (event) => {\r\n\r\n        let inputs = {...this.state[this.state.workMode]};\r\n        inputs.name = event.target.value;\r\n        let lengthInput = inputs.name.length;\r\n        inputs.validateName = lengthInput >= 4 && lengthInput < 20 ? true : false;\r\n        inputs.disabled = inputs.validateType && inputs.validateName ? false : true;\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            [this.state.workMode]: inputs\r\n        })\r\n    };\r\n\r\n    cancel = (event) => {\r\n\r\n        if (this.state.workMode === 'Search')\r\n            eventEmitter.emit(\"EventModalSearchOn\");\r\n        else  eventEmitter.emit('EventChangeWorkMode',{action: 'default'});\r\n    }\r\n\r\n    refSelect = (node) => this.inputSelect = node;\r\n\r\n    render(){\r\n        console.log('modal');\r\n        switch (this.state.workMode){\r\n\r\n            case 'newProject': {\r\n                return (\r\n                        <div className = 'Modal'>\r\n                            <h3>Create new Project</h3>\r\n                            {\r\n                                this.state[this.state.workMode].name.length <= 3 ?\r\n                                <span className = 'warning'>{this.state.warning.lengthMin}</span> : null\r\n                            }\r\n                            {\r\n                                this.state[this.state.workMode].name.length >= 20 ?\r\n                                <span className = 'warning'>{this.state.warning.lengthMax}</span> : null\r\n                            }\r\n                            <input\r\n                                className = {this.state[this.state.workMode].validateName ? 'ready' : 'wrong'}\r\n                                value = {this.state[this.state.workMode].name}\r\n                                onChange = {this.validateName}\r\n                                type = 'text'\r\n                                placeholder = \"Project name\"\r\n                            />\r\n                            {\r\n                                !this.state[this.state.workMode].validateType ?\r\n                                <span className = 'warning'>{this.state.warning.type}</span> : null\r\n                            }\r\n                            <select onChange = {this.selectOption} >\r\n                                <option value = 'empty'>--------</option>\r\n                                <option value = 'landing'>Landing</option>\r\n                                <option value = 'portfolio'>Portfolio</option>\r\n                            </select>\r\n                            <input \r\n                                onClick = {this.addNewProject}\r\n                                className = 'acceptButton'\r\n                                disabled = {this.state[this.state.workMode].disabled}\r\n                                type = 'button'\r\n                                value = 'Submit'\r\n                            />\r\n                            <input onClick = {this.cancel} type ='button' value = 'Cancel' />\r\n                        </div>\r\n                )\r\n            }\r\n            case 'Search': {\r\n                return (\r\n                    <Fragment>\r\n                    <div className = 'Modal Modal-search'>\r\n                    <h3>Search background image</h3>\r\n                    <input\r\n                        type = 'text'\r\n                        placeholder = \"Photo name\"\r\n                    />\r\n                    <input \r\n                        className = 'acceptButton'\r\n                        type = 'button'\r\n                        value = 'Search'\r\n                        onClick = {this.searchBackground}\r\n                    />\r\n                    <input onClick = {this.cancel} type ='button' value = 'Cancel' />\r\n                    {\r\n                        this.state.images.imageBoxView ?\r\n                        <div className = 'searchResultBox'>\r\n                            {this.makeImageResultBox(this.state.images['images'])}\r\n                        </div>\r\n                        : null\r\n                    }\r\n\r\n                </div>\r\n                    </Fragment>\r\n                )\r\n            }\r\n            default: {\r\n                return (\r\n                    <Fragment></Fragment>\r\n                )\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default ModalWindow;\r\n\r\n","import firebase from '../../Firebase/Firebase';\r\nimport {createProjectAction, errorAction} from '../actions';\r\n\r\n\r\nconst middlewareCreateProject = (uid, list, title, type) => async dispatch => {\r\n    let lastProject = [...list];\r\n    const lastIndex = lastProject.length  ? lastProject[lastProject.length-1].id + 1 : 0;\r\n    lastProject.push({\"id\": lastIndex, \"title\": title, \"type\": type, components: {}});\r\n\r\n    await firebase.db.collection(\"users\").doc(uid).update({\r\n        'projects': lastProject,\r\n    })\r\n    .then (() => dispatch(createProjectAction(lastProject)))\r\n    .catch(error => dispatch(errorAction(error.message)));\r\n};\r\n\r\nexport {\r\n    middlewareCreateProject\r\n}","import React, {useState} from 'react';\r\nimport eventEmitter from '../../EventEmitter';\r\nimport {withRouter} from 'react-router-dom';\r\n\r\nfunction Item(props) {\r\n    const [id] = useState(props.id);\r\n    const [name] = useState(props.name);\r\n    const [type] = useState(props.type);\r\n\r\n\r\n    const build = event => {\r\n        props.history.push(`/Cabinet/Build/${id}`);\r\n        event.stopPropagation();\r\n    };\r\n\r\n    const deleteItem = event => {\r\n        eventEmitter.emit('EventDeleteItem',{id: props.id, name: props.name, type: props.type});\r\n        event.stopPropagation();\r\n    };\r\n\r\n    return (\r\n        <div className = 'item' data-id = {id}>\r\n            <p className = 'ProjectName'>{name}</p>\r\n            <p className = 'ProjectType'>{type}</p>\r\n            <div className = 'projectController'>\r\n            <input onClick = {build} className = 'projectControllerButton_enter' type = 'button' value = 'enter build' />\r\n            <input onClick = {deleteItem} className = 'projectControllerButton_delete' type = 'button' value = 'delete' />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(Item);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport {middlewareCreateProject} from '../../redux/middleware/createProjectMiddleware';\r\n\r\nimport './list.scss';\r\n\r\nimport Item from './Item';\r\nimport eventEmitter from '../../EventEmitter.js';\r\n\r\nclass List extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        children: PropTypes.shape({\r\n            projects: PropTypes.array.isRequired,\r\n           count: PropTypes.number.isRequired,\r\n        }),\r\n        list: PropTypes.array.isRequired,\r\n    }\r\n\r\n    state = {\r\n        redirect: false,\r\n    }\r\n\r\n    addNewProject = (item) => {\r\n        if (this.props.idUser) {\r\n            this.props.dispatch(middlewareCreateProject(this.props.idUser, this.props.list, item.title, item.type));\r\n        } else this.setState({...this.state, redirect: true});\r\n    }\r\n\r\n\r\n    makeList = (list) => {\r\n\r\n        return list.map (project => {\r\n\r\n            return(\r\n                <Item\r\n                    key = {project.id}\r\n                    id = {project.id}\r\n                    name = {project.title}\r\n                    type = {project.type}\r\n                />\r\n            )\r\n        });\r\n    }\r\n\r\n    render(){\r\n        if (this.state.redirect)\r\n            return <Redirect to = '/' />\r\n            else return (\r\n                    <div className = 'projectsList__list'>\r\n                        {this.makeList([...this.props.list])}\r\n                    </div>\r\n                )\r\n    }\r\n\r\n    componentWillMount = () =>\r\n        eventEmitter.on('EventAddProject',this.addNewProject);\r\n\r\n      componentWillUnmount = () =>\r\n        eventEmitter.off('EventAddProject',this.addNewProject);\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        idUser: state.cabinet.idUser,\r\n        list: [...state.cabinet.projects]\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(List);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nimport List from '../List/List.jsx';\r\n\r\nimport './ProjectsSection.scss';\r\n\r\nclass ProjectsSection extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        projects: PropTypes.array,\r\n    }\r\n\r\n    render(){\r\n        return (\r\n                <section className = 'projectsList'>\r\n                <div className = 'container'>\r\n                <div className = 'flex-column'>\r\n                        <div className = 'projectsList__about'>\r\n                            <h3>Your Projects</h3>\r\n                        </div>\r\n                        <List />\r\n                    </div>\r\n                </div>\r\n                </section>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default ProjectsSection;","import React,{Fragment} from 'react';\nimport PropTypes from 'prop-types';\nimport eventEmitter from '../../EventEmitter.js';\nimport {Redirect} from 'react-router-dom';\nimport withFirebase from '../../components/firebaseHOC';\n\nimport {middlewareLogOutUser} from '../../redux/middleware/loadUserMiddleware';\nimport middlewareDelete from '../../redux/middleware/middlewareDelete';\nimport Loader from '../../components/loading/Loader';\nimport {connect} from 'react-redux';\n\nimport Header from '../../components/header/Header';\nimport Modal from '../../components/modalWindow/ModalWindow';\nimport ProjectsSection from '../../components/ProjectsSection/ProjectsSection';\n\nimport './Cabinet.scss';\n\nconst title = require('../../config.json').title;\n\nclass Cabinet extends React.PureComponent {\n\n  static propTypes = {\n    firebase: PropTypes.object.isRequired\n  }\n\n  state = {\n    workMode: 'default',\n  }\n\n  logOut = event => {\n    this.props.dispatch(middlewareLogOutUser(this.props.idUser));\n  }\n\n  deletItem = event => {\n    this.props.dispatch(middlewareDelete({...event, uid: this.props.firebase.getCurrentUser().uid}));\n  }\n\n  changeWorkMode = event => {\n    this.setState ({\n      ...this.state,\n      workMode: event.action,\n    });\n  }\n\n  render(){\n    if (this.props.active){\n      return (\n        <Fragment>\n          <Header title = {title} idUser = {this.props.idUser} />\n          {(this.state.workMode === 'newProject') ? <Modal workMode = {this.state.workMode} /> : null}\n            <ProjectsSection />\n        </Fragment>\n      )\n    } else if (!this.props.firebase.getCurrentUser()) return <Redirect to = '/' />\n    else return <Loader path = '/img/loading.gif' type = 'Cabinet' />\n    }\n\n\n  componentDidMount = () => {\n    eventEmitter.on('EventDeleteItem', this.deletItem);\n    eventEmitter.on('EventChangeWorkMode', this.changeWorkMode);\n  }\n\n  componentWillUnmount = () => {\n    eventEmitter.off('EventDeleteItem', this.deletItem);\n    eventEmitter.off('EventChangeWorkMode', this.changeWorkMode);\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    idUser: state.cabinet.idUser,\n    projects: [...state.cabinet.projects],\n    active: state.cabinet.active\n  }\n}\n\n\n\nexport default connect(mapStateToProps)(withFirebase(Cabinet));\n","import React, {Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nimport withFirebase from '../../components/firebaseHOC';\r\nimport Header from '../../components/header/Header';\r\n\r\nimport './about.scss';\r\n\r\nclass About extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        config: PropTypes.object.isRequired,\r\n        firebase: PropTypes.object.isRequired,\r\n    }\r\n\r\n    state = {\r\n        config: this.props.config\r\n    };\r\n\r\n    render(){\r\n        if (this.props.firebase.getCurrentUser()) {\r\n            const { config } = this.state;\r\n            return (\r\n                <Fragment>\r\n                    <Header title = {config.title} />\r\n                    <section className = 'About'>\r\n                        <div className = 'container'>\r\n                            <div className = 'col-12'>\r\n                                <div className = 'information'>\r\n                                <img alt = 'img' className = 'logoAbout' src = {process.env.PUBLIC_URL + '/img/about.jpg'}/>\r\n                                    <p className ='developer'><span>Developer:</span> {config.about.developer}</p>\r\n                                    <p className = 'year'><span>Year:</span> {config.about.year}</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </section>\r\n                </Fragment>\r\n            )\r\n        } else return <Redirect to = '/' />\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default withFirebase(About);","import React, {Fragment} from 'react';\r\nimport eventEmitter from '../../EventEmitter';\r\nimport PropTypes from 'prop-types';\r\nimport { SketchPicker } from 'react-color';\r\nimport './instrumentsPanel.scss';\r\n\r\nimport Icon from '../Icon/icon';\r\n\r\nclass InstrumentsPanel extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        instrumentPanel:  PropTypes.object.isRequired,\r\n        editComponent: PropTypes.object.isRequired\r\n    }\r\n\r\n    state = {\r\n        instrumentPanel: {...this.props.instrumentPanel},\r\n        sizeTextValue: 120,\r\n        colorPickerAvtive: false,\r\n        images: null,\r\n    }\r\n\r\n    updateSizeText = event => {\r\n        this.setState({...this.state, sizeTextValue: event});\r\n    }\r\n\r\n    resetAll = event => {\r\n        console.log(event.target);\r\n        event.stopPropagation();\r\n        if (this.state.colorPickerAvtive)\r\n        this.setState({...this.state, colorPickerAvtive: false });\r\n    }\r\n\r\n    closePanel = event => {\r\n        eventEmitter.emit('EventClosePanel', {close: false});\r\n    }\r\n\r\n    setSize = event => {\r\n        let size = event.target.value > 200 ? 200 : event.target.value;\r\n        event.stopPropagation();\r\n        this.setState({sizeTextValue: size}, () => {\r\n            eventEmitter.emit('EventChangeSizeText', {size: this.state.sizeTextValue });\r\n        });\r\n    }\r\n\r\n    setContent = event => {\r\n        let contentValue = event.target.value;\r\n        event.stopPropagation();\r\n        eventEmitter.emit(\"EventChangeContentText\",{content: contentValue});\r\n    }\r\n\r\n    setColor = event => {\r\n        event.stopPropagation();\r\n        this.setState({...this.state, colorPickerAvtive: this.state.colorPickerAvtive ? false : true});\r\n    };\r\n\r\n    handleChangeComplete = event => {\r\n\r\n        if (this.state.instrumentPanel.target === 'background')\r\n            eventEmitter.emit('EventChangeColor', event);\r\n        else if (this.state.instrumentPanel.target === 'text')\r\n            eventEmitter.emit('EventChangeColorText', event);\r\n    }\r\n\r\n    searchImage = event => {\r\n        eventEmitter.emit('EventModalSearchOn');\r\n    };\r\n\r\n    makePanelInstruments = (type) => {\r\n        switch (type){\r\n            case 'text': {\r\n            return (\r\n                    <Fragment>\r\n                    <p className = 'titleInstument'>Color: </p>\r\n                    <input onClick = {this.setColor} className = 'button_switchColor' type = 'button' value = 'color pick' />\r\n                    <p className = 'titleInstument'>Text size: </p>\r\n                    <input \r\n                        onChange = {this.setSize} \r\n                        type=\"number\"\r\n                        min = '10' max = '200'\r\n                        value = {this.state.sizeTextValue}\r\n                    />\r\n                        { this.state.colorPickerAvtive ?\r\n                            <SketchPicker\r\n                            onChangeComplete={this.handleChangeComplete}\r\n                            />\r\n                            : null\r\n                        }\r\n                    <p className = 'titleInstument'>Content: </p>\r\n                    <input onChange = {this.setContent} maxLength = '20' type = 'text' defaultValue = 'Title' />\r\n                    <input className = 'saveButtonInstument' type = 'button' value = 'save changes' />\r\n                    </Fragment>\r\n            )\r\n            }\r\n            case 'background': {\r\n                console.log('a');\r\n                return (\r\n                    <Fragment>\r\n                    <p className = 'titleInstument'>Color: </p>\r\n                    <input onClick = {this.setColor} className = 'button_switchColor' type = 'button' value = 'color pick' />\r\n                        { this.state.colorPickerAvtive ?\r\n                            <SketchPicker\r\n                            onChangeComplete={this.handleChangeComplete}\r\n                            />\r\n                            : null\r\n                        }\r\n                        <input onClick = {this.searchImage} className = 'ImageSearchButton' type = 'button' value = 'background-image' />\r\n                        <input className = 'saveButtonInstument' type = 'button' value = 'save changes' />\r\n                    </Fragment>\r\n                )\r\n\r\n            }\r\n            default:{\r\n                return (\r\n                    <p className = 'warningInstruments'>Select elements for accses edit instruments</p>\r\n                )\r\n            }\r\n        }\r\n    }\r\n\r\n          // {this.state.images ?\r\n            //     <img src = {`${this.state.images[1].urls.thumb}`} alt ='test' /> : null\r\n            // }\r\n\r\n    render(){\r\n        console.log(this.state.images);\r\n        let { instrumentActive } = this.state.instrumentPanel;\r\n        return (\r\n            <Fragment>\r\n                <div  className = 'instumentsPanel'>\r\n                <button onClick = {this.closePanel} className = 'closeInstrumentsPanel'><Icon path = '/img/close.svg' /></button>\r\n                    <h3>Instruments</h3>\r\n                    {\r\n                        instrumentActive ? \r\n                        <p className = 'titleComponent important'>{this.state.instrumentPanel.target}</p>\r\n                        : null\r\n                    }\r\n                    {\r\n                        instrumentActive ?\r\n                        <div  className= 'instuments'>{this.makePanelInstruments(this.state.instrumentPanel.target)}</div>\r\n                        : null\r\n                    }\r\n                </div>\r\n            </Fragment>\r\n        )\r\n    }\r\n\r\n    componentDidUpdate = (oldProps, oldState) => {\r\n\r\n      if (oldState.instrumentPanel.target !== this.props.instrumentPanel.target)\r\n        this.setState({\r\n            ...this.state,\r\n            colorPickerAvtive: false,\r\n            instrumentPanel: {...this.props.instrumentPanel}\r\n        })\r\n      return true;\r\n    }\r\n\r\n    componentDidMount = event => {\r\n        eventEmitter.on(\"EventUpdateSizeText\", this.updateSizeText);\r\n    };\r\n\r\n    componentWillUnmount = event => {\r\n        eventEmitter.off(\"EventUpdateSizeText\", this.updateSizeText);\r\n    }\r\n}\r\n\r\nexport default InstrumentsPanel;","import React, {useEffect, useState} from 'react';\r\nimport eventEmitter from '../../../../EventEmitter';\r\nimport styled from 'styled-components';\r\n\r\nconst Title = styled.h1.attrs(props => ({\r\n    style: {\r\n        display: props.shadowDisplay ? 'none' : 'block',\r\n        left: props.coordX,\r\n        top: props.coordY,\r\n}}))`\r\n    position: absolute;\r\n    left: 50%;\r\n    transform: translate(-50%);\r\n    font-size: ${props => props.size};\r\n    color: ${props => props.textColor};\r\n    text-align: center;\r\n    margin: 0;\r\n`;\r\n\r\nconst Background = styled.div`\r\n    position: relative;\r\n    width: 100%;\r\n    height: 95vh;\r\n    background: ${props => props.background}\r\n`;\r\n\r\nconst Media = styled.video`\r\n    width: 100%;\r\n`;\r\n\r\nconst openBgInstruments = event => {\r\n\r\n    eventEmitter.emit('EventInstrumentPanel',{target: 'background'});\r\n    event.stopPropagation();\r\n}\r\n\r\nconst openMediaInstruments = event => {\r\n\r\n    eventEmitter.emit('EventInstrumentPanel',{target: 'media'});\r\n    event.stopPropagation();\r\n}\r\n\r\nconst openTitleInstruments = event => {\r\n\r\n    eventEmitter.emit('EventInstrumentPanel',{target: 'text'});\r\n    event.stopPropagation();\r\n}\r\n\r\nconst TitleComponent = props =>  {\r\n\r\n    let [colorText, setColorText] = useState(props.color);\r\n    let [sizeText, setSizeText] = useState(props.size ? props.size : 120);\r\n    let [contentText, setText] = useState(props.children);\r\n    const [shiftCoords, setShiftCoords] = useState(null)\r\n    const [dragNdrop, setDragNdrop] = useState(null);\r\n\r\n    const changeColorText = colorHash => {\r\n        const {rgb} = colorHash;\r\n        let colorRGB = `rgb(${rgb.r},${rgb.g},${rgb.b},${rgb.a})`;\r\n        setColorText(colorRGB);\r\n    }\r\n\r\n    const changeSizeText = eventSize => {\r\n        \r\n        const {size} = eventSize;\r\n        setSizeText(size);\r\n    }\r\n\r\n    const changeContentText = eventContent => {\r\n        const {content} = eventContent;\r\n        setText(content);\r\n    }\r\n\r\n\r\n    const didUpdate = event => {\r\n        eventEmitter.on('EventChangeColorText', changeColorText);\r\n        eventEmitter.on('EventChangeSizeText', changeSizeText);\r\n        eventEmitter.on('EventChangeContentText', changeContentText);\r\n        return () => {\r\n            eventEmitter.off('EventChangeColorText', changeColorText);\r\n            eventEmitter.off('EventChangeSizeText', changeSizeText);\r\n            eventEmitter.off('EventChangeContentText', changeContentText);\r\n        }\r\n    }\r\n\r\n    const saveCoords = event => {\r\n\r\n        let rect = event.target.getBoundingClientRect();\r\n        let left = rect.left;\r\n        let top = rect.top;\r\n        let width = rect.width;\r\n        let height = rect.height;\r\n        console.log(rect);\r\n        setShiftCoords({x: event.pageX - left - width/2, y: event.pageY - top + height/2.8});\r\n\r\n        event.stopPropagation();\r\n    }\r\n\r\n    const moveText = event => {\r\n\r\n        \r\n        let coordX = event.pageX - shiftCoords.x;\r\n        let coordY = event.pageY - shiftCoords.y;\r\n\r\n        coordX = coordX <= 130 ? 130 : coordX;\r\n        coordY = coordY <= 0 ? 0 : coordY;\r\n\r\n            setDragNdrop({x: coordX + 'px', y: coordY + 'px', shadowDisplay: event.type === 'drag' ? true : false});\r\n            event.stopPropagation();\r\n    }\r\n\r\n    const weelResizeText = event => {\r\n\r\n        if (event.shiftKey && event.deltaY === -100) {\r\n            let counter = sizeText + 1;\r\n            counter = counter > 200 ? 200 : counter;\r\n            setSizeText(counter);\r\n            eventEmitter.emit('EventUpdateSizeText', counter);\r\n        }\r\n\r\n        if (event.shiftKey && event.deltaY === 100) {\r\n            let counter = sizeText - 1;\r\n             counter = counter <= 10 ? 10 : counter;\r\n             setSizeText(counter);\r\n             eventEmitter.emit('EventUpdateSizeText', counter);\r\n            }\r\n        event.stopPropagation();\r\n    }\r\n    useEffect(didUpdate);\r\n\r\n    return (\r\n        <Title\r\n            onClick={openTitleInstruments}\r\n            textColor = {colorText ? colorText : 'red'}\r\n            size = {sizeText ? sizeText + 'px' : '120px'}\r\n            draggable = {true}\r\n            onMouseDown = {saveCoords}\r\n            onDrag   = {moveText}\r\n            onDragEnd = {moveText}\r\n            onWheel = {weelResizeText}\r\n            coordX = {dragNdrop ? dragNdrop.x : null}\r\n            coordY = {dragNdrop ? dragNdrop.y : null}\r\n            shadowDisplay = {dragNdrop ? dragNdrop.shadowDisplay : false}\r\n        >\r\n            {contentText}\r\n        </Title>\r\n    )\r\n}\r\n\r\n\r\nconst BackgroundComponent = props => {\r\n\r\n    let [backgroundColor, setBgColor] = useState(props.background);\r\n\r\n    const changeColor = colorHash => {\r\n        const {rgb} = colorHash;\r\n        let colorRGB = `rgb(${rgb.r},${rgb.g},${rgb.b},${rgb.a})`;\r\n        setBgColor(colorRGB);\r\n    }\r\n\r\n    const didUpdate = event => {\r\n        eventEmitter.on('EventChangeColor', changeColor);\r\n        return () => {\r\n            eventEmitter.off('EventChangeColor', changeColor);\r\n        }\r\n    }\r\n\r\n    useEffect(didUpdate);\r\n    return (\r\n        <Background\r\n            onClick={openBgInstruments}\r\n            background = {backgroundColor}\r\n        >\r\n            {props.children}\r\n            </Background>\r\n    )\r\n}\r\n\r\nconst MediaComponent = props => <Media onClick={openMediaInstruments} width = {props.width} height = {props.height}>{props.children}</Media>;\r\n\r\nexport {\r\n    TitleComponent, BackgroundComponent,\r\n    MediaComponent\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport {TitleComponent, BackgroundComponent} from '../buildComponents/header/components/headerComponents';\r\n\r\nimport eventEmitter from '../../EventEmitter';\r\n\r\nimport './buildMenu.scss';\r\n\r\nclass BuildMenu extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        component: PropTypes.object\r\n    }\r\n\r\n    state = {\r\n        component: {...this.props.component},\r\n        title: 'Title'\r\n    }\r\n\r\n    addText = event => {\r\n\r\n        let componentArrayWrapper = [];\r\n        componentArrayWrapper.push(<TitleComponent key = 'header'>{this.state.title}</TitleComponent>);\r\n        eventEmitter.emit('EventBuildHeaderComponents',{target: 'Header', type: 'text', component: componentArrayWrapper});\r\n        event.stopPropagation();\r\n    }\r\n\r\n    addBackground = event => {\r\n\r\n        let componentArrayWrapper = [];\r\n        componentArrayWrapper.push(<BackgroundComponent key = 'bgHeader'/>);\r\n        eventEmitter.emit('EventBuildHeaderComponents',{target: 'Header', type: 'background', component: componentArrayWrapper});\r\n\r\n        event.stopPropagation();\r\n    }\r\n\r\n    render(){\r\n\r\n        return (\r\n            <div className = 'ComponentsMenu'>\r\n                <button onClick = {this.addBackground} className = 'ImageTool CompoentnsMenu_button' ><span>Image</span></button>\r\n                <button onClick = {this.addText} className = 'TextTool CompoentnsMenu_button' ><span>Text</span></button>\r\n                <button \r\n                    disabled = {this.state.component.name !== 'Header' ? false : true}\r\n                    className = 'ButtonTool CompoentnsMenu_button' >\r\n                    <span>Button</span>\r\n                </button>\r\n                <button className = 'VideoTool CompoentnsMenu_button' ><span>Video</span></button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default BuildMenu;","import React,{Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Icon from '../Icon/icon';\r\nimport BuildMenu from '../componentsBuildMenu/BuildMenu';\r\n\r\nimport styled from 'styled-components';\r\n\r\nconst ControllersBox = styled.div.attrs(props => ({\r\n            style: {\r\n                display: props.shadowDisplay,\r\n                left: props.coordX,\r\n                top: props.coordY,\r\n    }}))\r\n    `position: absolute;`;\r\n\r\n\r\n\r\nclass Controllers extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        menuActive: PropTypes.bool,\r\n    }\r\n\r\n    state = {\r\n        viewComponentMenu: false,\r\n        shiftX: 0,\r\n        shiftY: 0,\r\n        coordsX: '50%',\r\n        coordsY: '0',\r\n        shadowDisplay: 'block'\r\n    }\r\n\r\n    componentMenu = (event) => {\r\n        this.setState({viewComponentMenu: this.state.viewComponentMenu ? false : true})\r\n    }\r\n\r\n    saveCoords = event => {\r\n        let left = this.controlBox.getBoundingClientRect().left;\r\n        let top = this.controlBox.getBoundingClientRect().top;\r\n        console.log(left);\r\n        this.setState({...this.state, shiftX: event.pageX - left, \r\n        shiftY: event.pageY - top + 55 });\r\n\r\n        event.stopPropagation();\r\n    }\r\n\r\n    drag = event => {\r\n        if (!this.state.viewComponentMenu)\r\n            this.setState({\r\n                ...this.state,\r\n                coordsX: event.pageX - this.state.shiftX + 'px', \r\n                coordsY: event.pageY - this.state.shiftY + 'px',\r\n                shadowDisplay: event.type === 'drag' ? 'none' : 'block'\r\n            });\r\n        event.stopPropagation();\r\n    }\r\n\r\n    controlBox = null;\r\n    refControll = (node) => this.controlBox = node;\r\n\r\n\r\n    render(){\r\n        return (\r\n            <Fragment>\r\n            { this.props.menuActive ?\r\n                <ControllersBox\r\n                ref = {this.refControll}\r\n                className = 'ControllersEditComponent'\r\n                coordX = {this.state.coordsX}\r\n                coordY = {this.state.coordsY}\r\n                draggable = {!this.state.viewComponentMenu}\r\n                onMouseDown = {this.saveCoords}\r\n                onClick = {this.componentMenu}\r\n                onDrag   = {this.drag}\r\n                onDragEnd = {this.drag}\r\n                shadowDisplay = {this.state.shadowDisplay}\r\n                >\r\n                    <Icon\r\n                        draggable = {true}\r\n                        onClick = {this.componentMenu}\r\n                        className = 'addButton'\r\n                        path = '/img/addButton.png'\r\n                    />\r\n                    {this.state.viewComponentMenu ? <BuildMenu component = {{...this.props.component}} /> : null}\r\n                </ControllersBox>\r\n                : null\r\n            }\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Controllers;","import React, {Fragment} from 'react';\r\nimport eventEmitter from '../../../EventEmitter';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nimport {BackgroundComponent} from '../../buildComponents/header/components/headerComponents';\r\nimport Controllers from '../../controllers/controllers';\r\n\r\n\r\nimport './headerBuild.scss';\r\n\r\nclass HeaderBuild extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        id: PropTypes.number.isRequired,\r\n    }\r\n\r\n    state = {\r\n        idProject: this.props.id,\r\n        component: {...this.props.children}\r\n        }\r\n\r\n\r\n    changeMode = (event) => {\r\n        if (!this.props.editStart) {\r\n            let rect = event.currentTarget.getBoundingClientRect();\r\n            const width = rect.width;\r\n            const height = rect.height;\r\n        eventEmitter.emit('EventModeEdit', {...this.state, width: width, height: height});\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <div onClick = {this.changeMode} className = 'Header'>\r\n                    <BackgroundComponent background = 'grey'>\r\n                    {  this.props.children.build.component && this.props.children.build.type === 'text'  ?\r\n                            this.props.children.build.component : null\r\n                    }\r\n                    </BackgroundComponent>\r\n                    {!this.props.editStart ? <p className = 'warningEdit'>Click for start edit</p> : null}\r\n                    {!this.state.readyBuild ? \r\n                        <Controllers\r\n                            menuActive = {this.props.menuActive}\r\n                            component = {{...this.state.component}}\r\n                            mainWidth = {this.props.children.mainBoxWidth}\r\n                            mainHeight = {this.props.children.mainBoxHeight}\r\n\r\n                        />\r\n                        : null}\r\n                </div>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\nexport default HeaderBuild;","import React,{Fragment} from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport {Redirect} from 'react-router-dom';\r\nimport eventEmitter from '../../EventEmitter';\r\n\r\nimport withFirebase from '../../components/firebaseHOC';\r\nimport {connect} from 'react-redux';\r\n\r\nimport Loader from '../../components/loading/Loader';\r\nimport Header from '../../components/header/Header';\r\nimport InstrumentsPanel from '../../components/instrumentsPanel/InstrumentsPanel';\r\nimport ModalWindow from '../../components/modalWindow/ModalWindow';\r\nimport HeaderBuild from '../../components/buildComponents/header/headerBuild';\r\n\r\nimport './build.scss';\r\nimport Item from '../../components/List/Item';\r\n\r\n\r\nclass Build extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        param: PropTypes.string,\r\n        match: PropTypes.shape({\r\n            params: PropTypes.shape({\r\n                param: PropTypes.string.isRequired\r\n            }).isRequired\r\n        }).isRequired\r\n    }\r\n\r\n    state = {\r\n            idProject: parseInt(this.props.match.params.param),\r\n            typeProject: null,\r\n            editComponent: {name: null, build: {}, edit: false},\r\n            changeEdit: false,\r\n            instrumentPanel: { instrumentActive: false, target: '' },\r\n            menuActive: false,\r\n            editStart: false,\r\n            modalSearch: false,\r\n        }\r\n\r\n        modalSearchOn = event => {\r\n            this.setState({...this.state, modalSearch: this.state.modalSearch ? false : true});\r\n        }\r\n\r\n    workModeEdit = itemEvent => {\r\n        if (!this.state.editStart || this.state.changeEdit)\r\n        this.setState({\r\n            ...this.state,\r\n            idProject: itemEvent.idProject,\r\n            editComponent: {\r\n                ...itemEvent.component,\r\n                mainBoxWidth: itemEvent.width,\r\n                mainBoxHeight: itemEvent.height\r\n            },\r\n            menuActive: true,\r\n            editStart: true\r\n        });\r\n\r\n    }\r\n\r\n    openInstrument = itemEvent => {\r\n        if (this.state.editStart)\r\n        this.setState({\r\n            ...this.state,\r\n            instrumentPanel: {\r\n                ...this.state.instrumentPanel, \r\n                instrumentActive: true, \r\n                target: itemEvent.target }\r\n        })\r\n    }\r\n\r\n    closePanel = event => {\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            instrumentPanel: {\r\n                ...this.state.instrumentPanel,\r\n                colorPickerAvtive: false,\r\n                instrumentActive: event.close}\r\n        })\r\n    }\r\n\r\n    addHeaderComponent = itemEvent => {\r\n        this.setState({\r\n            ...this.state,\r\n            editComponent: {\r\n                ...this.state.editComponent,\r\n                build: {\r\n                    target: itemEvent.target,\r\n                    type: itemEvent.type,\r\n                    component: [...itemEvent.component]},\r\n            },\r\n        });\r\n    };\r\n\r\n\r\n    render(){\r\n        let { instrumentActive } = this.state.instrumentPanel;\r\n        if (this.props.active){\r\n            return (\r\n                <Fragment>\r\n                {this.state.modalSearch ?\r\n                    <ModalWindow workMode = 'Search' /> : null\r\n                }\r\n                { instrumentActive ?\r\n                    <InstrumentsPanel\r\n                        editComponent =  {{...this.state.editComponent}}\r\n                        instrumentPanel = {{...this.state.instrumentPanel}}\r\n                    />\r\n                    : null\r\n                }\r\n                    <Header title = \"Constructor\"  />\r\n                    <HeaderBuild\r\n                            editStart = {this.state.editStart}\r\n                            menuActive = {this.state.menuActive}\r\n                            id = {this.state.idProject}\r\n                    >\r\n                        {{...this.state.editComponent, name: 'Header'}}\r\n                    </HeaderBuild>\r\n                </Fragment>\r\n            )\r\n        } else if (!this.props.firebase.getCurrentUser()) return <Redirect to = '/' />\r\n        else return <Loader path = '/img/loading.gif' type = 'build' />\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        eventEmitter.on('EventBuildHeaderComponents', this.addHeaderComponent);\r\n        eventEmitter.on('EventClosePanel', this.closePanel);\r\n        eventEmitter.on('EventModalSearchOn', this.modalSearchOn);\r\n        eventEmitter.on('EventInstrumentPanel', this.openInstrument);\r\n        eventEmitter.on('EventModeEdit', this.workModeEdit);\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        eventEmitter.off('EventBuildHeaderComponents', this.addHeaderComponent);\r\n        eventEmitter.off('EventModalSearchOn', this.modalSearchOn);\r\n        eventEmitter.off('EventClosePanel', this.closePanel);\r\n        eventEmitter.off('EventInstrumentPanel', this.openInstrument);\r\n        eventEmitter.off('EventModeEdit', this.workModeEdit);\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n\r\n    return {\r\n        ...state.builder,\r\n        active: state.cabinet.active,\r\n        idUser: state.cabinet.idUser,\r\n        currentEditable: {}\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(withFirebase(Build));","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {BrowserRouter, Route, Switch} from 'react-router-dom';\r\n\r\nimport {middlewareLoadUserData} from './redux/middleware/loadUserMiddleware';\r\nimport {connect} from 'react-redux';\r\nimport withFirebase from './components/firebaseHOC';\r\nimport Loader from './components/loading/Loader';\r\n\r\nimport Index from './Pages/Index/Index';\r\nimport Cabinet from './Pages/Cabinet/Cabinet';\r\nimport About from './Pages/About/About';\r\nimport Build from './Pages/Build/Build';\r\n\r\nrequire('es6-promise').polyfill();\r\n\r\nclass App extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        config: PropTypes.object.isRequired,\r\n        firebase: PropTypes.object.isRequired,\r\n    }\r\n\r\n    state = {\r\n        firebase: this.props.firebase,\r\n        firebaseLoadState: false,\r\n    }\r\n\r\n    componentDidMount(){\r\n\r\n        this.props.firebase.auth.onAuthStateChanged((user) => {\r\n\r\n            if (!this.state.firebaseLoadState){\r\n                if (user) this.props.dispatch(middlewareLoadUserData(user.uid));\r\n                this.setState({firebaseLoadState: true});\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    render(){\r\n        if (this.state.firebaseLoadState){\r\n        return (\r\n            <BrowserRouter>\r\n                    <Switch>\r\n                        <Route\r\n                            path = '/' exact\r\n                            render = {(props) => <Index {...props} />}\r\n                        />\r\n                        <Route path = '/Cabinet/' exact component = {Cabinet}/>\r\n                        <Route\r\n                            path = '/Cabinet/About'\r\n                            render = {(props) => <About {...props} config = {this.props.config} />}\r\n                        />\r\n                        <Route path = '/Cabinet/Build/:param' component = {Build}/>\r\n                        <Route path = '*' component = {Index} />;\r\n                    </Switch>\r\n            </BrowserRouter>\r\n        )\r\n        } else return <Loader path = '/img/loading.gif' type = 'application' />\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n      active: state.cabinet.active\r\n    }\r\n  }\r\n\r\nexport default connect(mapStateToProps)(withFirebase(App));","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport {Provider} from 'react-redux';\nimport store from './redux/store';\nimport App from './App.jsx';\nimport 'normalize.css';\n\nconst config = require('./config.json');\n\n\nReactDOM.render(\n    <Provider store = {store}>\n        <App config = {config} />\n    </Provider>,\n        document.getElementById('root')\n);\n\n"],"sourceRoot":""}