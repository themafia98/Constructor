{"version":3,"sources":["redux/reducerRoot.js","redux/reducers.js","redux/actions.js","EventEmitter.js","components/Icon/icon.jsx","components/header/Header.jsx","components/modalWindow/ModalWindow.jsx","components/List/Item.jsx","components/List/List.jsx","components/ProjectsSection/ProjectsSection.jsx","Pages/Cabinet/Cabinet.jsx","Pages/About/About.jsx","components/instrumentsPanel/InstrumentsPanel.jsx","components/componentsBuildMenu/BuildMenu.jsx","components/buildComponents/header/headerBuild.jsx","Pages/Build/Build.jsx","App.jsx","index.js"],"names":["initialState","test","combineReducers","root","state","arguments","length","undefined","type","Object","objectSpread","stream","EventEmitter","Icon","props","_useState","useState","path","slicedToArray","_useState3","className","react_default","a","createElement","onClick","title","src","alt","iconPath","require","CabinetIcon","Header","redirect","e","_this","history","push","add","console","log","eventStream","emit","action","icon","react_router_dom","to","this","location","pathname","React","Component","withRouter","ModalWindow","workMode","newProject","validateName","validateType","disabled","name","warning","lengthMax","lengthMin","inputSelect","disabledButton","addNewProject","event","mode","selectOption","inputs","target","value","setState","defineProperty","lengthInput","cancel","refSelect","node","onChange","placeholder","react","PureComponent","id","concat","data-id","projects","List","list","toConsumableArray","listCount","addNewProject","item","lastProject","lastIndex","makeList","map","project","List_Item","key","componentWillMount","on","componentWillUnmount","off","ProjectsSection","components_List_List","Cabinet","changeWorkMode","header_Header","modalWindow_ModalWindow","components_ProjectsSection_ProjectsSection","config","About","process","about","developer","year","InstrumentsPanel","idProject","acceptInstruments","editComponent","edit","makePanelInstruments","componentDidUpdate","oldProps","oldState","BuildMenu","component","HeaderBuild","viewComponentMenu","children","changeMode","eventEmitter","componentMenu","componentsBuildMenu_BuildMenu","Build","match","params","param","workModeEdit","componentDidMount","instrumentsPanel_InstrumentsPanel","header_headerBuild","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","App","es","react_router","exact","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/Cabinet.f87956df.chunk.js","sourcesContent":["import {ROOT_INIT} from './actions';\r\nconst initialState = {\r\n    test: 0,\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n\r\n    switch (action.type){\r\n\r\n        case ROOT_INIT: {\r\n            return {\r\n                ...state,\r\n                test: state.test + 1,\r\n            }\r\n        }\r\n        default: return state;\r\n    }\r\n};","import {combineReducers} from 'redux';\r\nimport reducerRoot from './reducerRoot';\r\n\r\nexport default combineReducers({\r\n    root: reducerRoot,\r\n});","const ROOT_INIT = 'ROOT_INIT';\r\n\r\n\r\nconst testRedux = function(){\r\n    return {\r\n        type: ROOT_INIT,\r\n    }\r\n}\r\n\r\n\r\nexport {\r\n    ROOT_INIT, testRedux\r\n}","import {EventEmitter} from 'events';\r\nconst stream = new EventEmitter();\r\nexport default stream;","import React, {useState} from 'react';\r\n\r\nfunction Icon(props){\r\n    const [path] = useState(props.path);\r\n    const [className] = useState(props.className ? props.className : null);\r\n    return (\r\n    <img\r\n        onClick = {props.onClick ? props.onClick : null}\r\n        className = {className}\r\n        title = {props.title ? props.title : null}\r\n        src = {path} alt = 'icon'>\r\n    </img>\r\n    )\r\n}\r\n\r\nexport default Icon;","import React from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport './header.scss';\r\n\r\nimport {withRouter, NavLink} from 'react-router-dom';\r\n\r\nimport eventStream from '../../EventEmitter.js';\r\nimport Icon from '../Icon/icon';\r\n\r\n\r\nconst iconPath = require('../../config.json').CabinetIcon;\r\n\r\nclass Header extends React.Component {\r\n\r\n    static propTypes = {\r\n        title: PropTypes.string.isRequired,\r\n    }\r\n\r\n    state = {\r\n\r\n    }\r\n\r\n    redirect = (e) => {\r\n        this.props.history.push('/About');\r\n    }\r\n\r\n    add = (e) => {\r\n        console.log('add');\r\n        eventStream.emit('EventChangeWorkMode',{action: 'newProject'});\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <header>\r\n                <div className = 'container'>\r\n                    <div className = 'flex-row'>\r\n                    <div className = 'col-12'>\r\n                            <div className = 'header__CabinetInfo'>\r\n                                <Icon path = {iconPath} />\r\n                                <NavLink to = '/'><h3>{this.props.title}</h3></NavLink>\r\n                            </div>\r\n                            {this.props.location.pathname === '/' ?\r\n                                <div onClick = {this.add} className = 'header__newProject__AddButton'>\r\n                                    <Icon path = '/img/plus.png' />\r\n                                </div>\r\n                                : null\r\n                            }\r\n                                <div onClick = {this.redirect} className = 'Navigator'>\r\n                                    <Icon title = 'about' path = '/img/about_logo.svg' />\r\n                                </div>\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n            </header>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(Header);","import React,{Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport eventStream from '../../EventEmitter.js';\r\n\r\nimport './modal.scss';\r\n\r\nclass ModalWindow extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        mode: PropTypes.string\r\n    }\r\n\r\n    state = {\r\n        workMode: this.props.workMode,\r\n\r\n        newProject: {\r\n            validateName: false,\r\n            validateType: false,\r\n            disabled: true,\r\n            name: '',\r\n            type: 'empty'\r\n        },\r\n        warning: {\r\n            lengthMax: 'Max length: 20 symbols',\r\n            lengthMin: 'Min length: 3 symbol',\r\n            type: 'Select type of webpage',\r\n        }\r\n    }\r\n\r\n    inputSelect = null;\r\n\r\n    disabledButton = (action) => {\r\n\r\n    }\r\n\r\n    addNewProject = (event) => {\r\n        let mode = this.state[this.state.workMode];\r\n        if (mode.validateType &&  mode.validateName) {\r\n            eventStream.emit('EventAddProject', \r\n            {\r\n                title: this.state[this.state.workMode].name,\r\n                type: this.state[this.state.workMode].type\r\n            });\r\n\r\n            eventStream.emit('EventChangeWorkMode',{action: 'default'});\r\n        }\r\n    }\r\n\r\n    selectOption = (event) => {\r\n\r\n        let inputs = {...this.state[this.state.workMode]};\r\n        inputs.type = event.target.value;\r\n        inputs.validateType = inputs.type !== 'empty';\r\n        inputs.disabled = inputs.validateType && inputs.validateName ? false : true;\r\n        this.setState({\r\n            ...this.state,\r\n            [this.state.workMode]: inputs\r\n        });\r\n    }\r\n\r\n    validateName = (event) => {\r\n\r\n        let inputs = {...this.state[this.state.workMode]};\r\n        inputs.name = event.target.value;\r\n        let lengthInput = inputs.name.length;\r\n        inputs.validateName = lengthInput > 0 && lengthInput < 20 ? true : false;\r\n        inputs.disabled = inputs.validateType && inputs.validateName ? false : true;\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            [this.state.workMode]: inputs\r\n        })\r\n    };\r\n\r\n    cancel = (event) => {\r\n        eventStream.emit('EventChangeWorkMode',{action: 'default'});\r\n    }\r\n\r\n    refSelect = (node) => this.inputSelect = node;\r\n\r\n    render(){\r\n\r\n        switch (this.state.workMode){\r\n\r\n            case 'newProject': {\r\n                return (\r\n                        <div className = 'Modal'>\r\n                            <h3>Create new Project</h3>\r\n                            {\r\n                                this.state[this.state.workMode].name.length <= 0 ?\r\n                                <span className = 'warning'>{this.state.warning.lengthMin}</span> : null\r\n                            }\r\n                            {\r\n                                this.state[this.state.workMode].name.length >= 20 ?\r\n                                <span className = 'warning'>{this.state.warning.lengthMax}</span> : null\r\n                            }\r\n                            <input\r\n                                className = {this.state[this.state.workMode].validateName ? 'ready' : 'wrong'}\r\n                                value = {this.state[this.state.workMode].name}\r\n                                onChange = {this.validateName}\r\n                                type = 'text'\r\n                                placeholder = \"Project name\"\r\n                            />\r\n                            {\r\n                                !this.state[this.state.workMode].validateType ?\r\n                                <span className = 'warning'>{this.state.warning.type}</span> : null\r\n                            }\r\n                            <select onChange = {this.selectOption} >\r\n                                <option value = 'empty'>--------</option>\r\n                                <option value = 'landing'>Landing</option>\r\n                                <option value = 'portfolio'>Portfolio</option>\r\n                            </select>\r\n                            <input \r\n                                onClick = {this.addNewProject}\r\n                                className = 'acceptButton'\r\n                                disabled = {this.state[this.state.workMode].disabled}\r\n                                type = 'button'\r\n                                value = 'Submit'\r\n                            />\r\n                            <input onClick = {this.cancel} type ='button' value = 'Cancel' />\r\n                        </div>\r\n                )\r\n            }\r\n            default: {\r\n                return (\r\n                    <Fragment></Fragment>\r\n                )\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default ModalWindow;","import React, {useState} from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\n\r\nfunction Item(props) {\r\n    const [id] = useState(props.id);\r\n    const build = (event) => props.history.push(`/Build/${id}`);\r\n    return (\r\n        <div onClick = {build} className = 'item' data-id = {id}>{props.name}</div>\r\n    )\r\n}\r\n\r\nexport default withRouter(Item);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './list.scss';\r\n\r\nimport Item from './Item';\r\nimport eventStream from '../../EventEmitter.js';\r\nconst projects = require('../../projects.json').projects;\r\n\r\nclass List extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        children: PropTypes.shape({\r\n            projects: PropTypes.array.isRequired,\r\n           count: PropTypes.number.isRequired,\r\n        })\r\n    }\r\n\r\n    state = {\r\n        list: [...projects],\r\n        listCount: projects.length\r\n\r\n    }\r\n    \r\n    addNewProject = (item) => {\r\n\r\n        let lastProject = [...this.state.list];\r\n        const lastIndex = lastProject[lastProject.length-1].id + 1;\r\n        lastProject.push({\"id\": lastIndex, \"title\": item.title});\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            list: lastProject,\r\n            listCount: lastProject.length\r\n        });\r\n    }\r\n\r\n    makeList = (list) => {\r\n\r\n        return list.map (project => {\r\n\r\n            return <Item key = {project.id} id = {project.id} name = {project.title} />\r\n        });\r\n    }\r\n\r\n    render(){\r\n        console.log('render');\r\n        return (\r\n            <div className = 'projectsList__list'>\r\n                {this.makeList([...this.state.list])}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    componentWillMount = () => {\r\n        eventStream.on('EventAddProject',this.addNewProject);\r\n      }\r\n    \r\n      componentWillUnmount = () => {\r\n        eventStream.off('EventAddProject',this.addNewProject);\r\n      }\r\n}\r\n\r\nexport default List;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nimport List from '../List/List.jsx';\r\n\r\nimport './ProjectsSection.scss';\r\n\r\nclass ProjectsSection extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        projects: PropTypes.array,\r\n    }\r\n\r\n    render(){\r\n\r\n        return (\r\n                <section className = 'projectsList'>\r\n                <div className = 'container'>\r\n                <div className = 'flex-column'>\r\n                        <div className = 'projectsList__about'>\r\n                            <h3>Your Projects</h3>\r\n                        </div>\r\n                        <List />\r\n                    </div>\r\n                </div>\r\n                </section>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default ProjectsSection;","import React,{Fragment} from 'react';\nimport PropTypes from 'prop-types';\n\nimport eventStream from '../../EventEmitter.js';\n\nimport Header from '../../components/header/Header';\nimport Modal from '../../components/modalWindow/ModalWindow';\nimport ProjectsSection from '../../components/ProjectsSection/ProjectsSection';\n\nimport './Cabinet.scss';\n\nconst title = require('../../config.json').title;\n\nclass Cabinet extends React.Component {\n\n  static propTypes = {\n    title: PropTypes.string,\n    mode: PropTypes.string,\n  }\n\n  state = {\n    workMode: 'default',\n  }\n\n  changeWorkMode = (event) => {\n    console.log(event.action);\n    this.setState ({\n      ...this.state,\n      workMode: event.action\n    });\n  }\n\n  render(){\n\n    return (\n      <Fragment>\n        <Header title = {title} />\n        {(this.state.workMode === 'newProject') ? <Modal workMode = {this.state.workMode} /> : null}\n          <ProjectsSection />\n      </Fragment>\n    )\n  }\n\n  componentDidMount(){\n    eventStream.on('EventChangeWorkMode', this.changeWorkMode);\n  }\n\n  componentWillUnmount(){\n    eventStream.off('EventChangeWorkMode', this.changeWorkMode);\n  }\n}\n\nexport default Cabinet;\n","import React, {Fragment} from 'react';\r\nimport Header from '../../components/header/Header';\r\n\r\nimport './about.scss';\r\n\r\nconst config = require('../../config.json');\r\n\r\nclass About extends React.Component {\r\n\r\n    render(){\r\n\r\n        return (\r\n            <Fragment>\r\n                <Header title = {config.title} />\r\n                <section className = 'About'>\r\n                    <div className = 'container'>\r\n                        <div className = 'col-12'>\r\n                            <div className = 'information'>\r\n                            <img alt = 'img' className = 'logoAbout' src = {process.env.PUBLIC_URL + '/img/about.jpg'}></img>\r\n                                <p className ='developer'><span>Developer:</span> {config.about.developer}</p>\r\n                                <p className = 'year'><span>Year:</span> {config.about.year}</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default About;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './instrumentsPanel.scss';\r\n\r\nclass InstrumentsPanel extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        id: PropTypes.string,\r\n        editComponent: PropTypes.object.isRequired\r\n    }\r\n\r\n    state = {\r\n        idProject: this.props.id,\r\n        acceptInstruments: this.props.editComponent.edit,\r\n    }\r\n\r\n    makePanelInstruments = () => {\r\n\r\n        return (\r\n            <div  className= 'instuments'>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div className = 'instumentsPanel'>\r\n                <h3>Instruments</h3>\r\n                {\r\n                    this.state.acceptInstruments ? \r\n                    <p className = 'titleComponent important'>{this.props.editComponent.name}</p>\r\n                    : null\r\n                }\r\n                {\r\n                    this.state.acceptInstruments ? this.makePanelInstruments() :\r\n                    <p className = 'warningInstruments'>Select elements for accses edit instruments</p>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n\r\n    componentDidUpdate = (oldProps, oldState) => {\r\n\r\n        if (oldProps.editComponent.edit !== this.props.editComponent.edit){\r\n            this.setState({\r\n                ...this.state,\r\n                acceptInstruments: this.props.editComponent.edit\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport default InstrumentsPanel;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './buildMenu.scss';\r\n\r\nclass BuildMenu extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        component: PropTypes.object\r\n    }\r\n\r\n    state = {\r\n        component: {...this.props.component}\r\n    }\r\n\r\n    render(){\r\n\r\n        return (\r\n            <div className = 'ComponentsMenu'>\r\n                <button className = 'ImageTool CompoentnsMenu_button' ><span>Image</span></button>\r\n                <button className = 'TextTool CompoentnsMenu_button' ><span>Text</span></button>\r\n                <button \r\n                    disabled = {this.state.component.name !== 'Header' ? false : true}\r\n                    className = 'ButtonTool CompoentnsMenu_button' >\r\n                    <span>Button</span>\r\n                </button>\r\n                <button className = 'VideoTool CompoentnsMenu_button' ><span>Video</span></button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default BuildMenu;","import React from 'react';\r\nimport eventEmitter from '../../../EventEmitter';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Icon from '../../Icon/icon';\r\nimport BuildMenu from '../../componentsBuildMenu/BuildMenu';\r\nimport './headerBuild.scss';\r\n\r\nclass HeaderBuild extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        id: PropTypes.string.isRequired,\r\n    }\r\n\r\n    state = {\r\n        idProject: this.props.id,\r\n        viewComponentMenu: false,\r\n        component: {...this.props.children}\r\n        }\r\n\r\n\r\n    changeMode = (event) => {\r\n        eventEmitter.emit('EventModeEdit', {...this.state})\r\n    }\r\n\r\n    componentMenu = (event) => {\r\n        this.setState({viewComponentMenu: this.state.viewComponentMenu ? false : true})\r\n    }\r\n\r\n    componentDidUpdate = (oldProps, oldState) => {\r\n\r\n        if (oldProps.children.edit !== this.props.children.edit){\r\n            this.setState({\r\n                ...this.state,\r\n                component: {...this.props.children}\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div onClick = {this.changeMode} className = 'Header'>\r\n                <h2 className = 'titleCompoentBuild'>Header</h2>\r\n                {\r\n                    this.state.component.edit ?\r\n                    <div className = 'ControllersEditComponent'>\r\n                        <Icon\r\n                            onClick = {this.componentMenu}\r\n                            className = 'addButton'\r\n                            path = '/img/addButton.png'\r\n                        />\r\n                        {\r\n                            this.state.viewComponentMenu ?\r\n                         <BuildMenu component = {{...this.state.component}} />\r\n                         : null\r\n                        }\r\n                    </div>\r\n                     :\r\n                    <p className = 'warningEdit'>Click for start edit</p>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default HeaderBuild;","import React,{Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport eventEmitter from '../../EventEmitter';\r\n\r\nimport Header from '../../components/header/Header';\r\nimport InstrumentsPanel from '../../components/instrumentsPanel/InstrumentsPanel';\r\n\r\nimport HeaderBuild from '../../components/buildComponents/header/headerBuild';\r\n\r\nimport './build.scss';\r\nconst config = require('../../config.json');\r\n\r\nclass Build extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        param: PropTypes.string,\r\n        match: PropTypes.shape({\r\n            params: PropTypes.shape({\r\n                param: PropTypes.string.isRequired\r\n            }).isRequired\r\n        }).isRequired\r\n    }\r\n\r\n    state = {\r\n        idProject: this.props.match.params.param,\r\n        editComponent: {\r\n            name: '',\r\n            edit: false\r\n        }\r\n    }\r\n\r\n    workModeEdit = (event) => {\r\n        this.setState({\r\n            ...this.state,\r\n            idProject: event.idProject,\r\n            editComponent: {...event.component, edit: true}\r\n        });\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <Fragment>\r\n                <Header title = {config.title} />\r\n                { this.state.editComponent.edit ?\r\n                    <InstrumentsPanel editComponent = {{...this.state.editComponent}} id = {this.state.idProject} />\r\n                    : null\r\n                }\r\n                <HeaderBuild id = {this.state.idProject}>\r\n                    {{...this.state.editComponent, name: 'Header'}}\r\n                </HeaderBuild>\r\n            </Fragment>\r\n        )\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        eventEmitter.on('EventModeEdit', this.workModeEdit);\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        eventEmitter.on('EventModeEdit', this.workModeEdit);\r\n    }\r\n}\r\n\r\nexport default Build;","import React from 'react';\r\nimport {BrowserRouter, Route, Switch} from 'react-router-dom';\r\n\r\nimport {createStore} from 'redux';\r\nimport {Provider} from 'react-redux';\r\nimport combineReducers from './redux/reducers';\r\n\r\n\r\nimport Cabinet from './Pages/Cabinet/Cabinet';\r\nimport About from './Pages/About/About';\r\nimport Build from './Pages/Build/Build';\r\n\r\nconst store = createStore(combineReducers,\r\n                window.__REDUX_DEVTOOLS_EXTENSION__ &&\r\n                 window.__REDUX_DEVTOOLS_EXTENSION__());\r\nfunction App(){\r\n\r\n    return (\r\n        <Provider store = {store}>\r\n        <BrowserRouter>\r\n                <Switch>\r\n                    <Route path = '/' exact component = {Cabinet}/>\r\n                    <Route path = '/About' component = {About}/>\r\n                    <Route path = '/Build/:param'  component = {Build}/>\r\n                </Switch>\r\n        </BrowserRouter>\r\n    </Provider>\r\n    )\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App.jsx';\nimport 'normalize.css';\n\nReactDOM.render(\n    <App />\n    , document.getElementById('root')\n);\n\n"],"sourceRoot":""}