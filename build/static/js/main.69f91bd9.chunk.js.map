{"version":3,"sources":["EventEmitter.js","redux/actions.js","redux/reducerBuilder.js","redux/reducerCabinet.js","redux/reducers.js","redux/store.js","components/loading/Loader.jsx","components/Firebase/Firebase.js","redux/middleware/loadUserMiddleware.js","components/Registration/Registration.jsx","Pages/Index/Index.jsx","components/Icon/icon.jsx","components/header/Header.jsx","components/modalWindow/ModalWindow.jsx","redux/middleware/createProjectMiddleware.js","components/List/Item.jsx","components/List/List.jsx","components/ProjectsSection/ProjectsSection.jsx","Pages/Cabinet/Cabinet.jsx","Pages/About/About.jsx","components/instrumentsPanel/InstrumentsPanel.jsx","components/componentsBuildMenu/BuildMenu.jsx","components/buildComponents/header/headerBuild.jsx","Pages/Build/Build.jsx","App.jsx","index.js"],"names":["stream","EventEmitter","loadCurrentProjectAction","state","type","currentEditable","loadUserAction","console","log","active","idUser","uid","projects","Object","toConsumableArray","errorAction","error","initialState","dateConnect","Date","now","toLocaleString","replace","split","combineReducers","builder","arguments","length","undefined","action","objectSpread","cabinet","middleware","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","thunk","store","createStore","Loader","props","_useState","useState","path","slicedToArray","react_default","a","createElement","className","src","alt","firebaseConfig","require","apiKey","authDomain","process","REACT_APP_AUTH_DOMAIN","databaseURL","REACT_APP_DATABASE_URL","projectId","storageBucket","REACT_APP_STORAGE_BUCKET","messagingSenderId","REACT_APP_MESSAGING_SENDER_ID","appId","REACT_APP_APPID","fireBase","Firebase","classCallCheck","this","firebase","initializeApp","auth","db","firestore","rules","setPersistence","Auth","Persistence","email","password","signInWithEmailAndPassword","createUserWithEmailAndPassword","signOut","currentUser","saveSession","onAuthStateChanged","user","eventStream","emit","session","redirect","middlewareLogin","_ref","asyncToGenerator","regenerator_default","mark","_callee","dispatch","wrap","_context","prev","next","login","then","response","collection","doc","get","docUser","data","id","catch","message","stop","_x","apply","middlewareLoadUserData","_ref2","_callee2","_context2","_x2","middlewareLogOutUser","_ref3","_callee3","_context3","_x3","Registration","_useState2","setError","ref","createRef","ref2","useEffect","current","focus","onClick","event","value","registration","set","Index","title","_this","config","registrationActive","regStatus","wrongEnter","statusRegistration","additionalUserInfo","isNewUser","setState","showBox","authTo","emailImput","passwordImput","emailRef","node","passwordRef","componentDidMount","e","on","componentWillUnmount","off","react_router","to","currentSelected","Registration_Registration","React","PureComponent","connect","Icon","_useState3","iconPath","CabinetIcon","Header","logOut","history","push","add","icon","react_router_dom","location","pathname","Component","withRouter","ModalWindow","workMode","newProject","validateName","validateType","disabled","name","warning","lengthMax","lengthMin","inputSelect","disabledButton","addNewProject","mode","selectOption","inputs","target","defineProperty","lengthInput","cancel","refSelect","onChange","placeholder","react","middlewareCreateProject","list","lastProject","lastIndex","components","update","_useState5","concat","data-id","List","item","makeList","map","project","List_Item","key","componentWillMount","ProjectsSection","components_List_List","Cabinet","getCurrentUser","changeWorkMode","header_Header","modalWindow_ModalWindow","components_ProjectsSection_ProjectsSection","About","about","developer","year","InstrumentsPanel","idProject","acceptInstruments","editComponent","edit","makePanelInstruments","componentDidUpdate","oldProps","oldState","BuildMenu","component","HeaderBuild","viewComponentMenu","children","changeMode","eventEmitter","componentMenu","componentsBuildMenu_BuildMenu","Build","match","params","param","workModeEdit","currentComponents","find","parseInt","instrumentsPanel_InstrumentsPanel","header_headerBuild","App","setSession","_useState4","setReditect","refresh","eo","es","exact","Pages_Index_Index","ReactDOM","render","src_App","document","getElementById"],"mappings":"+jBAEeA,EADA,UAAIC,8CCcbC,EAA2B,SAACC,GAC9B,MAAO,CACHC,KAhBa,eAiBbC,gBAAiBF,IAKnBG,EAAiB,SAACH,GAEpB,OADAI,QAAQC,IAAIL,GACL,CACHC,KAvBkB,oBAwBlBK,QAAQ,EACRC,OAAQP,EAAMQ,IACdC,SAASC,OAAAC,EAAA,EAAAD,CAAKV,EAAMS,YActBG,EAAc,SAACZ,GACjB,MAAO,CACHC,KAzCc,gBA0CdY,MAAOb,IC5CTc,EAAe,CACjBZ,gBAAiB,MCDfY,EAAe,CACjBR,QAAQ,EACRC,OAAQ,KACRE,SAAU,GACVI,MAAO,KACPE,YAAa,IAAIC,KAAKA,KAAKC,OAAOC,iBAAiBC,QAAQ,OAAO,IAAIC,MAAM,MCHjEC,cAAgB,CAC3BC,QFAW,WAAkC,IAAjCtB,EAAiCuB,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAzBT,EAAcY,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC7C,OAAQC,EAAOzB,MAMX,IDXa,eCYT,OAAOS,OAAAiB,EAAA,EAAAjB,CAAA,GACAV,EADP,CAEIE,gBAAgBQ,OAAAiB,EAAA,EAAAjB,CAAA,GAAKgB,EAAOxB,mBAGpC,QAAS,OAAOF,IEZpB4B,QDIW,WAAkC,IAAjC5B,EAAiCuB,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAzBT,EAAcY,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAE7C,OAAOC,EAAOzB,MACV,IFVkB,oBEYd,OAAOS,OAAAiB,EAAA,EAAAjB,CAAA,GACAV,EADP,CAEIM,OAAQoB,EAAOpB,OACfC,OAAQmB,EAAOnB,OACfE,SAAUiB,EAAOjB,WAIzB,IFvBe,iBEwBX,OAAOC,OAAAiB,EAAA,EAAAjB,CAAA,GACAV,EADP,CAEIS,SAAUiB,EAAOjB,WAIzB,IF5BgB,kBE6BZ,OAAOC,OAAAiB,EAAA,EAAAjB,CAAA,GACAV,EADP,CAEIM,QAAQ,EACRC,OAAQ,KACRE,SAAU,KAIlB,IFnCc,gBEoCV,OAAOC,OAAAiB,EAAA,EAAAjB,CAAA,GACAV,EADP,CAEIa,MAAOa,EAAOb,QAGtB,QAAS,OAAOb,MElClB6B,GANc,kBAAXC,QACPA,OAAOC,qCACLD,OAAOC,qCAAqC,IAEvCC,KAGPC,YAAgBC,MASHC,EANDC,YAAYf,EAAiBQ,GCb5BQ,EAAA,SAASC,GAAO,IAAAC,EACZC,mBAASF,EAAMG,MAAvBA,EADoB/B,OAAAgC,EAAA,EAAAhC,CAAA6B,EAAA,MAE3B,OACQI,EAAAC,EAAAC,cAAA,OAAKC,UAAY,aACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAY,SAASC,IAAON,EAAMO,IAAM,WAC7CL,EAAAC,EAAAC,cAAA,oBAAYP,EAAMrC,oFCA5BgD,GALOC,EAAQ,IACHA,EAAQ,IAIH,CACfC,OAAQ,0CACRC,WAAYC,+CAAYC,sBACxBC,YAAaF,+CAAYG,uBACzBC,UAAW,oBACXC,cAAeL,+CAAYM,yBAC3BC,kBAAmBP,+CAAYQ,8BAC/BC,MAAOT,+CAAYU,kBAkCvBC,EAAW,eA5BP,SAAAC,IAAcvD,OAAAwD,EAAA,EAAAxD,CAAAyD,KAAAF,GACNG,IAASC,cAAcpB,GACvBkB,KAAKG,KAAOF,IAASE,OACrBH,KAAKI,GAAKH,IAASI,oEAGfC,GACJ,OAAON,KAAKG,KAAKI,eAAeN,IAASE,KAAKK,KAAKC,YAAYH,kCAGjEI,EAAOC,GAEL,OADA1E,QAAQC,IAAI,SACL8D,KAAKG,KAAKS,2BAA2BF,EAAOC,wCAG9CD,EAAOC,GACZ,OAAOX,KAAKG,KAAKU,+BAA+BH,EAAOC,qCAIvD,OAAOX,KAAKG,KAAKW,mDAIjB,OAAOd,KAAKG,KAAKY,sBAKjClB,EAASmB,YAAY,WACrBnB,EAASM,KAAKc,mBAAmB,SAACC,GACtBA,EACHC,EAAYC,KAAK,eAAgB,CAACC,SAAS,IACrCF,EAAYC,KAAK,eAAgB,CAACC,SAAS,EAAOC,UAAU,MAG5DzB,QCrDT0B,EAAkB,SAACb,EAAMC,GAAP,sBAAAa,EAAAjF,OAAAkF,EAAA,EAAAlF,CAAAmF,EAAAjD,EAAAkD,KAAoB,SAAAC,EAAMC,GAAN,OAAAH,EAAAjD,EAAAqD,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACpChG,QAAQC,IAAI,mBADwB6F,EAAAE,KAAA,EAE9BhC,EAASiC,MAAMxB,EAAMC,GAC1BwB,KAAK,SAAAC,GACFnC,EAASG,GAAGiC,WAAW,SAASC,IAAIF,EAASlB,KAAK7E,KAAKkG,MACtDJ,KAAK,SAAAK,GACF,IAAItB,EAAOsB,EAAQC,OACnBZ,EAAS7F,EAAe,CAACK,IAAKmG,EAAQE,GAAIpG,SAASC,OAAAC,EAAA,EAAAD,CAAK2E,EAAK5E,iBAGpEqG,MAAM,SAACjG,GAAD,OAAWmF,EAASpF,EAAYC,EAAMkG,YAVT,wBAAAb,EAAAc,SAAAjB,MAApB,gBAAAkB,GAAA,OAAAtB,EAAAuB,MAAA/C,KAAA5C,YAAA,IAalB4F,EAAyB,SAAC3G,GAAD,sBAAA4G,EAAA1G,OAAAkF,EAAA,EAAAlF,CAAAmF,EAAAjD,EAAAkD,KAAS,SAAAuB,EAAMrB,GAAN,OAAAH,EAAAjD,EAAAqD,KAAA,SAAAqB,GAAA,cAAAA,EAAAnB,KAAAmB,EAAAlB,MAAA,cAAAkB,EAAAlB,KAAA,EAC1BhC,EAASG,GAAGiC,WAAW,SAASC,IAAIjG,GAAKkG,MAC9CJ,KAAK,SAAAK,GACF,IAAItB,EAAOsB,EAAQC,OACnBZ,EAAS7F,EAAe,CAACK,IAAKA,EAAKC,SAASC,OAAAC,EAAA,EAAAD,CAAK2E,EAAK5E,eAEzDqG,MAAM,SAAAjG,GAAK,OAAImF,EAASpF,EAAYC,EAAMkG,YANX,wBAAAO,EAAAN,SAAAK,MAAT,gBAAAE,GAAA,OAAAH,EAAAF,MAAA/C,KAAA5C,YAAA,IASzBiG,EAAuB,SAAChH,GAAD,sBAAAiH,EAAA/G,OAAAkF,EAAA,EAAAlF,CAAAmF,EAAAjD,EAAAkD,KAAS,SAAA4B,EAAM1B,GAAN,OAAAH,EAAAjD,EAAAqD,KAAA,SAAA0B,GAAA,cAAAA,EAAAxB,KAAAwB,EAAAvB,MAAA,cAAAuB,EAAAvB,KAAA,EAC5BhC,EAASa,UACdqB,KAAM,SAAAC,GACHnG,QAAQC,IAAIkG,GACZP,EPMG,CACH/F,KAlCgB,kBAmChBK,QAAQ,EACRC,OAAQ,KACRE,SAAU,OORbqG,MAAM,SAAAjG,GAAK,OAAImF,EAASpF,EAAYC,EAAMkG,YANT,wBAAAY,EAAAX,SAAAU,MAAT,gBAAAE,GAAA,OAAAH,EAAAP,MAAA/C,KAAA5C,YAAA,UC2CdsG,MA9Df,SAAsBvF,GAAM,IAAAC,EAECC,mBAAS,MAFVsF,EAAApH,OAAAgC,EAAA,EAAAhC,CAAA6B,EAAA,GAEjB1B,EAFiBiH,EAAA,GAEXC,EAFWD,EAAA,GAGlBE,EAAMC,sBACNC,EAAOD,sBAkCT,OA/BJE,oBAAU,WAENH,EAAII,QAAQC,QACZH,EAAKE,QAAQC,UA2BjBjI,QAAQC,IAAI,OAEJsC,EAAAC,EAAAC,cAAA,OAAKC,UAAY,mBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAY,oBACbH,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAY,WACXjC,EACE8B,EAAAC,EAAAC,cAAA,KAAGC,UAAY,SAASjC,GACtB,KAEN8B,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAA,SAAOmF,IAAOA,EAAK/H,KAAO,SAC1B0C,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,SAAOmF,IAAOE,EAAMjI,KAAO,aAC3B0C,EAAAC,EAAAC,cAAA,SAAOyF,QAtCR,SAACC,GAEhB,IAAM1D,EAAQmD,EAAII,QAAQI,MACpB1D,EAAWoD,EAAKE,QAAQI,MAE9BpE,EAASqE,aAAa5D,EAAOC,GAC5BwB,KAAK,SAAAC,GACFnC,EAASG,GAAGiC,WAAW,SAASC,IAAIF,EAASlB,KAAK7E,KAAKkI,IAAI,CACvDjI,SAAY,GACZoE,MAASA,IAEZyB,KAAM,SAAAC,GACHnG,QAAQC,IAAIkG,OAGnBD,KAAM,SAAAC,GACHjB,EAAYC,KAAK,2BAA4BgB,KAEhDO,MAAM,SAACjG,GACJT,QAAQC,IAAIQ,GAEZkH,EAASlH,EAAMkG,YAkBKjE,UAAY,cACZ7C,KAAO,SACPuI,MAAQ,qBC9ClCG,oNAMF3I,MAAQ,CACJ4I,MAAQC,EAAKvG,MAAMwG,OAAOF,OAAS,cACnCG,oBAAoB,EACpBC,WAAW,EACXC,YAAY,EACZpI,MAAO,MAGXqI,mBAAqB,SAACX,GAClBA,EAAMY,mBAAmBC,UACzBP,EAAKQ,SAAL3I,OAAAiB,EAAA,EAAAjB,CAAA,GAAkBmI,EAAK7I,MAAvB,CACgBgJ,WAAW,EACXD,oBAAoB,EACpBlI,MAAO,qBAErBT,QAAQC,IAAI,yBAGlBiJ,QAAU,SAACf,GACPM,EAAKQ,SAAL3I,OAAAiB,EAAA,EAAAjB,CAAA,GACOmI,EAAK7I,MADZ,CAEA+I,oBAAoBF,EAAK7I,MAAM+I,yBAInCQ,OAAS,SAAChB,GACFM,EAAKvG,MAAM0D,SAASN,EAAgBmD,EAAKW,WAAWhB,MAAOK,EAAKY,cAAcjB,WAEtFgB,WAAa,OACbC,cAAgB,OAChBC,SAAW,SAACC,GAAD,OAAUd,EAAKW,WAAaG,KACvCC,YAAc,SAACD,GAAD,OAAUd,EAAKY,cAAgBE,KA+C7CE,kBAAoB,SAACC,GACjBxE,EAAYyE,GAAG,2BAA4BlB,EAAKK,uBAEpDc,qBAAuB,SAACF,GACpBxE,EAAY2E,IAAI,2BAA4BpB,EAAKK,6FA9CjD,GAFA9I,QAAQC,IAAI,gBACZD,QAAQC,IAAI8D,KAAK7B,OACZ6B,KAAK7B,MAAMkD,QAsCT,OAAIrB,KAAK7B,MAAMkD,SAAWrB,KAAK7B,MAAMhC,OAAeqC,EAAAC,EAAAC,cAACqH,EAAA,EAAD,CAAUC,GAAK,aAC7DxH,EAAAC,EAAAC,cAACR,EAAD,CAAQI,KAAO,mBAAmBxC,KAAO,YAtClD,IAAImK,EAAkBjG,KAAKnE,MAAM+I,mBACjC,OACIpG,EAAAC,EAAAC,cAAA,OAAKC,UAAY,yBACTH,EAAAC,EAAAC,cAAA,UAAKsB,KAAKnE,MAAM4I,OAChBjG,EAAAC,EAAAC,cAAA,OAAKC,UAAY,YACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAY,aACbH,EAAAC,EAAAC,cAAA,0BAEIsB,KAAKnE,MAAMiJ,YAAc9E,KAAKnE,MAAMgJ,UACpCrG,EAAAC,EAAAC,cAAA,KAAGC,UAAY,SAASqB,KAAKnE,MAAMa,OACjC,KAEN8B,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAA,SAAOmF,IAAO7D,KAAKuF,SAAUzJ,KAAO,SACpC0C,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,SAAOmF,IAAO7D,KAAKyF,YAAa3J,KAAO,aACvC0C,EAAAC,EAAAC,cAAA,SACIyF,QAAWnE,KAAKoF,OAChBzG,UAAY,cACZ7C,KAAO,SACPuI,MAAQ,UACZ7F,EAAAC,EAAAC,cAAA,SACIyF,QAAWnE,KAAKmF,QAChBxG,UAAasH,EAAe,uBACtB,cACNnK,KAAO,SACPuI,MAAQ,mBAKhBrE,KAAKnE,MAAM+I,mBACXpG,EAAAC,EAAAC,cAACwH,EAAD,CAAc/F,KAAQH,KAAK7B,MAAMgC,OAC/B,aA5EVgG,IAAMC,gBAgGXC,cAJS,SAACxK,GACrB,MAAO,CAACM,OAAQN,EAAM4B,QAAQtB,SAGnBkK,CAAyB7B,SC/FzB8B,MAbf,SAAcnI,GAAM,IAAAC,EACDC,mBAASF,EAAMG,MAAvBA,EADS/B,OAAAgC,EAAA,EAAAhC,CAAA6B,EAAA,MAAAmI,EAEIlI,mBAASF,EAAMQ,UAAYR,EAAMQ,UAAY,MAA1DA,EAFSpC,OAAAgC,EAAA,EAAAhC,CAAAgK,EAAA,MAGhB,OACA/H,EAAAC,EAAAC,cAAA,OACIyF,QAAWhG,EAAMgG,QAAUhG,EAAMgG,QAAU,KAC3CxF,UAAaA,EACb8F,MAAStG,EAAMsG,MAAQtG,EAAMsG,MAAQ,KACrC7F,IAAON,EAAMO,IAAM,UCCrB2H,EAAWzH,EAAQ,IAAqB0H,YAExCC,6MAMF7K,MAAQ,KAIR8K,OAAS,SAAChB,GACN1J,QAAQC,IAAI,UACZiF,EAAYC,KAAK,cAAe,aAGpCE,SAAW,SAACqE,GACRjB,EAAKvG,MAAMyI,QAAQC,KAAK,qBAG5BC,IAAM,SAACnB,GACHxE,EAAYC,KAAK,sBAAsB,CAAC7D,OAAQ,wFAIhD,OACIiB,EAAAC,EAAAC,cAAA,cACIF,EAAAC,EAAAC,cAAA,OAAKC,UAAY,aACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAY,YACTH,EAAAC,EAAAC,cAAA,OAAKC,UAAY,uBACbH,EAAAC,EAAAC,cAACqI,EAAD,CAAMzI,KAAQkI,IACdhI,EAAAC,EAAAC,cAACsI,EAAA,EAAD,CAAShB,GAAK,YAAWxH,EAAAC,EAAAC,cAAA,UAAKsB,KAAK7B,MAAMsG,SAEX,aAAjCzE,KAAK7B,MAAM8I,SAASC,SACjB1I,EAAAC,EAAAC,cAAA,OAAKyF,QAAWnE,KAAK8G,IAAKnI,UAAY,iCAClCH,EAAAC,EAAAC,cAACqI,EAAD,CAAMzI,KAAO,mBAEf,KAEFE,EAAAC,EAAAC,cAAA,OAAMC,UAAY,aACdH,EAAAC,EAAAC,cAACqI,EAAD,CAAM5C,QAAWnE,KAAKsB,SAAUmD,MAAQ,QAAQnG,KAAO,wBACvDE,EAAAC,EAAAC,cAACqI,EAAD,CAAM5C,QAAWnE,KAAK2G,OAAQlC,MAAQ,SAASnG,KAAO,+BAxCrE6H,IAAMgB,WAiDZC,cAAWV,WCsEXW,oNAxHXxL,MAAQ,CACJyL,SAAU5C,EAAKvG,MAAMmJ,SAErBC,WAAY,CACRC,cAAc,EACdC,cAAc,EACdC,UAAU,EACVC,KAAM,GACN7L,KAAM,SAEV8L,QAAS,CACLC,UAAW,yBACXC,UAAW,uBACXhM,KAAM,6BAIdiM,YAAc,OAEdC,eAAiB,SAACzK,OAIlB0K,cAAgB,SAAC7D,GACb,IAAI8D,EAAOxD,EAAK7I,MAAM6I,EAAK7I,MAAMyL,UAC7BY,EAAKT,cAAiBS,EAAKV,eAC3BrG,EAAYC,KAAK,kBACjB,CACIqD,MAAOC,EAAK7I,MAAM6I,EAAK7I,MAAMyL,UAAUK,KACvC7L,KAAM4I,EAAK7I,MAAM6I,EAAK7I,MAAMyL,UAAUxL,OAG1CqF,EAAYC,KAAK,sBAAsB,CAAC7D,OAAQ,gBAIxD4K,aAAe,SAAC/D,GAEZ,IAAIgE,EAAM7L,OAAAiB,EAAA,EAAAjB,CAAA,GAAOmI,EAAK7I,MAAM6I,EAAK7I,MAAMyL,WACvCc,EAAOtM,KAAOsI,EAAMiE,OAAOhE,MAC3B+D,EAAOX,aAA+B,UAAhBW,EAAOtM,KAC7BsM,EAAOV,UAAWU,EAAOX,eAAgBW,EAAOZ,aAChD9C,EAAKQ,SAAL3I,OAAAiB,EAAA,EAAAjB,CAAA,GACOmI,EAAK7I,MADZU,OAAA+L,EAAA,EAAA/L,CAAA,GAEKmI,EAAK7I,MAAMyL,SAAWc,QAI/BZ,aAAe,SAACpD,GAEZ,IAAIgE,EAAM7L,OAAAiB,EAAA,EAAAjB,CAAA,GAAOmI,EAAK7I,MAAM6I,EAAK7I,MAAMyL,WACvCc,EAAOT,KAAOvD,EAAMiE,OAAOhE,MAC3B,IAAIkE,EAAcH,EAAOT,KAAKtK,OAC9B+K,EAAOZ,aAAee,EAAc,GAAKA,EAAc,GACvDH,EAAOV,UAAWU,EAAOX,eAAgBW,EAAOZ,aAEhD9C,EAAKQ,SAAL3I,OAAAiB,EAAA,EAAAjB,CAAA,GACOmI,EAAK7I,MADZU,OAAA+L,EAAA,EAAA/L,CAAA,GAEKmI,EAAK7I,MAAMyL,SAAWc,QAI/BI,OAAS,SAACpE,GACNjD,EAAYC,KAAK,sBAAsB,CAAC7D,OAAQ,eAGpDkL,UAAY,SAACjD,GAAD,OAAUd,EAAKqD,YAAcvC,2EAIrC,OAAQxF,KAAKnE,MAAMyL,UAEf,IAAK,aACD,OACQ9I,EAAAC,EAAAC,cAAA,OAAKC,UAAY,SACbH,EAAAC,EAAAC,cAAA,gCAEIsB,KAAKnE,MAAMmE,KAAKnE,MAAMyL,UAAUK,KAAKtK,QAAU,EAC/CmB,EAAAC,EAAAC,cAAA,QAAMC,UAAY,WAAWqB,KAAKnE,MAAM+L,QAAQE,WAAoB,KAGpE9H,KAAKnE,MAAMmE,KAAKnE,MAAMyL,UAAUK,KAAKtK,QAAU,GAC/CmB,EAAAC,EAAAC,cAAA,QAAMC,UAAY,WAAWqB,KAAKnE,MAAM+L,QAAQC,WAAoB,KAExErJ,EAAAC,EAAAC,cAAA,SACIC,UAAaqB,KAAKnE,MAAMmE,KAAKnE,MAAMyL,UAAUE,aAAe,QAAU,QACtEnD,MAASrE,KAAKnE,MAAMmE,KAAKnE,MAAMyL,UAAUK,KACzCe,SAAY1I,KAAKwH,aACjB1L,KAAO,OACP6M,YAAc,iBAGb3I,KAAKnE,MAAMmE,KAAKnE,MAAMyL,UAAUG,aAC8B,KAA/DjJ,EAAAC,EAAAC,cAAA,QAAMC,UAAY,WAAWqB,KAAKnE,MAAM+L,QAAQ9L,MAEpD0C,EAAAC,EAAAC,cAAA,UAAQgK,SAAY1I,KAAKmI,cACrB3J,EAAAC,EAAAC,cAAA,UAAQ2F,MAAQ,SAAhB,YACA7F,EAAAC,EAAAC,cAAA,UAAQ2F,MAAQ,WAAhB,WACA7F,EAAAC,EAAAC,cAAA,UAAQ2F,MAAQ,aAAhB,cAEJ7F,EAAAC,EAAAC,cAAA,SACIyF,QAAWnE,KAAKiI,cAChBtJ,UAAY,eACZ+I,SAAY1H,KAAKnE,MAAMmE,KAAKnE,MAAMyL,UAAUI,SAC5C5L,KAAO,SACPuI,MAAQ,WAEZ7F,EAAAC,EAAAC,cAAA,SAAOyF,QAAWnE,KAAKwI,OAAQ1M,KAAM,SAASuI,MAAQ,YAItE,QACI,OACI7F,EAAAC,EAAAC,cAACkK,EAAA,SAAD,cAvHMzC,IAAMC,gBCF1ByC,EAA0B,SAACxM,EAAKyM,EAAMrE,EAAO3I,GAAnB,sBAAA0F,EAAAjF,OAAAkF,EAAA,EAAAlF,CAAAmF,EAAAjD,EAAAkD,KAA4B,SAAAC,EAAMC,GAAN,IAAAkH,EAAAC,EAAA,OAAAtH,EAAAjD,EAAAqD,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACxDhG,QAAQC,IAAI,2BACR6M,EAFoDxM,OAAAC,EAAA,EAAAD,CAElCuM,GAChBE,EAAYD,EAAY1L,OAAU0L,EAAYA,EAAY1L,OAAO,GAAGqF,GAAK,EAAI,EACnFqG,EAAYlC,KAAK,CAACnE,GAAMsG,EAAWvE,MAASA,EAAO3I,KAAQA,EAAMmN,WAAY,KAJrBlH,EAAAE,KAAA,EAMlDhC,EAASG,GAAGiC,WAAW,SAASC,IAAIjG,GAAK6M,OAAO,CAClD5M,SAAYyM,IAEf5G,KAAM,kBAAMN,GbNYhG,EaMiBkN,EbL1C9M,QAAQC,IAAIL,GACL,CACHC,KAVe,iBAWfQ,SAASC,OAAAC,EAAA,EAAAD,CAAKV,MAJM,IAACA,IaOxB8G,MAAM,SAAAjG,GAAK,OAAImF,EAASpF,EAAYC,EAAMkG,YAVa,wBAAAb,EAAAc,SAAAjB,MAA5B,gBAAAkB,GAAA,OAAAtB,EAAAuB,MAAA/C,KAAA5C,YAAA,UCajBgK,kBAdf,SAAcjJ,GAAO,IAAAC,EACJC,mBAASF,EAAMuE,IAArBA,EADUnG,OAAAgC,EAAA,EAAAhC,CAAA6B,EAAA,MAAAmI,EAEFlI,mBAASF,EAAMwJ,MAAvBA,EAFUpL,OAAAgC,EAAA,EAAAhC,CAAAgK,EAAA,MAAA4C,EAGF9K,mBAASF,EAAMrC,MAAvBA,EAHUS,OAAAgC,EAAA,EAAAhC,CAAA4M,EAAA,MAMjB,OACI3K,EAAAC,EAAAC,cAAA,OAAKyF,QAFK,SAACC,GAAD,OAAWjG,EAAMyI,QAAQC,KAAd,kBAAAuC,OAAqC1G,KAEnC/D,UAAY,OAAO0K,UAAW3G,GACjDlE,EAAAC,EAAAC,cAAA,KAAGC,UAAY,eAAegJ,GAC9BnJ,EAAAC,EAAAC,cAAA,KAAGC,UAAY,eAAe7C,MCDpCwN,6MAUFzN,MAAQ,CACJyF,UAAU,KAGd2G,cAAgB,SAACsB,GACT7E,EAAKvG,MAAM/B,OACXsI,EAAKvG,MAAM0D,SAASgH,EAAwBnE,EAAKvG,MAAM/B,OAAQsI,EAAKvG,MAAM2K,KAAMS,EAAK9E,MAAO8E,EAAKzN,OAC9F4I,EAAKQ,SAAL3I,OAAAiB,EAAA,EAAAjB,CAAA,GAAkBmI,EAAK7I,MAAvB,CAA8ByF,UAAU,QAInDkI,SAAW,SAACV,GAER,OAAOA,EAAKW,IAAK,SAAAC,GAEb,OACIlL,EAAAC,EAAAC,cAACiL,EAAD,CACIC,IAAOF,EAAQhH,GACfA,GAAMgH,EAAQhH,GACdiF,KAAQ+B,EAAQjF,MAChB3I,KAAQ4N,EAAQ5N,YAkBhC+N,mBAAqB,kBACjB1I,EAAYyE,GAAG,kBAAkBlB,EAAKuD,kBAExCpC,qBAAuB,kBACrB1E,EAAY2E,IAAI,kBAAkBpB,EAAKuD,wFAbvC,OAFAhM,QAAQC,IAAI,eAER8D,KAAKnE,MAAMyF,SACJ9C,EAAAC,EAAAC,cAACqH,EAAA,EAAD,CAAUC,GAAK,MAEdxH,EAAAC,EAAAC,cAAA,OAAKC,UAAY,sBACZqB,KAAKwJ,SAALjN,OAAAC,EAAA,EAAAD,CAAkByD,KAAK7B,MAAM2K,eA3CnC3C,IAAMC,eAgEVC,cARS,SAACxK,GAErB,OADAI,QAAQC,IAAIL,GACL,CACHO,OAAQP,EAAM4B,QAAQrB,OACtB0M,KAAKvM,OAAAC,EAAA,EAAAD,CAAKV,EAAM4B,QAAQnB,YAIjB+J,CAAyBiD,GC5CzBQ,2LAhBP,OACQtL,EAAAC,EAAAC,cAAA,WAASC,UAAY,gBACrBH,EAAAC,EAAAC,cAAA,OAAKC,UAAY,aACjBH,EAAAC,EAAAC,cAAA,OAAKC,UAAY,eACTH,EAAAC,EAAAC,cAAA,OAAKC,UAAY,uBACbH,EAAAC,EAAAC,cAAA,4BAEJF,EAAAC,EAAAC,cAACqL,EAAD,gBAdM5D,IAAMC,gBCS9B3B,UAAQ1F,EAAQ,IAAqB0F,OAErCuF,8MAOJnO,MAAQ,CACNyL,SAAU,UACVX,QAAQ,EACRzF,KAAMjB,EAASgK,oBAGjBtD,OAAS,SAACvC,GACRnI,QAAQC,IAAIkI,GACZM,EAAKvG,MAAM0D,SAASwB,EAAqBqB,EAAKvG,MAAM/B,YAGtD8N,eAAiB,SAAC9F,GAChBM,EAAKQ,SAAL3I,OAAAiB,EAAA,EAAAjB,CAAA,GACKmI,EAAK7I,MADV,CAEEyL,SAAUlD,EAAM7G,aAkBpBmI,kBAAoB,WAClBzJ,QAAQC,IAAI,6BACRwI,EAAK7I,MAAMqF,OAASwD,EAAKvG,MAAM/B,SACjCH,QAAQC,IAAI,oBACdwI,EAAKvG,MAAM0D,SAASmB,EAAuB0B,EAAK7I,MAAMqF,KAAK7E,OAG3D8E,EAAYyE,GAAG,sBAAuBlB,EAAKwF,gBAC3C/I,EAAYyE,GAAG,cAAelB,EAAKiC,WAGrCd,qBAAuB,WACrB1E,EAAY2E,IAAI,sBAAuBpB,EAAKwF,gBAC5C/I,EAAY2E,IAAI,cAAepB,EAAKiC,iFA1BpC,OAAI3G,KAAK7B,MAAM/B,OAEXoC,EAAAC,EAAAC,cAACkK,EAAA,SAAD,KACEpK,EAAAC,EAAAC,cAACyL,EAAD,CAAQ1F,MAASA,KACS,eAAxBzE,KAAKnE,MAAMyL,SAA6B9I,EAAAC,EAAAC,cAAC0L,EAAD,CAAO9C,SAAYtH,KAAKnE,MAAMyL,WAAe,KACrF9I,EAAAC,EAAAC,cAAC2L,GAAD,OAGIrK,KAAKnE,MAAMqF,KACX1C,EAAAC,EAAAC,cAACR,EAAD,CAAQI,KAAO,mBAAmBxC,KAAO,YADjB0C,EAAAC,EAAAC,cAACqH,EAAA,EAAD,CAAUC,GAAK,aAlCjCG,IAAMC,eA8DbC,eANS,SAACxK,GACvB,MAAO,CAACO,OAAQP,EAAM4B,QAAQrB,OAAQE,SAASC,OAAAC,EAAA,EAAAD,CAAKV,EAAM4B,QAAQnB,YAKrD+J,CAAyB2D,ICzElCrF,UAAS5F,EAAQ,KAkCRuL,8MA9BXzO,MAAQ,CACJqF,KAAMjB,EAASgK,0FAKf,OADAhO,QAAQC,IAAI,gBACR8D,KAAKnE,MAAMqF,KAEP1C,EAAAC,EAAAC,cAACkK,EAAA,SAAD,KACIpK,EAAAC,EAAAC,cAACyL,EAAD,CAAQ1F,MAASE,GAAOF,QACxBjG,EAAAC,EAAAC,cAAA,WAASC,UAAY,SACjBH,EAAAC,EAAAC,cAAA,OAAKC,UAAY,aACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAY,UACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAY,eACjBH,EAAAC,EAAAC,cAAA,OAAKG,IAAM,MAAMF,UAAY,YAAYC,IAAOM,oBAC5CV,EAAAC,EAAAC,cAAA,KAAGC,UAAW,aAAYH,EAAAC,EAAAC,cAAA,0BAA1B,IAAmDiG,GAAO4F,MAAMC,WAChEhM,EAAAC,EAAAC,cAAA,KAAGC,UAAY,QAAOH,EAAAC,EAAAC,cAAA,qBAAtB,IAA0CiG,GAAO4F,MAAME,WAOrEjM,EAAAC,EAAAC,cAACqH,EAAA,EAAD,CAAUC,GAAK,aAzBjBG,IAAMgB,WC2CXuD,qNAzCX7O,MAAQ,CACJ8O,UAAWjG,EAAKvG,MAAMuE,GACtBkI,kBAAmBlG,EAAKvG,MAAM0M,cAAcC,QAGhDC,qBAAuB,WAEnB,OACIvM,EAAAC,EAAAC,cAAA,OAAMC,UAAW,kBAsBzBqM,mBAAqB,SAACC,EAAUC,GAExBD,EAASJ,cAAcC,OAASpG,EAAKvG,MAAM0M,cAAcC,MACzDpG,EAAKQ,SAAL3I,OAAAiB,EAAA,EAAAjB,CAAA,GACOmI,EAAK7I,MADZ,CAEI+O,kBAAmBlG,EAAKvG,MAAM0M,cAAcC,iFArBpD,OACItM,EAAAC,EAAAC,cAAA,OAAKC,UAAY,mBACbH,EAAAC,EAAAC,cAAA,yBAEIsB,KAAKnE,MAAM+O,kBACXpM,EAAAC,EAAAC,cAAA,KAAGC,UAAY,4BAA4BqB,KAAK7B,MAAM0M,cAAclD,MAClE,KAGF3H,KAAKnE,MAAM+O,kBAAoB5K,KAAK+K,uBACpCvM,EAAAC,EAAAC,cAAA,KAAGC,UAAY,sBAAf,uDA/BWwH,IAAMC,gBC2BtB+E,qNArBXtP,MAAQ,CACJuP,UAAU7O,OAAAiB,EAAA,EAAAjB,CAAA,GAAKmI,EAAKvG,MAAMiN,oFAK1B,OACI5M,EAAAC,EAAAC,cAAA,OAAKC,UAAY,kBACbH,EAAAC,EAAAC,cAAA,UAAQC,UAAY,mCAAmCH,EAAAC,EAAAC,cAAA,sBACvDF,EAAAC,EAAAC,cAAA,UAAQC,UAAY,kCAAkCH,EAAAC,EAAAC,cAAA,qBACtDF,EAAAC,EAAAC,cAAA,UACIgJ,SAA0C,WAA9B1H,KAAKnE,MAAMuP,UAAUzD,KACjChJ,UAAY,oCACZH,EAAAC,EAAAC,cAAA,uBAEJF,EAAAC,EAAAC,cAAA,UAAQC,UAAY,mCAAmCH,EAAAC,EAAAC,cAAA,8BArB/CyH,IAAMC,gBC4DfiF,qNAnDXxP,MAAQ,CACJ8O,UAAWjG,EAAKvG,MAAMuE,GACtB4I,mBAAmB,EACnBF,UAAU7O,OAAAiB,EAAA,EAAAjB,CAAA,GAAKmI,EAAKvG,MAAMoN,aAI9BC,WAAa,SAACpH,GACVqH,EAAarK,KAAK,gBAAlB7E,OAAAiB,EAAA,EAAAjB,CAAA,GAAuCmI,EAAK7I,WAGhD6P,cAAgB,SAACtH,GACbM,EAAKQ,SAAS,CAACoG,mBAAmB5G,EAAK7I,MAAMyP,uBAGjDN,mBAAqB,SAACC,EAAUC,GAExBD,EAASM,SAAST,OAASpG,EAAKvG,MAAMoN,SAAST,MAC/CpG,EAAKQ,SAAL3I,OAAAiB,EAAA,EAAAjB,CAAA,GACOmI,EAAK7I,MADZ,CAEIuP,UAAU7O,OAAAiB,EAAA,EAAAjB,CAAA,GAAKmI,EAAKvG,MAAMoN,sFAOlC,OACI/M,EAAAC,EAAAC,cAAA,OAAKyF,QAAWnE,KAAKwL,WAAY7M,UAAY,UACzCH,EAAAC,EAAAC,cAAA,MAAIC,UAAY,sBAAhB,UAEIqB,KAAKnE,MAAMuP,UAAUN,KACrBtM,EAAAC,EAAAC,cAAA,OAAKC,UAAY,4BACbH,EAAAC,EAAAC,cAACqI,EAAD,CACI5C,QAAWnE,KAAK0L,cAChB/M,UAAY,YACZL,KAAO,uBAGP0B,KAAKnE,MAAMyP,kBACd9M,EAAAC,EAAAC,cAACiN,GAAD,CAAWP,UAAS7O,OAAAiB,EAAA,EAAAjB,CAAA,GAAQyD,KAAKnE,MAAMuP,aACrC,MAIP5M,EAAAC,EAAAC,cAAA,KAAGC,UAAY,eAAf,gCAnDMwH,IAAMC,gBCO1BzB,UAAS5F,EAAQ,KAEjB6M,8MAWF/P,MAAQ,CACJ8O,UAAWjG,EAAKvG,MAAM0N,MAAMC,OAAOC,MACnCX,UAAW,GACXP,cAAe,CACXlD,KAAM,GACNmD,MAAM,MAIdkB,aAAe,SAAC5H,GACZM,EAAKQ,SAAL3I,OAAAiB,EAAA,EAAAjB,CAAA,GACOmI,EAAK7I,MADZ,CAEI8O,UAAWvG,EAAMuG,UACjBE,cAActO,OAAAiB,EAAA,EAAAjB,CAAA,GAAK6H,EAAMgH,UAAZ,CAAuBN,MAAM,UAuBlDpF,kBAAoB,WAChB+F,EAAa7F,GAAG,gBAAiBlB,EAAKsH,cAEtC,IAAIC,EAAoBvH,EAAKvG,MAAMuL,QAAQwC,KAAK,SAAA3C,GAC5C,OAAO4C,SAAS5C,EAAK7G,MAAQyJ,SAASzH,EAAK7I,MAAM8O,aAEjDsB,EACJvH,EAAKvG,MAAM0D,SAASjG,EAAyBW,OAAAiB,EAAA,EAAAjB,CAAA,GAAI0P,KAC5CvH,EAAKvG,MAAMyI,QAAQC,KAAK,QAGjChB,qBAAuB,WACnB4F,EAAa3F,IAAI,gBAAiBpB,EAAKsH,uFA9BvC,OACIxN,EAAAC,EAAAC,cAACkK,EAAA,SAAD,KACIpK,EAAAC,EAAAC,cAACyL,EAAD,CAAQ1F,MAASE,GAAOF,QACtBzE,KAAKnE,MAAMgP,cAAcC,KACvBtM,EAAAC,EAAAC,cAAC0N,GAAD,CACIvB,cAAkB7K,KAAK7B,MAAMpC,gBAAXQ,OAAAiB,EAAA,EAAAjB,CAAA,GAAiCyD,KAAK7B,MAAMpC,iBAA5CQ,OAAAiB,EAAA,EAAAjB,CAAA,GACdyD,KAAK7B,MAAM0M,eACfnI,GAAM1C,KAAKnE,MAAM8O,YAEnB,KAENnM,EAAAC,EAAAC,cAAC2N,GAAD,CAAa3J,GAAM1C,KAAKnE,MAAM8O,WAA9BpO,OAAAiB,EAAA,EAAAjB,CAAA,GACSyD,KAAKnE,MAAMgP,cADpB,CACmClD,KAAM,oBAzCrCxB,IAAMC,eAsEXC,eAPS,SAACxK,GACrB,OAAOU,OAAAiB,EAAA,EAAAjB,CAAA,GACAV,EAAMsB,QADb,CAEIpB,gBAAiBF,EAAMsB,QAAQpB,gBAAdQ,OAAAiB,EAAA,EAAAjB,CAAA,GAAoCV,EAAMsB,QAAQpB,iBAAmB,QAI/EsK,CAAyBe,YAAWwE,KCnCpCU,OApCf,SAAanO,GAAM,IAAAC,EAEaC,oBAAS,GAFtBsF,EAAApH,OAAAgC,EAAA,EAAAhC,CAAA6B,EAAA,GAEViD,EAFUsC,EAAA,GAED4I,EAFC5I,EAAA,GAAA4C,EAGelI,oBAAS,GAHxBmO,EAAAjQ,OAAAgC,EAAA,EAAAhC,CAAAgK,EAAA,GAGVjF,EAHUkL,EAAA,GAGAC,EAHAD,EAAA,GAKTE,EAAU,SAACtI,GACb,IAAIuI,EAAEpQ,OAAAiB,EAAA,EAAAjB,CAAA,GAAO6H,GACbmI,EAAWI,EAAGtL,SACdoL,EAAYE,EAAGrL,WASnB,OANA0C,oBAAU,WAEN,OADA7C,EAAYyE,GAAG,eAAgB8G,GACxB,kBAAMvL,EAAY2E,IAAI,eAAgB4G,KAC9C,IAGCrL,GAAWC,EAGX9C,EAAAC,EAAAC,cAACkO,EAAA,EAAD,CAAU5O,MAASA,GACnBQ,EAAAC,EAAAC,cAACsI,EAAA,EAAD,KACQxI,EAAAC,EAAAC,cAACqH,EAAA,EAAD,KACIvH,EAAAC,EAAAC,cAACqH,EAAA,EAAD,CAAOzH,KAAO,IAAIuO,OAAK,EAACzB,UACxB,kBAAM5M,EAAAC,EAAAC,cAACoO,EAAD,CAAOzL,QAAWA,EAASsD,OAAUxG,EAAMwG,YAEjDnG,EAAAC,EAAAC,cAACqH,EAAA,EAAD,CAAOzH,KAAO,WAAWuO,OAAK,EAACzB,UAAapB,KAC5CxL,EAAAC,EAAAC,cAACqH,EAAA,EAAD,CAAOzH,KAAO,iBAAiB8M,UAAad,KAC5C9L,EAAAC,EAAAC,cAACqH,EAAA,EAAD,CAAOzH,KAAO,wBAAwB8M,UAAaQ,QAKrDpN,EAAAC,EAAAC,cAACR,EAAD,CAAQI,KAAO,mBAAmBxC,KAAO,iBC3CrD6I,UAAS5F,EAAQ,KAGvBgO,IAASC,OACGxO,EAAAC,EAAAC,cAACuO,GAAD,CAAKtI,OAAUA,KACrBuI,SAASC,eAAe","file":"static/js/main.69f91bd9.chunk.js","sourcesContent":["import {EventEmitter} from 'events';\r\nconst stream = new EventEmitter();\r\nexport default stream;","const CREATE_PROJECT = 'CREATE_PROJECT';\r\nconst LOAD_CURRENT = 'LOAD_CURRENT';\r\nconst LOG_OUT_CABINET = 'LOG_OUT_CABINET';\r\nconst LOAD_USER_CABINET = 'LOAD_USER_CABINET';\r\nconst ERROR_CABINET = 'ERROR_CABINET';\r\n\r\n\r\nconst createProjectAction = (state) => {\r\n    console.log(state);\r\n    return {\r\n        type: CREATE_PROJECT,\r\n        projects: [...state],\r\n    }\r\n}\r\n\r\nconst loadCurrentProjectAction = (state) => {\r\n    return {\r\n        type: LOAD_CURRENT,\r\n        currentEditable: state,\r\n    }\r\n\r\n}\r\n\r\nconst loadUserAction = (state) => {\r\n    console.log(state);\r\n    return {\r\n        type: LOAD_USER_CABINET,\r\n        active: true,\r\n        idUser: state.uid,\r\n        projects: [...state.projects]\r\n    }\r\n}\r\n\r\nconst logOutAction = (state) => {\r\n\r\n    return {\r\n        type: LOG_OUT_CABINET,\r\n        active: false,\r\n        idUser: null,\r\n        projects: []\r\n    }\r\n}\r\n\r\nconst errorAction = (state) => {\r\n    return {\r\n        type: ERROR_CABINET,\r\n        error: state\r\n    }\r\n}\r\n\r\nexport {\r\n    CREATE_PROJECT, createProjectAction, /* cabinet */\r\n    LOAD_USER_CABINET, loadUserAction, /* cabinet */\r\n    LOG_OUT_CABINET, logOutAction, /* cabinet */\r\n    LOAD_CURRENT, loadCurrentProjectAction, /* builder */\r\n    ERROR_CABINET, errorAction, /* both */\r\n}","import {LOAD_CURRENT} from './actions';\r\n\r\nconst initialState = {\r\n    currentEditable: null,\r\n};\r\nexport default (state = initialState, action) => {\r\n    switch (action.type){\r\n        // case SAVE_CHANGES: {\r\n        //     return {\r\n        //         ...state,\r\n        //     }\r\n        // }\r\n        case LOAD_CURRENT: {\r\n            return {\r\n                ...state,\r\n                currentEditable: {...action.currentEditable}\r\n            }\r\n        }\r\n        default: return state;\r\n    }\r\n};","import {LOAD_USER_CABINET, LOG_OUT_CABINET, ERROR_CABINET, CREATE_PROJECT} from './actions';\r\n\r\nconst initialState = {\r\n    active: false,\r\n    idUser: null,\r\n    projects: [],\r\n    error: null,\r\n    dateConnect: new Date(Date.now()).toLocaleString().replace(/\\s/ig,'').split(','),\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n\r\n    switch(action.type) {\r\n        case LOAD_USER_CABINET: {\r\n\r\n            return {\r\n                ...state,\r\n                active: action.active,\r\n                idUser: action.idUser,\r\n                projects: action.projects\r\n            }\r\n        }\r\n\r\n        case CREATE_PROJECT: {\r\n            return {\r\n                ...state,\r\n                projects: action.projects\r\n            }\r\n        }\r\n\r\n        case LOG_OUT_CABINET: {\r\n            return {\r\n                ...state,\r\n                active: false,\r\n                idUser: null,\r\n                projects: []\r\n            }\r\n        }\r\n\r\n        case ERROR_CABINET: {\r\n            return {\r\n                ...state,\r\n                error: action.error\r\n            }\r\n        }\r\n        default: return state;\r\n    }\r\n}\r\n\r\n","import {combineReducers} from 'redux';\r\nimport reducerBuilder from './reducerBuilder';\r\nimport reducerCabinet from './reducerCabinet';\r\n\r\nexport default combineReducers({\r\n    builder: reducerBuilder,\r\n    cabinet: reducerCabinet,\r\n});","import {createStore, applyMiddleware, compose} from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport combineReducers from './reducers';\r\n\r\nconst composeEnhancers =\r\n  typeof window === 'object' &&\r\n  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?\r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\r\n      // Specify extension’s options like name, actionsBlacklist, actionsCreators, serialize...\r\n    }) : compose;\r\n\r\nconst middleware = composeEnhancers(\r\n  applyMiddleware(thunk)\r\n  // other store enhancers if any\r\n);\r\nconst store = createStore(combineReducers, middleware);\r\n\r\n// store.subscribe(() => {\r\n//     console.log(store.getState());\r\n//   });\r\n\r\nexport default store;","import React,{useState} from 'react';\r\n\r\nexport default function(props) {\r\n    const [path] = useState(props.path);\r\n    return (\r\n            <div className = 'loaderBox'>\r\n                <img className = 'loader' src = {path} alt = 'loader'></img> \r\n                <p>Loading {props.type}</p>\r\n            </div>\r\n    )\r\n}","import firebase from '@firebase/app';\r\nimport eventStream from '../../EventEmitter';\r\nconst auth = require('firebase/auth');\r\nconst firestore = require('firebase/firestore');\r\n\r\n\r\n// setings in root folder / firebase.env\r\nconst firebaseConfig = {\r\n        apiKey: \"AIzaSyBrLv9RyGWXCeEETRqBbBo3EVOcibmnJwU\",\r\n        authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n        databaseURL: process.env.REACT_APP_DATABASE_URL,\r\n        projectId: \"constructor-acb61\",\r\n        storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n        messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n        appId: process.env.REACT_APP_APPID\r\n};\r\n\r\n\r\n\r\nclass Firebase {\r\n        constructor(){\r\n                firebase.initializeApp(firebaseConfig);\r\n                this.auth = firebase.auth();\r\n                this.db = firebase.firestore();\r\n        }\r\n\r\n        saveSession(rules){\r\n                return this.auth.setPersistence(firebase.auth.Auth.Persistence[rules]);\r\n        }\r\n\r\n        login(email, password){\r\n                console.log('login');\r\n                return this.auth.signInWithEmailAndPassword(email, password);\r\n        }\r\n\r\n        registration(email, password){\r\n                return this.auth.createUserWithEmailAndPassword(email, password)\r\n        }\r\n\r\n        signOut(){\r\n                return this.auth.signOut()\r\n        }\r\n\r\n        getCurrentUser() {\r\n                return this.auth.currentUser\r\n        }\r\n}\r\n\r\nlet fireBase = new Firebase();\r\nfireBase.saveSession('SESSION');\r\nfireBase.auth.onAuthStateChanged((user) => {\r\n        if (user) {\r\n         eventStream.emit('EventRefresh', {session: true});\r\n        } else eventStream.emit('EventRefresh', {session: false, redirect: true});\r\n      });\r\n\r\nexport default fireBase;\r\n\r\nexport { auth, firestore };\r\n\r\n","import firebase from '../../components/Firebase/Firebase';\r\nimport {loadUserAction, errorAction, logOutAction} from '../actions';\r\n\r\nconst middlewareLogin = (email,password) => async dispatch => {\r\n        console.log('middlewareLogin');\r\n        await firebase.login(email,password)\r\n        .then(response =>{\r\n            firebase.db.collection(\"users\").doc(response.user.uid).get()\r\n            .then(docUser => {\r\n                let user = docUser.data();\r\n                dispatch(loadUserAction({uid: docUser.id, projects: [...user.projects]}))\r\n            })\r\n        })\r\n        .catch((error) => dispatch(errorAction(error.message)));\r\n    }\r\n\r\nconst middlewareLoadUserData = (uid) => async dispatch => {\r\n        await firebase.db.collection(\"users\").doc(uid).get()\r\n        .then(docUser => {\r\n            let user = docUser.data();\r\n            dispatch(loadUserAction({uid: uid, projects: [...user.projects]}))\r\n        })\r\n        .catch(error => dispatch(errorAction(error.message)));\r\n    }\r\n\r\nconst middlewareLogOutUser = (uid) => async dispatch => {\r\n    await firebase.signOut()\r\n    .then (response => {\r\n        console.log(response);\r\n        dispatch(logOutAction());\r\n    })\r\n    .catch(error => dispatch(errorAction(error.message)));\r\n}\r\nexport {\r\n    middlewareLogin,middlewareLoadUserData, middlewareLogOutUser\r\n}","import React, {createRef, useEffect, useState} from 'react';\r\nimport eventStream from '../../EventEmitter';\r\nimport './registration.scss';\r\n\r\nimport firebase from '../../components/Firebase/Firebase.js';\r\n\r\nfunction Registration(props){\r\n\r\n    const [error,setError] = useState(null);\r\n    const ref = createRef();\r\n    const ref2 = createRef();\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        ref.current.focus();\r\n        ref2.current.focus();\r\n    });\r\n\r\n    const createUser = (event) => {\r\n\r\n        const email = ref.current.value;\r\n        const password = ref2.current.value;\r\n\r\n        firebase.registration(email, password)\r\n        .then(response => {\r\n            firebase.db.collection(\"users\").doc(response.user.uid).set({\r\n                'projects': [],\r\n                'email': email,\r\n            })\r\n            .then (response => {\r\n                console.log(response);\r\n            });\r\n        })\r\n        .then (response => {\r\n            eventStream.emit('EventRegistrationCorrect', response);\r\n        })\r\n        .catch((error) => {\r\n            console.log(error);\r\n\r\n            setError(error.message);\r\n          });\r\n    };\r\n    console.log('reg');\r\n        return (\r\n            <div className = 'RegistrationBox'>\r\n                <div className = 'RegistrationForm'>\r\n                    <h3>Registration</h3>\r\n                    <div className = 'RegForm'>\r\n                        { error ?\r\n                            <p className = 'error'>{error}</p>\r\n                            : null\r\n                        }\r\n                        <p>E-mail</p>\r\n                        <input ref = {ref} type = 'text' />\r\n                        <p>Password</p>\r\n                        <input ref = {ref2} type = 'password' />\r\n                        <input onClick = {createUser}\r\n                                className = 'loginButton'\r\n                                type = 'button'\r\n                                value = 'registration'\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n}\r\n\r\nexport default Registration;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport eventStream from '../../EventEmitter';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nimport {middlewareLogin} from '../../redux/middleware/loadUserMiddleware';\r\n\r\nimport Loader from '../../components/loading/Loader';\r\nimport Registration from '../../components/Registration/Registration';\r\n\r\nimport {connect} from 'react-redux';\r\n\r\nimport './index.scss';\r\n\r\nclass Index extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        config: PropTypes.object\r\n    }\r\n\r\n    state = {\r\n        title:  this.props.config.title || \"Constructor\",\r\n        registrationActive: false,\r\n        regStatus: false,\r\n        wrongEnter: false,\r\n        error: ''\r\n    }\r\n\r\n    statusRegistration = (event) => {\r\n        event.additionalUserInfo.isNewUser ?\r\n        this.setState({...this.state,\r\n                        regStatus: true,\r\n                        registrationActive: false,\r\n                        error: 'Account create!'\r\n                    })\r\n        : console.log('error registration');\r\n    }\r\n\r\n    showBox = (event) => {\r\n        this.setState ({\r\n            ...this.state,\r\n        registrationActive: this.state.registrationActive ? false : true\r\n        })\r\n    }\r\n\r\n    authTo = (event) => {\r\n            this.props.dispatch(middlewareLogin(this.emailImput.value, this.passwordImput.value));\r\n}\r\n    emailImput = null;\r\n    passwordImput = null;\r\n    emailRef = (node) => this.emailImput = node;\r\n    passwordRef = (node) => this.passwordImput = node;\r\n\r\n    render(){\r\n        console.log('index render');\r\n        console.log(this.props);\r\n        if (!this.props.session) {\r\n            let currentSelected = this.state.registrationActive;\r\n            return (\r\n                <div className = 'LoginPage flex-column'>\r\n                        <h1>{this.state.title}</h1>\r\n                        <div className = 'LoginBox'>\r\n                            <div className = 'LoginForm'>\r\n                                <h3>Connect form</h3>\r\n                                {\r\n                                    this.state.wrongEnter || this.state.regStatus ?\r\n                                    <p className = 'error'>{this.state.error}</p>\r\n                                    : null\r\n                                }\r\n                                <p>E-mail</p>\r\n                                <input ref = {this.emailRef} type = 'text' />\r\n                                <p>Password</p>\r\n                                <input ref = {this.passwordRef} type = 'password' />\r\n                                <input \r\n                                    onClick = {this.authTo} \r\n                                    className = 'loginButton' \r\n                                    type = 'button' \r\n                                    value = 'enter' />\r\n                                <input\r\n                                    onClick = {this.showBox}\r\n                                    className = {currentSelected ? `loginButton selected` \r\n                                        : 'loginButton'}\r\n                                    type = 'button'\r\n                                    value = 'registration'\r\n                                    />\r\n                            </div>\r\n                        </div>\r\n                        {\r\n                            this.state.registrationActive ?\r\n                            <Registration auth = {this.props.auth} />\r\n                            : null\r\n                        }\r\n                </div>\r\n            )\r\n        } else if (this.props.session || this.props.active) return <Redirect to = '/Cabinet' />\r\n        else  return <Loader path = '/img/loading.gif' type = 'session' />\r\n    }\r\n\r\n    componentDidMount = (e) => {\r\n        eventStream.on('EventRegistrationCorrect', this.statusRegistration);\r\n    }\r\n    componentWillUnmount = (e) => {\r\n        eventStream.off('EventRegistrationCorrect', this.statusRegistration);\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {active: state.cabinet.active}\r\n  }\r\n\r\nexport default connect(mapStateToProps)(Index);","import React, {useState} from 'react';\r\n\r\nfunction Icon(props){\r\n    const [path] = useState(props.path);\r\n    const [className] = useState(props.className ? props.className : null);\r\n    return (\r\n    <img\r\n        onClick = {props.onClick ? props.onClick : null}\r\n        className = {className}\r\n        title = {props.title ? props.title : null}\r\n        src = {path} alt = 'icon'>\r\n    </img>\r\n    )\r\n}\r\n\r\nexport default Icon;","import React from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport './header.scss';\r\n\r\nimport {withRouter, NavLink} from 'react-router-dom';\r\n\r\nimport eventStream from '../../EventEmitter.js';\r\nimport Icon from '../Icon/icon';\r\n\r\n\r\nconst iconPath = require('../../config.json').CabinetIcon;\r\n\r\nclass Header extends React.Component {\r\n\r\n    static propTypes = {\r\n        title: PropTypes.string.isRequired,\r\n    }\r\n\r\n    state = {\r\n\r\n    }\r\n\r\n    logOut = (e) => {\r\n        console.log('logOut');\r\n        eventStream.emit('EventLogOut', 'logOut');\r\n    }\r\n\r\n    redirect = (e) => {\r\n        this.props.history.push('/Cabinet/About');\r\n    }\r\n\r\n    add = (e) => {\r\n        eventStream.emit('EventChangeWorkMode',{action: 'newProject'});\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <header>\r\n                <div className = 'container'>\r\n                    <div className = 'flex-row'>\r\n                            <div className = 'header__CabinetInfo'>\r\n                                <Icon path = {iconPath} />\r\n                                <NavLink to = '/Cabinet'><h3>{this.props.title}</h3></NavLink>\r\n                            </div>\r\n                            {this.props.location.pathname === '/Cabinet' ?\r\n                                <div onClick = {this.add} className = 'header__newProject__AddButton'>\r\n                                    <Icon path = '/img/plus.png' />\r\n                                </div>\r\n                                : null\r\n                            }\r\n                                <div  className = 'Navigator'>\r\n                                    <Icon onClick = {this.redirect} title = 'about' path = '/img/about_logo.svg' />\r\n                                    <Icon onClick = {this.logOut} title = 'logOut' path = '/img/logOut.svg' />\r\n                                </div>\r\n                    </div>\r\n               </div>\r\n            </header>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(Header);","import React,{Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport eventStream from '../../EventEmitter.js';\r\n\r\nimport './modal.scss';\r\n\r\nclass ModalWindow extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        mode: PropTypes.string\r\n    }\r\n\r\n    state = {\r\n        workMode: this.props.workMode,\r\n\r\n        newProject: {\r\n            validateName: false,\r\n            validateType: false,\r\n            disabled: true,\r\n            name: '',\r\n            type: 'empty'\r\n        },\r\n        warning: {\r\n            lengthMax: 'Max length: 20 symbols',\r\n            lengthMin: 'Min length: 3 symbol',\r\n            type: 'Select type of webpage',\r\n        }\r\n    }\r\n\r\n    inputSelect = null;\r\n\r\n    disabledButton = (action) => {\r\n\r\n    }\r\n\r\n    addNewProject = (event) => {\r\n        let mode = this.state[this.state.workMode];\r\n        if (mode.validateType &&  mode.validateName) {\r\n            eventStream.emit('EventAddProject',\r\n            {\r\n                title: this.state[this.state.workMode].name,\r\n                type: this.state[this.state.workMode].type\r\n            });\r\n\r\n            eventStream.emit('EventChangeWorkMode',{action: 'default'});\r\n        }\r\n    }\r\n\r\n    selectOption = (event) => {\r\n\r\n        let inputs = {...this.state[this.state.workMode]};\r\n        inputs.type = event.target.value;\r\n        inputs.validateType = inputs.type !== 'empty';\r\n        inputs.disabled = inputs.validateType && inputs.validateName ? false : true;\r\n        this.setState({\r\n            ...this.state,\r\n            [this.state.workMode]: inputs\r\n        });\r\n    }\r\n\r\n    validateName = (event) => {\r\n\r\n        let inputs = {...this.state[this.state.workMode]};\r\n        inputs.name = event.target.value;\r\n        let lengthInput = inputs.name.length;\r\n        inputs.validateName = lengthInput > 0 && lengthInput < 20 ? true : false;\r\n        inputs.disabled = inputs.validateType && inputs.validateName ? false : true;\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            [this.state.workMode]: inputs\r\n        })\r\n    };\r\n\r\n    cancel = (event) => {\r\n        eventStream.emit('EventChangeWorkMode',{action: 'default'});\r\n    }\r\n\r\n    refSelect = (node) => this.inputSelect = node;\r\n\r\n    render(){\r\n\r\n        switch (this.state.workMode){\r\n\r\n            case 'newProject': {\r\n                return (\r\n                        <div className = 'Modal'>\r\n                            <h3>Create new Project</h3>\r\n                            {\r\n                                this.state[this.state.workMode].name.length <= 0 ?\r\n                                <span className = 'warning'>{this.state.warning.lengthMin}</span> : null\r\n                            }\r\n                            {\r\n                                this.state[this.state.workMode].name.length >= 20 ?\r\n                                <span className = 'warning'>{this.state.warning.lengthMax}</span> : null\r\n                            }\r\n                            <input\r\n                                className = {this.state[this.state.workMode].validateName ? 'ready' : 'wrong'}\r\n                                value = {this.state[this.state.workMode].name}\r\n                                onChange = {this.validateName}\r\n                                type = 'text'\r\n                                placeholder = \"Project name\"\r\n                            />\r\n                            {\r\n                                !this.state[this.state.workMode].validateType ?\r\n                                <span className = 'warning'>{this.state.warning.type}</span> : null\r\n                            }\r\n                            <select onChange = {this.selectOption} >\r\n                                <option value = 'empty'>--------</option>\r\n                                <option value = 'landing'>Landing</option>\r\n                                <option value = 'portfolio'>Portfolio</option>\r\n                            </select>\r\n                            <input \r\n                                onClick = {this.addNewProject}\r\n                                className = 'acceptButton'\r\n                                disabled = {this.state[this.state.workMode].disabled}\r\n                                type = 'button'\r\n                                value = 'Submit'\r\n                            />\r\n                            <input onClick = {this.cancel} type ='button' value = 'Cancel' />\r\n                        </div>\r\n                )\r\n            }\r\n            default: {\r\n                return (\r\n                    <Fragment></Fragment>\r\n                )\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default ModalWindow;","import firebase from '../../components/Firebase/Firebase';\r\nimport {createProjectAction, errorAction} from '../actions';\r\n\r\n\r\nconst middlewareCreateProject = (uid, list, title, type) => async dispatch => {\r\n    console.log('middlewareCreateProject');\r\n    let lastProject = [...list];\r\n    const lastIndex = lastProject.length  ? lastProject[lastProject.length-1].id + 1 : 0;\r\n    lastProject.push({\"id\": lastIndex, \"title\": title, \"type\": type, components: {}});\r\n\r\n    await firebase.db.collection(\"users\").doc(uid).update({\r\n        'projects': lastProject,\r\n    })\r\n    .then (() => dispatch(createProjectAction(lastProject)))\r\n    .catch(error => dispatch(errorAction(error.message)));\r\n};\r\n\r\nexport {\r\n    middlewareCreateProject\r\n}","import React, {useState} from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\n\r\nfunction Item(props) {\r\n    const [id] = useState(props.id);\r\n    const [name] = useState(props.name);\r\n    const [type] = useState(props.type);\r\n\r\n    const build = (event) => props.history.push(`/Cabinet/Build/${id}`);\r\n    return (\r\n        <div onClick = {build} className = 'item' data-id = {id}>\r\n            <p className = 'ProjectName'>{name}</p>\r\n            <p className = 'ProjectType'>{type}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(Item);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport {middlewareCreateProject} from '../../redux/middleware/createProjectMiddleware';\r\n\r\nimport './list.scss';\r\n\r\nimport Item from './Item';\r\nimport eventStream from '../../EventEmitter.js';\r\n\r\nclass List extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        children: PropTypes.shape({\r\n            projects: PropTypes.array.isRequired,\r\n           count: PropTypes.number.isRequired,\r\n        }),\r\n        list: PropTypes.array.isRequired,\r\n    }\r\n\r\n    state = {\r\n        redirect: false,\r\n    }\r\n\r\n    addNewProject = (item) => {\r\n        if (this.props.idUser) {\r\n            this.props.dispatch(middlewareCreateProject(this.props.idUser, this.props.list, item.title, item.type));\r\n        } else this.setState({...this.state, redirect: true});\r\n    }\r\n\r\n\r\n    makeList = (list) => {\r\n\r\n        return list.map (project => {\r\n\r\n            return(\r\n                <Item\r\n                    key = {project.id}\r\n                    id = {project.id}\r\n                    name = {project.title}\r\n                    type = {project.type}\r\n                />\r\n            )\r\n        });\r\n    }\r\n\r\n    render(){\r\n        console.log('render list');\r\n\r\n        if (this.state.redirect)\r\n            return <Redirect to = '/' />\r\n            else return (\r\n                    <div className = 'projectsList__list'>\r\n                        {this.makeList([...this.props.list])}\r\n                    </div>\r\n                )\r\n    }\r\n\r\n    componentWillMount = () =>\r\n        eventStream.on('EventAddProject',this.addNewProject);\r\n\r\n      componentWillUnmount = () =>\r\n        eventStream.off('EventAddProject',this.addNewProject);\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    console.log(state);\r\n    return {\r\n        idUser: state.cabinet.idUser,\r\n        list: [...state.cabinet.projects]\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(List);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nimport List from '../List/List.jsx';\r\n\r\nimport './ProjectsSection.scss';\r\n\r\nclass ProjectsSection extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        projects: PropTypes.array,\r\n    }\r\n\r\n    render(){\r\n        return (\r\n                <section className = 'projectsList'>\r\n                <div className = 'container'>\r\n                <div className = 'flex-column'>\r\n                        <div className = 'projectsList__about'>\r\n                            <h3>Your Projects</h3>\r\n                        </div>\r\n                        <List />\r\n                    </div>\r\n                </div>\r\n                </section>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default ProjectsSection;","import React,{Fragment} from 'react';\nimport PropTypes from 'prop-types';\nimport eventStream from '../../EventEmitter.js';\nimport {Redirect} from 'react-router-dom';\n\nimport {middlewareLoadUserData, middlewareLogOutUser} from '../../redux/middleware/loadUserMiddleware';\nimport Loader from '../../components/loading/Loader';\nimport {connect} from 'react-redux';\n\nimport firebase from '../../components/Firebase/Firebase.js';\n\nimport Header from '../../components/header/Header';\nimport Modal from '../../components/modalWindow/ModalWindow';\nimport ProjectsSection from '../../components/ProjectsSection/ProjectsSection';\n\nimport './Cabinet.scss';\n\nconst title = require('../../config.json').title;\n\nclass Cabinet extends React.PureComponent {\n\n  static propTypes = {\n    title: PropTypes.string,\n    mode: PropTypes.string,\n  }\n\n  state = {\n    workMode: 'default',\n    logOut: false,\n    user: firebase.getCurrentUser()\n  }\n\n  logOut = (event) => {\n    console.log(event);\n    this.props.dispatch(middlewareLogOutUser(this.props.idUser));\n  }\n\n  changeWorkMode = (event) => {\n    this.setState ({\n      ...this.state,\n      workMode: event.action,\n    });\n  }\n\n  render(){\n    if (this.props.idUser){\n      return (\n        <Fragment>\n          <Header title = {title} />\n          {(this.state.workMode === 'newProject') ? <Modal workMode = {this.state.workMode} /> : null}\n            <ProjectsSection />\n        </Fragment>\n      )\n    } else if (!this.state.user) return <Redirect to = '/' />\n    else return <Loader path = '/img/loading.gif' type = 'Cabinet' />\n    }\n\n\n  componentDidMount = () => {\n    console.log('Cabinet componentDidMount');\n    if (this.state.user && !this.props.idUser) {\n      console.log('Cabinet dispatch');\n    this.props.dispatch(middlewareLoadUserData(this.state.user.uid));\n    }\n\n    eventStream.on('EventChangeWorkMode', this.changeWorkMode);\n    eventStream.on('EventLogOut', this.logOut);\n  }\n\n  componentWillUnmount = () => {\n    eventStream.off('EventChangeWorkMode', this.changeWorkMode);\n    eventStream.off('EventLogOut', this.logOut);\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {idUser: state.cabinet.idUser, projects: [...state.cabinet.projects]}\n}\n\n\n\nexport default connect(mapStateToProps)(Cabinet);\n","import React, {Fragment} from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nimport Header from '../../components/header/Header';\r\n\r\nimport firebase from '../../components/Firebase/Firebase.js';\r\nimport './about.scss';\r\n\r\nconst config = require('../../config.json');\r\n\r\nclass About extends React.Component {\r\n\r\n    state = {\r\n        user: firebase.getCurrentUser()\r\n    }\r\n\r\n    render(){\r\n        console.log('About render');\r\n        if (this.state.user) {\r\n            return (\r\n                <Fragment>\r\n                    <Header title = {config.title} />\r\n                    <section className = 'About'>\r\n                        <div className = 'container'>\r\n                            <div className = 'col-12'>\r\n                                <div className = 'information'>\r\n                                <img alt = 'img' className = 'logoAbout' src = {process.env.PUBLIC_URL + '/img/about.jpg'}></img>\r\n                                    <p className ='developer'><span>Developer:</span> {config.about.developer}</p>\r\n                                    <p className = 'year'><span>Year:</span> {config.about.year}</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </section>\r\n                </Fragment>\r\n            )\r\n        } else return <Redirect to = '/' />\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default About;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './instrumentsPanel.scss';\r\n\r\nclass InstrumentsPanel extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        id: PropTypes.string,\r\n        editComponent: PropTypes.object.isRequired\r\n    }\r\n\r\n    state = {\r\n        idProject: this.props.id,\r\n        acceptInstruments: this.props.editComponent.edit,\r\n    }\r\n\r\n    makePanelInstruments = () => {\r\n\r\n        return (\r\n            <div  className= 'instuments'>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div className = 'instumentsPanel'>\r\n                <h3>Instruments</h3>\r\n                {\r\n                    this.state.acceptInstruments ? \r\n                    <p className = 'titleComponent important'>{this.props.editComponent.name}</p>\r\n                    : null\r\n                }\r\n                {\r\n                    this.state.acceptInstruments ? this.makePanelInstruments() :\r\n                    <p className = 'warningInstruments'>Select elements for accses edit instruments</p>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n\r\n    componentDidUpdate = (oldProps, oldState) => {\r\n\r\n        if (oldProps.editComponent.edit !== this.props.editComponent.edit){\r\n            this.setState({\r\n                ...this.state,\r\n                acceptInstruments: this.props.editComponent.edit\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport default InstrumentsPanel;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './buildMenu.scss';\r\n\r\nclass BuildMenu extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        component: PropTypes.object\r\n    }\r\n\r\n    state = {\r\n        component: {...this.props.component}\r\n    }\r\n\r\n    render(){\r\n\r\n        return (\r\n            <div className = 'ComponentsMenu'>\r\n                <button className = 'ImageTool CompoentnsMenu_button' ><span>Image</span></button>\r\n                <button className = 'TextTool CompoentnsMenu_button' ><span>Text</span></button>\r\n                <button \r\n                    disabled = {this.state.component.name !== 'Header' ? false : true}\r\n                    className = 'ButtonTool CompoentnsMenu_button' >\r\n                    <span>Button</span>\r\n                </button>\r\n                <button className = 'VideoTool CompoentnsMenu_button' ><span>Video</span></button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default BuildMenu;","import React from 'react';\r\nimport eventEmitter from '../../../EventEmitter';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Icon from '../../Icon/icon';\r\nimport BuildMenu from '../../componentsBuildMenu/BuildMenu';\r\nimport './headerBuild.scss';\r\n\r\nclass HeaderBuild extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        id: PropTypes.string.isRequired,\r\n    }\r\n\r\n    state = {\r\n        idProject: this.props.id,\r\n        viewComponentMenu: false,\r\n        component: {...this.props.children}\r\n        }\r\n\r\n\r\n    changeMode = (event) => {\r\n        eventEmitter.emit('EventModeEdit', {...this.state})\r\n    }\r\n\r\n    componentMenu = (event) => {\r\n        this.setState({viewComponentMenu: this.state.viewComponentMenu ? false : true})\r\n    }\r\n\r\n    componentDidUpdate = (oldProps, oldState) => {\r\n\r\n        if (oldProps.children.edit !== this.props.children.edit){\r\n            this.setState({\r\n                ...this.state,\r\n                component: {...this.props.children}\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div onClick = {this.changeMode} className = 'Header'>\r\n                <h2 className = 'titleCompoentBuild'>Header</h2>\r\n                {\r\n                    this.state.component.edit ?\r\n                    <div className = 'ControllersEditComponent'>\r\n                        <Icon\r\n                            onClick = {this.componentMenu}\r\n                            className = 'addButton'\r\n                            path = '/img/addButton.png'\r\n                        />\r\n                        {\r\n                            this.state.viewComponentMenu ?\r\n                         <BuildMenu component = {{...this.state.component}} />\r\n                         : null\r\n                        }\r\n                    </div>\r\n                     :\r\n                    <p className = 'warningEdit'>Click for start edit</p>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default HeaderBuild;","import React,{Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {withRouter} from 'react-router-dom';\r\nimport eventEmitter from '../../EventEmitter';\r\n\r\nimport {loadCurrentProjectAction} from '../../redux/actions';\r\nimport {connect} from 'react-redux';\r\n\r\nimport Header from '../../components/header/Header';\r\nimport InstrumentsPanel from '../../components/instrumentsPanel/InstrumentsPanel';\r\n\r\nimport HeaderBuild from '../../components/buildComponents/header/headerBuild';\r\n\r\nimport './build.scss';\r\n\r\nconst config = require('../../config.json');\r\n\r\nclass Build extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        param: PropTypes.string,\r\n        match: PropTypes.shape({\r\n            params: PropTypes.shape({\r\n                param: PropTypes.string.isRequired\r\n            }).isRequired\r\n        }).isRequired\r\n    }\r\n\r\n    state = {\r\n        idProject: this.props.match.params.param,\r\n        component: {},\r\n        editComponent: {\r\n            name: '',\r\n            edit: false\r\n        }\r\n    }\r\n\r\n    workModeEdit = (event) => {\r\n        this.setState({\r\n            ...this.state,\r\n            idProject: event.idProject,\r\n            editComponent: {...event.component, edit: true}\r\n        });\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <Fragment>\r\n                <Header title = {config.title} />\r\n                { this.state.editComponent.edit ?\r\n                    <InstrumentsPanel\r\n                        editComponent = { this.props.currentEditable ? {...this.props.currentEditable} :\r\n                        {...this.props.editComponent}}\r\n                        id = {this.state.idProject}\r\n                    />\r\n                    : null\r\n                }\r\n                <HeaderBuild id = {this.state.idProject}>\r\n                    {{...this.state.editComponent, name: 'Header'}}\r\n                </HeaderBuild>\r\n            </Fragment>\r\n        )\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        eventEmitter.on('EventModeEdit', this.workModeEdit);\r\n\r\n        let currentComponents = this.props.project.find(item => {\r\n            return parseInt(item.id) === parseInt(this.state.idProject)\r\n        });\r\n        if (currentComponents)\r\n        this.props.dispatch(loadCurrentProjectAction({...currentComponents}));\r\n        else this.props.history.push('/');\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        eventEmitter.off('EventModeEdit', this.workModeEdit);\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        ...state.builder,\r\n        currentEditable: state.builder.currentEditable ? {...state.builder.currentEditable} : null,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(withRouter(Build));","import React, {useState, useEffect} from 'react';\r\nimport {BrowserRouter, Route, Switch} from 'react-router-dom';\r\n\r\n// import Promise from 'promise-polyfill';\r\nimport eventStream from './EventEmitter';\r\n\r\nimport {Provider} from 'react-redux';\r\nimport store from './redux/store';\r\n\r\nimport Loader from './components/loading/Loader';\r\n\r\nimport Index from './Pages/Index/Index';\r\nimport Cabinet from './Pages/Cabinet/Cabinet';\r\nimport About from './Pages/About/About';\r\nimport Build from './Pages/Build/Build';\r\n\r\nfunction App(props){\r\n\r\n    let [session, setSession] = useState(false);\r\n    let [redirect, setReditect] = useState(false);\r\n\r\n    const refresh = (event) => {\r\n        let eo = {...event};\r\n        setSession(eo.session);\r\n        setReditect(eo.redirect);\r\n    }\r\n\r\n    useEffect(() => {\r\n        eventStream.on('EventRefresh', refresh);\r\n        return () => eventStream.off('EventRefresh', refresh);\r\n    }, []);\r\n\r\n\r\n    if (session || redirect){\r\n    return (\r\n\r\n        <Provider store = {store}>\r\n        <BrowserRouter>\r\n                <Switch>\r\n                    <Route path = \"/\" exact component = {\r\n                    () => <Index session = {session} config = {props.config} />\r\n                    } />\r\n                    <Route path = '/Cabinet' exact component = {Cabinet}/>\r\n                    <Route path = '/Cabinet/About' component = {About}/>\r\n                    <Route path = '/Cabinet/Build/:param' component = {Build}/>\r\n                </Switch>\r\n        </BrowserRouter>\r\n    </Provider>\r\n    )\r\n    } else return <Loader path = '/img/loading.gif' type = 'application' />\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App.jsx';\nimport 'normalize.css';\n\nconst config = require('./config.json');\n\n\nReactDOM.render(\n            <App config = {config} />\n    , document.getElementById('root')\n);\n\n"],"sourceRoot":""}