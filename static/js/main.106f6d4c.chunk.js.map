{"version":3,"sources":["serviceWorker.js","Firebase/firebaseConfig.js","Firebase/Firebase.js","EventEmitter.js","components/ErrorCatch/ErrorPage.jsx","components/ErrorCatch/ErrorBoundary.jsx","redux/actions.js","redux/reducerBuilder.js","redux/reducerCabinet.js","redux/reducers.js","redux/store.js","redux/middleware/loadUserMiddleware.js","Firebase/firebaseContext.js","components/withFirebase.jsx","components/loading/Loader.jsx","components/AnimationText/AnimationTitle.jsx","components/Registration/Registration.jsx","components/Icon/icon.jsx","Pages/Index/Index.jsx","redux/middleware/middlewareDelete.js","components/confirmBox/Confirm.jsx","components/header/Header.jsx","components/imageViewer/imageItem.jsx","components/modalWindow/createProject/createProject.jsx","components/modalWindow/Search/searchModal.jsx","components/modalWindow/ModalWindow.jsx","redux/middleware/createProjectMiddleware.js","components/List/Item.jsx","components/List/List.jsx","components/ProjectsSection/ProjectsSection.jsx","Pages/Cabinet/Cabinet.jsx","components/buildComponents/components/Background.jsx","components/buildComponents/MainBackground/MainBackground.jsx","components/buildComponents/section.jsx","components/buildComponents/components/Input.jsx","components/buildComponents/components/Media.jsx","components/buildComponents/components/Image.jsx","components/buildComponents/components/Text.jsx","components/builderHOC.jsx","Pages/Production/Production.jsx","Pages/About/About.jsx","redux/middleware/updateMiddleware.js","components/withScroll.jsx","components/imageViewer/Viewer.jsx","components/instrumentsPanel/InputTools/InputInstruments.jsx","components/instrumentsPanel/MediaTools/MediaInstruments.jsx","components/instrumentsPanel/ImageTools/ImageInstruments.jsx","components/instrumentsPanel/BackgroundTools/BackgroundInstruments.jsx","components/instrumentsPanel/TextTools/TextInstruments.jsx","components/instrumentsPanel/InstrumentsPanel.jsx","components/additionalTools/additionalTools.jsx","components/componentsBuildMenu/BuildMenu.jsx","components/controllers/controllers.jsx","Pages/Build/Build.jsx","components/SwitchContainer/Guides/OpenPanel.jsx","components/SwitchContainer/Guides/SearchGuide.jsx","components/SwitchContainer/Guides/AddComponents.jsx","components/SwitchContainer/Guides/AddNewSection.jsx","components/SwitchContainer/Guides/CreateNewProject.jsx","components/SwitchContainer/SwitchContainer.jsx","Pages/Guide/Guide.jsx","App.jsx","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","firebaseConfig","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firebaseInterface","require","Firebase","Object","classCallCheck","this","firebase","initializeApp","auth","db","firestore","lowConnection","enablePersistence","rules","setPersistence","Auth","Persistence","email","password","signInWithEmailAndPassword","createUserWithEmailAndPassword","signOut","currentUser","saveSession","session","stream","EventEmitter","controllerStream","setMaxListeners","ErrorPage","redirect","update","event","_this","setState","eventEmitter","emit","react_default","a","createElement","react_router","to","class","className","onClick","React","Component","ErrorBoundary","hasError","updateApplication","componentDidMount","on","componentWillUnmount","off","info","ErrorCatch_ErrorPage","props","children","PureComponent","exitProjectAction","type","exit","loadCurrentProjectAction","id","typeProject","sectionsProject","components","loadUpdateCurrentProject","idProject","toConsumableArray","loadUserAction","active","idUser","uid","projects","errorAction","initialState","loadProject","combineReducers","builder","arguments","length","undefined","action","_objectSpread","cabinet","reducerCabinet_objectSpread","map","item","middleware","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","thunk","withExtraArgument","store","createStore","middlewareLogin","_ref2","asyncToGenerator","regenerator_default","mark","_callee","dispatch","getState","_ref","isLogin","wrap","_context","prev","next","login","response","collection","doc","user","get","docUser","data","message","abrupt","stop","_x","_x2","_x3","apply","middlewareLogOutUser","_ref6","_callee3","_ref5","_context3","_x7","_x8","_x9","firebaseContext","createContext","withFirebase","Firebase_firebaseContext","Consumer","assign","loading_Loader","_useState","useState","path","slicedToArray","_useState3","mode","concat","src","alt","AnimationTitle","styled","h3","_templateObject","dir","AnimationText","tilteContent","content","split","currentTitle","positionTitle","directionAnimation","msAnimation","msTimeout","msPauseEnd","_isMounted","timerAnimation","animationTitle","timer","self","assertThisInitialized","setTimeout","tick","counter","word","AnimationTitle_objectSpread","_title","slice","e","clearTimeout","data-titlebuild","emailRef","passwordRef","setRefEmail","node","setRefPassword","createUser","value","Error","set","indexStream","autoComplete","placeholder","ref","Icon","_useState5","draggable","title","Index","Events","tryAuth","registrationActive","regStatus","wrongEnter","emailImput","passwordImput","statusRegistration","additionalUserInfo","isNewUser","Index_objectSpread","showBox","stopPropagation","authTo","componentDidUpdate","history","push","AnimationText_AnimationTitle","Icon_icon","TransitionGroup","component","CSSTransition","timeout","unmountOnExit","classNames","components_Registration_Registration","connect","middlewareDeleteProjectComponent","_ref4","_callee2","_ref3","_context2","findProject","find","project","filter","idComponent","section","dataUpdate","_x4","_x5","_x6","middlewareDelete","itemdb","Confirm","cbSaveChanges","cbCancelSave","iconPath","CabinetIcon","Header","isChange","redirectConfirm","redirectAbout","redirectA","redirectCabinet","redirectC","redirectGuide","redirectG","confirm","false","confirmSaveDetectChanges","Header_objectSpread","logOut","pathname","sent","add","cabinetStream","prevProject","nextProject","counterProjects","componentDidlMount","_this2","Fragment","components_confirmBox_Confirm","index_es","icon","faChevronLeft","faChevronRight","faBook","withRouter","ImageItem","selected","urls","regular","urlRegular","full","urlFull","_useState7","isFull","_useState9","urlContent","url","iframe","CreateProject","disabled","validateName","name","validateType","nameLength","isNumber","warningLengthMin","warningLengthMax","warningNumber","onChange","cbValidateName","warningType","cbSelectOption","cbAddNewProject","cbCancel","loading","SearchModal","modalSearchMode","items","images","search","refSearch","cbSearch","refSearchFunc","prevProps","prevState","contentPrev","haveUpdate","isSelected","selectedItem","_items","cbMakeImageResultBox","searchModal_objectSpread","dissabled","menuActive","cbShowImage","cbSetSelectedImage","ModalWindow","workMode","buttonSearchDisabled","showUrl","imageBoxView","newProject","imageMenuActive","warning","lengthMax","lengthMin","inputSearch","inputSelect","searchData","target","ModalWindow_objectSpread","api","isFetch","ok","json","results","searchYouTubeAPI","RAITE","KEY","res","status","arrayItems","forEach","snippet","thumbnails","high","videoId","showMenuImage","showImage","_this$state$images","eventStreamBuild","setSelectedImage","makeImageResultBox","i","imageItem","key","addNewProject","selectOption","inputs","defineProperty","test","cancel","refSelect","createProject","searchModal","loader","react","middlewareCreateProject","list","lastProject","lastIndex","header","backgroundImage","backgroundColor","min","Math","floor","random","targetSection","productionPath","_useState6","canBuild","setCanBuild","_useState8","canProd","setCanProd","_useState11","_useState13","data-id","List","List_objectSpread","makeList","List_Item","ProjectsSection","components_List_List","Cabinet","modalActive","deletItem","Cabinet_objectSpread","getCurrentUser","changeWorkMode","header_Header","in","appear","modalWindow_ModalWindow","components_ProjectsSection_ProjectsSection","Background","div","Background_templateObject","width","height","BackgroundComponent","background","color","boxComponent","boxComponentRef","saveDataParent","boxInform","getBoundingClientRect","countSection","sectionNumber","size","openBgInstruments","componentsPatternBackground","componentStats","changeColor","eventItem","Background_objectSpread","colorRGB","setBackgroundImage","onDoubleClick","data-name","MainBackground","editRedy","changeMode","editStart","editComponentName","MainBackground_objectSpread","refSection","refSectionFunc","currentProjectsData","componentJSX","needUpdate","countComponents","keyMain","data-class","components_Background","Section","userData","buildComponents_MainBackground_MainBackground","sizeParentBox","componentsProdJSX","InputComponent","input","attrs","style","zIndex","indexZ","left","coordX","top","coordY","Input_templateObject","w","h","fontSize","borderRadius","ProductionStyle","_templateObject2","Input","istrumentsActive","getSizeBool","typeInput","shiftCoords","posInput","coords","x","y","startDragNdrop","openInputInstruments","componentsPatternImage","Input_objectSpread","sizeTextValue","saveCoords","nativeEvent","which","element","refInput","cords","right","bottom","clientX","clientY","changeSize","eventSize","changeSizeText","setBorderRadius","radius","borderDown","changeContent","checkPivotPosition","borderRight","move","moveInput","num","xItem","yItem","convertToPercentX","convertToPercentY","toFixed","stopDragNdrop","saveSize","setWidth","setType","setHeight","refInputComponent","onMouseDown","onMouseMove","onMouseLeave","onMouseUp","onDragStart","data-imagecomponentwrapper","WrapperMedia","display","justifyContent","alignItems","padding","Media_templateObject","Media","Media_templateObject2","_templateObject3","MediaComponent","posMedia","drawContent","openMediaInstruments","componentsPatternMedia","Media_objectSpread","refMedia","moveMedia","setContent","refMediaComponent","allowfullscreen","Media_ProductionStyle","WrapperImg","transform","rotate","scale","transition","Image_templateObject","ImageStyle","img","Image_templateObject2","opacity","Image_templateObject3","Image","transformValue","scaleValue","image","posImage","openImageInstruments","Image_objectSpread","refImage","rotateEvent","angle","scaleEvent","moveText","factorCoord","diffAngle","parseInt","xFacotr","yFactor","powHeight","pow","powWidth","pythagoras","sqrt","_angle","atan","_biasFactor","biasFactor","PI","sinX","sin","sinY","setCurrentImage","setOpacity","stopDrag","preventDefault","refImageComponent","data-imagecomponent","Image_ProductionStyle","crossOrigin","WrapperText","Text_templateObject","textColor","TextStyle","p","Text_templateObject2","font","Text_templateObject3","TextComponent","resizeStream","isHaveSize","parent","colorText","sizeText","position","contentText","openTitleInstruments","componentsPatternText","Text_objectSpread","changeColorText","changeContentText","eventContent","refText","resizeStart","classList","setFont","sectionNum","refTextComponent","data-textcomponent","Text_ProductionStyle","builderHOC","Production","params","param","projectEmpty","isLoadComponents","makeProduction","array","_components","itemHash","Production_objectSpread","patternJSX","prodRef","mainProductionRef","current","buildComponents_section","About","about","developer","year","updateMiddleware","newProjects","JSON","parse","stringify","withScroll","_React$PureComponent","ScrollMove","_getPrototypeOf2","_len","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","scrollConfig","duration","delay","smooth","offset","positionCount","setStates","withScroll_objectSpread","blockMove","moveLocation","count","moveDown","deltaY","moveUp","close","scroller","scrollTo","scroll","scrollToTop","inherits","createClass","onWheel","onTouchStart","Viewer","frameBorder","allow","allowFullScreen","InputInstruments","colorPickerActive","instrumentPanel","_content","cbSetColor","lib","onChangeComplete","cbHandleChangeComplete","cbSetWidth","max","cbSetHeight","cbSetSize","cbSetBorderRadius","cbSetType","cbSetContent","maxLength","cbDelete","MediaInstruments","ImageInstruments","fileRef","createRef","cbRotate","cbScale","step","cbSetOpacity","cbLoadFile","accept","BackgroundInstruments","TextInstruments","cbSetFont","InstrumentsPanel","InstrumentsPanel_objectSpread","closePanel","setSize","fontName","setIframeContent","contentValue","updatePosition","setColor","updateBimageStats","handleChangeComplete","rgb","r","g","b","redirectSaveChanges","ms","saveChanges","deleteComponent","loadFile","files","reader","FileReader","readAsDataURL","onload","result","onerror","makePanelInstruments","TextTools_TextInstruments","BackgroundTools_BackgroundInstruments","ImageTools_ImageInstruments","MediaTools_MediaInstruments","InputTools_InputInstruments","oldProps","oldState","instrumentActive","AdditionalTools","modal","modalSearch","modalViewer","modalSearchOn","itemEvent","additionalTools_objectSpread","ViewerSwitch","openInstrument","imageViewer_Viewer","instrumentsPanel_InstrumentsPanel","BuildMenu","BuildMenu_objectSpread","addText","componentsPattern","Text","addBackground","addImage","components_Image","addMedia","components_Media","addInput","componentsPatternInput","components_Input","inputType","addSection","Controllers","viewComponentMenu","shiftX","shiftY","coordsX","coordsY","shadowDisplay","componentMenu","controllers_objectSpread","refControll","componentsBuildMenu_BuildMenu","Build","eventEmitterBuild","EventBuild","workModeEdit","Build_objectSpread","_componentJSX","addComponentsFromBD","isNext","componentsFromDB","addComponent","saveChangesComponent","findCurrentItem","mainComponent","mainRefComponent","addNewSection","dist_default","ie","only","except","showAddSection","controllers_controllers","additionalTools","OpenPanel","SearchGuide","AddComponents","AddNewSection","CreateNewProject","SwitchContainer","refOP","SwitchContainer_objectSpread","refSE","refADD","refSN","refPR","refOpenPanel","refAdd","refProject","Guides_OpenPanel","Guides_SearchGuide","Guides_AddComponents","Guides_AddNewSection","Guides_CreateNewProject","Guide","components_SwitchContainer_SwitchContainer","App","firebaseLoadState","onAuthStateChanged","isError","App_objectSpread","_this3","exact","render","Pages_Index_Index","Pages_Cabinet_Cabinet","Pages_About_About","Pages_Guide_Guide","Pages_Build_Build","ReactDOM","react_router_dom","ErrorCatch_ErrorBoundary","Provider","es","src_App","document","getElementById","URL","href","origin","addEventListener","fetch","contentType","headers","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.106f6d4c.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","// setings in root folder .env\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n    databaseURL: process.env.REACT_APP_DATABASE_URL,\r\n    projectId: process.env.REACT_APP_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n    appId: process.env.REACT_APP_APPID\r\n};\r\n\r\nexport default firebaseConfig;","import firebase from 'firebase/app';\r\nimport firebaseConfig from './firebaseConfig';\r\nimport config from '../config.json';\r\nconst auth = require('firebase/auth');\r\nconst firestore = require('firebase/firestore');\r\n\r\nclass Firebase {\r\n\r\n    constructor(firebaseConfig){\r\n        /** Init firebase */\r\n\r\n        firebase.initializeApp(firebaseConfig);\r\n        this.auth = firebase.auth();\r\n        this.db = firebase.firestore();\r\n\r\n        if (config.firebase.lowConnection === 'true' \r\n        && (process.env.NODE_ENV === 'development' || process.env.NODE_ENV === 'production'))\r\n        this.db.enablePersistence() /** if user use low internet connection */\r\n    }\r\n\r\n    saveSession(rules){\r\n        /** Set forebase type session */\r\n        return this.auth.setPersistence(firebase.auth.Auth.Persistence[rules]);\r\n    }\r\n\r\n    login(email, password){\r\n        /** login firebase */\r\n        try {\r\n            return this.auth.signInWithEmailAndPassword(email, password);\r\n        } catch (error) {\r\n            console.error(error);\r\n            return null;\r\n        }\r\n    }\r\n\r\n    registration(email, password){\r\n        /** create new user */\r\n        return this.auth.createUserWithEmailAndPassword(email, password)\r\n    }\r\n\r\n    signOut(){\r\n        /** destroy session */\r\n        return this.auth.signOut()\r\n    }\r\n\r\n    getCurrentUser() {\r\n        /** get current user */\r\n            return this.auth.currentUser;\r\n    }\r\n}\r\nlet firebaseInterface = new Firebase(firebaseConfig);\r\n\r\nif (process.env.NODE_ENV === 'development' || process.env.NODE_ENV === 'production')\r\nfirebaseInterface.saveSession(config.firebase.session);\r\n\r\nexport default firebaseInterface;\r\nexport { auth, firestore };\r\n\r\n","import {EventEmitter} from 'events';\r\n\r\nconst stream = new EventEmitter(); /** @Events head event stream */\r\nconst controllerStream = new EventEmitter(); /** @Events for controllers */\r\ncontrollerStream.setMaxListeners(20);\r\nexport {controllerStream};\r\nexport default stream;\r\n","import React from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\nimport eventEmitter from '../../EventEmitter';\r\n\r\nimport './errorPage.scss';\r\n\r\n\r\nclass ErrorPage extends React.Component {\r\n\r\n    state = {\r\n        redirect: false,\r\n    }\r\n\r\n    update = event => {\r\n       this.setState({redirect: true},\r\n        () => eventEmitter.emit('EventErrorCatchUpdate'));\r\n    }\r\n\r\n    render(){\r\n        if (this.state.redirect) return <Redirect to = '/' />\r\n        return (\r\n        <div class = 'container'>\r\n            <div class = 'flex-column ErrorPage'>\r\n                <h1>Application crash</h1>\r\n                <button className = 'ErrorPage__button_updateApp' onClick = {this.update}>Update</button>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ErrorPage;","\r\nimport React from 'react';\r\nimport eventEmitter from '../../EventEmitter';\r\nimport ErrorPage from './ErrorPage';\r\n\r\nclass ErrorBoundary extends React.PureComponent {\r\n\r\n      state = { \r\n        hasError: false,\r\n      };\r\n\r\n    static getDerivedStateFromError(error) {\r\n        console.log(error);\r\n      // Обновить состояние с тем, чтобы следующий рендер показал запасной UI.\r\n      return { hasError: true};\r\n    }\r\n\r\n    updateApplication = event => {\r\n      this.setState({hasError: false});\r\n    };\r\n  \r\n    componentDidCatch(error, info) {\r\n      // Можно также сохранить информацию об ошибке в соответствующую службу журнала ошибок\r\n     console.error(error + \",\" + info);\r\n    }\r\n  \r\n    render() {\r\n      if (this.state.hasError) return <ErrorPage />\r\n      return this.props.children;\r\n    }\r\n\r\n    componentDidMount = () => {\r\n      eventEmitter.on('EventErrorCatchUpdate',this.updateApplication);\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n      eventEmitter.off('EventErrorCatchUpdate',this.updateApplication);\r\n    }\r\n  }\r\n\r\n  export default ErrorBoundary;","const CREATE_PROJECT = 'CREATE_PROJECT';\r\nconst LOAD_UPDATE_PROJECT = \"LOAD_UPDATE_PROJECT\";\r\nconst LOAD_CURRENT = 'LOAD_CURRENT';\r\nconst LOG_OUT_CABINET = 'LOG_OUT_CABINET';\r\nconst LOAD_USER_CABINET = 'LOAD_USER_CABINET';\r\nconst ERROR_CABINET = 'ERROR_CABINET';\r\nconst EXIT_PROJECT = 'EXIT_PROJECT';\r\n\r\nconst createProjectAction = (state) => {\r\n    /** action for create project */\r\n    return {\r\n        type: CREATE_PROJECT,\r\n        projects: state,\r\n    }\r\n}\r\n\r\nconst exitProjectAction = (state) => {\r\n       /** action for exit from editable or prod project */\r\n    return {\r\n        type: EXIT_PROJECT,\r\n        exit: state\r\n    }\r\n}\r\n\r\nconst loadCurrentProjectAction = (state) => {\r\n    /** action for load current editable or prod project */\r\n    return {\r\n        type: LOAD_CURRENT,\r\n        id: state.id,\r\n        typeProject: state.typeProject,\r\n        sectionsProject: state.sectionsProject,\r\n        components: state.components\r\n    }\r\n}\r\n\r\nconst loadUpdateCurrentProject = (state) => {\r\n    /** action for update editable project */\r\n    return {\r\n        type: LOAD_UPDATE_PROJECT,\r\n        idProject: state.idProject,\r\n        sectionsProject: [...state.sectionsProject],\r\n        components: [...state.components]\r\n    }\r\n}\r\n\r\nconst loadUserAction = (state) => {\r\n    /** action for load user data */\r\n    return {\r\n        type: LOAD_USER_CABINET,\r\n        active: true,\r\n        idUser: state.uid,\r\n        error: '',\r\n        projects: state.projects\r\n    }\r\n}\r\n\r\nconst logOutAction = (state) => {\r\n    /** action for clear session */\r\n    return {\r\n        type: LOG_OUT_CABINET,\r\n        active: false,\r\n        idUser: null,\r\n        error: '',\r\n        projects: []\r\n    }\r\n}\r\n\r\nconst errorAction = (state) => {\r\n    /** action catch errors */\r\n    return {\r\n        type: ERROR_CABINET,\r\n        error: state\r\n    }\r\n}\r\n\r\nexport {\r\n    CREATE_PROJECT, createProjectAction, /* cabinet */\r\n    LOAD_USER_CABINET, loadUserAction, /* cabinet */\r\n    LOG_OUT_CABINET, logOutAction, /* cabinet */\r\n    LOAD_CURRENT, loadCurrentProjectAction, /* builder */\r\n    LOAD_UPDATE_PROJECT, loadUpdateCurrentProject,\r\n    EXIT_PROJECT, exitProjectAction,\r\n    ERROR_CABINET, errorAction, /* both */\r\n}","import {LOAD_CURRENT,LOAD_UPDATE_PROJECT, EXIT_PROJECT} from './actions';\r\n\r\nconst initialState = { /** @Builder reducer for build mode */\r\n    loadProject: false,\r\n    idProject: null,\r\n    typeProject: null,\r\n    components: [],\r\n    sectionsProject: [],\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n    switch (action.type){\r\n\r\n        case LOAD_CURRENT: {\r\n            /** load data */\r\n            return {\r\n                ...state,\r\n                loadProject: true,\r\n                idProject: action.id,\r\n                typeProject: action.typeProject,\r\n                components: [...action.components],\r\n                sectionsProject: [...action.sectionsProject]\r\n            }\r\n        }\r\n\r\n        case LOAD_UPDATE_PROJECT: {\r\n             /** load update for project */\r\n            return {\r\n                ...state,\r\n                components: [...action.components],\r\n                sectionsProject: [...action.sectionsProject]\r\n            }\r\n        }\r\n\r\n        case EXIT_PROJECT: {\r\n             /** if user exit from edit mode */\r\n            if (action.exit)\r\n            return {\r\n                ...state,\r\n                loadProject: false,\r\n                idProject: null,\r\n                typeProject: null,\r\n                components: [],\r\n                sectionsProject: []\r\n            }\r\n            else return state;\r\n        }\r\n        default: return state;\r\n    }\r\n};","import {    LOAD_USER_CABINET, LOG_OUT_CABINET,\r\n            ERROR_CABINET, CREATE_PROJECT,\r\n            LOAD_UPDATE_PROJECT\r\n        } from './actions';\r\n\r\nconst initialState = { /** Cabinet reducer (root) */\r\n    active: false,\r\n    idUser: null,\r\n    projects: [],\r\n    error: null,\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case LOAD_USER_CABINET: {\r\n            /** load user data if user auth - true */\r\n            return {\r\n                ...state,\r\n                active: action.active,\r\n                idUser: action.idUser,\r\n                projects: [...action.projects]\r\n            }\r\n        }\r\n\r\n        case CREATE_PROJECT: {\r\n             /** create new project */\r\n            return {\r\n                ...state,\r\n                projects: [...action.projects]\r\n            }\r\n        }\r\n\r\n        case LOAD_UPDATE_PROJECT: {\r\n              /** update project in cabinet */\r\n            return {\r\n                ...state,\r\n                projects: state.projects.map(item => {\r\n                    if (item.id === action.idProject){\r\n                        item.components = [...action.components]\r\n                        item.sectionsProject = [...action.sectionsProject]\r\n                    }\r\n                return item;\r\n                })\r\n            }\r\n        }\r\n\r\n        case LOG_OUT_CABINET: {\r\n            /** clear session */\r\n            return {\r\n                ...state,\r\n                active: false,\r\n                idUser: null,\r\n                projects: []\r\n            }\r\n        }\r\n\r\n        case ERROR_CABINET: {\r\n            /** catch error in cabinet */\r\n            return {\r\n                ...state,\r\n                error: action.error\r\n            }\r\n        }\r\n        default: return state;\r\n    }\r\n}\r\n\r\n","import {combineReducers} from 'redux';\r\nimport reducerBuilder from './reducerBuilder';\r\nimport reducerCabinet from './reducerCabinet';\r\n\r\nexport default combineReducers({\r\n    builder: reducerBuilder,\r\n    cabinet: reducerCabinet,\r\n});","import {createStore, applyMiddleware, compose} from 'redux';\r\nimport firebase from  '../Firebase/Firebase';\r\nimport thunk from 'redux-thunk';\r\nimport combineReducers from './reducers';\r\n\r\n/** For devtools */\r\nconst composeEnhancers =\r\n  typeof window === 'object' &&\r\n  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?\r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\r\n    }) : compose;\r\n\r\nconst middleware = composeEnhancers( /** @Include moddleware */\r\n  applyMiddleware(thunk.withExtraArgument({firebase})));\r\n\r\nconst store = createStore(combineReducers, middleware);\r\nexport default store;","import {loadUserAction, errorAction, logOutAction} from '../actions';\r\n\r\nconst middlewareLogin = (email,password) => async (dispatch,getState, {firebase}) => {\r\n    /** Auth */\r\n    let isLogin = true;\r\n        await firebase.login(email,password)\r\n        .then(response =>{\r\n            firebase.db.collection(\"users\").doc(response.user.uid).get()\r\n            .then(docUser => {\r\n                let user = docUser.data();\r\n                /** Load user if auth - true */\r\n                dispatch(loadUserAction({uid: docUser.id, projects: [...user.projects]}))\r\n            })\r\n        })\r\n        .catch((error) => {\r\n            console.error(error.message);\r\n            dispatch(errorAction(error.message));\r\n        });\r\n        return isLogin;\r\n    }\r\n\r\nconst middlewareLoadUserData = (uid) => async (dispatch,getState, {firebase}) => {\r\n    /** Load user data */\r\n        let isError = null;\r\n        await firebase.db.collection(\"users\").doc(uid).get()\r\n        .then(docUser => {\r\n            let user = docUser.data();\r\n            /** load if user data found */\r\n            dispatch(loadUserAction({uid: uid, projects: [...user.projects]}))\r\n        })\r\n        .catch((error) => {\r\n            console.error(error.message);\r\n            dispatch(errorAction(error.message));\r\n            isError = true;\r\n        });\r\n\r\n        if (!isError) return true;\r\n        else return false;\r\n    }\r\n\r\nconst middlewareLogOutUser = (uid) => async (dispatch,getState, {firebase}) => {\r\n    /** disconnect from session */\r\n    await firebase.signOut()\r\n    .then (response => {\r\n        dispatch(logOutAction());\r\n    })\r\n    .catch((error) => {\r\n        console.error(error.message);\r\n        dispatch(errorAction(error.message));\r\n    });\r\n}\r\nexport {\r\n    middlewareLogin,middlewareLoadUserData, middlewareLogOutUser\r\n}","import React from 'react';\r\nimport firebase from './Firebase';\r\n/** @ContextAPI for firebase */\r\nconst firebaseContext = React.createContext(firebase);\r\nexport default firebaseContext;","import React from 'react';\r\nimport firebaseContext from '../Firebase/firebaseContext';\r\n\r\n\r\nconst withFirebase = Component => props => {\r\n\r\n    if (process.env.NODE_ENV === 'development' || process.env.NODE_ENV === 'production')\r\n        return ( /** Context API */\r\n            <firebaseContext.Consumer>\r\n                {firebase => <Component {...props} firebase = {firebase} /> }\r\n            </firebaseContext.Consumer>\r\n        )\r\n    else return <Component {...props} />;\r\n};\r\n\r\n\r\nexport default withFirebase;","import React,{useState} from 'react';\r\nimport './Loader.scss';\r\nexport default function(props) {\r\n  \r\n    const [path] = useState(props.path ? process.env.PUBLIC_URL + props.path : process.env.PUBLIC_URL + `/img/loading.gif`);\r\n    const [mode] = useState(props.mode ? props.mode : false);\r\n    return (\r\n            <div className = {`loaderBox ${mode && 'specialMode'}`}>\r\n                <img className = 'loader' src = {path} alt = 'loader'></img> \r\n                {!mode && <p>{`Loading ${props.type}`}</p>}\r\n            </div>\r\n    )\r\n}","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst AnimationTitle = styled.h3`\r\n    user-select: none;\r\n    transition: .4s linear all;\r\n    color: ${props => props.dir === 'up' ? 'red' : 'blue'};\r\n`;\r\n\r\nclass AnimationText extends React.PureComponent {\r\n\r\n    state = {\r\n        tilteContent: this.props.content.split(''),\r\n        currentTitle: this.props.content[0],\r\n        positionTitle: 1,\r\n        directionAnimation: 'up',\r\n        msAnimation: this.props.msAnimation,\r\n        msTimeout: this.props.msAnimation,\r\n        msPauseEnd: this.props.msPauseEnd,\r\n    }\r\n\r\n    _isMounted = false;\r\n    timerAnimation = null;\r\n\r\n    animationTitle = timer => {\r\n        let self = this;\r\n        if (this._isMounted)\r\n        timer = setTimeout( function tick(){\r\n\r\n            if (self._isMounted) {\r\n                if (self.state.directionAnimation === 'up'){\r\n                    let counter = self.state.tilteContent.length;\r\n                    const word = counter > self.state.positionTitle ?\r\n                                self.state.tilteContent[self.state.positionTitle] :\r\n                                self.state.tilteContent[self.state.positionTitle-1];\r\n                    self.setState({\r\n                        ...self.state,\r\n                        currentTitle: self.state.currentTitle + word,\r\n                        positionTitle: self.state.positionTitle + 1,\r\n                        directionAnimation: self.state.positionTitle === counter ? 'down' : 'up',\r\n                        msAnimation: self.state.positionTitle === counter ?\r\n                            self.state.msPauseEnd : self.state.msTimeout\r\n                    });\r\n                }\r\n                if (self.state.directionAnimation === 'down'){\r\n                    let _title = self.state.currentTitle;\r\n                    const length = self.state.currentTitle.length;\r\n                    _title = _title.slice(0,length - 1);\r\n                    self.setState({\r\n                        ...self.state,\r\n                        currentTitle: _title,\r\n                        positionTitle: self.state.positionTitle - 1,\r\n                        directionAnimation: self.state.positionTitle === 2 ? 'up' : 'down',\r\n                        msAnimation: self.state.positionTitle === 2 ?\r\n                            self.state.msPauseEnd : self.state.msTimeout\r\n                    });\r\n                }\r\n            timer = setTimeout(tick, self.state.msAnimation);\r\n            }\r\n        }, this.state.msAnimation);\r\n\r\n    }\r\n\r\n\r\n    render(){\r\n        return (\r\n            <AnimationTitle data-titlebuild dir = {this.state.directionAnimation}>\r\n                {this.state.currentTitle}\r\n            </AnimationTitle>\r\n        )\r\n\r\n    }\r\n\r\n    componentDidMount = (e) => {\r\n        this._isMounted = true;\r\n        this.animationTitle(this.timerAnimation);\r\n    }\r\n\r\n    componentWillUnmount = (e) => {\r\n        this._isMounted = false;\r\n        if (this.timerAnimation) clearTimeout(this.timerAnimation);\r\n    }\r\n}\r\n\r\n\r\nexport default AnimationText;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './registration.scss';\r\n\r\nimport withFirebase from '../withFirebase';\r\n\r\n\r\nclass Registration extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        firebase: PropTypes.object.isRequired, /** @firebase class for use firebase functions */\r\n        indexStream: PropTypes.object.isRequired /** @Events stream object */\r\n    }\r\n\r\n    state = {\r\n        firebase: this.props.firebase,\r\n        error: null,\r\n    }\r\n\r\n    emailRef = null;\r\n    passwordRef = null;\r\n\r\n    setRefEmail = (node) => this.emailRef = node;\r\n    setRefPassword = (node) => this.passwordRef = node;\r\n\r\n    createUser = event => {\r\n        /** try to create new user */\r\n        const email = this.emailRef ? this.emailRef.value : null;\r\n        const password = this.passwordRef ? this.passwordRef.value : null;\r\n        const { firebase } = this.props;\r\n\r\n        if (password && email)\r\n        firebase.registration(email, password)\r\n        .then(response => {\r\n            if (!response) throw new Error('Ivaid registration')\r\n            /** if response - true update data user else throw error */\r\n            firebase.db.collection(\"users\").doc(response.user.uid).set({\r\n                'projects': [],\r\n                'email': email,\r\n            }).then(() => this.props.indexStream.emit('EventRegistrationCorrect', response));\r\n        })\r\n        .catch((error) => {\r\n        console.error(error.message);\r\n        this.setState({error: error.message});\r\n        });\r\n        else  return this.setState({error: 'invalid user data'});\r\n    };\r\n\r\n    render(){\r\n        let  { error } = this.state;\r\n        return (\r\n            <div className ='RegistrationBox'>\r\n                <div  className = 'RegistrationBox__RegistrationForm'>\r\n                    <h3>Registration</h3>\r\n                    <form autoComplete = 'off' className = 'RegistrationForm__RegForm'>\r\n                        { error ?\r\n                            <p className = 'error'>{error}</p>\r\n                            : null\r\n                        }\r\n                        <span>E-mail</span>\r\n                        <input placeholder=\"email\" ref = {this.setRefEmail} type = 'text' />\r\n                        <span>Password</span>\r\n                        <input \r\n                            className = 'password' \r\n                            autoComplete = \"off\" \r\n                            ref = {this.setRefPassword} \r\n                            type = 'password' \r\n                            placeholder=\"password\"\r\n                        />\r\n                        <input onClick = {this.createUser}\r\n                                className = 'RegForm__loginButton'\r\n                                type = 'button'\r\n                                value = 'registration'\r\n                        />\r\n                    </form>\r\n                </div>\r\n                </div>\r\n        )\r\n    }\r\n\r\n}\r\nexport default withFirebase(Registration);\r\n","import React, {useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './icon.scss';\r\n\r\nfunction Icon(props){\r\n    const [path] = useState(props.path);\r\n    const [className] = useState(props.className ? props.className : null);\r\n    const [draggable] = useState(props.draggable ? true : false);\r\n\r\n    return (\r\n    <img\r\n        draggable = {draggable}\r\n        onClick = {props.onClick ? props.onClick : null}\r\n        className = {className}\r\n        title = {props.title ? props.title : null}\r\n        src = {process.env.PUBLIC_URL + path } alt = 'icon'>\r\n    </img>\r\n    )\r\n}\r\n\r\nIcon.propTypes = {\r\n    path: PropTypes.string.isRequired, // icon path\r\n    className: PropTypes.string, // class\r\n    draggable: PropTypes.bool // draggable bool\r\n}\r\n\r\nexport default Icon;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\r\nimport AnimationText from '../../components/AnimationText/AnimationTitle';\r\nimport Events from 'events';\r\nimport {middlewareLogin} from '../../redux/middleware/loadUserMiddleware';\r\n\r\nimport Loader from '../../components/loading/Loader';\r\nimport Registration from '../../components/Registration/Registration';\r\n\r\nimport {connect} from 'react-redux';\r\n\r\nimport './index.scss';\r\nimport Icon from '../../components/Icon/icon';\r\n\r\n\r\nclass Index extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        active: PropTypes.bool, /** @active - status firebase auth */\r\n        dispatch: PropTypes.func.isRequired, /** @dispatch - redux */\r\n        history: PropTypes.object.isRequired, /** @Router HTML5 history */\r\n        location: PropTypes.object.isRequired, /** @Router */\r\n        match: PropTypes.object.isRequired, /** @Router */\r\n        wrongEnter: PropTypes.string, /** @Error about invalid enter */\r\n        config: PropTypes.object, /** @config - app settings */\r\n    }\r\n\r\n    indexStream = new Events();\r\n\r\n    state = {\r\n        title:  this.props.config.title,\r\n        tryAuth: false,\r\n        registrationActive: false,\r\n        regStatus: false,\r\n        wrongEnter: false,\r\n        error: '',\r\n    }\r\n\r\n    emailImput = null;\r\n    passwordImput = null;\r\n\r\n    statusRegistration = event => {\r\n        /** Update registration status */\r\n        event.additionalUserInfo.isNewUser ?\r\n            this.setState({\r\n                ...this.state,\r\n                regStatus: true,\r\n                registrationActive: false,\r\n                error: 'Account create!'\r\n            })\r\n        : console.error('error registration');\r\n    }\r\n\r\n    showBox = event => {\r\n         /** Show registration box */\r\n        try {\r\n            this.setState ({\r\n                ...this.state,\r\n            registrationActive: this.state.registrationActive ? false : true\r\n            });\r\n        } catch (e) {\r\n        console.error('animation fail');\r\n        }\r\n        event.stopPropagation();\r\n    }\r\n\r\n    authTo = event => {\r\n          /** Auth user */\r\n            if (this.emailImput && this.passwordImput)\r\n                    this.props.dispatch(middlewareLogin(this.emailImput.value, this.passwordImput.value))\r\n        event.stopPropagation();\r\n    }\r\n\r\n    emailRef = node => this.emailImput = node;\r\n    passwordRef = node => this.passwordImput = node;\r\n\r\n    render(){\r\n\r\n\r\n        if (!this.props.active){\r\n            return (\r\n                    <div className = 'LoginPage flex-column'>\r\n                        <h1>{this.state.title}</h1>\r\n                        <div className = 'LoginPage__LoginBox'>\r\n                            <AnimationText\r\n                                content = 'Build your landing page!'\r\n                                msPauseEnd = {1000}\r\n                                msAnimation = {150}\r\n                            />\r\n                            <form className = 'LoginBox__LoginForm'>\r\n                                <h3>Connect form</h3>\r\n                                {this.state.tryAuth &&\r\n                                <Icon\r\n                                    className = 'LoginBox__LoginForm__loader'\r\n                                    path = '/img/loading.gif'\r\n                                />\r\n                                }\r\n                                {(this.props.wrongEnter || this.state.regStatus) && !this.state.tryAuth ?\r\n                                    <p className = 'error'>{this.props.wrongEnter}</p>\r\n                                    : null\r\n                                }\r\n                                    <p>E-mail</p>\r\n                                    <input \r\n                                        autoComplete = 'off'\r\n                                        placeholder=\"email\" \r\n                                        ref = {this.emailRef}\r\n                                        type = 'text' \r\n                                    />\r\n                                    <p>Password</p>\r\n                                    <input \r\n                                        ref = {this.passwordRef} \r\n                                        type = 'password' \r\n                                        autoComplete = 'off'\r\n                                        placeholder=\"password\"\r\n                                    />\r\n                                    <input \r\n                                        onClick = {this.authTo} \r\n                                        className = 'LoginForm__loginButton enterInput'\r\n                                        type = 'button'\r\n                                        value = 'enter' />\r\n                                    <input\r\n                                        onClick = {this.showBox}\r\n                                        className = {this.state.registrationActive ?\r\n                                            `LoginForm__loginButton registration selected` : \r\n                                            'LoginForm__loginButton registration'\r\n                                        }\r\n                                        type = 'button'\r\n                                        value = 'registration'\r\n                                    />\r\n                            </form>\r\n                        </div>\r\n                            <TransitionGroup component={null}>\r\n                                {this.state.registrationActive &&\r\n                                    <CSSTransition\r\n                                        timeout={300}\r\n                                        unmountOnExit\r\n                                        classNames=\"RegAnim\">\r\n                                        <Registration  indexStream = {this.indexStream} />\r\n                                    </CSSTransition>\r\n                                }\r\n                            </TransitionGroup>\r\n                    </div>\r\n            )\r\n        }\r\n         else  return <Loader path = '/img/loading.gif' type = 'session' />\r\n    }\r\n\r\n    componentDidUpdate = () => {\r\n        if (this.props.active) this.props.history.push('/Cabinet');\r\n    }\r\n\r\n    componentDidMount = (e) => {\r\n        if (this.props.active) this.props.history.push('/Cabinet');\r\n        this.indexStream.on('EventRegistrationCorrect', this.statusRegistration);\r\n    }\r\n    componentWillUnmount = (e) => {\r\n        this.indexStream.off('EventRegistrationCorrect', this.statusRegistration);\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        active: state.cabinet.active, \r\n        wrongEnter: state.cabinet.error\r\n    }\r\n  }\r\n\r\nexport default connect(mapStateToProps)(Index);","\r\nimport {errorAction, loadUserAction, loadUpdateCurrentProject} from '../actions';\r\nconst middlewareDelete = item => async (dispatch,getState, {firebase}) => {\r\n    /** Delete some components from project */\r\n    await firebase.db.collection('users').doc(item.uid).get()\r\n    .then(user => user.data())\r\n    .then(data => {\r\n        return {id: item.uid, projects: data.projects.filter(itemdb => itemdb.id !== item.id)};\r\n    })\r\n    .then(data => {\r\n        /** Load update in database */\r\n        firebase.db.collection(\"users\").doc(item.uid).update({\r\n            \"projects\": data.projects\r\n        })\r\n        .then(response => {\r\n            /** update user data */\r\n            dispatch(loadUserAction({uid: item.uid, projects: data.projects}));\r\n        });\r\n    })\r\n    .catch((error) => {\r\n        console.error(error.message);\r\n        dispatch(errorAction(error.message));\r\n    });\r\n}\r\n\r\nconst middlewareDeleteProjectComponent = item => async (dispatch, getState, {firebase}) => {\r\n    /** Delete project */\r\n    await firebase.db.collection('users').doc(item.uid).get()\r\n    .then(user => user.data())\r\n    .then(data => {\r\n        const userProjects = [...data.projects];\r\n        const findProject = userProjects.find(project => item.id === project.id);\r\n        if (!findProject) throw new Error('No found project');\r\n        findProject.components = findProject.components.filter(component =>\r\n            component.id !== item.idComponent\r\n        );\r\n\r\n        if (item && item.type === 'background'){\r\n            findProject.sectionsProject = findProject.sectionsProject.filter(section => {\r\n                return section !== item.idComponent;\r\n            });\r\n        }\r\n        return {dataUpdate: data, findProject: findProject};\r\n    })\r\n    .then(data => {\r\n        let {dataUpdate} = data;\r\n        let {findProject} = data;\r\n        /** update data in database */\r\n        firebase.db.collection(\"users\").doc(item.uid).update({\r\n            \"projects\": dataUpdate.projects\r\n        })\r\n        .then(response => {\r\n            /** update user data */\r\n            dispatch(loadUpdateCurrentProject({\r\n                components: [...findProject.components],\r\n                idProject: item.id,\r\n                sectionsProject: [...findProject.sectionsProject],\r\n            }))\r\n        });\r\n    })\r\n    .catch(error => {\r\n        console.error(error.message);\r\n        dispatch(errorAction(error.message));\r\n        return null;\r\n    });\r\n\r\n    return item.idComponent;\r\n}\r\n\r\nexport {middlewareDeleteProjectComponent};\r\nexport default middlewareDelete;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './Confirm.scss';\r\n\r\nconst Confirm = props => {\r\n\r\n    return (\r\n        <div className = 'wrapperConfirm'>\r\n            <div className = 'confirmSave'>\r\n                <span>Detected new changes</span>\r\n                <input\r\n                    className = 'saveCofirm'\r\n                    onClick = {props.cbSaveChanges}\r\n                    type = 'button'\r\n                    value = 'Save changes'\r\n                />\r\n                <input\r\n                    className = 'cancelCofirm'\r\n                    onClick = {props.cbCancelSave}\r\n                    type = 'button'\r\n                    value = 'Cancel'\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nConfirm.propTypes = {\r\n    cbSaveChanges: PropTypes.func.isRequired, // callback\r\n    cbCancelSave: PropTypes.func.isRequired // callback\r\n}\r\n\r\nexport default Confirm;","import React from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport './header.scss';\r\n\r\nimport {middlewareLogOutUser} from '../../redux/middleware/loadUserMiddleware';\r\nimport {connect} from 'react-redux';\r\nimport {withRouter} from 'react-router-dom';\r\nimport {exitProjectAction} from '../../redux/actions';\r\nimport eventEmitter from '../../EventEmitter.js';\r\nimport Icon from '../Icon/icon';\r\nimport Confirm from '../confirmBox/Confirm';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faBook, faChevronLeft, faChevronRight } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst iconPath = require('../../config.json').CabinetIcon;\r\n\r\nclass Header extends React.Component {\r\n\r\n    static propTypes = {\r\n        title: PropTypes.string.isRequired, /** @Config title app */\r\n        cabinetStream: PropTypes.object, /** @Events stream cabinet */\r\n        dispatch: PropTypes.func.isRequired, /** @dispatch redux */\r\n        history: PropTypes.object.isRequired, /** @Router HTML5 history */\r\n        location: PropTypes.object.isRequired, /** @Router */\r\n        match: PropTypes.object, /** @Router */\r\n    };\r\n\r\n    state = {\r\n        idUser: this.props.idUser,\r\n        title: this.props.title,\r\n        isChange: false,\r\n        redirectConfirm: false,\r\n        redirectAbout: {\r\n            path:  '/Cabinet/About',\r\n            redirectA: false,\r\n        },\r\n        redirectCabinet: {\r\n            path:  '/Cabinet',\r\n            redirectC: false,\r\n        },\r\n        redirectGuide: {\r\n            path:  '/Cabinet/Guide',\r\n            redirectG: false,\r\n        }\r\n    };\r\n\r\n    confirm = event => {\r\n        if (typeof event !== 'object')\r\n        this.setState({isChange: event});\r\n        else this.setState({isChange: event.false, redirectConfirm: event.confirm});\r\n    }\r\n\r\n    confirmSaveDetectChanges = event => {\r\n        eventEmitter.emit('EventRedirectSaveChanges');\r\n        this.setState({\r\n            redirectConfirm: false,\r\n            redirectCabinet: {\r\n                ...this.state.redirectCabinet,\r\n                redirectC: true\r\n            }\r\n        });\r\n    };\r\n\r\n    logOut = event => {\r\n        if (this.state.idUser)\r\n            this.props.dispatch(middlewareLogOutUser(this.props.idUser));\r\n        event.stopPropagation();\r\n    };\r\n\r\n    redirectAbout = event => {\r\n        const isPath = this.props.location.pathname !== this.state.redirectAbout.path;\r\n        if (isPath && !this.state.isChange)\r\n            this.props.history.push(this.state.redirectAbout.path);\r\n         else if (!this.state.redirectConfirm)\r\n            this.setState({redirectConfirm: true});\r\n        event.stopPropagation()\r\n    };\r\n\r\n    redirectGuide = event => {\r\n        const isPath = this.props.location.pathname !== this.state.redirectGuide.path;\r\n        if (isPath && !this.state.isChange)\r\n            this.props.history.push(this.state.redirectGuide.path);\r\n        else if (!this.state.redirectConfirm) \r\n                this.setState({redirectConfirm: true});\r\n        event.stopPropagation()\r\n    };\r\n\r\n    redirectCabinet = event => {\r\n        if (event !== 'cancelMode'){\r\n            const isPath = this.props.location.pathname !== this.state.redirectCabinet.path;\r\n            if (isPath && this.state.isChange === false)\r\n                this.props.history.push(this.state.redirectCabinet.path);\r\n            else if (!this.state.redirectConfirm) this.setState({redirectConfirm: true});\r\n            event.stopPropagation();\r\n\r\n        } else this.setState({\r\n            redirectConfirm: false,\r\n            redirectCabinet: {\r\n                ...this.state.redirectCabinet,\r\n                redirectC: true\r\n            }\r\n        });\r\n    }\r\n\r\n    exit = async () => await this.props.dispatch(exitProjectAction(true));\r\n\r\n    add = event => {\r\n        this.props.cabinetStream.emit('EventChangeWorkMode',{active: true, action: 'newProject'});\r\n        event.stopPropagation()\r\n    };\r\n\r\n    prevProject = event => {\r\n        if (this.props.idProject !== 0){\r\n                this.props.history.push(`/Cabinet/Build/${this.props.idProject - 1}`);\r\n        }\r\n        event.stopPropagation();\r\n    }\r\n\r\n    nextProject = event => {\r\n        if (this.props.idProject < this.props.counterProjects)\r\n        this.props.history.push(`/Cabinet/Build/${this.props.idProject + 1}`)\r\n    }\r\n\r\n    render(){\r\n\r\n        return (\r\n            <React.Fragment>\r\n            {this.state.isChange && this.state.redirectConfirm ?\r\n                <Confirm \r\n                    cbSaveChanges = {this.confirmSaveDetectChanges}\r\n                    cbCancelSave = {() => this.redirectCabinet('cancelMode')}\r\n                /> : null}\r\n                <header>\r\n                    <div className = 'container'>\r\n                        <div className = 'flex-row'>\r\n                                <div onClick = {this.redirectCabinet} className = 'header__CabinetInfo'>\r\n                                    <Icon className ='mainIcon' path = {iconPath} />\r\n                                    <h3 className = 'tilteApp'>{this.state.title} </h3>\r\n                                </div>\r\n                                {this.props.location.pathname === `/Cabinet/Build/${this.props.idProject}` &&\r\n                                    <FontAwesomeIcon \r\n                                            className=\" switcher fas fa-2x\"\r\n                                            icon = {faChevronLeft} \r\n                                            onClick = {this.prevProject}\r\n                                    />\r\n                                }\r\n                                {this.props.location.pathname === `/Cabinet/Build/${this.props.idProject}` &&\r\n                                    <FontAwesomeIcon\r\n                                        className=\" switcher fas fa-2x\"\r\n                                        icon = {faChevronRight} \r\n                                        onClick = {this.nextProject}\r\n                                    />\r\n                                }\r\n                                {this.props.location.pathname === '/Cabinet' ?\r\n                                    <div onClick = {this.add} className = 'header__newProject__AddButton'>\r\n                                        <Icon className = 'Cabinet' path = '/img/plus.png' />\r\n                                    </div>\r\n                                    : null\r\n                                }\r\n                                    <div  className = 'Navigator'>\r\n                                    <FontAwesomeIcon \r\n                                        className=\" about fas fa-2x\"  \r\n                                        icon = {faBook} \r\n                                        onClick = {this.redirectGuide} \r\n                                        />\r\n                                        <Icon className = 'about' onClick = {this.redirectAbout}\r\n                                            title = 'about'\r\n                                            path = '/img/about_logo.svg'\r\n                                        />\r\n                                        <Icon className = 'logoutButton'\r\n                                            onClick = {this.logOut}\r\n                                            title = 'logOut'\r\n                                            path = '/img/logOut.svg'\r\n                                        />\r\n                                    </div>\r\n                        </div>\r\n                </div>\r\n                </header>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n    componentDidlMount = () => {\r\n        eventEmitter.on('EventRedirectConfirm', this.confirm);\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        eventEmitter.off('EventRedirectConfirm', this.confirm);\r\n    }\r\n}\r\n\r\nexport default connect()(withRouter(Header));","import React, {useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport eventEmitter from '../../EventEmitter';\r\n\r\nconst ImageItem = props => {\r\n\r\n    const {selected} = props;\r\n    const [id] = useState(props.id);\r\n    const [urlRegular] = useState(props.urls.regular);\r\n    const [urlFull] = useState(props.urls.full);\r\n    const [isFull] = useState(props.isFull);\r\n    const [urlContent] = useState(props.urlContent);\r\n    const showImageMenu = event => {\r\n\r\n       eventEmitter.emit(\"EventShowMenuImage\",{\r\n            id: id,\r\n            url: urlRegular,\r\n            urlFull: urlFull,\r\n            iframe: urlContent\r\n        });\r\n        event.stopPropagation();\r\n    }\r\n\r\n    return (\r\n        <div className = {selected ? 'ItemBox selected' : 'ItemBox'}>\r\n            <img\r\n                className = 'ImageItem'\r\n                onClick = {showImageMenu}\r\n                src = {isFull ? urlFull : urlRegular}\r\n                alt = 'item'\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nImageItem.propTypes = {\r\n    id: PropTypes.oneOfType([\r\n        PropTypes.string,\r\n        PropTypes.number,\r\n    ]),\r\n    urls: PropTypes.object, // data with image path\r\n    isFull: PropTypes.bool, // mode view\r\n    urlContent: PropTypes.string // content path\r\n}\r\n\r\nexport default ImageItem;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Loader from '../../loading/Loader';\r\n\r\nconst CreateProject = props => {\r\n\r\n    const content = props.content; /** Content */\r\n    const {disabled,validateName,name,validateType} = content;\r\n    const nameLength = name.length; /** Length */\r\n\r\n\r\n    let isNumber = nameLength >= 4 && nameLength <= 20;\r\n\r\n    return (\r\n    <div className = 'Modal Modal__create'>\r\n        <h3>Create new Project</h3>\r\n        { nameLength <= 3 ?\r\n            <span className = 'warning'>{props.warningLengthMin}</span> : null\r\n        }\r\n        { nameLength >= 20 ?\r\n            <span className = 'warning'>{props.warningLengthMax}</span> : null\r\n        }\r\n        {\r\n            isNumber && !validateName ?\r\n            <span className = 'warning'>{props.warningNumber}</span> : null\r\n        }\r\n        <input\r\n            className = {validateName ? 'ready' : 'wrong'}\r\n            value = {props.name}\r\n            onChange = {props.cbValidateName}\r\n            type = 'text'\r\n            placeholder = \"Project name\"\r\n        />\r\n        { !validateType ?\r\n            <span className = 'warning'>{props.warningType}</span> : null\r\n        }\r\n        <select className = 'projectSelect' onChange = {props.cbSelectOption} >\r\n            <option value = 'empty'>--------</option>\r\n            <option value = 'landing'>Landing</option>\r\n        </select>\r\n        <input \r\n            onClick = {props.cbAddNewProject}\r\n            className = 'acceptButton'\r\n            disabled = {disabled}\r\n            type = 'button'\r\n            value = 'Submit'\r\n        />\r\n        <input onClick = {props.cbCancel} type ='button' value = 'Cancel' />\r\n        {props.loading && <Loader mode = 'create' />}\r\n    </div>\r\n    )\r\n}\r\n\r\nCreateProject.propTypes = {\r\n    content: PropTypes.object, // type color className\r\n    warningType: PropTypes.string, // errors\r\n    warningLengthMax: PropTypes.string, // error max length\r\n    warningLengthMin: PropTypes.string, // error min length\r\n    cbValidateName: PropTypes.func.isRequired, // callback validate\r\n    cbAddNewProject: PropTypes.func.isRequired, // callback add new project\r\n}\r\n\r\nexport default CreateProject;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport eventEmitter from '../../../EventEmitter';\r\nimport Icon from '../../Icon/icon';\r\nimport Loader from '../../loading/Loader';\r\n\r\nclass  SearchModal extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        modalSearchMode: PropTypes.string, // search mode\r\n        content: PropTypes.object, // with search data\r\n        cbCancel: PropTypes.func.isRequired, // callback cancel\r\n        cbShowImage: PropTypes.func.isRequired, // callback show image\r\n        cbSetSelectedImage: PropTypes.func.isRequired, // callback show image\r\n    }\r\n\r\n    state = {\r\n        mode: this.props.modalSearchMode,\r\n        items: this.props.images,\r\n    }\r\n\r\n    search = event => {\r\n        /** event search on */\r\n        const value = this.refSearch ? this.refSearch.value : null;\r\n        this.props.cbSearch(event,value, this.props.modalSearchMode);\r\n        event.stopPropagation();\r\n    }\r\n\r\n    refSearch = null;\r\n    refSearchFunc = node => this.refSearch = node;\r\n\r\n    render(){\r\n\r\n        let {content} = this.props;\r\n        return (\r\n            <React.Fragment>\r\n                <div className = 'Modal Modal-search'>\r\n                <h3>\r\n                {this.props.modalSearchMode ? \r\n                    `Search ${this.props.modalSearchMode}` : '' \r\n                }\r\n                </h3>\r\n                { this.props.error ?\r\n                    <span className = 'error'>{content.error}</span> : null\r\n                }\r\n                <div className = 'Modal-search__controllers'>\r\n                    <input ref = {this.refSearchFunc} type = 'text' />\r\n                        <input\r\n                            disabled = {content.dissabled}\r\n                            className = 'acceptButton'\r\n                            type = 'button'\r\n                            value = 'Search'\r\n                            onClick = {this.search}\r\n                        />\r\n                    <input onClick = {this.props.cbCancel} type ='button' value = 'Cancel' />\r\n                </div>\r\n                <div className = 'searchResultBox'>\r\n                    {this.state.items}\r\n                    {this.props.loading ? <Loader type = 'images' /> : null}\r\n                </div>\r\n                </div>\r\n                {  this.props.menuActive ?\r\n                    <div className = 'ActionModalSearch'>\r\n                    <button onClick = {this.props.cbShowImage} className = 'actionModalSearch__view'>\r\n                        <Icon path = '/img/view.png' />\r\n                    </button>\r\n                    <button onClick = {this.props.cbSetSelectedImage} className = 'actionModalSearch__settings'>\r\n                        <Icon path = '/img/settings.png' />\r\n                    </button>\r\n                    </div>\r\n                    : null\r\n                }\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n    componentDidUpdate = (prevProps,prevState) => {\r\n        let {content} = this.props;\r\n        let {content: contentPrev} = prevProps;\r\n        const haveUpdate = (contentPrev.images !== content.images && content.images);\r\n        const isSelected = contentPrev.selectedItem !== content.selectedItem;\r\n        /** update if selected */\r\n        if (haveUpdate || isSelected){\r\n            let _items = this.props.cbMakeImageResultBox(content.images);\r\n            this.setState({\r\n                ...this.state,\r\n                items: [..._items]\r\n            });\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        eventEmitter.emit('EventBlockScroll', 'window');\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        eventEmitter.emit('EventBlockScroll', 'default');\r\n    }\r\n}\r\n\r\nexport default SearchModal;","import React,{Fragment} from 'react';\r\n\r\nimport isFetch from 'isomorphic-fetch';\r\nimport PropTypes from 'prop-types';\r\nimport eventEmitter,{controllerStream} from '../../EventEmitter.js';\r\nimport ImageItem from '../imageViewer/imageItem';\r\n\r\nimport CreateProject from './createProject/createProject';\r\nimport SearchModal from './Search/searchModal';\r\nimport './modal.scss';\r\n\r\n\r\nclass ModalWindow extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        workMode: PropTypes.string.isRequired, /** @Mode for modal */\r\n        cabinetStream: PropTypes.object, /** @Events stream cabinet */\r\n        eventStreamBuild: PropTypes.object, /** @Events stream build */\r\n        idComponent: PropTypes.oneOfType([\r\n            PropTypes.string,\r\n            PropTypes.number\r\n        ]) /** @Id current user project */\r\n    }\r\n\r\n    state = {\r\n        workMode: this.props.workMode,\r\n        loading: false,\r\n        items: [],\r\n        images: {\r\n            loading: false,\r\n            buttonSearchDisabled: false,\r\n            selectedItem: null, \r\n            showUrl: null, \r\n            images: [],\r\n            urlFull: null,\r\n            imageBoxView: false, \r\n            iframe: null,\r\n            error: ''\r\n        },\r\n        newProject: {\r\n            validateName: false,\r\n            validateType: false,\r\n            disabled: true,\r\n            name: '',\r\n            type: 'empty'\r\n        },\r\n        imageMenuActive: false,\r\n        warning: {\r\n            lengthMax: 'Max length: 20 laters',\r\n            warningNumber: `Don't use numbers`,\r\n            lengthMin: 'Min length: 4 letters',\r\n            type: 'Select type of webpage',\r\n        }\r\n    }\r\n\r\n    inputSearch = null;\r\n    inputSelect = null;\r\n\r\n    searchData = (event,value, mode) => {\r\n        /** search images or media */\r\n        if (!event.target.value || !value) return;\r\n        this.setState({...this.state, \r\n            images: {\r\n                ...this.state.images,\r\n                loading: true,\r\n                buttonSearchDisabled: true\r\n            }\r\n        });\r\n\r\n        let search = null;\r\n        if (value) search = value;\r\n        else search = this.inputSearch.value;\r\n\r\n        if (mode !== 'media'){\r\n        const modeAPI = 'search/photos/?page=1&per_page=40&query=';\r\n        const api = `https://api.unsplash.com/${modeAPI}`;\r\n \r\n        isFetch(`${api + search}&client_id=${process.env.REACT_APP_UNSPLASH_TOKEN}`)\r\n        .then(response => {\r\n            if (response.ok) return response.json();\r\n            else throw new Error('request invalid');\r\n        })\r\n        .then(response => {\r\n            let {results} = response;\r\n            if (results.length) /** save results */\r\n            this.setState({\r\n                ...this.state,\r\n                images: {\r\n                    ...this.state.images,\r\n                    loading: false,\r\n                    imageBoxView: true,\r\n                    error: '',\r\n                    images: [...results],\r\n                    buttonSearchDisabled: false\r\n                },\r\n            });\r\n            else throw new Error('Photos not found');\r\n        })\r\n        .catch(error => {\r\n            console.error(error.message);\r\n            this.setState({\r\n                ...this.state,\r\n                images: {\r\n                    ...this.state.images,\r\n                    buttonSearchDisabled: false,\r\n                    loading: false,\r\n                    error: error.message},\r\n                imageBoxView: false,\r\n            });\r\n        });\r\n        } else this.searchYouTubeAPI(search);\r\n    }\r\n\r\n\r\n    searchYouTubeAPI = (search) => {\r\n        /** search media */\r\n        const API = `https://www.googleapis.com/youtube/v3/search?part=snippet`;\r\n        const RAITE = `&maxResults=25&order=date&q=${search}`;\r\n        const KEY = `&key=${process.env.REACT_APP_YOUTUBE_SEARCH_TOKEN}`;\r\n        isFetch(API + RAITE + KEY)\r\n        .then(res => {\r\n            if (res.ok)\r\n            return res.json();\r\n            else throw new Error (`Error ${res.status}`);\r\n        })\r\n        .then(res => {\r\n            const arrayItems = [];\r\n            res.items.forEach(item => {\r\n                arrayItems.push({\r\n                    urls: { regular: item.snippet.thumbnails.high.url },\r\n                    videoId: item.id.videoId\r\n                })\r\n            });\r\n            return arrayItems;\r\n        })\r\n        .then(results => {\r\n            this.setState({ /** save results */\r\n                ...this.state,\r\n                images: {\r\n                    ...this.state.images,\r\n                    loading: false,\r\n                    imageBoxView: true,\r\n                    error: '',\r\n                    images: [...results],\r\n                    buttonSearchDisabled: false\r\n                },\r\n            });\r\n        })\r\n        .catch(error => console.error(error));\r\n    }\r\n\r\n    showMenuImage = event => {\r\n        /** tools for show or set content */\r\n        this.setState({\r\n            ...this.state, \r\n            imageMenuActive: true,\r\n            images: {\r\n                ...this.state.images,\r\n                selectedItem: event.id, \r\n                showUrl: event.url,\r\n                urlFull: event.urlFull,\r\n                iframe: event.iframe\r\n\r\n            }\r\n        });\r\n    }\r\n\r\n    showImage = event => {\r\n        /** on viewer */\r\n        const {showUrl, iframe} = this.state.images;\r\n\r\n        this.props.eventStreamBuild.emit(\"EventView\", {\r\n            action: true, \r\n            target: showUrl ? showUrl : null,\r\n            iframe: iframe,\r\n            mode: this.props.modalSearchMode\r\n        });\r\n        event.stopPropagation();\r\n    }\r\n\r\n    setSelectedImage = event => {\r\n        /** set current selected content */\r\n        let data = {...this.state.images};\r\n        if (this.props.modalSearchMode === 'background'){\r\n            controllerStream.emit(`EventSetBackgroundImage${this.props.idComponent}`,data);\r\n            eventEmitter.emit(`EventSetBImageInstumentPanel`,{images: data, mode: this.props.modalSearchMode});\r\n        } else if (this.props.modalSearchMode === 'image'){\r\n            controllerStream.emit(`EventSetCurrentImage${this.props.idComponent}`, data);\r\n            eventEmitter.emit(`EventSetBImageInstumentPanel`, {images: data,  mode: this.props.modalSearchMode });\r\n        } else if (this.props.modalSearchMode === 'media'){\r\n            controllerStream.emit(`EventSetContentMedia${this.props.idComponent}`,{\r\n                    iframe: data.iframe,\r\n                    mode: this.props.modalSearchMode\r\n                }\r\n            );\r\n            eventEmitter.emit(`EventSetIframe`, {iframe: data.iframe});\r\n        }\r\n\r\n        event.stopPropagation();\r\n    };\r\n\r\n    makeImageResultBox = (items) => {\r\n        /** make results */\r\n        if (!items) return null;\r\n        return items.map((item,i) =>{\r\n                return <ImageItem\r\n                            key = {`item${item.videoId}${i}`}\r\n                            id = {i}\r\n                            urlContent = {item.videoId ? item.videoId : null}\r\n                            selected = {this.state.images.selectedItem === i ? true : false} \r\n                            isFull = {false}\r\n                            urls = {item.urls}\r\n                        />\r\n        });\r\n\r\n    }\r\n\r\n    addNewProject = event => {\r\n        /** create new projects modal */\r\n        let mode = this.state[this.state.workMode];\r\n        if (mode.validateType &&  mode.validateName) {\r\n\r\n            this.props.cabinetStream.emit('EventChangeWorkMode',{action: 'default', loading: true});\r\n\r\n            this.props.cabinetStream.emit('EventAddProject',\r\n            {\r\n                title: this.state[this.state.workMode].name,\r\n                type: this.state[this.state.workMode].type\r\n            });\r\n        }\r\n    }\r\n\r\n    selectOption = event => {\r\n        /** type project */\r\n        let inputs = {...this.state[this.state.workMode]};\r\n        inputs.type = event.target.value;\r\n        inputs.validateType = inputs.type !== 'empty';\r\n        inputs.disabled = inputs.validateType && inputs.validateName ? false : true;\r\n        this.setState({\r\n            ...this.state,\r\n            [this.state.workMode]: inputs\r\n        });\r\n    }\r\n\r\n    validateName = event => {\r\n        /** validate name project */\r\n        let inputs = {...this.state[this.state.workMode]};\r\n        inputs.name = event.target.value;\r\n        inputs.validateName = /^\\D{4,20}$/i.test(inputs.name);\r\n        inputs.disabled = inputs.validateType && inputs.validateName ? false : true;\r\n        this.setState({\r\n            ...this.state,\r\n            [this.state.workMode]: inputs\r\n        })\r\n    };\r\n\r\n    cancel = event => {\r\n        /** remove modal */\r\n        if (this.state.workMode === 'Search')\r\n        this.props.eventStreamBuild.emit(\"EventModalSearchOn\", {action: 'offline', mode: null});\r\n        else  this.props.cabinetStream.emit('EventChangeWorkMode',{active: false, action: 'default'});\r\n    }\r\n\r\n    refSelect = (node) => this.inputSelect = node;\r\n    refSearch = node => this.inputSearch = node;\r\n\r\n\r\n\r\n    render(){\r\n           switch (this.state.workMode){\r\n              \r\n            case 'newProject':\r\n                return (\r\n                        <CreateProject\r\n                                content = {this.state[this.state.workMode]}\r\n                                warningType = {this.state.warning.type}\r\n                                warningNumber = {this.state.warning.warningNumber}\r\n                                warningLengthMin = {this.state.warning.lengthMin}\r\n                                warningLengthMax = {this.state.warning.lengthMax}\r\n                                cbValidateName = {this.validateName}\r\n                                cbSelectOption = {this.selectOption}\r\n                                cbAddNewProject = {this.addNewProject}\r\n                                cbCancel = {this.cancel}\r\n                                loading = {this.state.loading}\r\n                        />\r\n                )\r\n            case 'Search':\r\n                    return (\r\n                            <div className = 'searchWrapper'> \r\n                                <SearchModal\r\n                                    content = {this.state.images}\r\n                                    cbCancel = {this.cancel}\r\n                                    menuActive = {this.state.imageMenuActive}\r\n                                    cbMakeImageResultBox = {this.makeImageResultBox}\r\n                                    cbShowImage = {this.showImage}\r\n                                    cbSetSelectedImage = {this.setSelectedImage}\r\n                                    modalSearchMode = {this.props.modalSearchMode}\r\n                                    cbSearch = {this.searchData}\r\n                                    loader = {this.state.loading}\r\n                                />\r\n                            </div>\r\n                    )\r\n\r\n            default: return <Fragment></Fragment>\r\n        }\r\n    }\r\n\r\n    componentDidMount = event => {\r\n        if (this.state.workMode === 'Search')\r\n            eventEmitter.on('EventShowMenuImage', this.showMenuImage);\r\n    }\r\n\r\n    componentWillUnmount = event => {\r\n        if (this.state.workMode === 'Search')\r\n            eventEmitter.off('EventShowMenuImage', this.showMenuImage);\r\n    }\r\n}\r\n\r\nexport default ModalWindow;\r\n\r\n","import {createProjectAction, errorAction} from '../actions';\r\n\r\n\r\nfunction random(min){ /** Generate keys */\r\n    return `${Math.floor(min + Math.random() * (10000-min))}`\r\n}\r\n\r\n\r\nconst middlewareCreateProject = (uid, list, title, type) => async (dispatch,getState, {firebase}) => {\r\n    /** Create new project */\r\n    let lastProject = [...list];\r\n    const lastIndex = lastProject.length  ? lastProject[lastProject.length-1].id + 1 : 0;\r\n    const sectionsProject = [];\r\n    if (type === 'portfolio') sectionsProject.push(\"Header\");\r\n    else sectionsProject.push(\"Header\");\r\n    const header = {\r\n        backgroundImage: null,\r\n        backgroundColor: null,\r\n        id: `MainBackgroundHeader${random(0)}`,\r\n        targetSection: \"Header\",\r\n        type: \"background\"\r\n    }\r\n\r\n    lastProject.push({\r\n        id: lastIndex,\r\n        title: title,\r\n        type: type,\r\n        components: [header],\r\n        sectionsProject: [...sectionsProject],\r\n    });\r\n    /** Load project in database */\r\n    await firebase.db.collection(\"users\").doc(uid).update({\r\n        'projects': lastProject,\r\n    })\r\n    .then (() => dispatch(createProjectAction(lastProject)))\r\n    .catch(error => {\r\n        console.error(error.message);\r\n        dispatch(errorAction(error.message));\r\n    })\r\n};\r\n\r\nexport {\r\n    middlewareCreateProject\r\n}","import React, {useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {withRouter, Redirect} from 'react-router-dom';\r\n\r\nfunction Item(props) {\r\n    /** Project item in cabinet */\r\n    const [path] = useState( `/Cabinet/Build/${props.id}`);\r\n    const [productionPath] = useState(`/Cabinet/Build/${props.id}/Production/`);\r\n\r\n    let [canBuild,setCanBuild] = useState(false);\r\n    let [canProd, setCanProd] = useState(false);\r\n\r\n    const [id] = useState(props.id);\r\n    const [name] = useState(props.name);\r\n    const [type] = useState(props.type);\r\n\r\n\r\n    const build = event => {\r\n        if(props.location.pathname !== path)\r\n            setCanBuild(true);\r\n        event.stopPropagation();\r\n    };\r\n\r\n    const showProduction = event => {\r\n        if(props.location.pathname !== path)\r\n        setCanProd(true);\r\n        event.stopPropagation();\r\n    };\r\n\r\n    const deleteItem = event => {\r\n        props.cabinetStream.emit('EventDeleteItem',{\r\n            id: props.id,\r\n            name: props.name,\r\n            type: props.type\r\n        });\r\n        event.stopPropagation();\r\n    };\r\n\r\n\r\n    if (canBuild) return <Redirect to = {path} />\r\n    else if (canProd) return <Redirect to = {productionPath} />\r\n    else return (\r\n            <div className = 'item' data-id = {id}>\r\n                <p className = 'ProjectName'>{name}</p>\r\n                <p className = 'ProjectType'>{type}</p>\r\n                <div className = 'projectController'>\r\n                    <input \r\n                        onClick = {build} \r\n                        className = 'projectControllerButton_enter' \r\n                        type = 'button' \r\n                        value = 'enter build' />\r\n                    <input onClick = {deleteItem} \r\n                        className = 'projectControllerButton_delete' \r\n                        type = 'button' \r\n                        value = 'delete' />\r\n                </div>\r\n                <input onClick = {showProduction} \r\n                    className = 'productionButton' \r\n                    type = 'button' \r\n                    value = 'Production' />\r\n            </div>\r\n        )\r\n}\r\n\r\nItem.propTypes = {\r\n    id: PropTypes.number.isRequired, // id item\r\n    name: PropTypes.string.isRequired, // item name\r\n    type: PropTypes.string.isRequired, // item type\r\n}\r\n\r\nexport default withRouter(Item);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport {middlewareCreateProject} from '../../redux/middleware/createProjectMiddleware';\r\n// import {CSSTransition, TransitionGroup} from 'react-transition-group';\r\nimport './list.scss';\r\n\r\nimport Item from './Item';\r\n\r\nclass List extends React.PureComponent {\r\n    /** List of projects items in cabinet */\r\n    static propTypes = {\r\n        dispatch: PropTypes.func.isRequired, /** @dispatch redux */\r\n        idUser: PropTypes.string.isRequired, /** @UID current user */\r\n        list: PropTypes.array.isRequired, /** @List user projects */\r\n    }\r\n\r\n    state = {\r\n        redirect: false,\r\n    }\r\n\r\n    addNewProject = (item) => {\r\n        if (this.props.idUser) {\r\n            this.props.dispatch(middlewareCreateProject(\r\n                    this.props.idUser,\r\n                    this.props.list,\r\n                    item.title,\r\n                    item.type\r\n                ));\r\n        } else this.setState({...this.state, redirect: true});\r\n    }\r\n\r\n\r\n    makeList = (list) => {\r\n\r\n        return list.map (project => {\r\n\r\n            return(\r\n                <Item\r\n                    key = {project.id}\r\n                    id = {project.id}\r\n                    name = {project.title}\r\n                    type = {project.type}\r\n                    cabinetStream = {this.props.cabinetStream}\r\n                />\r\n            )\r\n        });\r\n    }\r\n\r\n    render(){\r\n        if (this.state.redirect)\r\n            return <Redirect to = { '/'} />\r\n            else return (\r\n                    <div className = 'projectsList__list'>\r\n                        {this.makeList([...this.props.list])}\r\n                    </div>\r\n                )\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.props.cabinetStream.on('EventAddProject',this.addNewProject);\r\n    }\r\n\r\n      componentWillUnmount = () => {\r\n        this.props.cabinetStream.off('EventAddProject',this.addNewProject);\r\n      }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        idUser: state.cabinet.idUser,\r\n        list: [...state.cabinet.projects]\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(List);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport List from '../List/List.jsx';\r\nimport './ProjectsSection.scss';\r\n\r\nconst ProjectsSection = props => {\r\n        return (\r\n            <section className = 'projectsList'>\r\n                <div className = 'container'>\r\n                    <div className = 'flex-column'>\r\n                        <div className = 'projectsList__box'>\r\n                            <h3>Your Projects</h3>\r\n                        </div>\r\n                        <List cabinetStream = {props.cabinetStream} />\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        )\r\n\r\n}\r\n\r\nProjectsSection.propTypes = {\r\n    cabinetStream: PropTypes.object /** @Events stream */\r\n}\r\n\r\nexport default ProjectsSection;","import React,{Fragment} from 'react';\nimport PropTypes from 'prop-types';\nimport {connect} from 'react-redux';\nimport {Redirect} from 'react-router-dom';\nimport {CSSTransition} from 'react-transition-group';\n/* ------- Event stream ------- */\nimport Events from 'events';\n/* ------- HOC for het firebase controll object ------- */\nimport withFirebase from '../../components/withFirebase';\n/* ------- Moddlewares ------- */\nimport {middlewareLogOutUser} from '../../redux/middleware/loadUserMiddleware';\nimport middlewareDelete from '../../redux/middleware/middlewareDelete';\n/* ------- Child components ------- */\nimport Loader from '../../components/loading/Loader';\nimport Header from '../../components/header/Header';\nimport Modal from '../../components/modalWindow/ModalWindow';\nimport ProjectsSection from '../../components/ProjectsSection/ProjectsSection';\nimport './Cabinet.scss';\n\nclass Cabinet extends React.PureComponent {\n\n\tstatic propTypes = {\n\t\tfirebase: PropTypes.object.isRequired, /** @firebase class for use firebase functions */\n\t\tactive: PropTypes.bool, /** @active - status firebase auth */\n\t\tdispatch: PropTypes.func.isRequired, /** @dispatch - redux */\n\t\thistory: PropTypes.object.isRequired, /** @Router HTML5 history */\n\t\tlocation: PropTypes.object.isRequired, /** @Router */\n\t\tmatch: PropTypes.object.isRequired, /** @Router */\n\t\tidUser: PropTypes.string, /** @Session user id from redux */\n\t\tprojects: PropTypes.arrayOf(PropTypes.object).isRequired /** @Projects array with user projects from redux */\n\t}\n\n\tcabinetStream = new Events();\n\n\tstate = {\n\t\tloader: false,\n\t\tmodalActive: false,\n\t\tworkMode: 'default',\n\t}\n\n\tlogOut = () => {\n\t\t/** destroy session */\n\t\tthis.props.dispatch(middlewareLogOutUser(this.props.idUser));\n\t}\n\n\tdeletItem = event => {\n\t\t/** destroy project */\n\t\tthis.setState({\n\t\t\t...this.state,\n\t\t\tloader: true,\n\t\t});\n\t\tthis.props.dispatch(middlewareDelete({...event, uid: this.props.firebase.getCurrentUser().uid}));\n\t};\n\n\t\tchangeWorkMode = event => {\n\t\t/** workMode changes */\n\t\t\tthis.setState ({\n\t\t\t...this.state,\n\t\t\tmodalActive: event.active,\n\t\t\tworkMode: event.action,\n\t\t\tloader: event.loading || false,\n\t\t\t});\n\t\t}\n\n\n\trender(){\n\t\tif (this.props.active){\n\t\treturn (\n\t\t<Fragment>\n\t\t\t\t<Header cabinetStream = {this.cabinetStream} \n\t\t\t\t\ttitle = {this.props.config.title} \n\t\t\t\t\tidUser = {this.props.idUser} \n\t\t\t\t/>\n\t\t\t\t<div className = 'Cabinet'>\n\t\t\t\t{this.state.loader &&\n\t\t\t\t\t<Loader\n\t\t\t\t\tmode = 'abinet_action_loader'\n\t\t\t\t\ttype = 'data'\n\t\t\t\t\tpath = '/img/loading.gif'\n\t\t\t\t\t/>\n\t\t\t\t}\n\t\t\t\t<CSSTransition\n\t\t\t\t\tin={this.state.modalActive}\n\t\t\t\t\ttimeout={300}\n\t\t\t\t\tclassNames=\"modalAnimation\"\n\t\t\t\t\tunmountOnExit\n\t\t\t\t\tappear\n\t\t\t\t>\n\t\t\t\t<Modal\n\t\t\t\t\tcabinetStream = {this.cabinetStream}\n\t\t\t\t\tworkMode = {this.state.workMode} \n\t\t\t\t/>\n\t\t\t\t</CSSTransition>\n\t\t\t\t<ProjectsSection cabinetStream = {this.cabinetStream} />\n\t\t\t\t</div>\n\t\t\t</Fragment>\n\t\t)\n\t\t} else if (!this.props.firebase.getCurrentUser()) return <Redirect to = { '/'} />\n\t\telse return <Loader path = '/img/loading.gif' type = 'Cabinet' />\n\t}\n\n\tcomponentDidUpdate = (prevProps) => {\n\t\tif (prevProps.projects.length !== this.props.projects.length)\n\t\t\tthis.setState({\n\t\t\t\t...this.state,\n\t\t\t\tloader: false,\n\t\t\t});\n\t}\n\n\n\tcomponentDidMount = () => {\n\t\tthis.cabinetStream.on('EventDeleteItem', this.deletItem);\n\t\tthis.cabinetStream.on('EventChangeWorkMode', this.changeWorkMode);\n\t};\n\n\tcomponentWillUnmount = () => {\n\t\tthis.cabinetStream.off('EventDeleteItem', this.deletItem);\n\t\tthis.cabinetStream.off('EventChangeWorkMode', this.changeWorkMode);\n\t}\n}\n\n\tconst mapStateToProps = (state) => {\n\treturn {\n\t\tidUser: state.cabinet.idUser,\n\t\tprojects: [...state.cabinet.projects],\n\t\tactive: state.cabinet.active\n\t}\n\t};\n\n\texport default connect(mapStateToProps)(withFirebase(Cabinet));\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport eventEmitter,{controllerStream} from '../../../EventEmitter';\r\nimport styled from 'styled-components';\r\n\r\n\r\nconst Background = styled.div`\r\n    position: relative;\r\n    width: ${props => props.width || '100%'};\r\n    height: ${props => props.height || '100%'};\r\n    background-color: ${props => props.backgroundColor};\r\n    ${props => props.backgroundImage ? `background-image: url(${props.backgroundImage});` : null}\r\n    background-size: cover;\r\n`;\r\n\r\nclass BackgroundComponent extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        id: PropTypes.string.isRequired,\r\n        targetSection: PropTypes.string,\r\n        background: PropTypes.string,\r\n        backgroundImage: PropTypes.string,\r\n        width: PropTypes.string,\r\n        height: PropTypes.string,\r\n        sectionNumber: PropTypes.number,\r\n        mode: PropTypes.string.isRequired\r\n    };\r\n\r\n    state = {\r\n        id: this.props.id,\r\n        targetSection: this.props.targetSection,\r\n        backgroundColor: this.props.background || this.props.color,\r\n        backgroundImage: this.props.backgroundImage,\r\n        width: this.props.width,\r\n        height: this.props.height\r\n    };\r\n\r\n    boxComponent = null; // ref\r\n    boxComponentRef = node => this.boxComponent = node;\r\n\r\n    saveDataParent = () => {\r\n        /** \"memorize\" paren sizes  */\r\n        let boxInform =  this.boxComponent.getBoundingClientRect();\r\n        controllerStream.emit(`EventSaveWidth${this.state.targetSection}`,{\r\n            countSection: this.props.countSection,\r\n            sectionNumber: this.props.sectionNumber,\r\n            size: {width: boxInform.width, height: boxInform.height}\r\n        });\r\n    };\r\n\r\n    openBgInstruments = event => {\r\n        /** open panel instrument trigger */\r\n        const componentsPatternBackground = {\r\n            id: this.state.id,\r\n            targetSection: this.state.targetSection,\r\n            type: 'background',\r\n            backgroundColor: this.state.backgroundColor,\r\n            backgroundImage: this.state.backgroundImage,\r\n        }\r\n        eventEmitter.emit('EventInstrumentPanel',{\r\n            componentStats: componentsPatternBackground,\r\n            targetSection: this.state.targetSection,\r\n            type: 'background',\r\n            id: this.state.id,\r\n        });\r\n        event.stopPropagation();\r\n    };\r\n\r\n    changeColor = eventItem => {\r\n         /** change bg color */\r\n        this.setState({\r\n            ...this.state,\r\n            backgroundColor: eventItem.colorRGB\r\n        });\r\n    };\r\n\r\n    setBackgroundImage = event => {\r\n         /** change bg image */\r\n        const {urlFull} = event;\r\n        this.setState({\r\n            ...this.state,\r\n            backgroundImage: urlFull,\r\n        });\r\n    };\r\n\r\n    render(){\r\n            if (this.props.mode === 'dev'){\r\n        return (\r\n            <Background\r\n                key = {this.state.id}\r\n                ref  = {this.boxComponentRef}\r\n                onDoubleClick={this.openBgInstruments}\r\n                data-name = {this.state.targetSection}\r\n                backgroundColor = {this.state.backgroundColor}\r\n                backgroundImage = {this.state.backgroundImage}\r\n                width = {this.state.width}\r\n                height = {this.state.height}\r\n            >\r\n                {this.props.children}\r\n            </Background>\r\n        )\r\n    } else if (this.props.mode === 'production'){\r\n\r\n        return (\r\n            <Background\r\n                key = {this.state.id}\r\n                ref  = {this.boxComponentRef}\r\n                data-name = {this.state.targetSection}\r\n                backgroundColor = {this.state.backgroundColor}\r\n                backgroundImage = {this.state.backgroundImage}\r\n                width = {this.state.width}\r\n                height = {this.state.height}\r\n            >\r\n            {this.props.children}\r\n            </Background>\r\n        )\r\n    }\r\n\r\n    }\r\n\r\n    componentDidUpdate = () => {\r\n        this.saveDataParent();\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.saveDataParent();\r\n        controllerStream.on(`EventChangeColorBackground${this.state.id}`, this.changeColor);\r\n        controllerStream.on(`EventSetBackgroundImage${this.state.id}`, this.setBackgroundImage);\r\n    };\r\n\r\n    componentWillUnmount = () => {\r\n        controllerStream.off(`EventChangeColorBackground${this.state.id}`, this.changeColor);\r\n        controllerStream.off(`EventSetBackgroundImage${this.state.id}`, this.setBackgroundImage);\r\n    };\r\n};\r\n\r\n\r\n\r\nexport default BackgroundComponent;","import React, {Fragment} from 'react';\r\nimport eventEmitter from '../../../EventEmitter';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport BackgroundComponent from '../components/Background';\r\nimport Loader from '../../loading/Loader';\r\n\r\nimport './MainBackground.scss';\r\n\r\nclass MainBackground extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        countComponents: PropTypes.number.isRequired, /** @Number last project */\r\n        menuActive: PropTypes.bool, /** @Bool active menu or unactive */\r\n        id: PropTypes.string.isRequired, /** @id current project */\r\n    };\r\n\r\n    state = {\r\n        targetSection: this.props.id,\r\n        editRedy: false,\r\n        component: null,\r\n        children: null,\r\n    };\r\n\r\n    changeMode = () => {\r\n        if (!this.state.editStart || this.props.id !== this.props.editComponentName) {\r\n            this.setState({\r\n                ...this.state,\r\n                editStart: true\r\n            }, () =>\r\n            eventEmitter.emit('EventModeEdit', {\r\n                ...this.state,\r\n                editStart: true,\r\n                targetSection: this.state.targetSection,\r\n            }));\r\n        }\r\n    };\r\n\r\n    refSection = null;\r\n    refSectionFunc = node => node ? this.refSection = {data: node.getBoundingClientRect(), node: node} : node;\r\n\r\n    render() {\r\n\r\n        if (this.props.mode === 'dev' && this.state.component){\r\n            return (\r\n                <Fragment>\r\n                    <section\r\n                        key = {this.props.sectionNumber + this.props.keyMain}\r\n                        className = {`element${this.props.sectionNumber}`} \r\n                        ref={this.refSectionFunc}\r\n                        data-class = 'editable' \r\n                        onClick = {this.changeMode}\r\n                    >\r\n                        <BackgroundComponent \r\n                            key = {this.props.sectionNumber + this.props.keyMain}\r\n                            mode = {this.props.mode}\r\n                            sectionNumber = {this.props.sectionNumber}\r\n                            countSection = {this.props.countSection}\r\n                            {...this.state.component}\r\n                        >\r\n                            {this.state.children || null}\r\n                        </BackgroundComponent>\r\n                        {!this.state.editStart &&\r\n                            <div className = 'warningEdit'><p>Click for start edit</p></div>\r\n                        }\r\n                    </section>\r\n                </Fragment>\r\n            );\r\n        } else if (this.props.mode === 'production' && this.state.component){\r\n            return (\r\n                <Fragment>\r\n                    <section \r\n                        key = {this.props.sectionNumber}\r\n                        ref={this.refSectionFunc} \r\n                        data-class = 'production'\r\n                    >\r\n                        <BackgroundComponent\r\n                            key = {this.props.sectionNumber}\r\n                            mode = {this.props.mode}\r\n                            sectionNumber = {this.props.sectionNumber}\r\n                            {...this.state.component}\r\n                        >\r\n                        {this.state.children || null}\r\n                        </BackgroundComponent>\r\n                    </section>\r\n                </Fragment>\r\n            );\r\n        }\r\n        else return <Loader type = {`${this.props.mode} components`} />;\r\n    }\r\n\r\n\r\n    componentDidMount = () => {\r\n        if (!this.state.component){ /** create bg */\r\n            let component = this.props.currentProjectsData.components.find(item =>\r\n                                            item.targetSection === this.props.id);\r\n            const children = this.props.componentJSX.filter(item => \r\n                item.targetSection === this.props.id && item.id !== component.id)\r\n                            .map(item => item.component);\r\n           this.setState({\r\n               ...this.state,\r\n               component: component,\r\n               children: children,\r\n           });\r\n        }\r\n    }\r\n\r\n    componentDidUpdate = (prevProps) => {\r\n        const needUpdate = this.props.countComponents !== prevProps.countComponents;\r\n        if (!this.state.component){ /** if need create new section */\r\n            let component = this.props.currentProjectsData.components.find(item =>\r\n                                            item.targetSection === this.props.id);\r\n            const children = this.props.componentJSX.filter(item => item.targetSection === this.props.id)\r\n                            .map(item => item.component);\r\n           this.setState({\r\n               ...this.state,\r\n               component: component,\r\n               children: children,\r\n           });\r\n        }\r\n        if (needUpdate){\r\n            const children = this.props.componentJSX.filter(item => item.targetSection === this.props.id)\r\n            children && this.setState({...this.state,children: children.map(item => item.component) });\r\n        }\r\n    }\r\n}\r\nexport default MainBackground;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport MainBackground from './MainBackground/MainBackground';\r\n\r\n\r\nconst Section = props => {\r\n    if (props.mode === 'dev'){\r\n\r\n    const currentProjectsData = props.userData.projects.find(item => {\r\n        return item.id === props.keyMain;\r\n    })\r\n    const section = currentProjectsData.sectionsProject;\r\n\r\n\r\n            return section.map((item,i) => {\r\n                return (\r\n                        <MainBackground\r\n                            key = {item + props.keyMain}\r\n                            componentJSX = {props.componentJSX}\r\n                            currentProjectsData = {currentProjectsData}\r\n                            editComponentName = {props.editComponentName}\r\n                            countComponents = {props.componentJSX.length}\r\n                            menuActive = {props.menuActive}\r\n                            sizeParentBox = {props.sizeParentBox}\r\n                            id = {item}\r\n                            countSection = {currentProjectsData.sectionsProject.length}\r\n                            sectionNumber = {i}\r\n                            mode = {props.mode}\r\n                        />\r\n                );\r\n            });\r\n    } else if (props.mode === 'production'){\r\n       const {section} = props;\r\n       const {currentProjectsData} = props;\r\n        return section.map((item,i) => {\r\n            return (\r\n                    <MainBackground\r\n                        key = {item + props.keyMain}\r\n                        keyMain = {props.keyMain}\r\n                        componentJSX = {props.componentsProdJSX}\r\n                        currentProjectsData = {currentProjectsData}\r\n                        editComponentName = {props.editComponentName}\r\n                        countComponents = {props.componentsProdJSX.length}\r\n                        sizeParentBox = {props.sizeParentBox}\r\n                        id = {item}\r\n                        sectionNumber = {i}\r\n                        mode = {props.mode}\r\n                    />\r\n            );\r\n        });\r\n    }\r\n}\r\n\r\nSection.propTypes = {\r\n    componentJSX: PropTypes.array, /// array with jsx components\r\n    editComponentName: PropTypes.string, // name current edit component\r\n    menuActive: PropTypes.bool, // build menu\r\n    mode: PropTypes.string.isRequired, // curent mode\r\n    sizeParentBox: PropTypes.object, // data with size main component\r\n    userData: PropTypes.object // users data\r\n}\r\n\r\nexport default Section;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport eventEmitter,{controllerStream} from '../../../EventEmitter';\r\nimport styled from 'styled-components';\r\n\r\n\r\nconst InputComponent = styled.input.attrs(props => {\r\n    if (props.mode !== 'production')\r\n    return ({\r\n        style: {\r\n            zIndex: props.indexZ ? '9999' : null,\r\n            left: props.coordX ? props.coordX : '45%',\r\n            top:  props.coordY ? props.coordY : '0%',\r\n        }\r\n    })\r\n})`\r\n    width: ${props => props.size ? props.size.w + 'px' : null};\r\n    color: white;\r\n    height: ${props => props.size ? props.size.h + 'px' : null};\r\n    font-size: ${props => props.fontSize ? props.fontSize + 'px' : null};\r\n    position: absolute;\r\n    background-color: ${props => props.color || null};\r\n    border: ${props => `1px solid ${props.color}`};\r\n    border-radius: ${props => props.borderRadius ? props.borderRadius + 'px' : null};\r\n    white-space: normal;\r\n    font-weight: bold;\r\n    transition: .3s transform linear;\r\n\r\n    :active {\r\n        border: ${props =>`2px dotted ${props.color}`};\r\n        transform: scale(1.05);\r\n    }\r\n`;\r\n\r\nconst ProductionStyle = styled(InputComponent)`\r\n    left: ${props => props.coordX ? props.coordX : '45%'};\r\n    top:  ${props => props.coordY ? props.coordY : '0%'};\r\n`;\r\n\r\n\r\nclass Input extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        id: PropTypes.oneOfType([\r\n            PropTypes.string,\r\n            PropTypes.number\r\n        ]).isRequired,\r\n        targetSection: PropTypes.string,\r\n        sizeParentBox: PropTypes.object,\r\n    }\r\n\r\n    state = {\r\n        id: this.props.id,\r\n        istrumentsActive: false,\r\n        getSizeBool: false,\r\n        countSection: 0,\r\n        borderRadius: this.props.borderRadius,\r\n        sectionNumber: 0,\r\n        typeInput: this.props.typeInput || 'button',\r\n        sizeParentBox: this.props.sizeParentBox,\r\n        targetSection: this.props.targetSection,\r\n        size: this.props.size && this.props.size.w ? this.props.size : {w: '100', h:'50'},\r\n        fontSize: this.props.fontSize || 20,\r\n        color: this.props.color || null,\r\n        shiftCoords: null,\r\n        content: this.props.content || 'Input',\r\n        posInput: this.props.coords.x ? {x: this.props.coords.x, y: this.props.coords.y} : null,\r\n        startDragNdrop: false,\r\n    }\r\n\r\n    openInputInstruments = event => {\r\n\r\n        const componentsPatternImage = {\r\n            id: this.state.id,\r\n            targetSection: this.state.targetSection,\r\n            typeInput: this.state.typeInput,\r\n            type: 'input',\r\n            color: this.state.color,\r\n            borderRadius: this.state.borderRadius,\r\n            zIndex: null,\r\n            size: {...this.state.size},\r\n            fontSize: this.state.fontSize,\r\n            content: this.state.content,\r\n            coords: {...this.state.posInput}, // x, y\r\n        }\r\n\r\n        eventEmitter.emit(`EventInstrumentPanel`,{\r\n            componentStats: componentsPatternImage,\r\n            targetSection: this.state.targetSection,\r\n            id: this.state.id,\r\n            sizeTextValue: this.state.size\r\n        });\r\n        this.setState({...this.state, istrumentsActive: true});\r\n        event.stopPropagation();\r\n    };\r\n\r\n    saveCoords = event => {\r\n        if (event.nativeEvent.which !== 1) return false;\r\n        const element = this.refInput.getBoundingClientRect();\r\n\r\n        const cords = {\r\n            left: element.left,\r\n            top: element.top,\r\n            width: element.right - element.left,\r\n            height: element.bottom - element.top\r\n        }\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            shiftCoords: {x: event.clientX - cords.left, y: event.clientY - cords.top},\r\n            startDragNdrop: !this.state.startDragNdrop ? true : false\r\n        });\r\n\r\n        event.stopPropagation();\r\n    };\r\n\r\n    changeSize = eventSize => {\r\n        this.setState({...this.state, size: eventSize.size});\r\n    };\r\n\r\n    changeColor = colorRGB => {\r\n\r\n        if (typeof colorRGB === 'string')\r\n            this.setState({\r\n                ...this.state,\r\n                color: colorRGB\r\n            });\r\n    };\r\n\r\n    changeSizeText = eventSize => {\r\n        this.setState({...this.state, fontSize: eventSize.size});\r\n    };\r\n\r\n    setBorderRadius = eventItem => {\r\n        let radius = eventItem.borderRadius > 200 ? 200 : eventItem.borderRadius;\r\n        radius = eventItem.borderDown < 0 ? 0 : eventItem.borderRadius;\r\n            this.setState({\r\n                ...this.state,\r\n                borderRadius: radius\r\n            });\r\n    };\r\n\r\n    changeContent = eventItem => {\r\n        let booldContent = eventItem.content || eventItem.content === '';\r\n        if (booldContent)\r\n            this.setState({\r\n                ...this.state,\r\n                content: eventItem.content\r\n            });\r\n    }\r\n\r\n\r\n\r\n    checkPivotPosition = (coordX, coordY) => {\r\n\r\n        const element = this.refInput.getBoundingClientRect();\r\n        const borderTopLeft = 0;\r\n        const borderDown = 800 - element.height;\r\n        const borderRight = this.props.sizeParentBox.width - element.width;\r\n\r\n        if (coordY < borderTopLeft) coordY = borderTopLeft;\r\n        if (coordY > borderDown) coordY = borderDown;\r\n        if (coordX < borderTopLeft) coordX = borderTopLeft;\r\n        if (coordX > borderRight) coordX = borderRight;\r\n\r\n        return {x: coordX, y: coordY};\r\n    }\r\n\r\n\r\n    move = (x,y) => this.setState({...this.state, posInput: {x: x, y: y}});\r\n\r\n    moveInput = event => {\r\n\r\n        if (this.state.startDragNdrop && this.state.istrumentsActive){\r\n            let num = this.state.sectionNumber;\r\n            if (this.state.sectionNumber === 1 && this.state.countSection-1 === this.state.sectionNumber)  \r\n                num = this.state.sectionNumber + 1;\r\n            let xItem = event.clientX - (this.props.sizeParentBox.left  * num);\r\n            let yItem = event.clientY - (this.props.sizeParentBox.top * num);\r\n\r\n            let coordX = xItem - this.state.shiftCoords.x;\r\n            let coordY = yItem - this.state.shiftCoords.y;\r\n\r\n            let coords = this.checkPivotPosition(coordX,coordY);\r\n\r\n            let convertToPercentX = coords.x * 100 / this.state.sizeParentBox.width;\r\n            let convertToPercentY = coords.y * 100 / this.state.sizeParentBox.height;\r\n\r\n            this.move(convertToPercentX.toFixed(2) + '%',\r\n                      convertToPercentY.toFixed(2) + '%');\r\n    }\r\n        event.stopPropagation();\r\n    };\r\n\r\n    stopDragNdrop = event => {\r\n        if (this.state.startDragNdrop) {\r\n            this.setState({...this.state, startDragNdrop: false})\r\n            controllerStream.emit(`EventUpdatePosition${this.state.id}`, this.state.posInput);\r\n        }\r\n        event.stopPropagation();\r\n    };\r\n    //currentProjectsData.sectionsProject.length\r\n\r\n    saveSize = event => {\r\n        const {size} = event;\r\n        if (!this.state.getSizeBool){\r\n        this.setState({\r\n            ...this.state,\r\n            getSizeBool: true,\r\n            countSection: event.countSection,\r\n            sectionNumber: event.sectionNumber,\r\n            sizeParentBox: {width: size.width, height: size.height}});\r\n        } else controllerStream.off(`EventSaveWidth${this.state.targetSection}`,this.saveSize);\r\n    }\r\n\r\n    setWidth = eventItem => {\r\n        const {width} = eventItem;\r\n        this.setState({...this.state, \r\n            size: {\r\n                ...this.state.size,\r\n                w: width,\r\n            }\r\n        });\r\n    }\r\n\r\n    setType = eventItem => {\r\n        this.setState({\r\n            ...this.state, \r\n            typeInput: eventItem\r\n        });\r\n    }\r\n\r\n    setHeight = eventItem => {\r\n        const {height} = eventItem;\r\n        this.setState({...this.state, \r\n            size: {\r\n                ...this.state.size,\r\n                h: height,\r\n            }\r\n        });\r\n    }\r\n\r\n    refInput = null;\r\n    refInputComponent = node => this.refInput = node;\r\n\r\n    render(){\r\n\r\n        if (this.props.mode === 'dev'){\r\n            return (\r\n                <InputComponent\r\n                    type = {this.state.typeInput}\r\n                    value = {this.state.content}\r\n                    ref = {this.refInputComponent}\r\n                    size = {this.state.size}\r\n                    color = {this.state.color}\r\n                    borderRadius = {this.state.borderRadius}\r\n                    fontSize = {this.state.fontSize}\r\n                    onClick = {this.openInputInstruments}\r\n                    onMouseDown = {this.saveCoords}\r\n                    onMouseMove= {this.moveInput}\r\n                    onMouseLeave = {this.stopDragNdrop}\r\n                    onMouseUp = {this.stopDragNdrop}\r\n                    onDragStart = {this.stop}\r\n                    coordX = {this.state.posInput ? this.state.posInput.x : null}\r\n                    coordY = {this.state.posInput ? this.state.posInput.y : null}\r\n                    indexZ = {this.state.startDragNdrop}\r\n                    data-imagecomponentwrapper\r\n                />\r\n            )\r\n        } else if (this.props.mode === 'production'){\r\n\r\n            return (\r\n                <ProductionStyle\r\n                    type = {this.state.typeInput}\r\n                    value = {this.state.content}\r\n                    ref = {this.refInputComponent}\r\n                    size = {this.state.size}\r\n                    color = {this.state.color}\r\n                    fontSize = {this.state.fontSize}\r\n                    borderRadius = {this.state.borderRadius}\r\n                    coordX = {this.state.posInput ? this.state.posInput.x : null}\r\n                    coordY = {this.state.posInput ? this.state.posInput.y : null}\r\n                    indexZ = {this.state.startDragNdrop}\r\n                    mode = {this.props.mode}\r\n                />\r\n            )\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        controllerStream.on(`EventSaveWidth${this.state.targetSection}`, this.saveSize);\r\n        controllerStream.on(`EventSetBorderRadius${this.state.id}`, this.setBorderRadius);\r\n        controllerStream.on(`EventChangecolor${this.state.id}`, this.changeColor);\r\n        controllerStream.on(`EventChangeSize${this.state.id}`, this.changeSize);\r\n        controllerStream.on(`EventChangeSizeText${this.state.id}`, this.changeSizeText);\r\n        controllerStream.on(`EventChangeContentText${this.state.id}`, this.changeContent);\r\n        controllerStream.on(`EventSetWidth${this.state.id}`, this.setWidth);\r\n        controllerStream.on(`EventSetType${this.state.id}`, this.setType);\r\n        controllerStream.on(`EventSetHeight${this.state.id}`, this.setHeight);\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        controllerStream.off(`EventSaveWidth${this.state.targetSection}`,this.saveSize);\r\n        controllerStream.off(`EventSetBorderRadius${this.state.id}`, this.setBorderRadius);\r\n        controllerStream.off(`EventChangeSize${this.state.id}`, this.changeSize);\r\n        controllerStream.off(`EventChangeSizeText${this.state.id}`, this.changeSizeText);\r\n        controllerStream.off(`EventChangeContentText${this.state.id}`, this.changeContent);\r\n        controllerStream.off(`EventChangecolor${this.state.id}`, this.changeColor);\r\n        controllerStream.off(`EventSetWidth${this.state.id}`, this.setWidth);\r\n        controllerStream.off(`EventSetType${this.state.id}`, this.setType);\r\n        controllerStream.off(`EventSetHeight${this.state.id}`, this.setHeight);\r\n    }\r\n}\r\n\r\nexport default Input;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport eventEmitter,{controllerStream} from '../../../EventEmitter';\r\nimport styled from 'styled-components';\r\n\r\nconst WrapperMedia = styled.div.attrs(props => {\r\n    if (props.mode !== 'production')\r\n    return ({\r\n        style: {\r\n            zIndex: props.indexZ ? '9999' : null,\r\n            left: props.coordX ? props.coordX : '45%',\r\n            top:  props.coordY ? props.coordY : '0%',\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            padding: props.mode === 'dev' ? '40px' : null\r\n        }\r\n    })\r\n})`\r\n    width: ${props => props.size.w ? props.size.w + '%' : '30%'};\r\n    height: ${props => props.size.h ? props.size.h + '%' : '50%'};\r\n    position: absolute;\r\n    background: ${props => props.mode === 'dev' ? `url(${process.env.PUBLIC_URL}/img/media.svg)` : null};\r\n    background-size: cover;\r\n    border: ${props => props.mode === 'dev' ? `1px solid red` : null};\r\n    padding: 10px;\r\n`;\r\nconst Media = styled.iframe`\r\n    width: 100%;\r\n    height: 100%;\r\n    z-index: ${props => props.zIndex ? '0' : '-1'};\r\n`;\r\n\r\nconst ProductionStyle = styled(WrapperMedia)`\r\n    left: ${props => props.coordX ? props.coordX : '45%'};\r\n    top:  ${props => props.coordY ? props.coordY : '0%'};\r\n`;\r\n\r\nclass MediaComponent extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        id: PropTypes.oneOfType([\r\n            PropTypes.string,\r\n            PropTypes.number\r\n        ]).isRequired,\r\n        targetSection: PropTypes.string,\r\n        sizeParentBox: PropTypes.object,\r\n        content: PropTypes.string,\r\n    }\r\n\r\n    state = {\r\n        targetSection: this.props.targetSection,\r\n        id : this.props.id,\r\n        sizeParentBox: this.props.sizeParentBox,\r\n        shiftCoords: null,\r\n        countSection: 0,\r\n        size: this.props.size ? this.props.size : {w: null, h: null},\r\n        posMedia: this.props.coords.x ? {x: this.props.coords.x, y: this.props.coords.y} : null,\r\n        startDragNdrop: false,\r\n        istrumentsActive: false,\r\n        drawContent: false,\r\n        sectionNumber: this.props.sectionNumber,\r\n        content: this.props.content ? this.props.content : null\r\n    }\r\n\r\n    openMediaInstruments = event => {\r\n\r\n        const componentsPatternMedia = {\r\n            id: this.state.id,\r\n            size: this.state.size,\r\n            targetSection: this.state.targetSection,\r\n            type: 'media',\r\n            zIndex: null,\r\n            content: this.state.content,\r\n            coords: {...this.state.posMedia}, // x, y\r\n        }\r\n\r\n        eventEmitter.emit('EventInstrumentPanel',{\r\n            componentStats: componentsPatternMedia,\r\n            targetSection: this.state.targetSection,\r\n            id: this.state.id,\r\n            size: this.state.size,\r\n        });\r\n        this.setState({...this.state, istrumentsActive: true});\r\n        event.stopPropagation();\r\n    }\r\n\r\n    saveCoords = event => {\r\n        if (event.nativeEvent.which !== 1) return false;\r\n        const element = this.refMedia.getBoundingClientRect();\r\n        const cords = {\r\n            left: element.left,\r\n            top: element.top,\r\n            width: element.right - element.left,\r\n            height: element.bottom - element.top\r\n        }\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            shiftCoords: {x: event.clientX - cords.left, y: event.clientY - cords.top},\r\n            startDragNdrop: !this.state.startDragNdrop ? true : false\r\n        });\r\n\r\n        event.stopPropagation();\r\n    };\r\n\r\n    setWidth = eventItem => {\r\n        const {width} = eventItem;\r\n        this.setState({...this.state, \r\n            size: {\r\n                ...this.state.size,\r\n                w: width,\r\n            }\r\n        });\r\n    }\r\n\r\n    setHeight = eventItem => {\r\n        const {height} = eventItem;\r\n        this.setState({...this.state, \r\n            size: {\r\n                ...this.state.size,\r\n                h: height,\r\n            }\r\n        });\r\n    }\r\n\r\n    checkPivotPosition = (coordX, coordY) => {\r\n\r\n        const element = this.refMedia.getBoundingClientRect();\r\n        const borderTopLeft = 0;\r\n        const borderDown = 800 - element.height;\r\n        const borderRight = this.props.sizeParentBox.width - element.width;\r\n\r\n        if (coordY < borderTopLeft) coordY = borderTopLeft;\r\n        if (coordY > borderDown) coordY = borderDown;\r\n        if (coordX < borderTopLeft) coordX = borderTopLeft;\r\n        if (coordX > borderRight) coordX = borderRight;\r\n\r\n        return {x: coordX, y: coordY};\r\n    }\r\n\r\n\r\n    move = (x,y) => this.setState({...this.state, posMedia: {x: x, y: y}});\r\n\r\n    moveMedia = event => {\r\n\r\n        if (this.state.startDragNdrop && this.state.istrumentsActive){\r\n\r\n            let xItem = event.clientX - (this.props.sizeParentBox.left  * this.state.sectionNumber);\r\n            let yItem = event.clientY - (this.props.sizeParentBox.top * this.state.sectionNumber);\r\n\r\n            let coordX = xItem - this.state.shiftCoords.x;\r\n            let coordY = yItem - this.state.shiftCoords.y;\r\n\r\n            let coords = this.checkPivotPosition(coordX,coordY);\r\n\r\n            let convertToPercentX = coords.x * 100 / this.state.sizeParentBox.width;\r\n            let convertToPercentY = coords.y * 100 / this.state.sizeParentBox.height;\r\n\r\n            this.move(convertToPercentX.toFixed(2) + '%',\r\n                      convertToPercentY.toFixed(2) + '%');\r\n    }\r\n        event.stopPropagation();\r\n    };\r\n\r\n    stopDragNdrop = event => {\r\n        if (this.state.startDragNdrop) {\r\n            this.setState({...this.state, startDragNdrop: false})\r\n            controllerStream.emit(`EventUpdatePosition${this.state.id}`, this.state.posMedia);\r\n        }\r\n        event.stopPropagation();\r\n    };\r\n\r\n    setContent = event => {\r\n        const {iframe} = event;\r\n        this.setState({...this.state, content: iframe});\r\n    };\r\n\r\n\r\n    saveSize = event => {\r\n        const {size} = event;\r\n        if (!this.state.getSizeBool){\r\n        this.setState({\r\n            ...this.state,\r\n            getSizeBool: true,\r\n            countSection: event.countSection,\r\n            sectionNumber: event.sectionNumber + 1,\r\n            sizeParentBox: {width: size.width, height: size.height}});\r\n        } else controllerStream.off(`EventSaveWidth${this.state.targetSection}`,this.saveSize);\r\n    }\r\n\r\n    refMedia = null;\r\n    refMediaComponent = node => this.refMedia = node;\r\n\r\n    render(){\r\n        const url = 'https://www.youtube.com/embed/';\r\n\r\n        if (this.props.mode === 'dev'){\r\n            return (\r\n                <WrapperMedia\r\n                    ref = {this.refMediaComponent}\r\n                    onClick={this.openMediaInstruments}\r\n                    onMouseDown = {this.saveCoords}\r\n                    onMouseMove= {this.moveMedia}\r\n                    onMouseLeave = {this.stopDragNdrop}\r\n                    onMouseUp = {this.stopDragNdrop}\r\n                    onDragStart = {this.stop}\r\n                    mode = {this.props.mode}\r\n                    indexZ = {this.state.startDragNdrop}\r\n                    coordX = {this.state.posMedia ? this.state.posMedia.x : null}\r\n                    coordY = {this.state.posMedia ? this.state.posMedia.y : null}\r\n                    size = {this.state.size}\r\n                >\r\n                {!this.state.startDragNdrop ? \r\n                    <Media\r\n                        src= {this.state.content ? url + this.state.content : null }\r\n                        drawContent = {this.state.drawContent}\r\n                        width = {this.state.width} \r\n                        height = {this.state.height}\r\n                        zIndex = {this.state.content}\r\n                        allowfullscreen\r\n                    ></Media> : null\r\n                }\r\n                </WrapperMedia>\r\n            )\r\n        } else if (this.props.mode === 'production'){\r\n            return (\r\n                <ProductionStyle\r\n                    ref = {this.refMediaComponent}\r\n                    indexZ = {this.state.startDragNdrop}\r\n                    size = {this.state.size}\r\n                    coordX = {this.state.posMedia ? this.state.posMedia.x : null}\r\n                    coordY = {this.state.posMedia ? this.state.posMedia.y : null}\r\n                    mode = {this.props.mode}\r\n                >\r\n                {!this.state.startDragNdrop ? \r\n                    <Media\r\n                        src= {this.state.content ? url + this.state.content : null }\r\n                        drawContent = {this.state.drawContent}\r\n                        width = {this.state.width} \r\n                        height = {this.state.height}\r\n                        zIndex = {this.state.content}\r\n                        mode = {this.props.mode}\r\n                        allowfullscreen\r\n                    ></Media> : null\r\n                }\r\n                </ProductionStyle>\r\n            )\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        controllerStream.on(`EventSetContentMedia${this.state.id}`, this.setContent);\r\n        controllerStream.on(`EventSaveWidth${this.state.targetSection}`, this.saveSize);\r\n        controllerStream.on(`EventSetWidth${this.state.id}`, this.setWidth);\r\n        controllerStream.on(`EventSetHeight${this.state.id}`, this.setHeight); \r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        controllerStream.off(`EventSaveWidth${this.state.targetSection}`,this.saveSize);\r\n        controllerStream.off(`EventSetContentMedia${this.state.id}`, this.setContent);\r\n        controllerStream.off(`EventSetWidth${this.state.id}`, this.setWidth);\r\n        controllerStream.off(`EventSetHeight${this.state.id}`, this.setHeight); \r\n    }\r\n}\r\n\r\nexport default MediaComponent;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport eventEmitter,{controllerStream} from '../../../EventEmitter';\r\nimport styled from 'styled-components';\r\n\r\n\r\nconst WrapperImg = styled.div.attrs(props => {\r\n    if (props.mode !== 'production')\r\n    return ({\r\n        style: {\r\n            zIndex: props.indexZ ? '9999' : null,\r\n            transform: `rotateZ(${props.rotate}deg) scale(${props.scale})`,\r\n            left: props.coordX ? props.coordX : '45%',\r\n            top:  props.coordY ? props.coordY : '0',\r\n            transition: `transform  0.3s linear`,\r\n        }\r\n    })\r\n})`\r\n    width: ${props => props.size ? props.size.w + '%' : '30%'};\r\n    height: ${props => props.size ? props.size.h + '%' : '50%'};\r\n    position: absolute;\r\n`;\r\n\r\nconst ImageStyle = styled.img`\r\n    width: 100%;\r\n    height: 100%;\r\n    opacity: ${props => props.opacity};\r\n    border-radius: ${props => props.borderRadius}px;\r\n    position: absolute;\r\n`;\r\n\r\nconst ProductionStyle = styled(WrapperImg)`\r\n    left: ${props => props.coordX ? props.coordX : '50%'};\r\n    top:  ${props => props.coordY};\r\n    transform: rotate(${props => props.rotate}deg) scale(${props => props.scale});\r\n`;\r\n\r\nclass Image extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        id: PropTypes.oneOfType([\r\n            PropTypes.string,\r\n            PropTypes.number\r\n        ]).isRequired,\r\n        targetSection: PropTypes.string,\r\n        sizeParentBox: PropTypes.object,\r\n    }\r\n\r\n    state = {\r\n        id: this.props.id,\r\n        istrumentsActive: false,\r\n        getSizeBool: false,\r\n        countSection: 0,\r\n        opacity: this.props.opacity || 1,\r\n        transformValue: this.props.rotate || 0,\r\n        scaleValue: this.props.scale || 1,\r\n        sectionNumber: 0,\r\n        borderRadius: this.props.borderRadius || 0,\r\n        sizeParentBox: this.props.sizeParentBox,\r\n        targetSection: this.props.targetSection,\r\n        path: this.props.image ? this.props.image : this.props.path,\r\n        size: this.props.size ? this.props.size : {w: 30, h: 50},\r\n        shiftCoords: null,\r\n        posImage: this.props.coords.x ? {x: this.props.coords.x, y: this.props.coords.y} : null,\r\n        startDragNdrop: false,\r\n    }\r\n\r\n    openImageInstruments = event => {\r\n        /** open panel instruments */\r\n        const componentsPatternImage = {\r\n            id: this.state.id,\r\n            targetSection: this.state.targetSection,\r\n            size: {...this.state.size},\r\n            type: 'image',\r\n            rotate: this.state.transformValue,\r\n            scale: this.state.scaleValue,\r\n            borderRadius: this.state.borderRadius,\r\n            opacity: this.state.opacity,\r\n            zIndex: null,\r\n            image: this.state.path,\r\n            coords: {...this.state.posImage}, // x, y\r\n        }\r\n\r\n        eventEmitter.emit(`EventInstrumentPanel`,{\r\n            componentStats: componentsPatternImage,\r\n            targetSection: this.state.targetSection,\r\n            id: this.state.id,\r\n            sizeTextValue: this.state.size\r\n        });\r\n        this.setState({...this.state, istrumentsActive: true});\r\n        event.stopPropagation();\r\n    };\r\n\r\n    saveCoords = event => {\r\n          /** save current coords */\r\n        if (event.nativeEvent.which !== 1) return false;\r\n        const element = this.refImage.getBoundingClientRect();\r\n\r\n        const cords = {\r\n            left: element.left,\r\n            top: element.top,\r\n            width: element.right - element.left,\r\n            height: element.bottom - element.top\r\n        }\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            shiftCoords: {x: event.clientX - cords.left, y: event.clientY - cords.top},\r\n            startDragNdrop: !this.state.startDragNdrop ? true : false\r\n        });\r\n\r\n        event.stopPropagation();\r\n    };\r\n\r\n    checkPivotPosition = (coordX, coordY) => {\r\n          /** Checking the boundaries */\r\n        const element = this.refImage.getBoundingClientRect();\r\n        const borderTopLeft = 0;\r\n        const borderDown = 800 - element.height;\r\n        const borderRight = this.props.sizeParentBox.width - element.width;\r\n\r\n        if (coordY < borderTopLeft) coordY = borderTopLeft;\r\n        if (coordY > borderDown) coordY = borderDown;\r\n        if (coordX < borderTopLeft) coordX = borderTopLeft;\r\n        if (coordX > borderRight) coordX = borderRight;\r\n\r\n        return {x: coordX, y: coordY};\r\n    }\r\n\r\n    rotateEvent = eventItem => {\r\n         /** transform - rotate */\r\n        const angle = eventItem.angle;\r\n        this.setState({\r\n            ...this.state,\r\n            transformValue: angle,\r\n        });\r\n    }\r\n\r\n    scaleEvent = eventItem => {\r\n         /** transform - scale */\r\n        const scale = eventItem.scale;\r\n        this.setState({\r\n            ...this.state,\r\n            scaleValue: scale,\r\n        });\r\n    }\r\n\r\n    move = (x,y) => this.setState({...this.state, posImage: {x: x, y: y}});\r\n\r\n    moveText = event => {\r\n          /** move element event */\r\n        if (this.state.startDragNdrop && this.state.istrumentsActive){ /** if key down - false */\r\n            const element = this.refImage.getBoundingClientRect();\r\n            let xItem = event.clientX - (this.props.sizeParentBox.left  * this.state.sectionNumber);\r\n            let yItem = event.clientY - (this.props.sizeParentBox.top * this.state.sectionNumber);\r\n            let factorCoord = this.diffAngle(parseInt(this.state.transformValue),element.height,element.width);\r\n\r\n            let coordX = xItem - this.state.shiftCoords.x + factorCoord.xFacotr;\r\n            let coordY = yItem - 61 - this.state.shiftCoords.y + factorCoord.yFactor;\r\n\r\n            let coords = this.checkPivotPosition(coordX,coordY);\r\n\r\n            let convertToPercentX = coords.x * 100 / this.state.sizeParentBox.width;\r\n            let convertToPercentY = coords.y * 100 / this.state.sizeParentBox.height;\r\n\r\n            this.move(convertToPercentX.toFixed(2) + '%',\r\n                      convertToPercentY.toFixed(2) + '%');\r\n    }\r\n        event.stopPropagation();\r\n    };\r\n\r\n\r\n    diffAngle = (transform, height, width) => {\r\n          /** if user use transform rotate - coordinate recount */\r\n        let powHeight = height**2;\r\n        let powWidth =  width**2;\r\n\r\n        let pythagoras = Math.sqrt(powHeight + powWidth) / 2;\r\n        let _angle = Math.atan(height / width);\r\n        let angle = Math.atan(width / height);\r\n\r\n        let _biasFactor = 1;\r\n        let biasFactor = 1;\r\n\r\n        if (transform < 0 || transform > 180)\r\n            _biasFactor = - 1;\r\n        if (transform > 90 && transform < 270)\r\n            biasFactor= -1;\r\n\r\n        transform = transform * (Math.PI/180);\r\n\r\n        let sinX = Math.sin(biasFactor * angle + _biasFactor * transform);\r\n        let sinY = Math.sin(biasFactor* _angle + _biasFactor * transform);\r\n\r\n        let xFacotr = pythagoras*(-Math.sin(angle)+sinX);\r\n        let yFactor = pythagoras*(-Math.sin(_angle)+sinY);\r\n\r\n        return {xFacotr, yFactor}\r\n    };\r\n\r\n    stopDragNdrop = event => {\r\n        /** end move element */\r\n        if (this.state.startDragNdrop) {\r\n            this.setState({...this.state, startDragNdrop: false})\r\n            controllerStream.emit(`EventUpdatePosition${this.state.id}`, this.state.posImage);\r\n        }\r\n        event.stopPropagation();\r\n    };\r\n\r\n    setCurrentImage = event => {\r\n        /** set content */\r\n        const {urlFull} = event;\r\n        this.setState({...this.state, path: urlFull});\r\n    };\r\n\r\n    setWidth = eventItem => {\r\n        /** set size w */\r\n        const {width} = eventItem;\r\n        this.setState({...this.state, \r\n            size: {\r\n                ...this.state.size,\r\n                w: width,\r\n            }\r\n        });\r\n    }\r\n\r\n    setHeight = eventItem => {\r\n          /** set size h */\r\n        const {height} = eventItem;\r\n        this.setState({...this.state, \r\n            size: {\r\n                ...this.state.size,\r\n                h: height,\r\n            }\r\n        });\r\n    }\r\n\r\n    saveSize = event => {\r\n         /** save sizes  */\r\n        const {size} = event;\r\n        if (!this.state.getSizeBool){\r\n        this.setState({\r\n            ...this.state,\r\n            getSizeBool: true,\r\n            countSection: event.countSection,\r\n            sectionNumber: event.sectionNumber,\r\n            sizeParentBox: {width: size.width, height: size.height}});\r\n        } else controllerStream.off(`EventSaveWidth${this.state.targetSection}`,this.saveSize);\r\n    }\r\n\r\n    setBorderRadius = eventItem => {\r\n        //** saet border-radius */\r\n        let radius = eventItem.borderRadius > 200 ? 200 : eventItem.borderRadius;\r\n        radius = eventItem.borderDown < 0 ? 0 : eventItem.borderRadius;\r\n        this.setState({\r\n            ...this.state,\r\n            borderRadius: radius\r\n        });\r\n    };\r\n\r\n    setOpacity = eventItem => {\r\n        //** saet opacity */\r\n        let opacity = eventItem.opacity > 1 ? 1 : eventItem.opacity;\r\n        opacity = eventItem.opacity < 0 ? 0 : eventItem.opacity;\r\n            this.setState({\r\n                ...this.state,\r\n                opacity: opacity\r\n            });\r\n    }\r\n\r\n    stopDrag = event => {\r\n        event.preventDefault();\r\n    }\r\n \r\n    refImage = null;\r\n    refImageComponent = node => this.refImage = node;\r\n\r\n    render(){\r\n\r\n        if (this.props.mode === 'dev'){\r\n            return (\r\n                <WrapperImg\r\n                ref = {this.refImageComponent}\r\n                size = {this.state.size}\r\n                rotate = {this.state.transformValue}\r\n                scale = {this.state.scaleValue}\r\n                onClick = {this.openImageInstruments}\r\n                onMouseDown = {this.saveCoords}\r\n                onMouseMove= {this.moveText}\r\n                onMouseLeave = {this.stopDragNdrop}\r\n                onMouseUp = {this.stopDragNdrop}\r\n                onDragStart = {this.stopDrag}\r\n                coordX = {this.state.posImage ? this.state.posImage.x : null}\r\n                coordY = {this.state.posImage ? this.state.posImage.y : null}\r\n                indexZ = {this.state.startDragNdrop}\r\n                data-imagecomponentwrapper\r\n                >\r\n                    <ImageStyle\r\n                        data-imagecomponent\r\n                        borderRadius = {this.state.borderRadius}\r\n                        onDragStart = {this.stopDrag}\r\n                        opacity = {this.state.opacity}\r\n                        src = {this.state.path}\r\n                        alt = 'img'\r\n                    />\r\n                </WrapperImg>\r\n            )\r\n        } else if (this.props.mode === 'production'){\r\n            return (\r\n                <ProductionStyle\r\n                ref = {this.refImageComponent}\r\n                size = {this.state.size}\r\n                rotate = {this.state.transformValue}\r\n                scale = {this.state.scaleValue}\r\n                mode = {this.props.mode}\r\n                coordX = {this.state.posImage ? this.state.posImage.x : null}\r\n                coordY = {this.state.posImage ? this.state.posImage.y : null}\r\n                indexZ = {this.state.startDragNdrop}\r\n                >\r\n                    <ImageStyle\r\n                        borderRadius = {this.state.borderRadius}\r\n                        opacity = {this.state.opacity}\r\n                        crossOrigin = \"anonymous\"\r\n                        src = {this.state.path}\r\n                        alt = 'img'\r\n                    />\r\n                </ProductionStyle>\r\n            )\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        controllerStream.on(`EventSetCurrentImage${this.state.id}`, this.setCurrentImage);\r\n        controllerStream.on(`EventSetOpacity${this.state.id}`, this.setOpacity);\r\n        controllerStream.on(`EventSetBorderRadius${this.state.id}`,this.setBorderRadius);\r\n        controllerStream.on(`EventSetWidth${this.state.id}`, this.setWidth);\r\n        controllerStream.on(`EventSetHeight${this.state.id}`, this.setHeight); \r\n        controllerStream.on(`EventResize${this.state.id}`,this.rotateEvent);\r\n        controllerStream.on(`EventScale${this.state.id}`,this.scaleEvent);\r\n        controllerStream.on(`EventSaveWidth${this.state.targetSection}`, this.saveSize);\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        controllerStream.off(`EventSetOpacity${this.state.id}`, this.setOpacity);\r\n        controllerStream.off(`EventSetBorderRadius${this.state.id}`,this.setBorderRadius);\r\n        controllerStream.off(`EventSetCurrentImage${this.state.id}`, this.setCurrentImage);\r\n        controllerStream.off(`EventSetWidth${this.state.id}`, this.setWidth);\r\n        controllerStream.off(`EventSetHeight${this.state.id}`, this.setHeight); \r\n        controllerStream.off(`EventResize${this.state.id}`,this.rotateEvent);\r\n        controllerStream.off(`EventScale${this.state.id}`,this.scaleEvent);\r\n        controllerStream.off(`EventSaveWidth${this.state.targetSection}`,this.saveSize);\r\n    }\r\n}\r\n\r\nexport default Image;","\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport eventEmitter,{controllerStream} from '../../../EventEmitter';\r\nimport Events from 'events';\r\nimport styled from 'styled-components';\r\n\r\nimport './components.scss';\r\n\r\n\r\n\r\nconst WrapperText = styled.div.attrs(props => {\r\n    if (props.mode !== 'production')\r\n    return ({\r\n        style: {\r\n            zIndex: props.indexZ ? '9999' : null,\r\n            transform: `rotateZ(${props.rotate}deg) scale(${props.scale})`,\r\n            left: props.coordX ? props.coordX : '50%',\r\n            top:  props.coordY,\r\n            transition: `transform  0.3s linear`,\r\n        }\r\n    })\r\n})`\r\n    position: absolute;\r\n    font-size: ${props => props.size ? props.size : '120px'};\r\n    color: ${props => props.textColor};\r\n    text-align: center;\r\n    margin: 0;\r\n    word-break: break-all;\r\n`;\r\n\r\nconst TextStyle = styled.p`\r\n    width: 100%;\r\n    height: 100%;\r\n    font-family: ${props => props.font};\r\n    text-align: center;\r\n    margin: 0;\r\n    user-select: none;\r\n`;\r\n\r\n\r\nconst ProductionStyle = styled(WrapperText)`\r\n    left: ${props => props.coordX ? props.coordX : '50%'};\r\n    top:  ${props => props.coordY};\r\n    transform: rotate(${props => props.rotate}deg) scale(${props => props.scale});\r\n`;\r\n\r\n\r\nclass TextComponent extends React.PureComponent {\r\n\r\n    resizeStream = new Events();\r\n\r\n    static propTypes = {\r\n        id: PropTypes.oneOfType([\r\n            PropTypes.string,\r\n            PropTypes.number\r\n        ]).isRequired,\r\n        targetSection: PropTypes.string,\r\n        sizeParentBox: PropTypes.object,\r\n        mode: PropTypes.string.isRequired,\r\n    }\r\n\r\n    state = {\r\n        id: this.props.id,\r\n        istrumentsActive: false,\r\n        isHaveSize: false,\r\n        parent: this.props.sizeParentBox,\r\n        targetSection: this.props.targetSection,\r\n        colorText: this.props.color,\r\n        sizeText: this.props.fontSize || this.props.size,\r\n        shiftCoords: null,\r\n        position: this.props.coords,\r\n        transformValue: this.props.rotate || 0,\r\n        scaleValue: this.props.scale || 1,\r\n        font: this.props.font ? this.props.font : 'Arial',\r\n        startDragNdrop: false,\r\n        contentText: this.props.content ? this.props.content : null,\r\n        countSection: 0,\r\n        sectionNumber: 0,\r\n        getSizeBool: false,\r\n    }\r\n\r\n    openTitleInstruments = event => {\r\n         const componentsPatternText = {\r\n            id: this.state.id,\r\n            targetSection: this.state.targetSection,\r\n            type: 'text',\r\n            rotate: this.state.transformValue,\r\n            scale: this.state.scaleValue,\r\n            font: this.state.font,\r\n            color: this.state.colorText,\r\n            fontSize: this.state.sizeText || 120,\r\n            content: this.state.contentText,\r\n            coords: {...this.state.position}, // x, y\r\n        };\r\n        eventEmitter.emit(`EventInstrumentPanel`,{\r\n                type: 'text',\r\n                targetSection: this.state.targetSection,\r\n                id: this.state.id,\r\n                componentStats: componentsPatternText,\r\n                sizeTextValue: this.state.sizeText\r\n        });\r\n        this.setState({...this.state, istrumentsActive: true});\r\n        event.stopPropagation();\r\n    }\r\n\r\n    changeColorText = colorRGB => {\r\n        if (typeof colorRGB === 'string')\r\n            this.setState({\r\n                ...this.state,\r\n                colorText: colorRGB\r\n            });\r\n    };\r\n\r\n    changeSizeText = eventSize => {\r\n        this.setState({...this.state, sizeText: eventSize.size});\r\n    };\r\n\r\n    saveSize = event => {\r\n        const {size} = event;\r\n        if (!this.state.getSizeBool){\r\n        this.setState({\r\n            ...this.state,\r\n            getSizeBool: true,\r\n            countSection: event.countSection,\r\n            sectionNumber: event.sectionNumber,\r\n            parent: {width: size.width, height: size.height}});\r\n        } else controllerStream.off(`EventSaveWidth${this.state.targetSection}`,this.saveSize);\r\n    }\r\n\r\n    changeContentText = eventContent => {\r\n        let booldContent = eventContent.content || eventContent.content === '';\r\n        if (booldContent)\r\n            this.setState({\r\n                ...this.state,\r\n                contentText: eventContent.content\r\n            });\r\n    };\r\n\r\n    saveCoords = event => {\r\n        const element = this.refText.getBoundingClientRect();\r\n        const cords = {\r\n            left: element.left,\r\n            top: element.top,\r\n            width: element.right - element.left,\r\n            height: element.bottom - element.top\r\n        }\r\n\r\n        const resizeStart = event.target.classList[0] === 'resizeDoted'\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            shiftCoords: {x: event.clientX - cords.left, y: event.clientY - cords.top},\r\n            startDragNdrop: !this.state.startDragNdrop ? true : false,\r\n            resizeStart: resizeStart,\r\n        });\r\n\r\n        event.stopPropagation();\r\n    };\r\n\r\n    setFont = eventItem => {\r\n        /** set type font */\r\n        this.setState({\r\n            ...this.state,\r\n            font: eventItem.font\r\n        });\r\n    };\r\n\r\n    checkPivotPosition = (coordX, coordY) => {\r\n        const element = this.refText.getBoundingClientRect();\r\n        const borderTopLeft = 0;\r\n        const borderDown = 800 - element.height;\r\n        const borderRight = this.props.sizeParentBox.width - element.width;\r\n\r\n        if (coordY < borderTopLeft) coordY = borderTopLeft;\r\n        if (coordY > borderDown) coordY = borderDown;\r\n        if (coordX < borderTopLeft) coordX = borderTopLeft;\r\n        if (coordX > borderRight) coordX = borderRight;\r\n\r\n        return {x: coordX, y: coordY};\r\n    }\r\n\r\n    move = (x,y) => this.setState({...this.state, position: {x: x, y: y}});\r\n\r\n    moveText = event => {\r\n        if (this.state.startDragNdrop && this.state.istrumentsActive){\r\n            const element = this.refText.getBoundingClientRect();\r\n            let sectionNum = this.state.sectionNumber === 0 ? 1 : this.state.sectionNumber;\r\n            let xItem = event.clientX - (this.props.sizeParentBox.left  * sectionNum);\r\n            let yItem = event.clientY - (this.props.sizeParentBox.top * sectionNum);\r\n            let factorCoord = this.diffAngle(parseInt(this.state.transformValue),element.height,element.width);\r\n\r\n            let coordX = xItem - this.state.shiftCoords.x + factorCoord.xFacotr;\r\n            let coordY = yItem - this.state.shiftCoords.y + factorCoord.yFactor;\r\n\r\n            let coords = this.checkPivotPosition(coordX,coordY);\r\n\r\n            let convertToPercentX = coords.x * 100 / this.state.parent.width;\r\n            let convertToPercentY = coords.y * 100 / this.state.parent.height;\r\n\r\n            this.move(convertToPercentX.toFixed(2) + '%',\r\n                      convertToPercentY.toFixed(2) + '%');\r\n        }\r\n        event.stopPropagation();\r\n    };\r\n\r\n\r\n    rotateEvent = eventItem => {\r\n        const angle = eventItem.angle;\r\n        this.setState({\r\n            ...this.state,\r\n            transformValue: angle,\r\n        });\r\n    }\r\n\r\n    scaleEvent = eventItem => {\r\n        const scale = eventItem.scale;\r\n        this.setState({\r\n            ...this.state,\r\n            scaleValue: scale,\r\n        });\r\n    }\r\n\r\n    diffAngle = (transform, height, width) => {\r\n\r\n        let powHeight = height**2;\r\n        let powWidth =  width**2;\r\n\r\n        let pythagoras = Math.sqrt(powHeight + powWidth) / 2;\r\n        let _angle = Math.atan(height / width);\r\n        let angle = Math.atan(width / height);\r\n\r\n        let _biasFactor = 1;\r\n        let biasFactor = 1;\r\n\r\n        if (transform < 0 || transform > 180)\r\n            _biasFactor = - 1;\r\n        if (transform > 90 && transform < 270)\r\n            biasFactor= -1;\r\n\r\n        transform = transform * (Math.PI/180);\r\n\r\n        let sinX = Math.sin(biasFactor * angle + _biasFactor * transform);\r\n        let sinY = Math.sin(biasFactor* _angle + _biasFactor * transform);\r\n\r\n        const xFacotr = pythagoras * (-Math.sin(angle) + sinX);\r\n        const yFactor = pythagoras * (-Math.sin(_angle) + sinY);\r\n\r\n        return {xFacotr, yFactor}\r\n    };\r\n\r\n\r\n    stopDragNdrop = event => {\r\n\r\n        if (this.state.startDragNdrop)\r\n            this.setState({...this.state, startDragNdrop: false},\r\n            () => controllerStream.emit(`EventUpdatePosition${this.state.id}`, this.state.position));\r\n        event.stopPropagation();\r\n    };\r\n\r\n    stopDrag = event => {\r\n        event.preventDefault();\r\n    }\r\n\r\n    refText = null;\r\n    refTextComponent = node => this.refText = node;\r\n\r\n\r\n    render(){\r\n        if (this.props.mode === 'dev'){\r\n            return (\r\n                <WrapperText\r\n                    ref  = {this.refTextComponent}\r\n                    onClick={this.openTitleInstruments}\r\n                    textColor = {this.state.colorText ? this.state.colorText : 'red'}\r\n                    size = {this.state.sizeText ? this.state.sizeText + 'px' : '120px'}\r\n                    onMouseDown = {this.saveCoords}\r\n                    onMouseMove= {this.moveText}\r\n                    onMouseLeave = {this.stopDragNdrop}\r\n                    onMouseUp = {this.stopDragNdrop}\r\n                    rotate = {this.state.transformValue}\r\n                    onDragStart = {this.stopDrag}\r\n                    scale = {this.state.scaleValue}\r\n                    coordX = {this.state.position ? this.state.position.x : null}\r\n                    coordY = {this.state.position ? this.state.position.y : null}\r\n                    indexZ = {this.state.startDragNdrop}\r\n                    data-textcomponent\r\n                >\r\n                    <TextStyle font = {this.state.font}>{this.state.contentText}</TextStyle>\r\n                </WrapperText>\r\n            ) \r\n        } else if (this.props.mode === 'production'){\r\n            return (\r\n                <ProductionStyle\r\n                    ref  = {this.refTextComponent}\r\n                    mode = {this.props.mode}\r\n                    scale = {this.state.scaleValue}\r\n                    rotate = {this.state.transformValue}\r\n                    textColor = {this.state.colorText ? this.state.colorText : 'red'}\r\n                    size = {this.state.sizeText ? this.state.sizeText + 'px' : '120px'}\r\n                    coordX = {this.state.position ? this.state.position.x : null}\r\n                    coordY = {this.state.position ? this.state.position.y : null}\r\n                    indexZ = {this.state.startDragNdrop}\r\n                >\r\n                    <TextStyle font = {this.state.font}>{this.state.contentText}</TextStyle>\r\n                </ProductionStyle>\r\n            )\r\n        }\r\n\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        controllerStream.on(`EventChangeColorText${this.state.id}`, this.changeColorText);\r\n        controllerStream.on(`EventSetFont${this.state.id}`, this.setFont);\r\n        controllerStream.on(`EventChangeSize${this.state.id}`, this.changeSizeText);\r\n        controllerStream.on(`EventChangeContentText${this.state.id}`, this.changeContentText);\r\n        controllerStream.on(`EventSaveWidth${this.state.targetSection}`,this.saveSize);\r\n        controllerStream.on(`EventResize${this.state.id}`,this.rotateEvent);\r\n        controllerStream.on(`EventScale${this.state.id}`,this.scaleEvent);\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        controllerStream.off(`EventChangeColorText${this.state.id}`, this.changeColorText);\r\n        controllerStream.off(`EventSetFont${this.state.id}`, this.setFont);\r\n        controllerStream.off(`EventChangeSize${this.state.id}`, this.changeSizeText);\r\n        controllerStream.off(`EventChangeContentText${this.state.id}`, this.changeContentText);\r\n        controllerStream.off(`EventSaveWidth${this.state.targetSection}`,this.saveSize);\r\n        controllerStream.off(`EventResize${this.state.id}`,this.rotateEvent);\r\n        controllerStream.off(`EventScale${this.state.id}`,this.scaleEvent);\r\n    }\r\n}\r\n\r\nexport default TextComponent;","import React from 'react';\r\n\r\nimport Input from './buildComponents/components/Input';\r\nimport Media from './buildComponents/components/Media';\r\nimport Image from './buildComponents/components/Image';\r\nimport TextComponent from './buildComponents/components/Text';\r\nimport BackgroundComponent from './buildComponents/components/Background';\r\n\r\nconst builderHOC = item => Component => {\r\n        /** Builder editable components */\r\n        if (item.type === 'background') Component = BackgroundComponent;\r\n        else if (item.type === 'input') Component = Input;\r\n        else if (item.type === 'media') Component = Media;\r\n        else if (item.type === 'image') Component = Image;\r\n        else if (item.type === 'text') Component = TextComponent;\r\n\r\n        return <Component key = { `${item.type}${item.id}`} {...item.props} />\r\n};\r\n\r\nexport default builderHOC;","import React,{Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\n/** Redux actions */\r\nimport {loadCurrentProjectAction, exitProjectAction} from '../../redux/actions';\r\n/* ------- Child components ------- */\r\nimport Section from '../../components/buildComponents/section';\r\nimport builderHOC from '../../components/builderHOC';\r\nimport Loader from '../../components/loading/Loader';\r\nimport Header from '../../components/header/Header';\r\n/* HOC */\r\nimport withFirebase from '../../components/withFirebase';\r\nimport './production.scss';\r\n\r\nclass Production extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        firebase: PropTypes.object,\r\n    }\r\n\r\n    state = {\r\n        idProject: parseInt(this.props.match.params.param), /** @Id project */\r\n        mode: 'production', /** @workMode */\r\n        projectEmpty: false, /** @Bool detected project undefiend */\r\n        isLoadComponents: true, /** @Bool load all necessary components  */\r\n        componentsProdJSX: [] /** @Array with JSX */\r\n    }\r\n\r\n    makeProduction = (array) => {\r\n        /* build components */\r\n        let {componentsProdJSX} = this.state;\r\n        let _components = [];\r\n\r\n        array.forEach(item => {\r\n\r\n            const itemHash = {\r\n                props: {\r\n                    ...item,\r\n                    mode: 'production',\r\n                },\r\n                type: item.type,\r\n                id: item.id,\r\n            }\r\n            const patternJSX = {\r\n                id: item.id,\r\n                targetSection: item.targetSection,\r\n                component: builderHOC(itemHash)(Fragment)\r\n            };\r\n                _components.push(patternJSX);\r\n        });\r\n            this.setState({\r\n                ...this.state,\r\n                isLoadComponents: false,\r\n                componentsProdJSX: [...componentsProdJSX, ..._components],\r\n            });\r\n    };\r\n\r\n    prodRef = null;\r\n    mainProductionRef  = node => node ?\r\n    this.prodRef = {data: node.getBoundingClientRect(), node: node} : node;\r\n\r\n    render(){\r\n\r\n        const {userData} = this.props;\r\n        const {currentProjectsData} = userData;\r\n        const section = currentProjectsData.sectionsProject;\r\n\r\n        if (this.state.projectEmpty) return <Redirect to = '/Cabinet' />\r\n\r\n        if (userData.active && currentProjectsData.loadProject){\r\n            return (\r\n                <Fragment>\r\n                    <Header key = 'Header' title = \"Constructor\" idUser = {userData.idUser} />\r\n                    <div\r\n                        ref = {this.mainProductionRef}\r\n                        className = 'Production'\r\n                        key = 'Production'\r\n                        >\r\n                        {!this.state.isLoadComponents ?\r\n                            section.length &&\r\n                                <Section \r\n                                    key = 'section'\r\n                                    mode = {this.state.mode}\r\n                                    currentProjectsData = {currentProjectsData}\r\n                                    componentsProdJSX = {this.state.componentsProdJSX}\r\n                                    section = {section}\r\n                                />\r\n                            : null\r\n                        }\r\n                    </div>\r\n                </Fragment>\r\n            )\r\n        } else if (!this.props.firebase.getCurrentUser()) return <Redirect to = '/' />\r\n        else return <Loader  key = 'Loader' path = '/img/loading.gif' type = 'production' />\r\n    }\r\n\r\n    componentDidUpdate = () => {\r\n        let {userData} = this.props;\r\n        let {currentProjectsData} = userData;\r\n\r\n        if (userData.active && !currentProjectsData.loadProject) {\r\n            /** load current project of user session active and load project - false */\r\n            const current =  userData.projects.find(item => item.id === this.state.idProject)\r\n            if (current)\r\n            this.props.dispatch(loadCurrentProjectAction({\r\n                id: current.id,\r\n                typeProject: current.type,\r\n                sectionsProject: [...current.sectionsProject],\r\n                components: [...current.components]\r\n            })) /* else redirect */\r\n            else this.setState({...this.state, projectEmpty: true});\r\n        }\r\n\r\n        if (this.state.isLoadComponents && currentProjectsData.loadProject)\r\n            /* if all components load build our JSX */\r\n            this.makeProduction(currentProjectsData.components);\r\n\r\n    }\r\n\r\n\r\n    componentDidMount = () => {\r\n        let {userData} = this.props;\r\n        let {currentProjectsData} = userData;\r\n\r\n        if (userData.active && !currentProjectsData.loadProject) {\r\n            /** if user active and project load - false */\r\n            const current =  userData.projects.find(item => item.id === this.state.idProject)\r\n            this.props.dispatch(loadCurrentProjectAction({\r\n                id: current.id,\r\n                sectionsProject: [...current.sectionsProject],\r\n                typeProject: current.type,\r\n                components: [...current.components]\r\n            })); /** else render loader */\r\n        };\r\n\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        let {userData} = this.props;\r\n        if (userData.active)  this.props.dispatch(exitProjectAction(true));\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        userData: {\r\n            active: state.cabinet.active,\r\n            idUser: state.cabinet.idUser,\r\n            projects: [...state.cabinet.projects],\r\n           currentProjectsData: {...state.builder}\r\n        },\r\n    }\r\n};\r\n\r\n  export default connect(mapStateToProps)(withFirebase(Production));","import React,{Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\n\r\n\r\nimport withFirebase from '../../components/withFirebase';\r\nimport Header from '../../components/header/Header';\r\nimport Loader from '../../components/loading/Loader';\r\n\r\nimport './about.scss';\r\n\r\nclass About extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        config: PropTypes.object.isRequired, /** @Config app */\r\n        firebase: PropTypes.object.isRequired, /** @firebase class for use firebase functions */\r\n        history: PropTypes.object, /** @Router HTML5 history */\r\n        location: PropTypes.object, /** @Router */\r\n        match: PropTypes.object, /** @Router */\r\n    }\r\n\r\n    state = {\r\n        config: this.props.config\r\n    };\r\n\r\n    render(){\r\n\r\n        let user = this.props.firebase.getCurrentUser();\r\n        if (user && this.props.idUser) {\r\n            const { config } = this.state;\r\n            return (\r\n                <Fragment>\r\n                    <Header title = {config.title} idUser = {user.uid} />\r\n                    <section className = 'About'>\r\n                        <div className = 'container'>\r\n                            <div className = 'col-12'>\r\n                                <div className = 'About__information'>\r\n                                <img alt = 'img'\r\n                                    className = 'information__logoAbout' \r\n                                    src = {process.env.PUBLIC_URL + '/img/about.jpg'}\r\n                                />\r\n                                    <p className ='developer'><span>Developer:</span>\r\n                                                            {config.about.developer}\r\n                                    </p>\r\n                                    <p className = 'year'><span>Year:</span> {config.about.year}</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </section>\r\n                </Fragment>\r\n            )\r\n        } else if (!user) return <Redirect to = { '/'} />\r\n        else return <Loader path = '/img/loading.gif' type = 'About' />\r\n\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n      idUser: state.cabinet.idUser,\r\n    }\r\n  };\r\n\r\nexport default connect(mapStateToProps)(withFirebase(About));","import {errorAction, loadUpdateCurrentProject} from '../actions';\r\n\r\nconst updateMiddleware = (item) => async (dispatch,getState, {firebase}) => {\r\n    /** Save new updates for projects */\r\n    let newProjects = item.projects.map(project => {\r\n        if (project.id === item.idProject) {\r\n            project.components = [...item.components]\r\n            project.sectionsProject = [...item.sectionsProject]\r\n        }\r\n        return project;\r\n    });\r\n    await firebase.db.collection(\"users\").doc(item.uid).update({\r\n        'projects': JSON.parse(JSON.stringify(newProjects))\r\n    })\r\n    .then(response => {\r\n        /** find and save updates */\r\n        let project = item.projects.find(itemdb => itemdb.id === item.idProject);\r\n        dispatch(loadUpdateCurrentProject({\r\n            components: [...project.components],\r\n            idProject: item.idProject,\r\n            sectionsProject: item.sectionsProject,\r\n        }))\r\n    })\r\n    .catch(error => dispatch(errorAction(error.message)));\r\n};\r\n\r\nexport default updateMiddleware;","import React from 'react';\r\nimport eventEmitter from '../EventEmitter';\r\nimport {animateScroll as scroll, scroller } from \"react-scroll\";\r\n\r\n\r\nconst withScroll = Component => {\r\n    return class ScrollMove extends React.PureComponent {\r\n\r\n        state = {\r\n            mode: 'default',\r\n            scrollConfig: {\r\n                duration: 1000,\r\n                delay: 50,\r\n                smooth: true,\r\n                offset: -60\r\n            },\r\n            position: 0,\r\n            positionCount: null\r\n\r\n        }\r\n\r\n        setStates = event => {\r\n            /** Count all positions */\r\n            this.setState({...this.state,positionCount: event});\r\n        }\r\n\r\n        blockMove = event => {\r\n            /** block for move */\r\n            this.setState({...this.state, mode: event})\r\n        }\r\n\r\n        moveLocation = event => {\r\n            /** Scrolling */\r\n            if (this.state.mode === 'default'){\r\n                const count = this.state.positionCount;\r\n                const moveDown = this.state.position < count && event.deltaY > 0;\r\n                const moveUp = event.deltaY < 0 && this.state.position > 0;\r\n                eventEmitter.emit('EventClosePanel',{close: false});\r\n\r\n                if (moveDown)\r\n                    this.setState({ position: this.state.position + 1},\r\n                        () => scroller.scrollTo(`element${this.state.position}`,this.state.scrollConfig));\r\n                    else if (moveUp){\r\n                        this.state.position === 1 &&\r\n                            this.setState({position: this.state.position - 1}, () => scroll.scrollToTop());\r\n                        this.state.position !== 1 &&\r\n                            this.setState({position: this.state.position - 1},\r\n                                () => scroller.scrollTo(`element${this.state.position}`,this.state.scrollConfig));\r\n                    }\r\n            }\r\n\r\n        }\r\n\r\n\r\n        render(){\r\n            return (\r\n                <React.Fragment>\r\n                        <div key = 'moveScroll' onWheel = {this.moveLocation} onTouchStart = {() => false}\r\n                        >\r\n                            {<Component {...this.props} />}\r\n                        </div>\r\n                </React.Fragment>\r\n            )\r\n        }\r\n\r\n        componentDidMount = () => {\r\n            eventEmitter.on('EventBlockScroll', this.blockMove);\r\n            eventEmitter.on('EventSetState', this.setStates);\r\n        }\r\n\r\n        componentWillUnmount = () => {\r\n            eventEmitter.off('EventBlockScroll', this.blockMove);\r\n            eventEmitter.off('EventSetState', this.setStates);\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport default withScroll;","import React,{useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Viewer.scss';\r\n\r\nfunction Viewer(props){\r\n\r\n    let [mode] = useState(props.mode);\r\n    let [path] = useState(props.path);\r\n\r\n    const closeViewer = event => {\r\n        props.eventStreamBuild.emit(\"EventView\", { action: false, target: null});\r\n        event.stopPropagation();\r\n    }\r\n\r\n    return (\r\n        \r\n        <div onClick = {closeViewer} className = 'Viewer'>\r\n            {(mode === 'image' || mode === 'background') ? <img src = {path} alt = 'fullImage' /> \r\n            : \r\n            <iframe \r\n            src= {`https://www.youtube.com/embed/${props.iframe}`}\r\n            title = 'youtube'\r\n            frameBorder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" \r\n            allowFullScreen>\r\n            </iframe>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nViewer.propTypes = {\r\n    eventStreamBuild: PropTypes.object.isRequired, // events stream\r\n    mode: PropTypes.string, // use mode\r\n    path: PropTypes.string // path to data component\r\n}\r\n\r\nexport default Viewer;","import React,{Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {SketchPicker} from 'react-color';\r\n\r\n\r\nconst InputInstruments = props => {\r\n\r\n    let {colorPickerActive} = props.instrumentPanel;\r\n    let {content} = props.componentStats;\r\n    let {fontSize} = props.componentStats;\r\n    let {coords} = props.componentStats;\r\n    let {size} = props.componentStats;\r\n\r\n    let _content = content !== '' ? 'Input' : '';\r\n\r\n    return (\r\n        <Fragment>\r\n            <p className = 'titleInstument'>Position: </p>\r\n            <span className = 'textCoordsPanel'>\r\n            {coords.x ?\r\n                coords.x + ' / ' + coords.y : ' drop for active'}\r\n            </span>\r\n            <p className = 'titleInstument'>Color: </p>\r\n            <div className = 'controllersText'>\r\n                <input \r\n                    onClick = {props.cbSetColor}\r\n                    className = 'button_switch color_switch'\r\n                    type = 'button'\r\n                    value = 'color pick'\r\n                />\r\n            </div>\r\n                { colorPickerActive ?\r\n                    <div className ='wrapperColorPicker'>\r\n                        <SketchPicker\r\n                        onChangeComplete={props.cbHandleChangeComplete}\r\n                        color = {props.color ? props.color : 'white'}\r\n                        />\r\n                    </div>\r\n                    : null\r\n                }\r\n            <p className = 'titleInstument'>Size (%):</p>\r\n            <div className = 'controllersText'>\r\n                <input\r\n                    className = 'button_switch'\r\n                    onChange = {props.cbSetWidth}\r\n                    type=\"number\"\r\n                    min = '10' max = '200'\r\n                    value = {size.w ? size.w : 100}\r\n                />\r\n                <input \r\n                    className = 'button_switch'\r\n                    onChange = {props.cbSetHeight}\r\n                    type=\"number\"\r\n                    min = '10' max = '200'\r\n                    value = {size.h ? size.h : 50}\r\n                />\r\n            </div>\r\n            <p className = 'titleInstument'>Text size: </p>\r\n            <input \r\n                className = 'button_switch'\r\n                onChange = {props.cbSetSize}\r\n                type=\"number\"\r\n                min = '10' max = '200'\r\n                value = {fontSize ? fontSize : 21}\r\n            />\r\n            <p className = 'titleInstument'>Border radius: </p>\r\n            <input\r\n                onChange = {props.cbSetBorderRadius}\r\n                className = 'button_switch radius'\r\n                type=\"number\"\r\n                value = {props.componentStats.borderRadius ?\r\n                            props.componentStats.borderRadius : 10\r\n                        }\r\n                min = '10' max = '200'\r\n            />\r\n\r\n            <p className = 'titleInstument'>Type input: </p>\r\n            <select \r\n            value = {props.componentStats.typeInput} \r\n            onChange = {props.cbSetType}\r\n            className = 'button_switch button_switch_type'>\r\n                <option>button</option>\r\n                <option>text</option>\r\n                <option>password</option>\r\n            </select>\r\n            <p className = 'titleInstument'>Content: </p>\r\n            <input\r\n            className = 'button_switch'\r\n            onChange = {props.cbSetContent}\r\n            maxLength = '100'\r\n            type = 'text'\r\n            value = {content ? content : _content}\r\n        />\r\n            <input \r\n                onClick = {props.cbDelete}\r\n                className = 'instrumentPanel__deleteComponentButton'\r\n                type=\"button\"\r\n                value = 'delete'\r\n            />\r\n        </Fragment>\r\n    )\r\n};\r\n\r\nInputInstruments.propTypes = {\r\n    componentStats: PropTypes.object.isRequired, // object with current component data\r\n    cbSetColor: PropTypes.func.isRequired, // callback set color\r\n    cbHandleChangeComplete: PropTypes.func.isRequired, // callback state color picker\r\n    cbSetWidth: PropTypes.func.isRequired, // callback set width\r\n    cbSetHeight: PropTypes.func.isRequired, // callback set height\r\n    cbSetSize: PropTypes.func.isRequired, // callback set size\r\n    cbSetBorderRadius: PropTypes.func.isRequired, // callback set border-radius\r\n    cbSetContent: PropTypes.func.isRequired, // callback set content input\r\n    cbDelete: PropTypes.func.isRequired, // callback delete\r\n}\r\n\r\nexport default InputInstruments;","import React,{Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst MediaInstruments = props => {\r\n\r\n    let {size} = props.componentStats;\r\n    let {coords} = props.componentStats;\r\n\r\n    return (\r\n        <Fragment>\r\n            <p className = 'titleInstument'>Position: </p>\r\n            <span className = 'textCoordsPanel'>\r\n            {coords.x ?\r\n                coords.x + ' / ' + coords.y : ' drop for active'}\r\n            </span>\r\n            <p className = 'titleInstument'>Size (%):</p>\r\n            <div className = 'controllersText media'>\r\n                <input\r\n                    className = 'button_switch'\r\n                    onChange = {props.cbSetWidth}\r\n                    type=\"number\"\r\n                    min = '10' max = '100'\r\n                    value = {size.w ? size.w : 30}\r\n                />\r\n                <input \r\n                    className = 'button_switch'\r\n                    onChange = {props.cbSetHeight}\r\n                    type=\"number\"\r\n                    min = '10' max = '100'\r\n                    value = {size.h ? size.h : 50}\r\n                />\r\n            </div>\r\n            <p className = 'titleInstument'>Content: </p>\r\n            <input \r\n                onClick = {props.cbSearch}\r\n                className = 'ImageSearchButton'\r\n                type=\"button\"\r\n                value = 'search media'\r\n            />\r\n            <input \r\n                onClick = {props.cbDelete}\r\n                className = 'instrumentPanel__deleteComponentButton'\r\n                type=\"button\"\r\n                value = 'delete'\r\n            />\r\n        </Fragment>\r\n    )\r\n};\r\n\r\nMediaInstruments.propTypes = {\r\n    componentStats: PropTypes.object.isRequired, // object with current component data\r\n    cbSearch: PropTypes.func.isRequired, // callback search\r\n    cbSetWidth: PropTypes.func.isRequired, // callback set width\r\n    cbSetHeight: PropTypes.func.isRequired, // callback set height\r\n    cbDelete: PropTypes.func.isRequired, // callback delete\r\n}\r\n\r\nexport default MediaInstruments;","import React, {Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ImageInstruments = props => {\r\n\r\n    let {coords} = props.componentStats;\r\n    let {size} = props.componentStats;\r\n    let {rotate} = props.componentStats;\r\n    let {scale} = props.componentStats;\r\n    let fileRef = React.createRef();\r\n    return (\r\n        <Fragment>\r\n        <p className = 'titleInstument'>Position: </p>\r\n        <span className = 'textCoordsPanel'>\r\n        {coords.x ?\r\n            coords.x + ' / ' + coords.y : ' drop for active'}\r\n        </span>\r\n        <p className = 'titleInstument'>Size (%):</p>\r\n        <div className = 'controllersText'>\r\n            <input\r\n                className = 'button_switch size'\r\n                onChange = {props.cbSetWidth}\r\n                type=\"number\"\r\n                min = '10' max = '100'\r\n                value = {size.w ? size.w : 30}\r\n            />\r\n            <input \r\n                className = 'button_switch size'\r\n                onChange = {props.cbSetHeight}\r\n                type=\"number\"\r\n                min = '10' max = '100'\r\n                value = {size.h ? size.h : 30}\r\n            />\r\n        </div>\r\n        <p className = 'titleInstument'>Rotate/Scale:</p>\r\n        <div className = 'controllersText'>\r\n            <input\r\n            className = 'button_switch rotate'\r\n            onChange = {props.cbRotate}\r\n            type=\"number\"\r\n            min = '0' max = '360'\r\n            value = {rotate ? rotate : 0}\r\n            />\r\n            <input\r\n            className = 'button_switch scale'\r\n            onChange = {props.cbScale}\r\n            type=\"number\"\r\n            step = '0.1'\r\n            min = '0' max = '2'\r\n            value = {scale ? scale : 1}\r\n            />\r\n        </div>\r\n        <p className = 'titleInstument'>Border radius: </p>\r\n            <input\r\n                onChange = {props.cbSetBorderRadius}\r\n                className = 'button_switch radius'\r\n                type=\"number\"\r\n                value = {props.componentStats.borderRadius ?\r\n                            props.componentStats.borderRadius : 10\r\n                        }\r\n                min = '10' max = '200'\r\n            />\r\n            <p className = 'titleInstument titleInstrument__opacity'>Opacity: </p>\r\n            <input \r\n                onChange = {props.cbSetOpacity}\r\n                className = 'ImageSearchButton'\r\n                type=\"number\"\r\n                value = {props.componentStats.opacity ?\r\n                    props.componentStats.opacity : 1\r\n                }\r\n                step = '0.1'\r\n                min = '0' max = '1'\r\n            />\r\n            <p className = 'titleInstument titleInstrument__opacity'>Loader: </p>\r\n            <div className = 'controllersText'>\r\n                <div className = 'fileLoader'>\r\n                    <input \r\n                        onClick = {props.cbSearch}\r\n                        className = 'ImageSearchButton file'\r\n                        type=\"button\"\r\n                        value = 'search image'\r\n                    />\r\n                    <input\r\n                        ref = {fileRef}\r\n                        className = 'fileInput'\r\n                        onChange = {props.cbLoadFile}\r\n                        accept=\"image/*\"\r\n                        type=\"file\"\r\n                    />\r\n                    <input\r\n                        className = 'ImageSearchButton file'\r\n                        type = 'button'\r\n                        value = 'loading file'\r\n                    />\r\n\r\n                </div>\r\n            </div>\r\n            <input \r\n                onClick = {props.cbDelete}\r\n                className = 'instrumentPanel__deleteComponentButton'\r\n                type=\"button\"\r\n                value = 'delete'\r\n            />\r\n        </Fragment>\r\n    )\r\n\r\n}\r\n\r\nImageInstruments.propTypes = {\r\n    componentStats: PropTypes.object.isRequired, // object with current component data\r\n    cbSetWidth: PropTypes.func.isRequired, // callback set width\r\n    cbSetHeight: PropTypes.func.isRequired, // callback set height\r\n    cbSetBorderRadius: PropTypes.func.isRequired, // callback set border-radius\r\n    cbSetOpacity: PropTypes.func.isRequired, // callback set opacity\r\n    cbLoadFile: PropTypes.func.isRequired, // callback load file\r\n    cbSearch: PropTypes.func.isRequired, // callback search\r\n    cbDelete: PropTypes.func.isRequired, // callback delete\r\n}\r\n\r\nexport default ImageInstruments;","import React, {Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {SketchPicker} from 'react-color';\r\n\r\nconst BackgroundInstruments = props => {\r\n    let  {targetSection} = props.componentStats;\r\n    return (\r\n        <Fragment>\r\n        <p className = 'titleInstument'>Color: </p>\r\n        <input\r\n            onClick = {props.cbSetColor}\r\n            className = 'button_switch Color'\r\n            type = 'button'\r\n            value = 'color pick'\r\n        />\r\n            { props.colorPickerActive ?\r\n                <SketchPicker\r\n                    onChangeComplete={props.cbHandleChangeComplete}\r\n                    color = {props.color ? props.color : 'white'}\r\n                />\r\n                : null\r\n            }\r\n            <input \r\n                onClick = {props.cbSearch}\r\n                className = 'ImageSearchButton'\r\n                type = 'button'\r\n                value = 'background-image'\r\n            />\r\n            <input\r\n                disabled = {targetSection === 'Header'}\r\n                onClick = {props.cbDelete}\r\n                className = 'instrumentPanel__deleteComponentButton'\r\n                type=\"button\"\r\n                value = 'delete'\r\n            />\r\n        </Fragment>\r\n    )\r\n\r\n}\r\n\r\nBackgroundInstruments.propTypes = {\r\n    componentStats: PropTypes.object.isRequired, // object with current component data\r\n    cbSetColor: PropTypes.func.isRequired, // callback set color\r\n    cbHandleChangeComplete: PropTypes.func.isRequired, // callback picker state change\r\n    cbSearch: PropTypes.func.isRequired, // callback search\r\n}\r\n\r\nexport default BackgroundInstruments;","import React,{Fragment} from 'react';\r\nimport {SketchPicker} from 'react-color';\r\n\r\nconst TextInstruments = props => {\r\n\r\n\r\n        let {colorPickerActive} = props.instrumentPanel;\r\n        let {content} = props.componentStats;\r\n        let {fontSize} = props.componentStats;\r\n        let {coords} = props.componentStats;\r\n        let {rotate} = props.componentStats;\r\n        let {scale} = props.componentStats;\r\n        let _content = content !== '' ? 'Title' : '';\r\n        return (\r\n            <Fragment>\r\n            <p className = 'titleInstument'>Position: </p>\r\n            <span className = 'textCoordsPanel'>\r\n            {coords.x ?\r\n                coords.x + ' / ' + coords.y : ' drop for active'}\r\n            </span>\r\n            <p className = 'titleInstument'>Rotate/Scale:</p>\r\n            <div className = 'controllersText'>\r\n                <input\r\n                className = 'button_switch rotate'\r\n                onChange = {props.cbRotate}\r\n                type=\"number\"\r\n                min = '0' max = '360'\r\n                value = {rotate ? rotate : 0}\r\n                />\r\n                <input\r\n                className = 'button_switch scale'\r\n                onChange = {props.cbScale}\r\n                type=\"number\"\r\n                step = '0.1'\r\n                min = '0' max = '2'\r\n                value = {scale ? scale : 1}\r\n                />\r\n            </div>\r\n            <p className = 'titleInstument'>Color: </p>\r\n            <input \r\n                onClick = {props.cbSetColor}\r\n                className = 'button_switch color'\r\n                type = 'button'\r\n                value = 'color pick'\r\n            />\r\n            <p className = 'titleInstument'>Text size: </p>\r\n            <input \r\n                className = 'button_switch size'\r\n                onChange = {props.cbSetSize}\r\n                type=\"number\"\r\n                min = '10' max = '200'\r\n                value = {fontSize ? fontSize : 120}\r\n            />\r\n                { colorPickerActive ?\r\n                    <div className ='wrapperColorPicker text'>\r\n                        <SketchPicker\r\n                            onChangeComplete={props.cbHandleChangeComplete}\r\n                            color = {props.color ? props.color : 'red'}\r\n                        />\r\n                    </div>\r\n                    : null\r\n                }\r\n                <p className = 'titleInstument'>Font: </p>\r\n                <select \r\n                    value = {props.componentStats.font} \r\n                    onChange = {props.cbSetFont}\r\n                    className = 'button_switch font'\r\n                >\r\n                <option>Arial</option>\r\n                <option>Times</option>\r\n                <option>Georgia</option>\r\n                <option>Impact</option>\r\n                <option>Tahoma</option>\r\n                <option>Verdana</option>\r\n                <option>Comic</option>\r\n                </select>\r\n            <p className = 'titleInstument'>Content: </p>\r\n            <input\r\n                className = 'button_switch content'\r\n                onChange = {props.cbSetContent}\r\n                maxLength = '100'\r\n                type = 'text'\r\n                value = {content ? content : _content}\r\n            />\r\n            <input \r\n                onClick = {props.cbDelete}\r\n                className = 'instrumentPanel__deleteComponentButton'\r\n                type=\"button\"\r\n                value = 'delete'\r\n            />\r\n            </Fragment>\r\n        )\r\n}\r\n\r\nexport default TextInstruments;","import React from 'react';\r\nimport eventEmitter,{controllerStream} from '../../EventEmitter';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport InputInstruments from './InputTools/InputInstruments';\r\nimport MediaInstruments from './MediaTools/MediaInstruments';\r\nimport ImageInstruments from './ImageTools/ImageInstruments';\r\nimport BackgroundInstruments from './BackgroundTools/BackgroundInstruments';\r\nimport TextInstruments from './TextTools/TextInstruments';\r\nimport Icon from '../Icon/icon';\r\n\r\nimport './instrumentsPanel.scss';\r\n\r\n\r\n\r\nclass InstrumentsPanel extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        instrumentPanel:  PropTypes.object.isRequired, /** @Settings for panel and data about component */\r\n        editComponentName: PropTypes.string, /** @Name editable component */\r\n        eventStreamBuild: PropTypes.object.isRequired // stream events\r\n    };\r\n\r\n    state = {\r\n        instrumentPanel: {...this.props.instrumentPanel},\r\n        componentStats: this.props.componentStats,\r\n        images: null,\r\n    };\r\n\r\n\r\n    closePanel = event => {\r\n        this.props.eventStreamBuild.emit('EventClosePanel', {close: false});\r\n    };\r\n\r\n    setSize = event => {\r\n        let {id} = this.state.componentStats;\r\n        let size = event.target.value > 200 ? 200 : event.target.value;\r\n\r\n        if (this.state.componentStats.type !== 'input')\r\n        this.setState({\r\n            ...this.state, \r\n            instrumentPanel: {...this.state.instrumentPanel},\r\n            componentStats: {...this.state.componentStats,fontSize: size}\r\n        }, () => controllerStream.emit(`EventChangeSize${id}`, {\r\n                targetSection: this.state.editComponentName, size: size \r\n        }));\r\n        else this.setState({\r\n                ...this.state, \r\n                instrumentPanel: {...this.state.instrumentPanel},\r\n                componentStats: {...this.state.componentStats,fontSize: size}\r\n            }, () => controllerStream.emit(`EventChangeSizeText${id}`, {size: size}\r\n            ));\r\n    };\r\n\r\n    setFont = event => {\r\n        let {id} = this.state.componentStats;\r\n        let fontName = event.target.value;\r\n        this.setState({\r\n            ...this.state, \r\n            instrumentPanel: {...this.state.instrumentPanel},\r\n            componentStats: {...this.state.componentStats,font: fontName}\r\n        },\r\n            () => controllerStream.emit(`EventSetFont${id}`, {\r\n                targetSection: this.state.editComponentName, font: fontName\r\n            })\r\n        );\r\n    }\r\n\r\n    rotate = event => {\r\n        let {id} = this.state.componentStats;\r\n        let angle = event.target.value;\r\n        this.setState({\r\n            ...this.state, \r\n            instrumentPanel: {...this.state.instrumentPanel},\r\n            componentStats: {...this.state.componentStats, rotate: angle}\r\n        },\r\n        () => controllerStream.emit(`EventResize${id}`,{angle: angle}));\r\n        event.stopPropagation();\r\n    }\r\n\r\n    scale = event => {\r\n        let {id} = this.state.componentStats;\r\n        let scale = event.target.value;\r\n        this.setState({\r\n            ...this.state, \r\n            instrumentPanel: {...this.state.instrumentPanel},\r\n            componentStats: {...this.state.componentStats, scale: scale}\r\n        },\r\n        () => controllerStream.emit(`EventScale${id}`,{scale: scale}));\r\n        event.stopPropagation();\r\n    }\r\n\r\n    setIframeContent = eventItem => {\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            componentStats:{\r\n                ...this.state.componentStats,\r\n                content: eventItem.iframe\r\n            }\r\n        });\r\n    }\r\n\r\n    setContent = event => {\r\n        let {id} = this.state.componentStats;\r\n        let contentValue = event.target.value;\r\n        this.setState({\r\n            ...this.state, \r\n            instrumentPanel: {...this.state.instrumentPanel},\r\n            componentStats: {...this.state.componentStats,content: contentValue}\r\n        },\r\n            () => controllerStream.emit(`EventChangeContentText${id}`,{\r\n                targetSection: this.state.editComponentName, content: contentValue\r\n            })\r\n        );\r\n        if (event) event.stopPropagation();\r\n    };\r\n\r\n    setWidth = event => {\r\n        const {id} = this.state.componentStats;\r\n        const width = event.target.value;\r\n        this.setState({\r\n            ...this.state,\r\n            componentStats: {...this.state.componentStats,\r\n                size: {\r\n                    ...this.state.componentStats.size,\r\n                    w: width\r\n                }}\r\n        },\r\n            () => controllerStream.emit(`EventSetWidth${id}`,{width: width}));\r\n\r\n        if (event) event.stopPropagation();\r\n    };\r\n\r\n    setHeight = event => {\r\n        const {id} = this.state.componentStats;\r\n        const height = event.target.value;\r\n        this.setState({\r\n            ...this.state,\r\n            componentStats: {...this.state.componentStats,\r\n                size: {\r\n                    ...this.state.componentStats.size,\r\n                    h: height\r\n                }}\r\n        },\r\n            () => controllerStream.emit(`EventSetHeight${id}`,{height: height}));\r\n\r\n        if (event) event.stopPropagation();\r\n    }\r\n\r\n    updatePosition = eventItem => {\r\n        if (!eventItem) return;\r\n        this.setState({\r\n            ...this.state, \r\n            componentStats: {\r\n                ...this.state.componentStats,\r\n                coords: {\r\n                    ...this.state.componentStats.coords,\r\n                    x: eventItem.x,\r\n                    y: eventItem.y\r\n                }\r\n            }\r\n        });\r\n    };\r\n\r\n    setColor = event => {\r\n        this.setState({...this.state,\r\n            instrumentPanel:{\r\n                ...this.state.instrumentPanel,\r\n                colorPickerActive: this.state.instrumentPanel.colorPickerActive ? false : true\r\n            }\r\n        });\r\n        if (event) event.stopPropagation();\r\n    };\r\n\r\n    setType = event => {\r\n\r\n        let {id} = this.state.componentStats;\r\n        let typeInput = event.target.value;\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            componentStats: {\r\n                ...this.state.componentStats,\r\n                typeInput: typeInput\r\n            }\r\n        },\r\n         () => controllerStream.emit(`EventSetType${id}`, typeInput));\r\n        if (event) event.stopPropagation();\r\n    }\r\n\r\n    setOpacity = event => {\r\n        let {id} = this.state.componentStats;\r\n        let opacity = event.target.value;\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            componentStats: {...this.state.componentStats,opacity: opacity}\r\n        },\r\n         () => controllerStream.emit(`EventSetOpacity${id}`, {opacity: opacity}));\r\n    };\r\n\r\n    setBorderRadius = event => {\r\n        let {id} = this.state.componentStats;\r\n        let radius = event.target.value;\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            componentStats: {...this.state.componentStats,borderRadius: radius}\r\n        },\r\n         () => controllerStream.emit(`EventSetBorderRadius${id}`, {borderRadius: radius}));\r\n    };\r\n\r\n    updateBimageStats = eventItem => {\r\n        const {images} = eventItem;\r\n        if (eventItem.mode !== 'image')\r\n        this.setState({\r\n            ...this.state,\r\n            componentStats:{\r\n                ...this.state.componentStats,\r\n                backgroundImage: images.urlFull\r\n            }\r\n        });\r\n        else {\r\n            this.setState({\r\n                ...this.state,\r\n                componentStats:{\r\n                    ...this.state.componentStats,\r\n                    image: images.urlFull\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    handleChangeComplete = event => {\r\n\r\n        const {rgb} = event;\r\n        let colorRGB = `rgb(${rgb.r},${rgb.g},${rgb.b},${rgb.a})`;\r\n\r\n        let {id} = this.state.componentStats;\r\n        if (this.state.componentStats.type === 'background'){\r\n            this.setState({\r\n                ...this.state,\r\n                componentStats: {...this.state.componentStats,color: colorRGB}\r\n            }, () => controllerStream.emit(`EventChangeColorBackground${id}`,\r\n                        {colorRGB: this.state.componentStats.color}\r\n                    ));\r\n        }\r\n\r\n        else if (this.state.componentStats.type === 'text') {\r\n            this.setState({\r\n                ...this.state,\r\n                componentStats: {...this.state.componentStats,color: colorRGB}\r\n            },\r\n            () => controllerStream.emit(`EventChangeColorText${id}`, colorRGB));\r\n        }\r\n\r\n        else if (this.state.componentStats.type === 'input') {\r\n            this.setState({\r\n                ...this.state,\r\n                componentStats: {...this.state.componentStats,color: colorRGB}\r\n            },\r\n            () => controllerStream.emit(`EventChangecolor${id}`, colorRGB));\r\n        }\r\n\r\n    };\r\n\r\n    redirectSaveChanges = event => {\r\n        this.props.eventStreamBuild.emit(\"EventSaveChangesComponent\", {\r\n            ...this.state.componentStats,\r\n            id: this.state.componentStats.id,\r\n            type: this.state.componentStats.type,\r\n            ms: 0\r\n        });\r\n        if (event) event.stopPropagation();\r\n    }\r\n\r\n    saveChanges = event => {\r\n\r\n        this.props.eventStreamBuild.emit(\"EventSaveChangesComponent\", {\r\n                ...this.state.componentStats,\r\n                id: this.state.componentStats.id,\r\n                type: this.state.componentStats.type,\r\n                ms: 1500,\r\n            });\r\n\r\n        eventEmitter.emit('EventRedirectConfirm', true);\r\n        if (event) event.stopPropagation();\r\n    }\r\n\r\n    deleteComponent = event => {\r\n        this.props.eventStreamBuild.emit('EventDeleteComponent', {\r\n            id: this.state.componentStats.id,\r\n            targetSection: this.state.componentStats.targetSection,\r\n            type: this.state.componentStats.type\r\n        });\r\n    };\r\n\r\n    search = event => {\r\n\r\n        let {id} = this.state.componentStats;\r\n        this.props.eventStreamBuild.emit('EventModalSearchOn',{\r\n            idComponent: id,\r\n            mode: this.state.componentStats.type\r\n        });\r\n\r\n        event.stopPropagation();\r\n    };\r\n\r\n    loadFile = event => {\r\n        let {id} = this.state.componentStats;\r\n        try {\r\n            let image = event.target.files[0];\r\n            let reader = new FileReader();\r\n            if (image.type[0] !== 'i') throw new Error('Invalid file');\r\n            reader.readAsDataURL(image);\r\n            reader.onload = (e) => {\r\n                controllerStream.emit(`EventSetCurrentImage${id}`,{ urlFull: reader.result });\r\n                this.updateBimageStats({images: { urlFull: reader.result }, mode: 'image'});\r\n                e.stopPropagation();\r\n            }\r\n            reader.onerror = () => {\r\n                console.error(reader.error);\r\n            }\r\n        } catch (error) {\r\n            console.error(error.message);\r\n        }\r\n\r\n        event.stopPropagation();\r\n    }\r\n\r\n    makePanelInstruments = (type) => {\r\n            switch (type){\r\n                case 'text':\r\n                   return(\r\n                    <TextInstruments\r\n                        instrumentPanel = {{...this.state.instrumentPanel}}\r\n                        componentStats = {{...this.state.componentStats}}\r\n                        cbSetColor = {this.setColor}\r\n                        cbSetSize = {this.setSize}\r\n                        cbHandleChangeComplete = {this.handleChangeComplete}\r\n                        cbSetContent = {this.setContent}\r\n                        cbSetFont = {this.setFont}\r\n                        cbSetOpacity = {this.setOpacity}\r\n                        color = {this.state.componentStats.color}\r\n                        cbDelete = {this.deleteComponent}\r\n                        cbRotate = {this.rotate}\r\n                        cbScale = {this.scale}\r\n                    />\r\n                   )\r\n                case 'background':\r\n                    return (\r\n                        <BackgroundInstruments\r\n                            colorPickerActive = {this.state.instrumentPanel.colorPickerActive}\r\n                            componentStats = {{...this.state.componentStats}}\r\n                            cbSetColor = {this.setColor}\r\n                            color = {this.state.componentStats.color}\r\n                            cbHandleChangeComplete = {this.handleChangeComplete}\r\n                            cbSearch = {this.search}\r\n                            cbDelete = {this.deleteComponent}\r\n                        />\r\n                    )\r\n                case 'image':\r\n                        return (\r\n                            <ImageInstruments\r\n                                instrumentPanel = {{...this.state.instrumentPanel}}\r\n                                componentStats = {{...this.state.componentStats}}\r\n                                cbSearch = {this.search}\r\n                                cbSetSize = {this.setSize}\r\n                                cbSetBorderRadius = {this.setBorderRadius}\r\n                                cbSetOpacity = {this.setOpacity}\r\n                                cbSetWidth = {this.setWidth}\r\n                                cbSetHeight = {this.setHeight}\r\n                                cbLoadFile = {this.loadFile}\r\n                                cbDelete = {this.deleteComponent}\r\n                                cbRotate = {this.rotate}\r\n                                cbScale = {this.scale}\r\n                            />\r\n                        )\r\n                case 'media':\r\n                        return (\r\n                            <MediaInstruments\r\n                                instrumentPanel = {{...this.state.instrumentPanel}}\r\n                                componentStats = {{...this.state.componentStats}}\r\n                                cbSearch = {this.search}\r\n                                cbSetWidth = {this.setWidth}\r\n                                cbSetHeight = {this.setHeight}\r\n                                cbDelete = {this.deleteComponent}\r\n                            />\r\n                            )\r\n                case 'input':\r\n                        return (\r\n                            <InputInstruments\r\n                                instrumentPanel = {{...this.state.instrumentPanel}}\r\n                                componentStats = {{...this.state.componentStats}}\r\n                                cbSetColor = {this.setColor}\r\n                                cbSetBorderRadius = {this.setBorderRadius}\r\n                                cbHandleChangeComplete = {this.handleChangeComplete}\r\n                                cbSetSize = {this.setSize}\r\n                                cbSetWidth = {this.setWidth}\r\n                                cbSetHeight = {this.setHeight}\r\n                                color = {this.state.componentStats.color}\r\n                                cbSetContent = {this.setContent}\r\n                                cbSetType = {this.setType}\r\n                                cbDelete = {this.deleteComponent}\r\n                            />\r\n                        )\r\n                default: return <p className = 'warningInstruments'>No found element</p>\r\n            }\r\n    };\r\n\r\n    render(){\r\n        let { instrumentActive } = this.state.instrumentPanel;\r\n        return (\r\n\r\n                <div  className = 'instumentsPanel'>\r\n                    <button\r\n                        onClick = {this.closePanel}\r\n                        className = 'closeInstrumentsPanel'\r\n                    >\r\n                        <Icon path = '/img/close.svg' />\r\n                    </button>\r\n                    <h3>Instruments</h3>\r\n                    {\r\n                        instrumentActive ? \r\n                        <p className = 'TextComponent'>{this.state.componentStats.type}</p>\r\n                        : null\r\n                    }\r\n                    {\r\n                        instrumentActive ?\r\n                        <div className = 'instuments'>\r\n                            {this.makePanelInstruments(this.state.componentStats.type)}\r\n                        </div>\r\n                        : null\r\n                    }\r\n                </div>\r\n        )\r\n    };\r\n\r\n    componentDidUpdate = (oldProps, oldState) => {\r\n        if (oldState.componentStats !== this.state.componentStats)\r\n        this.saveChanges();\r\n    };\r\n\r\n    componentDidMount = event => {\r\n        eventEmitter.on('EventRedirectSaveChanges', this.redirectSaveChanges);\r\n        eventEmitter.on(\"EventSetBImageInstumentPanel\", this.updateBimageStats);\r\n        eventEmitter.on(`EventSetIframe`, this.setIframeContent);\r\n        controllerStream.on(`EventUpdatePosition${this.state.componentStats.id}`, this.updatePosition);\r\n    };\r\n\r\n    componentWillUnmount = event => {\r\n        if (this.timer) clearTimeout(this.timer);\r\n        eventEmitter.off('EventRedirectSaveChanges', this.redirectSaveChanges);\r\n        eventEmitter.off(\"EventSetBImageInstumentPanel\", this.updateBimageStats);\r\n        eventEmitter.off(`EventSetIframe`, this.setIframeContent);\r\n        controllerStream.off(`EventUpdatePosition${this.state.componentStats.id}`, this.updatePosition);\r\n    };\r\n};\r\n\r\nexport default InstrumentsPanel;","import React,{Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Viewer from '../imageViewer/Viewer';\r\nimport InstrumentsPanel from '../../components/instrumentsPanel/InstrumentsPanel';\r\nimport ModalWindow from '../../components/modalWindow/ModalWindow';\r\nimport {CSSTransition} from 'react-transition-group';\r\n\r\nclass AdditionalTools extends React.PureComponent{\r\n\r\n    static propTypes = {\r\n        eventStreamBuild: PropTypes.object.isRequired, // events stream\r\n    }\r\n\r\n    state = {\r\n        modal: {\r\n            modalSearch: false, /** @bool active modal search image/media */\r\n            modalSearchMode: null, /** @String work mode of search modal */\r\n        },\r\n        modalViewer: {action: false, image: null, mode: null }, /** @Object data with viewer data */\r\n        instrumentPanel: { /** @Object with data controll instrument panel */\r\n            colorPickerActive: false,\r\n            instrumentActive: false,\r\n        },\r\n        componentStats: {}, /** @Object with data about components */\r\n        editComponentName:  this.props.editComponentName, /** @String | @null name current edit component */\r\n    }\r\n\r\n    modalSearchOn = itemEvent => {\r\n        this.setState({\r\n            ...this.state,\r\n            modal:{\r\n                ...this.state.modal,\r\n                modalSearch: !this.state.modal.modalSearch,\r\n                modalSearchMode: itemEvent.mode || null\r\n            }\r\n        });\r\n    }\r\n\r\n    ViewerSwitch = itemEvent => {\r\n        /* set settings for viewer */\r\n        this.setState({\r\n            ...this.state,\r\n            modalViewer: {\r\n                ...this.state.modalViewer,\r\n                action: itemEvent.action,\r\n                target: itemEvent.target,\r\n                mode: itemEvent.mode,\r\n                iframe: itemEvent.iframe\r\n            }\r\n        });\r\n    };\r\n\r\n    openInstrument = itemEvent => {\r\n        /* build instrument panel component */\r\n           const idEqual = this.state.componentStats.id === itemEvent.componentStats.id;\r\n           if (!idEqual || !this.state.instrumentPanel.instrumentActive)\r\n           this.setState({\r\n               ...this.state,\r\n               editComponentName: itemEvent.targetSection,\r\n               componentStats: {\r\n                   ...this.state.componentStats,\r\n                   ...itemEvent.componentStats\r\n               },\r\n               instrumentPanel: {\r\n                   ...this.state.instrumentPanel,\r\n                   instrumentActive: true,\r\n               }\r\n           });\r\n   }\r\n\r\n   closePanel = itemEvent => {\r\n        /* unmount unstrument panel component */\r\n       this.setState({\r\n           ...this.state,\r\n           instrumentPanel: {\r\n               ...this.state.instrumentPanel,\r\n               colorPickerActive: false,\r\n               instrumentActive: itemEvent.close\r\n           }\r\n       });\r\n   };\r\n\r\n    render(){\r\n        const props = this.props;\r\n        if (this.state.instrumentPanel.instrumentActive){\r\n            return (\r\n                <Fragment key = 'AdditionalBuild'>\r\n                    <CSSTransition\r\n                        in={this.state.modalViewer.action}\r\n                        timeout={300}\r\n                        classNames=\"modalAnimation\"\r\n                        unmountOnExit\r\n                        appear\r\n                    >\r\n                        <Viewer\r\n                            key = 'ImageViewer'\r\n                            eventStreamBuild = {props.eventStreamBuild}\r\n                            mode = {this.state.modalViewer.mode}\r\n                            path = {this.state.modalViewer.target}\r\n                            iframe = {this.state.modalViewer.iframe}\r\n                        />\r\n                    </CSSTransition>\r\n                    <CSSTransition\r\n                        in={this.state.modal.modalSearch}\r\n                        timeout={300}\r\n                        classNames=\"modalAnimation\"\r\n                        unmountOnExit\r\n                        appear\r\n                    >\r\n                            <ModalWindow\r\n                                eventStreamBuild = {props.eventStreamBuild}\r\n                                idComponent = {this.state.componentStats.id}\r\n                                modalSearchMode = {this.state.modal.modalSearchMode}\r\n                                key = 'ModalWindow' workMode = 'Search'\r\n                            />\r\n                    </CSSTransition>\r\n                        <InstrumentsPanel\r\n                            key = {`InstrumentsPanel${this.state.componentStats.id}`}\r\n                            eventStreamBuild = {props.eventStreamBuild}\r\n                            editComponentName = {this.state.editComponentName}\r\n                            componentStats = {this.state.componentStats}\r\n                            instrumentPanel = {this.state.instrumentPanel}\r\n                        />\r\n                </Fragment>\r\n            )\r\n        } else return <Fragment></Fragment>;\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.props.eventStreamBuild.on('EventModalSearchOn', this.modalSearchOn);\r\n        this.props.eventStreamBuild.on('EventView', this.ViewerSwitch);\r\n        this.props.eventStreamBuild.on('EventClosePanel', this.closePanel);\r\n        this.props.eventEmitter.on('EventInstrumentPanel', this.openInstrument);\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        this.props.eventStreamBuild.off('EventModalSearchOn', this.modalSearchOn);\r\n        this.props.eventEmitter.off('EventInstrumentPanel', this.openInstrument);\r\n        this.props.eventStreamBuild.off('EventView', this.ViewerSwitch);\r\n        this.props.eventStreamBuild.off('EventClosePanel', this.closePanel);\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport default AdditionalTools;","import React,{Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Input from '../buildComponents/components/Input';\r\nimport Media from '../buildComponents/components/Media';\r\nimport Image from '../buildComponents/components/Image';\r\nimport TextComponent from '../buildComponents/components/Text';\r\nimport BackgroundComponent from '../buildComponents/components/Background';\r\n\r\nimport './buildMenu.scss';\r\n\r\nclass BuildMenu extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        mode: PropTypes.string.isRequired, /** @String work mode component */\r\n        editComponentName: PropTypes.string,\r\n        eventStreamBuild: PropTypes.object, /** @Events stream build */\r\n        countSection: PropTypes.number, /** @Number for new section id */\r\n        countComponents: PropTypes.number, /** @Number last project */\r\n        sizeParentBox: PropTypes.object /** @Object with width and height parent(bg) */\r\n    }\r\n\r\n\r\n    state = {\r\n        mode: this.props.mode,\r\n        sizeParentBox: {...this.props.sizeParentBox},\r\n        title: 'Title'\r\n    }\r\n\r\n    addText = event => {\r\n        let id = Math.random().toFixed(3);\r\n\r\n        const componentsPatternText = {\r\n            type: 'text',\r\n            font: 'Arial',\r\n            color: null,\r\n            rotate: 0,\r\n            scale: 1,\r\n            opacity: 1,\r\n            fontSize: null,\r\n            content: 'Title',\r\n            coords: {x: null, y: null}, // x, y\r\n            id: id,\r\n            targetSection: this.props.editComponentName,\r\n        };\r\n        this.props.eventStreamBuild.emit('EventBuildComponents',{\r\n            componentsPattern: componentsPatternText,\r\n            type: componentsPatternText.type,\r\n            component: <TextComponent\r\n                            key = {`text${id}`}\r\n                            mode = 'dev'\r\n                            {...componentsPatternText}\r\n                            sizeParentBox = {{...this.props.sizeParentBox}}\r\n                            id = {id}\r\n                        >Title</TextComponent>\r\n        });\r\n        event.stopPropagation();\r\n    }\r\n\r\n    addBackground = event => {\r\n        let id = Math.random().toFixed(3);\r\n\r\n        const componentsPatternBackground = {\r\n            id: id,\r\n            type: 'background',\r\n            backgroundColor: null,\r\n            backgroundImage: null,\r\n            targetSection: this.state.editComponentName,\r\n        };\r\n\r\n        this.props.eventStreamBuild.emit('EventBuildComponents',{\r\n            componentsPattern: componentsPatternBackground,\r\n            type: componentsPatternBackground.type,\r\n            component: <BackgroundComponent\r\n                            targetSection = {this.props.editComponentName}\r\n                            {...componentsPatternBackground}\r\n                            key = {`bg${id}`}\r\n                            id = {id}\r\n                        />\r\n        });\r\n\r\n        event.stopPropagation();\r\n    }\r\n\r\n    addImage = event => {\r\n        let id = Math.random().toFixed(3);\r\n\r\n        const componentsPatternImage = {\r\n            borderRadius: 0,\r\n            type: 'image',\r\n            size: {w: 30, h: 50},\r\n            opacity: 1,\r\n            rotate: 0,\r\n            zIndex: null,\r\n            image: process.env.PUBLIC_URL + '/img/photoPattern.svg',\r\n            coords: {x: null, y: null}, // x, y\r\n            id: id,\r\n            targetSection: this.props.editComponentName,\r\n        };\r\n        this.props.eventStreamBuild.emit('EventBuildComponents',{\r\n            componentsPattern: componentsPatternImage,\r\n            type: componentsPatternImage.type,\r\n            component: <Image\r\n                            key = {`image${id}`}\r\n                            sizeParentBox = {this.props.sizeParentBox}\r\n                            id = {id}\r\n                            mode = 'dev'\r\n                            path = {'/img/photoPattern.svg'}\r\n                            {...componentsPatternImage}\r\n                            type = 'image' />\r\n        });\r\n        event.stopPropagation();\r\n    }\r\n\r\n    addMedia = event => {\r\n        let id = Math.random().toFixed(3);\r\n\r\n        const  componentsPatternMedia = {\r\n            type: 'media',\r\n            size: {w: null, h: null},\r\n            content: null,\r\n            coords: {x: null, y: null}, // x, y\r\n            id: id,\r\n            targetSection: this.props.editComponentName,\r\n        };\r\n\r\n        this.props.eventStreamBuild.emit('EventBuildComponents', {\r\n            componentsPattern: componentsPatternMedia,\r\n            type: componentsPatternMedia.type,\r\n            component: <Media\r\n                            key = {`media${id}`}\r\n                            targetSection = {this.props.editComponentName}\r\n                            sizeParentBox = {this.props.sizeParentBox}\r\n                            content = {null}\r\n                            id = {id}\r\n                            path = {'/img/photoPattern.mp4'}\r\n                            {...componentsPatternMedia}\r\n                            type = 'media'\r\n                            mode = 'dev'\r\n                        />\r\n        });\r\n        event.stopPropagation();\r\n    }\r\n\r\n    addInput = event => {\r\n        let id = Math.random().toFixed(3);\r\n\r\n        const  componentsPatternInput = {\r\n            type: 'input',\r\n            size: {w: null, h: null},\r\n            typeInput: 'button',\r\n            color: null,\r\n            fontSize: null,\r\n            borderRadius: null,\r\n            content: null,\r\n            coords: {x: null, y: null}, // x, y\r\n            id: id,\r\n            targetSection: this.props.editComponentName,\r\n        };\r\n\r\n        this.props.eventStreamBuild.emit('EventBuildComponents', {\r\n            componentsPattern: componentsPatternInput,\r\n            type: componentsPatternInput.type,\r\n            component: <Input\r\n                            key = {`input${id}`}\r\n                            targetSection = {this.props.editComponentName}\r\n                            sizeParentBox = {this.props.sizeParentBox}\r\n                            id = {id}\r\n                            inputType = 'button'\r\n                            {...componentsPatternInput}\r\n                            type = 'input'\r\n                            mode = 'dev'\r\n                        />\r\n        });\r\n        event.stopPropagation();\r\n    }\r\n\r\n    addSection = event => {\r\n        let id = Math.random().toFixed(3);\r\n\r\n        const componentsPatternBackground = {\r\n            backgroundColor: null,\r\n            backgroundImage: null,\r\n            targetSection: `Section${id}`,\r\n            id: `Section${id}`,\r\n            type: 'background',\r\n        };\r\n        this.props.eventStreamBuild.emit('EventNewSection', {\r\n            componentsPattern: componentsPatternBackground,\r\n            component: <BackgroundComponent\r\n                            {...componentsPatternBackground}\r\n                            key = {`bg${id}`}\r\n                            id = {id}\r\n                            targetSection = {`Section${id}`}\r\n                            width = '100%'\r\n                            height = '800px'\r\n                            type = 'background'\r\n                            mode = 'dev'\r\n                        />\r\n        });\r\n        event.stopPropagation();\r\n    }\r\n\r\n    render(){\r\n\r\n        if (this.state.mode === 'build'){\r\n            return (\r\n                <div className = 'ComponentsMenu'>\r\n                    <button \r\n                        onClick = {this.addImage} \r\n                        className = 'ImageTool CompoentnsMenu_button' \r\n                    >\r\n                        <span>Image</span>\r\n                    </button>\r\n                    <button \r\n                        onClick = {this.addText} \r\n                        className = 'TextTool CompoentnsMenu_button' >\r\n                        <span>Text</span>\r\n                    </button>\r\n                    <button\r\n                        onClick = {this.addInput}\r\n                        disabled = {this.props.editComponentName !== 'Header' ? false : true}\r\n                        className = 'ButtonTool CompoentnsMenu_button' >\r\n                        <span>Button</span>\r\n                    </button>\r\n                    <button onClick = {this.addMedia}\r\n                        className = 'VideoTool CompoentnsMenu_button'\r\n                    >\r\n                        <span>Video</span>\r\n                    </button>\r\n                </div>\r\n            )\r\n        } else if (this.state.mode === 'section') {\r\n            return (\r\n                <div className = 'sectionMode'>\r\n                    <button\r\n                        onClick = {this.addSection}\r\n                        className = 'newSectionTool CompoentnsMenu_button'\r\n                    >\r\n                        <span>New section</span>\r\n                    </button>\r\n                </div>\r\n            )\r\n        } else return <Fragment></Fragment>\r\n    }\r\n}\r\n\r\nexport default BuildMenu;","import React,{Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Icon from '../Icon/icon';\r\nimport BuildMenu from '../componentsBuildMenu/BuildMenu';\r\n\r\nimport './controllers.scss';\r\n\r\nclass Controllers extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        countComponents: PropTypes.number.isRequired, /** @number last project id */\r\n        sizeParentBox: PropTypes.object, /** @Object with width and height parent(bg) */\r\n        eventStreamBuild: PropTypes.object, /** @Events stream */\r\n        menuActive: PropTypes.bool, /** @Bool value active menu or unactive */\r\n    }\r\n\r\n    state = {\r\n        viewComponentMenu: false,\r\n        editComponentName: this.props.editComponentName,\r\n        shiftX: 0,\r\n        shiftY: 0,\r\n        coordsX: '50%',\r\n        coordsY: '0',\r\n        shadowDisplay: 'block'\r\n    }\r\n\r\n    componentMenu = event => {\r\n        this.setState({viewComponentMenu: this.state.viewComponentMenu ? false : true});\r\n        event.stopPropagation();\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <Fragment>\r\n            {\r\n                <div\r\n                ref = {this.refControll}\r\n                className = 'ControllersEditComponent'\r\n                >\r\n                    <Icon\r\n                        onClick = {this.componentMenu}\r\n                        className = 'ControllersEditComponent__addButton'\r\n                        path = '/img/addButton.png'\r\n                    />\r\n                    { this.state.viewComponentMenu ?\r\n                        <BuildMenu\r\n                            key = {`buildMenu ${this.state.editComponentName}`}\r\n                            mode = 'build'\r\n                            eventStreamBuild = {this.props.eventStreamBuild}\r\n                            editComponentName = {this.state.editComponentName}\r\n                            sizeParentBox = {this.props.sizeParentBox}\r\n                            countComponents = {this.props.countComponents}\r\n                        /> : null\r\n                    }\r\n                </div>\r\n            }\r\n            </Fragment>\r\n        )\r\n    }\r\n\r\n    componentDidUpdate = () => {\r\n        if (this.props.editComponentName !== this.state.editComponentName)\r\n            this.setState({\r\n                ...this.state,\r\n                editComponentName: this.props.editComponentName\r\n            })\r\n    }\r\n\r\n}\r\n\r\nexport default Controllers;","import React,{Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport RenderInBrowser from 'react-render-in-browser';\r\n/* ------- Events streams ------- */\r\nimport eventEmitter from '../../EventEmitter'; // common\r\nimport EventBuild from 'events'; // for builder controllers\r\n/* ------- For load project and exit from project ------- */\r\nimport {loadCurrentProjectAction, exitProjectAction} from '../../redux/actions';\r\n/* ------- Moddlewares ------- */\r\nimport {middlewareDeleteProjectComponent} from '../../redux/middleware/middlewareDelete';\r\nimport updateMiddleware from '../../redux/middleware/updateMiddleware';\r\n/* ------- HOC for het firebase controll object ------- */\r\nimport withScroll from '../../components/withScroll';\r\nimport withFirebase from '../../components/withFirebase';\r\n/* ------- Child components ------- */\r\nimport AdditionalTools from '../../components/additionalTools/additionalTools';\r\nimport builderHOC from '../../components/builderHOC';\r\nimport Controllers from '../../components/controllers/controllers';\r\nimport Loader from '../../components/loading/Loader';\r\nimport Header from '../../components/header/Header';\r\nimport Section from '../../components/buildComponents/section';\r\nimport BuildMenu from '../../components/componentsBuildMenu/BuildMenu';\r\n\r\nimport './build.scss';\r\n\r\nclass Build extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        firebase: PropTypes.object.isRequired, /** @firebase class for use firebase functions */\r\n        active: PropTypes.bool, /** @active - status firebase auth */\r\n        dispatch: PropTypes.func.isRequired, /** @dispatch - redux */\r\n        history: PropTypes.object, /** @Router HTML5 history */\r\n        location: PropTypes.object, /** @Router */\r\n        match: PropTypes.object.isRequired, /** @Router */\r\n        userData: PropTypes.object.isRequired, /** @UserData data about projects,user and current edit prject */\r\n    }\r\n\r\n    state = {\r\n            editStart: false, /** @Bool start edit or no */\r\n            isChange: false, /** @Bool detected changes */\r\n            isLoadComponents: true, /** @Bool load all necessary components  */\r\n            projectEmpty: false, /** @Bool detected project undefiend */\r\n            componentJSX: [], /** @Array with JSX */\r\n            editComponentName:  null, /** @String | @null name current edit component */\r\n            menuActive: false, /** @bool active menu or no */\r\n            sizeParentBox: null, /** @Object size store */\r\n        }\r\n\r\n        eventEmitterBuild = new EventBuild(); // events stream for controllers\r\n        timer = null; // save timer\r\n\r\n    workModeEdit = itemEvent => {\r\n        /* set edit mode */\r\n        if (itemEvent.editStart)\r\n        this.setState({\r\n            ...this.state,\r\n            editStart: itemEvent.editStart,\r\n            editComponentName: itemEvent.targetSection,\r\n            menuActive: true,\r\n        });\r\n    }\r\n\r\n    deleteComponent = eventItem => {\r\n        /* delete component from DB and from JSX array */\r\n        if (eventItem.id === 'Header' && eventItem.type === 'background') return;\r\n        let {currentProjectsData} = this.props.userData;\r\n        let {componentJSX} = this.state;\r\n\r\n        const data = {\r\n            id: parseInt(this.props.match.params.param),\r\n            uid: this.props.userData.idUser,\r\n            idComponent: eventItem.id,\r\n            sectionsProject: [...currentProjectsData.sectionsProject],\r\n            type: eventItem.type\r\n        }\r\n\r\n        this.props.dispatch(middlewareDeleteProjectComponent(data))\r\n        .then(id => {\r\n            if (id !== null){\r\n               const _componentJSX = componentJSX.filter(item => item.id !== id);\r\n            this.setState({\r\n                ...this.state,\r\n                componentJSX: _componentJSX\r\n            });\r\n        }\r\n        });\r\n    }\r\n\r\n    addComponentsFromBD = (array, sizeParentBox, isNext) => {\r\n        /* build JSX components from DB */\r\n        if (!sizeParentBox) sizeParentBox = this.state.sizeParentBox;\r\n        let {componentJSX} = this.state;\r\n        let componentsFromDB = [];\r\n\r\n        array.forEach(item => {\r\n            if (item.type !== 'background'){\r\n                const itemHash = {\r\n                    props: {\r\n                        ...item,\r\n                        sizeParentBox,\r\n                        mode: 'dev',\r\n                    },\r\n                    type: item.type,\r\n                    id: item.id,\r\n                }\r\n                const patternJSX = {\r\n                    id: item.id,\r\n                    targetSection: item.targetSection,\r\n                    component: builderHOC(itemHash)(Fragment)\r\n                };\r\n                componentsFromDB.push(patternJSX);\r\n            }\r\n        });\r\n\r\n        if (isNext === true)\r\n        this.setState({\r\n            ...this.state,\r\n            isLoadComponents: false,\r\n            sizeParentBox: {...sizeParentBox},\r\n            componentJSX: [...componentsFromDB],\r\n        });\r\n        else  this.setState({\r\n            ...this.state,\r\n            isLoadComponents: false,\r\n            sizeParentBox: {...sizeParentBox},\r\n            componentJSX: [...componentJSX, ...componentsFromDB],\r\n        });\r\n    };\r\n\r\n    addComponent = itemEvent => {\r\n         /* create new component */\r\n        let {componentJSX} = this.state;\r\n        let {componentsPattern} = itemEvent;\r\n\r\n        const patternJSX = {\r\n            id: componentsPattern.id,\r\n            targetSection: componentsPattern.targetSection,\r\n            component: itemEvent.component\r\n        };\r\n            this.setState({\r\n                ...this.state,\r\n                componentJSX: [...componentJSX, patternJSX],\r\n            });\r\n    };\r\n\r\n    saveChangesComponent = itemEvent => {\r\n        /* save detected changes in DB and call confirm modal */\r\n        const {ms} = itemEvent;\r\n        if (this.timer) clearTimeout(this.timer);\r\n\r\n        this.timer = setTimeout(() => {\r\n            const {currentProjectsData} = this.props.userData;\r\n            const {userData} = this.props;\r\n            let findCurrentItem = false;\r\n            const _components = currentProjectsData.components.map(item => {\r\n                if (item.id === itemEvent.id) { findCurrentItem = true; return {...itemEvent}; }\r\n                return item;\r\n            });\r\n\r\n            if (!findCurrentItem) _components.push(itemEvent);\r\n\r\n            this.props.dispatch(updateMiddleware({\r\n                uid: userData.idUser,\r\n                projects: [...userData.projects],\r\n                components: _components,\r\n                sectionsProject: [...currentProjectsData.sectionsProject],\r\n                idProject: parseInt(this.props.match.params.param)\r\n            })).then(() =>\r\n                eventEmitter.emit('EventRedirectConfirm', {false: false, confirm: false}));\r\n        },ms);\r\n    };\r\n\r\n    mainComponent = null;\r\n    mainRefComponent = node => node ?\r\n        this.mainComponent = {data: node.getBoundingClientRect(), node: node} : node;\r\n\r\n    addNewSection = eventItem => {\r\n    /* create new project section */\r\n        const {userData} = this.props;\r\n        const {currentProjectsData} = userData;\r\n        this.props.dispatch(updateMiddleware({\r\n                uid: userData.idUser,\r\n                projects: [...userData.projects],\r\n                components: [...currentProjectsData.components,\r\n                            eventItem.componentsPattern],\r\n                sectionsProject: [\r\n                    ...currentProjectsData.sectionsProject,\r\n                    eventItem.componentsPattern.id\r\n                ],\r\n                idProject: parseInt(this.props.match.params.param)\r\n        })).then(() => {\r\n            this.setState({\r\n                ...this.state,\r\n                componentJSX:[\r\n                    ...this.state.componentJSX,\r\n                    eventItem.component\r\n                ]\r\n            }, () => {\r\n                eventEmitter.emit('EventSetState', currentProjectsData.sectionsProject.length);\r\n            });\r\n        });\r\n}\r\n\r\n    render(){\r\n\r\n        if (this.state.projectEmpty) return <Redirect to = '/Cabinet' />\r\n        \r\n        const {userData} = this.props;\r\n        const {currentProjectsData} = userData;\r\n        const section = currentProjectsData.sectionsProject;\r\n\r\n        if (userData.active && currentProjectsData.loadProject){\r\n            return (\r\n                <Fragment>\r\n                    <Header\r\n                        idProject = {parseInt(this.props.match.params.param)}\r\n                        counterProjects = {userData.projects.length-1}\r\n                        key = 'Header'\r\n                        title = \"Constructor\"\r\n                        idUser = {userData.idUser}\r\n                    />\r\n                    <RenderInBrowser ie only>\r\n                        <h2 className = 'ie'>\r\n                            All the magic tricks in this app work best in Chrome/Firefox/Opera and other.\r\n                            <hr/>\r\n                            Internet explorer deprecated.\r\n                        </h2>\r\n                    </RenderInBrowser>\r\n                    <RenderInBrowser except ie>\r\n                        <div\r\n                            ref = {this.mainRefComponent} \r\n                            onMouseMove = {this.showAddSection} \r\n                            className = 'Build' \r\n                            key = 'Build'\r\n                        >\r\n                            { this.state.editStart &&\r\n                                <Controllers\r\n                                    key = 'controllers'\r\n                                    eventStreamBuild = {this.eventEmitterBuild}\r\n                                    editComponentName = {this.state.editComponentName}\r\n                                    countComponents = {currentProjectsData.components.length}\r\n                                    menuActive = {this.state.menuActive}\r\n                                    sizeParentBox = {this.state.sizeParentBox}\r\n                                />\r\n                            }\r\n                                <BuildMenu\r\n                                    key = 'buildMenu'\r\n                                    eventStreamBuild = {this.eventEmitterBuild}\r\n                                    countSection = {this.state.componentJSX.length * 5}\r\n                                    mode = \"section\"\r\n                                    className = 'menu'\r\n                                />\r\n                                <AdditionalTools key = 'tools'\r\n                                    eventStreamBuild = {this.eventEmitterBuild}\r\n                                    eventEmitter = {eventEmitter}\r\n                                    editComponentName = {this.state.editComponentName}\r\n                                />\r\n                            {section.length &&\r\n                                <Section mode = 'dev' \r\n                                    key = {`section${parseInt(this.props.match.params.param)}`}\r\n                                    keyMain = {parseInt(this.props.match.params.param)}\r\n                                    componentJSX = {this.state.componentJSX}\r\n                                    editComponentName = {this.state.editComponentName}\r\n                                    menuActive = {this.state.menuActive}\r\n                                    sizeParentBox = {this.state.sizeParentBox}\r\n                                    userData = {userData}\r\n                                />\r\n                            }\r\n                        </div>\r\n                    </RenderInBrowser>\r\n                </Fragment>\r\n            )\r\n        } else if (!this.props.firebase.getCurrentUser()) return <Redirect to = '/' />\r\n        else return <Loader  key = 'Loader' path = '/img/loading.gif' type = 'build' />\r\n    }\r\n\r\n\r\n    componentDidUpdate = (prevProps) => {\r\n\r\n        const isNext = prevProps.location.pathname !== this.props.location.pathname;\r\n        const {userData} = this.props;\r\n        let {currentProjectsData} = userData;\r\n\r\n        if (isNext || (isNext && this.props.history.action === 'PUSH')){\r\n            this.setState({\r\n                ...this.state,\r\n                editStart: false,\r\n                isChange: false,\r\n                isLoadComponents: true,\r\n                projectEmpty: false,\r\n                componentJSX: [],\r\n                editComponentName:  null,\r\n                menuActive: false,\r\n            }, () => {\r\n                let idProject = parseInt(this.props.match.params.param);\r\n                const current =  userData.projects.find(item => /* find current project */\r\n                    item.id === idProject)\r\n                if (current){ /* load data */\r\n                    this.props.dispatch(loadCurrentProjectAction({\r\n                    id: current.id,\r\n                    typeProject: current.type,\r\n                    sectionsProject: [...current.sectionsProject],\r\n                    components: [...current.components]\r\n                    }));\r\n                }   \r\n            });\r\n        } else if (currentProjectsData.idProject === parseInt(this.props.match.params.param)){\r\n\r\n            const isLoadComponents = this.state.isLoadComponents;\r\n            let sizeParentBox = null;\r\n\r\n            if (this.mainComponent && this.state.sizeParentBox === null)\r\n                sizeParentBox = {\r\n                    width: this.mainComponent.data.width,\r\n                    height: this.mainComponent.data.height,\r\n                    top: this.mainComponent.data.top,\r\n                    left: this.mainComponent.data.left,\r\n                }\r\n\r\n\r\n            if (userData.active && (!currentProjectsData.loadProject && isNext)) {\r\n                let idProject = parseInt(this.props.match.params.param);\r\n                /** load current project of user session active and load project - false */\r\n                const current =  userData.projects.find(item => /* find current project */\r\n                                                item.id === idProject)\r\n                if (current){ /* load data */\r\n                    this.props.dispatch(loadCurrentProjectAction({\r\n                        id: current.id,\r\n                        typeProject: current.type,\r\n                        sectionsProject: [...current.sectionsProject],\r\n                        components: [...current.components]\r\n                    }))\r\n                    /* else redirect */\r\n                } else this.setState({...this.state, projectEmpty: true});\r\n            }\r\n            if ((currentProjectsData.loadProject && isLoadComponents) || isNext) {\r\n                /* if all components load build our JSX */\r\n                if (isNext)\r\n                currentProjectsData = userData.projects.find(item => /* find current project */\r\n                                        item.id === parseInt(this.props.match.params.param));\r\n\r\n                (this.state.sizeParentBox === null && sizeParentBox !== null) ?\r\n                    this.addComponentsFromBD([...currentProjectsData.components], sizeParentBox , isNext)\r\n                :  this.addComponentsFromBD([...currentProjectsData.components],false,isNext);\r\n                /** For scroll component */\r\n                eventEmitter.emit('EventSetState',currentProjectsData.sectionsProject.length-1);\r\n            }\r\n\r\n            // if delete section change count for scroller\r\n            const currentSection = currentProjectsData.sectionsProject.length;\r\n            const  prevSection = prevProps.userData.currentProjectsData.sectionsProject.length;\r\n            if (currentSection !== prevSection){\r\n            eventEmitter.emit('EventSetState', currentProjectsData.sectionsProject.length-1);\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        let {userData} = this.props;\r\n        let {currentProjectsData} = userData;\r\n        /**  If the session is already active, immediately load */\r\n        if (userData.active && !currentProjectsData.loadProject) {\r\n            let idProject = parseInt(this.props.match.params.param);\r\n        /** load current project of user session active and load project - false */\r\n            const current =  userData.projects.find(item => item.id === idProject);\r\n\r\n            if (current)\r\n            this.props.dispatch(loadCurrentProjectAction({\r\n                id: current.id,\r\n                sectionsProject: [...current.sectionsProject],\r\n                typeProject: current.type,\r\n                components: [...current.components]\r\n            }));\r\n        else this.setState({...this.state, projectEmpty: true});\r\n            eventEmitter.on('EventModeEdit', this.workModeEdit);\r\n            this.eventEmitterBuild.on('EventBuildComponents', this.addComponent);\r\n            this.eventEmitterBuild.on('EventDeleteComponent', this.deleteComponent);\r\n            this.eventEmitterBuild.on('EventNewSection', this.addNewSection);\r\n            this.eventEmitterBuild.on('EventSaveChangesComponent', this.saveChangesComponent);\r\n        }; /** else redirect */\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n\r\n        let {userData} = this.props;\r\n        if (userData.active){\r\n            this.props.dispatch(exitProjectAction(true));\r\n            eventEmitter.off('EventModeEdit', this.workModeEdit);\r\n            this.eventEmitterBuild.off('EventBuildComponents', this.addComponent);\r\n            this.eventEmitterBuild.off('EventDeleteComponent', this.deleteComponent);\r\n            this.eventEmitterBuild.off('EventNewSection', this.addNewSection);\r\n            this.eventEmitterBuild.off('EventSaveChangesComponent', this.saveChangesComponent);\r\n        }\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        userData: {\r\n            active: state.cabinet.active,\r\n            idUser: state.cabinet.idUser,\r\n            projects: [...state.cabinet.projects],\r\n           currentProjectsData: {...state.builder}\r\n        },\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(withFirebase(withScroll(Build)));\r\n","import React from 'react';\r\n\r\n\r\nconst OpenPanel = props => {\r\n\r\n\r\n\r\n    return (\r\n        <div className = 'guide openPanelGuide'>\r\n            <h4 className = 'guide__title'>Open panel</h4>\r\n            <p className = 'guide_content'>\r\n                If you want to open the toolbar, you should double-click on the background.\r\n            </p>\r\n            <img src = {process.env.PUBLIC_URL + '/img/guideOpenPanel.gif'} alt = 'guide'></img>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OpenPanel;","import React from 'react';\r\n\r\n\r\nconst SearchGuide = props => {\r\n    return (\r\n        <div className = 'guide addComponents'>\r\n            <h4 className = 'guide__title'>Search guide</h4>\r\n            <p className = 'guide_content'>\r\n                On the toolbar, click on the \"Search\" button and\r\n                enter a keyword in the search field.\r\n            </p>\r\n            <img src = {process.env.PUBLIC_URL + '/img/search.gif'} alt = 'guide'></img>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchGuide;","import React from 'react';\r\n\r\n\r\nconst AddComponents = props => {\r\n    return (\r\n        <div className = 'guide addComponents'>\r\n            <h4 className = 'guide__title'>Add components</h4>\r\n            <p className = 'guide_content'>\r\n                Click on the button at the top of the screen\r\n                and select a component.\r\n            </p>\r\n            <img src = {process.env.PUBLIC_URL + '/img/add.gif'} alt = 'guide'></img>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddComponents;","import React from 'react';\r\n\r\n\r\nconst AddNewSection = props => {\r\n    return (\r\n        <div className = 'guide addComponents'>\r\n            <h4 className = 'guide__title'>Add components</h4>\r\n            <p className = 'guide_content'>\r\n                If you want to add a new section,\r\n                click on the button at the bottom of the page.\r\n            </p>\r\n            <img src = {process.env.PUBLIC_URL + '/img/newSection.gif'} alt = 'guide'></img>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddNewSection;","import React from 'react';\r\n\r\n\r\nconst CreateNewProject = props => {\r\n    return (\r\n        <div className = 'guide addComponents'>\r\n            <h4 className = 'guide__title'>Add components</h4>\r\n            <p className = 'guide_content'>\r\n                If you want to create a new project,\r\n                in your account (/ Cabinet) click on the button at the top of the page.\r\n            </p>\r\n            <img src = {process.env.PUBLIC_URL + '/img/newProject.gif'} alt = 'guide'></img>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CreateNewProject;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport OpenPanel from './Guides/OpenPanel';\r\nimport SearchGuide from './Guides/SearchGuide';\r\nimport AddComponents from './Guides/AddComponents';\r\nimport AddNewSection from './Guides/AddNewSection';\r\nimport CreateNewProject from './Guides/CreateNewProject';\r\nimport Icon from '../Icon/icon';\r\nimport './switchContainer.scss';\r\n\r\nclass SwitchContainer extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        mode: PropTypes.string,\r\n    }\r\n\r\n    state = {\r\n        mode: 'panel'\r\n    }\r\n\r\n    changeWorkMode = event => {\r\n        event.target === this.refOP &&\r\n        this.setState({\r\n            ...this.state,\r\n            mode: 'panel'\r\n        });\r\n        event.target === this.refSE &&\r\n        this.setState({\r\n            ...this.state,\r\n            mode: 'search'\r\n        });\r\n        event.target === this.refADD &&\r\n        this.setState({\r\n            ...this.state,\r\n            mode: 'add'\r\n        });\r\n        event.target === this.refSN &&\r\n        this.setState({\r\n            ...this.state,\r\n            mode: 'section'\r\n        });\r\n        event.target === this.refPR &&\r\n        this.setState({\r\n            ...this.state,\r\n            mode: 'project'\r\n        });\r\n        event.stopPropagation();\r\n    }\r\n\r\n    refOP = null;\r\n    refSE = null;\r\n    refADD = null;\r\n    refSN = null;\r\n    refPR = null\r\n\r\n    refOpenPanel  = node => this.refOP = node;\r\n    refSearch = node => this.refSE = node;\r\n    refAdd = node => this.refADD = node;\r\n    refSection = node => this.refSN = node;\r\n    refProject = node => this.refPR = node;\r\n\r\n    render(){\r\n        return(\r\n            <div className = 'switchContainer'>\r\n                <div className = 'col--17 col-sm-10 switchContainer__controllers'>\r\n                    <Icon className = 'switchContainer__menu' path = '/img/Menu_Burder.png' />\r\n                    <ul className = 'guide_list list'>\r\n                        <li>\r\n                            <input\r\n                                onClick = {this.changeWorkMode}\r\n                                className = {\r\n                                    this.state.mode !== 'panel' ?\r\n                                    'switch__button panel'\r\n                                    : 'switch__button panel activeButton'\r\n                                }\r\n                                type = 'button'\r\n                                ref = {this.refOpenPanel}\r\n                                value = 'Open panel for edit'\r\n                            />\r\n                        </li>\r\n                        <li>\r\n                            <input\r\n                                onClick = {this.changeWorkMode}\r\n                                className = {\r\n                                    this.state.mode !== 'search' ?\r\n                                    'switch__button search'\r\n                                    : 'switch__button search activeButton'\r\n                                }\r\n                                type = 'button'\r\n                                ref = {this.refSearch}\r\n                                value ='Search image/media'\r\n                            />\r\n                        </li>\r\n                        <li>\r\n                            <input\r\n                                onClick = {this.changeWorkMode}\r\n                                className = {\r\n                                    this.state.mode !== 'add' ?\r\n                                    'switch__button add'\r\n                                    : 'switch__button add activeButton'\r\n                                }\r\n                                type = 'button'\r\n                                ref = {this.refAdd}\r\n                                value ='Adding components'\r\n                            />\r\n                        </li>\r\n                        <li>\r\n                            <input\r\n                                onClick = {this.changeWorkMode}\r\n                                className = {\r\n                                    this.state.mode !== 'section' ?\r\n                                    'switch__button section'\r\n                                    : 'switch__button section activeButton'\r\n                                }\r\n                                type = 'button'\r\n                                ref = {this.refSection}\r\n                                value ='Adding new section'\r\n                            />\r\n                        </li>\r\n                        <li>\r\n                            <input\r\n                                onClick = {this.changeWorkMode}\r\n                                className = {\r\n                                    this.state.mode !== 'project' ?\r\n                                    'switch__button project'\r\n                                    : 'switch__button project activeButton'\r\n                                }\r\n                                type = 'button'\r\n                                ref = {this.refProject}\r\n                                value ='Create new project'\r\n                            />\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n                <div className = 'col--80--1'>\r\n                    {this.state.mode === 'panel' &&\r\n                        <OpenPanel />\r\n                    }\r\n                    {this.state.mode === 'search' &&\r\n                        <SearchGuide />\r\n                    }\r\n                    {this.state.mode === 'add' &&\r\n                        <AddComponents />\r\n                    }\r\n                    {this.state.mode === 'section' &&\r\n                        <AddNewSection />\r\n                    }\r\n                    {this.state.mode === 'project' &&\r\n                        <CreateNewProject />\r\n                }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SwitchContainer;","import React,{Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\n\r\nimport SwitchContainer from '../../components/SwitchContainer/SwitchContainer';\r\nimport withFirebase from '../../components/withFirebase';\r\nimport Header from '../../components/header/Header';\r\nimport Loader from '../../components/loading/Loader';\r\n\r\nimport './guide.scss';\r\nclass Guide extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        config: PropTypes.object.isRequired, /** @Config app */\r\n        firebase: PropTypes.object.isRequired, /** @firebase class for use firebase functions */\r\n        history: PropTypes.object, /** @Router HTML5 history */\r\n        location: PropTypes.object, /** @Router */\r\n        match: PropTypes.object, /** @Router */\r\n    }\r\n\r\n    state = {\r\n        config: this.props.config\r\n    };\r\n\r\n    render(){\r\n\r\n        let user = this.props.firebase.getCurrentUser();\r\n        if (user && this.props.idUser) {\r\n            const { config } = this.state;\r\n            return (\r\n                <Fragment>\r\n                    <Header title = {config.title} idUser = {user.uid} />\r\n                    <section className = 'Guide'>\r\n                        <div className = 'container guide--flex'>\r\n                            <div className = 'Guide__about'>\r\n                                <h2>Documentation</h2>\r\n                                <p>Get started with {config.title}</p>\r\n                                <p className = 'Guide__about__rev'>\r\n                                    The Constructor guides are step-by-step walkthroughs\r\n                                    that help you get started using Constructor.\r\n                                </p>\r\n                            </div>\r\n                            <SwitchContainer />\r\n                        </div>\r\n                    </section>\r\n                </Fragment>\r\n            )\r\n        } else if (!user) return <Redirect to = { '/'} />\r\n        else return <Loader path = '/img/loading.gif' type = 'About' />\r\n\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n      idUser: state.cabinet.idUser,\r\n    }\r\n  };\r\n\r\nexport default connect(mapStateToProps)(withFirebase(Guide));","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {connect} from 'react-redux';\r\nimport {Route, Switch} from 'react-router-dom';\r\n/* ------- Moddlewares ------- */\r\nimport {middlewareLoadUserData} from './redux/middleware/loadUserMiddleware';\r\n/* ------- Child components ------- */\r\nimport withFirebase from './components/withFirebase';\r\nimport Loader from './components/loading/Loader';\r\nimport Index from './Pages/Index/Index';\r\nimport Cabinet from './Pages/Cabinet/Cabinet';\r\nimport Production from './Pages/Production/Production';\r\nimport About from './Pages/About/About';\r\nimport Build from './Pages/Build/Build';\r\nimport Guide from './Pages/Guide/Guide';\r\nimport ErrorPage from './components/ErrorCatch/ErrorPage';\r\nimport './root.scss';\r\n\r\nclass App extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        config: PropTypes.object.isRequired, /** @Config app */\r\n        firebase: PropTypes.object.isRequired, /** @firebase class for use firebase functions */\r\n        dispatch: PropTypes.func.isRequired, /** @dispatch - redux */\r\n    }\r\n\r\n    state = {\r\n        firebase: this.props.firebase,\r\n        firebaseLoadState: false,\r\n        config: this.props.config,\r\n    }\r\n\r\n    componentDidMount(){\r\n        /** Listening firebase answer after first load app */\r\n        this.props.firebase.auth.onAuthStateChanged((user) => {\r\n            if (!this.state.firebaseLoadState){\r\n                /** if user - true, loading data in store */\r\n                if (user) this.props.dispatch(middlewareLoadUserData(user.uid))\r\n                .then((res) =>  { /** show loader */\r\n                    this.setState({...this.state, firebaseLoadState: res});\r\n                }); /** if loading = redirect */\r\n                else  this.setState({...this.state, firebaseLoadState: true});\r\n            }\r\n        });\r\n    }\r\n\r\n    render(){\r\n        if (this.state.firebaseLoadState){\r\n            return (\r\n                <Switch>\r\n                        <Route\r\n                            path = {'/'} exact\r\n                            render = {(props) => <Index {...props} config = {this.state.config} />}\r\n                        />\r\n                        <Route \r\n                            path = '/Cabinet/' exact \r\n                            render = {(props) => <Cabinet {...props} config = {this.state.config} />}\r\n                        />\r\n                        <Route\r\n                            path = {'/Cabinet/About'}\r\n                            render = {(props) => <About {...props} config = {this.state.config} />}\r\n                        />\r\n                        <Route path = {'/Cabinet/Guide'} exact \r\n                        render = {(props) => <Guide {...props} config = {this.state.config} />}\r\n                        />\r\n                        <Route path = {'/Cabinet/Build/:param'} exact\r\n                            render = {(props) => <Build {...props} />}\r\n                        />\r\n                        <Route path = {'/Cabinet/Build/:param/Production'} exact component = {Production} />\r\n                        <Route path = {'/crashPage'} component = {ErrorPage} />\r\n                </Switch>\r\n            )\r\n        } else return <Loader path = { '/img/loading.gif'} type = 'application' />\r\n    }\r\n}\r\n\r\nexport default connect()(withFirebase(App));","\r\n/** IE supports polyfills */\r\nimport 'core-js/es/map';\r\nimport 'core-js/es/set';\r\nimport 'core-js/es/symbol';\r\nimport 'core-js/es/array/includes';\r\nimport 'core-js/es/array/find';\r\nimport 'core-js/es/string/includes';\r\nimport 'core-js/es/object/assign';\r\n/** --------------------- */\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport firebase from './Firebase/Firebase';\r\nimport ErrorBoundary from './components/ErrorCatch/ErrorBoundary';\r\nimport {HashRouter } from 'react-router-dom';\r\nimport {Provider} from 'react-redux';\r\nimport store from './redux/store';\r\nimport App from './App.jsx';\r\nimport 'normalize.css';\r\n\r\nimport firebaseContext from './Firebase/firebaseContext'; /** firebase contect API */\r\nimport config from './config.json'; /** app config file */\r\n\r\n\r\nReactDOM.render(\r\n        <HashRouter>\r\n            <ErrorBoundary>\r\n                <firebaseContext.Provider value = {firebase}>\r\n                    <Provider store = {store}>\r\n                        <App config = {config} />\r\n                    </Provider>\r\n                </firebaseContext.Provider>\r\n            </ErrorBoundary>\r\n        </HashRouter>,\r\n        document.getElementById('root')\r\n);\r\n\r\n\r\nserviceWorker.register();\r\n\r\n"],"sourceRoot":""}