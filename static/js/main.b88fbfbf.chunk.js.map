{"version":3,"sources":["serviceWorker.js","Firebase/firebaseConfig.js","Firebase/Firebase.js","EventEmitter.js","components/ErrorCatch/ErrorPage.jsx","components/ErrorCatch/ErrorBoundary.jsx","redux/actions.js","redux/reducerBuilder.js","redux/reducerCabinet.js","redux/reducers.js","redux/store.js","redux/middleware/loadUserMiddleware.js","Firebase/firebaseContext.js","components/firebaseHOC.jsx","components/loading/Loader.jsx","components/Registration/Registration.jsx","Pages/Index/Index.jsx","redux/middleware/middlewareDelete.js","components/Icon/icon.jsx","components/header/Header.jsx","components/imageViewer/imageItem.jsx","components/modalWindow/ModalWindow.jsx","redux/middleware/createProjectMiddleware.js","components/List/Item.jsx","components/List/List.jsx","components/ProjectsSection/ProjectsSection.jsx","Pages/Cabinet/Cabinet.jsx","Pages/About/About.jsx","redux/middleware/updateMiddleware.js","components/imageViewer/imageViewer.jsx","components/instrumentsPanel/ImageTools/ImageInstruments.jsx","components/instrumentsPanel/BackgroundTools/BackgroundInstruments.jsx","components/instrumentsPanel/TextTools/TextInstruments.jsx","components/confirmBox/Confirm.jsx","components/instrumentsPanel/InstrumentsPanel.jsx","components/additionalTools/additionalTools.jsx","components/buildComponents/components/Media.jsx","components/buildComponents/components/Image.jsx","components/buildComponents/components/Text.jsx","components/buildComponents/components/Background.jsx","components/componentsBuilder/BuilderComponents.jsx","components/componentsBuildMenu/BuildMenu.jsx","components/controllers/controllers.jsx","components/buildComponents/MainBackground/MainBackground.jsx","components/buildComponents/section.jsx","Pages/Build/Build.jsx","App.jsx","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","firebaseConfig","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firebaseInterface","require","Firebase","Object","classCallCheck","this","firebase","auth","db","rules","setPersistence","Auth","Persistence","email","password","signInWithEmailAndPassword","createUserWithEmailAndPassword","signOut","currentUser","stream","EventEmitter","ErrorPage","redirect","update","event","_this","setState","eventEmitter","emit","react_default","a","createElement","react_router","to","class","className","onClick","React","Component","ErrorBoundary","hasError","updateApplication","componentDidMount","on","componentWillUnmount","off","info","ErrorCatch_ErrorPage","props","children","PureComponent","exitProjectAction","type","exit","loadCurrentProjectAction","id","typeProject","sectionTitleProject","components","loadUserAction","active","idUser","uid","projects","errorAction","initialState","loadProject","idProject","combineReducers","builder","arguments","length","undefined","action","objectSpread","toConsumableArray","cabinet","map","item","middleware","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","thunk","withExtraArgument","reduxCatch","getState","lastAction","dispatch","debug","store","createStore","middlewareLogin","_ref2","asyncToGenerator","regenerator_default","mark","_callee","_ref","wrap","_context","prev","next","login","response","collection","doc","user","get","docUser","data","message","stop","_x","_x2","_x3","apply","middlewareLogOutUser","_ref6","_callee3","_ref5","_context3","_x7","_x8","_x9","firebaseContext","createContext","withFirebase","Firebase_firebaseContext","Consumer","assign","Loader","_useState","useState","path","slicedToArray","src","alt","emailRef","passwordRef","setRefEmail","node","setRefPassword","createUser","value","Error","set","autoComplete","ref","Index","title","registrationActive","regStatus","wrongEnter","emailImput","passwordImput","statusRegistration","additionalUserInfo","isNewUser","showBox","stopPropagation","authTo","e","components_Registration_Registration","connect","middlewareDelete","filter","itemdb","Icon","_useState3","_useState5","draggable","iconPath","CabinetIcon","Header","redirectAbout","redirectA","redirectCabinet","redirectC","logOut","pathname","add","icon","withRouter","ImageItem","urls","regular","urlRegular","full","urlFull","_useState7","isFull","selected","url","ModalWindow","workMode","images","buttonSearchDisabled","selectedItem","showUrl","imageBoxView","newProject","validateName","validateType","disabled","name","imageMenuActive","warning","lengthMax","lengthMin","inputSearch","inputSelect","searchBackground","api","concat","search","inages","isFetch","ok","json","results","showMenuImage","showImage","target","setSelectedImage","modalSearchMode","idComponent","mode","makeImageResultBox","items","i","imageItem","key","addNewProject","selectOption","inputs","defineProperty","lengthInput","cancel","refSelect","refSearch","onChange","placeholder","react","middlewareCreateProject","list","lastProject","lastIndex","header","push","backgroundImage","color","min","max","Math","floor","random","targetSection","_useState4","canBuild","setCanBuild","_useState9","data-id","List","makeList","project","List_Item","ProjectsSection","components_List_List","Cabinet","deletItem","getCurrentUser","changeWorkMode","header_Header","modalWindow_ModalWindow","components_ProjectsSection_ProjectsSection","about","developer","year","updateMiddleware","newProjects","JSON","parse","stringify","find","ImageViewer","ImageInstruments","cbSetColor","cbSearchImage","cbSaveChanges","BackgroundInstruments","componentsStats","componentStats","hasOwnProperty","colorPickerActive","lib","onChangeComplete","cbHandleChangeComplete","TextInstruments","instrumentPanel","content","fontSize","coords","x","y","cbSetSize","cbSetContent","maxLength","Confirm","cbCancelSave","InstrumentsPanel","isChange","confirmActive","updateSizeText","eventSize","closePanel","close","setSize","size","editComponentName","setContent","contentValue","updatePosition","eventItem","setColor","updateBimageStats","image","handleChangeComplete","rgb","colorRGB","r","g","b","saveChanges","searchImage","makePanelInstruments","TextTools_TextInstruments","BackgroundTools_BackgroundInstruments","ImageTools_ImageInstruments","cancelSave","componentDidUpdate","oldProps","oldState","targetBool","idBool","statsBool","compare","mainBuilderData","instrumentActive","components_confirmBox_Confirm","AdditionalTools","modalImageViewer","imageViewer_imageViewer","modalSearch","instrumentsPanel_InstrumentsPanel","Media","styled","iframe","_templateObject","MediaComponent","sizeParentBox","_useState8","_useState10","_useState11","_useState12","width","height","allowfullscreen","ImageStyle","img","attrs","style","left","coordX","top","coordY","Image_templateObject","Image","setImage","_useState6","count","setCount","setsizeParentBox","_useState13","_useState14","shiftCoords","setShiftCoords","_useState15","_useState16","dragNdrop","setDragNdrop","openImageInstruments","componentsPatternImage","borderRadius","opacity","zIndex","sizeTextValue","moveText","pageX","pageY","convertToPercentX","convertToPercentY","isNaN","position","toFixed","shadowDisplay","setCurrentImage","saveSize","useEffect","effect","onMouseDown","rect","getBoundingClientRect","onDragStart","onDrag","onDragEnd","onWheel","shiftKey","deltaY","counter","TextStyle","h1","display","Text_templateObject","textColor","TextComponent","_ScrollY","setScrollY","colorText","setColorText","sizeText","setSizeText","contentText","setText","_useState17","_useState18","_useState19","_useState20","textComponent","createRef","openTitleInstruments","componentsPatternText","changeColorText","changeSizeText","changeContentText","eventContent","scrollCordsSet","current","focus","borderBottom","Background","div","Background_templateObject","backgroundColor","BackgroundComponent","boxComponent","background","setBgColor","changeColor","setBackgroundImage","boxInform","saveWidth","componentsPatternBackground","data-name","BuilderComponents","Text","components_Background","components_Image","components_Media","BuildMenu","componentsPatternMedia","addText","countComponents","component","componentsBuilder_BuilderComponents","addBackground","addImage","addMedia","addSection","Controllers","viewComponentMenu","shiftX","shiftY","coordsX","coordsY","componentMenu","refControll","componentsBuildMenu_BuildMenu","MainBackground","editRedy","changeMode","editStart","refBox","refBackground","_this2","bg","currentProjectsData","childrens","componentJSX","data-class","Section","userData","buildComponents_MainBackground_MainBackground","menuActive","Build","parseInt","params","param","isLoadComponents","projectEmpty","showSectionAddMenu","modalSearchOn","itemEvent","modeHave","imageViewerSwitch","workModeEdit","openInstrument","addComponentsFromBD","array","componentsFromDB","forEach","mainComponent","patternJSX","addComponent","componentsPatternStatus","saveChangesComponent","findCurrentItem","_components","showAddSection","mainRefComponent","addNewSection","updateCoordsComponents","scrollTop","section","onScroll","onMouseMove","controllers","countSection","additionalTools","buildComponents_section","App","firebaseLoadState","onAuthStateChanged","_ref4","_callee2","_ref3","_context2","_x4","_x5","_x6","_this3","exact","render","Pages_Index_Index","Pages_About_About","saveSession","ReactDOM","react_router_dom","ErrorCatch_ErrorBoundary","Provider","es","src_App","document","getElementById","URL","href","origin","addEventListener","fetch","contentType","headers","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.b88fbfbf.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log('This web app is being served cache-first by a service worker.');\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","// setings in root folder / firebase.env\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n    databaseURL: process.env.REACT_APP_DATABASE_URL,\r\n    projectId: process.env.REACT_APP_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n    appId: process.env.REACT_APP_APPID\r\n};\r\n\r\nexport default firebaseConfig;","import * as firebase from 'firebase/app';\r\nimport firebaseConfig from './firebaseConfig';\r\n\r\nconst auth = require('firebase/auth');\r\nconst firestore = require('firebase/firestore');\r\n\r\nclass Firebase {\r\n\r\n    constructor(firebaseConfig){\r\n        firebase.initializeApp(firebaseConfig);\r\n        this.auth = firebase.auth();\r\n        this.db = firebase.firestore();\r\n    }\r\n\r\n    saveSession(rules){\r\n        return this.auth.setPersistence(firebase.auth.Auth.Persistence[rules]);\r\n    }\r\n\r\n    login(email, password){\r\n        try {\r\n            return this.auth.signInWithEmailAndPassword(email, password);\r\n        } catch (error) {\r\n            console.error(error);\r\n            return null;\r\n        }\r\n    }\r\n\r\n    registration(email, password){\r\n        return this.auth.createUserWithEmailAndPassword(email, password)\r\n    }\r\n\r\n    signOut(){\r\n        return this.auth.signOut()\r\n    }\r\n\r\n    getCurrentUser() {\r\n        return this.auth.currentUser\r\n    }\r\n}\r\n\r\nlet firebaseInterface = new Firebase(firebaseConfig);\r\n\r\nexport default firebaseInterface;\r\n\r\nexport { auth, firestore };\r\n\r\n","import {EventEmitter} from 'events';\r\n\r\nconst stream = new EventEmitter();\r\nexport default stream;","import React from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\nimport eventEmitter from '../../EventEmitter';\r\n\r\nimport './errorPage.scss';\r\n\r\n\r\nclass ErrorPage extends React.Component {\r\n\r\n    state = {\r\n        redirect: false,\r\n    }\r\n\r\n    update = event => {\r\n       this.setState({redirect: true},\r\n        () => eventEmitter.emit('EventErrorCatchUpdate'));\r\n    }\r\n\r\n    render(){\r\n        if (this.state.redirect) return <Redirect to = '/' />\r\n        return (\r\n        <div class = 'container'>\r\n            <div class = 'flex-column'>\r\n                <h1>Application crash</h1>\r\n                <button className = 'button_updateApp' onClick = {this.update}>Update</button>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ErrorPage;","\r\nimport React from 'react';\r\nimport eventEmitter from '../../EventEmitter';\r\nimport ErrorPage from './ErrorPage';\r\n\r\nclass ErrorBoundary extends React.PureComponent {\r\n\r\n      state = { \r\n        hasError: false,\r\n      };\r\n\r\n    static getDerivedStateFromError(error) {\r\n        console.log(error);\r\n      // Обновить состояние с тем, чтобы следующий рендер показал запасной UI.\r\n      return { hasError: true};\r\n    }\r\n\r\n    updateApplication = event => {\r\n      this.setState({hasError: false});\r\n    };\r\n  \r\n    componentDidCatch(error, info) {\r\n      // Можно также сохранить информацию об ошибке в соответствующую службу журнала ошибок\r\n     console.error(error + \",\" + info);\r\n    }\r\n  \r\n    render() {\r\n      if (this.state.hasError) return <ErrorPage />\r\n      return this.props.children;\r\n    }\r\n\r\n    componentDidMount = () => {\r\n      eventEmitter.on('EventErrorCatchUpdate',this.updateApplication);\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n      eventEmitter.off('EventErrorCatchUpdate',this.updateApplication);\r\n    }\r\n  }\r\n\r\n  export default ErrorBoundary;","const CREATE_PROJECT = 'CREATE_PROJECT';\r\nconst LOAD_UPDATE_PROJECT = \"LOAD_UPDATE_PROJECT\";\r\nconst LOAD_CURRENT = 'LOAD_CURRENT';\r\nconst LOG_OUT_CABINET = 'LOG_OUT_CABINET';\r\nconst LOAD_USER_CABINET = 'LOAD_USER_CABINET';\r\nconst ERROR_CABINET = 'ERROR_CABINET';\r\nconst EXIT_PROJECT = 'EXIT_PROJECT';\r\n\r\nconst createProjectAction = (state) => {\r\n    return {\r\n        type: CREATE_PROJECT,\r\n        projects: state,\r\n    }\r\n}\r\n\r\nconst exitProjectAction = (state) => {\r\n    return {\r\n        type: EXIT_PROJECT,\r\n        exit: state\r\n    }\r\n}\r\n\r\nconst loadCurrentProjectAction = (state) => {\r\n    return {\r\n        type: LOAD_CURRENT,\r\n        id: state.id,\r\n        typeProject: state.typeProject,\r\n        sectionTitleProject: state.sectionTitleProject,\r\n        components: state.components\r\n    }\r\n}\r\n\r\nconst loadUpdateCurrentProject = (state) => {\r\n    return {\r\n        type: LOAD_UPDATE_PROJECT,\r\n        idProject: state.idProject,\r\n        sectionTitleProject: state.sectionTitleProject,\r\n        components: state.components\r\n    }\r\n}\r\n\r\nconst loadUserAction = (state) => {\r\n    return {\r\n        type: LOAD_USER_CABINET,\r\n        active: true,\r\n        idUser: state.uid,\r\n        error: '',\r\n        projects: state.projects\r\n    }\r\n}\r\n\r\nconst logOutAction = (state) => {\r\n\r\n    return {\r\n        type: LOG_OUT_CABINET,\r\n        active: false,\r\n        idUser: null,\r\n        error: '',\r\n        projects: []\r\n    }\r\n}\r\n\r\nconst errorAction = (state) => {\r\n    return {\r\n        type: ERROR_CABINET,\r\n        error: state\r\n    }\r\n}\r\n\r\nexport {\r\n    CREATE_PROJECT, createProjectAction, /* cabinet */\r\n    LOAD_USER_CABINET, loadUserAction, /* cabinet */\r\n    LOG_OUT_CABINET, logOutAction, /* cabinet */\r\n    LOAD_CURRENT, loadCurrentProjectAction, /* builder */\r\n    LOAD_UPDATE_PROJECT, loadUpdateCurrentProject,\r\n    EXIT_PROJECT, exitProjectAction,\r\n    ERROR_CABINET, errorAction, /* both */\r\n}","import {LOAD_CURRENT,LOAD_UPDATE_PROJECT, EXIT_PROJECT} from './actions';\r\n\r\nconst initialState = {\r\n    loadProject: false,\r\n    idProject: null,\r\n    typeProject: null,\r\n    components: [],\r\n    sectionTitleProject: [],\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n    switch (action.type){\r\n\r\n        case LOAD_CURRENT: {\r\n            return {\r\n                ...state,\r\n                loadProject: true,\r\n                idProject: action.id,\r\n                typeProject: action.typeProject,\r\n                components: [...action.components],\r\n                sectionTitleProject: [...action.sectionTitleProject]\r\n            }\r\n        }\r\n\r\n        case LOAD_UPDATE_PROJECT: {\r\n            return {\r\n                ...state,\r\n                components: [...action.components],\r\n                sectionTitleProject: [...action.sectionTitleProject]\r\n            }\r\n        }\r\n\r\n        case EXIT_PROJECT: {\r\n            if (action.exit)\r\n            return {\r\n                ...state,\r\n                loadProject: false,\r\n                idProject: null,\r\n                typeProject: null,\r\n                components: []\r\n            }\r\n            else return state;\r\n        }\r\n        default: return state;\r\n    }\r\n};","import {LOAD_USER_CABINET, LOG_OUT_CABINET, ERROR_CABINET, CREATE_PROJECT, LOAD_UPDATE_PROJECT} from './actions';\r\n\r\nconst initialState = {\r\n    active: false,\r\n    idUser: null,\r\n    projects: [],\r\n    error: null,\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case LOAD_USER_CABINET: {\r\n\r\n            return {\r\n                ...state,\r\n                active: action.active,\r\n                idUser: action.idUser,\r\n                projects: [...action.projects]\r\n            }\r\n        }\r\n\r\n        case CREATE_PROJECT: {\r\n            return {\r\n                ...state,\r\n                projects: [...action.projects]\r\n            }\r\n        }\r\n\r\n        case LOAD_UPDATE_PROJECT: {\r\n            return {\r\n                ...state,\r\n                projects: state.projects.map(item => {\r\n                    if (item.id === action.idProject)\r\n                        item.components = [...action.components]\r\n                return item;\r\n                })\r\n            }\r\n        }\r\n\r\n        case LOG_OUT_CABINET: {\r\n            return {\r\n                ...state,\r\n                active: false,\r\n                idUser: null,\r\n                projects: []\r\n            }\r\n        }\r\n\r\n        case ERROR_CABINET: {\r\n            return {\r\n                ...state,\r\n                error: action.error\r\n            }\r\n        }\r\n        default: return state;\r\n    }\r\n}\r\n\r\n","import {combineReducers} from 'redux';\r\nimport reducerBuilder from './reducerBuilder';\r\nimport reducerCabinet from './reducerCabinet';\r\n\r\nexport default combineReducers({\r\n    builder: reducerBuilder,\r\n    cabinet: reducerCabinet,\r\n});","import {createStore, applyMiddleware, compose} from 'redux';\r\nimport firebase from  '../Firebase/Firebase';\r\nimport reduxCatch from 'redux-catch';\r\nimport thunk from 'redux-thunk';\r\nimport combineReducers from './reducers';\r\n\r\nconst composeEnhancers =\r\n  typeof window === 'object' &&\r\n  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?\r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\r\n    }) : compose;\r\n\r\n    function errorHandler(error, getState, lastAction, dispatch) {\r\n      console.error(error);\r\n      console.debug('current state', getState());\r\n      console.debug('last action was', lastAction);\r\n      // optionally dispatch an action due to the error using the dispatch parameter\r\n    }\r\n\r\nconst middleware = composeEnhancers(\r\n  applyMiddleware(thunk.withExtraArgument({firebase})),\r\n  applyMiddleware(reduxCatch(errorHandler))\r\n);\r\nconst store = createStore(combineReducers, middleware);\r\n\r\n\r\nexport default store;","import {loadUserAction, errorAction, logOutAction} from '../actions';\r\n\r\nconst middlewareLogin = (email,password) => async (dispatch,getState, {firebase}) => {\r\n        await firebase.login(email,password)\r\n        .then(response =>{\r\n            firebase.db.collection(\"users\").doc(response.user.uid).get()\r\n            .then(docUser => {\r\n                let user = docUser.data();\r\n                dispatch(loadUserAction({uid: docUser.id, projects: [...user.projects]}))\r\n            })\r\n        })\r\n        .catch((error) => {\r\n            console.error(error.message);\r\n            dispatch(errorAction(error.message));\r\n        });\r\n    }\r\n\r\nconst middlewareLoadUserData = (uid) => async (dispatch,getState, {firebase}) => {\r\n        await firebase.db.collection(\"users\").doc(uid).get()\r\n        .then(docUser => {\r\n            let user = docUser.data();\r\n            dispatch(loadUserAction({uid: uid, projects: [...user.projects]}))\r\n        })\r\n        .catch((error) => {\r\n            console.error(error.message);\r\n            dispatch(errorAction(error.message));\r\n        });\r\n    }\r\n\r\nconst middlewareLogOutUser = (uid) => async (dispatch,getState, {firebase}) => {\r\n    await firebase.signOut()\r\n    .then (response => {\r\n        dispatch(logOutAction());\r\n    })\r\n    .catch((error) => {\r\n        console.error(error.message);\r\n        dispatch(errorAction(error.message));\r\n    });\r\n}\r\nexport {\r\n    middlewareLogin,middlewareLoadUserData, middlewareLogOutUser\r\n}","import React from 'react';\r\nimport firebase from './Firebase';\r\nconst firebaseContext = React.createContext(firebase);\r\nexport default firebaseContext;","import React from 'react';\r\nimport firebaseContext from '../Firebase/firebaseContext';\r\n\r\n\r\nconst withFirebase = Component => props => {\r\n        return (\r\n            <firebaseContext.Consumer>\r\n                {firebase => <Component {...props} firebase = {firebase} /> }\r\n            </firebaseContext.Consumer>\r\n        )\r\n};\r\n\r\n\r\nexport default withFirebase;","import React,{useState} from 'react';\r\n\r\nexport default function(props) {\r\n    const [path] = useState(props.path ? props.path : '/img/loading.gif');\r\n    return (\r\n            <div className = 'loaderBox'>\r\n                <img className = 'loader' src = {path} alt = 'loader'></img> \r\n                <p>Loading {props.type}</p>\r\n            </div>\r\n    )\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport eventEmitter from '../../EventEmitter';\r\nimport './registration.scss';\r\n\r\nimport withFirebase from '../../components/firebaseHOC';\r\n\r\n\r\nclass Registration extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        firebase: PropTypes.object.isRequired, /** @firebase class for use firebase functions */\r\n    }\r\n\r\n    state = {\r\n        firebase: this.props.firebase,\r\n        error: null,\r\n    }\r\n\r\n    emailRef = null;\r\n    passwordRef = null;\r\n\r\n    setRefEmail = (node) => this.emailRef = node;\r\n    setRefPassword = (node) => this.passwordRef = node;\r\n\r\n    createUser = event => {\r\n\r\n        const email = this.emailRef ? this.emailRef.value : null;\r\n        const password = this.passwordRef ? this.passwordRef.value : null;\r\n        const { firebase } = this.props;\r\n\r\n        if (password && email)\r\n        firebase.registration(email, password)\r\n        .then(response => {\r\n            if (!response) throw new Error('Ivaid registration')\r\n            firebase.db.collection(\"users\").doc(response.user.uid).set({\r\n                'projects': [],\r\n                'email': email,\r\n            }).then(() => eventEmitter.emit('EventRegistrationCorrect', response))\r\n        })\r\n        .catch((error) => {\r\n        console.error(error.message);\r\n        this.setState({error: error.message});\r\n        });\r\n        else  return this.setState({error: 'invalid user data'});\r\n    };\r\n\r\n    render(){\r\n        let  { error } = this.state;\r\n        return (\r\n            <div className = 'RegistrationBox'>\r\n                <div  className = 'RegistrationForm'>\r\n                    <h3>Registration</h3>\r\n                    <form autoComplete = 'off' className = 'RegForm'>\r\n                        { error ?\r\n                            <p className = 'error'>{error}</p>\r\n                            : null\r\n                        }\r\n                        <span>E-mail</span>\r\n                        <input ref = {this.setRefEmail} type = 'text' />\r\n                        <span>Password</span>\r\n                        <input className = 'password' autoComplete = \"off\" ref = {this.setRefPassword} type = 'password' />\r\n                        <input onClick = {this.createUser}\r\n                                className = 'loginButton'\r\n                                type = 'button'\r\n                                value = 'registration'\r\n                        />\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\nexport default withFirebase(Registration);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport eventEmitter from '../../EventEmitter';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nimport {middlewareLogin} from '../../redux/middleware/loadUserMiddleware';\r\n\r\nimport Loader from '../../components/loading/Loader';\r\nimport Registration from '../../components/Registration/Registration';\r\n\r\nimport {connect} from 'react-redux';\r\n\r\nimport './index.scss';\r\n\r\nclass Index extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        active: PropTypes.bool, /** @active - status firebase auth */\r\n        dispatch: PropTypes.func.isRequired, /** @dispatch - redux */\r\n        history: PropTypes.object.isRequired, /** @Router HTML5 history */\r\n        location: PropTypes.object.isRequired, /** @Router */\r\n        match: PropTypes.object.isRequired, /** @Router */\r\n        wrongEnter: PropTypes.string, /** @Error about invalid enter */\r\n        config: PropTypes.object, /** @config - app settings */\r\n    }\r\n\r\n    state = {\r\n        title:  \"Constructor\",\r\n        registrationActive: false,\r\n        regStatus: false,\r\n        wrongEnter: false,\r\n        error: ''\r\n    }\r\n\r\n    emailImput = null;\r\n    passwordImput = null;\r\n\r\n    statusRegistration = event => {\r\n        event.additionalUserInfo.isNewUser ?\r\n            this.setState({\r\n                ...this.state,\r\n                regStatus: true,\r\n                registrationActive: false,\r\n                error: 'Account create!'\r\n            })\r\n        : console.error('error registration');\r\n    }\r\n\r\n    showBox = event => {\r\n        this.setState ({\r\n            ...this.state,\r\n        registrationActive: this.state.registrationActive ? false : true\r\n        });\r\n        event.stopPropagation();\r\n    }\r\n\r\n    authTo = event => {\r\n            if (this.emailImput && this.passwordImput)\r\n            this.props.dispatch(middlewareLogin(this.emailImput.value, this.passwordImput.value));\r\n            event.stopPropagation();\r\n    }\r\n\r\n    emailRef = node => this.emailImput = node;\r\n    passwordRef = node => this.passwordImput = node;\r\n\r\n    render(){\r\n\r\n        if (this.props.active) return <Redirect to = { '/Cabinet'} />\r\n        else if (!this.props.active) {\r\n            return (\r\n                <div className = 'LoginPage flex-column'>\r\n                        <h1>{this.state.title}</h1>\r\n                        <div className = 'LoginBox'>\r\n                            <div className = 'LoginForm'>\r\n                                <h3>Connect form</h3>\r\n                                {\r\n                                    this.props.wrongEnter || this.state.regStatus ?\r\n                                    <p className = 'error'>{this.props.wrongEnter}</p>\r\n                                    : null\r\n                                }\r\n                                <p>E-mail</p>\r\n                                <input ref = {this.emailRef} type = 'text' />\r\n                                <p>Password</p>\r\n                                <input ref = {this.passwordRef} type = 'password' />\r\n                                <input \r\n                                    onClick = {this.authTo} \r\n                                    className = 'loginButton enterInput'\r\n                                    type = 'button'\r\n                                    value = 'enter' />\r\n                                <input\r\n                                    onClick = {this.showBox}\r\n                                    className = {this.state.registrationActive ?\r\n                                        `loginButton registration selected` : 'loginButton registration'}\r\n                                    type = 'button'\r\n                                    value = 'registration'\r\n                                    />\r\n                            </div>\r\n                        </div>\r\n                        {\r\n                            this.state.registrationActive ?\r\n                            <Registration />\r\n                            : null\r\n                        }\r\n                </div>\r\n            )\r\n        } else  return <Loader path = '/img/loading.gif' type = 'session' />\r\n    }\r\n\r\n    componentDidMount = (e) => {\r\n        eventEmitter.on('EventRegistrationCorrect', this.statusRegistration);\r\n    }\r\n    componentWillUnmount = (e) => {\r\n        eventEmitter.off('EventRegistrationCorrect', this.statusRegistration);\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        active: state.cabinet.active, \r\n        wrongEnter: state.cabinet.error\r\n    }\r\n  }\r\n\r\nexport default connect(mapStateToProps)(Index);","\r\nimport {errorAction, loadUserAction} from '../actions';\r\n\r\nconst middlewareDelete = item => async (dispatch,getState, {firebase}) => {\r\n    await firebase.db.collection('users').doc(item.uid).get()\r\n    .then(user => user.data())\r\n    .then(data => {\r\n        return {id: data.id, projects: data.projects.filter(itemdb => itemdb.id !== item.id)};\r\n    })\r\n    .then(data => {\r\n        firebase.db.collection(\"users\").doc(item.uid).update({\r\n            \"projects\": data.projects\r\n        })\r\n        .then(response => {\r\n            dispatch(loadUserAction({uid: data.id, projects: data.projects}));\r\n        });\r\n    })\r\n    .catch((error) => {\r\n        console.error(error.message);\r\n        dispatch(errorAction(error.message));\r\n    });\r\n}\r\n\r\nexport default middlewareDelete;\r\n","import React, {useState} from 'react';\r\n\r\n\r\nfunction Icon(props){\r\n    const [path] = useState(props.path);\r\n    const [className] = useState(props.className ? props.className : null);\r\n    const [draggable] = useState(props.draggable ? true : false);\r\n\r\n    return (\r\n    <img\r\n        draggable = {draggable}\r\n        onClick = {props.onClick ? props.onClick : null}\r\n        className = {className}\r\n        title = {props.title ? props.title : null}\r\n        src = {process.env.PUBLIC_URL + path } alt = 'icon'>\r\n    </img>\r\n    )\r\n}\r\n\r\nexport default Icon;","import React from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport './header.scss';\r\n\r\nimport {middlewareLogOutUser} from '../../redux/middleware/loadUserMiddleware';\r\nimport {connect} from 'react-redux';\r\nimport {Redirect, withRouter} from 'react-router-dom';\r\n\r\nimport eventEmitter from '../../EventEmitter.js';\r\nimport Icon from '../Icon/icon';\r\n\r\n\r\nconst iconPath = require('../../config.json').CabinetIcon;\r\n\r\nclass Header extends React.Component {\r\n\r\n    static propTypes = {\r\n        title: PropTypes.string.isRequired, /** @Config title app */\r\n        dispatch: PropTypes.func.isRequired, /** @dispatch redux */\r\n        history: PropTypes.object.isRequired, /** @Router HTML5 history */\r\n        location: PropTypes.object.isRequired, /** @Router */\r\n        match: PropTypes.object.isRequired, /** @Router */\r\n    };\r\n\r\n    state = {\r\n        title: this.props.title,\r\n        redirectAbout: {\r\n            path:  '/Cabinet/About',\r\n            redirectA: false,\r\n        },\r\n        redirectCabinet: {\r\n            path:  '/Cabinet',\r\n            redirectC: false,\r\n        }\r\n    };\r\n\r\n    logOut = event => {\r\n        if (this.props.idUser)\r\n            this.props.dispatch(middlewareLogOutUser(this.props.idUser));\r\n        event.stopPropagation();\r\n    };\r\n\r\n    redirectAbout = event => {\r\n        if (this.props.location.pathname !== this.state.redirectAbout.path)\r\n           this.setState({\r\n               redirectAbout: {\r\n                   ...this.state.redirectAbout,\r\n                   redirectA: true\r\n               }\r\n           });\r\n        event.stopPropagation()\r\n    };\r\n\r\n    redirectCabinet = event => {\r\n        if (this.props.location.pathname !== this.state.redirectCabinet.path)\r\n        this.setState({\r\n            redirectCabinet: {\r\n                ...this.state.redirectCabinet,\r\n                redirectC: true\r\n            }\r\n        });\r\n        event.stopPropagation()\r\n    }\r\n\r\n    add = (e) => {\r\n        eventEmitter.emit('EventChangeWorkMode',{action: 'newProject'});\r\n    };\r\n\r\n    render(){\r\n        let {redirectA} = this.state.redirectAbout;\r\n        let {redirectC} = this.state.redirectCabinet;\r\n\r\n        if (redirectA) return <Redirect to = {this.state.redirectAbout.path} />\r\n        if(redirectC) return <Redirect to = {this.state.redirectCabinet.path} />\r\n\r\n        return (\r\n            <header>\r\n                <div className = 'container'>\r\n                    <div className = 'flex-row'>\r\n                            <div onClick = {this.redirectCabinet} className = 'header__CabinetInfo'>\r\n                                <Icon className ='mainIcon' path = {iconPath} />\r\n                                <h3 className = 'tilteApp'>{this.state.title}</h3>\r\n                            </div>\r\n                            {this.props.location.pathname === '/Cabinet' ?\r\n                                <div onClick = {this.add} className = 'header__newProject__AddButton'>\r\n                                    <Icon className = 'Cabinet' path = '/img/plus.png' />\r\n                                </div>\r\n                                : null\r\n                            }\r\n                                <div  className = 'Navigator'>\r\n                                    <Icon className = 'about' onClick = {this.redirectAbout} title = 'about' path = '/img/about_logo.svg' />\r\n                                    <Icon className = 'logoutButton' onClick = {this.logOut} title = 'logOut' path = '/img/logOut.svg' />\r\n                                </div>\r\n                    </div>\r\n               </div>\r\n            </header>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect()(withRouter(Header));","import React, {useState} from 'react';\r\nimport eventEmitter from '../../EventEmitter';\r\n\r\nconst ImageItem = props => {\r\n\r\n    const [id] = useState(props.id);\r\n    const [urlRegular] = useState(props.urls.regular);\r\n    const [urlFull] = useState(props.urls.full);\r\n    const [isFull] = useState(props.isFull);\r\n\r\n    const showImageMenu = event => {\r\n       eventEmitter.emit(\"EventShowMenuImage\", {id: id, url: urlRegular, urlFull: urlFull});\r\n    }\r\n\r\n\r\n    return (\r\n        <div className = {props.selected ? 'ItemBox selected' : 'ItemBox'}>\r\n            <img\r\n                className = 'ImageItem'\r\n                onClick = {showImageMenu}\r\n                src = {isFull ? urlFull : urlRegular}\r\n                alt = 'item'\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ImageItem;","import React,{Fragment} from 'react';\r\nimport isFetch from 'isomorphic-fetch';\r\nimport PropTypes from 'prop-types';\r\nimport eventEmitter from '../../EventEmitter.js';\r\n\r\nimport ImageItem from '../imageViewer/imageItem';\r\nimport Icon from '../Icon/icon';\r\n\r\nimport './modal.scss';\r\n\r\nclass ModalWindow extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        workMode: PropTypes.string.isRequired, /** @Mode for modal */\r\n        // idComponent: PropTypes.string || PropTypes.number /** @Id current user project */\r\n    }\r\n\r\n    state = {\r\n        workMode: this.props.workMode,\r\n        images: {\r\n            buttonSearchDisabled: false,\r\n            selectedItem: null, \r\n            showUrl: null, \r\n            images: null,\r\n            urlFull: null,\r\n            imageBoxView: false, \r\n            error: ''\r\n        },\r\n        newProject: {\r\n            validateName: false,\r\n            validateType: false,\r\n            disabled: true,\r\n            name: '',\r\n            type: 'empty'\r\n        },\r\n        imageMenuActive: false,\r\n        warning: {\r\n            lengthMax: 'Max length: 20 symbols',\r\n            lengthMin: 'Min length: 4 symbol',\r\n            type: 'Select type of webpage',\r\n        }\r\n    }\r\n\r\n    inputSearch = null;\r\n    inputSelect = null;\r\n\r\n    searchBackground = event => {\r\n        const mode = 'search/photos/?page=1&per_page=40&query=';\r\n        const api = `https://api.unsplash.com/${mode}`;\r\n        const search = this.inputSearch.value;\r\n\r\n        this.setState({...this.state, images: {...this.state.inages, buttonSearchDisabled: true}})\r\n\r\n        isFetch(`${api + search}&client_id=${process.env.REACT_APP_UNSPLASH_TOKEN}`)\r\n        .then(response => {\r\n            if (response.ok) return response.json();\r\n            else throw new Error('request invalid');\r\n        })\r\n        .then(response => {\r\n\r\n            let {results} = response;\r\n            if (results.length)\r\n            this.setState({\r\n                ...this.state,\r\n                images: {\r\n                    ...this.state.images,\r\n                    imageBoxView: true,\r\n                    error: '',\r\n                    images: [...results],\r\n                    buttonSearchDisabled: false\r\n                },\r\n            });\r\n            else throw new Error('Photos not found');\r\n        })\r\n        .catch(error => {\r\n            console.error(error.message);\r\n            this.setState({\r\n                ...this.state,\r\n                images: {...this.state.images, error: error.message},\r\n                imageBoxView: false,\r\n                buttonSearchDisabled: false\r\n            });\r\n        });\r\n    }\r\n\r\n    showMenuImage = event => {\r\n        this.setState({\r\n            ...this.state, \r\n            imageMenuActive: true,\r\n            images: {\r\n                ...this.state.images,\r\n                selectedItem: event.id, \r\n                showUrl: event.url,\r\n                urlFull: event.urlFull\r\n\r\n            }\r\n        });\r\n    }\r\n\r\n    showImage = event => {\r\n\r\n        const {showUrl} = this.state.images;\r\n        eventEmitter.emit(\"EventImageView\", {action: true, target: showUrl ? showUrl : null});\r\n        event.stopPropagation();\r\n    }\r\n\r\n    setSelectedImage = event => {\r\n\r\n        let images = {...this.state.images};\r\n        if (this.props.modalSearchMode !== 'image'){\r\n            eventEmitter.emit(`EventSetBackgroundImage${this.props.idComponent}`,images);\r\n            eventEmitter.emit(`EventSetBImageInstumentPanel`,{images: images, mode: this.props.modalSearchMode});\r\n        } else {\r\n            eventEmitter.emit(`EventSetCurrentImage${this.props.idComponent}`, images);\r\n            eventEmitter.emit(`EventSetBImageInstumentPanel`, {images: images,  mode: this.props.modalSearchMode });\r\n        }\r\n        \r\n        event.stopPropagation();\r\n    };\r\n\r\n    makeImageResultBox = (items) => {\r\n        if (!items) return null;\r\n        return items.map((item,i) =>{\r\n           return <ImageItem \r\n                key = {`item${i}`} \r\n                id = {i}\r\n                selected = {this.state.images.selectedItem === i ? true : false} \r\n                isFull = {false}\r\n                urls = {{...item.urls}} \r\n            />\r\n        });\r\n    }\r\n\r\n    addNewProject = event => {\r\n        let mode = this.state[this.state.workMode];\r\n        if (mode.validateType &&  mode.validateName) {\r\n            eventEmitter.emit('EventAddProject',\r\n            {\r\n                title: this.state[this.state.workMode].name,\r\n                type: this.state[this.state.workMode].type\r\n            });\r\n\r\n            eventEmitter.emit('EventChangeWorkMode',{action: 'default'});\r\n        }\r\n    }\r\n\r\n    selectOption = event => {\r\n\r\n        let inputs = {...this.state[this.state.workMode]};\r\n        inputs.type = event.target.value;\r\n        inputs.validateType = inputs.type !== 'empty';\r\n        inputs.disabled = inputs.validateType && inputs.validateName ? false : true;\r\n        this.setState({\r\n            ...this.state,\r\n            [this.state.workMode]: inputs\r\n        });\r\n    }\r\n\r\n    validateName = event => {\r\n\r\n        let inputs = {...this.state[this.state.workMode]};\r\n        inputs.name = event.target.value;\r\n        let lengthInput = inputs.name.length;\r\n        inputs.validateName = lengthInput >= 4 && lengthInput < 20 ? true : false;\r\n        inputs.disabled = inputs.validateType && inputs.validateName ? false : true;\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            [this.state.workMode]: inputs\r\n        })\r\n    };\r\n\r\n    cancel = event => {\r\n\r\n        if (this.state.workMode === 'Search')\r\n            eventEmitter.emit(\"EventModalSearchOn\", {action: 'offline', mode: null});\r\n        else  eventEmitter.emit('EventChangeWorkMode',{action: 'default'});\r\n    }\r\n\r\n    refSelect = (node) => this.inputSelect = node;\r\n    refSearch = node => this.inputSearch = node;\r\n\r\n    render(){\r\n        switch (this.state.workMode){\r\n            case 'newProject':\r\n                return (\r\n                    <div className = 'Modal'>\r\n                        <h3>Create new Project</h3>\r\n                        { this.state[this.state.workMode].name.length <= 3 ?\r\n                            <span className = 'warning'>{this.state.warning.lengthMin}</span> : null\r\n                        }\r\n                        { this.state[this.state.workMode].name.length >= 20 ?\r\n                            <span className = 'warning'>{this.state.warning.lengthMax}</span> : null\r\n                        }\r\n                        <input\r\n                            className = {this.state[this.state.workMode].validateName ? 'ready' : 'wrong'}\r\n                            value = {this.state[this.state.workMode].name}\r\n                            onChange = {this.validateName}\r\n                            type = 'text'\r\n                            placeholder = \"Project name\"\r\n                        />\r\n                        { !this.state[this.state.workMode].validateType ?\r\n                            <span className = 'warning'>{this.state.warning.type}</span> : null\r\n                        }\r\n                        <select onChange = {this.selectOption} >\r\n                            <option value = 'empty'>--------</option>\r\n                            <option value = 'landing'>Landing</option>\r\n                            <option value = 'portfolio'>Portfolio</option>\r\n                        </select>\r\n                        <input \r\n                            onClick = {this.addNewProject}\r\n                            className = 'acceptButton'\r\n                            disabled = {this.state[this.state.workMode].disabled}\r\n                            type = 'button'\r\n                            value = 'Submit'\r\n                        />\r\n                            <input onClick = {this.cancel} type ='button' value = 'Cancel' />\r\n                    </div>\r\n                )\r\n            case 'Search':\r\n                console.log(this.props);\r\n                return (\r\n                    <Fragment>\r\n                        <div className = 'Modal Modal-search'>\r\n                            <h3>{`Search ${this.props.modalSearchMode !== 'image' ? 'background image' : 'image'}`}</h3>\r\n                            { this.state.images.error ?\r\n                                <span className = 'error'>{this.state.images.error}</span> : null\r\n                            }\r\n                            <input ref = {this.refSearch} type = 'text' placeholder = \"Photo name\" />\r\n                            <input \r\n                                disabled = {this.state.images.buttonSearchDisabled} \r\n                                className = 'acceptButton' \r\n                                type = 'button' \r\n                                value = 'Search'\r\n                                onClick = {this.searchBackground}\r\n                            />\r\n                            <input onClick = {this.cancel} type ='button' value = 'Cancel' />\r\n                            {\r\n                                this.state.images.imageBoxView ?\r\n                                <div className = 'searchResultBox'>\r\n                                    {this.makeImageResultBox([...this.state.images['images']])}\r\n                                </div>\r\n                                : null\r\n                            }\r\n                        </div>\r\n                        {  this.state.imageMenuActive ?\r\n                            <div className = 'ActionModalSearch'>\r\n                            <button onClick = {this.showImage} className = 'actionModalSearch__view'>\r\n                                <Icon path = '/img/view.png' />\r\n                            </button>\r\n                            <button onClick = {this.setSelectedImage} className = 'actionModalSearch__settings'>\r\n                                <Icon path = '/img/settings.png' />\r\n                            </button>\r\n                            </div>\r\n                            : null\r\n                        }\r\n                    </Fragment>\r\n                )\r\n\r\n                case 'SearchImage':\r\n                    return (\r\n                        <Fragment>\r\n                            <div className = 'Modal Modal-search'>\r\n                                <h3>Search background image</h3>\r\n                                { this.state.images.error ?\r\n                                    <span className = 'error'>{this.state.images.error}</span> : null\r\n                                }\r\n                                <input ref = {this.refSearch} type = 'text' placeholder = \"Photo name\" />\r\n                                <input \r\n                                    disabled = {this.state.images.buttonSearchDisabled} \r\n                                    className = 'acceptButton' \r\n                                    type = 'button' \r\n                                    value = 'Search'\r\n                                    onClick = {this.searchBackground}\r\n                                />\r\n                                <input onClick = {this.cancel} type ='button' value = 'Cancel' />\r\n                                {\r\n                                    this.state.images.imageBoxView ?\r\n                                    <div className = 'searchResultBox'>\r\n                                        {this.makeImageResultBox([...this.state.images['images']])}\r\n                                    </div>\r\n                                    : null\r\n                                }\r\n                            </div>\r\n                            {  this.state.imageMenuActive ?\r\n                                <div className = 'ActionModalSearch'>\r\n                                <button onClick = {this.showImage} className = 'actionModalSearch__view'>\r\n                                    <Icon path = '/img/view.png' />\r\n                                </button>\r\n                                <button onClick = {this.setSelectedImage} className = 'actionModalSearch__settings'>\r\n                                    <Icon path = '/img/settings.png' />\r\n                                </button>\r\n                                </div>\r\n                                : null\r\n                            }\r\n                        </Fragment>\r\n                    )\r\n            default: return <Fragment></Fragment>\r\n        }\r\n    }\r\n\r\n    componentDidMount = event => {\r\n        if (this.state.workMode === 'Search')\r\n            eventEmitter.on('EventShowMenuImage', this.showMenuImage);\r\n    }\r\n\r\n    componentWillUnmount = event => {\r\n        if (this.state.workMode === 'Search')\r\n            eventEmitter.off('EventShowMenuImage', this.showMenuImage);\r\n    }\r\n}\r\n\r\nexport default ModalWindow;\r\n\r\n","import {createProjectAction, errorAction} from '../actions';\r\n\r\n\r\nfunction random(min,max){\r\n    return `${Math.floor(min + Math.random() * (max-min))}`\r\n}\r\n\r\n\r\nconst middlewareCreateProject = (uid, list, title, type) => async (dispatch,getState, {firebase}) => {\r\n    let lastProject = [...list];\r\n    const lastIndex = lastProject.length  ? lastProject[lastProject.length-1].id + 1 : 0;\r\n    const sectionTitleProject = [];\r\n    if (type === 'portfolio') sectionTitleProject.push(\"Header\");\r\n    else sectionTitleProject.push(\"Header\");\r\n    const header = {\r\n        backgroundImage: null,\r\n        color: null,\r\n        id: `MainBackgroundHeader${random(0,10000)}`,\r\n        targetSection: \"Header\",\r\n        type: \"background\"\r\n    }\r\n\r\n    lastProject.push({\r\n        id: lastIndex,\r\n        title: title,\r\n        type: type,\r\n        components: [header],\r\n        sectionTitleProject: [...sectionTitleProject],\r\n    });\r\n\r\n    await firebase.db.collection(\"users\").doc(uid).update({\r\n        'projects': lastProject,\r\n    })\r\n    .then (() => dispatch(createProjectAction(lastProject)))\r\n    .catch(error => {\r\n        console.error(error.message);\r\n        dispatch(errorAction(error.message));\r\n    })\r\n};\r\n\r\nexport {\r\n    middlewareCreateProject\r\n}","import React, {useState} from 'react';\r\nimport eventEmitter from '../../EventEmitter';\r\nimport {withRouter, Redirect} from 'react-router-dom';\r\n\r\nfunction Item(props) {\r\n\r\n    const [path] = useState( `/Cabinet/Build/${props.id}`);\r\n\r\n    let [canBuild,setCanBuild] = useState(false);\r\n\r\n    const [id] = useState(props.id);\r\n    const [name] = useState(props.name);\r\n    const [type] = useState(props.type);\r\n\r\n\r\n    const build = event => {\r\n        if(props.location.pathname !== path)\r\n            setCanBuild(true);\r\n        event.stopPropagation();\r\n    };\r\n\r\n    const deleteItem = event => {\r\n        eventEmitter.emit('EventDeleteItem',{\r\n            id: props.id,\r\n            name: props.name,\r\n            type: props.type\r\n        });\r\n        event.stopPropagation();\r\n    };\r\n\r\n    const showProduction =event => {\r\n        event.stopPropagation();\r\n    }\r\n\r\n    if (canBuild) return <Redirect to = {path} />\r\n    else return (\r\n            <div className = 'item' data-id = {id}>\r\n                <p className = 'ProjectName'>{name}</p>\r\n                <p className = 'ProjectType'>{type}</p>\r\n                <div className = 'projectController'>\r\n                    <input \r\n                        onClick = {build} \r\n                        className = 'projectControllerButton_enter' \r\n                        type = 'button' \r\n                        value = 'enter build' />\r\n                    <input onClick = {deleteItem} \r\n                        className = 'projectControllerButton_delete' \r\n                        type = 'button' \r\n                        value = 'delete' />\r\n                </div>\r\n                <input onClick = {showProduction} \r\n                    className = 'productionButton' \r\n                    type = 'button' \r\n                    value = 'Show demo' />\r\n            </div>\r\n        )\r\n}\r\n\r\nexport default withRouter(Item);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport {middlewareCreateProject} from '../../redux/middleware/createProjectMiddleware';\r\n\r\nimport './list.scss';\r\n\r\nimport Item from './Item';\r\nimport eventEmitter from '../../EventEmitter.js';\r\n\r\nclass List extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        dispatch: PropTypes.func.isRequired, /** @dispatch redux */\r\n        idUser: PropTypes.string.isRequired, /** @UID current user */\r\n        list: PropTypes.array.isRequired, /** @List user projects */\r\n    }\r\n\r\n    state = {\r\n        redirect: false,\r\n    }\r\n\r\n    addNewProject = (item) => {\r\n        if (this.props.idUser) {\r\n            this.props.dispatch(middlewareCreateProject(\r\n                    this.props.idUser,\r\n                    this.props.list,\r\n                    item.title,\r\n                    item.type\r\n                ));\r\n        } else this.setState({...this.state, redirect: true});\r\n    }\r\n\r\n\r\n    makeList = (list) => {\r\n\r\n        return list.map (project => {\r\n\r\n            return(\r\n                <Item\r\n                    key = {project.id}\r\n                    id = {project.id}\r\n                    name = {project.title}\r\n                    type = {project.type}\r\n                />\r\n            )\r\n        });\r\n    }\r\n\r\n    render(){\r\n        if (this.state.redirect)\r\n            return <Redirect to = { '/'} />\r\n            else return (\r\n                    <div className = 'projectsList__list'>\r\n                        {this.makeList([...this.props.list])}\r\n                    </div>\r\n                )\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        eventEmitter.on('EventAddProject',this.addNewProject);\r\n    }\r\n\r\n      componentWillUnmount = () => {\r\n        eventEmitter.off('EventAddProject',this.addNewProject);\r\n      }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        idUser: state.cabinet.idUser,\r\n        list: [...state.cabinet.projects]\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(List);","import React from 'react';\r\n\r\nimport List from '../List/List.jsx';\r\n\r\nimport './ProjectsSection.scss';\r\n\r\nconst ProjectsSection = props => {\r\n\r\n        return (\r\n                <section className = 'projectsList'>\r\n                    <div className = 'container'>\r\n                        <div className = 'flex-column'>\r\n                            <div className = 'projectsList__about'>\r\n                                <h3>Your Projects</h3>\r\n                            </div>\r\n                            {List ? <List /> : null}\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n        )\r\n\r\n}\r\n\r\nexport default ProjectsSection;","import React,{Fragment} from 'react';\nimport PropTypes from 'prop-types';\nimport eventEmitter from '../../EventEmitter.js';\nimport {Redirect} from 'react-router-dom';\nimport withFirebase from '../../components/firebaseHOC';\n\nimport {middlewareLogOutUser} from '../../redux/middleware/loadUserMiddleware';\nimport middlewareDelete from '../../redux/middleware/middlewareDelete';\nimport Loader from '../../components/loading/Loader';\nimport {connect} from 'react-redux';\n\nimport Header from '../../components/header/Header';\nimport Modal from '../../components/modalWindow/ModalWindow';\nimport ProjectsSection from '../../components/ProjectsSection/ProjectsSection';\n\nimport './Cabinet.scss';\n\nconst title = require('../../config.json').title;\n\nclass Cabinet extends React.PureComponent {\n\n  static propTypes = {\n    firebase: PropTypes.object.isRequired, /** @firebase class for use firebase functions */\n    active: PropTypes.bool, /** @active - status firebase auth */\n    dispatch: PropTypes.func.isRequired, /** @dispatch - redux */\n    history: PropTypes.object.isRequired, /** @Router HTML5 history */\n    location: PropTypes.object.isRequired, /** @Router */\n    match: PropTypes.object.isRequired, /** @Router */\n    idUser: PropTypes.string, /** @Session user id from redux */\n    projects: PropTypes.arrayOf(PropTypes.object).isRequired /** @Projects array with user projects from redux */\n  }\n\n  state = {\n    workMode: 'default',\n  }\n\n  logOut = event => {\n    this.props.dispatch(middlewareLogOutUser(this.props.idUser));\n  }\n\n  deletItem = event => {\n    this.props.dispatch(middlewareDelete({...event, uid: this.props.firebase.getCurrentUser().uid}));\n  }\n\n  changeWorkMode = event => {\n    this.setState ({\n      ...this.state,\n      workMode: event.action,\n    });\n  }\n\n  render(){\n\n    if (this.props.active){\n      return (\n        <Fragment>\n          <Header title = {title} idUser = {this.props.idUser} />\n          <div className = 'Cabinet'>\n            {(this.state.workMode === 'newProject') ? <Modal workMode = {this.state.workMode} /> : null}\n              <ProjectsSection />\n            </div>\n        </Fragment>\n      )\n    } else if (!this.props.firebase.getCurrentUser()) return <Redirect to = { '/'} />\n    else return <Loader path = '/img/loading.gif' type = 'Cabinet' />\n  }\n\n\n  componentDidMount = () => {\n    eventEmitter.on('EventDeleteItem', this.deletItem);\n    eventEmitter.on('EventChangeWorkMode', this.changeWorkMode);\n  }\n\n  componentWillUnmount = () => {\n    eventEmitter.off('EventDeleteItem', this.deletItem);\n    eventEmitter.off('EventChangeWorkMode', this.changeWorkMode);\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    idUser: state.cabinet.idUser,\n    projects: [...state.cabinet.projects],\n    active: state.cabinet.active\n  }\n}\n\nexport default connect(mapStateToProps)(withFirebase(Cabinet));\n","import React, {Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nimport withFirebase from '../../components/firebaseHOC';\r\nimport Header from '../../components/header/Header';\r\n\r\nimport './about.scss';\r\n\r\nclass About extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        config: PropTypes.object.isRequired, /** @Config app */\r\n        firebase: PropTypes.object.isRequired, /** @firebase class for use firebase functions */\r\n        history: PropTypes.object, /** @Router HTML5 history */\r\n        location: PropTypes.object, /** @Router */\r\n        match: PropTypes.object, /** @Router */\r\n    }\r\n\r\n    state = {\r\n        config: this.props.config\r\n    };\r\n\r\n    render(){\r\n        if (this.props.firebase.getCurrentUser()) {\r\n            const { config } = this.state;\r\n            return (\r\n                <Fragment>\r\n                    <Header title = {config.title} />\r\n                    <section className = 'About'>\r\n                        <div className = 'container'>\r\n                            <div className = 'col-12'>\r\n                                <div className = 'information'>\r\n                                <img alt = 'img' className = 'logoAbout' src = {process.env.PUBLIC_URL + '/img/about.jpg'}/>\r\n                                    <p className ='developer'><span>Developer:</span> {config.about.developer}</p>\r\n                                    <p className = 'year'><span>Year:</span> {config.about.year}</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </section>\r\n                </Fragment>\r\n            )\r\n        } else return <Redirect to = { '/'} />\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default withFirebase(About);","import {errorAction, loadUpdateCurrentProject} from '../actions';\r\nconst updateMiddleware = (item) => async (dispatch,getState, {firebase}) => {\r\n    let newProjects = item.projects.map(project => {\r\n        if (project.id === item.idProject) {\r\n            project.components = [...item.components]\r\n            project.sectionTitleProject = [...item.sectionTitleProject]\r\n        }\r\n        return project;\r\n    });\r\n    await firebase.db.collection(\"users\").doc(item.uid).update({\r\n        'projects': JSON.parse(JSON.stringify(newProjects))\r\n    })\r\n    .then(response => {\r\n        let project = item.projects.find(itemdb => itemdb.id === item.idProject);\r\n        dispatch(loadUpdateCurrentProject({\r\n            components: [...project.components],\r\n            idProject: item.idProject,\r\n            sectionTitleProject: item.sectionTitleProject,\r\n        }))\r\n    })\r\n    .catch(error => dispatch(errorAction(error.message)));\r\n};\r\n\r\nexport default updateMiddleware;","import React,{useState} from 'react';\r\nimport eventEmitter from '../../EventEmitter';\r\n\r\nimport './imageViewer.scss';\r\n\r\nfunction ImageViewer(props){\r\n\r\n    let [path] = useState(props.path);\r\n\r\n    const closeViewer = event => {\r\n        eventEmitter.emit(\"EventImageView\", { action: false, target: null});\r\n        event.stopPropagation();\r\n    }\r\n\r\n    return (\r\n        <div onClick = {closeViewer} className = 'ImageViewer'>\r\n            <img src = {path} alt = 'fullImage' />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ImageViewer;","import React, {Fragment} from 'react';\r\n\r\nconst ImageInstruments = props => {\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n        <p className = 'titleInstument'>Border radius: </p>\r\n            <input\r\n                onClick = {props.cbSetColor}\r\n                className = 'button_switch radius'\r\n                type=\"number\"\r\n                min = '10' max = '200'\r\n            />\r\n            <p className = 'titleInstument'>Opacity: </p>\r\n            <input \r\n                onClick = {props.cbSearchImage}\r\n                className = 'ImageSearchButton'\r\n                type=\"number\"\r\n                min = '0' max = '1'\r\n            />\r\n            <input \r\n            onClick = {props.cbSearchImage}\r\n            className = 'ImageSearchButton'\r\n            type=\"button\"\r\n            value = 'search image'\r\n        />\r\n            <input \r\n                onClick = {props.cbSaveChanges}\r\n                className = 'saveButtonInstument'\r\n                type = 'button'\r\n                value = 'save changes'\r\n            />\r\n        </Fragment>\r\n    )\r\n\r\n}\r\n\r\nexport default ImageInstruments;","import React, {Fragment,useState} from 'react';\r\nimport {SketchPicker} from 'react-color';\r\n\r\nconst BackgroundInstruments = props => {\r\n\r\n    const {componentsStats} = useState(props.componentStats);\r\n    let color = null;\r\n    if (typeof componentsStats === 'object' &&\r\n        componentsStats.hasOwnProperty('color'))\r\n        color = componentsStats.color;\r\n\r\n    return (\r\n        <Fragment>\r\n        <p className = 'titleInstument'>Color: </p>\r\n        <input\r\n            onClick = {props.cbSetColor}\r\n            className = 'button_switch Color'\r\n            type = 'button'\r\n            value = 'color pick'\r\n        />\r\n            { props.colorPickerActive ?\r\n                <SketchPicker\r\n                    onChangeComplete={props.cbHandleChangeComplete}\r\n                    color = {color ? color : 'red'}\r\n                />\r\n                : null\r\n            }\r\n            <input \r\n                onClick = {props.cbSearchImage}\r\n                className = 'ImageSearchButton'\r\n                type = 'button'\r\n                value = 'background-image'\r\n            />\r\n            <input \r\n                onClick = {props.cbSaveChanges}\r\n                className = 'saveButtonInstument'\r\n                type = 'button'\r\n                value = 'save changes'\r\n            />\r\n        </Fragment>\r\n    )\r\n\r\n}\r\n\r\nexport default BackgroundInstruments;","import React,{Fragment} from 'react';\r\nimport {SketchPicker} from 'react-color';\r\n\r\nconst TextInstruments = props => {\r\n\r\n        let {colorPickerActive} = props.instrumentPanel;\r\n        let {content} = props.componentStats;\r\n        let {fontSize} = props.componentStats;\r\n        let {coords} = props.componentStats;\r\n        let {color} = props.componentStats;\r\n\r\n        console.log(props);\r\n        return (\r\n            <Fragment>\r\n            <p className = 'titleInstument'>Position: </p>\r\n            <span className = 'textCoordsPanel'>\r\n            {coords.x ?\r\n                coords.x + ' / ' + coords.y : ' drop for active'}\r\n            </span>\r\n            <p className = 'titleInstument'>Color: </p>\r\n            <input \r\n                onClick = {props.cbSetColor}\r\n                className = 'button_switch'\r\n                type = 'button'\r\n                value = 'color pick'\r\n            />\r\n            <p className = 'titleInstument'>Text size: </p>\r\n            <input \r\n                onChange = {props.cbSetSize}\r\n                type=\"number\"\r\n                min = '10' max = '200'\r\n                value = {fontSize ? fontSize : 120}\r\n            />\r\n                { colorPickerActive ?\r\n                    <SketchPicker\r\n                    onChangeComplete={props.cbHandleChangeComplete}\r\n                    color = {color ? color: 'red'}\r\n                    />\r\n                    : null\r\n                }\r\n            <p className = 'titleInstument'>Content: </p>\r\n            <input\r\n                onChange = {props.cbSetContent}\r\n                maxLength = '20'\r\n                type = 'text'\r\n                value = {content ? content : 'Title'}\r\n            />\r\n            <input \r\n                onClick = {props.cbSaveChanges}\r\n                className = 'saveButtonInstument'\r\n                type = 'button'\r\n                value = 'save changes'\r\n            />\r\n            </Fragment>\r\n        )\r\n}\r\n\r\nexport default TextInstruments;","import React from 'react';\r\n\r\nimport './Confirm.scss';\r\n\r\nconst Confirm = props => {\r\n\r\n    return (\r\n        <div className = 'wrapperConfirm'>\r\n            <div className = 'confirmSave'>\r\n                <span>Detected new changes</span>\r\n                <input\r\n                    className = 'saveCofirm'\r\n                    onClick = {props.cbSaveChanges}\r\n                    type = 'button'\r\n                    value = 'Save changes'\r\n                />\r\n                <input\r\n                    className = 'cancelCofirm'\r\n                    onClick = {props.cbCancelSave}\r\n                    type = 'button'\r\n                    value = 'Cancel'\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Confirm;","import React, {Fragment} from 'react';\r\nimport eventEmitter from '../../EventEmitter';\r\nimport PropTypes from 'prop-types';\r\nimport './instrumentsPanel.scss';\r\nimport ImageInstruments from './ImageTools/ImageInstruments';\r\nimport BackgroundInstruments from './BackgroundTools/BackgroundInstruments';\r\nimport TextInstruments from './TextTools/TextInstruments';\r\n\r\nimport Confirm from '../confirmBox/Confirm';\r\nimport Icon from '../Icon/icon';\r\n\r\nclass InstrumentsPanel extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        instrumentPanel:  PropTypes.object.isRequired, /** @Settings for panel and data about component */\r\n        editComponentName: PropTypes.string /** @Name editable component */\r\n    };\r\n\r\n    state = {\r\n        isChange: false,\r\n        confirmActive: false,\r\n        instrumentPanel: {...this.props.instrumentPanel},\r\n        componentStats: this.props.componentStats,\r\n        images: null,\r\n    };\r\n\r\n    updateSizeText = eventSize => {\r\n        this.setState({\r\n            ...this.state,\r\n            instrumentPanel: {...this.state.instrumentPanel},\r\n            componentStats: {\r\n                ...this.state.componentStats,\r\n                fontSize: eventSize\r\n            }\r\n        });\r\n    };\r\n\r\n    closePanel = event => {\r\n        if (!this.state.isChange)\r\n        eventEmitter.emit('EventClosePanel', {close: false});\r\n        else this.setState({...this.state, confirmActive: true});\r\n    };\r\n\r\n    setSize = event => {\r\n        let {id} = this.state.componentStats;\r\n        let size = event.target.value > 200 ? 200 : event.target.value;\r\n        this.setState({\r\n            ...this.state, \r\n            instrumentPanel: {...this.state.instrumentPanel},\r\n            componentStats: {...this.state.componentStats,fontSize: size}\r\n        },\r\n            () => eventEmitter.emit(`EventChangeSizeText${id}`, {\r\n                targetSection: this.state.editComponentName, size: size \r\n            })\r\n        );\r\n    };\r\n\r\n    setContent = event => {\r\n        let {id} = this.state.componentStats;\r\n        let contentValue = event.target.value;\r\n        this.setState({\r\n            ...this.state, \r\n            instrumentPanel: {...this.state.instrumentPanel},\r\n            componentStats: {...this.state.componentStats,content: contentValue}\r\n        },\r\n            () => eventEmitter.emit(`EventChangeContentText${id}`,{\r\n                targetSection: this.state.editComponentName, content: contentValue\r\n            })\r\n        );\r\n    };\r\n\r\n    updatePosition = eventItem => {\r\n        this.setState({\r\n            ...this.state, \r\n            componentStats: {\r\n                ...this.state.componentStats,\r\n                coords: {\r\n                    ...this.state.componentStats.coords,\r\n                    x: eventItem.x,\r\n                    y: eventItem.y\r\n                }\r\n            }\r\n        });\r\n    };\r\n\r\n    setColor = event => {\r\n        this.setState({...this.state,\r\n            instrumentPanel:{\r\n                ...this.state.instrumentPanel,\r\n                colorPickerActive: this.state.instrumentPanel.colorPickerActive ? false : true\r\n            }\r\n        });\r\n    };\r\n\r\n    updateBimageStats = eventItem => {\r\n        const {images} = eventItem;\r\n        console.log(eventItem);\r\n        if (eventItem.mode !== 'image')\r\n        this.setState({\r\n            ...this.state,\r\n            componentStats:{\r\n                ...this.state.componentStats,\r\n                backgroundImage: images.urlFull\r\n            }\r\n        });\r\n        else {\r\n            this.setState({\r\n                ...this.state,\r\n                componentStats:{\r\n                    ...this.state.componentStats,\r\n                    image: images.urlFull\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    handleChangeComplete = event => {\r\n\r\n        const {rgb} = event;\r\n        let colorRGB = `rgb(${rgb.r},${rgb.g},${rgb.b},${rgb.a})`;\r\n\r\n        let {id} = this.state.componentStats;\r\n        if (this.state.componentStats.type === 'background'){\r\n            this.setState({\r\n                ...this.state,\r\n                componentStats: {...this.state.componentStats,color: colorRGB}\r\n            }, () => eventEmitter.emit(`EventChangeColorBackground${id}`,\r\n                        {colorRGB: this.state.componentStats.color}\r\n                    ));\r\n        }\r\n\r\n        else if (this.state.componentStats.type === 'text') {\r\n            this.setState({\r\n                ...this.state,\r\n                componentStats: {...this.state.componentStats,color: colorRGB}\r\n            },\r\n            () => eventEmitter.emit(`EventChangeColorText${id}`, colorRGB));\r\n        }\r\n\r\n    };\r\n\r\n    saveChanges = event => {\r\n        this.setState({...this.state, isChange: false, confirmActive: false}, () =>\r\n        eventEmitter.emit(\"EventSaveChangesComponent\", {\r\n            ...this.state.componentStats,\r\n            id: this.state.componentStats.id,\r\n            type: this.state.componentStats.type,\r\n        }));\r\n\r\n        event.stopPropagation();\r\n    }\r\n\r\n    searchImage = event => {\r\n\r\n        let {id} = this.state.componentStats;\r\n        eventEmitter.emit('EventModalSearchOn', {idComponent: id, mode: this.state.componentStats.type});\r\n\r\n        event.stopPropagation();\r\n    };\r\n\r\n    makePanelInstruments = (type) => {\r\n        console.log(type);\r\n            switch (type){\r\n                case 'text':\r\n                   return(\r\n                    <TextInstruments\r\n                        instrumentPanel = {{...this.state.instrumentPanel}}\r\n                        componentStats = {{...this.state.componentStats}}\r\n                        cbSetColor = {this.setColor}\r\n                        cbSetSize = {this.setSize}\r\n                        cbHandleChangeComplete = {this.handleChangeComplete}\r\n                        cbSetContent = {this.setContent}\r\n                        cbSaveChanges = {this.saveChanges}\r\n                    />\r\n                   )\r\n                case 'background':\r\n                    return (\r\n                        <BackgroundInstruments\r\n                            colorPickerActive = {this.state.instrumentPanel.colorPickerActive}\r\n                            componentStats = {{...this.state.componentStats}}\r\n                            cbSetColor = {this.setColor}\r\n                            cbHandleChangeComplete = {this.handleChangeComplete}\r\n                            cbSearchImage = {this.searchImage}\r\n                            cbSaveChanges = {this.saveChanges}\r\n                        />\r\n                    )\r\n                case 'image':\r\n                        return (\r\n                            <ImageInstruments\r\n                                instrumentPanel = {{...this.state.instrumentPanel}}\r\n                                componentStats = {{...this.state.componentStats}}\r\n                                cbSearchImage = {this.searchImage}\r\n                                cbSaveChanges = {this.saveChanges}\r\n                            />\r\n                        )\r\n                default: return <p className = 'warningInstruments'>No found element</p>\r\n            }\r\n    };\r\n\r\n\r\n    cancelSave = event => {\r\n        this.setState({...this.state, isChange: false, confirmActive: false});\r\n        event.stopPropagation();\r\n    }\r\n\r\n\r\n    render(){\r\n        let { instrumentActive } = this.state.instrumentPanel;\r\n\r\n        return (\r\n            <Fragment>\r\n                { this.state.confirmActive ?\r\n                    <Confirm cbSaveChanges = {this.saveChanges} cbCancelSave = {this.cancelSave} /> : null\r\n                }\r\n                <div  className = 'instumentsPanel'>\r\n                    <button\r\n                        onClick = {this.closePanel}\r\n                        className = 'closeInstrumentsPanel'\r\n                    >\r\n                        <Icon path = '/img/close.svg' />\r\n                    </button>\r\n                    <h3>Instruments</h3>\r\n                    {\r\n                        instrumentActive ? \r\n                        <p className = 'TextComponent'>{this.state.componentStats.type}</p>\r\n                        : null\r\n                    }\r\n                    {\r\n                        instrumentActive ?\r\n                        <div className = 'instuments'>\r\n                            {this.makePanelInstruments(this.state.componentStats.type)}\r\n                        </div>\r\n                        : null\r\n                    }\r\n                </div>\r\n            </Fragment>\r\n        )\r\n    };\r\n\r\n    componentDidUpdate = (oldProps, oldState) => {\r\n        console.log(oldProps);\r\n        let targetBool = oldState.componentStats.targetSection !== this.props.componentStats.targetSection;\r\n        let idBool = oldState.componentStats.id !== this.props.componentStats.id;\r\n        let statsBool = this.state.componentStats !== oldState.componentStats && !this.state.isChange;\r\n        const compare = idBool || targetBool;\r\n        if (compare && !this.state.isChange){\r\n            this.setState({\r\n                ...this.state,\r\n                instrumentPanel: {...this.props.instrumentPanel, colorPickerActive: false, isChange: false},\r\n                componentStats: this.props.mainBuilderData.components.find(item =>\r\n                    {return item.id === this.props.componentStats.id }),\r\n            });\r\n        } else if (!this.state.isChange && statsBool) {\r\n            this.setState({\r\n                    ...this.state,\r\n                    componentStats: {...this.state.componentStats},\r\n                    isChange: true\r\n            });\r\n        } else if (compare && this.state.isChange) this.setState({...this.state, confirmActive: true});\r\n    };\r\n\r\n    componentDidMount = event => {\r\n        eventEmitter.on(`EventUpdateSizeText${this.state.componentStats.id}`, this.updateSizeText);\r\n        eventEmitter.on(\"EventSetBImageInstumentPanel\", this.updateBimageStats);\r\n        eventEmitter.on(`EventUpdatePosition${this.state.componentStats.id}`, this.updatePosition);\r\n    };\r\n\r\n    componentWillUnmount = event => {\r\n        eventEmitter.off(`EventUpdateSizeText${this.state.componentStats.id}`, this.updateSizeText);\r\n        eventEmitter.off(\"EventSetBImageInstumentPanel\", this.updateBimageStats);\r\n        eventEmitter.off(`EventUpdatePosition${this.state.componentStats.id}`, this.updatePosition);\r\n    };\r\n};\r\n\r\nexport default InstrumentsPanel;","import React,{Fragment} from 'react';\r\nimport ImageViewer from '../../components/imageViewer/imageViewer';\r\nimport InstrumentsPanel from '../../components/instrumentsPanel/InstrumentsPanel';\r\nimport ModalWindow from '../../components/modalWindow/ModalWindow';\r\n\r\nconst AdditionalTools = props => {\r\n    return (\r\n        <Fragment key = 'AdditionalBuild'>\r\n            {   props.modalImageViewer.action &&\r\n                    <ImageViewer key = 'ImageViewer' path = {props.modalImageViewer.target} />\r\n            }\r\n            {   props.modalSearch &&\r\n                    <ModalWindow\r\n                        idComponent = {props.componentStats.id}\r\n                        modalSearchMode = {props.modalSearchMode}\r\n                        key = 'ModalWindow' workMode = 'Search' \r\n                    />\r\n            }\r\n                <InstrumentsPanel\r\n                    key = 'InstrumentsPanel'\r\n                    editComponentName = {props.editComponentName}\r\n                    componentStats = {{...props.componentStats}}\r\n                    mainBuilderData =  {props.mainBuilderData}\r\n                    instrumentPanel = {props.instrumentPanel}\r\n                />\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default AdditionalTools;","import React, {useEffect, useState} from 'react';\r\nimport eventEmitter from '../../../EventEmitter';\r\nimport styled from 'styled-components';\r\n\r\n\r\nconst Media = styled.iframe`\r\n    transform: translate(-50%,-50%);\r\n    width: 30%;\r\n    height: 50%;\r\n    left: 50%;\r\n    top: 50%;\r\n    position: absolute;\r\n    z-index: 10;\r\n    border: 1px solid red;\r\n    background: grey;\r\n    padding: 25px;\r\n`;\r\n\r\n\r\nconst MediaComponent = props => {\r\n\r\n    const [targetSection] = useState(props.targetSection);\r\n    const [id] = useState(props.id);\r\n    const [sizeParentBox] = useState(props.sizeParentBox);\r\n    const [content, setContent] = useState(props.path || props.content);\r\n    const [shiftCoords, setShiftCoords] = useState(null)\r\n    const [dragNdrop, setDragNdrop] = useState(props.coords.x ? {x: props.coords.x, y: props.coords.y} : null);\r\n\r\n\r\n    const openMediaInstruments = event => {\r\n\r\n        eventEmitter.emit('EventInstrumentPanel',{target: 'media'});\r\n        event.stopPropagation();\r\n    }\r\n    console.log('media');\r\n    return (\r\n        <Media\r\n            onClick={openMediaInstruments} \r\n            width = {props.width} \r\n            height = {props.height}\r\n            src=\"https://www.youtube.com/embed/B0b59jgudto\"\r\n            allowfullscreen\r\n        >\r\n            {props.children}\r\n        </Media>\r\n    )\r\n}\r\n\r\n// <iframe width=\"560\" height=\"315\" \r\n// src=\"https://www.youtube.com/embed/7KoHDwvSOwc\" \r\n// frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" \r\n// allowfullscreen>\r\n// </iframe>\r\n\r\nexport default MediaComponent;","import React,{useState,useEffect} from 'react';\r\nimport eventEmitter from '../../../EventEmitter';\r\nimport styled from 'styled-components';\r\n\r\nconst ImageStyle = styled.img.attrs(props => ({\r\n    style: {\r\n        // display: props.shadowDisplay ? 'none' : 'block',\r\n        left: props.coordX ? props.coordX : '45%',\r\n        top:  props.coordY ? props.coordY : '0',\r\n}}))`\r\n    position: absolute;\r\n    width: ${props => props.size}%;\r\n    transform: translate(-50%,50%);\r\n`;\r\n\r\nconst Image = props => {\r\n\r\n    const [id] = useState(props.id);\r\n    const [path, setImage] = useState(props.path);\r\n    const [size,setSize] = useState(props.size ? props.size : 30);\r\n    const [targetSection] = useState(props.targetSection);\r\n\r\n\r\n    let [count,setCount] = useState(0);\r\n    const [sizeParentBox, setsizeParentBox] = useState({...props.sizeParentBox});\r\n    const [shiftCoords, setShiftCoords] = useState(null)\r\n    const [dragNdrop, setDragNdrop] = useState(props.coords.x ? {x: props.coords.x, y: props.coords.y} : null);\r\n\r\n    const openImageInstruments = event => {\r\n\r\n        const componentsPatternImage = {\r\n            id: id,\r\n            targetSection: targetSection,\r\n            type: 'image',\r\n            borderRadius: null,\r\n            opacity: 1,\r\n            zIndex: null,\r\n            image: path,\r\n            coords: {...dragNdrop}, // x, y\r\n        }\r\n\r\n        eventEmitter.emit(`EventInstrumentPanel`,{\r\n            componentStats: componentsPatternImage,\r\n            targetSection: targetSection,\r\n            id: id,\r\n            sizeTextValue: size\r\n        });\r\n        event.stopPropagation();\r\n    }\r\n\r\n    const saveCoords = event => {\r\n\r\n        let rect = event.target.getBoundingClientRect();\r\n        let left = rect.left;\r\n        let top = rect.top;\r\n        let width = rect.width;\r\n        let height = rect.height;\r\n\r\n        setShiftCoords({x: event.pageX - left - width/2, y: event.pageY - top + height/2});\r\n\r\n        event.stopPropagation();\r\n    }\r\n\r\n    const moveText = event => {\r\n\r\n        let coordX = event.pageX - shiftCoords.x;\r\n        let coordY = event.pageY - shiftCoords.y;\r\n\r\n        let convertToPercentX = ((coordX) * 100) / sizeParentBox.width;\r\n        let convertToPercentY = ((coordY) * 100) / (sizeParentBox.height);\r\n\r\n        if (isNaN(convertToPercentX) || isNaN(convertToPercentY)){\r\n            console.log('error');\r\n        }\r\n\r\n        const position = {\r\n            x: convertToPercentX.toFixed(1) + '%', \r\n            y: convertToPercentY.toFixed(1) + '%', \r\n            shadowDisplay: event.type === 'drag' ? true : false,\r\n            type: 'image'\r\n        };\r\n        setDragNdrop(position);\r\n        if (event.type === 'dragend') {\r\n            eventEmitter.emit(`EventUpdatePosition${id}`, position);\r\n        }\r\n        event.stopPropagation();\r\n    }\r\n\r\n    const setCurrentImage = event => {\r\n        const {urlFull} = event;\r\n        setImage(urlFull);\r\n    };\r\n    \r\n    const weelResizeText = event => {\r\n\r\n        if (event.shiftKey && event.deltaY === -100) {\r\n            let counter = size + 1;\r\n            counter = counter > 100 ? 100 : counter;\r\n            setSize(counter);\r\n            eventEmitter.emit('EventUpdateSizeText', counter);\r\n        }\r\n\r\n        if (event.shiftKey && event.deltaY === 100) {\r\n            let counter = size - 1;\r\n             counter = counter <= 0 ? 0 : counter;\r\n             setSize(counter);\r\n             eventEmitter.emit('EventUpdateSizeText', counter);\r\n            }\r\n        event.stopPropagation();\r\n    }\r\n\r\n    const saveSize = event => {\r\n\r\n        if (count === 0){\r\n        setsizeParentBox({width: event.width, height: event.height});\r\n        setCount(count + 1);\r\n        } else  eventEmitter.off(`EventSaveWidth`,saveSize);\r\n    }\r\n\r\n    const didUpdate = effect => {\r\n        eventEmitter.on(`EventSaveWidth${targetSection}`,saveSize);\r\n        eventEmitter.on(`EventSetCurrentImage${id}`, setCurrentImage);\r\n        return () => {\r\n            eventEmitter.off(`EventSaveWidth${targetSection}`,saveSize);\r\n            eventEmitter.off(`EventSetCurrentImage${id}`, setCurrentImage);\r\n        }\r\n    }\r\n\r\n    // const searchTest = e => {\r\n\r\n    //     const api = 'https://www.googleapis.com/youtube/v3/search?order=date&part=snippet&channelId=';\r\n\r\n    //     isFetch(`${api}${process.env.REACT_APP_CHANNEL_ID}&maxResults=20&key=${process.env.REACT_APP_YOUTUBE_SEARCH_TOKEN}`)\r\n    //     .then(res => {\r\n    //         if (res.ok)\r\n    //         return res.json();\r\n    //         else throw new Error (`Error ${res.status}`);\r\n    //     })\r\n    //     .then(res => {\r\n    //         console.log(res);\r\n    //     })\r\n    //     .catch(error => console.error(error));\r\n    // }\r\n\r\n    useEffect(didUpdate);\r\n    return (\r\n        <ImageStyle  \r\n            size = {size}\r\n            src = {process.env.PUBLIC_URL + path}\r\n            alt = 'img' \r\n            onClick = {openImageInstruments}\r\n            draggable = {true}\r\n            onMouseDown = {saveCoords}\r\n            onDragStart = {openImageInstruments}\r\n            onDrag   = {moveText}\r\n            onDragEnd = {moveText}\r\n            coordX = {dragNdrop ? dragNdrop.x : null}\r\n            coordY = {dragNdrop ? dragNdrop.y : null}\r\n            onWheel = {weelResizeText}\r\n            shadowDisplay = {dragNdrop ? dragNdrop.shadowDisplay : false}\r\n        />\r\n    )\r\n};\r\n\r\nexport default Image;","\r\nimport React, {useEffect, useState} from 'react';\r\nimport eventEmitter from '../../../EventEmitter';\r\nimport styled from 'styled-components';\r\n\r\n\r\nconst TextStyle = styled.h1.attrs(props => ({\r\n    style: {\r\n        display: props.shadowDisplay ? 'none' : 'block',\r\n        left: props.coordX ? props.coordX : '50%',\r\n        top:  props.coordY,\r\n}}))`\r\n    position: absolute;\r\n    transform: translate(-50%);\r\n    font-size: ${props => props.size};\r\n    color: ${props => props.textColor};\r\n    text-align: center;\r\n    margin: 0;\r\n`;\r\n\r\n// left: ${props => props.coordX ? props.coordX : '50%'};\r\n// top:  ${props => props.coordY};\r\n\r\nconst TextComponent = props =>  {\r\n\r\n\r\n    const [id] = useState(props.id);\r\n    const [sizeParentBox, setsizeParentBox] = useState({...props.sizeParentBox});\r\n\r\n    let [_ScrollY, setScrollY] = useState(0);\r\n\r\n    const [targetSection] = useState(props.targetSection);\r\n    let [count,setCount] = useState(0);\r\n\r\n    let [colorText, setColorText] = useState(props.color);\r\n    let [sizeText, setSizeText] = useState(props.size ? props.size : 120);\r\n    let [contentText, setText] = useState(props.content ? props.content : props.children);\r\n    const [shiftCoords, setShiftCoords] = useState(null)\r\n    const [dragNdrop, setDragNdrop] = useState(props.coords.x ? {x: props.coords.x, y: props.coords.y} : null);\r\n\r\n\r\n    let textComponent = React.createRef();\r\n\r\n    const openTitleInstruments = event => {\r\n\r\n        const componentsPatternText = {\r\n            id: id,\r\n            targetSection: targetSection,\r\n            type: 'text',\r\n            color: colorText,\r\n            fontSize: sizeText,\r\n            content: contentText,\r\n            coords: {...dragNdrop}, // x, y\r\n        }\r\n\r\n        eventEmitter.emit(`EventInstrumentPanel`,{\r\n            type: 'text',\r\n            targetSection: targetSection,\r\n            id: id,\r\n            componentStats: componentsPatternText,\r\n            sizeTextValue: sizeText\r\n        });\r\n\r\n        event.stopPropagation();\r\n    }\r\n\r\n    const changeColorText = colorRGB => {\r\n        if (typeof colorRGB === 'string')\r\n        setColorText(colorRGB);\r\n    }\r\n\r\n    const changeSizeText = eventSize => {\r\n        const {size} = eventSize;\r\n        setSizeText(size);\r\n    }\r\n\r\n    const saveSize = event => {\r\n\r\n        if (count === 0){\r\n        setsizeParentBox({width: event.width, height: event.height});\r\n        setCount(count + 1);\r\n        } else  eventEmitter.off(`EventSaveWidth`,saveSize);\r\n    }\r\n\r\n    const changeContentText = eventContent => {\r\n        let booldContent = eventContent.content || eventContent.content === '';\r\n        if (booldContent){\r\n            const {content} = eventContent;\r\n            setText(content);\r\n        }\r\n    }\r\n\r\n    const scrollCordsSet = eventItem => {\r\n  \r\n        if (eventItem >= 700) eventItem =  eventItem - sizeParentBox.height;\r\n        // if (eventItem >= 1300) eventItem =  eventItem*2 - sizeParentBox.height;\r\n        setScrollY(eventItem);\r\n    }\r\n\r\n\r\n    const didUpdate = event => {\r\n        eventEmitter.on('ScrollRecalcPosition', scrollCordsSet);\r\n        eventEmitter.on(`EventChangeColorText${id}`, changeColorText);\r\n        eventEmitter.on(`EventChangeSizeText${id}`, changeSizeText);\r\n        eventEmitter.on(`EventChangeContentText${id}`, changeContentText);\r\n        eventEmitter.on(`EventSaveWidth${targetSection}`,saveSize);\r\n        return () => {\r\n            eventEmitter.off('ScrollRecalcPosition', scrollCordsSet);\r\n            eventEmitter.off(`EventChangeColorText${id}`, changeColorText);\r\n            eventEmitter.off(`EventSaveWidth${targetSection}`,saveSize);\r\n            eventEmitter.off(`EventChangeSizeText${id}`, changeSizeText);\r\n            eventEmitter.off(`EventChangeContentText${id}`, changeContentText);\r\n        }\r\n    }\r\n\r\n    const saveCoords = event => {\r\n\r\n        if (_ScrollY === undefined) _ScrollY = 0;\r\n        let rect = event.target.getBoundingClientRect();\r\n        let left = rect.left;\r\n        let top = rect.top + _ScrollY;\r\n        let width = rect.width;\r\n        let height = rect.height;\r\n\r\n        setShiftCoords({x: event.pageX - left - width/2, y: event.pageY - top + height/2});\r\n\r\n        event.stopPropagation();\r\n    }\r\n\r\n    const moveText = event => {\r\n\r\n        let {current} = textComponent;\r\n        current.focus();\r\n\r\n        const MARGIN = 150;\r\n        const borderBottom = sizeParentBox.height - MARGIN;\r\n\r\n        // const borderLeft = sizeParentBox.width - MARGIN;\r\n\r\n        let coordX = event.pageX - shiftCoords.x;\r\n        let coordY = event.pageY - shiftCoords.y;\r\n\r\n        if (coordY < 0) coordY =  0;\r\n        if (coordY > borderBottom) coordY = borderBottom;\r\n\r\n\r\n\r\n        let convertToPercentX = ((coordX) * 100) / sizeParentBox.width;\r\n        let convertToPercentY = ((coordY) * 100) / (sizeParentBox.height);\r\n\r\n        if (isNaN(convertToPercentX) || isNaN(convertToPercentY)){\r\n            console.log('error');\r\n        }\r\n\r\n        const position = {\r\n            x: convertToPercentX.toFixed(1) + '%', \r\n            y: convertToPercentY.toFixed(1) + '%', \r\n            shadowDisplay: event.type === 'drag' ? true : false\r\n        };\r\n        setDragNdrop(position);\r\n        if (event.type === 'dragend') {\r\n            eventEmitter.emit(`EventUpdatePosition${id}`, position);\r\n        }\r\n        event.stopPropagation();\r\n    }\r\n\r\n    const weelResizeText = event => {\r\n\r\n        if (event.shiftKey && event.deltaY === -100) {\r\n            let counter = sizeText + 1;\r\n            counter = counter > 200 ? 200 : counter;\r\n            setSizeText(counter);\r\n            eventEmitter.emit(`EventUpdateSizeText${id}`, counter);\r\n        }\r\n\r\n        if (event.shiftKey && event.deltaY === 100) {\r\n            let counter = sizeText - 1;\r\n             counter = counter <= 10 ? 10 : counter;\r\n             setSizeText(counter);\r\n             eventEmitter.emit(`EventUpdateSizeText${id}`, counter);\r\n            }\r\n        event.stopPropagation();\r\n    }\r\n\r\n    useEffect(didUpdate);\r\n\r\n    return (\r\n        <TextStyle\r\n            ref  = {textComponent}\r\n            onClick={openTitleInstruments}\r\n            textColor = {colorText ? colorText : 'red'}\r\n            size = {sizeText ? sizeText + 'px' : '120px'}\r\n            draggable = {true}\r\n            onMouseDown = {saveCoords}\r\n            onDragStart = {openTitleInstruments}\r\n            onDrag   = {moveText}\r\n            onDragEnd = {moveText}\r\n            onWheel = {weelResizeText}\r\n            coordX = {dragNdrop ? dragNdrop.x : null}\r\n            coordY = {dragNdrop ? dragNdrop.y : null}\r\n            shadowDisplay = {dragNdrop ? dragNdrop.shadowDisplay : false}\r\n        >\r\n            {contentText}\r\n        </TextStyle>\r\n    )\r\n}\r\n\r\nexport default TextComponent;","import React, {useEffect, useState} from 'react';\r\nimport eventEmitter from '../../../EventEmitter';\r\nimport styled from 'styled-components';\r\n\r\n\r\nconst Background = styled.div`\r\n    position: relative;\r\n    width: 100%;\r\n    height: 800px;\r\n    background-size: cover;\r\n    background-color: ${props => props.backgroundColor};\r\n    background-image: url(${props => props.backgroundImage});\r\n`;\r\n\r\nconst BackgroundComponent = props => {\r\n\r\n    const [id] = useState(props.id);\r\n    const [targetSection] = useState(props.targetSection);\r\n    let boxComponent = React.createRef();\r\n\r\n    let [backgroundColor, setBgColor] = useState(props.background || props.color);\r\n    let [backgroundImage, setImage] = useState(props.backgroundImage ? props.backgroundImage : null);\r\n\r\n    const saveWidth = event => {\r\n        boxComponent.current.focus();\r\n        let boxInform =  boxComponent.current.getBoundingClientRect();\r\n        eventEmitter.emit(`EventSaveWidth${targetSection}`, {width: boxInform.width, height: boxInform.height});\r\n    }\r\n\r\n    const openBgInstruments = event => {\r\n\r\n        const componentsPatternBackground = {\r\n            id: id,\r\n            targetSection: targetSection,\r\n            type: 'background',\r\n            color: backgroundColor,\r\n            backgroundImage: backgroundImage,\r\n        }\r\n        eventEmitter.emit('EventInstrumentPanel',{\r\n            componentStats: componentsPatternBackground,\r\n            targetSection: targetSection,\r\n            type: 'background',\r\n            id: id,\r\n        });\r\n        event.stopPropagation();\r\n    }\r\n\r\n    const changeColor = eventItem => {\r\n        setBgColor(eventItem.colorRGB);\r\n    }\r\n\r\n    const setBackgroundImage = event => {\r\n        const {urlFull} = event;\r\n        setImage(urlFull);\r\n    };\r\n\r\n    const didUpdate = () => {\r\n        saveWidth();\r\n        eventEmitter.on(`EventChangeColorBackground${id}`, changeColor);\r\n        eventEmitter.on(`EventSetBackgroundImage${id}`, setBackgroundImage);\r\n        return () => {\r\n            eventEmitter.off(`EventChangeColorBackground${id}`, changeColor);\r\n            eventEmitter.off(`EventSetBackgroundImage${id}`, setBackgroundImage);\r\n        }\r\n    }\r\n\r\n    useEffect(didUpdate);\r\n    return (\r\n        <Background\r\n            ref  = {boxComponent}\r\n            onClick={openBgInstruments}\r\n            data-name = {targetSection}\r\n            backgroundColor = {backgroundColor ? backgroundColor : props.background}\r\n            backgroundImage = {backgroundImage ? backgroundImage : props.backgroundImage}\r\n        >\r\n            {props.children}\r\n        </Background>\r\n    )\r\n}\r\n\r\nexport default BackgroundComponent;","import React,{useState} from 'react';\r\n\r\nimport Media from '../buildComponents/components/Media';\r\nimport Image from '../buildComponents/components/Image';\r\nimport TextComponent from '../buildComponents/components/Text';\r\nimport BackgroundComponent from '../buildComponents/components/Background';\r\n\r\nconst BuilderComponents = props => {\r\n\r\n    let [targetSection] = useState(props.targetSection);\r\n    let [id] = useState(props.id);\r\n    let [size] = useState(props.size || props.fontSize);\r\n    let [color] = useState(props.color ? props.color : 'red');\r\n    let [content] = useState(props.content ? props.content : null);\r\n    let [type] = useState(props.type);\r\n\r\n    if (type === 'text')\r\n        return <TextComponent\r\n                    key = {`text${id}`}\r\n                    targetSection = {targetSection}\r\n                    sizeParentBox = {{...props.sizeParentBox}}\r\n                    id = {id}\r\n                    size = {size}\r\n                    color = {color}\r\n                    coords = {{...props.coords}}\r\n                >\r\n                    {content}\r\n                </TextComponent>\r\n\r\n    if (type === 'background')\r\n        return <BackgroundComponent\r\n                    targetSection = {targetSection}\r\n                    color = {color}\r\n                    size = {size}\r\n                    id = {id}\r\n                    key = {`bg${id}`}\r\n                />;\r\n\r\n    if (type === 'image')\r\n        return <Image\r\n                    targetSection = {targetSection}\r\n                    size = {size}\r\n                    path = {props.path ? props.path : props.image}\r\n                    coords = {{...props.coords}}\r\n                    sizeParentBox = {{...props.sizeParentBox}}\r\n                    id = {id}\r\n                    key = {`image${id}`}\r\n                />\r\n    if (type === 'media')\r\n        return <Media\r\n                    key = {`media${id}`}\r\n                    id = {id}\r\n                    targetSection = {targetSection}\r\n                    sizeParentBox = {{...props.sizeParentBox}}\r\n                    path = {props.path ? props.path : props.content}\r\n                    coords = {{...props.coords}}\r\n                />\r\n};\r\n\r\nexport default BuilderComponents;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport BuilderComponents from '../componentsBuilder/BuilderComponents';\r\n\r\nimport eventEmitter from '../../EventEmitter';\r\nimport './buildMenu.scss';\r\n\r\nclass BuildMenu extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        mode: PropTypes.string.isRequired, /** @String work mode component */\r\n        editComponentName: PropTypes.string,\r\n        countSection: PropTypes.number, /** @Number for new section id */\r\n        countComponents: PropTypes.number, /** @Number last project */\r\n        sizeParentBox: PropTypes.object /** @Object with width and height parent(bg) */\r\n    }\r\n\r\n\r\n    state = {\r\n        mode: this.props.mode,\r\n        componentsPatternBackground: {\r\n            id: null,\r\n            targetSection: null,\r\n            type: 'background',\r\n            color: null,\r\n            backgroundImage: null,\r\n        },\r\n        componentsPatternText: {\r\n            id: null,\r\n            targetSection: null,\r\n            type: 'text',\r\n            color: null,\r\n            fontSize: null,\r\n            content: null,\r\n            coords: {x: null, y: null}, // x, y\r\n        },\r\n        componentsPatternImage: {\r\n            id: null,\r\n            targetSection: null,\r\n            type: 'image',\r\n            borderRadius: null,\r\n            opacity: null,\r\n            zIndex: null,\r\n            image: '/img/photoPattern.svg',\r\n            coords: {x: null, y: null}, // x, y\r\n        },\r\n        componentsPatternMedia: {\r\n            id: null,\r\n            targetSection: null,\r\n            type: 'media',\r\n            size: null,\r\n            content: null,\r\n            coords: {x: null, y: null}, // x, y\r\n        },\r\n        sizeParentBox: {...this.props.sizeParentBox},\r\n        title: 'Title'\r\n    }\r\n\r\n    addText = event => {\r\n        let id = this.props.countComponents;\r\n        eventEmitter.emit('EventBuildComponents',{\r\n            componentsPatternText: {\r\n                ...this.state.componentsPatternText,\r\n                id: id,\r\n                targetSection: this.props.editComponentName,\r\n            },\r\n            type: this.state.componentsPatternText.type,\r\n            component: <BuilderComponents\r\n                            key = {`text${id}`}\r\n                            sizeParentBox = {this.props.sizeParentBox}\r\n                            targetSection = {this.props.editComponentName}\r\n                            content = 'Title'\r\n                            id = {id}\r\n                            type = 'text' \r\n                        />\r\n        });\r\n        event.stopPropagation();\r\n    }\r\n\r\n    addBackground = event => {\r\n        let id = this.props.countComponents;\r\n        eventEmitter.emit('EventBuildComponents',{\r\n            componentsPatternBackground: {\r\n                ...this.state.componentsPatternBackground,\r\n                targetSection: this.state.editComponentName,\r\n            },\r\n            type: this.state.componentsPatternBackground.type,\r\n            component: <BuilderComponents\r\n                            targetSection = {this.props.editComponentName}\r\n                            key = {`bg${id}`}\r\n                            id = {id}\r\n                            type = 'background'\r\n                        />\r\n        });\r\n\r\n        event.stopPropagation();\r\n    }\r\n\r\n    addImage = event => {\r\n        let id = this.props.countComponents;\r\n        eventEmitter.emit('EventBuildComponents',{\r\n            componentsPatternImage: {\r\n                ...this.state.componentsPatternImage,\r\n                id: id,\r\n                targetSection: this.props.editComponentName,\r\n            },\r\n            type: this.state.componentsPatternImage.type,\r\n            component: <BuilderComponents\r\n                            key = {`text${id}`}\r\n                            targetSection = {this.props.editComponentName}\r\n                            sizeParentBox = {this.props.sizeParentBox}\r\n                            id = {id}\r\n                            coords = {{...this.state.componentsPatternImage.coords}}\r\n                            path = {'/img/photoPattern.svg'}\r\n                            type = 'image' />\r\n        });\r\n        event.stopPropagation();\r\n    }\r\n\r\n    addMedia = event => {\r\n        let id = Math.random().toFixed(3);\r\n        console.log(event);\r\n        eventEmitter.emit('EventBuildComponents', {\r\n            componentsPatternMedia: {\r\n                ...this.state.componentsPatternMedia,\r\n                id: id,\r\n                targetSection: this.props.editComponentName,\r\n            },\r\n            type: this.state.componentsPatternMedia.type,\r\n            component: <BuilderComponents\r\n                            key = {`media${id}`}\r\n                            targetSection = {this.props.editComponentName}\r\n                            sizeParentBox = {this.props.sizeParentBox}\r\n                            id = {id}\r\n                            coords = {{...this.state.componentsPatternMedia.coords}}\r\n                            path = {'/img/photoPattern.mp4'}\r\n                            type = 'media' \r\n                        />\r\n        });\r\n        event.stopPropagation();\r\n    }\r\n\r\n    addSection = event => {\r\n        let id = Math.random().toFixed(3);\r\n        eventEmitter.emit('EventNewSection', {\r\n            componentsPatternBackground: {\r\n                ...this.state.componentsPatternBackground,\r\n                targetSection:  `Section${id}`,\r\n                id: `Section${id}`,\r\n                type: 'background',\r\n            },\r\n            type:'section',\r\n            component: <BuilderComponents\r\n                            targetSection = {this.props.editComponentName}\r\n                            key = {`bg${id}`}\r\n                            id = {id}\r\n                            type = 'background'\r\n                        />\r\n        });\r\n        event.stopPropagation();\r\n    }\r\n\r\n    render(){\r\n        if (this.state.mode === 'build'){\r\n            return (\r\n                <div className = 'ComponentsMenu'>\r\n                    <button \r\n                        onClick = {this.addImage} \r\n                        className = 'ImageTool CompoentnsMenu_button' \r\n                    >\r\n                        <span>Image</span>\r\n                    </button>\r\n                    <button \r\n                        onClick = {this.addText} \r\n                        className = 'TextTool CompoentnsMenu_button' >\r\n                        <span>Text</span>\r\n                    </button>\r\n                    <button\r\n                        disabled = {this.props.editComponentName !== 'Header' ? false : true}\r\n                        className = 'ButtonTool CompoentnsMenu_button' >\r\n                        <span>Button</span>\r\n                    </button>\r\n                    <button onClick = {this.addMedia}\r\n                        className = 'VideoTool CompoentnsMenu_button'\r\n                    >\r\n                        <span>Video</span>\r\n                    </button>\r\n                </div>\r\n            )\r\n        } else if (this.state.mode === 'section') {\r\n            return (\r\n                <div className = 'sectionMode'>\r\n                    <button\r\n                        onClick = {this.addSection}\r\n                        className = 'newSectionTool CompoentnsMenu_button'\r\n                    >\r\n                        <span>New section</span>\r\n                    </button>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default BuildMenu;","import React,{Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Icon from '../Icon/icon';\r\nimport BuildMenu from '../componentsBuildMenu/BuildMenu';\r\n\r\n\r\nclass Controllers extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        countComponents: PropTypes.number.isRequired, /** @number last project id */\r\n        sizeParentBox: PropTypes.object, /** @Object with width and height parent(bg) */\r\n        menuActive: PropTypes.bool, /** @Bool value active menu or unactive */\r\n    }\r\n\r\n    state = {\r\n        viewComponentMenu: false,\r\n        editComponentName: this.props.editComponentName,\r\n        shiftX: 0,\r\n        shiftY: 0,\r\n        coordsX: '50%',\r\n        coordsY: '0',\r\n        shadowDisplay: 'block'\r\n    }\r\n\r\n    componentMenu = event => {\r\n        this.setState({viewComponentMenu: this.state.viewComponentMenu ? false : true});\r\n        event.stopPropagation();\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <Fragment>\r\n            {\r\n                <div\r\n                ref = {this.refControll}\r\n                className = 'ControllersEditComponent'\r\n                onClick = {this.componentMenu}\r\n                >\r\n                    <Icon\r\n                        onClick = {this.componentMenu}\r\n                        className = 'addButton'\r\n                        path = '/img/addButton.png'\r\n                    />\r\n                    { this.state.viewComponentMenu ?\r\n                        <BuildMenu\r\n                            key = {`buildMenu ${this.state.editComponentName}`}\r\n                            mode = 'build'\r\n                            editComponentName = {this.state.editComponentName}\r\n                            sizeParentBox = {this.props.sizeParentBox}\r\n                            countComponents = {this.props.countComponents}\r\n                        /> : null\r\n                    }\r\n                </div>\r\n            }\r\n            </Fragment>\r\n        )\r\n    }\r\n\r\n    componentDidUpdate = () => {\r\n        if (this.props.editComponentName !== this.state.editComponentName)\r\n            this.setState({\r\n                ...this.state,\r\n                editComponentName: this.props.editComponentName\r\n            })\r\n    }\r\n\r\n}\r\n\r\nexport default Controllers;","import React, {Fragment} from 'react';\r\nimport eventEmitter from '../../../EventEmitter';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nimport BackgroundComponent from '../components/Background';\r\nimport Loader from '../../loading/Loader';\r\n\r\nimport './MainBackground.scss';\r\n\r\nclass MainBackground extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        children: PropTypes.object.isRequired, /** @Object with name */\r\n        countComponents: PropTypes.number.isRequired, /** @Number last project */\r\n        menuActive: PropTypes.bool.isRequired, /** @Bool active menu or unactive */\r\n        id: PropTypes.string.isRequired, /** @id current project */\r\n    }\r\n\r\n    state = {\r\n        targetSection: this.props.id,\r\n        editRedy: false,\r\n        component: null,\r\n        children: null,\r\n    }\r\n\r\n    changeMode = event => {\r\n        if (!this.state.editStart || this.state.idProject !== this.props.editComponentName) {\r\n            this.setState({\r\n                ...this.state,\r\n                editStart: true\r\n            }, () =>\r\n            eventEmitter.emit('EventModeEdit', {\r\n                ...this.state,\r\n                editStart: true,\r\n                targetSection: this.state.targetSection,\r\n            }));\r\n        }\r\n    }\r\n\r\n    refBox = null;\r\n    refBackground = node => this.refBox = node;\r\n\r\n    render() {\r\n\r\n        let bg = this.props.currentProjectsData.components.find(item => item.targetSection === this.props.id) || null;\r\n        let childrens = this.props.mainBuilderData.componentJSX.filter(item => item.targetSection === this.props.id)\r\n        .map(item => item.component) || null;\r\n\r\n        if (bg)\r\n        return (\r\n            <Fragment>\r\n                <section data-class = 'editable' onClick = {this.changeMode}>\r\n                    <BackgroundComponent {...bg} >\r\n                        {childrens}\r\n                    </BackgroundComponent>\r\n                    {!this.state.editStart && <div className = 'warningEdit'><p>Click for start edit</p></div>}\r\n                </section>\r\n            </Fragment>\r\n        )\r\n        else return <Loader />;\r\n    }\r\n}\r\nexport default MainBackground;","import React from 'react';\r\n\r\nimport MainBackground from './MainBackground/MainBackground';\r\n\r\nconst Section = props => {\r\n\r\n    const {currentProjectsData} = props.userData;\r\n    const section = currentProjectsData.sectionTitleProject;\r\n\r\n            return section.map(item => {\r\n                return (\r\n                    <MainBackground\r\n                        key = {item}\r\n                        mainBuilderData = {{...props.mainBuilderData}}\r\n                        currentProjectsData = {{...currentProjectsData}}\r\n                        editComponentName = {props.editComponentName}\r\n                        countComponents = {props.mainBuilderData.componentJSX.length}\r\n                        menuActive = {props.menuActive}\r\n                        sizeParentBox = {props.sizeParentBox}\r\n                        id = {item}\r\n                    >\r\n                        {{targetSection: props.editComponentName}}\r\n                    </MainBackground>\r\n                );\r\n            });\r\n}\r\n\r\nexport default Section;","import React,{Fragment} from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport {Redirect} from 'react-router-dom';\r\nimport eventEmitter from '../../EventEmitter';\r\n\r\nimport {loadCurrentProjectAction, exitProjectAction} from '../../redux/actions';\r\nimport updateMiddleware from '../../redux/middleware/updateMiddleware';\r\nimport withFirebase from '../../components/firebaseHOC';\r\nimport {connect} from 'react-redux';\r\n\r\nimport AdditionalTools from '../../components/additionalTools/additionalTools';\r\nimport BuilderComponents from '../../components/componentsBuilder/BuilderComponents';\r\nimport Controllers from '../../components/controllers/controllers';\r\nimport Loader from '../../components/loading/Loader';\r\nimport Header from '../../components/header/Header';\r\nimport Section from '../../components/buildComponents/section';\r\nimport BuildMenu from '../../components/componentsBuildMenu/BuildMenu';\r\n\r\nimport './build.scss';\r\n\r\n\r\nclass Build extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        firebase: PropTypes.object.isRequired, /** @firebase class for use firebase functions */\r\n        active: PropTypes.bool, /** @active - status firebase auth */\r\n        dispatch: PropTypes.func.isRequired, /** @dispatch - redux */\r\n        history: PropTypes.object, /** @Router HTML5 history */\r\n        location: PropTypes.object, /** @Router */\r\n        match: PropTypes.object.isRequired, /** @Router */\r\n        userData: PropTypes.object.isRequired, /** @UserData data about projects,user and current edit prject */\r\n    }\r\n\r\n    state = {\r\n            idProject: parseInt(this.props.match.params.param),\r\n            editStart: false,\r\n            isLoadComponents: true,\r\n            projectEmpty: false,\r\n            showSectionAddMenu: false,\r\n            componentStats: {},\r\n            mainBuilderData: {\r\n                components: [],\r\n                componentJSX: []\r\n            },\r\n            instrumentPanel: {\r\n                colorPickerActive: false,\r\n                instrumentActive: false,\r\n            },\r\n            editComponentName:  null,\r\n            menuActive: false,\r\n            modalSearch: false,\r\n            modalSearchMode: null,\r\n            modalImageViewer: {action: false, image: null },\r\n        }\r\n\r\n    modalSearchOn = itemEvent => {\r\n        const modeHave = itemEvent.hasOwnProperty('mode');\r\n        this.setState({\r\n            ...this.state, \r\n            modalSearch: this.state.modalSearch ? false : true,\r\n            modalSearchMode: modeHave ? itemEvent.mode : null\r\n        });\r\n    }\r\n\r\n    imageViewerSwitch = itemEvent => {\r\n        this.setState({\r\n            ...this.state,\r\n            modalImageViewer: {\r\n                ...this.state.modalImageViewer, \r\n                action: itemEvent.action, \r\n                target: itemEvent.target\r\n            }\r\n        });\r\n    };\r\n\r\n    workModeEdit = itemEvent => {\r\n \r\n        if (itemEvent.editStart)\r\n        this.setState({\r\n            ...this.state,\r\n            editStart: itemEvent.editStart,\r\n            editComponentName: itemEvent.targetSection,\r\n            mainBuilderData: {\r\n                ...this.state.mainBuilderData,\r\n            },\r\n            menuActive: true,\r\n        });\r\n\r\n    }\r\n\r\n    openInstrument = itemEvent => {\r\n\r\n            const idEqual = this.state.componentStats.id === itemEvent.componentStats.id;\r\n            if (!idEqual)\r\n            this.setState({\r\n                ...this.state,\r\n                editComponentName: itemEvent.targetSection,\r\n                componentStats: {\r\n                    ...this.state.componentStats,\r\n                    ...itemEvent.componentStats\r\n                },\r\n                instrumentPanel: {\r\n                    ...this.state.instrumentPanel,\r\n                    instrumentActive: true,\r\n                }\r\n            });\r\n    }\r\n\r\n    closePanel = itemEvent => {\r\n        this.setState({\r\n            ...this.state,\r\n            instrumentPanel: {\r\n                ...this.state.instrumentPanel,\r\n                colorPickerActive: false,\r\n                instrumentActive: itemEvent.close\r\n            }\r\n        });\r\n    };\r\n\r\n    addComponentsFromBD = array => {\r\n\r\n        let {componentJSX} = this.state.mainBuilderData;\r\n        let componentsFromDB = [];\r\n        let components = [...this.state.mainBuilderData.components];\r\n        array.forEach(item => {\r\n            if (item.type !== 'background'){\r\n\r\n                let component =\r\n                    <BuilderComponents\r\n\r\n                        sizeParentBox = {{...this.mainComponent.data}}\r\n                        {...item}\r\n                        key = {`${item.type}${item.id}`}\r\n                    />\r\n\r\n                const patternJSX = {\r\n                    id: item.id,\r\n                    targetSection: item.targetSection,\r\n                    component: component\r\n                }\r\n                componentsFromDB.push(patternJSX);\r\n                components.push(item);\r\n            }\r\n            else components.push(item);\r\n        });\r\n            this.setState({\r\n                ...this.state,\r\n                isLoadComponents: false,\r\n                mainBuilderData: {\r\n                    ...this.state.mainBuilderData,\r\n                    components: [...this.state.mainBuilderData.components,\r\n                                ...components],\r\n                    componentJSX: [...componentJSX, ...componentsFromDB],\r\n                },\r\n            });\r\n    }\r\n\r\n    addComponent = itemEvent => {\r\n        let {componentJSX} = this.state.mainBuilderData;\r\n        let componentsPatternStatus = null;\r\n\r\n        if (itemEvent.type === 'text') \r\n            componentsPatternStatus = itemEvent.componentsPatternText;\r\n        else if (itemEvent.type === 'background')\r\n            componentsPatternStatus = itemEvent.componentsPatternBackground;\r\n        else if (itemEvent.type === 'image')\r\n            componentsPatternStatus = itemEvent.componentsPatternImage;\r\n            else if (itemEvent.type === 'media')\r\n            componentsPatternStatus = itemEvent.componentsPatternMedia;\r\n\r\n        const patternJSX = {\r\n            id: componentsPatternStatus.id,\r\n            targetSection: componentsPatternStatus.targetSection,\r\n            component: itemEvent.component\r\n        }\r\n            this.setState({\r\n                ...this.state,\r\n                mainBuilderData: {\r\n                    ...this.state.mainBuilderData,\r\n                    components: [...this.state.mainBuilderData.components,\r\n                                    componentsPatternStatus],\r\n                    componentJSX: [...componentJSX, patternJSX],\r\n                },\r\n            });\r\n    };\r\n\r\n    saveChangesComponent = itemEvent => {\r\n\r\n        const {userData} = this.props;\r\n        let findCurrentItem = false;\r\n        const _components = this.state.mainBuilderData.components.map(item => {\r\n            if (item.id === itemEvent.id) { findCurrentItem = true; return {...itemEvent}; }\r\n            return item;\r\n        });\r\n\r\n        if (!findCurrentItem) _components.push(itemEvent);\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            mainBuilderData: {\r\n                ...this.state.mainBuilderData,\r\n                isChange: false,\r\n                components: _components\r\n            }\r\n        }, () => {\r\n            let {currentProjectsData} =this.props.userData;\r\n        return    (\r\n        this.props.dispatch(updateMiddleware({\r\n            uid: userData.idUser,\r\n            projects: [...userData.projects],\r\n            components: [...this.state.mainBuilderData.components],\r\n            sectionTitleProject: [...currentProjectsData.sectionTitleProject],\r\n            idProject: this.state.idProject}))\r\n        )});\r\n    };\r\n\r\n\r\n    showAddSection = event => {\r\n        if (event.pageY > 780 && !this.state.showSectionAddMenu){\r\n            this.setState({\r\n                ...this.state,\r\n                showSectionAddMenu: true,\r\n            });\r\n        } else if (event.pageY < 780 && this.state.showSectionAddMenu){\r\n            this.setState({\r\n                ...this.state,\r\n                showSectionAddMenu: false,\r\n            });\r\n        }\r\n        event.stopPropagation();\r\n    }\r\n    mainComponent = null;\r\n    mainRefComponent = node => node ? this.mainComponent = {data: node.getBoundingClientRect(), node: node} : node;\r\n\r\n    addNewSection = eventItem => {\r\n\r\n        const {userData} = this.props;\r\n\r\n    this.setState({\r\n        ...this.state,\r\n        mainBuilderData:{\r\n            ...this.state.mainBuilderData,\r\n            components:[\r\n                ...this.state.mainBuilderData.components,\r\n                eventItem.componentsPatternBackground\r\n            ],\r\n            componentJSX:[\r\n                ...this.state.mainBuilderData.componentJSX,\r\n                eventItem.component\r\n            ]\r\n        }\r\n    },\r\n    () => (\r\n        this.props.dispatch(updateMiddleware({\r\n                uid: userData.idUser,\r\n                projects: [...userData.projects],\r\n                components: [...this.state.mainBuilderData.components],\r\n                sectionTitleProject: [\r\n                    ...this.props.userData.currentProjectsData.sectionTitleProject,\r\n                    eventItem.componentsPatternBackground.id\r\n                ],\r\n                idProject: this.state.idProject\r\n        }))\r\n    ));\r\n}\r\n\r\n    updateCoordsComponents = event => {\r\n        eventEmitter.emit(\"ScrollRecalcPosition\", this.mainComponent.node.scrollTop);\r\n    }\r\n\r\n    render(){\r\n\r\n        if (this.state.projectEmpty) return <Redirect to = '/Cabinet' />\r\n\r\n        const {instrumentActive} = this.state.instrumentPanel;\r\n        const {userData} = this.props;\r\n        const {currentProjectsData} = userData;\r\n        const section = currentProjectsData.sectionTitleProject;\r\n\r\n\r\n        if (userData.active && currentProjectsData.loadProject){\r\n      \r\n            return (\r\n                <Fragment>\r\n                    <Header key = 'Header' title = \"Constructor\"  />\r\n                    <div\r\n                        ref = {this.mainRefComponent} \r\n                        onScroll = {this.updateCoordsComponents}\r\n                        onMouseMove = {this.showAddSection} \r\n                        className = 'Build' \r\n                        key = 'Build'>\r\n                        { this.state.editStart &&\r\n                        <Controllers\r\n                            key = 'controllers'\r\n                            editComponentName = {this.state.editComponentName}\r\n                            countComponents = {this.state.mainBuilderData.components.length}\r\n                            menuActive = {this.state.menuActive}\r\n                            sizeParentBox = {this.mainComponent.data}\r\n                        />\r\n                        }\r\n                        {this.state.showSectionAddMenu &&\r\n                            <BuildMenu\r\n                                key = 'buildMenu'\r\n                                countSection = {this.state.mainBuilderData.componentJSX.length * 5}\r\n                                mode = \"section\"\r\n                                className = 'menu'\r\n                            />\r\n                        }\r\n                        {instrumentActive && <AdditionalTools key = 'tools' {...this.state} />}\r\n                        {section.length && <Section key = 'section' {...this.state} userData = {userData} />}\r\n                    </div>\r\n                </Fragment>\r\n            )\r\n        } else if (!this.props.firebase.getCurrentUser()) return <Redirect to = '/' />\r\n        else return <Loader  key = 'Loader' path = '/img/loading.gif' type = 'build' />\r\n    }\r\n\r\n    componentDidUpdate = () => {\r\n        let {userData} = this.props;\r\n        let {currentProjectsData} = userData;\r\n        const isLoadComponents = this.state.isLoadComponents;\r\n\r\n        if (userData.active && !currentProjectsData.loadProject) {\r\n            const current =  userData.projects.find(item => item.id === this.state.idProject)\r\n            current ?\r\n            this.props.dispatch(loadCurrentProjectAction({\r\n                id: current.id,\r\n                typeProject: current.type,\r\n                sectionTitleProject: [...current.sectionTitleProject],\r\n                components: [...current.components]\r\n            })) : this.setState({...this.state, projectEmpty: true});\r\n        }\r\n        if (currentProjectsData.loadProject && isLoadComponents)\r\n            this.addComponentsFromBD([...currentProjectsData.components]);\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        let {userData} = this.props;\r\n        let {currentProjectsData} = userData;\r\n\r\n        if (userData.active && !currentProjectsData.loadProject) {\r\n\r\n            const current =  userData.projects.find(item => item.id === this.state.idProject)\r\n            this.props.dispatch(loadCurrentProjectAction({\r\n                id: current.id,\r\n                sectionTitleProject: [...current.sectionTitleProject],\r\n                typeProject: current.type,\r\n                components: [...current.components]\r\n            }));\r\n        };\r\n        console.log('build');\r\n        eventEmitter.on('EventBuildComponents', this.addComponent);\r\n        eventEmitter.on('EventNewSection', this.addNewSection);\r\n        eventEmitter.on('EventSaveChangesComponent', this.saveChangesComponent);\r\n        eventEmitter.on('EventClosePanel', this.closePanel);\r\n        eventEmitter.on('EventModalSearchOn', this.modalSearchOn);\r\n        eventEmitter.on('EventInstrumentPanel', this.openInstrument);\r\n        eventEmitter.on('EventImageView', this.imageViewerSwitch);\r\n        eventEmitter.on('EventModeEdit', this.workModeEdit);\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n    \r\n        let {userData} = this.props;\r\n        if (userData.active)  this.props.dispatch(exitProjectAction(true));\r\n\r\n        eventEmitter.off('EventBuildComponents', this.addComponent);\r\n        eventEmitter.off('EventNewSection', this.addNewSection);\r\n        eventEmitter.off('EventSaveChangesComponent', this.saveChangesComponent);\r\n        eventEmitter.off('EventModalSearchOn', this.modalSearchOn);\r\n        eventEmitter.off('EventClosePanel', this.closePanel);\r\n        eventEmitter.off('EventInstrumentPanel', this.openInstrument);\r\n        eventEmitter.off('EventImageView', this.imageViewerSwitch);\r\n        eventEmitter.off('EventModeEdit', this.workModeEdit);\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        userData: {\r\n            active: state.cabinet.active,\r\n            idUser: state.cabinet.idUser,\r\n            projects: [...state.cabinet.projects],\r\n           currentProjectsData: {...state.builder}\r\n        },\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(withFirebase(Build));\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport {Route, Switch} from 'react-router-dom';\r\n\r\nimport {middlewareLoadUserData} from './redux/middleware/loadUserMiddleware';\r\nimport {connect} from 'react-redux';\r\nimport withFirebase from './components/firebaseHOC';\r\nimport Loader from './components/loading/Loader';\r\n\r\nimport Index from './Pages/Index/Index';\r\nimport Cabinet from './Pages/Cabinet/Cabinet';\r\nimport About from './Pages/About/About';\r\nimport Build from './Pages/Build/Build';\r\nimport ErrorPage from './components/ErrorCatch/ErrorPage';\r\n\r\n// require('es6-promise').polyfill();\r\n\r\nclass App extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        config: PropTypes.object.isRequired, /** @Config app */\r\n        firebase: PropTypes.object.isRequired, /** @firebase class for use firebase functions */\r\n        dispatch: PropTypes.func.isRequired, /** @dispatch - redux */\r\n    }\r\n\r\n    state = {\r\n        firebase: this.props.firebase,\r\n        firebaseLoadState: false,\r\n    }\r\n\r\n    componentDidMount(){\r\n\r\n        this.props.firebase.auth.onAuthStateChanged((user) => {\r\n\r\n            if (!this.state.firebaseLoadState){\r\n                if (user) this.props.dispatch(middlewareLoadUserData(user.uid));\r\n                this.setState({...this.state, firebaseLoadState: true});\r\n            }\r\n        });\r\n    }\r\n\r\n    render(){\r\n        if (this.state.firebaseLoadState){\r\n        return (\r\n            <div>\r\n                <Switch>\r\n                    <Route\r\n                        path = {'/'} exact\r\n                        render = {(props) => <Index {...props} />}\r\n                    />\r\n                    <Route path = '/Cabinet/' exact component = {Cabinet}/>\r\n                    <Route\r\n                        path = {'/Cabinet/About'}\r\n                        render = {(props) => <About {...props} config = {this.props.config} />}\r\n                    />\r\n                    <Route path = {'/Cabinet/Build/:param'} component = {Build}/>\r\n                    <Route path = {'*'} component = {Index} />\r\n                    <Route path = {'/crashPage'} component = {ErrorPage} />\r\n                </Switch>\r\n                </div>\r\n\r\n        )\r\n        } else return <Loader path = { '/img/loading.gif'} type = 'application' />\r\n    }\r\n}\r\n\r\nexport default connect()(withFirebase(App));","\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\n\nimport firebase from './Firebase/Firebase';\nimport ErrorBoundary from './components/ErrorCatch/ErrorBoundary';\nimport {HashRouter } from 'react-router-dom';\nimport {Provider} from 'react-redux';\nimport store from './redux/store';\nimport App from './App.jsx';\nimport 'normalize.css';\n\nimport firebaseContext from './Firebase/firebaseContext';\n\nfirebase.saveSession('SESSION');\nconst config = require('./config.json');\n\nReactDOM.render(\n        <HashRouter>\n            <ErrorBoundary>\n                <firebaseContext.Provider value = {firebase}>\n                    <Provider store = {store}>\n                        <App config = {config} />\n                    </Provider>\n                </firebaseContext.Provider>\n            </ErrorBoundary>\n        </HashRouter>,\n        document.getElementById('root')\n);\n\nserviceWorker.register();\n\n"],"sourceRoot":""}