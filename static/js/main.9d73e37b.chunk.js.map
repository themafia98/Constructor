{"version":3,"sources":["serviceWorker.js","Firebase/firebaseConfig.js","Firebase/Firebase.js","EventEmitter.js","components/ErrorCatch/ErrorPage.jsx","components/ErrorCatch/ErrorBoundary.jsx","redux/actions.js","redux/reducerBuilder.js","redux/reducerCabinet.js","redux/reducers.js","redux/store.js","redux/middleware/loadUserMiddleware.js","Firebase/firebaseContext.js","components/withFirebase.jsx","components/loading/Loader.jsx","components/AnimationText/AnimationTitle.jsx","components/Registration/Registration.jsx","components/Icon/icon.jsx","Pages/Index/Index.jsx","redux/middleware/middlewareDelete.js","components/confirmBox/Confirm.jsx","components/header/Header.jsx","components/imageViewer/imageItem.jsx","components/modalWindow/createProject/createProject.jsx","components/modalWindow/Search/searchModal.jsx","components/modalWindow/ModalWindow.jsx","redux/middleware/createProjectMiddleware.js","components/List/Item.jsx","components/List/List.jsx","components/ProjectsSection/ProjectsSection.jsx","Pages/Cabinet/Cabinet.jsx","components/buildComponents/components/Background.jsx","components/buildComponents/MainBackground/MainBackground.jsx","components/buildComponents/section.jsx","components/buildComponents/components/Input.jsx","components/buildComponents/components/Media.jsx","components/buildComponents/components/Image.jsx","components/buildComponents/components/Text.jsx","components/builderHOC.jsx","Pages/Production/Production.jsx","Pages/About/About.jsx","redux/middleware/updateMiddleware.js","components/withScroll.jsx","components/imageViewer/Viewer.jsx","components/instrumentsPanel/InputTools/InputInstruments.jsx","components/instrumentsPanel/MediaTools/MediaInstruments.jsx","components/instrumentsPanel/ImageTools/ImageInstruments.jsx","components/instrumentsPanel/BackgroundTools/BackgroundInstruments.jsx","components/instrumentsPanel/TextTools/TextInstruments.jsx","components/instrumentsPanel/InstrumentsPanel.jsx","components/additionalTools/additionalTools.jsx","components/componentsBuildMenu/BuildMenu.jsx","components/controllers/controllers.jsx","Pages/Build/Build.jsx","components/SwitchContainer/Guides/OpenPanel.jsx","components/SwitchContainer/Guides/SearchGuide.jsx","components/SwitchContainer/Guides/AddComponents.jsx","components/SwitchContainer/Guides/AddNewSection.jsx","components/SwitchContainer/Guides/CreateNewProject.jsx","components/SwitchContainer/SwitchContainer.jsx","Pages/Guide/Guide.jsx","App.jsx","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","firebaseConfig","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firebaseInterface","require","Firebase","Object","classCallCheck","this","firebase","initializeApp","auth","db","firestore","lowConnection","enablePersistence","res","warn","er","rules","setPersistence","Auth","Persistence","email","password","signInWithEmailAndPassword","createUserWithEmailAndPassword","signOut","currentUser","saveSession","session","stream","EventEmitter","controllerStream","setMaxListeners","ErrorPage","redirect","update","event","_this","setState","eventEmitter","emit","react_default","a","createElement","react_router","to","class","className","onClick","React","Component","ErrorBoundary","hasError","updateApplication","componentDidMount","on","componentWillUnmount","off","info","ErrorCatch_ErrorPage","props","children","PureComponent","exitProjectAction","type","exit","loadCurrentProjectAction","id","typeProject","sectionsProject","components","loadUpdateCurrentProject","idProject","toConsumableArray","loadUserAction","active","idUser","uid","projects","errorAction","initialState","loadProject","combineReducers","builder","arguments","length","undefined","action","_objectSpread","cabinet","reducerCabinet_objectSpread","map","item","middleware","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","thunk","withExtraArgument","store","createStore","middlewareLogin","_ref2","asyncToGenerator","regenerator_default","mark","_callee","dispatch","getState","_ref","isLogin","wrap","_context","prev","next","login","response","collection","doc","user","get","docUser","data","message","abrupt","stop","_x","_x2","_x3","apply","middlewareLogOutUser","_ref6","_callee3","_ref5","_context3","_x7","_x8","_x9","firebaseContext","createContext","withFirebase","Firebase_firebaseContext","Consumer","assign","loading_Loader","_useState","useState","path","slicedToArray","_useState3","mode","concat","src","alt","AnimationTitle","styled","h3","_templateObject","dir","AnimationText","tilteContent","content","split","currentTitle","positionTitle","directionAnimation","msAnimation","msTimeout","msPauseEnd","_isMounted","timerAnimation","animationTitle","timer","self","assertThisInitialized","setTimeout","tick","counter","word","AnimationTitle_objectSpread","_title","slice","e","clearTimeout","data-titlebuild","emailRef","passwordRef","setRefEmail","node","setRefPassword","createUser","value","Error","set","indexStream","autoComplete","placeholder","ref","Icon","_useState5","draggable","title","Index","Events","tryAuth","registrationActive","regStatus","wrongEnter","emailImput","passwordImput","statusRegistration","additionalUserInfo","isNewUser","Index_objectSpread","showBox","stopPropagation","authTo","componentDidUpdate","history","push","AnimationText_AnimationTitle","Icon_icon","TransitionGroup","component","CSSTransition","timeout","unmountOnExit","classNames","components_Registration_Registration","connect","middlewareDeleteProjectComponent","_ref4","_callee2","_ref3","_context2","findProject","find","project","filter","idComponent","section","dataUpdate","_x4","_x5","_x6","middlewareDelete","itemdb","Confirm","cbSaveChanges","cbCancelSave","iconPath","CabinetIcon","Header","isChange","redirectConfirm","redirectAbout","redirectA","redirectCabinet","redirectC","redirectGuide","redirectG","confirm","false","confirmSaveDetectChanges","Header_objectSpread","logOut","pathname","sent","add","cabinetStream","prevProject","nextProject","counterProjects","componentDidlMount","_this2","Fragment","components_confirmBox_Confirm","index_es","icon","faChevronLeft","faChevronRight","faBook","withRouter","ImageItem","selected","urls","regular","urlRegular","full","urlFull","_useState7","isFull","_useState9","urlContent","url","iframe","CreateProject","disabled","validateName","name","validateType","nameLength","isNumber","warningLengthMin","warningLengthMax","warningNumber","onChange","cbValidateName","warningType","cbSelectOption","cbAddNewProject","cbCancel","loading","SearchModal","modalSearchMode","items","images","search","refSearch","cbSearch","refSearchFunc","prevProps","prevState","contentPrev","haveUpdate","isSelected","selectedItem","_items","cbMakeImageResultBox","searchModal_objectSpread","dissabled","menuActive","cbShowImage","cbSetSelectedImage","ModalWindow","workMode","buttonSearchDisabled","showUrl","imageBoxView","newProject","imageMenuActive","warning","lengthMax","lengthMin","inputSearch","inputSelect","searchData","target","ModalWindow_objectSpread","api","isFetch","ok","json","results","searchYouTubeAPI","RAITE","KEY","status","arrayItems","forEach","snippet","thumbnails","high","videoId","showMenuImage","showImage","_this$state$images","eventStreamBuild","setSelectedImage","makeImageResultBox","i","imageItem","key","addNewProject","selectOption","inputs","defineProperty","test","cancel","refSelect","createProject","searchModal","loader","react","middlewareCreateProject","list","lastProject","lastIndex","header","backgroundImage","backgroundColor","min","Math","floor","random","targetSection","productionPath","_useState6","canBuild","setCanBuild","_useState8","canProd","setCanProd","_useState11","_useState13","data-id","List","List_objectSpread","makeList","List_Item","ProjectsSection","components_List_List","Cabinet","modalActive","deletItem","Cabinet_objectSpread","getCurrentUser","changeWorkMode","header_Header","in","appear","modalWindow_ModalWindow","components_ProjectsSection_ProjectsSection","Background","div","Background_templateObject","width","height","BackgroundComponent","background","color","boxComponent","boxComponentRef","saveDataParent","boxInform","getBoundingClientRect","countSection","sectionNumber","size","openBgInstruments","componentsPatternBackground","componentStats","changeColor","eventItem","Background_objectSpread","colorRGB","setBackgroundImage","onDoubleClick","data-name","MainBackground","editRedy","changeMode","editStart","editComponentName","MainBackground_objectSpread","refSection","refSectionFunc","currentProjectsData","componentJSX","needUpdate","countComponents","keyMain","data-class","components_Background","Section","userData","buildComponents_MainBackground_MainBackground","sizeParentBox","componentsProdJSX","InputComponent","input","attrs","style","zIndex","indexZ","left","coordX","top","coordY","Input_templateObject","w","h","fontSize","borderRadius","ProductionStyle","_templateObject2","Input","istrumentsActive","getSizeBool","typeInput","shiftCoords","posInput","coords","x","y","startDragNdrop","openInputInstruments","componentsPatternImage","Input_objectSpread","sizeTextValue","saveCoords","nativeEvent","which","element","refInput","cords","right","bottom","clientX","clientY","changeSize","eventSize","changeSizeText","setBorderRadius","radius","borderDown","changeContent","checkPivotPosition","borderRight","move","moveInput","num","xItem","yItem","convertToPercentX","convertToPercentY","toFixed","stopDragNdrop","saveSize","setWidth","setType","setHeight","refInputComponent","onMouseDown","onMouseMove","onMouseLeave","onMouseUp","onDragStart","data-imagecomponentwrapper","WrapperMedia","display","justifyContent","alignItems","padding","Media_templateObject","Media","Media_templateObject2","_templateObject3","MediaComponent","posMedia","drawContent","openMediaInstruments","componentsPatternMedia","Media_objectSpread","refMedia","moveMedia","setContent","refMediaComponent","allowfullscreen","Media_ProductionStyle","WrapperImg","transform","rotate","scale","transition","Image_templateObject","ImageStyle","img","Image_templateObject2","opacity","Image_templateObject3","Image","transformValue","scaleValue","image","posImage","openImageInstruments","Image_objectSpread","refImage","rotateEvent","angle","scaleEvent","moveText","factorCoord","diffAngle","parseInt","xFacotr","yFactor","powHeight","pow","powWidth","pythagoras","sqrt","_angle","atan","_biasFactor","biasFactor","PI","sinX","sin","sinY","setCurrentImage","setOpacity","stopDrag","preventDefault","refImageComponent","data-imagecomponent","Image_ProductionStyle","crossOrigin","WrapperText","Text_templateObject","textColor","TextStyle","p","Text_templateObject2","font","Text_templateObject3","TextComponent","resizeStream","isHaveSize","parent","colorText","sizeText","position","contentText","openTitleInstruments","componentsPatternText","Text_objectSpread","changeColorText","changeContentText","eventContent","refText","resizeStart","classList","setFont","sectionNum","refTextComponent","data-textcomponent","Text_ProductionStyle","builderHOC","Production","params","param","projectEmpty","isLoadComponents","makeProduction","array","_components","itemHash","Production_objectSpread","patternJSX","prodRef","mainProductionRef","current","buildComponents_section","About","about","developer","year","updateMiddleware","newProjects","JSON","parse","stringify","withScroll","_React$PureComponent","ScrollMove","_getPrototypeOf2","_len","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","scrollConfig","duration","delay","smooth","offset","positionCount","setStates","withScroll_objectSpread","blockMove","moveLocation","count","moveDown","deltaY","moveUp","close","scroller","scrollTo","scroll","scrollToTop","inherits","createClass","onWheel","onTouchStart","Viewer","frameBorder","allow","allowFullScreen","InputInstruments","colorPickerActive","instrumentPanel","_content","cbSetColor","lib","onChangeComplete","cbHandleChangeComplete","cbSetWidth","max","cbSetHeight","cbSetSize","cbSetBorderRadius","cbSetType","cbSetContent","maxLength","cbDelete","MediaInstruments","ImageInstruments","fileRef","createRef","cbRotate","cbScale","step","cbSetOpacity","cbLoadFile","accept","BackgroundInstruments","TextInstruments","cbSetFont","InstrumentsPanel","InstrumentsPanel_objectSpread","closePanel","setSize","fontName","setIframeContent","contentValue","updatePosition","setColor","updateBimageStats","handleChangeComplete","rgb","r","g","b","redirectSaveChanges","ms","saveChanges","deleteComponent","loadFile","files","reader","FileReader","readAsDataURL","onload","result","onerror","makePanelInstruments","TextTools_TextInstruments","BackgroundTools_BackgroundInstruments","ImageTools_ImageInstruments","MediaTools_MediaInstruments","InputTools_InputInstruments","oldProps","oldState","instrumentActive","AdditionalTools","modal","modalSearch","modalViewer","modalSearchOn","itemEvent","additionalTools_objectSpread","ViewerSwitch","openInstrument","imageViewer_Viewer","instrumentsPanel_InstrumentsPanel","BuildMenu","BuildMenu_objectSpread","addText","componentsPattern","Text","addBackground","addImage","components_Image","addMedia","components_Media","addInput","componentsPatternInput","components_Input","inputType","addSection","Controllers","viewComponentMenu","shiftX","shiftY","coordsX","coordsY","shadowDisplay","componentMenu","controllers_objectSpread","refControll","componentsBuildMenu_BuildMenu","Build","eventEmitterBuild","EventBuild","workModeEdit","Build_objectSpread","_componentJSX","addComponentsFromBD","componentsFromDB","addComponent","saveChangesComponent","findCurrentItem","mainComponent","mainRefComponent","addNewSection","dist_default","ie","only","except","showAddSection","controllers_controllers","additionalTools","OpenPanel","SearchGuide","AddComponents","AddNewSection","CreateNewProject","SwitchContainer","refOP","SwitchContainer_objectSpread","refSE","refADD","refSN","refPR","refOpenPanel","refAdd","refProject","Guides_OpenPanel","Guides_SearchGuide","Guides_AddComponents","Guides_AddNewSection","Guides_CreateNewProject","Guide","components_SwitchContainer_SwitchContainer","App","firebaseLoadState","onAuthStateChanged","isError","App_objectSpread","_this3","exact","render","Pages_Index_Index","Pages_Cabinet_Cabinet","Pages_About_About","Pages_Guide_Guide","Pages_Build_Build","ReactDOM","react_router_dom","ErrorCatch_ErrorBoundary","Provider","es","src_App","document","getElementById","URL","href","origin","addEventListener","fetch","contentType","headers","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.9d73e37b.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","// setings in root folder .env\nconst firebaseConfig = {\n    apiKey: process.env.REACT_APP_API_KEY,\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n    databaseURL: process.env.REACT_APP_DATABASE_URL,\n    projectId: process.env.REACT_APP_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n    messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n    appId: process.env.REACT_APP_APPID\n};\n\nexport default firebaseConfig;","import firebase from 'firebase/app';\nimport firebaseConfig from './firebaseConfig';\nimport config from '../config.json';\nconst auth = require('firebase/auth');\nconst firestore = require('firebase/firestore');\n\nclass Firebase {\n\n    constructor(firebaseConfig){\n        /** Init firebase */\n\n        firebase.initializeApp(firebaseConfig);\n        this.auth = firebase.auth();\n        this.db = firebase.firestore();\n\n        if (config.firebase.lowConnection === 'true'\n        && (process.env.NODE_ENV === 'development' || process.env.NODE_ENV === 'production'))\n        this.db.enablePersistence() /** if user use low internet connection */\n            .then(res => console.warn(res))\n            .catch(er => console.error(er));\n    }\n\n    saveSession(rules){\n        /** Set firebase type session */\n        return this.auth.setPersistence(firebase.auth.Auth.Persistence[rules]);\n    }\n\n    login(email, password){\n        /** login firebase */\n        try {\n            return this.auth.signInWithEmailAndPassword(email, password);\n        } catch (error) {\n            console.error(error);\n            return null;\n        }\n    }\n\n    registration(email, password){\n        /** create new user */\n        return this.auth.createUserWithEmailAndPassword(email, password)\n    }\n\n    signOut(){\n        /** destroy session */\n        return this.auth.signOut()\n    }\n\n    getCurrentUser() {\n        /** get current user */\n            return this.auth.currentUser;\n    }\n}\nlet firebaseInterface = new Firebase(firebaseConfig);\n\nif (process.env.NODE_ENV === 'development' || process.env.NODE_ENV === 'production')\nfirebaseInterface.saveSession(config.firebase.session);\n\nexport default firebaseInterface;\nexport { auth, firestore };\n\n","import {EventEmitter} from 'events';\n\nconst stream = new EventEmitter(); /** @Events head event stream */\nconst controllerStream = new EventEmitter(); /** @Events for controllers */\ncontrollerStream.setMaxListeners(20);\nexport {controllerStream};\nexport default stream;\n","import React from 'react';\nimport {Redirect} from 'react-router-dom';\nimport eventEmitter from '../../EventEmitter';\n\nimport './errorPage.scss';\n\n\nclass ErrorPage extends React.Component {\n\n    state = {\n        redirect: false,\n    }\n\n    update = event => {\n       this.setState({redirect: true},\n        () => eventEmitter.emit('EventErrorCatchUpdate'));\n    }\n\n    render(){\n        if (this.state.redirect) return <Redirect to = '/' />\n        return (\n        <div class = 'container'>\n            <div class = 'flex-column ErrorPage'>\n                <h1>Application crash</h1>\n                <button className = 'ErrorPage__button_updateApp' onClick = {this.update}>Update</button>\n            </div>\n        </div>\n        )\n    }\n}\n\nexport default ErrorPage;","\nimport React from 'react';\nimport eventEmitter from '../../EventEmitter';\nimport ErrorPage from './ErrorPage';\n\nclass ErrorBoundary extends React.PureComponent {\n\n      state = { \n        hasError: false,\n      };\n\n    static getDerivedStateFromError(error) {\n        console.log(error);\n      // Обновить состояние с тем, чтобы следующий рендер показал запасной UI.\n      return { hasError: true};\n    }\n\n    updateApplication = event => {\n      this.setState({hasError: false});\n    };\n  \n    componentDidCatch(error, info) {\n      // Можно также сохранить информацию об ошибке в соответствующую службу журнала ошибок\n     console.error(error + \",\" + info);\n    }\n  \n    render() {\n      if (this.state.hasError) return <ErrorPage />\n      return this.props.children;\n    }\n\n    componentDidMount = () => {\n      eventEmitter.on('EventErrorCatchUpdate',this.updateApplication);\n    }\n\n    componentWillUnmount = () => {\n      eventEmitter.off('EventErrorCatchUpdate',this.updateApplication);\n    }\n  }\n\n  export default ErrorBoundary;","const CREATE_PROJECT = 'CREATE_PROJECT';\nconst LOAD_UPDATE_PROJECT = \"LOAD_UPDATE_PROJECT\";\nconst LOAD_CURRENT = 'LOAD_CURRENT';\nconst LOG_OUT_CABINET = 'LOG_OUT_CABINET';\nconst LOAD_USER_CABINET = 'LOAD_USER_CABINET';\nconst ERROR_CABINET = 'ERROR_CABINET';\nconst EXIT_PROJECT = 'EXIT_PROJECT';\n\nconst createProjectAction = (state) => {\n    /** action for create project */\n    return {\n        type: CREATE_PROJECT,\n        projects: state,\n    }\n}\n\nconst exitProjectAction = (state) => {\n       /** action for exit from editable or prod project */\n    return {\n        type: EXIT_PROJECT,\n        exit: state\n    }\n}\n\nconst loadCurrentProjectAction = (state) => {\n    /** action for load current editable or prod project */\n    return {\n        type: LOAD_CURRENT,\n        id: state.id,\n        typeProject: state.typeProject,\n        sectionsProject: state.sectionsProject,\n        components: state.components\n    }\n}\n\nconst loadUpdateCurrentProject = (state) => {\n    /** action for update editable project */\n    return {\n        type: LOAD_UPDATE_PROJECT,\n        idProject: state.idProject,\n        sectionsProject: [...state.sectionsProject],\n        components: [...state.components]\n    }\n}\n\nconst loadUserAction = (state) => {\n    /** action for load user data */\n    return {\n        type: LOAD_USER_CABINET,\n        active: true,\n        idUser: state.uid,\n        error: '',\n        projects: state.projects\n    }\n}\n\nconst logOutAction = (state) => {\n    /** action for clear session */\n    return {\n        type: LOG_OUT_CABINET,\n        active: false,\n        idUser: null,\n        error: '',\n        projects: []\n    }\n}\n\nconst errorAction = (state) => {\n    /** action catch errors */\n    return {\n        type: ERROR_CABINET,\n        error: state\n    }\n}\n\nexport {\n    CREATE_PROJECT, createProjectAction, /* cabinet */\n    LOAD_USER_CABINET, loadUserAction, /* cabinet */\n    LOG_OUT_CABINET, logOutAction, /* cabinet */\n    LOAD_CURRENT, loadCurrentProjectAction, /* builder */\n    LOAD_UPDATE_PROJECT, loadUpdateCurrentProject,\n    EXIT_PROJECT, exitProjectAction,\n    ERROR_CABINET, errorAction, /* both */\n}","import {LOAD_CURRENT,LOAD_UPDATE_PROJECT, EXIT_PROJECT} from './actions';\n\nconst initialState = { /** @Builder reducer for build mode */\n    loadProject: false,\n    idProject: null,\n    typeProject: null,\n    components: [],\n    sectionsProject: [],\n};\n\nexport default (state = initialState, action) => {\n    switch (action.type){\n\n        case LOAD_CURRENT: {\n            /** load data */\n            return {\n                ...state,\n                loadProject: true,\n                idProject: action.id,\n                typeProject: action.typeProject,\n                components: [...action.components],\n                sectionsProject: [...action.sectionsProject]\n            }\n        }\n\n        case LOAD_UPDATE_PROJECT: {\n             /** load update for project */\n            return {\n                ...state,\n                components: [...action.components],\n                sectionsProject: [...action.sectionsProject]\n            }\n        }\n\n        case EXIT_PROJECT: {\n             /** if user exit from edit mode */\n            if (action.exit)\n            return {\n                ...state,\n                loadProject: false,\n                idProject: null,\n                typeProject: null,\n                components: [],\n                sectionsProject: []\n            }\n            else return state;\n        }\n        default: return state;\n    }\n};","import {    LOAD_USER_CABINET, LOG_OUT_CABINET,\n            ERROR_CABINET, CREATE_PROJECT,\n            LOAD_UPDATE_PROJECT\n        } from './actions';\n\nconst initialState = { /** Cabinet reducer (root) */\n    active: false,\n    idUser: null,\n    projects: [],\n    error: null,\n};\n\nexport default (state = initialState, action) => {\n    switch(action.type) {\n        case LOAD_USER_CABINET: {\n            /** load user data if user auth - true */\n            return {\n                ...state,\n                active: action.active,\n                idUser: action.idUser,\n                projects: [...action.projects]\n            }\n        }\n\n        case CREATE_PROJECT: {\n             /** create new project */\n            return {\n                ...state,\n                projects: [...action.projects]\n            }\n        }\n\n        case LOAD_UPDATE_PROJECT: {\n              /** update project in cabinet */\n            return {\n                ...state,\n                projects: state.projects.map(item => {\n                    if (item.id === action.idProject){\n                        item.components = [...action.components]\n                        item.sectionsProject = [...action.sectionsProject]\n                    }\n                return item;\n                })\n            }\n        }\n\n        case LOG_OUT_CABINET: {\n            /** clear session */\n            return {\n                ...state,\n                active: false,\n                idUser: null,\n                projects: []\n            }\n        }\n\n        case ERROR_CABINET: {\n            /** catch error in cabinet */\n            return {\n                ...state,\n                error: action.error\n            }\n        }\n        default: return state;\n    }\n}\n\n","import {combineReducers} from 'redux';\nimport reducerBuilder from './reducerBuilder';\nimport reducerCabinet from './reducerCabinet';\n\nexport default combineReducers({\n    builder: reducerBuilder,\n    cabinet: reducerCabinet,\n});","import {createStore, applyMiddleware, compose} from 'redux';\nimport firebase from  '../Firebase/Firebase';\nimport thunk from 'redux-thunk';\nimport combineReducers from './reducers';\n\n/** For devtools */\nconst composeEnhancers =\n  typeof window === 'object' &&\n  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n    }) : compose;\n\nconst middleware = composeEnhancers( /** @Include moddleware */\n  applyMiddleware(thunk.withExtraArgument({firebase})));\n\nconst store = createStore(combineReducers, middleware);\nexport default store;","import {loadUserAction, errorAction, logOutAction} from '../actions';\n\nconst middlewareLogin = (email,password) => async (dispatch,getState, {firebase}) => {\n    /** Auth */\n    let isLogin = true;\n        await firebase.login(email,password)\n        .then(response =>{\n            firebase.db.collection(\"users\").doc(response.user.uid).get()\n            .then(docUser => {\n                let user = docUser.data();\n                /** Load user if auth - true */\n                dispatch(loadUserAction({uid: docUser.id, projects: [...user.projects]}))\n            })\n        })\n        .catch((error) => {\n            console.error(error.message);\n            dispatch(errorAction(error.message));\n        });\n        return isLogin;\n    }\n\nconst middlewareLoadUserData = (uid) => async (dispatch,getState, {firebase}) => {\n    /** Load user data */\n        let isError = null;\n        await firebase.db.collection(\"users\").doc(uid).get()\n        .then(docUser => {\n            let user = docUser.data();\n            /** load if user data found */\n            dispatch(loadUserAction({uid: uid, projects: [...user.projects]}))\n        })\n        .catch((error) => {\n            console.error(error.message);\n            dispatch(errorAction(error.message));\n            isError = true;\n        });\n\n        if (!isError) return true;\n        else return false;\n    }\n\nconst middlewareLogOutUser = (uid) => async (dispatch,getState, {firebase}) => {\n    /** disconnect from session */\n    await firebase.signOut()\n    .then (response => {\n        dispatch(logOutAction());\n    })\n    .catch((error) => {\n        console.error(error.message);\n        dispatch(errorAction(error.message));\n    });\n}\nexport {\n    middlewareLogin,middlewareLoadUserData, middlewareLogOutUser\n}","import React from 'react';\nimport firebase from './Firebase';\n/** @ContextAPI for firebase */\nconst firebaseContext = React.createContext(firebase);\nexport default firebaseContext;","import React from 'react';\nimport firebaseContext from '../Firebase/firebaseContext';\n\n\nconst withFirebase = Component => props => {\n\n    if (process.env.NODE_ENV === 'development' || process.env.NODE_ENV === 'production')\n        return ( /** Context API */\n            <firebaseContext.Consumer>\n                {firebase => <Component {...props} firebase = {firebase} /> }\n            </firebaseContext.Consumer>\n        )\n    else return <Component {...props} />;\n};\n\n\nexport default withFirebase;","import React,{useState} from 'react';\nimport './Loader.scss';\nexport default function(props) {\n  \n    const [path] = useState(props.path ? process.env.PUBLIC_URL + props.path : process.env.PUBLIC_URL + `/img/loading.gif`);\n    const [mode] = useState(props.mode ? props.mode : false);\n    return (\n            <div className = {`loaderBox ${mode && 'specialMode'}`}>\n                <img className = 'loader' src = {path} alt = 'loader'></img> \n                {!mode && <p>{`Loading ${props.type}`}</p>}\n            </div>\n    )\n}","import React from 'react';\nimport styled from 'styled-components';\n\nconst AnimationTitle = styled.h3`\n    user-select: none;\n    transition: .4s linear all;\n    color: ${props => props.dir === 'up' ? 'red' : 'blue'};\n`;\n\nclass AnimationText extends React.PureComponent {\n\n    state = {\n        tilteContent: this.props.content.split(''),\n        currentTitle: this.props.content[0],\n        positionTitle: 1,\n        directionAnimation: 'up',\n        msAnimation: this.props.msAnimation,\n        msTimeout: this.props.msAnimation,\n        msPauseEnd: this.props.msPauseEnd,\n    }\n\n    _isMounted = false;\n    timerAnimation = null;\n\n    animationTitle = timer => {\n        let self = this;\n        if (this._isMounted)\n        timer = setTimeout( function tick(){\n\n            if (self._isMounted) {\n                if (self.state.directionAnimation === 'up'){\n                    let counter = self.state.tilteContent.length;\n                    const word = counter > self.state.positionTitle ?\n                                self.state.tilteContent[self.state.positionTitle] :\n                                self.state.tilteContent[self.state.positionTitle-1];\n                    self.setState({\n                        ...self.state,\n                        currentTitle: self.state.currentTitle + word,\n                        positionTitle: self.state.positionTitle + 1,\n                        directionAnimation: self.state.positionTitle === counter ? 'down' : 'up',\n                        msAnimation: self.state.positionTitle === counter ?\n                            self.state.msPauseEnd : self.state.msTimeout\n                    });\n                }\n                if (self.state.directionAnimation === 'down'){\n                    let _title = self.state.currentTitle;\n                    const length = self.state.currentTitle.length;\n                    _title = _title.slice(0,length - 1);\n                    self.setState({\n                        ...self.state,\n                        currentTitle: _title,\n                        positionTitle: self.state.positionTitle - 1,\n                        directionAnimation: self.state.positionTitle === 2 ? 'up' : 'down',\n                        msAnimation: self.state.positionTitle === 2 ?\n                            self.state.msPauseEnd : self.state.msTimeout\n                    });\n                }\n            timer = setTimeout(tick, self.state.msAnimation);\n            }\n        }, this.state.msAnimation);\n\n    }\n\n\n    render(){\n        return (\n            <AnimationTitle data-titlebuild dir = {this.state.directionAnimation}>\n                {this.state.currentTitle}\n            </AnimationTitle>\n        )\n\n    }\n\n    componentDidMount = (e) => {\n        this._isMounted = true;\n        this.animationTitle(this.timerAnimation);\n    }\n\n    componentWillUnmount = (e) => {\n        this._isMounted = false;\n        if (this.timerAnimation) clearTimeout(this.timerAnimation);\n    }\n}\n\n\nexport default AnimationText;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './registration.scss';\n\nimport withFirebase from '../withFirebase';\n\n\nclass Registration extends React.PureComponent {\n\n    static propTypes = {\n        firebase: PropTypes.object.isRequired, /** @firebase class for use firebase functions */\n        indexStream: PropTypes.object.isRequired /** @Events stream object */\n    }\n\n    state = {\n        firebase: this.props.firebase,\n        error: null,\n    }\n\n    emailRef = null;\n    passwordRef = null;\n\n    setRefEmail = (node) => this.emailRef = node;\n    setRefPassword = (node) => this.passwordRef = node;\n\n    createUser = event => {\n        /** try to create new user */\n        const email = this.emailRef ? this.emailRef.value : null;\n        const password = this.passwordRef ? this.passwordRef.value : null;\n        const { firebase } = this.props;\n\n        if (password && email)\n        firebase.registration(email, password)\n        .then(response => {\n            if (!response) throw new Error('Ivaid registration')\n            /** if response - true update data user else throw error */\n            firebase.db.collection(\"users\").doc(response.user.uid).set({\n                'projects': [],\n                'email': email,\n            }).then(() => this.props.indexStream.emit('EventRegistrationCorrect', response));\n        })\n        .catch((error) => {\n        console.error(error.message);\n        this.setState({error: error.message});\n        });\n        else  return this.setState({error: 'invalid user data'});\n    };\n\n    render(){\n        let  { error } = this.state;\n        return (\n            <div className ='RegistrationBox'>\n                <div  className = 'RegistrationBox__RegistrationForm'>\n                    <h3>Registration</h3>\n                    <form autoComplete = 'off' className = 'RegistrationForm__RegForm'>\n                        { error ?\n                            <p className = 'error'>{error}</p>\n                            : null\n                        }\n                        <span>E-mail</span>\n                        <input placeholder=\"email\" ref = {this.setRefEmail} type = 'text' />\n                        <span>Password</span>\n                        <input \n                            className = 'password' \n                            autoComplete = \"off\" \n                            ref = {this.setRefPassword} \n                            type = 'password' \n                            placeholder=\"password\"\n                        />\n                        <input onClick = {this.createUser}\n                                className = 'RegForm__loginButton'\n                                type = 'button'\n                                value = 'registration'\n                        />\n                    </form>\n                </div>\n                </div>\n        )\n    }\n\n}\nexport default withFirebase(Registration);\n","import React, {useState} from 'react';\nimport PropTypes from 'prop-types';\nimport './icon.scss';\n\nfunction Icon(props){\n    const [path] = useState(props.path);\n    const [className] = useState(props.className ? props.className : null);\n    const [draggable] = useState(props.draggable ? true : false);\n\n    return (\n    <img\n        draggable = {draggable}\n        onClick = {props.onClick ? props.onClick : null}\n        className = {className}\n        title = {props.title ? props.title : null}\n        src = {process.env.PUBLIC_URL + path } alt = 'icon'>\n    </img>\n    )\n}\n\nIcon.propTypes = {\n    path: PropTypes.string.isRequired, // icon path\n    className: PropTypes.string, // class\n    draggable: PropTypes.bool // draggable bool\n}\n\nexport default Icon;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport AnimationText from '../../components/AnimationText/AnimationTitle';\nimport Events from 'events';\nimport {middlewareLogin} from '../../redux/middleware/loadUserMiddleware';\n\nimport Loader from '../../components/loading/Loader';\nimport Registration from '../../components/Registration/Registration';\n\nimport {connect} from 'react-redux';\n\nimport './index.scss';\nimport Icon from '../../components/Icon/icon';\n\n\nclass Index extends React.PureComponent {\n\n    static propTypes = {\n        active: PropTypes.bool, /** @active - status firebase auth */\n        dispatch: PropTypes.func.isRequired, /** @dispatch - redux */\n        history: PropTypes.object.isRequired, /** @Router HTML5 history */\n        location: PropTypes.object.isRequired, /** @Router */\n        match: PropTypes.object.isRequired, /** @Router */\n        wrongEnter: PropTypes.string, /** @Error about invalid enter */\n        config: PropTypes.object, /** @config - app settings */\n    }\n\n    indexStream = new Events();\n\n    state = {\n        title:  this.props.config.title,\n        tryAuth: false,\n        registrationActive: false,\n        regStatus: false,\n        wrongEnter: false,\n        error: '',\n    }\n\n    emailImput = null;\n    passwordImput = null;\n\n    statusRegistration = event => {\n        /** Update registration status */\n        event.additionalUserInfo.isNewUser ?\n            this.setState({\n                ...this.state,\n                regStatus: true,\n                registrationActive: false,\n                error: 'Account create!'\n            })\n        : console.error('error registration');\n    }\n\n    showBox = event => {\n         /** Show registration box */\n        try {\n            this.setState ({\n                ...this.state,\n            registrationActive: this.state.registrationActive ? false : true\n            });\n        } catch (e) {\n        console.error('animation fail');\n        }\n        event.stopPropagation();\n    }\n\n    authTo = event => {\n          /** Auth user */\n            if (this.emailImput && this.passwordImput)\n                    this.props.dispatch(middlewareLogin(this.emailImput.value, this.passwordImput.value))\n        event.stopPropagation();\n    }\n\n    emailRef = node => this.emailImput = node;\n    passwordRef = node => this.passwordImput = node;\n\n    render(){\n\n\n        if (!this.props.active){\n            return (\n                    <div className = 'LoginPage flex-column'>\n                        <h1>{this.state.title}</h1>\n                        <div className = 'LoginPage__LoginBox'>\n                            <AnimationText\n                                content = 'Build your landing page!'\n                                msPauseEnd = {1000}\n                                msAnimation = {150}\n                            />\n                            <form className = 'LoginBox__LoginForm'>\n                                <h3>Connect form</h3>\n                                {this.state.tryAuth &&\n                                <Icon\n                                    className = 'LoginBox__LoginForm__loader'\n                                    path = '/img/loading.gif'\n                                />\n                                }\n                                {(this.props.wrongEnter || this.state.regStatus) && !this.state.tryAuth ?\n                                    <p className = 'error'>{this.props.wrongEnter}</p>\n                                    : null\n                                }\n                                    <p>E-mail</p>\n                                    <input \n                                        autoComplete = 'off'\n                                        placeholder=\"email\" \n                                        ref = {this.emailRef}\n                                        type = 'text' \n                                    />\n                                    <p>Password</p>\n                                    <input \n                                        ref = {this.passwordRef} \n                                        type = 'password' \n                                        autoComplete = 'off'\n                                        placeholder=\"password\"\n                                    />\n                                    <input \n                                        onClick = {this.authTo} \n                                        className = 'LoginForm__loginButton enterInput'\n                                        type = 'button'\n                                        value = 'enter' />\n                                    <input\n                                        onClick = {this.showBox}\n                                        className = {this.state.registrationActive ?\n                                            `LoginForm__loginButton registration selected` : \n                                            'LoginForm__loginButton registration'\n                                        }\n                                        type = 'button'\n                                        value = 'registration'\n                                    />\n                            </form>\n                        </div>\n                            <TransitionGroup component={null}>\n                                {this.state.registrationActive &&\n                                    <CSSTransition\n                                        timeout={300}\n                                        unmountOnExit\n                                        classNames=\"RegAnim\">\n                                        <Registration  indexStream = {this.indexStream} />\n                                    </CSSTransition>\n                                }\n                            </TransitionGroup>\n                    </div>\n            )\n        }\n         else  return <Loader path = '/img/loading.gif' type = 'session' />\n    }\n\n    componentDidUpdate = () => {\n        if (this.props.active) this.props.history.push('/Cabinet');\n    }\n\n    componentDidMount = (e) => {\n        if (this.props.active) this.props.history.push('/Cabinet');\n        this.indexStream.on('EventRegistrationCorrect', this.statusRegistration);\n    }\n    componentWillUnmount = (e) => {\n        this.indexStream.off('EventRegistrationCorrect', this.statusRegistration);\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        active: state.cabinet.active, \n        wrongEnter: state.cabinet.error\n    }\n  }\n\nexport default connect(mapStateToProps)(Index);","\nimport {errorAction, loadUserAction, loadUpdateCurrentProject} from '../actions';\nconst middlewareDelete = item => async (dispatch,getState, {firebase}) => {\n    /** Delete some components from project */\n    await firebase.db.collection('users').doc(item.uid).get()\n    .then(user => user.data())\n    .then(data => {\n        return {id: item.uid, projects: data.projects.filter(itemdb => itemdb.id !== item.id)};\n    })\n    .then(data => {\n        /** Load update in database */\n        firebase.db.collection(\"users\").doc(item.uid).update({\n            \"projects\": data.projects\n        })\n        .then(response => {\n            /** update user data */\n            dispatch(loadUserAction({uid: item.uid, projects: data.projects}));\n        });\n    })\n    .catch((error) => {\n        console.error(error.message);\n        dispatch(errorAction(error.message));\n    });\n}\n\nconst middlewareDeleteProjectComponent = item => async (dispatch, getState, {firebase}) => {\n    /** Delete project */\n    await firebase.db.collection('users').doc(item.uid).get()\n    .then(user => user.data())\n    .then(data => {\n        const userProjects = [...data.projects];\n        const findProject = userProjects.find(project => item.id === project.id);\n        if (!findProject) throw new Error('No found project');\n        findProject.components = findProject.components.filter(component =>\n            component.id !== item.idComponent\n        );\n\n        if (item && item.type === 'background'){\n            findProject.sectionsProject = findProject.sectionsProject.filter(section => {\n                return section !== item.idComponent;\n            });\n        }\n        return {dataUpdate: data, findProject: findProject};\n    })\n    .then(data => {\n        let {dataUpdate} = data;\n        let {findProject} = data;\n        /** update data in database */\n        firebase.db.collection(\"users\").doc(item.uid).update({\n            \"projects\": dataUpdate.projects\n        })\n        .then(response => {\n            /** update user data */\n            dispatch(loadUpdateCurrentProject({\n                components: [...findProject.components],\n                idProject: item.id,\n                sectionsProject: [...findProject.sectionsProject],\n            }))\n        });\n    })\n    .catch(error => {\n        console.error(error.message);\n        dispatch(errorAction(error.message));\n        return null;\n    });\n\n    return item.idComponent;\n}\n\nexport {middlewareDeleteProjectComponent};\nexport default middlewareDelete;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './Confirm.scss';\n\nconst Confirm = props => {\n\n    return (\n        <div className = 'wrapperConfirm'>\n            <div className = 'confirmSave'>\n                <span>Detected new changes</span>\n                <input\n                    className = 'saveCofirm'\n                    onClick = {props.cbSaveChanges}\n                    type = 'button'\n                    value = 'Save changes'\n                />\n                <input\n                    className = 'cancelCofirm'\n                    onClick = {props.cbCancelSave}\n                    type = 'button'\n                    value = 'Cancel'\n                />\n            </div>\n        </div>\n    )\n}\n\nConfirm.propTypes = {\n    cbSaveChanges: PropTypes.func.isRequired, // callback\n    cbCancelSave: PropTypes.func.isRequired // callback\n}\n\nexport default Confirm;","import React from 'react';\n\nimport PropTypes from 'prop-types';\nimport './header.scss';\n\nimport {middlewareLogOutUser} from '../../redux/middleware/loadUserMiddleware';\nimport {connect} from 'react-redux';\nimport {withRouter} from 'react-router-dom';\nimport {exitProjectAction} from '../../redux/actions';\nimport eventEmitter from '../../EventEmitter.js';\nimport Icon from '../Icon/icon';\nimport Confirm from '../confirmBox/Confirm';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBook, faChevronLeft, faChevronRight } from '@fortawesome/free-solid-svg-icons';\n\nconst iconPath = require('../../config.json').CabinetIcon;\n\nclass Header extends React.Component {\n\n    static propTypes = {\n        title: PropTypes.string.isRequired, /** @Config title app */\n        cabinetStream: PropTypes.object, /** @Events stream cabinet */\n        dispatch: PropTypes.func.isRequired, /** @dispatch redux */\n        history: PropTypes.object.isRequired, /** @Router HTML5 history */\n        location: PropTypes.object.isRequired, /** @Router */\n        match: PropTypes.object, /** @Router */\n    };\n\n    state = {\n        idUser: this.props.idUser,\n        title: this.props.title,\n        isChange: false,\n        redirectConfirm: false,\n        redirectAbout: {\n            path:  '/Cabinet/About',\n            redirectA: false,\n        },\n        redirectCabinet: {\n            path:  '/Cabinet',\n            redirectC: false,\n        },\n        redirectGuide: {\n            path:  '/Cabinet/Guide',\n            redirectG: false,\n        }\n    };\n\n    confirm = event => {\n        if (typeof event !== 'object')\n        this.setState({isChange: event});\n        else this.setState({isChange: event.false, redirectConfirm: event.confirm});\n    }\n\n    confirmSaveDetectChanges = event => {\n        eventEmitter.emit('EventRedirectSaveChanges');\n        this.setState({\n            redirectConfirm: false,\n            redirectCabinet: {\n                ...this.state.redirectCabinet,\n                redirectC: true\n            }\n        });\n    };\n\n    logOut = event => {\n        if (this.state.idUser)\n            this.props.dispatch(middlewareLogOutUser(this.props.idUser));\n        event.stopPropagation();\n    };\n\n    redirectAbout = event => {\n        const isPath = this.props.location.pathname !== this.state.redirectAbout.path;\n        if (isPath && !this.state.isChange)\n            this.props.history.push(this.state.redirectAbout.path);\n         else if (!this.state.redirectConfirm)\n            this.setState({redirectConfirm: true});\n        event.stopPropagation()\n    };\n\n    redirectGuide = event => {\n        const isPath = this.props.location.pathname !== this.state.redirectGuide.path;\n        if (isPath && !this.state.isChange)\n            this.props.history.push(this.state.redirectGuide.path);\n        else if (!this.state.redirectConfirm) \n                this.setState({redirectConfirm: true});\n        event.stopPropagation()\n    };\n\n    redirectCabinet = event => {\n        if (event !== 'cancelMode'){\n            const isPath = this.props.location.pathname !== this.state.redirectCabinet.path;\n            if (isPath && this.state.isChange === false)\n                this.props.history.push(this.state.redirectCabinet.path);\n            else if (!this.state.redirectConfirm) this.setState({redirectConfirm: true});\n            event.stopPropagation();\n\n        } else this.setState({\n            redirectConfirm: false,\n            redirectCabinet: {\n                ...this.state.redirectCabinet,\n                redirectC: true\n            }\n        });\n    }\n\n    exit = async () => await this.props.dispatch(exitProjectAction(true));\n\n    add = event => {\n        this.props.cabinetStream.emit('EventChangeWorkMode',{active: true, action: 'newProject'});\n        event.stopPropagation()\n    };\n\n    prevProject = event => {\n        if (this.props.idProject !== 0){\n                this.props.history.push(`/Cabinet/Build/${this.props.idProject - 1}`);\n        }\n        event.stopPropagation();\n    }\n\n    nextProject = event => {\n        if (this.props.idProject < this.props.counterProjects)\n        this.props.history.push(`/Cabinet/Build/${this.props.idProject + 1}`)\n    }\n\n    render(){\n\n        return (\n            <React.Fragment>\n            {this.state.isChange && this.state.redirectConfirm ?\n                <Confirm \n                    cbSaveChanges = {this.confirmSaveDetectChanges}\n                    cbCancelSave = {() => this.redirectCabinet('cancelMode')}\n                /> : null}\n                <header>\n                    <div className = 'container'>\n                        <div className = 'flex-row'>\n                                <div onClick = {this.redirectCabinet} className = 'header__CabinetInfo'>\n                                    <Icon className ='mainIcon' path = {iconPath} />\n                                    <h3 className = 'tilteApp'>{this.state.title} </h3>\n                                </div>\n                                {this.props.location.pathname === `/Cabinet/Build/${this.props.idProject}` &&\n                                    <FontAwesomeIcon \n                                            className=\" switcher fas fa-2x\"\n                                            icon = {faChevronLeft} \n                                            onClick = {this.prevProject}\n                                    />\n                                }\n                                {this.props.location.pathname === `/Cabinet/Build/${this.props.idProject}` &&\n                                    <FontAwesomeIcon\n                                        className=\" switcher fas fa-2x\"\n                                        icon = {faChevronRight} \n                                        onClick = {this.nextProject}\n                                    />\n                                }\n                                {this.props.location.pathname === '/Cabinet' ?\n                                    <div onClick = {this.add} className = 'header__newProject__AddButton'>\n                                        <Icon className = 'Cabinet' path = '/img/plus.png' />\n                                    </div>\n                                    : null\n                                }\n                                    <div  className = 'Navigator'>\n                                    <FontAwesomeIcon \n                                        className=\" about fas fa-2x\"  \n                                        icon = {faBook} \n                                        onClick = {this.redirectGuide} \n                                        />\n                                        <Icon className = 'about' onClick = {this.redirectAbout}\n                                            title = 'about'\n                                            path = '/img/about_logo.svg'\n                                        />\n                                        <Icon className = 'logoutButton'\n                                            onClick = {this.logOut}\n                                            title = 'logOut'\n                                            path = '/img/logOut.svg'\n                                        />\n                                    </div>\n                        </div>\n                </div>\n                </header>\n            </React.Fragment>\n        )\n    }\n\n    componentDidlMount = () => {\n        eventEmitter.on('EventRedirectConfirm', this.confirm);\n    }\n\n    componentWillUnmount = () => {\n        eventEmitter.off('EventRedirectConfirm', this.confirm);\n    }\n}\n\nexport default connect()(withRouter(Header));","import React, {useState} from 'react';\nimport PropTypes from 'prop-types';\nimport eventEmitter from '../../EventEmitter';\n\nconst ImageItem = props => {\n\n    const {selected} = props;\n    const [id] = useState(props.id);\n    const [urlRegular] = useState(props.urls.regular);\n    const [urlFull] = useState(props.urls.full);\n    const [isFull] = useState(props.isFull);\n    const [urlContent] = useState(props.urlContent);\n    const showImageMenu = event => {\n\n       eventEmitter.emit(\"EventShowMenuImage\",{\n            id: id,\n            url: urlRegular,\n            urlFull: urlFull,\n            iframe: urlContent\n        });\n        event.stopPropagation();\n    }\n\n    return (\n        <div className = {selected ? 'ItemBox selected' : 'ItemBox'}>\n            <img\n                className = 'ImageItem'\n                onClick = {showImageMenu}\n                src = {isFull ? urlFull : urlRegular}\n                alt = 'item'\n            />\n        </div>\n    )\n}\n\nImageItem.propTypes = {\n    id: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number,\n    ]),\n    urls: PropTypes.object, // data with image path\n    isFull: PropTypes.bool, // mode view\n    urlContent: PropTypes.string // content path\n}\n\nexport default ImageItem;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Loader from '../../loading/Loader';\n\nconst CreateProject = props => {\n\n    const content = props.content; /** Content */\n    const {disabled,validateName,name,validateType} = content;\n    const nameLength = name.length; /** Length */\n\n\n    let isNumber = nameLength >= 4 && nameLength <= 20;\n\n    return (\n    <div className = 'Modal Modal__create'>\n        <h3>Create new Project</h3>\n        { nameLength <= 3 ?\n            <span className = 'warning'>{props.warningLengthMin}</span> : null\n        }\n        { nameLength >= 20 ?\n            <span className = 'warning'>{props.warningLengthMax}</span> : null\n        }\n        {\n            isNumber && !validateName ?\n            <span className = 'warning'>{props.warningNumber}</span> : null\n        }\n        <input\n            className = {validateName ? 'ready' : 'wrong'}\n            value = {props.name}\n            onChange = {props.cbValidateName}\n            type = 'text'\n            placeholder = \"Project name\"\n        />\n        { !validateType ?\n            <span className = 'warning'>{props.warningType}</span> : null\n        }\n        <select className = 'projectSelect' onChange = {props.cbSelectOption} >\n            <option value = 'empty'>--------</option>\n            <option value = 'landing'>Landing</option>\n        </select>\n        <input \n            onClick = {props.cbAddNewProject}\n            className = 'acceptButton'\n            disabled = {disabled}\n            type = 'button'\n            value = 'Submit'\n        />\n        <input onClick = {props.cbCancel} type ='button' value = 'Cancel' />\n        {props.loading && <Loader mode = 'create' />}\n    </div>\n    )\n}\n\nCreateProject.propTypes = {\n    content: PropTypes.object, // type color className\n    warningType: PropTypes.string, // errors\n    warningLengthMax: PropTypes.string, // error max length\n    warningLengthMin: PropTypes.string, // error min length\n    cbValidateName: PropTypes.func.isRequired, // callback validate\n    cbAddNewProject: PropTypes.func.isRequired, // callback add new project\n}\n\nexport default CreateProject;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport eventEmitter from '../../../EventEmitter';\nimport Icon from '../../Icon/icon';\nimport Loader from '../../loading/Loader';\n\nclass  SearchModal extends React.PureComponent {\n\n    static propTypes = {\n        modalSearchMode: PropTypes.string, // search mode\n        content: PropTypes.object, // with search data\n        cbCancel: PropTypes.func.isRequired, // callback cancel\n        cbShowImage: PropTypes.func.isRequired, // callback show image\n        cbSetSelectedImage: PropTypes.func.isRequired, // callback show image\n    }\n\n    state = {\n        mode: this.props.modalSearchMode,\n        items: this.props.images,\n    }\n\n    search = event => {\n        /** event search on */\n        const value = this.refSearch ? this.refSearch.value : null;\n        this.props.cbSearch(event,value, this.props.modalSearchMode);\n        event.stopPropagation();\n    }\n\n    refSearch = null;\n    refSearchFunc = node => this.refSearch = node;\n\n    render(){\n\n        let {content} = this.props;\n        return (\n            <React.Fragment>\n                <div className = 'Modal Modal-search'>\n                <h3>\n                {this.props.modalSearchMode ? \n                    `Search ${this.props.modalSearchMode}` : '' \n                }\n                </h3>\n                { this.props.error ?\n                    <span className = 'error'>{content.error}</span> : null\n                }\n                <div className = 'Modal-search__controllers'>\n                    <input ref = {this.refSearchFunc} type = 'text' />\n                        <input\n                            disabled = {content.dissabled}\n                            className = 'acceptButton'\n                            type = 'button'\n                            value = 'Search'\n                            onClick = {this.search}\n                        />\n                    <input onClick = {this.props.cbCancel} type ='button' value = 'Cancel' />\n                </div>\n                <div className = 'searchResultBox'>\n                    {this.state.items}\n                    {this.props.loading ? <Loader type = 'images' /> : null}\n                </div>\n                </div>\n                {  this.props.menuActive ?\n                    <div className = 'ActionModalSearch'>\n                    <button onClick = {this.props.cbShowImage} className = 'actionModalSearch__view'>\n                        <Icon path = '/img/view.png' />\n                    </button>\n                    <button onClick = {this.props.cbSetSelectedImage} className = 'actionModalSearch__settings'>\n                        <Icon path = '/img/settings.png' />\n                    </button>\n                    </div>\n                    : null\n                }\n            </React.Fragment>\n        )\n    }\n\n    componentDidUpdate = (prevProps,prevState) => {\n        let {content} = this.props;\n        let {content: contentPrev} = prevProps;\n        const haveUpdate = (contentPrev.images !== content.images && content.images);\n        const isSelected = contentPrev.selectedItem !== content.selectedItem;\n        /** update if selected */\n        if (haveUpdate || isSelected){\n            let _items = this.props.cbMakeImageResultBox(content.images);\n            this.setState({\n                ...this.state,\n                items: [..._items]\n            });\n        }\n    }\n\n    componentDidMount = () => {\n        eventEmitter.emit('EventBlockScroll', 'window');\n    }\n\n    componentWillUnmount = () => {\n        eventEmitter.emit('EventBlockScroll', 'default');\n    }\n}\n\nexport default SearchModal;","import React,{Fragment} from 'react';\n\nimport isFetch from 'isomorphic-fetch';\nimport PropTypes from 'prop-types';\nimport eventEmitter,{controllerStream} from '../../EventEmitter.js';\nimport ImageItem from '../imageViewer/imageItem';\n\nimport CreateProject from './createProject/createProject';\nimport SearchModal from './Search/searchModal';\nimport './modal.scss';\n\n\nclass ModalWindow extends React.PureComponent {\n\n    static propTypes = {\n        workMode: PropTypes.string.isRequired, /** @Mode for modal */\n        cabinetStream: PropTypes.object, /** @Events stream cabinet */\n        eventStreamBuild: PropTypes.object, /** @Events stream build */\n        idComponent: PropTypes.oneOfType([\n            PropTypes.string,\n            PropTypes.number\n        ]) /** @Id current user project */\n    }\n\n    state = {\n        workMode: this.props.workMode,\n        loading: false,\n        items: [],\n        images: {\n            loading: false,\n            buttonSearchDisabled: false,\n            selectedItem: null, \n            showUrl: null, \n            images: [],\n            urlFull: null,\n            imageBoxView: false, \n            iframe: null,\n            error: ''\n        },\n        newProject: {\n            validateName: false,\n            validateType: false,\n            disabled: true,\n            name: '',\n            type: 'empty'\n        },\n        imageMenuActive: false,\n        warning: {\n            lengthMax: 'Max length: 20 laters',\n            warningNumber: `Don't use numbers`,\n            lengthMin: 'Min length: 4 letters',\n            type: 'Select type of webpage',\n        }\n    }\n\n    inputSearch = null;\n    inputSelect = null;\n\n    searchData = (event,value, mode) => {\n        /** search images or media */\n        if (!event.target.value || !value) return;\n        this.setState({...this.state, \n            images: {\n                ...this.state.images,\n                loading: true,\n                buttonSearchDisabled: true\n            }\n        });\n\n        let search = null;\n        if (value) search = value;\n        else search = this.inputSearch.value;\n\n        if (mode !== 'media'){\n        const modeAPI = 'search/photos/?page=1&per_page=40&query=';\n        const api = `https://api.unsplash.com/${modeAPI}`;\n \n        isFetch(`${api + search}&client_id=${process.env.REACT_APP_UNSPLASH_TOKEN}`)\n        .then(response => {\n            if (response.ok) return response.json();\n            else throw new Error('request invalid');\n        })\n        .then(response => {\n            let {results} = response;\n            if (results.length) /** save results */\n            this.setState({\n                ...this.state,\n                images: {\n                    ...this.state.images,\n                    loading: false,\n                    imageBoxView: true,\n                    error: '',\n                    images: [...results],\n                    buttonSearchDisabled: false\n                },\n            });\n            else throw new Error('Photos not found');\n        })\n        .catch(error => {\n            console.error(error.message);\n            this.setState({\n                ...this.state,\n                images: {\n                    ...this.state.images,\n                    buttonSearchDisabled: false,\n                    loading: false,\n                    error: error.message},\n                imageBoxView: false,\n            });\n        });\n        } else this.searchYouTubeAPI(search);\n    }\n\n\n    searchYouTubeAPI = (search) => {\n        /** search media */\n        const API = `https://www.googleapis.com/youtube/v3/search?part=snippet`;\n        const RAITE = `&maxResults=25&order=date&q=${search}`;\n        const KEY = `&key=${process.env.REACT_APP_YOUTUBE_SEARCH_TOKEN}`;\n        isFetch(API + RAITE + KEY)\n        .then(res => {\n            if (res.ok)\n            return res.json();\n            else throw new Error (`Error ${res.status}`);\n        })\n        .then(res => {\n            const arrayItems = [];\n            res.items.forEach(item => {\n                arrayItems.push({\n                    urls: { regular: item.snippet.thumbnails.high.url },\n                    videoId: item.id.videoId\n                })\n            });\n            return arrayItems;\n        })\n        .then(results => {\n            this.setState({ /** save results */\n                ...this.state,\n                images: {\n                    ...this.state.images,\n                    loading: false,\n                    imageBoxView: true,\n                    error: '',\n                    images: [...results],\n                    buttonSearchDisabled: false\n                },\n            });\n        })\n        .catch(error => console.error(error));\n    }\n\n    showMenuImage = event => {\n        /** tools for show or set content */\n        this.setState({\n            ...this.state, \n            imageMenuActive: true,\n            images: {\n                ...this.state.images,\n                selectedItem: event.id, \n                showUrl: event.url,\n                urlFull: event.urlFull,\n                iframe: event.iframe\n\n            }\n        });\n    }\n\n    showImage = event => {\n        /** on viewer */\n        const {showUrl, iframe} = this.state.images;\n\n        this.props.eventStreamBuild.emit(\"EventView\", {\n            action: true, \n            target: showUrl ? showUrl : null,\n            iframe: iframe,\n            mode: this.props.modalSearchMode\n        });\n        event.stopPropagation();\n    }\n\n    setSelectedImage = event => {\n        /** set current selected content */\n        let data = {...this.state.images};\n        if (this.props.modalSearchMode === 'background'){\n            controllerStream.emit(`EventSetBackgroundImage${this.props.idComponent}`,data);\n            eventEmitter.emit(`EventSetBImageInstumentPanel`,{images: data, mode: this.props.modalSearchMode});\n        } else if (this.props.modalSearchMode === 'image'){\n            controllerStream.emit(`EventSetCurrentImage${this.props.idComponent}`, data);\n            eventEmitter.emit(`EventSetBImageInstumentPanel`, {images: data,  mode: this.props.modalSearchMode });\n        } else if (this.props.modalSearchMode === 'media'){\n            controllerStream.emit(`EventSetContentMedia${this.props.idComponent}`,{\n                    iframe: data.iframe,\n                    mode: this.props.modalSearchMode\n                }\n            );\n            eventEmitter.emit(`EventSetIframe`, {iframe: data.iframe});\n        }\n\n        event.stopPropagation();\n    };\n\n    makeImageResultBox = (items) => {\n        /** make results */\n        if (!items) return null;\n        return items.map((item,i) =>{\n                return <ImageItem\n                            key = {`item${item.videoId}${i}`}\n                            id = {i}\n                            urlContent = {item.videoId ? item.videoId : null}\n                            selected = {this.state.images.selectedItem === i ? true : false} \n                            isFull = {false}\n                            urls = {item.urls}\n                        />\n        });\n\n    }\n\n    addNewProject = event => {\n        /** create new projects modal */\n        let mode = this.state[this.state.workMode];\n        if (mode.validateType &&  mode.validateName) {\n\n            this.props.cabinetStream.emit('EventChangeWorkMode',{action: 'default', loading: true});\n\n            this.props.cabinetStream.emit('EventAddProject',\n            {\n                title: this.state[this.state.workMode].name,\n                type: this.state[this.state.workMode].type\n            });\n        }\n    }\n\n    selectOption = event => {\n        /** type project */\n        let inputs = {...this.state[this.state.workMode]};\n        inputs.type = event.target.value;\n        inputs.validateType = inputs.type !== 'empty';\n        inputs.disabled = inputs.validateType && inputs.validateName ? false : true;\n        this.setState({\n            ...this.state,\n            [this.state.workMode]: inputs\n        });\n    }\n\n    validateName = event => {\n        /** validate name project */\n        let inputs = {...this.state[this.state.workMode]};\n        inputs.name = event.target.value;\n        inputs.validateName = /^\\D{4,20}$/i.test(inputs.name);\n        inputs.disabled = inputs.validateType && inputs.validateName ? false : true;\n        this.setState({\n            ...this.state,\n            [this.state.workMode]: inputs\n        })\n    };\n\n    cancel = event => {\n        /** remove modal */\n        if (this.state.workMode === 'Search')\n        this.props.eventStreamBuild.emit(\"EventModalSearchOn\", {action: 'offline', mode: null});\n        else  this.props.cabinetStream.emit('EventChangeWorkMode',{active: false, action: 'default'});\n    }\n\n    refSelect = (node) => this.inputSelect = node;\n    refSearch = node => this.inputSearch = node;\n\n\n\n    render(){\n           switch (this.state.workMode){\n              \n            case 'newProject':\n                return (\n                        <CreateProject\n                                content = {this.state[this.state.workMode]}\n                                warningType = {this.state.warning.type}\n                                warningNumber = {this.state.warning.warningNumber}\n                                warningLengthMin = {this.state.warning.lengthMin}\n                                warningLengthMax = {this.state.warning.lengthMax}\n                                cbValidateName = {this.validateName}\n                                cbSelectOption = {this.selectOption}\n                                cbAddNewProject = {this.addNewProject}\n                                cbCancel = {this.cancel}\n                                loading = {this.state.loading}\n                        />\n                )\n            case 'Search':\n                    return (\n                            <div className = 'searchWrapper'> \n                                <SearchModal\n                                    content = {this.state.images}\n                                    cbCancel = {this.cancel}\n                                    menuActive = {this.state.imageMenuActive}\n                                    cbMakeImageResultBox = {this.makeImageResultBox}\n                                    cbShowImage = {this.showImage}\n                                    cbSetSelectedImage = {this.setSelectedImage}\n                                    modalSearchMode = {this.props.modalSearchMode}\n                                    cbSearch = {this.searchData}\n                                    loader = {this.state.loading}\n                                />\n                            </div>\n                    )\n\n            default: return <Fragment></Fragment>\n        }\n    }\n\n    componentDidMount = event => {\n        if (this.state.workMode === 'Search')\n            eventEmitter.on('EventShowMenuImage', this.showMenuImage);\n    }\n\n    componentWillUnmount = event => {\n        if (this.state.workMode === 'Search')\n            eventEmitter.off('EventShowMenuImage', this.showMenuImage);\n    }\n}\n\nexport default ModalWindow;\n\n","import {createProjectAction, errorAction} from '../actions';\n\n\nfunction random(min){ /** Generate keys */\n    return `${Math.floor(min + Math.random() * (10000-min))}`\n}\n\n\nconst middlewareCreateProject = (uid, list, title, type) => async (dispatch,getState, {firebase}) => {\n    /** Create new project */\n    let lastProject = [...list];\n    const lastIndex = lastProject.length  ? lastProject[lastProject.length-1].id + 1 : 0;\n    const sectionsProject = [];\n    if (type === 'portfolio') sectionsProject.push(\"Header\");\n    else sectionsProject.push(\"Header\");\n    const header = {\n        backgroundImage: null,\n        backgroundColor: null,\n        id: `MainBackgroundHeader${random(0)}`,\n        targetSection: \"Header\",\n        type: \"background\"\n    }\n\n    lastProject.push({\n        id: lastIndex,\n        title: title,\n        type: type,\n        components: [header],\n        sectionsProject: [...sectionsProject],\n    });\n    /** Load project in database */\n    await firebase.db.collection(\"users\").doc(uid).update({\n        'projects': lastProject,\n    })\n    .then (() => dispatch(createProjectAction(lastProject)))\n    .catch(error => {\n        console.error(error.message);\n        dispatch(errorAction(error.message));\n    })\n};\n\nexport {\n    middlewareCreateProject\n}","import React, {useState} from 'react';\nimport PropTypes from 'prop-types';\nimport {withRouter, Redirect} from 'react-router-dom';\n\nfunction Item(props) {\n    /** Project item in cabinet */\n    const [path] = useState( `/Cabinet/Build/${props.id}`);\n    const [productionPath] = useState(`/Cabinet/Build/${props.id}/Production/`);\n\n    let [canBuild,setCanBuild] = useState(false);\n    let [canProd, setCanProd] = useState(false);\n\n    const [id] = useState(props.id);\n    const [name] = useState(props.name);\n    const [type] = useState(props.type);\n\n\n    const build = event => {\n        if(props.location.pathname !== path)\n            setCanBuild(true);\n        event.stopPropagation();\n    };\n\n    const showProduction = event => {\n        if(props.location.pathname !== path)\n        setCanProd(true);\n        event.stopPropagation();\n    };\n\n    const deleteItem = event => {\n        props.cabinetStream.emit('EventDeleteItem',{\n            id: props.id,\n            name: props.name,\n            type: props.type\n        });\n        event.stopPropagation();\n    };\n\n\n    if (canBuild) return <Redirect to = {path} />\n    else if (canProd) return <Redirect to = {productionPath} />\n    else return (\n            <div className = 'item' data-id = {id}>\n                <p className = 'ProjectName'>{name}</p>\n                <p className = 'ProjectType'>{type}</p>\n                <div className = 'projectController'>\n                    <input \n                        onClick = {build} \n                        className = 'projectControllerButton_enter' \n                        type = 'button' \n                        value = 'enter build' />\n                    <input onClick = {deleteItem} \n                        className = 'projectControllerButton_delete' \n                        type = 'button' \n                        value = 'delete' />\n                </div>\n                <input onClick = {showProduction} \n                    className = 'productionButton' \n                    type = 'button' \n                    value = 'Production' />\n            </div>\n        )\n}\n\nItem.propTypes = {\n    id: PropTypes.number.isRequired, // id item\n    name: PropTypes.string.isRequired, // item name\n    type: PropTypes.string.isRequired, // item type\n}\n\nexport default withRouter(Item);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {Redirect} from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport {middlewareCreateProject} from '../../redux/middleware/createProjectMiddleware';\n// import {CSSTransition, TransitionGroup} from 'react-transition-group';\nimport './list.scss';\n\nimport Item from './Item';\n\nclass List extends React.PureComponent {\n    /** List of projects items in cabinet */\n    static propTypes = {\n        dispatch: PropTypes.func.isRequired, /** @dispatch redux */\n        idUser: PropTypes.string.isRequired, /** @UID current user */\n        list: PropTypes.array.isRequired, /** @List user projects */\n    }\n\n    state = {\n        redirect: false,\n    }\n\n    addNewProject = (item) => {\n        if (this.props.idUser) {\n            this.props.dispatch(middlewareCreateProject(\n                    this.props.idUser,\n                    this.props.list,\n                    item.title,\n                    item.type\n                ));\n        } else this.setState({...this.state, redirect: true});\n    }\n\n\n    makeList = (list) => {\n\n        return list.map (project => {\n\n            return(\n                <Item\n                    key = {project.id}\n                    id = {project.id}\n                    name = {project.title}\n                    type = {project.type}\n                    cabinetStream = {this.props.cabinetStream}\n                />\n            )\n        });\n    }\n\n    render(){\n        if (this.state.redirect)\n            return <Redirect to = { '/'} />\n            else return (\n                    <div className = 'projectsList__list'>\n                        {this.makeList([...this.props.list])}\n                    </div>\n                )\n    }\n\n    componentDidMount = () => {\n        this.props.cabinetStream.on('EventAddProject',this.addNewProject);\n    }\n\n      componentWillUnmount = () => {\n        this.props.cabinetStream.off('EventAddProject',this.addNewProject);\n      }\n\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        idUser: state.cabinet.idUser,\n        list: [...state.cabinet.projects]\n    }\n}\n\nexport default connect(mapStateToProps)(List);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport List from '../List/List.jsx';\nimport './ProjectsSection.scss';\n\nconst ProjectsSection = props => {\n        return (\n            <section className = 'projectsList'>\n                <div className = 'container'>\n                    <div className = 'flex-column'>\n                        <div className = 'projectsList__box'>\n                            <h3>Your Projects</h3>\n                        </div>\n                        <List cabinetStream = {props.cabinetStream} />\n                    </div>\n                </div>\n            </section>\n        )\n\n}\n\nProjectsSection.propTypes = {\n    cabinetStream: PropTypes.object /** @Events stream */\n}\n\nexport default ProjectsSection;","import React,{Fragment} from 'react';\nimport PropTypes from 'prop-types';\nimport {connect} from 'react-redux';\nimport {Redirect} from 'react-router-dom';\nimport {CSSTransition} from 'react-transition-group';\n/* ------- Event stream ------- */\nimport Events from 'events';\n/* ------- HOC for het firebase controll object ------- */\nimport withFirebase from '../../components/withFirebase';\n/* ------- Moddlewares ------- */\nimport {middlewareLogOutUser} from '../../redux/middleware/loadUserMiddleware';\nimport middlewareDelete from '../../redux/middleware/middlewareDelete';\n/* ------- Child components ------- */\nimport Loader from '../../components/loading/Loader';\nimport Header from '../../components/header/Header';\nimport Modal from '../../components/modalWindow/ModalWindow';\nimport ProjectsSection from '../../components/ProjectsSection/ProjectsSection';\nimport './Cabinet.scss';\n\nclass Cabinet extends React.PureComponent {\n\n\tstatic propTypes = {\n\t\tfirebase: PropTypes.object.isRequired, /** @firebase class for use firebase functions */\n\t\tactive: PropTypes.bool, /** @active - status firebase auth */\n\t\tdispatch: PropTypes.func.isRequired, /** @dispatch - redux */\n\t\thistory: PropTypes.object.isRequired, /** @Router HTML5 history */\n\t\tlocation: PropTypes.object.isRequired, /** @Router */\n\t\tmatch: PropTypes.object.isRequired, /** @Router */\n\t\tidUser: PropTypes.string, /** @Session user id from redux */\n\t\tprojects: PropTypes.arrayOf(PropTypes.object).isRequired /** @Projects array with user projects from redux */\n\t}\n\n\tcabinetStream = new Events();\n\n\tstate = {\n\t\tloader: false,\n\t\tmodalActive: false,\n\t\tworkMode: 'default',\n\t}\n\n\tlogOut = () => {\n\t\t/** destroy session */\n\t\tthis.props.dispatch(middlewareLogOutUser(this.props.idUser));\n\t}\n\n\tdeletItem = event => {\n\t\t/** destroy project */\n\t\tthis.setState({\n\t\t\t...this.state,\n\t\t\tloader: true,\n\t\t});\n\t\tthis.props.dispatch(middlewareDelete({...event, uid: this.props.firebase.getCurrentUser().uid}));\n\t};\n\n\t\tchangeWorkMode = event => {\n\t\t/** workMode changes */\n\t\t\tthis.setState ({\n\t\t\t...this.state,\n\t\t\tmodalActive: event.active,\n\t\t\tworkMode: event.action,\n\t\t\tloader: event.loading || false,\n\t\t\t});\n\t\t}\n\n\n\trender(){\n\t\tif (this.props.active){\n\t\treturn (\n\t\t<Fragment>\n\t\t\t\t<Header cabinetStream = {this.cabinetStream} \n\t\t\t\t\ttitle = {this.props.config.title} \n\t\t\t\t\tidUser = {this.props.idUser} \n\t\t\t\t/>\n\t\t\t\t<div className = 'Cabinet'>\n\t\t\t\t{this.state.loader &&\n\t\t\t\t\t<Loader\n\t\t\t\t\tmode = 'abinet_action_loader'\n\t\t\t\t\ttype = 'data'\n\t\t\t\t\tpath = '/img/loading.gif'\n\t\t\t\t\t/>\n\t\t\t\t}\n\t\t\t\t<CSSTransition\n\t\t\t\t\tin={this.state.modalActive}\n\t\t\t\t\ttimeout={300}\n\t\t\t\t\tclassNames=\"modalAnimation\"\n\t\t\t\t\tunmountOnExit\n\t\t\t\t\tappear\n\t\t\t\t>\n\t\t\t\t<Modal\n\t\t\t\t\tcabinetStream = {this.cabinetStream}\n\t\t\t\t\tworkMode = {this.state.workMode} \n\t\t\t\t/>\n\t\t\t\t</CSSTransition>\n\t\t\t\t<ProjectsSection cabinetStream = {this.cabinetStream} />\n\t\t\t\t</div>\n\t\t\t</Fragment>\n\t\t)\n\t\t} else if (!this.props.firebase.getCurrentUser()) return <Redirect to = { '/'} />\n\t\telse return <Loader path = '/img/loading.gif' type = 'Cabinet' />\n\t}\n\n\tcomponentDidUpdate = (prevProps) => {\n\t\tif (prevProps.projects.length !== this.props.projects.length)\n\t\t\tthis.setState({\n\t\t\t\t...this.state,\n\t\t\t\tloader: false,\n\t\t\t});\n\t}\n\n\n\tcomponentDidMount = () => {\n\t\tthis.cabinetStream.on('EventDeleteItem', this.deletItem);\n\t\tthis.cabinetStream.on('EventChangeWorkMode', this.changeWorkMode);\n\t};\n\n\tcomponentWillUnmount = () => {\n\t\tthis.cabinetStream.off('EventDeleteItem', this.deletItem);\n\t\tthis.cabinetStream.off('EventChangeWorkMode', this.changeWorkMode);\n\t}\n}\n\n\tconst mapStateToProps = (state) => {\n\treturn {\n\t\tidUser: state.cabinet.idUser,\n\t\tprojects: [...state.cabinet.projects],\n\t\tactive: state.cabinet.active\n\t}\n\t};\n\n\texport default connect(mapStateToProps)(withFirebase(Cabinet));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport eventEmitter,{controllerStream} from '../../../EventEmitter';\nimport styled from 'styled-components';\n\n\nconst Background = styled.div`\n    position: relative;\n    width: ${props => props.width || '100%'};\n    height: ${props => props.height || '100%'};\n    background-color: ${props => props.backgroundColor};\n    ${props => props.backgroundImage ? `background-image: url(${props.backgroundImage});` : null}\n    background-size: cover;\n`;\n\nclass BackgroundComponent extends React.PureComponent {\n\n    static propTypes = {\n        id: PropTypes.string.isRequired,\n        targetSection: PropTypes.string,\n        background: PropTypes.string,\n        backgroundImage: PropTypes.string,\n        width: PropTypes.string,\n        height: PropTypes.string,\n        sectionNumber: PropTypes.number,\n        mode: PropTypes.string.isRequired\n    };\n\n    state = {\n        id: this.props.id,\n        targetSection: this.props.targetSection,\n        backgroundColor: this.props.background || this.props.color,\n        backgroundImage: this.props.backgroundImage,\n        width: this.props.width,\n        height: this.props.height\n    };\n\n    boxComponent = null; // ref\n    boxComponentRef = node => this.boxComponent = node;\n\n    saveDataParent = () => {\n        /** \"memorize\" paren sizes  */\n        let boxInform =  this.boxComponent.getBoundingClientRect();\n        controllerStream.emit(`EventSaveWidth${this.state.targetSection}`,{\n            countSection: this.props.countSection,\n            sectionNumber: this.props.sectionNumber,\n            size: {width: boxInform.width, height: boxInform.height}\n        });\n    };\n\n    openBgInstruments = event => {\n        /** open panel instrument trigger */\n        const componentsPatternBackground = {\n            id: this.state.id,\n            targetSection: this.state.targetSection,\n            type: 'background',\n            backgroundColor: this.state.backgroundColor,\n            backgroundImage: this.state.backgroundImage,\n        }\n        eventEmitter.emit('EventInstrumentPanel',{\n            componentStats: componentsPatternBackground,\n            targetSection: this.state.targetSection,\n            type: 'background',\n            id: this.state.id,\n        });\n        event.stopPropagation();\n    };\n\n    changeColor = eventItem => {\n         /** change bg color */\n        this.setState({\n            ...this.state,\n            backgroundColor: eventItem.colorRGB\n        });\n    };\n\n    setBackgroundImage = event => {\n         /** change bg image */\n        const {urlFull} = event;\n        this.setState({\n            ...this.state,\n            backgroundImage: urlFull,\n        });\n    };\n\n    render(){\n            if (this.props.mode === 'dev'){\n        return (\n            <Background\n                key = {this.state.id}\n                ref  = {this.boxComponentRef}\n                onDoubleClick={this.openBgInstruments}\n                data-name = {this.state.targetSection}\n                backgroundColor = {this.state.backgroundColor}\n                backgroundImage = {this.state.backgroundImage}\n                width = {this.state.width}\n                height = {this.state.height}\n            >\n                {this.props.children}\n            </Background>\n        )\n    } else if (this.props.mode === 'production'){\n\n        return (\n            <Background\n                key = {this.state.id}\n                ref  = {this.boxComponentRef}\n                data-name = {this.state.targetSection}\n                backgroundColor = {this.state.backgroundColor}\n                backgroundImage = {this.state.backgroundImage}\n                width = {this.state.width}\n                height = {this.state.height}\n            >\n            {this.props.children}\n            </Background>\n        )\n    }\n\n    }\n\n    componentDidUpdate = () => {\n        this.saveDataParent();\n    }\n\n    componentDidMount = () => {\n        this.saveDataParent();\n        controllerStream.on(`EventChangeColorBackground${this.state.id}`, this.changeColor);\n        controllerStream.on(`EventSetBackgroundImage${this.state.id}`, this.setBackgroundImage);\n    };\n\n    componentWillUnmount = () => {\n        controllerStream.off(`EventChangeColorBackground${this.state.id}`, this.changeColor);\n        controllerStream.off(`EventSetBackgroundImage${this.state.id}`, this.setBackgroundImage);\n    };\n};\n\n\n\nexport default BackgroundComponent;","import React, {Fragment} from 'react';\nimport eventEmitter from '../../../EventEmitter';\nimport PropTypes from 'prop-types';\n\nimport BackgroundComponent from '../components/Background';\nimport Loader from '../../loading/Loader';\n\nimport './MainBackground.scss';\n\nclass MainBackground extends React.PureComponent {\n\n    static propTypes = {\n        countComponents: PropTypes.number.isRequired, /** @Number last project */\n        menuActive: PropTypes.bool, /** @Bool active menu or unactive */\n        id: PropTypes.string.isRequired, /** @id current project */\n    };\n\n    state = {\n        targetSection: this.props.id,\n        editRedy: false,\n        component: null,\n        children: null,\n    };\n\n    changeMode = () => {\n        if (!this.state.editStart || this.props.id !== this.props.editComponentName) {\n            this.setState({\n                ...this.state,\n                editStart: true\n            }, () =>\n            eventEmitter.emit('EventModeEdit', {\n                ...this.state,\n                editStart: true,\n                targetSection: this.state.targetSection,\n            }));\n        }\n    };\n\n    refSection = null;\n    refSectionFunc = node => node ? this.refSection = {data: node.getBoundingClientRect(), node: node} : node;\n\n    render() {\n\n        if (this.props.mode === 'dev' && this.state.component){\n            return (\n                <Fragment>\n                    <section\n                        key = {this.props.sectionNumber + this.props.keyMain}\n                        className = {`element${this.props.sectionNumber}`} \n                        ref={this.refSectionFunc}\n                        data-class = 'editable' \n                        onClick = {this.changeMode}\n                    >\n                        <BackgroundComponent \n                            key = {this.props.sectionNumber + this.props.keyMain}\n                            mode = {this.props.mode}\n                            sectionNumber = {this.props.sectionNumber}\n                            countSection = {this.props.countSection}\n                            {...this.state.component}\n                        >\n                            {this.state.children || null}\n                        </BackgroundComponent>\n                        {!this.state.editStart &&\n                            <div className = 'warningEdit'><p>Click for start edit</p></div>\n                        }\n                    </section>\n                </Fragment>\n            );\n        } else if (this.props.mode === 'production' && this.state.component){\n            return (\n                <Fragment>\n                    <section \n                        key = {this.props.sectionNumber}\n                        ref={this.refSectionFunc} \n                        data-class = 'production'\n                    >\n                        <BackgroundComponent\n                            key = {this.props.sectionNumber}\n                            mode = {this.props.mode}\n                            sectionNumber = {this.props.sectionNumber}\n                            {...this.state.component}\n                        >\n                        {this.state.children || null}\n                        </BackgroundComponent>\n                    </section>\n                </Fragment>\n            );\n        }\n        else return <Loader type = {`${this.props.mode} components`} />;\n    }\n\n\n    componentDidMount = () => {\n        if (!this.state.component){ /** create bg */\n            let component = this.props.currentProjectsData.components.find(item =>\n                                            item.targetSection === this.props.id);\n            const children = this.props.componentJSX.filter(item => \n                item.targetSection === this.props.id && item.id !== component.id)\n                            .map(item => item.component);\n           this.setState({\n               ...this.state,\n               component: component,\n               children: children,\n           });\n        }\n    }\n\n    componentDidUpdate = (prevProps) => {\n        const needUpdate = this.props.countComponents !== prevProps.countComponents;\n        if (!this.state.component){ /** if need create new section */\n            let component = this.props.currentProjectsData.components.find(item =>\n                                            item.targetSection === this.props.id);\n            const children = this.props.componentJSX.filter(item => item.targetSection === this.props.id)\n                            .map(item => item.component);\n           this.setState({\n               ...this.state,\n               component: component,\n               children: children,\n           });\n        }\n        if (needUpdate){\n            const children = this.props.componentJSX.filter(item => item.targetSection === this.props.id)\n            children && this.setState({...this.state,children: children.map(item => item.component) });\n        }\n    }\n}\nexport default MainBackground;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport MainBackground from './MainBackground/MainBackground';\n\n\nconst Section = props => {\n    if (props.mode === 'dev') {\n        const { currentProjectsData } = props.userData;\n        const section = currentProjectsData.sectionsProject;\n\n        return section.map((item, i) => {\n            return ( <\n                MainBackground key = { item }\n                componentJSX = { props.componentJSX }\n                currentProjectsData = { currentProjectsData }\n                editComponentName = { props.editComponentName }\n                countComponents = { props.componentJSX.length }\n                menuActive = { props.menuActive }\n                sizeParentBox = { props.sizeParentBox }\n                id = { item }\n                countSection = { currentProjectsData.sectionsProject.length }\n                sectionNumber = { i }\n                mode = { props.mode }\n                />\n            );\n        });\n    } else if (props.mode === 'production') {\n        const { section } = props;\n        const { currentProjectsData } = props;\n        return section.map((item, i) => {\n            return ( <\n                MainBackground key = { item }\n                componentJSX = { props.componentsProdJSX }\n                currentProjectsData = { currentProjectsData }\n                editComponentName = { props.editComponentName }\n                countComponents = { props.componentsProdJSX.length }\n                sizeParentBox = { props.sizeParentBox }\n                id = { item }\n                sectionNumber = { i }\n                mode = { props.mode }\n                />\n            );\n        });\n    }\n}\n\nSection.propTypes = {\n    componentJSX: PropTypes.array, /// array with jsx components\n    editComponentName: PropTypes.string, // name current edit component\n    menuActive: PropTypes.bool, // build menu\n    mode: PropTypes.string.isRequired, // curent mode\n    sizeParentBox: PropTypes.object, // data with size main component\n    userData: PropTypes.object // users data\n}\n\nexport default Section;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport eventEmitter,{controllerStream} from '../../../EventEmitter';\nimport styled from 'styled-components';\n\n\nconst InputComponent = styled.input.attrs(props => {\n    if (props.mode !== 'production')\n    return ({\n        style: {\n            zIndex: props.indexZ ? '9999' : null,\n            left: props.coordX ? props.coordX : '45%',\n            top:  props.coordY ? props.coordY : '0%',\n        }\n    })\n})`\n    width: ${props => props.size ? props.size.w + 'px' : null};\n    color: white;\n    height: ${props => props.size ? props.size.h + 'px' : null};\n    font-size: ${props => props.fontSize ? props.fontSize + 'px' : null};\n    position: absolute;\n    background-color: ${props => props.color || null};\n    border: ${props => `1px solid ${props.color}`};\n    border-radius: ${props => props.borderRadius ? props.borderRadius + 'px' : null};\n    white-space: normal;\n    font-weight: bold;\n    transition: .3s transform linear;\n\n    :active {\n        border: ${props =>`2px dotted ${props.color}`};\n        transform: scale(1.05);\n    }\n`;\n\nconst ProductionStyle = styled(InputComponent)`\n    left: ${props => props.coordX ? props.coordX : '45%'};\n    top:  ${props => props.coordY ? props.coordY : '0%'};\n`;\n\n\nclass Input extends React.PureComponent {\n\n    static propTypes = {\n        id: PropTypes.oneOfType([\n            PropTypes.string,\n            PropTypes.number\n        ]).isRequired,\n        targetSection: PropTypes.string,\n        sizeParentBox: PropTypes.object,\n    }\n\n    state = {\n        id: this.props.id,\n        istrumentsActive: false,\n        getSizeBool: false,\n        countSection: 0,\n        borderRadius: this.props.borderRadius,\n        sectionNumber: 0,\n        typeInput: this.props.typeInput || 'button',\n        sizeParentBox: this.props.sizeParentBox,\n        targetSection: this.props.targetSection,\n        size: this.props.size && this.props.size.w ? this.props.size : {w: '100', h:'50'},\n        fontSize: this.props.fontSize || 20,\n        color: this.props.color || null,\n        shiftCoords: null,\n        content: this.props.content || 'Input',\n        posInput: this.props.coords.x ? {x: this.props.coords.x, y: this.props.coords.y} : null,\n        startDragNdrop: false,\n    }\n\n    openInputInstruments = event => {\n\n        const componentsPatternImage = {\n            id: this.state.id,\n            targetSection: this.state.targetSection,\n            typeInput: this.state.typeInput,\n            type: 'input',\n            color: this.state.color,\n            borderRadius: this.state.borderRadius,\n            zIndex: null,\n            size: {...this.state.size},\n            fontSize: this.state.fontSize,\n            content: this.state.content,\n            coords: {...this.state.posInput}, // x, y\n        }\n\n        eventEmitter.emit(`EventInstrumentPanel`,{\n            componentStats: componentsPatternImage,\n            targetSection: this.state.targetSection,\n            id: this.state.id,\n            sizeTextValue: this.state.size\n        });\n        this.setState({...this.state, istrumentsActive: true});\n        event.stopPropagation();\n    };\n\n    saveCoords = event => {\n        if (event.nativeEvent.which !== 1) return false;\n        const element = this.refInput.getBoundingClientRect();\n\n        const cords = {\n            left: element.left,\n            top: element.top,\n            width: element.right - element.left,\n            height: element.bottom - element.top\n        }\n\n        this.setState({\n            ...this.state,\n            shiftCoords: {x: event.clientX - cords.left, y: event.clientY - cords.top},\n            startDragNdrop: !this.state.startDragNdrop ? true : false\n        });\n\n        event.stopPropagation();\n    };\n\n    changeSize = eventSize => {\n        this.setState({...this.state, size: eventSize.size});\n    };\n\n    changeColor = colorRGB => {\n\n        if (typeof colorRGB === 'string')\n            this.setState({\n                ...this.state,\n                color: colorRGB\n            });\n    };\n\n    changeSizeText = eventSize => {\n        this.setState({...this.state, fontSize: eventSize.size});\n    };\n\n    setBorderRadius = eventItem => {\n        let radius = eventItem.borderRadius > 200 ? 200 : eventItem.borderRadius;\n        radius = eventItem.borderDown < 0 ? 0 : eventItem.borderRadius;\n            this.setState({\n                ...this.state,\n                borderRadius: radius\n            });\n    };\n\n    changeContent = eventItem => {\n        let booldContent = eventItem.content || eventItem.content === '';\n        if (booldContent)\n            this.setState({\n                ...this.state,\n                content: eventItem.content\n            });\n    }\n\n\n\n    checkPivotPosition = (coordX, coordY) => {\n\n        const element = this.refInput.getBoundingClientRect();\n        const borderTopLeft = 0;\n        const borderDown = 800 - element.height;\n        const borderRight = this.props.sizeParentBox.width - element.width;\n\n        if (coordY < borderTopLeft) coordY = borderTopLeft;\n        if (coordY > borderDown) coordY = borderDown;\n        if (coordX < borderTopLeft) coordX = borderTopLeft;\n        if (coordX > borderRight) coordX = borderRight;\n\n        return {x: coordX, y: coordY};\n    }\n\n\n    move = (x,y) => this.setState({...this.state, posInput: {x: x, y: y}});\n\n    moveInput = event => {\n\n        if (this.state.startDragNdrop && this.state.istrumentsActive){\n            let num = this.state.sectionNumber;\n            if (this.state.sectionNumber === 1 && this.state.countSection-1 === this.state.sectionNumber)  \n                num = this.state.sectionNumber + 1;\n            let xItem = event.clientX - (this.props.sizeParentBox.left  * num);\n            let yItem = event.clientY - (this.props.sizeParentBox.top * num);\n\n            let coordX = xItem - this.state.shiftCoords.x;\n            let coordY = yItem - this.state.shiftCoords.y;\n\n            let coords = this.checkPivotPosition(coordX,coordY);\n\n            let convertToPercentX = coords.x * 100 / this.state.sizeParentBox.width;\n            let convertToPercentY = coords.y * 100 / this.state.sizeParentBox.height;\n\n            this.move(convertToPercentX.toFixed(2) + '%',\n                      convertToPercentY.toFixed(2) + '%');\n    }\n        event.stopPropagation();\n    };\n\n    stopDragNdrop = event => {\n        if (this.state.startDragNdrop) {\n            this.setState({...this.state, startDragNdrop: false})\n            controllerStream.emit(`EventUpdatePosition${this.state.id}`, this.state.posInput);\n        }\n        event.stopPropagation();\n    };\n    //currentProjectsData.sectionsProject.length\n\n    saveSize = event => {\n        const {size} = event;\n        if (!this.state.getSizeBool){\n        this.setState({\n            ...this.state,\n            getSizeBool: true,\n            countSection: event.countSection,\n            sectionNumber: event.sectionNumber,\n            sizeParentBox: {width: size.width, height: size.height}});\n        } else controllerStream.off(`EventSaveWidth${this.state.targetSection}`,this.saveSize);\n    }\n\n    setWidth = eventItem => {\n        const {width} = eventItem;\n        this.setState({...this.state, \n            size: {\n                ...this.state.size,\n                w: width,\n            }\n        });\n    }\n\n    setType = eventItem => {\n        this.setState({\n            ...this.state, \n            typeInput: eventItem\n        });\n    }\n\n    setHeight = eventItem => {\n        const {height} = eventItem;\n        this.setState({...this.state, \n            size: {\n                ...this.state.size,\n                h: height,\n            }\n        });\n    }\n\n    refInput = null;\n    refInputComponent = node => this.refInput = node;\n\n    render(){\n\n        if (this.props.mode === 'dev'){\n            return (\n                <InputComponent\n                    type = {this.state.typeInput}\n                    value = {this.state.content}\n                    ref = {this.refInputComponent}\n                    size = {this.state.size}\n                    color = {this.state.color}\n                    borderRadius = {this.state.borderRadius}\n                    fontSize = {this.state.fontSize}\n                    onClick = {this.openInputInstruments}\n                    onMouseDown = {this.saveCoords}\n                    onMouseMove= {this.moveInput}\n                    onMouseLeave = {this.stopDragNdrop}\n                    onMouseUp = {this.stopDragNdrop}\n                    onDragStart = {this.stop}\n                    coordX = {this.state.posInput ? this.state.posInput.x : null}\n                    coordY = {this.state.posInput ? this.state.posInput.y : null}\n                    indexZ = {this.state.startDragNdrop}\n                    data-imagecomponentwrapper\n                />\n            )\n        } else if (this.props.mode === 'production'){\n\n            return (\n                <ProductionStyle\n                    type = {this.state.typeInput}\n                    value = {this.state.content}\n                    ref = {this.refInputComponent}\n                    size = {this.state.size}\n                    color = {this.state.color}\n                    fontSize = {this.state.fontSize}\n                    borderRadius = {this.state.borderRadius}\n                    coordX = {this.state.posInput ? this.state.posInput.x : null}\n                    coordY = {this.state.posInput ? this.state.posInput.y : null}\n                    indexZ = {this.state.startDragNdrop}\n                    mode = {this.props.mode}\n                />\n            )\n        }\n    }\n\n    componentDidMount = () => {\n        controllerStream.on(`EventSaveWidth${this.state.targetSection}`, this.saveSize);\n        controllerStream.on(`EventSetBorderRadius${this.state.id}`, this.setBorderRadius);\n        controllerStream.on(`EventChangecolor${this.state.id}`, this.changeColor);\n        controllerStream.on(`EventChangeSize${this.state.id}`, this.changeSize);\n        controllerStream.on(`EventChangeSizeText${this.state.id}`, this.changeSizeText);\n        controllerStream.on(`EventChangeContentText${this.state.id}`, this.changeContent);\n        controllerStream.on(`EventSetWidth${this.state.id}`, this.setWidth);\n        controllerStream.on(`EventSetType${this.state.id}`, this.setType);\n        controllerStream.on(`EventSetHeight${this.state.id}`, this.setHeight);\n    }\n\n    componentWillUnmount = () => {\n        controllerStream.off(`EventSaveWidth${this.state.targetSection}`,this.saveSize);\n        controllerStream.off(`EventSetBorderRadius${this.state.id}`, this.setBorderRadius);\n        controllerStream.off(`EventChangeSize${this.state.id}`, this.changeSize);\n        controllerStream.off(`EventChangeSizeText${this.state.id}`, this.changeSizeText);\n        controllerStream.off(`EventChangeContentText${this.state.id}`, this.changeContent);\n        controllerStream.off(`EventChangecolor${this.state.id}`, this.changeColor);\n        controllerStream.off(`EventSetWidth${this.state.id}`, this.setWidth);\n        controllerStream.off(`EventSetType${this.state.id}`, this.setType);\n        controllerStream.off(`EventSetHeight${this.state.id}`, this.setHeight);\n    }\n}\n\nexport default Input;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport eventEmitter,{controllerStream} from '../../../EventEmitter';\nimport styled from 'styled-components';\n\nconst WrapperMedia = styled.div.attrs(props => {\n    if (props.mode !== 'production')\n    return ({\n        style: {\n            zIndex: props.indexZ ? '9999' : null,\n            left: props.coordX ? props.coordX : '45%',\n            top:  props.coordY ? props.coordY : '0%',\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n            padding: props.mode === 'dev' ? '40px' : null\n        }\n    })\n})`\n    width: ${props => props.size.w ? props.size.w + '%' : '30%'};\n    height: ${props => props.size.h ? props.size.h + '%' : '50%'};\n    position: absolute;\n    background: ${props => props.mode === 'dev' ? `url(${process.env.PUBLIC_URL}/img/media.svg)` : null};\n    background-size: cover;\n    border: ${props => props.mode === 'dev' ? `1px solid red` : null};\n    padding: 10px;\n`;\nconst Media = styled.iframe`\n    width: 100%;\n    height: 100%;\n    z-index: ${props => props.zIndex ? '0' : '-1'};\n`;\n\nconst ProductionStyle = styled(WrapperMedia)`\n    left: ${props => props.coordX ? props.coordX : '45%'};\n    top:  ${props => props.coordY ? props.coordY : '0%'};\n`;\n\nclass MediaComponent extends React.PureComponent {\n\n    static propTypes = {\n        id: PropTypes.oneOfType([\n            PropTypes.string,\n            PropTypes.number\n        ]).isRequired,\n        targetSection: PropTypes.string,\n        sizeParentBox: PropTypes.object,\n        content: PropTypes.string,\n    }\n\n    state = {\n        targetSection: this.props.targetSection,\n        id : this.props.id,\n        sizeParentBox: this.props.sizeParentBox,\n        shiftCoords: null,\n        countSection: 0,\n        size: this.props.size ? this.props.size : {w: null, h: null},\n        posMedia: this.props.coords.x ? {x: this.props.coords.x, y: this.props.coords.y} : null,\n        startDragNdrop: false,\n        istrumentsActive: false,\n        drawContent: false,\n        sectionNumber: this.props.sectionNumber,\n        content: this.props.content ? this.props.content : null\n    }\n\n    openMediaInstruments = event => {\n\n        const componentsPatternMedia = {\n            id: this.state.id,\n            size: this.state.size,\n            targetSection: this.state.targetSection,\n            type: 'media',\n            zIndex: null,\n            content: this.state.content,\n            coords: {...this.state.posMedia}, // x, y\n        }\n\n        eventEmitter.emit('EventInstrumentPanel',{\n            componentStats: componentsPatternMedia,\n            targetSection: this.state.targetSection,\n            id: this.state.id,\n            size: this.state.size,\n        });\n        this.setState({...this.state, istrumentsActive: true});\n        event.stopPropagation();\n    }\n\n    saveCoords = event => {\n        if (event.nativeEvent.which !== 1) return false;\n        const element = this.refMedia.getBoundingClientRect();\n        const cords = {\n            left: element.left,\n            top: element.top,\n            width: element.right - element.left,\n            height: element.bottom - element.top\n        }\n\n        this.setState({\n            ...this.state,\n            shiftCoords: {x: event.clientX - cords.left, y: event.clientY - cords.top},\n            startDragNdrop: !this.state.startDragNdrop ? true : false\n        });\n\n        event.stopPropagation();\n    };\n\n    setWidth = eventItem => {\n        const {width} = eventItem;\n        this.setState({...this.state, \n            size: {\n                ...this.state.size,\n                w: width,\n            }\n        });\n    }\n\n    setHeight = eventItem => {\n        const {height} = eventItem;\n        this.setState({...this.state, \n            size: {\n                ...this.state.size,\n                h: height,\n            }\n        });\n    }\n\n    checkPivotPosition = (coordX, coordY) => {\n\n        const element = this.refMedia.getBoundingClientRect();\n        const borderTopLeft = 0;\n        const borderDown = 800 - element.height;\n        const borderRight = this.props.sizeParentBox.width - element.width;\n\n        if (coordY < borderTopLeft) coordY = borderTopLeft;\n        if (coordY > borderDown) coordY = borderDown;\n        if (coordX < borderTopLeft) coordX = borderTopLeft;\n        if (coordX > borderRight) coordX = borderRight;\n\n        return {x: coordX, y: coordY};\n    }\n\n\n    move = (x,y) => this.setState({...this.state, posMedia: {x: x, y: y}});\n\n    moveMedia = event => {\n\n        if (this.state.startDragNdrop && this.state.istrumentsActive){\n\n            let xItem = event.clientX - (this.props.sizeParentBox.left  * this.state.sectionNumber);\n            let yItem = event.clientY - (this.props.sizeParentBox.top * this.state.sectionNumber);\n\n            let coordX = xItem - this.state.shiftCoords.x;\n            let coordY = yItem - this.state.shiftCoords.y;\n\n            let coords = this.checkPivotPosition(coordX,coordY);\n\n            let convertToPercentX = coords.x * 100 / this.state.sizeParentBox.width;\n            let convertToPercentY = coords.y * 100 / this.state.sizeParentBox.height;\n\n            this.move(convertToPercentX.toFixed(2) + '%',\n                      convertToPercentY.toFixed(2) + '%');\n    }\n        event.stopPropagation();\n    };\n\n    stopDragNdrop = event => {\n        if (this.state.startDragNdrop) {\n            this.setState({...this.state, startDragNdrop: false})\n            controllerStream.emit(`EventUpdatePosition${this.state.id}`, this.state.posMedia);\n        }\n        event.stopPropagation();\n    };\n\n    setContent = event => {\n        const {iframe} = event;\n        this.setState({...this.state, content: iframe});\n    };\n\n\n    saveSize = event => {\n        const {size} = event;\n        if (!this.state.getSizeBool){\n        this.setState({\n            ...this.state,\n            getSizeBool: true,\n            countSection: event.countSection,\n            sectionNumber: event.sectionNumber + 1,\n            sizeParentBox: {width: size.width, height: size.height}});\n        } else controllerStream.off(`EventSaveWidth${this.state.targetSection}`,this.saveSize);\n    }\n\n    refMedia = null;\n    refMediaComponent = node => this.refMedia = node;\n\n    render(){\n        const url = 'https://www.youtube.com/embed/';\n\n        if (this.props.mode === 'dev'){\n            return (\n                <WrapperMedia\n                    ref = {this.refMediaComponent}\n                    onClick={this.openMediaInstruments}\n                    onMouseDown = {this.saveCoords}\n                    onMouseMove= {this.moveMedia}\n                    onMouseLeave = {this.stopDragNdrop}\n                    onMouseUp = {this.stopDragNdrop}\n                    onDragStart = {this.stop}\n                    mode = {this.props.mode}\n                    indexZ = {this.state.startDragNdrop}\n                    coordX = {this.state.posMedia ? this.state.posMedia.x : null}\n                    coordY = {this.state.posMedia ? this.state.posMedia.y : null}\n                    size = {this.state.size}\n                >\n                {!this.state.startDragNdrop ? \n                    <Media\n                        src= {this.state.content ? url + this.state.content : null }\n                        drawContent = {this.state.drawContent}\n                        width = {this.state.width} \n                        height = {this.state.height}\n                        zIndex = {this.state.content}\n                        allowfullscreen\n                    ></Media> : null\n                }\n                </WrapperMedia>\n            )\n        } else if (this.props.mode === 'production'){\n            return (\n                <ProductionStyle\n                    ref = {this.refMediaComponent}\n                    indexZ = {this.state.startDragNdrop}\n                    size = {this.state.size}\n                    coordX = {this.state.posMedia ? this.state.posMedia.x : null}\n                    coordY = {this.state.posMedia ? this.state.posMedia.y : null}\n                    mode = {this.props.mode}\n                >\n                {!this.state.startDragNdrop ? \n                    <Media\n                        src= {this.state.content ? url + this.state.content : null }\n                        drawContent = {this.state.drawContent}\n                        width = {this.state.width} \n                        height = {this.state.height}\n                        zIndex = {this.state.content}\n                        mode = {this.props.mode}\n                        allowfullscreen\n                    ></Media> : null\n                }\n                </ProductionStyle>\n            )\n        }\n    }\n\n    componentDidMount = () => {\n        controllerStream.on(`EventSetContentMedia${this.state.id}`, this.setContent);\n        controllerStream.on(`EventSaveWidth${this.state.targetSection}`, this.saveSize);\n        controllerStream.on(`EventSetWidth${this.state.id}`, this.setWidth);\n        controllerStream.on(`EventSetHeight${this.state.id}`, this.setHeight); \n    }\n\n    componentWillUnmount = () => {\n        controllerStream.off(`EventSaveWidth${this.state.targetSection}`,this.saveSize);\n        controllerStream.off(`EventSetContentMedia${this.state.id}`, this.setContent);\n        controllerStream.off(`EventSetWidth${this.state.id}`, this.setWidth);\n        controllerStream.off(`EventSetHeight${this.state.id}`, this.setHeight); \n    }\n}\n\nexport default MediaComponent;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport eventEmitter,{controllerStream} from '../../../EventEmitter';\nimport styled from 'styled-components';\n\n\nconst WrapperImg = styled.div.attrs(props => {\n    if (props.mode !== 'production')\n    return ({\n        style: {\n            zIndex: props.indexZ ? '9999' : null,\n            transform: `rotateZ(${props.rotate}deg) scale(${props.scale})`,\n            left: props.coordX ? props.coordX : '45%',\n            top:  props.coordY ? props.coordY : '0',\n            transition: `transform  0.3s linear`,\n        }\n    })\n})`\n    width: ${props => props.size ? props.size.w + '%' : '30%'};\n    height: ${props => props.size ? props.size.h + '%' : '50%'};\n    position: absolute;\n`;\n\nconst ImageStyle = styled.img`\n    width: 100%;\n    height: 100%;\n    opacity: ${props => props.opacity};\n    border-radius: ${props => props.borderRadius}px;\n    position: absolute;\n`;\n\nconst ProductionStyle = styled(WrapperImg)`\n    left: ${props => props.coordX ? props.coordX : '50%'};\n    top:  ${props => props.coordY};\n    transform: rotate(${props => props.rotate}deg) scale(${props => props.scale});\n`;\n\nclass Image extends React.PureComponent {\n\n    static propTypes = {\n        id: PropTypes.oneOfType([\n            PropTypes.string,\n            PropTypes.number\n        ]).isRequired,\n        targetSection: PropTypes.string,\n        sizeParentBox: PropTypes.object,\n    }\n\n    state = {\n        id: this.props.id,\n        istrumentsActive: false,\n        getSizeBool: false,\n        countSection: 0,\n        opacity: this.props.opacity || 1,\n        transformValue: this.props.rotate || 0,\n        scaleValue: this.props.scale || 1,\n        sectionNumber: 0,\n        borderRadius: this.props.borderRadius || 0,\n        sizeParentBox: this.props.sizeParentBox,\n        targetSection: this.props.targetSection,\n        path: this.props.image ? this.props.image : this.props.path,\n        size: this.props.size ? this.props.size : {w: 30, h: 50},\n        shiftCoords: null,\n        posImage: this.props.coords.x ? {x: this.props.coords.x, y: this.props.coords.y} : null,\n        startDragNdrop: false,\n    }\n\n    openImageInstruments = event => {\n        /** open panel instruments */\n        const componentsPatternImage = {\n            id: this.state.id,\n            targetSection: this.state.targetSection,\n            size: {...this.state.size},\n            type: 'image',\n            rotate: this.state.transformValue,\n            scale: this.state.scaleValue,\n            borderRadius: this.state.borderRadius,\n            opacity: this.state.opacity,\n            zIndex: null,\n            image: this.state.path,\n            coords: {...this.state.posImage}, // x, y\n        }\n\n        eventEmitter.emit(`EventInstrumentPanel`,{\n            componentStats: componentsPatternImage,\n            targetSection: this.state.targetSection,\n            id: this.state.id,\n            sizeTextValue: this.state.size\n        });\n        this.setState({...this.state, istrumentsActive: true});\n        event.stopPropagation();\n    };\n\n    saveCoords = event => {\n          /** save current coords */\n        if (event.nativeEvent.which !== 1) return false;\n        const element = this.refImage.getBoundingClientRect();\n\n        const cords = {\n            left: element.left,\n            top: element.top,\n            width: element.right - element.left,\n            height: element.bottom - element.top\n        }\n\n        this.setState({\n            ...this.state,\n            shiftCoords: {x: event.clientX - cords.left, y: event.clientY - cords.top},\n            startDragNdrop: !this.state.startDragNdrop ? true : false\n        });\n\n        event.stopPropagation();\n    };\n\n    checkPivotPosition = (coordX, coordY) => {\n          /** Checking the boundaries */\n        const element = this.refImage.getBoundingClientRect();\n        const borderTopLeft = 0;\n        const borderDown = 800 - element.height;\n        const borderRight = this.props.sizeParentBox.width - element.width;\n\n        if (coordY < borderTopLeft) coordY = borderTopLeft;\n        if (coordY > borderDown) coordY = borderDown;\n        if (coordX < borderTopLeft) coordX = borderTopLeft;\n        if (coordX > borderRight) coordX = borderRight;\n\n        return {x: coordX, y: coordY};\n    }\n\n    rotateEvent = eventItem => {\n         /** transform - rotate */\n        const angle = eventItem.angle;\n        this.setState({\n            ...this.state,\n            transformValue: angle,\n        });\n    }\n\n    scaleEvent = eventItem => {\n         /** transform - scale */\n        const scale = eventItem.scale;\n        this.setState({\n            ...this.state,\n            scaleValue: scale,\n        });\n    }\n\n    move = (x,y) => this.setState({...this.state, posImage: {x: x, y: y}});\n\n    moveText = event => {\n          /** move element event */\n        if (this.state.startDragNdrop && this.state.istrumentsActive){ /** if key down - false */\n            const element = this.refImage.getBoundingClientRect();\n            let xItem = event.clientX - (this.props.sizeParentBox.left  * this.state.sectionNumber);\n            let yItem = event.clientY - (this.props.sizeParentBox.top * this.state.sectionNumber);\n            let factorCoord = this.diffAngle(parseInt(this.state.transformValue),element.height,element.width);\n\n            let coordX = xItem - this.state.shiftCoords.x + factorCoord.xFacotr;\n            let coordY = yItem - 61 - this.state.shiftCoords.y + factorCoord.yFactor;\n\n            let coords = this.checkPivotPosition(coordX,coordY);\n\n            let convertToPercentX = coords.x * 100 / this.state.sizeParentBox.width;\n            let convertToPercentY = coords.y * 100 / this.state.sizeParentBox.height;\n\n            this.move(convertToPercentX.toFixed(2) + '%',\n                      convertToPercentY.toFixed(2) + '%');\n    }\n        event.stopPropagation();\n    };\n\n\n    diffAngle = (transform, height, width) => {\n          /** if user use transform rotate - coordinate recount */\n        let powHeight = height**2;\n        let powWidth =  width**2;\n\n        let pythagoras = Math.sqrt(powHeight + powWidth) / 2;\n        let _angle = Math.atan(height / width);\n        let angle = Math.atan(width / height);\n\n        let _biasFactor = 1;\n        let biasFactor = 1;\n\n        if (transform < 0 || transform > 180)\n            _biasFactor = - 1;\n        if (transform > 90 && transform < 270)\n            biasFactor= -1;\n\n        transform = transform * (Math.PI/180);\n\n        let sinX = Math.sin(biasFactor * angle + _biasFactor * transform);\n        let sinY = Math.sin(biasFactor* _angle + _biasFactor * transform);\n\n        let xFacotr = pythagoras*(-Math.sin(angle)+sinX);\n        let yFactor = pythagoras*(-Math.sin(_angle)+sinY);\n\n        return {xFacotr, yFactor}\n    };\n\n    stopDragNdrop = event => {\n        /** end move element */\n        if (this.state.startDragNdrop) {\n            this.setState({...this.state, startDragNdrop: false})\n            controllerStream.emit(`EventUpdatePosition${this.state.id}`, this.state.posImage);\n        }\n        event.stopPropagation();\n    };\n\n    setCurrentImage = event => {\n        /** set content */\n        const {urlFull} = event;\n        this.setState({...this.state, path: urlFull});\n    };\n\n    setWidth = eventItem => {\n        /** set size w */\n        const {width} = eventItem;\n        this.setState({...this.state, \n            size: {\n                ...this.state.size,\n                w: width,\n            }\n        });\n    }\n\n    setHeight = eventItem => {\n          /** set size h */\n        const {height} = eventItem;\n        this.setState({...this.state, \n            size: {\n                ...this.state.size,\n                h: height,\n            }\n        });\n    }\n\n    saveSize = event => {\n         /** save sizes  */\n        const {size} = event;\n        if (!this.state.getSizeBool){\n        this.setState({\n            ...this.state,\n            getSizeBool: true,\n            countSection: event.countSection,\n            sectionNumber: event.sectionNumber,\n            sizeParentBox: {width: size.width, height: size.height}});\n        } else controllerStream.off(`EventSaveWidth${this.state.targetSection}`,this.saveSize);\n    }\n\n    setBorderRadius = eventItem => {\n        //** saet border-radius */\n        let radius = eventItem.borderRadius > 200 ? 200 : eventItem.borderRadius;\n        radius = eventItem.borderDown < 0 ? 0 : eventItem.borderRadius;\n        this.setState({\n            ...this.state,\n            borderRadius: radius\n        });\n    };\n\n    setOpacity = eventItem => {\n        //** saet opacity */\n        let opacity = eventItem.opacity > 1 ? 1 : eventItem.opacity;\n        opacity = eventItem.opacity < 0 ? 0 : eventItem.opacity;\n            this.setState({\n                ...this.state,\n                opacity: opacity\n            });\n    }\n\n    stopDrag = event => {\n        event.preventDefault();\n    }\n \n    refImage = null;\n    refImageComponent = node => this.refImage = node;\n\n    render(){\n\n        if (this.props.mode === 'dev'){\n            return (\n                <WrapperImg\n                ref = {this.refImageComponent}\n                size = {this.state.size}\n                rotate = {this.state.transformValue}\n                scale = {this.state.scaleValue}\n                onClick = {this.openImageInstruments}\n                onMouseDown = {this.saveCoords}\n                onMouseMove= {this.moveText}\n                onMouseLeave = {this.stopDragNdrop}\n                onMouseUp = {this.stopDragNdrop}\n                onDragStart = {this.stopDrag}\n                coordX = {this.state.posImage ? this.state.posImage.x : null}\n                coordY = {this.state.posImage ? this.state.posImage.y : null}\n                indexZ = {this.state.startDragNdrop}\n                data-imagecomponentwrapper\n                >\n                    <ImageStyle\n                        data-imagecomponent\n                        borderRadius = {this.state.borderRadius}\n                        onDragStart = {this.stopDrag}\n                        opacity = {this.state.opacity}\n                        src = {this.state.path}\n                        alt = 'img'\n                    />\n                </WrapperImg>\n            )\n        } else if (this.props.mode === 'production'){\n            return (\n                <ProductionStyle\n                ref = {this.refImageComponent}\n                size = {this.state.size}\n                rotate = {this.state.transformValue}\n                scale = {this.state.scaleValue}\n                mode = {this.props.mode}\n                coordX = {this.state.posImage ? this.state.posImage.x : null}\n                coordY = {this.state.posImage ? this.state.posImage.y : null}\n                indexZ = {this.state.startDragNdrop}\n                >\n                    <ImageStyle\n                        borderRadius = {this.state.borderRadius}\n                        opacity = {this.state.opacity}\n                        crossOrigin = \"anonymous\"\n                        src = {this.state.path}\n                        alt = 'img'\n                    />\n                </ProductionStyle>\n            )\n        }\n    }\n\n    componentDidMount = () => {\n        controllerStream.on(`EventSetCurrentImage${this.state.id}`, this.setCurrentImage);\n        controllerStream.on(`EventSetOpacity${this.state.id}`, this.setOpacity);\n        controllerStream.on(`EventSetBorderRadius${this.state.id}`,this.setBorderRadius);\n        controllerStream.on(`EventSetWidth${this.state.id}`, this.setWidth);\n        controllerStream.on(`EventSetHeight${this.state.id}`, this.setHeight); \n        controllerStream.on(`EventResize${this.state.id}`,this.rotateEvent);\n        controllerStream.on(`EventScale${this.state.id}`,this.scaleEvent);\n        controllerStream.on(`EventSaveWidth${this.state.targetSection}`, this.saveSize);\n    }\n\n    componentWillUnmount = () => {\n        controllerStream.off(`EventSetOpacity${this.state.id}`, this.setOpacity);\n        controllerStream.off(`EventSetBorderRadius${this.state.id}`,this.setBorderRadius);\n        controllerStream.off(`EventSetCurrentImage${this.state.id}`, this.setCurrentImage);\n        controllerStream.off(`EventSetWidth${this.state.id}`, this.setWidth);\n        controllerStream.off(`EventSetHeight${this.state.id}`, this.setHeight); \n        controllerStream.off(`EventResize${this.state.id}`,this.rotateEvent);\n        controllerStream.off(`EventScale${this.state.id}`,this.scaleEvent);\n        controllerStream.off(`EventSaveWidth${this.state.targetSection}`,this.saveSize);\n    }\n}\n\nexport default Image;","\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport eventEmitter,{controllerStream} from '../../../EventEmitter';\nimport Events from 'events';\nimport styled from 'styled-components';\n\nimport './components.scss';\n\n\n\nconst WrapperText = styled.div.attrs(props => {\n    if (props.mode !== 'production')\n    return ({\n        style: {\n            zIndex: props.indexZ ? '9999' : null,\n            transform: `rotateZ(${props.rotate}deg) scale(${props.scale})`,\n            left: props.coordX ? props.coordX : '50%',\n            top:  props.coordY,\n            transition: `transform  0.3s linear`,\n        }\n    })\n})`\n    position: absolute;\n    font-size: ${props => props.size ? props.size : '120px'};\n    color: ${props => props.textColor};\n    text-align: center;\n    margin: 0;\n    word-break: break-all;\n`;\n\nconst TextStyle = styled.p`\n    width: 100%;\n    height: 100%;\n    font-family: ${props => props.font};\n    text-align: center;\n    margin: 0;\n    user-select: none;\n`;\n\n\nconst ProductionStyle = styled(WrapperText)`\n    left: ${props => props.coordX ? props.coordX : '50%'};\n    top:  ${props => props.coordY};\n    transform: rotate(${props => props.rotate}deg) scale(${props => props.scale});\n`;\n\n\nclass TextComponent extends React.PureComponent {\n\n    resizeStream = new Events();\n\n    static propTypes = {\n        id: PropTypes.oneOfType([\n            PropTypes.string,\n            PropTypes.number\n        ]).isRequired,\n        targetSection: PropTypes.string,\n        sizeParentBox: PropTypes.object,\n        mode: PropTypes.string.isRequired,\n    }\n\n    state = {\n        id: this.props.id,\n        istrumentsActive: false,\n        isHaveSize: false,\n        parent: this.props.sizeParentBox,\n        targetSection: this.props.targetSection,\n        colorText: this.props.color,\n        sizeText: this.props.fontSize || this.props.size,\n        shiftCoords: null,\n        position: this.props.coords,\n        transformValue: this.props.rotate || 0,\n        scaleValue: this.props.scale || 1,\n        font: this.props.font ? this.props.font : 'Arial',\n        startDragNdrop: false,\n        contentText: this.props.content ? this.props.content : null,\n        countSection: 0,\n        sectionNumber: 0,\n        getSizeBool: false,\n    }\n\n    openTitleInstruments = event => {\n         const componentsPatternText = {\n            id: this.state.id,\n            targetSection: this.state.targetSection,\n            type: 'text',\n            rotate: this.state.transformValue,\n            scale: this.state.scaleValue,\n            font: this.state.font,\n            color: this.state.colorText,\n            fontSize: this.state.sizeText || 120,\n            content: this.state.contentText,\n            coords: {...this.state.position}, // x, y\n        };\n        eventEmitter.emit(`EventInstrumentPanel`,{\n                type: 'text',\n                targetSection: this.state.targetSection,\n                id: this.state.id,\n                componentStats: componentsPatternText,\n                sizeTextValue: this.state.sizeText\n        });\n        this.setState({...this.state, istrumentsActive: true});\n        event.stopPropagation();\n    }\n\n    changeColorText = colorRGB => {\n        if (typeof colorRGB === 'string')\n            this.setState({\n                ...this.state,\n                colorText: colorRGB\n            });\n    };\n\n    changeSizeText = eventSize => {\n        this.setState({...this.state, sizeText: eventSize.size});\n    };\n\n    saveSize = event => {\n        const {size} = event;\n        if (!this.state.getSizeBool){\n        this.setState({\n            ...this.state,\n            getSizeBool: true,\n            countSection: event.countSection,\n            sectionNumber: event.sectionNumber,\n            parent: {width: size.width, height: size.height}});\n        } else controllerStream.off(`EventSaveWidth${this.state.targetSection}`,this.saveSize);\n    }\n\n    changeContentText = eventContent => {\n        let booldContent = eventContent.content || eventContent.content === '';\n        if (booldContent)\n            this.setState({\n                ...this.state,\n                contentText: eventContent.content\n            });\n    };\n\n    saveCoords = event => {\n        const element = this.refText.getBoundingClientRect();\n        const cords = {\n            left: element.left,\n            top: element.top,\n            width: element.right - element.left,\n            height: element.bottom - element.top\n        }\n\n        const resizeStart = event.target.classList[0] === 'resizeDoted'\n\n        this.setState({\n            ...this.state,\n            shiftCoords: {x: event.clientX - cords.left, y: event.clientY - cords.top},\n            startDragNdrop: !this.state.startDragNdrop ? true : false,\n            resizeStart: resizeStart,\n        });\n\n        event.stopPropagation();\n    };\n\n    setFont = eventItem => {\n        /** set type font */\n        this.setState({\n            ...this.state,\n            font: eventItem.font\n        });\n    };\n\n    checkPivotPosition = (coordX, coordY) => {\n        const element = this.refText.getBoundingClientRect();\n        const borderTopLeft = 0;\n        const borderDown = 800 - element.height;\n        const borderRight = this.props.sizeParentBox.width - element.width;\n\n        if (coordY < borderTopLeft) coordY = borderTopLeft;\n        if (coordY > borderDown) coordY = borderDown;\n        if (coordX < borderTopLeft) coordX = borderTopLeft;\n        if (coordX > borderRight) coordX = borderRight;\n\n        return {x: coordX, y: coordY};\n    }\n\n    move = (x,y) => this.setState({...this.state, position: {x: x, y: y}});\n\n    moveText = event => {\n        if (this.state.startDragNdrop && this.state.istrumentsActive){\n            const element = this.refText.getBoundingClientRect();\n            let sectionNum = this.state.sectionNumber === 0 ? 1 : this.state.sectionNumber;\n            let xItem = event.clientX - (this.props.sizeParentBox.left  * sectionNum);\n            let yItem = event.clientY - (this.props.sizeParentBox.top * sectionNum);\n            let factorCoord = this.diffAngle(parseInt(this.state.transformValue),element.height,element.width);\n\n            let coordX = xItem - this.state.shiftCoords.x + factorCoord.xFacotr;\n            let coordY = yItem - this.state.shiftCoords.y + factorCoord.yFactor;\n\n            let coords = this.checkPivotPosition(coordX,coordY);\n\n            let convertToPercentX = coords.x * 100 / this.state.parent.width;\n            let convertToPercentY = coords.y * 100 / this.state.parent.height;\n\n            this.move(convertToPercentX.toFixed(2) + '%',\n                      convertToPercentY.toFixed(2) + '%');\n        }\n        event.stopPropagation();\n    };\n\n\n    rotateEvent = eventItem => {\n        const angle = eventItem.angle;\n        this.setState({\n            ...this.state,\n            transformValue: angle,\n        });\n    }\n\n    scaleEvent = eventItem => {\n        const scale = eventItem.scale;\n        this.setState({\n            ...this.state,\n            scaleValue: scale,\n        });\n    }\n\n    diffAngle = (transform, height, width) => {\n\n        let powHeight = height**2;\n        let powWidth =  width**2;\n\n        let pythagoras = Math.sqrt(powHeight + powWidth) / 2;\n        let _angle = Math.atan(height / width);\n        let angle = Math.atan(width / height);\n\n        let _biasFactor = 1;\n        let biasFactor = 1;\n\n        if (transform < 0 || transform > 180)\n            _biasFactor = - 1;\n        if (transform > 90 && transform < 270)\n            biasFactor= -1;\n\n        transform = transform * (Math.PI/180);\n\n        let sinX = Math.sin(biasFactor * angle + _biasFactor * transform);\n        let sinY = Math.sin(biasFactor* _angle + _biasFactor * transform);\n\n        const xFacotr = pythagoras * (-Math.sin(angle) + sinX);\n        const yFactor = pythagoras * (-Math.sin(_angle) + sinY);\n\n        return {xFacotr, yFactor}\n    };\n\n\n    stopDragNdrop = event => {\n\n        if (this.state.startDragNdrop)\n            this.setState({...this.state, startDragNdrop: false},\n            () => controllerStream.emit(`EventUpdatePosition${this.state.id}`, this.state.position));\n        event.stopPropagation();\n    };\n\n    stopDrag = event => {\n        event.preventDefault();\n    }\n\n    refText = null;\n    refTextComponent = node => this.refText = node;\n\n\n    render(){\n        if (this.props.mode === 'dev'){\n            return (\n                <WrapperText\n                    ref  = {this.refTextComponent}\n                    onClick={this.openTitleInstruments}\n                    textColor = {this.state.colorText ? this.state.colorText : 'red'}\n                    size = {this.state.sizeText ? this.state.sizeText + 'px' : '120px'}\n                    onMouseDown = {this.saveCoords}\n                    onMouseMove= {this.moveText}\n                    onMouseLeave = {this.stopDragNdrop}\n                    onMouseUp = {this.stopDragNdrop}\n                    rotate = {this.state.transformValue}\n                    onDragStart = {this.stopDrag}\n                    scale = {this.state.scaleValue}\n                    coordX = {this.state.position ? this.state.position.x : null}\n                    coordY = {this.state.position ? this.state.position.y : null}\n                    indexZ = {this.state.startDragNdrop}\n                    data-textcomponent\n                >\n                    <TextStyle font = {this.state.font}>{this.state.contentText}</TextStyle>\n                </WrapperText>\n            ) \n        } else if (this.props.mode === 'production'){\n            return (\n                <ProductionStyle\n                    ref  = {this.refTextComponent}\n                    mode = {this.props.mode}\n                    scale = {this.state.scaleValue}\n                    rotate = {this.state.transformValue}\n                    textColor = {this.state.colorText ? this.state.colorText : 'red'}\n                    size = {this.state.sizeText ? this.state.sizeText + 'px' : '120px'}\n                    coordX = {this.state.position ? this.state.position.x : null}\n                    coordY = {this.state.position ? this.state.position.y : null}\n                    indexZ = {this.state.startDragNdrop}\n                >\n                    <TextStyle font = {this.state.font}>{this.state.contentText}</TextStyle>\n                </ProductionStyle>\n            )\n        }\n\n    }\n\n    componentDidMount = () => {\n        controllerStream.on(`EventChangeColorText${this.state.id}`, this.changeColorText);\n        controllerStream.on(`EventSetFont${this.state.id}`, this.setFont);\n        controllerStream.on(`EventChangeSize${this.state.id}`, this.changeSizeText);\n        controllerStream.on(`EventChangeContentText${this.state.id}`, this.changeContentText);\n        controllerStream.on(`EventSaveWidth${this.state.targetSection}`,this.saveSize);\n        controllerStream.on(`EventResize${this.state.id}`,this.rotateEvent);\n        controllerStream.on(`EventScale${this.state.id}`,this.scaleEvent);\n    }\n\n    componentWillUnmount = () => {\n        controllerStream.off(`EventChangeColorText${this.state.id}`, this.changeColorText);\n        controllerStream.off(`EventSetFont${this.state.id}`, this.setFont);\n        controllerStream.off(`EventChangeSize${this.state.id}`, this.changeSizeText);\n        controllerStream.off(`EventChangeContentText${this.state.id}`, this.changeContentText);\n        controllerStream.off(`EventSaveWidth${this.state.targetSection}`,this.saveSize);\n        controllerStream.off(`EventResize${this.state.id}`,this.rotateEvent);\n        controllerStream.off(`EventScale${this.state.id}`,this.scaleEvent);\n    }\n}\n\nexport default TextComponent;","import React from 'react';\n\nimport Input from './buildComponents/components/Input';\nimport Media from './buildComponents/components/Media';\nimport Image from './buildComponents/components/Image';\nimport TextComponent from './buildComponents/components/Text';\nimport BackgroundComponent from './buildComponents/components/Background';\n\nconst builderHOC = item => Component => {\n        /** Builder editable components */\n        if (item.type === 'background') Component = BackgroundComponent;\n        else if (item.type === 'input') Component = Input;\n        else if (item.type === 'media') Component = Media;\n        else if (item.type === 'image') Component = Image;\n        else if (item.type === 'text') Component = TextComponent;\n\n        return <Component key = { `${item.type}${item.id}`} {...item.props} />\n};\n\nexport default builderHOC;","import React,{Fragment} from 'react';\nimport PropTypes from 'prop-types';\nimport {Redirect} from 'react-router-dom';\nimport {connect} from 'react-redux';\n/** Redux actions */\nimport {loadCurrentProjectAction, exitProjectAction} from '../../redux/actions';\n/* ------- Child components ------- */\nimport Section from '../../components/buildComponents/section';\nimport builderHOC from '../../components/builderHOC';\nimport Loader from '../../components/loading/Loader';\nimport Header from '../../components/header/Header';\n/* HOC */\nimport withFirebase from '../../components/withFirebase';\nimport './production.scss';\n\nclass Production extends React.PureComponent {\n\n    static propTypes = {\n        firebase: PropTypes.object,\n    }\n\n    state = {\n        idProject: parseInt(this.props.match.params.param), /** @Id project */\n        mode: 'production', /** @workMode */\n        projectEmpty: false, /** @Bool detected project undefiend */\n        isLoadComponents: true, /** @Bool load all necessary components  */\n        componentsProdJSX: [] /** @Array with JSX */\n    }\n\n    makeProduction = (array) => {\n        /* build components */\n        let {componentsProdJSX} = this.state;\n        let _components = [];\n\n        array.forEach(item => {\n\n            const itemHash = {\n                props: {\n                    ...item,\n                    mode: 'production',\n                },\n                type: item.type,\n                id: item.id,\n            }\n            const patternJSX = {\n                id: item.id,\n                targetSection: item.targetSection,\n                component: builderHOC(itemHash)(Fragment)\n            };\n                _components.push(patternJSX);\n        });\n            this.setState({\n                ...this.state,\n                isLoadComponents: false,\n                componentsProdJSX: [...componentsProdJSX, ..._components],\n            });\n    };\n\n    prodRef = null;\n    mainProductionRef  = node => node ?\n    this.prodRef = {data: node.getBoundingClientRect(), node: node} : node;\n\n    render(){\n\n        const {userData} = this.props;\n        const {currentProjectsData} = userData;\n        const section = currentProjectsData.sectionsProject;\n\n        if (this.state.projectEmpty) return <Redirect to = '/Cabinet' />\n\n        if (userData.active && currentProjectsData.loadProject){\n            return (\n                <Fragment>\n                    <Header key = 'Header' title = \"Constructor\" idUser = {userData.idUser} />\n                    <div\n                        ref = {this.mainProductionRef}\n                        className = 'Production'\n                        key = 'Production'\n                        >\n                        {!this.state.isLoadComponents ?\n                            section.length &&\n                                <Section \n                                    key = 'section'\n                                    mode = {this.state.mode}\n                                    currentProjectsData = {currentProjectsData}\n                                    componentsProdJSX = {this.state.componentsProdJSX}\n                                    section = {section}\n                                />\n                            : null\n                        }\n                    </div>\n                </Fragment>\n            )\n        } else if (!this.props.firebase.getCurrentUser()) return <Redirect to = '/' />\n        else return <Loader  key = 'Loader' path = '/img/loading.gif' type = 'production' />\n    }\n\n    componentDidUpdate = () => {\n        let {userData} = this.props;\n        let {currentProjectsData} = userData;\n\n        if (userData.active && !currentProjectsData.loadProject) {\n            /** load current project of user session active and load project - false */\n            const current =  userData.projects.find(item => item.id === this.state.idProject)\n            if (current)\n            this.props.dispatch(loadCurrentProjectAction({\n                id: current.id,\n                typeProject: current.type,\n                sectionsProject: [...current.sectionsProject],\n                components: [...current.components]\n            })) /* else redirect */\n            else this.setState({...this.state, projectEmpty: true});\n        }\n\n        if (this.state.isLoadComponents && currentProjectsData.loadProject)\n            /* if all components load build our JSX */\n            this.makeProduction(currentProjectsData.components);\n\n    }\n\n\n    componentDidMount = () => {\n        let {userData} = this.props;\n        let {currentProjectsData} = userData;\n\n        if (userData.active && !currentProjectsData.loadProject) {\n            /** if user active and project load - false */\n            const current =  userData.projects.find(item => item.id === this.state.idProject)\n            this.props.dispatch(loadCurrentProjectAction({\n                id: current.id,\n                sectionsProject: [...current.sectionsProject],\n                typeProject: current.type,\n                components: [...current.components]\n            })); /** else render loader */\n        };\n\n    }\n\n    componentWillUnmount = () => {\n        let {userData} = this.props;\n        if (userData.active)  this.props.dispatch(exitProjectAction(true));\n    }\n\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        userData: {\n            active: state.cabinet.active,\n            idUser: state.cabinet.idUser,\n            projects: [...state.cabinet.projects],\n           currentProjectsData: {...state.builder}\n        },\n    }\n};\n\n  export default connect(mapStateToProps)(withFirebase(Production));","import React,{Fragment} from 'react';\nimport PropTypes from 'prop-types';\nimport {Redirect} from 'react-router-dom';\nimport {connect} from 'react-redux';\n\n\nimport withFirebase from '../../components/withFirebase';\nimport Header from '../../components/header/Header';\nimport Loader from '../../components/loading/Loader';\n\nimport './about.scss';\n\nclass About extends React.PureComponent {\n\n    static propTypes = {\n        config: PropTypes.object.isRequired, /** @Config app */\n        firebase: PropTypes.object.isRequired, /** @firebase class for use firebase functions */\n        history: PropTypes.object, /** @Router HTML5 history */\n        location: PropTypes.object, /** @Router */\n        match: PropTypes.object, /** @Router */\n    }\n\n    state = {\n        config: this.props.config\n    };\n\n    render(){\n\n        let user = this.props.firebase.getCurrentUser();\n        if (user && this.props.idUser) {\n            const { config } = this.state;\n            return (\n                <Fragment>\n                    <Header title = {config.title} idUser = {user.uid} />\n                    <section className = 'About'>\n                        <div className = 'container'>\n                            <div className = 'col-12'>\n                                <div className = 'About__information'>\n                                <img alt = 'img'\n                                    className = 'information__logoAbout' \n                                    src = {process.env.PUBLIC_URL + '/img/about.jpg'}\n                                />\n                                    <p className ='developer'><span>Developer:</span>\n                                                            {config.about.developer}\n                                    </p>\n                                    <p className = 'year'><span>Year:</span> {config.about.year}</p>\n                                </div>\n                            </div>\n                        </div>\n                    </section>\n                </Fragment>\n            )\n        } else if (!user) return <Redirect to = { '/'} />\n        else return <Loader path = '/img/loading.gif' type = 'About' />\n\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n      idUser: state.cabinet.idUser,\n    }\n  };\n\nexport default connect(mapStateToProps)(withFirebase(About));","import {errorAction, loadUpdateCurrentProject} from '../actions';\n\nconst updateMiddleware = (item) => async (dispatch,getState, {firebase}) => {\n    /** Save new updates for projects */\n    let newProjects = item.projects.map(project => {\n        if (project.id === item.idProject) {\n            project.components = [...item.components]\n            project.sectionsProject = [...item.sectionsProject]\n        }\n        return project;\n    });\n    await firebase.db.collection(\"users\").doc(item.uid).update({\n        'projects': JSON.parse(JSON.stringify(newProjects))\n    })\n    .then(response => {\n        /** find and save updates */\n        let project = item.projects.find(itemdb => itemdb.id === item.idProject);\n        dispatch(loadUpdateCurrentProject({\n            components: [...project.components],\n            idProject: item.idProject,\n            sectionsProject: item.sectionsProject,\n        }))\n    })\n    .catch(error => dispatch(errorAction(error.message)));\n};\n\nexport default updateMiddleware;","import React from 'react';\nimport eventEmitter from '../EventEmitter';\nimport {animateScroll as scroll, scroller } from \"react-scroll\";\n\n\nconst withScroll = Component => {\n    return class ScrollMove extends React.PureComponent {\n\n        state = {\n            mode: 'default',\n            scrollConfig: {\n                duration: 1000,\n                delay: 50,\n                smooth: true,\n                offset: -60\n            },\n            position: 0,\n            positionCount: null\n\n        }\n\n        setStates = event => {\n            /** Count all positions */\n            this.setState({...this.state,positionCount: event});\n        }\n\n        blockMove = event => {\n            /** block for move */\n            this.setState({...this.state, mode: event})\n        }\n\n        moveLocation = event => {\n            /** Scrolling */\n            if (this.state.mode === 'default'){\n                const count = this.state.positionCount;\n                const moveDown = this.state.position < count && event.deltaY > 0;\n                const moveUp = event.deltaY < 0 && this.state.position > 0;\n                eventEmitter.emit('EventClosePanel',{close: false});\n\n                if (moveDown)\n                    this.setState({ position: this.state.position + 1},\n                        () => scroller.scrollTo(`element${this.state.position}`,this.state.scrollConfig));\n                    else if (moveUp){\n                        this.state.position === 1 &&\n                            this.setState({position: this.state.position - 1}, () => scroll.scrollToTop());\n                        this.state.position !== 1 &&\n                            this.setState({position: this.state.position - 1},\n                                () => scroller.scrollTo(`element${this.state.position}`,this.state.scrollConfig));\n                    }\n            }\n\n        }\n\n\n        render(){\n            return (\n                <React.Fragment>\n                        <div key = 'moveScroll' onWheel = {this.moveLocation} onTouchStart = {() => false}\n                        >\n                            {<Component {...this.props} />}\n                        </div>\n                </React.Fragment>\n            )\n        }\n\n        componentDidMount = () => {\n            eventEmitter.on('EventBlockScroll', this.blockMove);\n            eventEmitter.on('EventSetState', this.setStates);\n        }\n\n        componentWillUnmount = () => {\n            eventEmitter.off('EventBlockScroll', this.blockMove);\n            eventEmitter.off('EventSetState', this.setStates);\n        }\n    }\n}\n\n\nexport default withScroll;","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport './Viewer.scss';\n\nfunction Viewer(props){\n\n    let [mode] = useState(props.mode);\n    let [path] = useState(props.path);\n\n    const closeViewer = event => {\n        props.eventStreamBuild.emit(\"EventView\", { action: false, target: null});\n        event.stopPropagation();\n    }\n\n    return (\n        \n        <div onClick = {closeViewer} className = 'Viewer'>\n            {(mode === 'image' || mode === 'background') ? <img src = {path} alt = 'fullImage' /> \n            : \n            <iframe \n            src= {`https://www.youtube.com/embed/${props.iframe}`}\n            title = 'youtube'\n            frameBorder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" \n            allowFullScreen>\n            </iframe>\n            }\n        </div>\n    )\n}\n\nViewer.propTypes = {\n    eventStreamBuild: PropTypes.object.isRequired, // events stream\n    mode: PropTypes.string, // use mode\n    path: PropTypes.string // path to data component\n}\n\nexport default Viewer;","import React,{Fragment} from 'react';\nimport PropTypes from 'prop-types';\nimport {SketchPicker} from 'react-color';\n\n\nconst InputInstruments = props => {\n\n    let {colorPickerActive} = props.instrumentPanel;\n    let {content} = props.componentStats;\n    let {fontSize} = props.componentStats;\n    let {coords} = props.componentStats;\n    let {size} = props.componentStats;\n\n    let _content = content !== '' ? 'Input' : '';\n\n    return (\n        <Fragment>\n            <p className = 'titleInstument'>Position: </p>\n            <span className = 'textCoordsPanel'>\n            {coords.x ?\n                coords.x + ' / ' + coords.y : ' drop for active'}\n            </span>\n            <p className = 'titleInstument'>Color: </p>\n            <div className = 'controllersText'>\n                <input \n                    onClick = {props.cbSetColor}\n                    className = 'button_switch color_switch'\n                    type = 'button'\n                    value = 'color pick'\n                />\n            </div>\n                { colorPickerActive ?\n                    <div className ='wrapperColorPicker'>\n                        <SketchPicker\n                        onChangeComplete={props.cbHandleChangeComplete}\n                        color = {props.color ? props.color : 'white'}\n                        />\n                    </div>\n                    : null\n                }\n            <p className = 'titleInstument'>Size (%):</p>\n            <div className = 'controllersText'>\n                <input\n                    className = 'button_switch'\n                    onChange = {props.cbSetWidth}\n                    type=\"number\"\n                    min = '10' max = '200'\n                    value = {size.w ? size.w : 100}\n                />\n                <input \n                    className = 'button_switch'\n                    onChange = {props.cbSetHeight}\n                    type=\"number\"\n                    min = '10' max = '200'\n                    value = {size.h ? size.h : 50}\n                />\n            </div>\n            <p className = 'titleInstument'>Text size: </p>\n            <input \n                className = 'button_switch'\n                onChange = {props.cbSetSize}\n                type=\"number\"\n                min = '10' max = '200'\n                value = {fontSize ? fontSize : 21}\n            />\n            <p className = 'titleInstument'>Border radius: </p>\n            <input\n                onChange = {props.cbSetBorderRadius}\n                className = 'button_switch radius'\n                type=\"number\"\n                value = {props.componentStats.borderRadius ?\n                            props.componentStats.borderRadius : 10\n                        }\n                min = '10' max = '200'\n            />\n\n            <p className = 'titleInstument'>Type input: </p>\n            <select \n            value = {props.componentStats.typeInput} \n            onChange = {props.cbSetType}\n            className = 'button_switch button_switch_type'>\n                <option>button</option>\n                <option>text</option>\n                <option>password</option>\n            </select>\n            <p className = 'titleInstument'>Content: </p>\n            <input\n            className = 'button_switch'\n            onChange = {props.cbSetContent}\n            maxLength = '100'\n            type = 'text'\n            value = {content ? content : _content}\n        />\n            <input \n                onClick = {props.cbDelete}\n                className = 'instrumentPanel__deleteComponentButton'\n                type=\"button\"\n                value = 'delete'\n            />\n        </Fragment>\n    )\n};\n\nInputInstruments.propTypes = {\n    componentStats: PropTypes.object.isRequired, // object with current component data\n    cbSetColor: PropTypes.func.isRequired, // callback set color\n    cbHandleChangeComplete: PropTypes.func.isRequired, // callback state color picker\n    cbSetWidth: PropTypes.func.isRequired, // callback set width\n    cbSetHeight: PropTypes.func.isRequired, // callback set height\n    cbSetSize: PropTypes.func.isRequired, // callback set size\n    cbSetBorderRadius: PropTypes.func.isRequired, // callback set border-radius\n    cbSetContent: PropTypes.func.isRequired, // callback set content input\n    cbDelete: PropTypes.func.isRequired, // callback delete\n}\n\nexport default InputInstruments;","import React,{Fragment} from 'react';\nimport PropTypes from 'prop-types';\n\nconst MediaInstruments = props => {\n\n    let {size} = props.componentStats;\n    let {coords} = props.componentStats;\n\n    return (\n        <Fragment>\n            <p className = 'titleInstument'>Position: </p>\n            <span className = 'textCoordsPanel'>\n            {coords.x ?\n                coords.x + ' / ' + coords.y : ' drop for active'}\n            </span>\n            <p className = 'titleInstument'>Size (%):</p>\n            <div className = 'controllersText media'>\n                <input\n                    className = 'button_switch'\n                    onChange = {props.cbSetWidth}\n                    type=\"number\"\n                    min = '10' max = '100'\n                    value = {size.w ? size.w : 30}\n                />\n                <input \n                    className = 'button_switch'\n                    onChange = {props.cbSetHeight}\n                    type=\"number\"\n                    min = '10' max = '100'\n                    value = {size.h ? size.h : 50}\n                />\n            </div>\n            <p className = 'titleInstument'>Content: </p>\n            <input \n                onClick = {props.cbSearch}\n                className = 'ImageSearchButton'\n                type=\"button\"\n                value = 'search media'\n            />\n            <input \n                onClick = {props.cbDelete}\n                className = 'instrumentPanel__deleteComponentButton'\n                type=\"button\"\n                value = 'delete'\n            />\n        </Fragment>\n    )\n};\n\nMediaInstruments.propTypes = {\n    componentStats: PropTypes.object.isRequired, // object with current component data\n    cbSearch: PropTypes.func.isRequired, // callback search\n    cbSetWidth: PropTypes.func.isRequired, // callback set width\n    cbSetHeight: PropTypes.func.isRequired, // callback set height\n    cbDelete: PropTypes.func.isRequired, // callback delete\n}\n\nexport default MediaInstruments;","import React, {Fragment} from 'react';\nimport PropTypes from 'prop-types';\n\nconst ImageInstruments = props => {\n\n    let {coords} = props.componentStats;\n    let {size} = props.componentStats;\n    let {rotate} = props.componentStats;\n    let {scale} = props.componentStats;\n    let fileRef = React.createRef();\n    return (\n        <Fragment>\n        <p className = 'titleInstument'>Position: </p>\n        <span className = 'textCoordsPanel'>\n        {coords.x ?\n            coords.x + ' / ' + coords.y : ' drop for active'}\n        </span>\n        <p className = 'titleInstument'>Size (%):</p>\n        <div className = 'controllersText'>\n            <input\n                className = 'button_switch size'\n                onChange = {props.cbSetWidth}\n                type=\"number\"\n                min = '10' max = '100'\n                value = {size.w ? size.w : 30}\n            />\n            <input \n                className = 'button_switch size'\n                onChange = {props.cbSetHeight}\n                type=\"number\"\n                min = '10' max = '100'\n                value = {size.h ? size.h : 30}\n            />\n        </div>\n        <p className = 'titleInstument'>Rotate/Scale:</p>\n        <div className = 'controllersText'>\n            <input\n            className = 'button_switch rotate'\n            onChange = {props.cbRotate}\n            type=\"number\"\n            min = '0' max = '360'\n            value = {rotate ? rotate : 0}\n            />\n            <input\n            className = 'button_switch scale'\n            onChange = {props.cbScale}\n            type=\"number\"\n            step = '0.1'\n            min = '0' max = '2'\n            value = {scale ? scale : 1}\n            />\n        </div>\n        <p className = 'titleInstument'>Border radius: </p>\n            <input\n                onChange = {props.cbSetBorderRadius}\n                className = 'button_switch radius'\n                type=\"number\"\n                value = {props.componentStats.borderRadius ?\n                            props.componentStats.borderRadius : 10\n                        }\n                min = '10' max = '200'\n            />\n            <p className = 'titleInstument titleInstrument__opacity'>Opacity: </p>\n            <input \n                onChange = {props.cbSetOpacity}\n                className = 'ImageSearchButton'\n                type=\"number\"\n                value = {props.componentStats.opacity ?\n                    props.componentStats.opacity : 1\n                }\n                step = '0.1'\n                min = '0' max = '1'\n            />\n            <p className = 'titleInstument titleInstrument__opacity'>Loader: </p>\n            <div className = 'controllersText'>\n                <div className = 'fileLoader'>\n                    <input \n                        onClick = {props.cbSearch}\n                        className = 'ImageSearchButton file'\n                        type=\"button\"\n                        value = 'search image'\n                    />\n                    <input\n                        ref = {fileRef}\n                        className = 'fileInput'\n                        onChange = {props.cbLoadFile}\n                        accept=\"image/*\"\n                        type=\"file\"\n                    />\n                    <input\n                        className = 'ImageSearchButton file'\n                        type = 'button'\n                        value = 'loading file'\n                    />\n\n                </div>\n            </div>\n            <input \n                onClick = {props.cbDelete}\n                className = 'instrumentPanel__deleteComponentButton'\n                type=\"button\"\n                value = 'delete'\n            />\n        </Fragment>\n    )\n\n}\n\nImageInstruments.propTypes = {\n    componentStats: PropTypes.object.isRequired, // object with current component data\n    cbSetWidth: PropTypes.func.isRequired, // callback set width\n    cbSetHeight: PropTypes.func.isRequired, // callback set height\n    cbSetBorderRadius: PropTypes.func.isRequired, // callback set border-radius\n    cbSetOpacity: PropTypes.func.isRequired, // callback set opacity\n    cbLoadFile: PropTypes.func.isRequired, // callback load file\n    cbSearch: PropTypes.func.isRequired, // callback search\n    cbDelete: PropTypes.func.isRequired, // callback delete\n}\n\nexport default ImageInstruments;","import React, {Fragment} from 'react';\nimport PropTypes from 'prop-types';\nimport {SketchPicker} from 'react-color';\n\nconst BackgroundInstruments = props => {\n    let  {targetSection} = props.componentStats;\n    return (\n        <Fragment>\n        <p className = 'titleInstument'>Color: </p>\n        <input\n            onClick = {props.cbSetColor}\n            className = 'button_switch Color'\n            type = 'button'\n            value = 'color pick'\n        />\n            { props.colorPickerActive ?\n                <SketchPicker\n                    onChangeComplete={props.cbHandleChangeComplete}\n                    color = {props.color ? props.color : 'white'}\n                />\n                : null\n            }\n            <input \n                onClick = {props.cbSearch}\n                className = 'ImageSearchButton'\n                type = 'button'\n                value = 'background-image'\n            />\n            <input\n                disabled = {targetSection === 'Header'}\n                onClick = {props.cbDelete}\n                className = 'instrumentPanel__deleteComponentButton'\n                type=\"button\"\n                value = 'delete'\n            />\n        </Fragment>\n    )\n\n}\n\nBackgroundInstruments.propTypes = {\n    componentStats: PropTypes.object.isRequired, // object with current component data\n    cbSetColor: PropTypes.func.isRequired, // callback set color\n    cbHandleChangeComplete: PropTypes.func.isRequired, // callback picker state change\n    cbSearch: PropTypes.func.isRequired, // callback search\n}\n\nexport default BackgroundInstruments;","import React,{Fragment} from 'react';\nimport {SketchPicker} from 'react-color';\n\nconst TextInstruments = props => {\n\n\n        let {colorPickerActive} = props.instrumentPanel;\n        let {content} = props.componentStats;\n        let {fontSize} = props.componentStats;\n        let {coords} = props.componentStats;\n        let {rotate} = props.componentStats;\n        let {scale} = props.componentStats;\n        let _content = content !== '' ? 'Title' : '';\n        return (\n            <Fragment>\n            <p className = 'titleInstument'>Position: </p>\n            <span className = 'textCoordsPanel'>\n            {coords.x ?\n                coords.x + ' / ' + coords.y : ' drop for active'}\n            </span>\n            <p className = 'titleInstument'>Rotate/Scale:</p>\n            <div className = 'controllersText'>\n                <input\n                className = 'button_switch rotate'\n                onChange = {props.cbRotate}\n                type=\"number\"\n                min = '0' max = '360'\n                value = {rotate ? rotate : 0}\n                />\n                <input\n                className = 'button_switch scale'\n                onChange = {props.cbScale}\n                type=\"number\"\n                step = '0.1'\n                min = '0' max = '2'\n                value = {scale ? scale : 1}\n                />\n            </div>\n            <p className = 'titleInstument'>Color: </p>\n            <input \n                onClick = {props.cbSetColor}\n                className = 'button_switch color'\n                type = 'button'\n                value = 'color pick'\n            />\n            <p className = 'titleInstument'>Text size: </p>\n            <input \n                className = 'button_switch size'\n                onChange = {props.cbSetSize}\n                type=\"number\"\n                min = '10' max = '200'\n                value = {fontSize ? fontSize : 120}\n            />\n                { colorPickerActive ?\n                    <div className ='wrapperColorPicker text'>\n                        <SketchPicker\n                            onChangeComplete={props.cbHandleChangeComplete}\n                            color = {props.color ? props.color : 'red'}\n                        />\n                    </div>\n                    : null\n                }\n                <p className = 'titleInstument'>Font: </p>\n                <select \n                    value = {props.componentStats.font} \n                    onChange = {props.cbSetFont}\n                    className = 'button_switch font'\n                >\n                <option>Arial</option>\n                <option>Times</option>\n                <option>Georgia</option>\n                <option>Impact</option>\n                <option>Tahoma</option>\n                <option>Verdana</option>\n                <option>Comic</option>\n                </select>\n            <p className = 'titleInstument'>Content: </p>\n            <input\n                className = 'button_switch content'\n                onChange = {props.cbSetContent}\n                maxLength = '100'\n                type = 'text'\n                value = {content ? content : _content}\n            />\n            <input \n                onClick = {props.cbDelete}\n                className = 'instrumentPanel__deleteComponentButton'\n                type=\"button\"\n                value = 'delete'\n            />\n            </Fragment>\n        )\n}\n\nexport default TextInstruments;","import React from 'react';\nimport eventEmitter,{controllerStream} from '../../EventEmitter';\nimport PropTypes from 'prop-types';\n\nimport InputInstruments from './InputTools/InputInstruments';\nimport MediaInstruments from './MediaTools/MediaInstruments';\nimport ImageInstruments from './ImageTools/ImageInstruments';\nimport BackgroundInstruments from './BackgroundTools/BackgroundInstruments';\nimport TextInstruments from './TextTools/TextInstruments';\nimport Icon from '../Icon/icon';\n\nimport './instrumentsPanel.scss';\n\n\n\nclass InstrumentsPanel extends React.PureComponent {\n\n    static propTypes = {\n        instrumentPanel:  PropTypes.object.isRequired, /** @Settings for panel and data about component */\n        editComponentName: PropTypes.string, /** @Name editable component */\n        eventStreamBuild: PropTypes.object.isRequired // stream events\n    };\n\n    state = {\n        instrumentPanel: {...this.props.instrumentPanel},\n        componentStats: this.props.componentStats,\n        images: null,\n    };\n\n\n    closePanel = event => {\n        this.props.eventStreamBuild.emit('EventClosePanel', {close: false});\n    };\n\n    setSize = event => {\n        let {id} = this.state.componentStats;\n        let size = event.target.value > 200 ? 200 : event.target.value;\n\n        if (this.state.componentStats.type !== 'input')\n        this.setState({\n            ...this.state, \n            instrumentPanel: {...this.state.instrumentPanel},\n            componentStats: {...this.state.componentStats,fontSize: size}\n        }, () => controllerStream.emit(`EventChangeSize${id}`, {\n                targetSection: this.state.editComponentName, size: size \n        }));\n        else this.setState({\n                ...this.state, \n                instrumentPanel: {...this.state.instrumentPanel},\n                componentStats: {...this.state.componentStats,fontSize: size}\n            }, () => controllerStream.emit(`EventChangeSizeText${id}`, {size: size}\n            ));\n    };\n\n    setFont = event => {\n        let {id} = this.state.componentStats;\n        let fontName = event.target.value;\n        this.setState({\n            ...this.state, \n            instrumentPanel: {...this.state.instrumentPanel},\n            componentStats: {...this.state.componentStats,font: fontName}\n        },\n            () => controllerStream.emit(`EventSetFont${id}`, {\n                targetSection: this.state.editComponentName, font: fontName\n            })\n        );\n    }\n\n    rotate = event => {\n        let {id} = this.state.componentStats;\n        let angle = event.target.value;\n        this.setState({\n            ...this.state, \n            instrumentPanel: {...this.state.instrumentPanel},\n            componentStats: {...this.state.componentStats, rotate: angle}\n        },\n        () => controllerStream.emit(`EventResize${id}`,{angle: angle}));\n        event.stopPropagation();\n    }\n\n    scale = event => {\n        let {id} = this.state.componentStats;\n        let scale = event.target.value;\n        this.setState({\n            ...this.state, \n            instrumentPanel: {...this.state.instrumentPanel},\n            componentStats: {...this.state.componentStats, scale: scale}\n        },\n        () => controllerStream.emit(`EventScale${id}`,{scale: scale}));\n        event.stopPropagation();\n    }\n\n    setIframeContent = eventItem => {\n\n        this.setState({\n            ...this.state,\n            componentStats:{\n                ...this.state.componentStats,\n                content: eventItem.iframe\n            }\n        });\n    }\n\n    setContent = event => {\n        let {id} = this.state.componentStats;\n        let contentValue = event.target.value;\n        this.setState({\n            ...this.state, \n            instrumentPanel: {...this.state.instrumentPanel},\n            componentStats: {...this.state.componentStats,content: contentValue}\n        },\n            () => controllerStream.emit(`EventChangeContentText${id}`,{\n                targetSection: this.state.editComponentName, content: contentValue\n            })\n        );\n        if (event) event.stopPropagation();\n    };\n\n    setWidth = event => {\n        const {id} = this.state.componentStats;\n        const width = event.target.value;\n        this.setState({\n            ...this.state,\n            componentStats: {...this.state.componentStats,\n                size: {\n                    ...this.state.componentStats.size,\n                    w: width\n                }}\n        },\n            () => controllerStream.emit(`EventSetWidth${id}`,{width: width}));\n\n        if (event) event.stopPropagation();\n    };\n\n    setHeight = event => {\n        const {id} = this.state.componentStats;\n        const height = event.target.value;\n        this.setState({\n            ...this.state,\n            componentStats: {...this.state.componentStats,\n                size: {\n                    ...this.state.componentStats.size,\n                    h: height\n                }}\n        },\n            () => controllerStream.emit(`EventSetHeight${id}`,{height: height}));\n\n        if (event) event.stopPropagation();\n    }\n\n    updatePosition = eventItem => {\n        if (!eventItem) return;\n        this.setState({\n            ...this.state, \n            componentStats: {\n                ...this.state.componentStats,\n                coords: {\n                    ...this.state.componentStats.coords,\n                    x: eventItem.x,\n                    y: eventItem.y\n                }\n            }\n        });\n    };\n\n    setColor = event => {\n        this.setState({...this.state,\n            instrumentPanel:{\n                ...this.state.instrumentPanel,\n                colorPickerActive: this.state.instrumentPanel.colorPickerActive ? false : true\n            }\n        });\n        if (event) event.stopPropagation();\n    };\n\n    setType = event => {\n\n        let {id} = this.state.componentStats;\n        let typeInput = event.target.value;\n\n        this.setState({\n            ...this.state,\n            componentStats: {\n                ...this.state.componentStats,\n                typeInput: typeInput\n            }\n        },\n         () => controllerStream.emit(`EventSetType${id}`, typeInput));\n        if (event) event.stopPropagation();\n    }\n\n    setOpacity = event => {\n        let {id} = this.state.componentStats;\n        let opacity = event.target.value;\n\n        this.setState({\n            ...this.state,\n            componentStats: {...this.state.componentStats,opacity: opacity}\n        },\n         () => controllerStream.emit(`EventSetOpacity${id}`, {opacity: opacity}));\n    };\n\n    setBorderRadius = event => {\n        let {id} = this.state.componentStats;\n        let radius = event.target.value;\n\n        this.setState({\n            ...this.state,\n            componentStats: {...this.state.componentStats,borderRadius: radius}\n        },\n         () => controllerStream.emit(`EventSetBorderRadius${id}`, {borderRadius: radius}));\n    };\n\n    updateBimageStats = eventItem => {\n        const {images} = eventItem;\n        if (eventItem.mode !== 'image')\n        this.setState({\n            ...this.state,\n            componentStats:{\n                ...this.state.componentStats,\n                backgroundImage: images.urlFull\n            }\n        });\n        else {\n            this.setState({\n                ...this.state,\n                componentStats:{\n                    ...this.state.componentStats,\n                    image: images.urlFull\n                }\n            });\n        }\n    };\n\n    handleChangeComplete = event => {\n\n        const {rgb} = event;\n        let colorRGB = `rgb(${rgb.r},${rgb.g},${rgb.b},${rgb.a})`;\n\n        let {id} = this.state.componentStats;\n        if (this.state.componentStats.type === 'background'){\n            this.setState({\n                ...this.state,\n                componentStats: {...this.state.componentStats,color: colorRGB}\n            }, () => controllerStream.emit(`EventChangeColorBackground${id}`,\n                        {colorRGB: this.state.componentStats.color}\n                    ));\n        }\n\n        else if (this.state.componentStats.type === 'text') {\n            this.setState({\n                ...this.state,\n                componentStats: {...this.state.componentStats,color: colorRGB}\n            },\n            () => controllerStream.emit(`EventChangeColorText${id}`, colorRGB));\n        }\n\n        else if (this.state.componentStats.type === 'input') {\n            this.setState({\n                ...this.state,\n                componentStats: {...this.state.componentStats,color: colorRGB}\n            },\n            () => controllerStream.emit(`EventChangecolor${id}`, colorRGB));\n        }\n\n    };\n\n    redirectSaveChanges = event => {\n        this.props.eventStreamBuild.emit(\"EventSaveChangesComponent\", {\n            ...this.state.componentStats,\n            id: this.state.componentStats.id,\n            type: this.state.componentStats.type,\n            ms: 0\n        });\n        if (event) event.stopPropagation();\n    }\n\n    saveChanges = event => {\n\n        this.props.eventStreamBuild.emit(\"EventSaveChangesComponent\", {\n                ...this.state.componentStats,\n                id: this.state.componentStats.id,\n                type: this.state.componentStats.type,\n                ms: 1500,\n            });\n\n        eventEmitter.emit('EventRedirectConfirm', true);\n        if (event) event.stopPropagation();\n    }\n\n    deleteComponent = event => {\n        this.props.eventStreamBuild.emit('EventDeleteComponent', {\n            id: this.state.componentStats.id,\n            targetSection: this.state.componentStats.targetSection,\n            type: this.state.componentStats.type\n        });\n    };\n\n    search = event => {\n\n        let {id} = this.state.componentStats;\n        this.props.eventStreamBuild.emit('EventModalSearchOn',{\n            idComponent: id,\n            mode: this.state.componentStats.type\n        });\n\n        event.stopPropagation();\n    };\n\n    loadFile = event => {\n        let {id} = this.state.componentStats;\n        try {\n            let image = event.target.files[0];\n            let reader = new FileReader();\n            if (image.type[0] !== 'i') throw new Error('Invalid file');\n            reader.readAsDataURL(image);\n            reader.onload = (e) => {\n                controllerStream.emit(`EventSetCurrentImage${id}`,{ urlFull: reader.result });\n                this.updateBimageStats({images: { urlFull: reader.result }, mode: 'image'});\n                e.stopPropagation();\n            }\n            reader.onerror = () => {\n                console.error(reader.error);\n            }\n        } catch (error) {\n            console.error(error.message);\n        }\n\n        event.stopPropagation();\n    }\n\n    makePanelInstruments = (type) => {\n            switch (type){\n                case 'text':\n                   return(\n                    <TextInstruments\n                        instrumentPanel = {{...this.state.instrumentPanel}}\n                        componentStats = {{...this.state.componentStats}}\n                        cbSetColor = {this.setColor}\n                        cbSetSize = {this.setSize}\n                        cbHandleChangeComplete = {this.handleChangeComplete}\n                        cbSetContent = {this.setContent}\n                        cbSetFont = {this.setFont}\n                        cbSetOpacity = {this.setOpacity}\n                        color = {this.state.componentStats.color}\n                        cbDelete = {this.deleteComponent}\n                        cbRotate = {this.rotate}\n                        cbScale = {this.scale}\n                    />\n                   )\n                case 'background':\n                    return (\n                        <BackgroundInstruments\n                            colorPickerActive = {this.state.instrumentPanel.colorPickerActive}\n                            componentStats = {{...this.state.componentStats}}\n                            cbSetColor = {this.setColor}\n                            color = {this.state.componentStats.color}\n                            cbHandleChangeComplete = {this.handleChangeComplete}\n                            cbSearch = {this.search}\n                            cbDelete = {this.deleteComponent}\n                        />\n                    )\n                case 'image':\n                        return (\n                            <ImageInstruments\n                                instrumentPanel = {{...this.state.instrumentPanel}}\n                                componentStats = {{...this.state.componentStats}}\n                                cbSearch = {this.search}\n                                cbSetSize = {this.setSize}\n                                cbSetBorderRadius = {this.setBorderRadius}\n                                cbSetOpacity = {this.setOpacity}\n                                cbSetWidth = {this.setWidth}\n                                cbSetHeight = {this.setHeight}\n                                cbLoadFile = {this.loadFile}\n                                cbDelete = {this.deleteComponent}\n                                cbRotate = {this.rotate}\n                                cbScale = {this.scale}\n                            />\n                        )\n                case 'media':\n                        return (\n                            <MediaInstruments\n                                instrumentPanel = {{...this.state.instrumentPanel}}\n                                componentStats = {{...this.state.componentStats}}\n                                cbSearch = {this.search}\n                                cbSetWidth = {this.setWidth}\n                                cbSetHeight = {this.setHeight}\n                                cbDelete = {this.deleteComponent}\n                            />\n                            )\n                case 'input':\n                        return (\n                            <InputInstruments\n                                instrumentPanel = {{...this.state.instrumentPanel}}\n                                componentStats = {{...this.state.componentStats}}\n                                cbSetColor = {this.setColor}\n                                cbSetBorderRadius = {this.setBorderRadius}\n                                cbHandleChangeComplete = {this.handleChangeComplete}\n                                cbSetSize = {this.setSize}\n                                cbSetWidth = {this.setWidth}\n                                cbSetHeight = {this.setHeight}\n                                color = {this.state.componentStats.color}\n                                cbSetContent = {this.setContent}\n                                cbSetType = {this.setType}\n                                cbDelete = {this.deleteComponent}\n                            />\n                        )\n                default: return <p className = 'warningInstruments'>No found element</p>\n            }\n    };\n\n    render(){\n        let { instrumentActive } = this.state.instrumentPanel;\n        return (\n\n                <div  className = 'instumentsPanel'>\n                    <button\n                        onClick = {this.closePanel}\n                        className = 'closeInstrumentsPanel'\n                    >\n                        <Icon path = '/img/close.svg' />\n                    </button>\n                    <h3>Instruments</h3>\n                    {\n                        instrumentActive ? \n                        <p className = 'TextComponent'>{this.state.componentStats.type}</p>\n                        : null\n                    }\n                    {\n                        instrumentActive ?\n                        <div className = 'instuments'>\n                            {this.makePanelInstruments(this.state.componentStats.type)}\n                        </div>\n                        : null\n                    }\n                </div>\n        )\n    };\n\n    componentDidUpdate = (oldProps, oldState) => {\n        if (oldState.componentStats !== this.state.componentStats)\n        this.saveChanges();\n    };\n\n    componentDidMount = event => {\n        eventEmitter.on('EventRedirectSaveChanges', this.redirectSaveChanges);\n        eventEmitter.on(\"EventSetBImageInstumentPanel\", this.updateBimageStats);\n        eventEmitter.on(`EventSetIframe`, this.setIframeContent);\n        controllerStream.on(`EventUpdatePosition${this.state.componentStats.id}`, this.updatePosition);\n    };\n\n    componentWillUnmount = event => {\n        if (this.timer) clearTimeout(this.timer);\n        eventEmitter.off('EventRedirectSaveChanges', this.redirectSaveChanges);\n        eventEmitter.off(\"EventSetBImageInstumentPanel\", this.updateBimageStats);\n        eventEmitter.off(`EventSetIframe`, this.setIframeContent);\n        controllerStream.off(`EventUpdatePosition${this.state.componentStats.id}`, this.updatePosition);\n    };\n};\n\nexport default InstrumentsPanel;","import React,{Fragment} from 'react';\nimport PropTypes from 'prop-types';\nimport Viewer from '../imageViewer/Viewer';\nimport InstrumentsPanel from '../../components/instrumentsPanel/InstrumentsPanel';\nimport ModalWindow from '../../components/modalWindow/ModalWindow';\nimport {CSSTransition} from 'react-transition-group';\n\nclass AdditionalTools extends React.PureComponent{\n\n    static propTypes = {\n        eventStreamBuild: PropTypes.object.isRequired, // events stream\n    }\n\n    state = {\n        modal: {\n            modalSearch: false, /** @bool active modal search image/media */\n            modalSearchMode: null, /** @String work mode of search modal */\n        },\n        modalViewer: {action: false, image: null, mode: null }, /** @Object data with viewer data */\n        instrumentPanel: { /** @Object with data controll instrument panel */\n            colorPickerActive: false,\n            instrumentActive: false,\n        },\n        componentStats: {}, /** @Object with data about components */\n        editComponentName:  this.props.editComponentName, /** @String | @null name current edit component */\n    }\n\n    modalSearchOn = itemEvent => {\n        this.setState({\n            ...this.state,\n            modal:{\n                ...this.state.modal,\n                modalSearch: !this.state.modal.modalSearch,\n                modalSearchMode: itemEvent.mode || null\n            }\n        });\n    }\n\n    ViewerSwitch = itemEvent => {\n        /* set settings for viewer */\n        this.setState({\n            ...this.state,\n            modalViewer: {\n                ...this.state.modalViewer,\n                action: itemEvent.action,\n                target: itemEvent.target,\n                mode: itemEvent.mode,\n                iframe: itemEvent.iframe\n            }\n        });\n    };\n\n    openInstrument = itemEvent => {\n        /* build instrument panel component */\n           const idEqual = this.state.componentStats.id === itemEvent.componentStats.id;\n           if (!idEqual || !this.state.instrumentPanel.instrumentActive)\n           this.setState({\n               ...this.state,\n               editComponentName: itemEvent.targetSection,\n               componentStats: {\n                   ...this.state.componentStats,\n                   ...itemEvent.componentStats\n               },\n               instrumentPanel: {\n                   ...this.state.instrumentPanel,\n                   instrumentActive: true,\n               }\n           });\n   }\n\n   closePanel = itemEvent => {\n        /* unmount unstrument panel component */\n       this.setState({\n           ...this.state,\n           instrumentPanel: {\n               ...this.state.instrumentPanel,\n               colorPickerActive: false,\n               instrumentActive: itemEvent.close\n           }\n       });\n   };\n\n    render(){\n        const props = this.props;\n        if (this.state.instrumentPanel.instrumentActive){\n            return (\n                <Fragment key = 'AdditionalBuild'>\n                    <CSSTransition\n                        in={this.state.modalViewer.action}\n                        timeout={300}\n                        classNames=\"modalAnimation\"\n                        unmountOnExit\n                        appear\n                    >\n                        <Viewer\n                            key = 'ImageViewer'\n                            eventStreamBuild = {props.eventStreamBuild}\n                            mode = {this.state.modalViewer.mode}\n                            path = {this.state.modalViewer.target}\n                            iframe = {this.state.modalViewer.iframe}\n                        />\n                    </CSSTransition>\n                    <CSSTransition\n                        in={this.state.modal.modalSearch}\n                        timeout={300}\n                        classNames=\"modalAnimation\"\n                        unmountOnExit\n                        appear\n                    >\n                            <ModalWindow\n                                eventStreamBuild = {props.eventStreamBuild}\n                                idComponent = {this.state.componentStats.id}\n                                modalSearchMode = {this.state.modal.modalSearchMode}\n                                key = 'ModalWindow' workMode = 'Search'\n                            />\n                    </CSSTransition>\n                        <InstrumentsPanel\n                            key = {`InstrumentsPanel${this.state.componentStats.id}`}\n                            eventStreamBuild = {props.eventStreamBuild}\n                            editComponentName = {this.state.editComponentName}\n                            componentStats = {this.state.componentStats}\n                            instrumentPanel = {this.state.instrumentPanel}\n                        />\n                </Fragment>\n            )\n        } else return <Fragment></Fragment>;\n    }\n\n    componentDidMount = () => {\n        this.props.eventStreamBuild.on('EventModalSearchOn', this.modalSearchOn);\n        this.props.eventStreamBuild.on('EventView', this.ViewerSwitch);\n        this.props.eventStreamBuild.on('EventClosePanel', this.closePanel);\n        this.props.eventEmitter.on('EventInstrumentPanel', this.openInstrument);\n    }\n\n    componentWillUnmount = () => {\n        this.props.eventStreamBuild.off('EventModalSearchOn', this.modalSearchOn);\n        this.props.eventEmitter.off('EventInstrumentPanel', this.openInstrument);\n        this.props.eventStreamBuild.off('EventView', this.ViewerSwitch);\n        this.props.eventStreamBuild.off('EventClosePanel', this.closePanel);\n    }\n\n}\n\n\n\nexport default AdditionalTools;","import React,{Fragment} from 'react';\nimport PropTypes from 'prop-types';\n\nimport Input from '../buildComponents/components/Input';\nimport Media from '../buildComponents/components/Media';\nimport Image from '../buildComponents/components/Image';\nimport TextComponent from '../buildComponents/components/Text';\nimport BackgroundComponent from '../buildComponents/components/Background';\n\nimport './buildMenu.scss';\n\nclass BuildMenu extends React.PureComponent {\n\n    static propTypes = {\n        mode: PropTypes.string.isRequired, /** @String work mode component */\n        editComponentName: PropTypes.string,\n        eventStreamBuild: PropTypes.object, /** @Events stream build */\n        countSection: PropTypes.number, /** @Number for new section id */\n        countComponents: PropTypes.number, /** @Number last project */\n        sizeParentBox: PropTypes.object /** @Object with width and height parent(bg) */\n    }\n\n\n    state = {\n        mode: this.props.mode,\n        sizeParentBox: {...this.props.sizeParentBox},\n        title: 'Title'\n    }\n\n    addText = event => {\n        let id = Math.random().toFixed(3);\n\n        const componentsPatternText = {\n            type: 'text',\n            font: 'Arial',\n            color: null,\n            rotate: 0,\n            scale: 1,\n            opacity: 1,\n            fontSize: null,\n            content: 'Title',\n            coords: {x: null, y: null}, // x, y\n            id: id,\n            targetSection: this.props.editComponentName,\n        };\n        this.props.eventStreamBuild.emit('EventBuildComponents',{\n            componentsPattern: componentsPatternText,\n            type: componentsPatternText.type,\n            component: <TextComponent\n                            key = {`text${id}`}\n                            mode = 'dev'\n                            {...componentsPatternText}\n                            sizeParentBox = {{...this.props.sizeParentBox}}\n                            id = {id}\n                        >Title</TextComponent>\n        });\n        event.stopPropagation();\n    }\n\n    addBackground = event => {\n        let id = Math.random().toFixed(3);\n\n        const componentsPatternBackground = {\n            id: id,\n            type: 'background',\n            backgroundColor: null,\n            backgroundImage: null,\n            targetSection: this.state.editComponentName,\n        };\n\n        this.props.eventStreamBuild.emit('EventBuildComponents',{\n            componentsPattern: componentsPatternBackground,\n            type: componentsPatternBackground.type,\n            component: <BackgroundComponent\n                            targetSection = {this.props.editComponentName}\n                            {...componentsPatternBackground}\n                            key = {`bg${id}`}\n                            id = {id}\n                        />\n        });\n\n        event.stopPropagation();\n    }\n\n    addImage = event => {\n        let id = Math.random().toFixed(3);\n\n        const componentsPatternImage = {\n            borderRadius: 0,\n            type: 'image',\n            size: {w: 30, h: 50},\n            opacity: 1,\n            rotate: 0,\n            zIndex: null,\n            image: process.env.PUBLIC_URL + '/img/photoPattern.svg',\n            coords: {x: null, y: null}, // x, y\n            id: id,\n            targetSection: this.props.editComponentName,\n        };\n        this.props.eventStreamBuild.emit('EventBuildComponents',{\n            componentsPattern: componentsPatternImage,\n            type: componentsPatternImage.type,\n            component: <Image\n                            key = {`image${id}`}\n                            sizeParentBox = {this.props.sizeParentBox}\n                            id = {id}\n                            mode = 'dev'\n                            path = {'/img/photoPattern.svg'}\n                            {...componentsPatternImage}\n                            type = 'image' />\n        });\n        event.stopPropagation();\n    }\n\n    addMedia = event => {\n        let id = Math.random().toFixed(3);\n\n        const  componentsPatternMedia = {\n            type: 'media',\n            size: {w: null, h: null},\n            content: null,\n            coords: {x: null, y: null}, // x, y\n            id: id,\n            targetSection: this.props.editComponentName,\n        };\n\n        this.props.eventStreamBuild.emit('EventBuildComponents', {\n            componentsPattern: componentsPatternMedia,\n            type: componentsPatternMedia.type,\n            component: <Media\n                            key = {`media${id}`}\n                            targetSection = {this.props.editComponentName}\n                            sizeParentBox = {this.props.sizeParentBox}\n                            content = {null}\n                            id = {id}\n                            path = {'/img/photoPattern.mp4'}\n                            {...componentsPatternMedia}\n                            type = 'media'\n                            mode = 'dev'\n                        />\n        });\n        event.stopPropagation();\n    }\n\n    addInput = event => {\n        let id = Math.random().toFixed(3);\n\n        const  componentsPatternInput = {\n            type: 'input',\n            size: {w: null, h: null},\n            typeInput: 'button',\n            color: null,\n            fontSize: null,\n            borderRadius: null,\n            content: null,\n            coords: {x: null, y: null}, // x, y\n            id: id,\n            targetSection: this.props.editComponentName,\n        };\n\n        this.props.eventStreamBuild.emit('EventBuildComponents', {\n            componentsPattern: componentsPatternInput,\n            type: componentsPatternInput.type,\n            component: <Input\n                            key = {`input${id}`}\n                            targetSection = {this.props.editComponentName}\n                            sizeParentBox = {this.props.sizeParentBox}\n                            id = {id}\n                            inputType = 'button'\n                            {...componentsPatternInput}\n                            type = 'input'\n                            mode = 'dev'\n                        />\n        });\n        event.stopPropagation();\n    }\n\n    addSection = event => {\n        let id = Math.random().toFixed(3);\n\n        const componentsPatternBackground = {\n            backgroundColor: null,\n            backgroundImage: null,\n            targetSection: `Section${id}`,\n            id: `Section${id}`,\n            type: 'background',\n        };\n        this.props.eventStreamBuild.emit('EventNewSection', {\n            componentsPattern: componentsPatternBackground,\n            component: <BackgroundComponent\n                            {...componentsPatternBackground}\n                            key = {`bg${id}`}\n                            id = {id}\n                            targetSection = {`Section${id}`}\n                            width = '100%'\n                            height = '800px'\n                            type = 'background'\n                            mode = 'dev'\n                        />\n        });\n        event.stopPropagation();\n    }\n\n    render(){\n\n        if (this.state.mode === 'build'){\n            return (\n                <div className = 'ComponentsMenu'>\n                    <button \n                        onClick = {this.addImage} \n                        className = 'ImageTool CompoentnsMenu_button' \n                    >\n                        <span>Image</span>\n                    </button>\n                    <button \n                        onClick = {this.addText} \n                        className = 'TextTool CompoentnsMenu_button' >\n                        <span>Text</span>\n                    </button>\n                    <button\n                        onClick = {this.addInput}\n                        disabled = {this.props.editComponentName !== 'Header' ? false : true}\n                        className = 'ButtonTool CompoentnsMenu_button' >\n                        <span>Button</span>\n                    </button>\n                    <button onClick = {this.addMedia}\n                        className = 'VideoTool CompoentnsMenu_button'\n                    >\n                        <span>Video</span>\n                    </button>\n                </div>\n            )\n        } else if (this.state.mode === 'section') {\n            return (\n                <div className = 'sectionMode'>\n                    <button\n                        onClick = {this.addSection}\n                        className = 'newSectionTool CompoentnsMenu_button'\n                    >\n                        <span>New section</span>\n                    </button>\n                </div>\n            )\n        } else return <Fragment></Fragment>\n    }\n}\n\nexport default BuildMenu;","import React,{Fragment} from 'react';\nimport PropTypes from 'prop-types';\n\nimport Icon from '../Icon/icon';\nimport BuildMenu from '../componentsBuildMenu/BuildMenu';\n\nimport './controllers.scss';\n\nclass Controllers extends React.PureComponent {\n\n    static propTypes = {\n        countComponents: PropTypes.number.isRequired, /** @number last project id */\n        sizeParentBox: PropTypes.object, /** @Object with width and height parent(bg) */\n        eventStreamBuild: PropTypes.object, /** @Events stream */\n        menuActive: PropTypes.bool, /** @Bool value active menu or unactive */\n    }\n\n    state = {\n        viewComponentMenu: false,\n        editComponentName: this.props.editComponentName,\n        shiftX: 0,\n        shiftY: 0,\n        coordsX: '50%',\n        coordsY: '0',\n        shadowDisplay: 'block'\n    }\n\n    componentMenu = event => {\n        this.setState({viewComponentMenu: this.state.viewComponentMenu ? false : true});\n        event.stopPropagation();\n    }\n\n    render(){\n        return (\n            <Fragment>\n            {\n                <div\n                ref = {this.refControll}\n                className = 'ControllersEditComponent'\n                >\n                    <Icon\n                        onClick = {this.componentMenu}\n                        className = 'ControllersEditComponent__addButton'\n                        path = '/img/addButton.png'\n                    />\n                    { this.state.viewComponentMenu ?\n                        <BuildMenu\n                            key = {`buildMenu ${this.state.editComponentName}`}\n                            mode = 'build'\n                            eventStreamBuild = {this.props.eventStreamBuild}\n                            editComponentName = {this.state.editComponentName}\n                            sizeParentBox = {this.props.sizeParentBox}\n                            countComponents = {this.props.countComponents}\n                        /> : null\n                    }\n                </div>\n            }\n            </Fragment>\n        )\n    }\n\n    componentDidUpdate = () => {\n        if (this.props.editComponentName !== this.state.editComponentName)\n            this.setState({\n                ...this.state,\n                editComponentName: this.props.editComponentName\n            })\n    }\n\n}\n\nexport default Controllers;","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport RenderInBrowser from 'react-render-in-browser';\n/* ------- Events streams ------- */\nimport eventEmitter from '../../EventEmitter'; // common\nimport EventBuild from 'events'; // for builder controllers\n/* ------- For load project and exit from project ------- */\nimport { loadCurrentProjectAction, exitProjectAction } from '../../redux/actions';\n/* ------- Moddlewares ------- */\nimport { middlewareDeleteProjectComponent } from '../../redux/middleware/middlewareDelete';\nimport updateMiddleware from '../../redux/middleware/updateMiddleware';\n/* ------- HOC for het firebase controll object ------- */\nimport withScroll from '../../components/withScroll';\nimport withFirebase from '../../components/withFirebase';\n/* ------- Child components ------- */\nimport AdditionalTools from '../../components/additionalTools/additionalTools';\nimport builderHOC from '../../components/builderHOC';\nimport Controllers from '../../components/controllers/controllers';\nimport Loader from '../../components/loading/Loader';\nimport Header from '../../components/header/Header';\nimport Section from '../../components/buildComponents/section';\nimport BuildMenu from '../../components/componentsBuildMenu/BuildMenu';\n\nimport './build.scss';\n\nclass Build extends React.Component {\n\n    static propTypes = {\n        firebase: PropTypes.object.isRequired,\n        /** @firebase class for use firebase functions */\n        active: PropTypes.bool,\n        /** @active - status firebase auth */\n        dispatch: PropTypes.func.isRequired,\n        /** @dispatch - redux */\n        history: PropTypes.object,\n        /** @Router HTML5 history */\n        location: PropTypes.object,\n        /** @Router */\n        match: PropTypes.object.isRequired,\n        /** @Router */\n        userData: PropTypes.object.isRequired,\n        /** @UserData data about projects,user and current edit prject */\n    }\n\n    state = {\n        idProject: parseInt(this.props.match.params.param),\n        /** @Id project */\n        editStart: false,\n        /** @Bool start edit or no */\n        isChange: false,\n        /** @Bool detected changes */\n        isLoadComponents: true,\n        /** @Bool load all necessary components  */\n        projectEmpty: false,\n        /** @Bool detected project undefiend */\n        componentJSX: [],\n        /** @Array with JSX */\n        editComponentName: null,\n        /** @String | @null name current edit component */\n        menuActive: false,\n        /** @bool active menu or no */\n        sizeParentBox: null,\n        /** @Object size store */\n    }\n\n    eventEmitterBuild = new EventBuild(); // events stream for controllers\n    timer = null; // save timer\n\n    workModeEdit = itemEvent => {\n        /* set edit mode */\n        if (itemEvent.editStart)\n            this.setState({\n                ...this.state,\n                editStart: itemEvent.editStart,\n                editComponentName: itemEvent.targetSection,\n                menuActive: true,\n            });\n    }\n\n    deleteComponent = eventItem => {\n        /* delete component from DB and from JSX array */\n        if (eventItem.id === 'Header' && eventItem.type === 'background') return;\n        let { currentProjectsData } = this.props.userData;\n        let { componentJSX } = this.state;\n\n        const data = {\n            id: this.state.idProject,\n            uid: this.props.userData.idUser,\n            idComponent: eventItem.id,\n            sectionsProject: [...currentProjectsData.sectionsProject],\n            type: eventItem.type\n        }\n\n        this.props.dispatch(middlewareDeleteProjectComponent(data))\n            .then(id => {\n                if (id !== null) {\n                    const _componentJSX = componentJSX.filter(item => item.id !== id);\n                    this.setState({\n                        ...this.state,\n                        componentJSX: _componentJSX\n                    });\n                }\n            });\n    }\n\n    addComponentsFromBD = (array, sizeParentBox) => {\n        /* build JSX components from DB */\n        if (!sizeParentBox) sizeParentBox = this.state.sizeParentBox;\n        let { componentJSX } = this.state;\n        let componentsFromDB = [];\n\n        array.forEach(item => {\n            if (item.type !== 'background') {\n                const itemHash = {\n                    props: {\n                        ...item,\n                        sizeParentBox,\n                        mode: 'dev',\n                    },\n                    type: item.type,\n                    id: item.id,\n                }\n                const patternJSX = {\n                    id: item.id,\n                    targetSection: item.targetSection,\n                    component: builderHOC(itemHash)(Fragment)\n                };\n                componentsFromDB.push(patternJSX);\n            }\n        });\n        this.setState({\n            ...this.state,\n            isLoadComponents: false,\n            sizeParentBox: {...sizeParentBox },\n            componentJSX: [...componentJSX, ...componentsFromDB],\n        });\n    };\n\n    addComponent = itemEvent => {\n        /* create new component */\n        let { componentJSX } = this.state;\n        let { componentsPattern } = itemEvent;\n\n        const patternJSX = {\n            id: componentsPattern.id,\n            targetSection: componentsPattern.targetSection,\n            component: itemEvent.component\n        };\n        this.setState({\n            ...this.state,\n            componentJSX: [...componentJSX, patternJSX],\n        });\n    };\n\n    saveChangesComponent = itemEvent => {\n        /* save detected changes in DB and call confirm modal */\n        const { ms } = itemEvent;\n        if (this.timer) clearTimeout(this.timer);\n\n        this.timer = setTimeout(() => {\n            const { currentProjectsData } = this.props.userData;\n            const { userData } = this.props;\n            let findCurrentItem = false;\n            const _components = currentProjectsData.components.map(item => {\n                if (item.id === itemEvent.id) { findCurrentItem = true; return {...itemEvent }; }\n                return item;\n            });\n\n            if (!findCurrentItem) _components.push(itemEvent);\n            this.props.dispatch(updateMiddleware({\n                uid: userData.idUser,\n                projects: [...userData.projects],\n                components: _components,\n                sectionsProject: [...currentProjectsData.sectionsProject],\n                idProject: this.state.idProject\n            })).then(() =>\n                eventEmitter.emit('EventRedirectConfirm', { false: false, confirm: false }));\n        }, ms);\n    };\n\n    mainComponent = null;\n    mainRefComponent = node => node ?\n        this.mainComponent = { data: node.getBoundingClientRect(), node: node } : node;\n\n    addNewSection = eventItem => {\n        /* create new project section */\n        const { userData } = this.props;\n        const { currentProjectsData } = userData;\n        console.log(eventItem);\n        this.props.dispatch(updateMiddleware({\n            uid: userData.idUser,\n            projects: [...userData.projects],\n            components: [...currentProjectsData.components,\n                eventItem.componentsPattern\n            ],\n            sectionsProject: [\n                ...currentProjectsData.sectionsProject,\n                eventItem.componentsPattern.id\n            ],\n            idProject: this.state.idProject\n        })).then(() => {\n            this.setState({\n                ...this.state,\n                componentJSX: [\n                    ...this.state.componentJSX,\n                    eventItem.component\n                ]\n            }, () => {\n                eventEmitter.emit('EventSetState', currentProjectsData.sectionsProject.length);\n            });\n        });\n    }\n\n    render() {\n\n            if (this.state.projectEmpty) return <Redirect to = '/Cabinet' / >\n\n                const { userData } = this.props;\n            const { currentProjectsData } = userData;\n            const section = currentProjectsData.sectionsProject;\n\n            if (userData.active && currentProjectsData.loadProject) {\n                return ( <\n                        Fragment >\n                        <\n                        Header key = 'Header'\n                        title = \"Constructor\"\n                        idUser = { userData.idUser }\n                        /> <\n                        RenderInBrowser ie only >\n                        <\n                        h2 className = 'ie' >\n                        All the magic tricks in this app work best in Chrome / Firefox / Opera and other. <\n                        hr / >\n                        Internet explorer deprecated. <\n                        /h2> < /\n                        RenderInBrowser > <\n                        RenderInBrowser except ie >\n                        <\n                        div ref = { this.mainRefComponent }\n                        onMouseMove = { this.showAddSection }\n                        className = 'Build'\n                        key = 'Build' > {\n                            this.state.editStart &&\n                            <\n                            Controllers\n                            key = 'controllers'\n                            eventStreamBuild = { this.eventEmitterBuild }\n                            editComponentName = { this.state.editComponentName }\n                            countComponents = { currentProjectsData.components.length }\n                            menuActive = { this.state.menuActive }\n                            sizeParentBox = { this.state.sizeParentBox }\n                            />\n                        } <\n                        BuildMenu key = 'buildMenu'\n                        eventStreamBuild = { this.eventEmitterBuild }\n                        countSection = { this.state.componentJSX.length * 5 }\n                        mode = \"section\"\n                        className = 'menu' /\n                        >\n                        <\n                        AdditionalTools key = 'tools'\n                        eventStreamBuild = { this.eventEmitterBuild }\n                        eventEmitter = { eventEmitter }\n                        editComponentName = { this.state.editComponentName }\n                        /> {\n                        section.length &&\n                        <\n                        Section mode = 'dev'\n                        key = 'section'\n                        componentJSX = { this.state.componentJSX }\n                        editComponentName = { this.state.editComponentName }\n                        menuActive = { this.state.menuActive }\n                        sizeParentBox = { this.state.sizeParentBox }\n                        userData = { userData }\n                        />\n                    } <\n                    /div> < /\n                RenderInBrowser > <\n                    /Fragment>\n            )\n        } else if (!this.props.firebase.getCurrentUser()) return <Redirect to = '/' / >\n            else return <Loader key = 'Loader'\n    path = '/img/loading.gif'\n    type = 'build' / >\n}\n\ncomponentDidUpdate = (prevProps) => {\n    let { userData } = this.props;\n    let { currentProjectsData } = userData;\n    const isLoadComponents = this.state.isLoadComponents;\n    let sizeParentBox = null;\n\n    if (this.mainComponent && this.state.sizeParentBox === null)\n        sizeParentBox = {\n            width: this.mainComponent.data.width,\n            height: this.mainComponent.data.height,\n            top: this.mainComponent.data.top,\n            left: this.mainComponent.data.left,\n        }\n\n\n    if (userData.active && !currentProjectsData.loadProject) {\n        /** load current project of user session active and load project - false */\n        const current = userData.projects.find(item => /* find current project */\n            item.id === this.state.idProject)\n        if (current) { /* load data */\n            this.props.dispatch(loadCurrentProjectAction({\n                    id: current.id,\n                    typeProject: current.type,\n                    sectionsProject: [...current.sectionsProject],\n                    components: [...current.components]\n                }))\n                /* else redirect */\n        } else this.setState({...this.state, projectEmpty: true });\n    }\n    if (currentProjectsData.loadProject && isLoadComponents) {\n        /* if all components load build our JSX */\n        if (this.state.sizeParentBox === null && sizeParentBox !== null)\n            this.addComponentsFromBD([...currentProjectsData.components], sizeParentBox);\n        else this.addComponentsFromBD([...currentProjectsData.components]);\n        /** For scroll component */\n        eventEmitter.emit('EventSetState', currentProjectsData.sectionsProject.length - 1);\n    }\n\n    // if delete section change count for scroller\n    const currentSection = currentProjectsData.sectionsProject.length;\n    const prevSection = prevProps.userData.currentProjectsData.sectionsProject.length;\n    if (currentSection !== prevSection) {\n        eventEmitter.emit('EventSetState', currentProjectsData.sectionsProject.length - 1);\n    }\n}\n\ncomponentDidMount = () => {\n    let { userData } = this.props;\n    let { currentProjectsData } = userData;\n    /**  If the session is already active, immediately load */\n    if (userData.active && !currentProjectsData.loadProject) {\n        /** load current project of user session active and load project - false */\n        const current = userData.projects.find(item => item.id === this.state.idProject)\n        this.props.dispatch(loadCurrentProjectAction({\n            id: current.id,\n            sectionsProject: [...current.sectionsProject],\n            typeProject: current.type,\n            components: [...current.components]\n        }));\n\n        eventEmitter.on('EventModeEdit', this.workModeEdit);\n        this.eventEmitterBuild.on('EventBuildComponents', this.addComponent);\n        this.eventEmitterBuild.on('EventDeleteComponent', this.deleteComponent);\n        this.eventEmitterBuild.on('EventNewSection', this.addNewSection);\n        this.eventEmitterBuild.on('EventSaveChangesComponent', this.saveChangesComponent);\n    }; /** else redirect */\n}\n\ncomponentWillUnmount = () => {\n\n    let { userData } = this.props;\n    if (userData.active) {\n        this.props.dispatch(exitProjectAction(true));\n        eventEmitter.off('EventModeEdit', this.workModeEdit);\n        this.eventEmitterBuild.off('EventBuildComponents', this.addComponent);\n        this.eventEmitterBuild.off('EventDeleteComponent', this.deleteComponent);\n        this.eventEmitterBuild.off('EventNewSection', this.addNewSection);\n        this.eventEmitterBuild.off('EventSaveChangesComponent', this.saveChangesComponent);\n    }\n}\n}\n\n\nconst mapStateToProps = (state) => {\n    return {\n        userData: {\n            active: state.cabinet.active,\n            idUser: state.cabinet.idUser,\n            projects: [...state.cabinet.projects],\n            currentProjectsData: {...state.builder }\n        },\n    }\n}\n\nexport default connect(mapStateToProps)(withFirebase(withScroll(Build)));","import React from 'react';\n\n\nconst OpenPanel = props => {\n\n\n\n    return (\n        <div className = 'guide openPanelGuide'>\n            <h4 className = 'guide__title'>Open panel</h4>\n            <p className = 'guide_content'>\n                If you want to open the toolbar, you should double-click on the background.\n            </p>\n            <img src = {process.env.PUBLIC_URL + '/img/guideOpenPanel.gif'} alt = 'guide'></img>\n        </div>\n    )\n}\n\nexport default OpenPanel;","import React from 'react';\n\n\nconst SearchGuide = props => {\n    return (\n        <div className = 'guide addComponents'>\n            <h4 className = 'guide__title'>Search guide</h4>\n            <p className = 'guide_content'>\n                On the toolbar, click on the \"Search\" button and\n                enter a keyword in the search field.\n            </p>\n            <img src = {process.env.PUBLIC_URL + '/img/search.gif'} alt = 'guide'></img>\n        </div>\n    )\n}\n\nexport default SearchGuide;","import React from 'react';\n\n\nconst AddComponents = props => {\n    return (\n        <div className = 'guide addComponents'>\n            <h4 className = 'guide__title'>Add components</h4>\n            <p className = 'guide_content'>\n                Click on the button at the top of the screen\n                and select a component.\n            </p>\n            <img src = {process.env.PUBLIC_URL + '/img/add.gif'} alt = 'guide'></img>\n        </div>\n    )\n}\n\nexport default AddComponents;","import React from 'react';\n\n\nconst AddNewSection = props => {\n    return (\n        <div className = 'guide addComponents'>\n            <h4 className = 'guide__title'>Add components</h4>\n            <p className = 'guide_content'>\n                If you want to add a new section,\n                click on the button at the bottom of the page.\n            </p>\n            <img src = {process.env.PUBLIC_URL + '/img/newSection.gif'} alt = 'guide'></img>\n        </div>\n    )\n}\n\nexport default AddNewSection;","import React from 'react';\n\n\nconst CreateNewProject = props => {\n    return (\n        <div className = 'guide addComponents'>\n            <h4 className = 'guide__title'>Add components</h4>\n            <p className = 'guide_content'>\n                If you want to create a new project,\n                in your account (/ Cabinet) click on the button at the top of the page.\n            </p>\n            <img src = {process.env.PUBLIC_URL + '/img/newProject.gif'} alt = 'guide'></img>\n        </div>\n    )\n}\n\nexport default CreateNewProject;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport OpenPanel from './Guides/OpenPanel';\nimport SearchGuide from './Guides/SearchGuide';\nimport AddComponents from './Guides/AddComponents';\nimport AddNewSection from './Guides/AddNewSection';\nimport CreateNewProject from './Guides/CreateNewProject';\nimport Icon from '../Icon/icon';\nimport './switchContainer.scss';\n\nclass SwitchContainer extends React.PureComponent {\n\n    static propTypes = {\n        mode: PropTypes.string,\n    }\n\n    state = {\n        mode: 'panel'\n    }\n\n    changeWorkMode = event => {\n        event.target === this.refOP &&\n        this.setState({\n            ...this.state,\n            mode: 'panel'\n        });\n        event.target === this.refSE &&\n        this.setState({\n            ...this.state,\n            mode: 'search'\n        });\n        event.target === this.refADD &&\n        this.setState({\n            ...this.state,\n            mode: 'add'\n        });\n        event.target === this.refSN &&\n        this.setState({\n            ...this.state,\n            mode: 'section'\n        });\n        event.target === this.refPR &&\n        this.setState({\n            ...this.state,\n            mode: 'project'\n        });\n        event.stopPropagation();\n    }\n\n    refOP = null;\n    refSE = null;\n    refADD = null;\n    refSN = null;\n    refPR = null\n\n    refOpenPanel  = node => this.refOP = node;\n    refSearch = node => this.refSE = node;\n    refAdd = node => this.refADD = node;\n    refSection = node => this.refSN = node;\n    refProject = node => this.refPR = node;\n\n    render(){\n        return(\n            <div className = 'switchContainer'>\n                <div className = 'col--17 col-sm-10 switchContainer__controllers'>\n                    <Icon className = 'switchContainer__menu' path = '/img/Menu_Burder.png' />\n                    <ul className = 'guide_list list'>\n                        <li>\n                            <input\n                                onClick = {this.changeWorkMode}\n                                className = {\n                                    this.state.mode !== 'panel' ?\n                                    'switch__button panel'\n                                    : 'switch__button panel activeButton'\n                                }\n                                type = 'button'\n                                ref = {this.refOpenPanel}\n                                value = 'Open panel for edit'\n                            />\n                        </li>\n                        <li>\n                            <input\n                                onClick = {this.changeWorkMode}\n                                className = {\n                                    this.state.mode !== 'search' ?\n                                    'switch__button search'\n                                    : 'switch__button search activeButton'\n                                }\n                                type = 'button'\n                                ref = {this.refSearch}\n                                value ='Search image/media'\n                            />\n                        </li>\n                        <li>\n                            <input\n                                onClick = {this.changeWorkMode}\n                                className = {\n                                    this.state.mode !== 'add' ?\n                                    'switch__button add'\n                                    : 'switch__button add activeButton'\n                                }\n                                type = 'button'\n                                ref = {this.refAdd}\n                                value ='Adding components'\n                            />\n                        </li>\n                        <li>\n                            <input\n                                onClick = {this.changeWorkMode}\n                                className = {\n                                    this.state.mode !== 'section' ?\n                                    'switch__button section'\n                                    : 'switch__button section activeButton'\n                                }\n                                type = 'button'\n                                ref = {this.refSection}\n                                value ='Adding new section'\n                            />\n                        </li>\n                        <li>\n                            <input\n                                onClick = {this.changeWorkMode}\n                                className = {\n                                    this.state.mode !== 'project' ?\n                                    'switch__button project'\n                                    : 'switch__button project activeButton'\n                                }\n                                type = 'button'\n                                ref = {this.refProject}\n                                value ='Create new project'\n                            />\n                        </li>\n                    </ul>\n                </div>\n                <div className = 'col--80--1'>\n                    {this.state.mode === 'panel' &&\n                        <OpenPanel />\n                    }\n                    {this.state.mode === 'search' &&\n                        <SearchGuide />\n                    }\n                    {this.state.mode === 'add' &&\n                        <AddComponents />\n                    }\n                    {this.state.mode === 'section' &&\n                        <AddNewSection />\n                    }\n                    {this.state.mode === 'project' &&\n                        <CreateNewProject />\n                }\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default SwitchContainer;","import React,{Fragment} from 'react';\nimport PropTypes from 'prop-types';\nimport {Redirect} from 'react-router-dom';\nimport {connect} from 'react-redux';\n\nimport SwitchContainer from '../../components/SwitchContainer/SwitchContainer';\nimport withFirebase from '../../components/withFirebase';\nimport Header from '../../components/header/Header';\nimport Loader from '../../components/loading/Loader';\n\nimport './guide.scss';\nclass Guide extends React.PureComponent {\n\n    static propTypes = {\n        config: PropTypes.object.isRequired, /** @Config app */\n        firebase: PropTypes.object.isRequired, /** @firebase class for use firebase functions */\n        history: PropTypes.object, /** @Router HTML5 history */\n        location: PropTypes.object, /** @Router */\n        match: PropTypes.object, /** @Router */\n    }\n\n    state = {\n        config: this.props.config\n    };\n\n    render(){\n\n        let user = this.props.firebase.getCurrentUser();\n        if (user && this.props.idUser) {\n            const { config } = this.state;\n            return (\n                <Fragment>\n                    <Header title = {config.title} idUser = {user.uid} />\n                    <section className = 'Guide'>\n                        <div className = 'container guide--flex'>\n                            <div className = 'Guide__about'>\n                                <h2>Documentation</h2>\n                                <p>Get started with {config.title}</p>\n                                <p className = 'Guide__about__rev'>\n                                    The Constructor guides are step-by-step walkthroughs\n                                    that help you get started using Constructor.\n                                </p>\n                            </div>\n                            <SwitchContainer />\n                        </div>\n                    </section>\n                </Fragment>\n            )\n        } else if (!user) return <Redirect to = { '/'} />\n        else return <Loader path = '/img/loading.gif' type = 'About' />\n\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n      idUser: state.cabinet.idUser,\n    }\n  };\n\nexport default connect(mapStateToProps)(withFirebase(Guide));","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {connect} from 'react-redux';\nimport {Route, Switch} from 'react-router-dom';\n/* ------- Moddlewares ------- */\nimport {middlewareLoadUserData} from './redux/middleware/loadUserMiddleware';\n/* ------- Child components ------- */\nimport withFirebase from './components/withFirebase';\nimport Loader from './components/loading/Loader';\nimport Index from './Pages/Index/Index';\nimport Cabinet from './Pages/Cabinet/Cabinet';\nimport Production from './Pages/Production/Production';\nimport About from './Pages/About/About';\nimport Build from './Pages/Build/Build';\nimport Guide from './Pages/Guide/Guide';\nimport ErrorPage from './components/ErrorCatch/ErrorPage';\nimport './root.scss';\n\nclass App extends React.PureComponent {\n\n    static propTypes = {\n        config: PropTypes.object.isRequired, /** @Config app */\n        firebase: PropTypes.object.isRequired, /** @firebase class for use firebase functions */\n        dispatch: PropTypes.func.isRequired, /** @dispatch - redux */\n    }\n\n    state = {\n        firebase: this.props.firebase,\n        firebaseLoadState: false,\n        config: this.props.config,\n    }\n\n    componentDidMount(){\n        /** Listening firebase answer after first load app */\n        this.props.firebase.auth.onAuthStateChanged((user) => {\n            if (!this.state.firebaseLoadState){\n                /** if user - true, loading data in store */\n                if (user) this.props.dispatch(middlewareLoadUserData(user.uid))\n                .then((res) =>  { /** show loader */\n                    this.setState({...this.state, firebaseLoadState: res});\n                }); /** if loading = redirect */\n                else  this.setState({...this.state, firebaseLoadState: true});\n            }\n        });\n    }\n\n    render(){\n        if (this.state.firebaseLoadState){\n            return (\n                <Switch>\n                        <Route\n                            path = {'/'} exact\n                            render = {(props) => <Index {...props} config = {this.state.config} />}\n                        />\n                        <Route \n                            path = '/Cabinet/' exact \n                            render = {(props) => <Cabinet {...props} config = {this.state.config} />}\n                        />\n                        <Route\n                            path = {'/Cabinet/About'}\n                            render = {(props) => <About {...props} config = {this.state.config} />}\n                        />\n                        <Route path = {'/Cabinet/Guide'} exact \n                        render = {(props) => <Guide {...props} config = {this.state.config} />}\n                        />\n                        <Route path = {'/Cabinet/Build/:param'} exact\n                            render = {(props) => <Build {...props} />}\n                        />\n                        <Route path = {'/Cabinet/Build/:param/Production'} exact component = {Production} />\n                        <Route path = {'/crashPage'} component = {ErrorPage} />\n                </Switch>\n            )\n        } else return <Loader path = { '/img/loading.gif'} type = 'application' />\n    }\n}\n\nexport default connect()(withFirebase(App));","\n/** IE supports polyfills */\nimport 'core-js/es/map';\nimport 'core-js/es/set';\nimport 'core-js/es/symbol';\nimport 'core-js/es/array/includes';\nimport 'core-js/es/array/find';\nimport 'core-js/es/string/includes';\nimport 'core-js/es/object/assign';\n/** --------------------- */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\nimport firebase from './Firebase/Firebase';\nimport ErrorBoundary from './components/ErrorCatch/ErrorBoundary';\nimport {HashRouter } from 'react-router-dom';\nimport {Provider} from 'react-redux';\nimport store from './redux/store';\nimport App from './App.jsx';\nimport 'normalize.css';\n\nimport firebaseContext from './Firebase/firebaseContext'; /** firebase contect API */\nimport config from './config.json'; /** app config file */\n\n\nReactDOM.render(\n        <HashRouter>\n            <ErrorBoundary>\n                <firebaseContext.Provider value = {firebase}>\n                    <Provider store = {store}>\n                        <App config = {config} />\n                    </Provider>\n                </firebaseContext.Provider>\n            </ErrorBoundary>\n        </HashRouter>,\n        document.getElementById('root')\n);\n\n\nserviceWorker.register();\n\n"],"sourceRoot":""}