{"version":3,"sources":["serviceWorker.js","Firebase/firebaseConfig.js","Firebase/Firebase.js","EventEmitter.js","components/ErrorCatch/ErrorPage.jsx","components/ErrorCatch/ErrorBoundary.jsx","redux/actions.js","redux/reducerBuilder.js","redux/reducerCabinet.js","redux/reducers.js","redux/store.js","redux/middleware/loadUserMiddleware.js","Firebase/firebaseContext.js","components/withFirebase.jsx","components/loading/Loader.jsx","components/AnimationText/AnimationTitle.jsx","components/Registration/Registration.jsx","Pages/Index/Index.jsx","redux/middleware/middlewareDelete.js","components/Icon/icon.jsx","components/confirmBox/Confirm.jsx","components/header/Header.jsx","components/imageViewer/imageItem.jsx","components/modalWindow/createProject/createProject.jsx","components/modalWindow/Search/searchModal.jsx","components/modalWindow/ModalWindow.jsx","redux/middleware/createProjectMiddleware.js","components/List/Item.jsx","components/List/List.jsx","components/ProjectsSection/ProjectsSection.jsx","Pages/Cabinet/Cabinet.jsx","components/buildComponents/components/Background.jsx","components/buildComponents/MainBackground/MainBackground.jsx","components/buildComponents/section.jsx","components/buildComponents/components/Input.jsx","components/buildComponents/components/Media.jsx","components/buildComponents/components/Image.jsx","components/buildComponents/components/Text.jsx","components/builderHOC.jsx","Pages/Production/Production.jsx","Pages/About/About.jsx","redux/middleware/updateMiddleware.js","components/withScroll.jsx","components/imageViewer/Viewer.jsx","components/instrumentsPanel/InputTools/InputInstruments.jsx","components/instrumentsPanel/MediaTools/MediaInstruments.jsx","components/instrumentsPanel/ImageTools/ImageInstruments.jsx","components/instrumentsPanel/BackgroundTools/BackgroundInstruments.jsx","components/instrumentsPanel/TextTools/TextInstruments.jsx","components/instrumentsPanel/InstrumentsPanel.jsx","components/additionalTools/additionalTools.jsx","components/componentsBuildMenu/BuildMenu.jsx","components/controllers/controllers.jsx","Pages/Build/Build.jsx","App.jsx","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","firebaseConfig","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firebaseInterface","require","Firebase","Object","classCallCheck","this","firebase","auth","db","rules","setPersistence","Auth","Persistence","email","password","signInWithEmailAndPassword","createUserWithEmailAndPassword","signOut","currentUser","stream","EventEmitter","controllerStream","ErrorPage","redirect","update","event","_this","setState","eventEmitter","emit","react_default","a","createElement","react_router","to","class","className","onClick","React","Component","ErrorBoundary","hasError","updateApplication","componentDidMount","on","componentWillUnmount","off","info","ErrorCatch_ErrorPage","props","children","PureComponent","exitProjectAction","type","exit","loadCurrentProjectAction","id","typeProject","sectionsProject","components","loadUpdateCurrentProject","idProject","toConsumableArray","loadUserAction","active","idUser","uid","projects","errorAction","initialState","loadProject","combineReducers","builder","arguments","length","undefined","action","objectSpread","cabinet","map","item","middleware","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","thunk","withExtraArgument","store","createStore","middlewareLogin","_ref2","asyncToGenerator","regenerator_default","mark","_callee","dispatch","getState","_ref","wrap","_context","prev","next","login","response","collection","doc","user","get","docUser","data","message","stop","_x","_x2","_x3","apply","middlewareLogOutUser","_ref6","_callee3","_ref5","_context3","_x7","_x8","_x9","firebaseContext","createContext","withFirebase","Firebase_firebaseContext","Consumer","assign","loading_Loader","_useState","useState","path","slicedToArray","_useState3","mode","concat","src","alt","AnimationTitle","styled","h3","_templateObject","dir","AnimationText","tilteContent","content","split","currentTitle","positionTitle","directionAnimation","msAnimation","msTimeout","msPauseEnd","_isMounted","timerAnimation","animationTitle","timer","self","assertThisInitialized","setTimeout","tick","counter","word","_title","slice","e","clearTimeout","data-titlebuild","emailRef","passwordRef","setRefEmail","node","setRefPassword","createUser","value","Error","set","indexStream","autoComplete","placeholder","ref","Index","Events","title","registrationActive","regStatus","wrongEnter","emailImput","passwordImput","statusRegistration","additionalUserInfo","isNewUser","showBox","stopPropagation","authTo","Reveal_default","effect","AnimationText_AnimationTitle","TransitionGroup","component","CSSTransition","timeout","unmountOnExit","classNames","components_Registration_Registration","connect","middlewareDeleteProjectComponent","_ref4","_callee2","_ref3","_context2","findProject","find","project","filter","idComponent","dataUpdate","abrupt","_x4","_x5","_x6","middlewareDelete","itemdb","Icon","_useState5","draggable","Confirm","cbSaveChanges","cbCancelSave","iconPath","CabinetIcon","Header","isChange","redirectConfirm","redirectAbout","redirectA","redirectCabinet","redirectC","confirm","false","confirmSaveDetectChanges","logOut","pathname","add","cabinetStream","componentWillMount","_this2","Fragment","components_confirmBox_Confirm","Icon_icon","withRouter","ImageItem","selected","urls","regular","urlRegular","full","urlFull","_useState7","isFull","_useState9","urlContent","url","iframe","CreateProject","disabled","validateName","name","validateType","typeClassName","nameLength","isNumber","warningLengthMin","warningLengthMax","warningNumber","onChange","cbValidateName","warningType","cbSelectOption","cbAddNewProject","cbCancel","loading","SearchModal","modalSearchMode","items","images","search","refSearch","cbSearch","refSearchFunc","componentDidUpdate","prevProps","prevState","contentPrev","haveUpdate","isSelected","selectedItem","_items","cbMakeImageResultBox","dissabled","menuActive","cbShowImage","cbSetSelectedImage","polyfill","ModalWindow","readyAnimation","workMode","buttonSearchDisabled","showUrl","imageBoxView","newProject","imageMenuActive","warning","lengthMax","lengthMin","inputSearch","inputSelect","searchData","api","isFetch","ok","json","results","searchYouTubeAPI","RAITE","KEY","res","status","arrayItems","forEach","push","snippet","thumbnails","high","videoId","showMenuImage","showImage","_this$state$images","eventStreamBuild","target","setSelectedImage","makeImageResultBox","i","imageItem","key","addNewProject","selectOption","inputs","defineProperty","test","cancel","refSelect","createProject","searchModal","loader","react","middlewareCreateProject","list","lastProject","lastIndex","header","backgroundImage","backgroundColor","min","Math","floor","random","targetSection","productionPath","_useState6","canBuild","setCanBuild","_useState8","canProd","setCanProd","_useState11","_useState13","data-id","List","makeList","List_Item","ProjectsSection","components_List_List","Cabinet","modalActive","deletItem","getCurrentUser","changeWorkMode","header_Header","in","appear","modalWindow_ModalWindow","components_ProjectsSection_ProjectsSection","Background","div","Background_templateObject","width","height","BackgroundComponent","background","color","boxComponent","boxComponentRef","saveDataParent","boxInform","getBoundingClientRect","countSection","sectionNumber","size","openBgInstruments","componentsPatternBackground","componentStats","changeColor","eventItem","colorRGB","setBackgroundImage","onDoubleClick","data-name","MainBackground","editRedy","changeMode","editStart","editComponentName","refSection","refSectionFunc","currentProjectsData","componentJSX","needUpdate","countComponents","data-class","components_Background","Section","userData","buildComponents_MainBackground_MainBackground","sizeParentBox","section","componentsProdJSX","InputComponent","input","attrs","style","zIndex","indexZ","left","coordX","top","coordY","Input_templateObject","w","h","fontSize","borderRadius","ProductionStyle","_templateObject2","Input","istrumentsActive","getSizeBool","typeInput","shiftCoords","posInput","coords","x","y","startDragNdrop","openInputInstruments","componentsPatternImage","sizeTextValue","saveCoords","nativeEvent","which","element","refInput","cords","right","bottom","clientX","clientY","changeSize","eventSize","changeSizeText","setBorderRadius","radius","borderDown","changeContent","checkPivotPosition","borderRight","delta","trans","transT","move","moveInput","num","xItem","yItem","convertToPercentX","convertToPercentY","toFixed","stopDragNdrop","saveSize","setWidth","setType","setHeight","refInputComponent","onMouseDown","onMouseMove","onMouseLeave","onMouseUp","onDragStart","data-imagecomponentwrapper","WrapperMedia","display","justifyContent","alignItems","padding","Media_templateObject","Media","Media_templateObject2","_templateObject3","MediaComponent","posMedia","drawContent","openMediaInstruments","componentsPatternMedia","refMedia","moveMedia","setContent","refMediaComponent","allowfullscreen","Media_ProductionStyle","WrapperImg","transform","rotate","scale","transition","Image_templateObject","ImageStyle","img","Image_templateObject2","opacity","Image_templateObject3","Image","transformValue","scaleValue","image","posImage","openImageInstruments","refImage","rotateEvent","angle","scaleEvent","moveText","factorCoord","parseInt","xFacotr","yFactor","powHeight","powWidth","pythagoras","sqrt","_angle","atan","_biasFactor","biasFactor","PI","sinX","sin","sinY","setCurrentImage","changeSizeImage","setOpacity","refImageComponent","data-imagecomponent","Image_ProductionStyle","crossOrigin","WrapperText","Text_templateObject","textColor","TextStyle","p","Text_templateObject2","font","Text_templateObject3","TextComponent","resizeStream","isHaveSize","parent","colorText","sizeText","position","contentText","openTitleInstruments","componentsPatternText","changeColorText","changeContentText","eventContent","refText","resizeStart","classList","setFont","sectionNum","refTextComponent","data-textcomponent","Text_ProductionStyle","builderHOC","Production","params","param","projectEmpty","isLoadComponents","makeProduction","array","_components","itemHash","patternJSX","prodRef","mainProductionRef","current","buildComponents_section","About","about","developer","year","updateMiddleware","newProjects","JSON","parse","stringify","withScroll","_React$PureComponent","ScrollMove","_getPrototypeOf2","_len","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","scrollConfig","duration","delay","smooth","offset","positionCount","setStates","blockMove","moveLocation","count","moveDown","deltaY","moveUp","close","scroller","scrollTo","scroll","scrollToTop","inherits","createClass","onWheel","onTouchStart","Viewer","frameBorder","allow","allowFullScreen","InputInstruments","colorPickerActive","instrumentPanel","_content","cbSetColor","lib","onChangeComplete","cbHandleChangeComplete","cbSetWidth","max","cbSetHeight","cbSetSize","cbSetBorderRadius","cbSetType","cbSetContent","maxLength","cbDelete","MediaInstruments","ImageInstruments","fileRef","createRef","cbRotate","cbScale","step","cbSetOpacity","cbLoadFile","accept","BackgroundInstruments","TextInstruments","cbSetFont","InstrumentsPanel","closePanel","setSize","fontName","setIframeContent","contentValue","updatePosition","setColor","updateBimageStats","handleChangeComplete","rgb","r","g","b","redirectSaveChanges","ms","saveChanges","deleteComponent","loadFile","files","reader","FileReader","readAsDataURL","onload","result","onerror","makePanelInstruments","TextTools_TextInstruments","BackgroundTools_BackgroundInstruments","ImageTools_ImageInstruments","MediaTools_MediaInstruments","InputTools_InputInstruments","oldProps","oldState","instrumentActive","AdditionalTools","modal","modalSearch","modalViewer","modalSearchOn","itemEvent","ViewerSwitch","openInstrument","imageViewer_Viewer","instrumentsPanel_InstrumentsPanel","BuildMenu","addText","componentsPattern","Text","addBackground","addImage","components_Image","addMedia","components_Media","addInput","componentsPatternInput","components_Input","inputType","addSection","Controllers","viewComponentMenu","shiftX","shiftY","coordsX","coordsY","shadowDisplay","componentMenu","refControll","componentsBuildMenu_BuildMenu","Build","eventEmitterBuild","EventBuild","workModeEdit","_componentJSX","addComponentsFromBD","componentsFromDB","addComponent","saveChangesComponent","findCurrentItem","mainComponent","mainRefComponent","addNewSection","showAddSection","controllers_controllers","additionalTools","App","firebaseLoadState","onAuthStateChanged","isError","_this3","exact","render","Pages_Index_Index","Pages_Cabinet_Cabinet","Pages_About_About","Pages_Build_Build","saveSession","time","ReactDOM","react_router_dom","ErrorCatch_ErrorBoundary","Provider","es","src_App","document","getElementById","URL","href","origin","addEventListener","fetch","contentType","headers","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.f1015a98.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log('This web app is being served cache-first by a service worker.');\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","// setings in root folder / firebase.env\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n    databaseURL: process.env.REACT_APP_DATABASE_URL,\r\n    projectId: process.env.REACT_APP_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n    appId: process.env.REACT_APP_APPID\r\n};\r\n\r\nexport default firebaseConfig;","import * as firebase from 'firebase/app';\r\nimport firebaseConfig from './firebaseConfig';\r\n\r\nconst auth = require('firebase/auth');\r\nconst firestore = require('firebase/firestore');\r\n\r\nclass Firebase {\r\n\r\n    constructor(firebaseConfig){\r\n        firebase.initializeApp(firebaseConfig);\r\n        this.auth = firebase.auth();\r\n        this.db = firebase.firestore();\r\n    }\r\n\r\n    saveSession(rules){\r\n        return this.auth.setPersistence(firebase.auth.Auth.Persistence[rules]);\r\n    }\r\n\r\n    login(email, password){\r\n        try {\r\n            return this.auth.signInWithEmailAndPassword(email, password);\r\n        } catch (error) {\r\n            console.error(error);\r\n            return null;\r\n        }\r\n    }\r\n\r\n    registration(email, password){\r\n        return this.auth.createUserWithEmailAndPassword(email, password)\r\n    }\r\n\r\n    signOut(){\r\n        return this.auth.signOut()\r\n    }\r\n\r\n    getCurrentUser() {\r\n        return this.auth.currentUser\r\n    }\r\n}\r\n\r\nlet firebaseInterface = new Firebase(firebaseConfig);\r\n\r\nexport default firebaseInterface;\r\n\r\nexport { auth, firestore };\r\n\r\n","import {EventEmitter} from 'events';\r\n\r\nconst stream = new EventEmitter();\r\nconst controllerStream = new EventEmitter();\r\n\r\nexport {controllerStream};\r\nexport default stream;\r\n","import React from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\nimport eventEmitter from '../../EventEmitter';\r\n\r\nimport './errorPage.scss';\r\n\r\n\r\nclass ErrorPage extends React.Component {\r\n\r\n    state = {\r\n        redirect: false,\r\n    }\r\n\r\n    update = event => {\r\n       this.setState({redirect: true},\r\n        () => eventEmitter.emit('EventErrorCatchUpdate'));\r\n    }\r\n\r\n    render(){\r\n        if (this.state.redirect) return <Redirect to = '/' />\r\n        return (\r\n        <div class = 'container'>\r\n            <div class = 'flex-column ErrorPage'>\r\n                <h1>Application crash</h1>\r\n                <button className = 'ErrorPage__button_updateApp' onClick = {this.update}>Update</button>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ErrorPage;","\r\nimport React from 'react';\r\nimport eventEmitter from '../../EventEmitter';\r\nimport ErrorPage from './ErrorPage';\r\n\r\nclass ErrorBoundary extends React.PureComponent {\r\n\r\n      state = { \r\n        hasError: false,\r\n      };\r\n\r\n    static getDerivedStateFromError(error) {\r\n        console.log(error);\r\n      // Обновить состояние с тем, чтобы следующий рендер показал запасной UI.\r\n      return { hasError: true};\r\n    }\r\n\r\n    updateApplication = event => {\r\n      this.setState({hasError: false});\r\n    };\r\n  \r\n    componentDidCatch(error, info) {\r\n      // Можно также сохранить информацию об ошибке в соответствующую службу журнала ошибок\r\n     console.error(error + \",\" + info);\r\n    }\r\n  \r\n    render() {\r\n      if (this.state.hasError) return <ErrorPage />\r\n      return this.props.children;\r\n    }\r\n\r\n    componentDidMount = () => {\r\n      eventEmitter.on('EventErrorCatchUpdate',this.updateApplication);\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n      eventEmitter.off('EventErrorCatchUpdate',this.updateApplication);\r\n    }\r\n  }\r\n\r\n  export default ErrorBoundary;","const CREATE_PROJECT = 'CREATE_PROJECT';\r\nconst LOAD_UPDATE_PROJECT = \"LOAD_UPDATE_PROJECT\";\r\nconst LOAD_CURRENT = 'LOAD_CURRENT';\r\nconst LOG_OUT_CABINET = 'LOG_OUT_CABINET';\r\nconst LOAD_USER_CABINET = 'LOAD_USER_CABINET';\r\nconst ERROR_CABINET = 'ERROR_CABINET';\r\nconst EXIT_PROJECT = 'EXIT_PROJECT';\r\n\r\nconst createProjectAction = (state) => {\r\n    return {\r\n        type: CREATE_PROJECT,\r\n        projects: state,\r\n    }\r\n}\r\n\r\nconst exitProjectAction = (state) => {\r\n    return {\r\n        type: EXIT_PROJECT,\r\n        exit: state\r\n    }\r\n}\r\n\r\nconst loadCurrentProjectAction = (state) => {\r\n    return {\r\n        type: LOAD_CURRENT,\r\n        id: state.id,\r\n        typeProject: state.typeProject,\r\n        sectionsProject: state.sectionsProject,\r\n        components: state.components\r\n    }\r\n}\r\n\r\nconst loadUpdateCurrentProject = (state) => {\r\n    return {\r\n        type: LOAD_UPDATE_PROJECT,\r\n        idProject: state.idProject,\r\n        sectionsProject: [...state.sectionsProject],\r\n        components: [...state.components]\r\n    }\r\n}\r\n\r\nconst loadUserAction = (state) => {\r\n    return {\r\n        type: LOAD_USER_CABINET,\r\n        active: true,\r\n        idUser: state.uid,\r\n        error: '',\r\n        projects: state.projects\r\n    }\r\n}\r\n\r\nconst logOutAction = (state) => {\r\n\r\n    return {\r\n        type: LOG_OUT_CABINET,\r\n        active: false,\r\n        idUser: null,\r\n        error: '',\r\n        projects: []\r\n    }\r\n}\r\n\r\nconst errorAction = (state) => {\r\n    return {\r\n        type: ERROR_CABINET,\r\n        error: state\r\n    }\r\n}\r\n\r\nexport {\r\n    CREATE_PROJECT, createProjectAction, /* cabinet */\r\n    LOAD_USER_CABINET, loadUserAction, /* cabinet */\r\n    LOG_OUT_CABINET, logOutAction, /* cabinet */\r\n    LOAD_CURRENT, loadCurrentProjectAction, /* builder */\r\n    LOAD_UPDATE_PROJECT, loadUpdateCurrentProject,\r\n    EXIT_PROJECT, exitProjectAction,\r\n    ERROR_CABINET, errorAction, /* both */\r\n}","import {LOAD_CURRENT,LOAD_UPDATE_PROJECT, EXIT_PROJECT} from './actions';\r\n\r\nconst initialState = {\r\n    loadProject: false,\r\n    idProject: null,\r\n    typeProject: null,\r\n    components: [],\r\n    sectionsProject: [],\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n    switch (action.type){\r\n\r\n        case LOAD_CURRENT: {\r\n            return {\r\n                ...state,\r\n                loadProject: true,\r\n                idProject: action.id,\r\n                typeProject: action.typeProject,\r\n                components: [...action.components],\r\n                sectionsProject: [...action.sectionsProject]\r\n            }\r\n        }\r\n\r\n        case LOAD_UPDATE_PROJECT: {\r\n            return {\r\n                ...state,\r\n                components: [...action.components],\r\n                sectionsProject: [...action.sectionsProject]\r\n            }\r\n        }\r\n\r\n        case EXIT_PROJECT: {\r\n            if (action.exit)\r\n            return {\r\n                ...state,\r\n                loadProject: false,\r\n                idProject: null,\r\n                typeProject: null,\r\n                components: []\r\n            }\r\n            else return state;\r\n        }\r\n        default: return state;\r\n    }\r\n};","import {LOAD_USER_CABINET, LOG_OUT_CABINET, ERROR_CABINET, CREATE_PROJECT, LOAD_UPDATE_PROJECT} from './actions';\r\n\r\nconst initialState = {\r\n    active: false,\r\n    idUser: null,\r\n    projects: [],\r\n    error: null,\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case LOAD_USER_CABINET: {\r\n\r\n            return {\r\n                ...state,\r\n                active: action.active,\r\n                idUser: action.idUser,\r\n                projects: [...action.projects]\r\n            }\r\n        }\r\n\r\n        case CREATE_PROJECT: {\r\n            return {\r\n                ...state,\r\n                projects: [...action.projects]\r\n            }\r\n        }\r\n\r\n        case LOAD_UPDATE_PROJECT: {\r\n            return {\r\n                ...state,\r\n                projects: state.projects.map(item => {\r\n                    if (item.id === action.idProject)\r\n                        item.components = [...action.components]\r\n                return item;\r\n                })\r\n            }\r\n        }\r\n\r\n        case LOG_OUT_CABINET: {\r\n            return {\r\n                ...state,\r\n                active: false,\r\n                idUser: null,\r\n                projects: []\r\n            }\r\n        }\r\n\r\n        case ERROR_CABINET: {\r\n            return {\r\n                ...state,\r\n                error: action.error\r\n            }\r\n        }\r\n        default: return state;\r\n    }\r\n}\r\n\r\n","import {combineReducers} from 'redux';\r\nimport reducerBuilder from './reducerBuilder';\r\nimport reducerCabinet from './reducerCabinet';\r\n\r\nexport default combineReducers({\r\n    builder: reducerBuilder,\r\n    cabinet: reducerCabinet,\r\n});","import {createStore, applyMiddleware, compose} from 'redux';\r\nimport firebase from  '../Firebase/Firebase';\r\nimport thunk from 'redux-thunk';\r\nimport combineReducers from './reducers';\r\n\r\nconst composeEnhancers =\r\n  typeof window === 'object' &&\r\n  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?\r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\r\n    }) : compose;\r\n\r\nconst middleware = composeEnhancers(\r\n  applyMiddleware(thunk.withExtraArgument({firebase})));\r\n\r\nconst store = createStore(combineReducers, middleware);\r\nexport default store;","import {loadUserAction, errorAction, logOutAction} from '../actions';\r\n\r\nconst middlewareLogin = (email,password) => async (dispatch,getState, {firebase}) => {\r\n        await firebase.login(email,password)\r\n        .then(response =>{\r\n            firebase.db.collection(\"users\").doc(response.user.uid).get()\r\n            .then(docUser => {\r\n                let user = docUser.data();\r\n                dispatch(loadUserAction({uid: docUser.id, projects: [...user.projects]}))\r\n            })\r\n        })\r\n        .catch((error) => {\r\n            console.error(error.message);\r\n            dispatch(errorAction(error.message));\r\n        });\r\n    }\r\n\r\nconst middlewareLoadUserData = (uid) => async (dispatch,getState, {firebase}) => {\r\n        let isError = null;\r\n        await firebase.db.collection(\"users\").doc(uid).get()\r\n        .then(docUser => {\r\n            let user = docUser.data();\r\n            dispatch(loadUserAction({uid: uid, projects: [...user.projects]}))\r\n        })\r\n        .catch((error) => {\r\n            console.error(error.message);\r\n            dispatch(errorAction(error.message));\r\n            isError = true;\r\n        });\r\n\r\n        if (!isError) return true;\r\n        else return false;\r\n    }\r\n\r\nconst middlewareLogOutUser = (uid) => async (dispatch,getState, {firebase}) => {\r\n    await firebase.signOut()\r\n    .then (response => {\r\n        dispatch(logOutAction());\r\n    })\r\n    .catch((error) => {\r\n        console.error(error.message);\r\n        dispatch(errorAction(error.message));\r\n    });\r\n}\r\nexport {\r\n    middlewareLogin,middlewareLoadUserData, middlewareLogOutUser\r\n}","import React from 'react';\r\nimport firebase from './Firebase';\r\nconst firebaseContext = React.createContext(firebase);\r\nexport default firebaseContext;","import React from 'react';\r\nimport firebaseContext from '../Firebase/firebaseContext';\r\n\r\n\r\nconst withFirebase = Component => props => {\r\n        return (\r\n            <firebaseContext.Consumer>\r\n                {firebase => <Component {...props} firebase = {firebase} /> }\r\n            </firebaseContext.Consumer>\r\n        )\r\n};\r\n\r\n\r\nexport default withFirebase;","import React,{useState} from 'react';\r\nimport './Loader.scss';\r\nexport default function(props) {\r\n  \r\n    const [path] = useState(props.path ? process.env.PUBLIC_URL + props.path : process.env.PUBLIC_URL + `/img/loading.gif`);\r\n    const [mode] = useState(props.mode ? props.mode : false);\r\n    return (\r\n            <div className = {`loaderBox ${mode && 'specialMode'}`}>\r\n                <img className = 'loader' src = {path} alt = 'loader'></img> \r\n                {!mode && <p>{`Loading ${props.type}`}</p>}\r\n            </div>\r\n    )\r\n}","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst AnimationTitle = styled.h3`\r\n    user-select: none;\r\n    transition: .4s linear all;\r\n    color: ${props => props.dir === 'up' ? 'red' : 'blue'};\r\n`;\r\n\r\nclass AnimationText extends React.PureComponent {\r\n\r\n    state = {\r\n        tilteContent: this.props.content.split(''),\r\n        currentTitle: this.props.content[0],\r\n        positionTitle: 1,\r\n        directionAnimation: 'up',\r\n        msAnimation: this.props.msAnimation,\r\n        msTimeout: this.props.msAnimation,\r\n        msPauseEnd: this.props.msPauseEnd,\r\n    }\r\n\r\n    _isMounted = false;\r\n    timerAnimation = null;\r\n\r\n    animationTitle = timer => {\r\n        let self = this;\r\n        if (this._isMounted)\r\n        timer = setTimeout( function tick(){\r\n\r\n            if (self._isMounted) {\r\n                if (self.state.directionAnimation === 'up'){\r\n                    let counter = self.state.tilteContent.length;\r\n                    const word = counter > self.state.positionTitle ?\r\n                                self.state.tilteContent[self.state.positionTitle] :\r\n                                self.state.tilteContent[self.state.positionTitle-1];\r\n                    self.setState({\r\n                        ...self.state,\r\n                        currentTitle: self.state.currentTitle + word,\r\n                        positionTitle: self.state.positionTitle + 1,\r\n                        directionAnimation: self.state.positionTitle === counter ? 'down' : 'up',\r\n                        msAnimation: self.state.positionTitle === counter ?\r\n                            self.state.msPauseEnd : self.state.msTimeout\r\n                    });\r\n                }\r\n                if (self.state.directionAnimation === 'down'){\r\n                    let _title = self.state.currentTitle;\r\n                    const length = self.state.currentTitle.length;\r\n                    _title = _title.slice(0,length - 1);\r\n                    self.setState({\r\n                        ...self.state,\r\n                        currentTitle: _title,\r\n                        positionTitle: self.state.positionTitle - 1,\r\n                        directionAnimation: self.state.positionTitle === 2 ? 'up' : 'down',\r\n                        msAnimation: self.state.positionTitle === 2 ?\r\n                            self.state.msPauseEnd : self.state.msTimeout\r\n                    });\r\n                }\r\n            timer = setTimeout(tick, self.state.msAnimation);\r\n            }\r\n        }, this.state.msAnimation);\r\n\r\n    }\r\n\r\n\r\n    render(){\r\n        return (\r\n            <AnimationTitle data-titlebuild dir = {this.state.directionAnimation}>\r\n                {this.state.currentTitle}\r\n            </AnimationTitle>\r\n        )\r\n\r\n    }\r\n\r\n    componentDidMount = (e) => {\r\n        this._isMounted = true;\r\n        this.animationTitle(this.timerAnimation);\r\n    }\r\n\r\n    componentWillUnmount = (e) => {\r\n        this._isMounted = false;\r\n        if (this.timerAnimation) clearTimeout(this.timerAnimation);\r\n    }\r\n}\r\n\r\n\r\nexport default AnimationText;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './registration.scss';\r\n\r\nimport withFirebase from '../withFirebase';\r\n\r\n\r\nclass Registration extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        firebase: PropTypes.object.isRequired, /** @firebase class for use firebase functions */\r\n        indexStream: PropTypes.object.isRequired /** @Events stream object */\r\n    }\r\n\r\n    state = {\r\n        firebase: this.props.firebase,\r\n        error: null,\r\n    }\r\n\r\n    emailRef = null;\r\n    passwordRef = null;\r\n\r\n    setRefEmail = (node) => this.emailRef = node;\r\n    setRefPassword = (node) => this.passwordRef = node;\r\n\r\n    createUser = event => {\r\n\r\n        const email = this.emailRef ? this.emailRef.value : null;\r\n        const password = this.passwordRef ? this.passwordRef.value : null;\r\n        const { firebase } = this.props;\r\n\r\n        if (password && email)\r\n        firebase.registration(email, password)\r\n        .then(response => {\r\n            if (!response) throw new Error('Ivaid registration')\r\n            firebase.db.collection(\"users\").doc(response.user.uid).set({\r\n                'projects': [],\r\n                'email': email,\r\n            }).then(() => this.props.indexStream.emit('EventRegistrationCorrect', response));\r\n        })\r\n        .catch((error) => {\r\n        console.error(error.message);\r\n        this.setState({error: error.message});\r\n        });\r\n        else  return this.setState({error: 'invalid user data'});\r\n    };\r\n\r\n    render(){\r\n        let  { error } = this.state;\r\n        return (\r\n            <div className ='RegistrationBox'>\r\n                <div  className = 'RegistrationBox__RegistrationForm'>\r\n                    <h3>Registration</h3>\r\n                    <form autoComplete = 'off' className = 'RegistrationForm__RegForm'>\r\n                        { error ?\r\n                            <p className = 'error'>{error}</p>\r\n                            : null\r\n                        }\r\n                        <span>E-mail</span>\r\n                        <input placeholder=\"email\" ref = {this.setRefEmail} type = 'text' />\r\n                        <span>Password</span>\r\n                        <input \r\n                            className = 'password' \r\n                            autoComplete = \"off\" \r\n                            ref = {this.setRefPassword} \r\n                            type = 'password' \r\n                            placeholder=\"password\"\r\n                        />\r\n                        <input onClick = {this.createUser}\r\n                                className = 'RegForm__loginButton'\r\n                                type = 'button'\r\n                                value = 'registration'\r\n                        />\r\n                    </form>\r\n                </div>\r\n                </div>\r\n        )\r\n    }\r\n\r\n}\r\nexport default withFirebase(Registration);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Reveal from 'react-reveal/Reveal';\r\nimport {Redirect} from 'react-router-dom';\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\r\nimport AnimationText from '../../components/AnimationText/AnimationTitle';\r\nimport Events from 'events';\r\nimport {middlewareLogin} from '../../redux/middleware/loadUserMiddleware';\r\n\r\nimport Loader from '../../components/loading/Loader';\r\nimport Registration from '../../components/Registration/Registration';\r\n\r\nimport {connect} from 'react-redux';\r\n\r\nimport './index.scss';\r\n\r\n\r\nclass Index extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        active: PropTypes.bool, /** @active - status firebase auth */\r\n        dispatch: PropTypes.func.isRequired, /** @dispatch - redux */\r\n        history: PropTypes.object.isRequired, /** @Router HTML5 history */\r\n        location: PropTypes.object.isRequired, /** @Router */\r\n        match: PropTypes.object.isRequired, /** @Router */\r\n        wrongEnter: PropTypes.string, /** @Error about invalid enter */\r\n        config: PropTypes.object, /** @config - app settings */\r\n    }\r\n\r\n    indexStream = new Events();\r\n\r\n    state = {\r\n        title:  \"Constructor\",\r\n        registrationActive: false,\r\n        regStatus: false,\r\n        wrongEnter: false,\r\n        error: '',\r\n    }\r\n\r\n    emailImput = null;\r\n    passwordImput = null;\r\n\r\n    statusRegistration = event => {\r\n        event.additionalUserInfo.isNewUser ?\r\n            this.setState({\r\n                ...this.state,\r\n                regStatus: true,\r\n                registrationActive: false,\r\n                error: 'Account create!'\r\n            })\r\n        : console.error('error registration');\r\n    }\r\n\r\n    showBox = event => {\r\n        try {\r\n            this.setState ({\r\n                ...this.state,\r\n            registrationActive: this.state.registrationActive ? false : true\r\n            });\r\n        } catch (e) {\r\n        console.error('animation fail');\r\n        }\r\n        event.stopPropagation();\r\n    }\r\n\r\n    authTo = event => {\r\n            if (this.emailImput && this.passwordImput)\r\n            this.props.dispatch(middlewareLogin(this.emailImput.value, this.passwordImput.value));\r\n            event.stopPropagation();\r\n    }\r\n\r\n    emailRef = node => this.emailImput = node;\r\n    passwordRef = node => this.passwordImput = node;\r\n\r\n    render(){\r\n\r\n        if (this.props.active) return <Redirect to = { '/Cabinet'} />\r\n        else if (!this.props.active) {\r\n            return (\r\n                <Reveal effect=\"fade\">\r\n                    <div className = 'LoginPage flex-column'>\r\n                        <h1>{this.state.title}</h1>\r\n                        <div className = 'LoginPage__LoginBox'>\r\n                            <AnimationText\r\n                                content = 'Build your landing page!'\r\n                                msPauseEnd = {1000}\r\n                                msAnimation = {150}\r\n                            />\r\n                            <form className = 'LoginBox__LoginForm'>\r\n                                <h3>Connect form</h3>\r\n                                {this.props.wrongEnter || this.state.regStatus ?\r\n                                    <p className = 'error'>{this.props.wrongEnter}</p>\r\n                                    : null\r\n                                }\r\n                                    <p>E-mail</p>\r\n                                    <input \r\n                                        autoComplete = 'off'\r\n                                        placeholder=\"email\" \r\n                                        ref = {this.emailRef}\r\n                                        type = 'text' \r\n                                    />\r\n                                    <p>Password</p>\r\n                                    <input \r\n                                        ref = {this.passwordRef} \r\n                                        type = 'password' \r\n                                        autoComplete = 'off'\r\n                                        placeholder=\"password\"\r\n                                    />\r\n                                    <input \r\n                                        onClick = {this.authTo} \r\n                                        className = 'LoginForm__loginButton enterInput'\r\n                                        type = 'button'\r\n                                        value = 'enter' />\r\n                                    <input\r\n                                        onClick = {this.showBox}\r\n                                        className = {this.state.registrationActive ?\r\n                                            `LoginForm__loginButton registration selected` : \r\n                                            'LoginForm__loginButton registration'\r\n                                        }\r\n                                        type = 'button'\r\n                                        value = 'registration'\r\n                                    />\r\n                            </form>\r\n                        </div>\r\n                            <TransitionGroup component={null}>\r\n                                {this.state.registrationActive &&\r\n                                    <CSSTransition\r\n                                        timeout={300}\r\n                                        unmountOnExit\r\n                                        classNames=\"RegAnim\">\r\n                                        <Registration  indexStream = {this.indexStream} />\r\n                                    </CSSTransition>\r\n                                }\r\n                            </TransitionGroup>\r\n                    </div>\r\n                </Reveal>\r\n            )\r\n        } else  return <Loader path = '/img/loading.gif' type = 'session' />\r\n    }\r\n\r\n    componentDidMount = (e) => {\r\n        this.indexStream.on('EventRegistrationCorrect', this.statusRegistration);\r\n    }\r\n    componentWillUnmount = (e) => {\r\n        this.indexStream.off('EventRegistrationCorrect', this.statusRegistration);\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        active: state.cabinet.active, \r\n        wrongEnter: state.cabinet.error\r\n    }\r\n  }\r\n\r\nexport default connect(mapStateToProps)(Index);","\r\nimport {errorAction, loadUserAction, loadUpdateCurrentProject} from '../actions';\r\n\r\nconst middlewareDelete = item => async (dispatch,getState, {firebase}) => {\r\n\r\n    await firebase.db.collection('users').doc(item.uid).get()\r\n    .then(user => user.data())\r\n    .then(data => {\r\n        return {id: item.uid, projects: data.projects.filter(itemdb => itemdb.id !== item.id)};\r\n    })\r\n    .then(data => {\r\n        firebase.db.collection(\"users\").doc(item.uid).update({\r\n            \"projects\": data.projects\r\n        })\r\n        .then(response => {\r\n            dispatch(loadUserAction({uid: item.uid, projects: data.projects}));\r\n        });\r\n    })\r\n    .catch((error) => {\r\n        console.error(error.message);\r\n        dispatch(errorAction(error.message));\r\n    });\r\n}\r\n\r\nconst middlewareDeleteProjectComponent = item => async (dispatch, getState, {firebase}) => {\r\n    await firebase.db.collection('users').doc(item.uid).get()\r\n    .then(user => user.data())\r\n    .then(data => {\r\n        const userProjects = [...data.projects];\r\n        const findProject = userProjects.find(project => item.id === project.id);\r\n        if (!findProject) throw new Error('No found project');\r\n        findProject.components = findProject.components.filter(component =>\r\n            component.id !== item.idComponent\r\n        );\r\n        return {dataUpdate: data, findProject: findProject};\r\n    })\r\n    .then(data => {\r\n        let {dataUpdate} = data;\r\n        let {findProject} = data;\r\n        firebase.db.collection(\"users\").doc(item.uid).update({\r\n            \"projects\": dataUpdate.projects\r\n        })\r\n        .then(response => {\r\n            dispatch(loadUpdateCurrentProject({\r\n                components: [...findProject.components],\r\n                idProject: item.id,\r\n                sectionsProject: [...item.sectionsProject],\r\n            }))\r\n        });\r\n    })\r\n    .catch(error => {\r\n        console.error(error.message);\r\n        dispatch(errorAction(error.message));\r\n        return null;\r\n    });\r\n\r\n    return item.idComponent;\r\n}\r\n\r\nexport {middlewareDeleteProjectComponent};\r\nexport default middlewareDelete;\r\n","import React, {useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './icon.scss';\r\n\r\nfunction Icon(props){\r\n    const [path] = useState(props.path);\r\n    const [className] = useState(props.className ? props.className : null);\r\n    const [draggable] = useState(props.draggable ? true : false);\r\n\r\n    return (\r\n    <img\r\n        draggable = {draggable}\r\n        onClick = {props.onClick ? props.onClick : null}\r\n        className = {className}\r\n        title = {props.title ? props.title : null}\r\n        src = {process.env.PUBLIC_URL + path } alt = 'icon'>\r\n    </img>\r\n    )\r\n}\r\n\r\nIcon.propTypes = {\r\n    path: PropTypes.string.isRequired, // icon path\r\n    className: PropTypes.string, // class\r\n    draggable: PropTypes.bool // draggable bool\r\n}\r\n\r\nexport default Icon;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './Confirm.scss';\r\n\r\nconst Confirm = props => {\r\n\r\n    return (\r\n        <div className = 'wrapperConfirm'>\r\n            <div className = 'confirmSave'>\r\n                <span>Detected new changes</span>\r\n                <input\r\n                    className = 'saveCofirm'\r\n                    onClick = {props.cbSaveChanges}\r\n                    type = 'button'\r\n                    value = 'Save changes'\r\n                />\r\n                <input\r\n                    className = 'cancelCofirm'\r\n                    onClick = {props.cbCancelSave}\r\n                    type = 'button'\r\n                    value = 'Cancel'\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nConfirm.propTypes = {\r\n    cbSaveChanges: PropTypes.func.isRequired, // callback\r\n    cbCancelSave: PropTypes.func.isRequired // callback\r\n}\r\n\r\nexport default Confirm;","import React from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport './header.scss';\r\n\r\nimport {middlewareLogOutUser} from '../../redux/middleware/loadUserMiddleware';\r\nimport {connect} from 'react-redux';\r\nimport {Redirect, withRouter} from 'react-router-dom';\r\n\r\nimport eventEmitter from '../../EventEmitter.js';\r\nimport Icon from '../Icon/icon';\r\nimport Confirm from '../confirmBox/Confirm';\r\n\r\nconst iconPath = require('../../config.json').CabinetIcon;\r\n\r\nclass Header extends React.Component {\r\n\r\n    static propTypes = {\r\n        title: PropTypes.string.isRequired, /** @Config title app */\r\n        cabinetStream: PropTypes.object, /** @Events stream cabinet */\r\n        dispatch: PropTypes.func.isRequired, /** @dispatch redux */\r\n        history: PropTypes.object.isRequired, /** @Router HTML5 history */\r\n        location: PropTypes.object.isRequired, /** @Router */\r\n        match: PropTypes.object, /** @Router */\r\n    };\r\n\r\n    state = {\r\n        idUser: this.props.idUser,\r\n        title: this.props.title,\r\n        isChange: false,\r\n        redirectConfirm: false,\r\n        redirectAbout: {\r\n            path:  '/Cabinet/About',\r\n            redirectA: false,\r\n        },\r\n        redirectCabinet: {\r\n            path:  '/Cabinet',\r\n            redirectC: false,\r\n        }\r\n    };\r\n\r\n    confirm = event => {\r\n        if (typeof event !== 'object')\r\n        this.setState({isChange: event});\r\n        else this.setState({isChange: event.false, redirectConfirm: event.confirm});\r\n    }\r\n\r\n    confirmSaveDetectChanges = event => {\r\n        eventEmitter.emit('EventRedirectSaveChanges');\r\n        this.setState({\r\n            redirectConfirm: false,\r\n            redirectCabinet: {\r\n                ...this.state.redirectCabinet,\r\n                redirectC: true\r\n            }\r\n        });\r\n    };\r\n\r\n    logOut = event => {\r\n        if (this.state.idUser)\r\n            this.props.dispatch(middlewareLogOutUser(this.props.idUser));\r\n        event.stopPropagation();\r\n    };\r\n\r\n    redirectAbout = event => {\r\n        const isPath = this.props.location.pathname !== this.state.redirectAbout.path;\r\n        if (isPath && !this.state.isChange)\r\n           this.setState({\r\n                redirectConfirm: false,\r\n                redirectAbout: {\r\n                   ...this.state.redirectAbout,\r\n                   redirectA: true\r\n               }\r\n           });\r\n           else this.setState({redirectConfirm: true});\r\n        event.stopPropagation()\r\n    };\r\n\r\n    redirectCabinet = event => {\r\n        if (event !== 'cancelMode'){\r\n            const isPath = this.props.location.pathname !== this.state.redirectCabinet.path;\r\n            if (isPath && this.state.isChange === false)\r\n            this.setState({\r\n                redirectConfirm: false,\r\n                redirectCabinet: {\r\n                    ...this.state.redirectCabinet,\r\n                    redirectC: true\r\n                }\r\n            });\r\n            else if (!this.state.redirectConfirm) this.setState({redirectConfirm: true});\r\n            event.stopPropagation();\r\n\r\n        } else this.setState({\r\n            redirectConfirm: false,\r\n            redirectCabinet: {\r\n                ...this.state.redirectCabinet,\r\n                redirectC: true\r\n            }\r\n        });\r\n    }\r\n\r\n    add = event => {\r\n        this.props.cabinetStream.emit('EventChangeWorkMode',{active: true, action: 'newProject'});\r\n        event.stopPropagation()\r\n    };\r\n\r\n    render(){\r\n        let {redirectA} = this.state.redirectAbout;\r\n        let {redirectC} = this.state.redirectCabinet;\r\n\r\n        if (redirectA) return <Redirect to = {this.state.redirectAbout.path} />\r\n        if(redirectC) return <Redirect to = {this.state.redirectCabinet.path} />\r\n\r\n        return (\r\n            <React.Fragment>\r\n            {this.state.isChange && this.state.redirectConfirm ?\r\n                <Confirm \r\n                    cbSaveChanges = {this.confirmSaveDetectChanges}\r\n                    cbCancelSave = {() => this.redirectCabinet('cancelMode')}\r\n                /> : null}\r\n                <header>\r\n                    <div className = 'container'>\r\n                        <div className = 'flex-row'>\r\n                                <div onClick = {this.redirectCabinet} className = 'header__CabinetInfo'>\r\n                                    <Icon className ='mainIcon' path = {iconPath} />\r\n                                    <h3 className = 'tilteApp'>{this.state.title}</h3>\r\n                                </div>\r\n                                {this.props.location.pathname === '/Cabinet' ?\r\n                                    <div onClick = {this.add} className = 'header__newProject__AddButton'>\r\n                                        <Icon className = 'Cabinet' path = '/img/plus.png' />\r\n                                    </div>\r\n                                    : null\r\n                                }\r\n                                    <div  className = 'Navigator'>\r\n                                        <Icon className = 'about' onClick = {this.redirectAbout}\r\n                                            title = 'about'\r\n                                            path = '/img/about_logo.svg'\r\n                                        />\r\n                                        <Icon className = 'logoutButton'\r\n                                            onClick = {this.logOut}\r\n                                            title = 'logOut'\r\n                                            path = '/img/logOut.svg'\r\n                                        />\r\n                                    </div>\r\n                        </div>\r\n                </div>\r\n                </header>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n    componentWillMount = () => {\r\n        eventEmitter.on('EventRedirectConfirm', this.confirm);\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        eventEmitter.off('EventRedirectConfirm', this.confirm);\r\n    }\r\n}\r\n\r\nexport default connect()(withRouter(Header));","import React, {useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport eventEmitter from '../../EventEmitter';\r\n\r\nconst ImageItem = props => {\r\n\r\n    const {selected} = props;\r\n    const [id] = useState(props.id);\r\n    const [urlRegular] = useState(props.urls.regular);\r\n    const [urlFull] = useState(props.urls.full);\r\n    const [isFull] = useState(props.isFull);\r\n    const [urlContent] = useState(props.urlContent);\r\n    const showImageMenu = event => {\r\n\r\n       eventEmitter.emit(\"EventShowMenuImage\",{\r\n            id: id,\r\n            url: urlRegular,\r\n            urlFull: urlFull,\r\n            iframe: urlContent\r\n        });\r\n        event.stopPropagation();\r\n    }\r\n\r\n    return (\r\n        <div className = {selected ? 'ItemBox selected' : 'ItemBox'}>\r\n            <img\r\n                className = 'ImageItem'\r\n                onClick = {showImageMenu}\r\n                src = {isFull ? urlFull : urlRegular}\r\n                alt = 'item'\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nImageItem.propTypes = {\r\n    id: PropTypes.oneOfType([\r\n        PropTypes.string,\r\n        PropTypes.number,\r\n    ]),\r\n    urls: PropTypes.object, // data with image path\r\n    isFull: PropTypes.bool, // mode view\r\n    urlContent: PropTypes.string // content path\r\n}\r\n\r\nexport default ImageItem;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Loader from '../../loading/Loader';\r\n\r\nconst CreateProject = props => {\r\n\r\n    const content = props.content;\r\n    const {disabled,validateName,name,validateType,typeClassName} = content;\r\n    const nameLength = name.length;\r\n\r\n    let isNumber = props.nameLength >= 4 && props.nameLength <= 20;\r\n\r\n    return (\r\n    <div className = 'Modal'>\r\n        <h3>Create new Project</h3>\r\n        { nameLength <= 3 ?\r\n            <span className = 'warning'>{props.warningLengthMin}</span> : null\r\n        }\r\n        { nameLength >= 20 ?\r\n            <span className = 'warning'>{props.warningLengthMax}</span> : null\r\n        }\r\n        {\r\n            isNumber && !validateName ?\r\n            <span className = 'warning'>{props.warningNumber}</span> : null\r\n        }\r\n        <input\r\n            className = {typeClassName ? 'ready' : 'wrong'}\r\n            value = {props.name}\r\n            onChange = {props.cbValidateName}\r\n            type = 'text'\r\n            placeholder = \"Project name\"\r\n        />\r\n        { !validateType ?\r\n            <span className = 'warning'>{props.warningType}</span> : null\r\n        }\r\n        <select onChange = {props.cbSelectOption} >\r\n            <option value = 'empty'>--------</option>\r\n            <option value = 'landing'>Landing</option>\r\n        </select>\r\n        <input \r\n            onClick = {props.cbAddNewProject}\r\n            className = 'acceptButton'\r\n            disabled = {disabled}\r\n            type = 'button'\r\n            value = 'Submit'\r\n        />\r\n        <input onClick = {props.cbCancel} type ='button' value = 'Cancel' />\r\n        {props.loading && <Loader mode = 'create' />}\r\n    </div>\r\n    )\r\n}\r\n\r\nCreateProject.propTypes = {\r\n    content: PropTypes.object, // type color className\r\n    warningType: PropTypes.string, // errors\r\n    warningLengthMax: PropTypes.string, // error max length\r\n    warningLengthMin: PropTypes.string, // error min length\r\n    cbValidateName: PropTypes.func.isRequired, // callback validate\r\n    cbAddNewProject: PropTypes.func.isRequired, // callback add new project\r\n}\r\n\r\nexport default CreateProject;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport eventEmitter from '../../../EventEmitter';\r\nimport Icon from '../../Icon/icon';\r\nimport Loader from '../../loading/Loader';\r\n\r\nclass  SearchModal extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        modalSearchMode: PropTypes.string.isRequired, // search mode\r\n        content: PropTypes.object, // with search data\r\n        cbCancel: PropTypes.func.isRequired, // callback cancel\r\n        cbShowImage: PropTypes.func.isRequired, // callback show image\r\n        cbSetSelectedImage: PropTypes.func.isRequired, // callback show image\r\n    }\r\n\r\n    state = {\r\n        mode: this.props.modalSearchMode,\r\n        items: this.props.images,\r\n    }\r\n\r\n    search = event => {\r\n        const value = this.refSearch ? this.refSearch.value : null;\r\n        this.props.cbSearch(event,value, this.props.modalSearchMode);\r\n        event.stopPropagation();\r\n    }\r\n\r\n    refSearch = null;\r\n    refSearchFunc = node => this.refSearch = node;\r\n\r\n    render(){\r\n\r\n        let {content} = this.props;\r\n        return (\r\n            <React.Fragment>\r\n                <div className = 'Modal Modal-search'>\r\n                <h3>\r\n                {this.props.modalSearchMode ? \r\n                    `Search ${this.props.modalSearchMode}` : '' \r\n                }\r\n                </h3>\r\n                { this.props.error ?\r\n                    <span className = 'error'>{content.error}</span> : null\r\n                }\r\n                    <input ref = {this.refSearchFunc} type = 'text' />\r\n                        <input\r\n                            disabled = {content.dissabled}\r\n                            className = 'acceptButton'\r\n                            type = 'button'\r\n                            value = 'Search'\r\n                            onClick = {this.search}\r\n                        />\r\n                    <input onClick = {this.props.cbCancel} type ='button' value = 'Cancel' />\r\n                <div className = 'searchResultBox'>\r\n                    {this.state.items}\r\n                    {this.props.loading ? <Loader type = 'images' /> : null}\r\n                </div>\r\n                </div>\r\n                {  this.props.menuActive ?\r\n                    <div className = 'ActionModalSearch'>\r\n                    <button onClick = {this.props.cbShowImage} className = 'actionModalSearch__view'>\r\n                        <Icon path = '/img/view.png' />\r\n                    </button>\r\n                    <button onClick = {this.props.cbSetSelectedImage} className = 'actionModalSearch__settings'>\r\n                        <Icon path = '/img/settings.png' />\r\n                    </button>\r\n                    </div>\r\n                    : null\r\n                }\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n    componentDidUpdate = (prevProps,prevState) => {\r\n        let {content} = this.props;\r\n        let {content: contentPrev} = prevProps;\r\n        const haveUpdate = (contentPrev.images !== content.images && content.images);\r\n        const isSelected = contentPrev.selectedItem !== content.selectedItem;\r\n\r\n        if (haveUpdate || isSelected){\r\n            let _items = this.props.cbMakeImageResultBox(content.images);\r\n            this.setState({\r\n                ...this.state,\r\n                items: [..._items]\r\n            });\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        eventEmitter.emit('EventBlockScroll', 'window');\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        eventEmitter.emit('EventBlockScroll', 'default');\r\n    }\r\n}\r\n\r\nexport default SearchModal;","import React,{Fragment} from 'react';\r\n\r\nimport isFetch from 'isomorphic-fetch';\r\nimport PropTypes from 'prop-types';\r\nimport eventEmitter,{controllerStream} from '../../EventEmitter.js';\r\nimport ImageItem from '../imageViewer/imageItem';\r\n\r\nimport CreateProject from './createProject/createProject';\r\nimport SearchModal from './Search/searchModal';\r\nimport './modal.scss';\r\nrequire('es6-promise').polyfill();\r\n\r\nclass ModalWindow extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        workMode: PropTypes.string.isRequired, /** @Mode for modal */\r\n        cabinetStream: PropTypes.object, /** @Events stream cabinet */\r\n        eventStreamBuild: PropTypes.object, /** @Events stream build */\r\n        idComponent: PropTypes.oneOfType([\r\n            PropTypes.string,\r\n            PropTypes.number\r\n        ]) /** @Id current user project */\r\n    }\r\n\r\n    state = {\r\n        readyAnimation: false,\r\n        workMode: this.props.workMode,\r\n        loading: false,\r\n        items: [],\r\n        images: {\r\n            loading: false,\r\n            buttonSearchDisabled: false,\r\n            selectedItem: null, \r\n            showUrl: null, \r\n            images: [],\r\n            urlFull: null,\r\n            imageBoxView: false, \r\n            iframe: null,\r\n            error: ''\r\n        },\r\n        newProject: {\r\n            validateName: false,\r\n            validateType: false,\r\n            disabled: true,\r\n            name: '',\r\n            type: 'empty'\r\n        },\r\n        imageMenuActive: false,\r\n        warning: {\r\n            lengthMax: 'Max length: 20 laters',\r\n            warningNumber: `Don't use numbers`,\r\n            lengthMin: 'Min length: 4 letters',\r\n            type: 'Select type of webpage',\r\n        }\r\n    }\r\n\r\n    inputSearch = null;\r\n    inputSelect = null;\r\n\r\n    searchData = (event,value, mode) => {\r\n\r\n        this.setState({...this.state, \r\n            images: {\r\n                ...this.state.images,\r\n                loading: true,\r\n                buttonSearchDisabled: true\r\n            }\r\n        });\r\n\r\n        let search = null;\r\n        if (value) search = value;\r\n        else search = this.inputSearch.value;\r\n\r\n        if (mode !== 'media'){\r\n        const modeAPI = 'search/photos/?page=1&per_page=40&query=';\r\n        const api = `https://api.unsplash.com/${modeAPI}`;\r\n \r\n        isFetch(`${api + search}&client_id=${process.env.REACT_APP_UNSPLASH_TOKEN}`)\r\n        .then(response => {\r\n            if (response.ok) return response.json();\r\n            else throw new Error('request invalid');\r\n        })\r\n        .then(response => {\r\n            let {results} = response;\r\n            if (results.length)\r\n            this.setState({\r\n                ...this.state,\r\n                images: {\r\n                    ...this.state.images,\r\n                    loading: false,\r\n                    imageBoxView: true,\r\n                    error: '',\r\n                    images: [...results],\r\n                    buttonSearchDisabled: false\r\n                },\r\n            });\r\n            else throw new Error('Photos not found');\r\n        })\r\n        .catch(error => {\r\n            console.error(error.message);\r\n            this.setState({\r\n                ...this.state,\r\n                images: {\r\n                    ...this.state.images,\r\n                    buttonSearchDisabled: false,\r\n                    loading: false,\r\n                    error: error.message},\r\n                imageBoxView: false,\r\n            });\r\n        });\r\n        } else this.searchYouTubeAPI(search);\r\n    }\r\n\r\n    \r\n    searchYouTubeAPI = (search) => {\r\n\r\n        const API = `https://www.googleapis.com/youtube/v3/search?part=snippet`;\r\n        const RAITE = `&maxResults=25&order=date&q=${search}`;\r\n        const KEY = `&key=${process.env.REACT_APP_YOUTUBE_SEARCH_TOKEN}`;\r\n        isFetch(API + RAITE + KEY)\r\n        .then(res => {\r\n            if (res.ok)\r\n            return res.json();\r\n            else throw new Error (`Error ${res.status}`);\r\n        })\r\n        .then(res => {\r\n            const arrayItems = [];\r\n            res.items.forEach(item => {\r\n                arrayItems.push({\r\n                    urls: { regular: item.snippet.thumbnails.high.url },\r\n                    videoId: item.id.videoId\r\n                })\r\n            });\r\n            return arrayItems;\r\n        })\r\n        .then(results => {\r\n            this.setState({\r\n                ...this.state,\r\n                images: {\r\n                    ...this.state.images,\r\n                    loading: false,\r\n                    imageBoxView: true,\r\n                    error: '',\r\n                    images: [...results],\r\n                    buttonSearchDisabled: false\r\n                },\r\n            });\r\n        })\r\n        .catch(error => console.error(error));\r\n    }\r\n\r\n    showMenuImage = event => {\r\n        this.setState({\r\n            ...this.state, \r\n            imageMenuActive: true,\r\n            images: {\r\n                ...this.state.images,\r\n                selectedItem: event.id, \r\n                showUrl: event.url,\r\n                urlFull: event.urlFull,\r\n                iframe: event.iframe\r\n\r\n            }\r\n        });\r\n    }\r\n\r\n    showImage = event => {\r\n\r\n        const {showUrl, iframe} = this.state.images;\r\n\r\n        this.props.eventStreamBuild.emit(\"EventView\", {\r\n            action: true, \r\n            target: showUrl ? showUrl : null,\r\n            iframe: iframe,\r\n            mode: this.props.modalSearchMode\r\n        });\r\n        event.stopPropagation();\r\n    }\r\n\r\n    setSelectedImage = event => {\r\n\r\n        let data = {...this.state.images};\r\n        if (this.props.modalSearchMode === 'background'){\r\n            controllerStream.emit(`EventSetBackgroundImage${this.props.idComponent}`,data);\r\n            eventEmitter.emit(`EventSetBImageInstumentPanel`,{images: data, mode: this.props.modalSearchMode});\r\n        } else if (this.props.modalSearchMode === 'image'){\r\n            controllerStream.emit(`EventSetCurrentImage${this.props.idComponent}`, data);\r\n            eventEmitter.emit(`EventSetBImageInstumentPanel`, {images: data,  mode: this.props.modalSearchMode });\r\n        } else if (this.props.modalSearchMode === 'media'){\r\n            controllerStream.emit(`EventSetContentMedia${this.props.idComponent}`,{\r\n                    iframe: data.iframe,\r\n                    mode: this.props.modalSearchMode\r\n                }\r\n            );\r\n            eventEmitter.emit(`EventSetIframe`, {iframe: data.iframe});\r\n        }\r\n\r\n        event.stopPropagation();\r\n    };\r\n\r\n    makeImageResultBox = (items) => {\r\n        if (!items) return null;\r\n        return items.map((item,i) =>{\r\n                return <ImageItem\r\n                            key = {`item${item.videoId}${i}`}\r\n                            id = {i}\r\n                            urlContent = {item.videoId ? item.videoId : null}\r\n                            selected = {this.state.images.selectedItem === i ? true : false} \r\n                            isFull = {false}\r\n                            urls = {item.urls}\r\n                        />\r\n        });\r\n\r\n    }\r\n\r\n    addNewProject = event => {\r\n        let mode = this.state[this.state.workMode];\r\n        if (mode.validateType &&  mode.validateName) {\r\n\r\n            this.setState({\r\n                ...this.state,\r\n                loading: true,\r\n            });\r\n            this.props.cabinetStream.emit('EventAddProject',\r\n            {\r\n                title: this.state[this.state.workMode].name,\r\n                type: this.state[this.state.workMode].type\r\n            });\r\n\r\n            this.props.cabinetStream.emit('EventChangeWorkMode',{action: 'default'});\r\n        }\r\n    }\r\n\r\n    selectOption = event => {\r\n\r\n        let inputs = {...this.state[this.state.workMode]};\r\n        inputs.type = event.target.value;\r\n        inputs.validateType = inputs.type !== 'empty';\r\n        inputs.disabled = inputs.validateType && inputs.validateName ? false : true;\r\n        this.setState({\r\n            ...this.state,\r\n            [this.state.workMode]: inputs\r\n        });\r\n    }\r\n\r\n    validateName = event => {\r\n\r\n        let inputs = {...this.state[this.state.workMode]};\r\n        inputs.name = event.target.value;\r\n        inputs.validateName = /^\\D{4,20}$/i.test(inputs.name);\r\n        inputs.disabled = inputs.validateType && inputs.validateName ? false : true;\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            [this.state.workMode]: inputs\r\n        })\r\n    };\r\n\r\n    cancel = event => {\r\n\r\n        if (this.state.workMode === 'Search')\r\n        this.props.eventStreamBuild.emit(\"EventModalSearchOn\", {action: 'offline', mode: null});\r\n        else  this.props.cabinetStream.emit('EventChangeWorkMode',{active: false, action: 'default'});\r\n    }\r\n\r\n    refSelect = (node) => this.inputSelect = node;\r\n    refSearch = node => this.inputSearch = node;\r\n\r\n\r\n\r\n    render(){\r\n           switch (this.state.workMode){\r\n            case 'newProject':\r\n                return (\r\n                        <CreateProject\r\n                                content = {this.state[this.state.workMode]}\r\n                                warningType = {this.state.warning.type}\r\n                                warningNumber = {this.state.warning.warningNumber}\r\n                                warningLengthMin = {this.state.warning.lengthMin}\r\n                                warningLengthMax = {this.state.warning.lengthMax}\r\n                                cbValidateName = {this.validateName}\r\n                                cbSelectOption = {this.selectOption}\r\n                                cbAddNewProject = {this.addNewProject}\r\n                                cbCancel = {this.cancel}\r\n                                loading = {this.state.loading}\r\n                        />\r\n                )\r\n            case 'Search':\r\n                    return (\r\n                            <div className = 'searchWrapper'> \r\n                                <SearchModal\r\n                                    content = {this.state.images}\r\n                                    cbCancel = {this.cancel}\r\n                                    menuActive = {this.state.imageMenuActive}\r\n                                    cbMakeImageResultBox = {this.makeImageResultBox}\r\n                                    cbShowImage = {this.showImage}\r\n                                    cbSetSelectedImage = {this.setSelectedImage}\r\n                                    modalSearchMode = {this.props.modalSearchMode}\r\n                                    cbSearch = {this.searchData}\r\n                                    loader = {this.state.loading}\r\n                                />\r\n                            </div>\r\n                    )\r\n\r\n            default: return <Fragment></Fragment>\r\n        }\r\n    }\r\n\r\n    componentDidUpdate = () => {\r\n        if (!this.state.readyAnimation){\r\n            this.setState({\r\n                ...this.state,\r\n                readyAnimation: true,\r\n            });\r\n        }\r\n    }\r\n    \r\n\r\n    componentDidMount = event => {\r\n        if (this.state.workMode === 'Search')\r\n            eventEmitter.on('EventShowMenuImage', this.showMenuImage);\r\n\r\n\r\n            if (!this.state.readyAnimation)\r\n            this.setState({\r\n                ...this.state,\r\n                readyAnimation: true,\r\n            });\r\n    }\r\n\r\n    componentWillUnmount = event => {\r\n        if (this.state.workMode === 'Search')\r\n            eventEmitter.off('EventShowMenuImage', this.showMenuImage);\r\n    }\r\n}\r\n\r\nexport default ModalWindow;\r\n\r\n","import {createProjectAction, errorAction} from '../actions';\r\n\r\n\r\nfunction random(min){\r\n    return `${Math.floor(min + Math.random() * (10000-min))}`\r\n}\r\n\r\n\r\nconst middlewareCreateProject = (uid, list, title, type) => async (dispatch,getState, {firebase}) => {\r\n    let lastProject = [...list];\r\n    const lastIndex = lastProject.length  ? lastProject[lastProject.length-1].id + 1 : 0;\r\n    const sectionsProject = [];\r\n    if (type === 'portfolio') sectionsProject.push(\"Header\");\r\n    else sectionsProject.push(\"Header\");\r\n    const header = {\r\n        backgroundImage: null,\r\n        backgroundColor: null,\r\n        id: `MainBackgroundHeader${random(0)}`,\r\n        targetSection: \"Header\",\r\n        type: \"background\"\r\n    }\r\n\r\n    lastProject.push({\r\n        id: lastIndex,\r\n        title: title,\r\n        type: type,\r\n        components: [header],\r\n        sectionsProject: [...sectionsProject],\r\n    });\r\n\r\n    await firebase.db.collection(\"users\").doc(uid).update({\r\n        'projects': lastProject,\r\n    })\r\n    .then (() => dispatch(createProjectAction(lastProject)))\r\n    .catch(error => {\r\n        console.error(error.message);\r\n        dispatch(errorAction(error.message));\r\n    })\r\n};\r\n\r\nexport {\r\n    middlewareCreateProject\r\n}","import React, {useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {withRouter, Redirect} from 'react-router-dom';\r\n\r\nfunction Item(props) {\r\n\r\n    const [path] = useState( `/Cabinet/Build/${props.id}`);\r\n    const [productionPath] = useState(`/Cabinet/Build/${props.id}/Production/`);\r\n\r\n    let [canBuild,setCanBuild] = useState(false);\r\n    let [canProd, setCanProd] = useState(false);\r\n\r\n    const [id] = useState(props.id);\r\n    const [name] = useState(props.name);\r\n    const [type] = useState(props.type);\r\n\r\n\r\n    const build = event => {\r\n        if(props.location.pathname !== path)\r\n            setCanBuild(true);\r\n        event.stopPropagation();\r\n    };\r\n\r\n    const showProduction = event => {\r\n        if(props.location.pathname !== path)\r\n        setCanProd(true);\r\n        event.stopPropagation();\r\n    };\r\n\r\n    const deleteItem = event => {\r\n        props.cabinetStream.emit('EventDeleteItem',{\r\n            id: props.id,\r\n            name: props.name,\r\n            type: props.type\r\n        });\r\n        event.stopPropagation();\r\n    };\r\n\r\n\r\n    if (canBuild) return <Redirect to = {path} />\r\n    else if (canProd) return <Redirect to = {productionPath} />\r\n    else return (\r\n            <div className = 'item' data-id = {id}>\r\n                <p className = 'ProjectName'>{name}</p>\r\n                <p className = 'ProjectType'>{type}</p>\r\n                <div className = 'projectController'>\r\n                    <input \r\n                        onClick = {build} \r\n                        className = 'projectControllerButton_enter' \r\n                        type = 'button' \r\n                        value = 'enter build' />\r\n                    <input onClick = {deleteItem} \r\n                        className = 'projectControllerButton_delete' \r\n                        type = 'button' \r\n                        value = 'delete' />\r\n                </div>\r\n                <input onClick = {showProduction} \r\n                    className = 'productionButton' \r\n                    type = 'button' \r\n                    value = 'Production' />\r\n            </div>\r\n        )\r\n}\r\n\r\nItem.propTypes = {\r\n    id: PropTypes.number.isRequired, // id item\r\n    name: PropTypes.string.isRequired, // item name\r\n    type: PropTypes.string.isRequired, // item type\r\n}\r\n\r\nexport default withRouter(Item);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport {middlewareCreateProject} from '../../redux/middleware/createProjectMiddleware';\r\n// import {CSSTransition, TransitionGroup} from 'react-transition-group';\r\nimport './list.scss';\r\n\r\nimport Item from './Item';\r\n\r\nclass List extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        dispatch: PropTypes.func.isRequired, /** @dispatch redux */\r\n        idUser: PropTypes.string.isRequired, /** @UID current user */\r\n        list: PropTypes.array.isRequired, /** @List user projects */\r\n    }\r\n\r\n    state = {\r\n        redirect: false,\r\n    }\r\n\r\n    addNewProject = (item) => {\r\n        if (this.props.idUser) {\r\n            this.props.dispatch(middlewareCreateProject(\r\n                    this.props.idUser,\r\n                    this.props.list,\r\n                    item.title,\r\n                    item.type\r\n                ));\r\n        } else this.setState({...this.state, redirect: true});\r\n    }\r\n\r\n\r\n    makeList = (list) => {\r\n\r\n        return list.map (project => {\r\n\r\n            return(\r\n                <Item\r\n                    key = {project.id}\r\n                    id = {project.id}\r\n                    name = {project.title}\r\n                    type = {project.type}\r\n                    cabinetStream = {this.props.cabinetStream}\r\n                />\r\n            )\r\n        });\r\n    }\r\n\r\n    render(){\r\n        if (this.state.redirect)\r\n            return <Redirect to = { '/'} />\r\n            else return (\r\n                    <div className = 'projectsList__list'>\r\n                        {this.makeList([...this.props.list])}\r\n                    </div>\r\n                )\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.props.cabinetStream.on('EventAddProject',this.addNewProject);\r\n    }\r\n\r\n      componentWillUnmount = () => {\r\n        this.props.cabinetStream.off('EventAddProject',this.addNewProject);\r\n      }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        idUser: state.cabinet.idUser,\r\n        list: [...state.cabinet.projects]\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(List);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport List from '../List/List.jsx';\r\nimport './ProjectsSection.scss';\r\n\r\nconst ProjectsSection = props => {\r\n        return (\r\n            <section className = 'projectsList'>\r\n                <div className = 'container'>\r\n                    <div className = 'flex-column'>\r\n                        <div className = 'projectsList__box'>\r\n                            <h3>Your Projects</h3>\r\n                        </div>\r\n                        <List cabinetStream = {props.cabinetStream} />\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        )\r\n\r\n}\r\n\r\nProjectsSection.propTypes = {\r\n    cabinetStream: PropTypes.object /** @Events stream */\r\n}\r\n\r\nexport default ProjectsSection;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {connect} from 'react-redux';\nimport {Redirect} from 'react-router-dom';\nimport Reveal from 'react-reveal/Reveal';\nimport {CSSTransition} from 'react-transition-group';\n/* ------- Event stream ------- */\nimport Events from 'events';\n/* ------- HOC for het firebase controll object ------- */\nimport withFirebase from '../../components/withFirebase';\n/* ------- Moddlewares ------- */\nimport {middlewareLogOutUser} from '../../redux/middleware/loadUserMiddleware';\nimport middlewareDelete from '../../redux/middleware/middlewareDelete';\n/* ------- Child components ------- */\nimport Loader from '../../components/loading/Loader';\nimport Header from '../../components/header/Header';\nimport Modal from '../../components/modalWindow/ModalWindow';\nimport ProjectsSection from '../../components/ProjectsSection/ProjectsSection';\nimport './Cabinet.scss';\n\nclass Cabinet extends React.PureComponent {\n\n  static propTypes = {\n    firebase: PropTypes.object.isRequired, /** @firebase class for use firebase functions */\n    active: PropTypes.bool, /** @active - status firebase auth */\n    dispatch: PropTypes.func.isRequired, /** @dispatch - redux */\n    history: PropTypes.object.isRequired, /** @Router HTML5 history */\n    location: PropTypes.object.isRequired, /** @Router */\n    match: PropTypes.object.isRequired, /** @Router */\n    idUser: PropTypes.string, /** @Session user id from redux */\n    projects: PropTypes.arrayOf(PropTypes.object).isRequired /** @Projects array with user projects from redux */\n  }\n\n  cabinetStream = new Events();\n\n  state = {\n\tmodalActive: false,\n    workMode: 'default',\n  }\n\n  logOut = () => {\n    this.props.dispatch(middlewareLogOutUser(this.props.idUser));\n  }\n\n  deletItem = event => {\n    this.props.dispatch(middlewareDelete({...event, uid: this.props.firebase.getCurrentUser().uid}));\n  };\n\n  \tchangeWorkMode = event => {\n    this.setState ({\n\t  ...this.state,\n\t  modalActive: event.active,\n\t  workMode: event.action\n\t});\n\t}\n\n\n  render(){\n\n    if (this.props.active){\n      return (\n        <Reveal effect=\"fade\">\n\t\t\t<Header cabinetStream = {this.cabinetStream} \n\t\t\t\t\ttitle = {this.props.config.title} \n\t\t\t\t\tidUser = {this.props.idUser} \n\t\t\t/>\n\t\t\t<div className = 'Cabinet'>\n\t\t\t<CSSTransition\n\t\t\t\t\tin={this.state.modalActive}\n\t\t\t\t\ttimeout={300}\n\t\t\t\t\tclassNames=\"modalAnimation\"\n\t\t\t\t\tunmountOnExit\n\t\t\t\t\tappear\n\t\t\t\t>\n\t\t\t\t<Modal\n\t\t\t\t\tcabinetStream = {this.cabinetStream}\n\t\t\t\t\tworkMode = {this.state.workMode} \n\t\t\t\t/>\n\t\t\t\t</CSSTransition>\n\t\t\t\t<ProjectsSection cabinetStream = {this.cabinetStream} />\n\t\t\t</div>\n          </Reveal>\n      )\n    } else if (!this.props.firebase.getCurrentUser()) return <Redirect to = { '/'} />\n    else return <Loader path = '/img/loading.gif' type = 'Cabinet' />\n  }\n\n\n  componentDidMount = () => {\n    this.cabinetStream.on('EventDeleteItem', this.deletItem);\n\tthis.cabinetStream.on('EventChangeWorkMode', this.changeWorkMode);\n  };\n\n  componentWillUnmount = () => {\n    this.cabinetStream.off('EventDeleteItem', this.deletItem);\n\tthis.cabinetStream.off('EventChangeWorkMode', this.changeWorkMode);\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    idUser: state.cabinet.idUser,\n    projects: [...state.cabinet.projects],\n    active: state.cabinet.active\n  }\n};\n\nexport default connect(mapStateToProps)(withFirebase(Cabinet));\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport eventEmitter,{controllerStream} from '../../../EventEmitter';\r\nimport styled from 'styled-components';\r\n\r\n\r\nconst Background = styled.div`\r\n    position: relative;\r\n    width: ${props => props.width || '100%'};\r\n    height: ${props => props.height || '100%'};\r\n    background-color: ${props => props.backgroundColor};\r\n    ${props => props.backgroundImage ? `background-image: url(${props.backgroundImage});` : null}\r\n    background-size: cover;\r\n`;\r\n\r\nclass BackgroundComponent extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        id: PropTypes.string.isRequired,\r\n        targetSection: PropTypes.string.isRequired,\r\n        background: PropTypes.string,\r\n        backgroundImage: PropTypes.string,\r\n        width: PropTypes.string,\r\n        height: PropTypes.string,\r\n        sectionNumber: PropTypes.number,\r\n        mode: PropTypes.string.isRequired\r\n    };\r\n\r\n    state = {\r\n        id: this.props.id,\r\n        targetSection: this.props.targetSection,\r\n        backgroundColor: this.props.background || this.props.color,\r\n        backgroundImage: this.props.backgroundImage,\r\n        width: this.props.width,\r\n        height: this.props.height\r\n    };\r\n\r\n    boxComponent = null; // ref\r\n    boxComponentRef = node => this.boxComponent = node;\r\n\r\n    saveDataParent = () => {\r\n        let boxInform =  this.boxComponent.getBoundingClientRect();\r\n        controllerStream.emit(`EventSaveWidth${this.state.targetSection}`,{\r\n            countSection: this.props.countSection,\r\n            sectionNumber: this.props.sectionNumber,\r\n            size: {width: boxInform.width, height: boxInform.height}\r\n        });\r\n    };\r\n\r\n    openBgInstruments = event => {\r\n\r\n        const componentsPatternBackground = {\r\n            id: this.state.id,\r\n            targetSection: this.state.targetSection,\r\n            type: 'background',\r\n            backgroundColor: this.state.backgroundColor,\r\n            backgroundImage: this.state.backgroundImage,\r\n        }\r\n        eventEmitter.emit('EventInstrumentPanel',{\r\n            componentStats: componentsPatternBackground,\r\n            targetSection: this.state.targetSection,\r\n            type: 'background',\r\n            id: this.state.id,\r\n        });\r\n        event.stopPropagation();\r\n    };\r\n\r\n    changeColor = eventItem => {\r\n        this.setState({\r\n            ...this.state,\r\n            backgroundColor: eventItem.colorRGB\r\n        });\r\n    };\r\n\r\n    setBackgroundImage = event => {\r\n        const {urlFull} = event;\r\n        this.setState({\r\n            ...this.state,\r\n            backgroundImage: urlFull,\r\n        });\r\n    };\r\n\r\n    render(){\r\n            if (this.props.mode === 'dev'){\r\n        return (\r\n            <Background\r\n                key = {this.state.id}\r\n                ref  = {this.boxComponentRef}\r\n                onDoubleClick={this.openBgInstruments}\r\n                data-name = {this.state.targetSection}\r\n                backgroundColor = {this.state.backgroundColor}\r\n                backgroundImage = {this.state.backgroundImage}\r\n                width = {this.state.width}\r\n                height = {this.state.height}\r\n            >\r\n                {this.props.children}\r\n            </Background>\r\n        )\r\n    } else if (this.props.mode === 'production'){\r\n\r\n        return (\r\n            <Background\r\n                key = {this.state.id}\r\n                ref  = {this.boxComponentRef}\r\n                data-name = {this.state.targetSection}\r\n                backgroundColor = {this.state.backgroundColor}\r\n                backgroundImage = {this.state.backgroundImage}\r\n                width = {this.state.width}\r\n                height = {this.state.height}\r\n            >\r\n            {this.props.children}\r\n            </Background>\r\n        )\r\n    }\r\n\r\n    }\r\n\r\n    componentDidUpdate = () => {\r\n        this.saveDataParent();\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.saveDataParent();\r\n        controllerStream.on(`EventChangeColorBackground${this.state.id}`, this.changeColor);\r\n        controllerStream.on(`EventSetBackgroundImage${this.state.id}`, this.setBackgroundImage);\r\n    };\r\n\r\n    componentWillUnmount = () => {\r\n        controllerStream.off(`EventChangeColorBackground${this.state.id}`, this.changeColor);\r\n        controllerStream.off(`EventSetBackgroundImage${this.state.id}`, this.setBackgroundImage);\r\n    };\r\n};\r\n\r\n\r\n\r\nexport default BackgroundComponent;","import React, {Fragment} from 'react';\r\nimport eventEmitter from '../../../EventEmitter';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport BackgroundComponent from '../components/Background';\r\nimport Loader from '../../loading/Loader';\r\n\r\nimport './MainBackground.scss';\r\n\r\nclass MainBackground extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        countComponents: PropTypes.number.isRequired, /** @Number last project */\r\n        menuActive: PropTypes.bool, /** @Bool active menu or unactive */\r\n        id: PropTypes.string.isRequired, /** @id current project */\r\n    };\r\n\r\n    state = {\r\n        targetSection: this.props.id,\r\n        editRedy: false,\r\n        component: null,\r\n        children: null,\r\n    };\r\n\r\n    changeMode = () => {\r\n        if (!this.state.editStart || this.props.id !== this.props.editComponentName) {\r\n            this.setState({\r\n                ...this.state,\r\n                editStart: true\r\n            }, () =>\r\n            eventEmitter.emit('EventModeEdit', {\r\n                ...this.state,\r\n                editStart: true,\r\n                targetSection: this.state.targetSection,\r\n            }));\r\n        }\r\n    };\r\n\r\n    refSection = null;\r\n    refSectionFunc = node => node ? this.refSection = {data: node.getBoundingClientRect(), node: node} : node;\r\n\r\n    render() {\r\n\r\n        if (this.props.mode === 'dev' && this.state.component){\r\n            return (\r\n                <Fragment>\r\n                    <section\r\n                        key = {this.props.sectionNumber}\r\n                        className = {`element${this.props.sectionNumber}`} \r\n                        ref={this.refSectionFunc}\r\n                        data-class = 'editable' \r\n                        onClick = {this.changeMode}\r\n                    >\r\n                        <BackgroundComponent \r\n                            mode = {this.props.mode}\r\n                            sectionNumber = {this.props.sectionNumber}\r\n                            countSection = {this.props.countSection}\r\n                            {...this.state.component}\r\n                        >\r\n                            {this.state.children || null}\r\n                        </BackgroundComponent>\r\n                        {!this.state.editStart &&\r\n                            <div className = 'warningEdit'><p>Click for start edit</p></div>\r\n                        }\r\n                    </section>\r\n                </Fragment>\r\n            );\r\n        } else if (this.props.mode === 'production' && this.state.component){\r\n            return (\r\n                <Fragment>\r\n                    <section \r\n                        key = {this.props.sectionNumber}\r\n                        ref={this.refSectionFunc} \r\n                        data-class = 'production'\r\n                    >\r\n                        <BackgroundComponent\r\n                            key = {this.props.sectionNumber}\r\n                            mode = {this.props.mode}\r\n                            sectionNumber = {this.props.sectionNumber}\r\n                            {...this.state.component}\r\n                        >\r\n                        {this.state.children || null}\r\n                        </BackgroundComponent>\r\n                    </section>\r\n                </Fragment>\r\n            );\r\n        }\r\n        else return <Loader type = {`${this.props.mode} components`} />;\r\n    }\r\n\r\n\r\n    componentDidMount = () => {\r\n        if (!this.state.component){\r\n            let component = this.props.currentProjectsData.components.find(item =>\r\n                                            item.targetSection === this.props.id);\r\n            const children = this.props.componentJSX.filter(item => \r\n                item.targetSection === this.props.id && item.id !== component.id)\r\n                            .map(item => item.component);\r\n           this.setState({\r\n               ...this.state,\r\n               component: component,\r\n               children: children,\r\n           });\r\n        }\r\n    }\r\n\r\n    componentDidUpdate = (prevProps) => {\r\n        const needUpdate = this.props.countComponents !== prevProps.countComponents;\r\n        if (!this.state.component){\r\n            let component = this.props.currentProjectsData.components.find(item =>\r\n                                            item.targetSection === this.props.id);\r\n            const children = this.props.componentJSX.filter(item => item.targetSection === this.props.id)\r\n                            .map(item => item.component);\r\n           this.setState({\r\n               ...this.state,\r\n               component: component,\r\n               children: children,\r\n           });\r\n        }\r\n        if (needUpdate){\r\n            const children = this.props.componentJSX.filter(item => item.targetSection === this.props.id)\r\n            children && this.setState({...this.state,children: children.map(item => item.component) });\r\n        }\r\n    }\r\n}\r\nexport default MainBackground;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport MainBackground from './MainBackground/MainBackground';\r\n\r\n\r\nconst Section = props => {\r\n    if (props.mode === 'dev'){\r\n    const {currentProjectsData} = props.userData;\r\n    const section = currentProjectsData.sectionsProject;\r\n\r\n            return section.map((item,i) => {\r\n                return (\r\n                        <MainBackground\r\n                            key = {item}\r\n                            componentJSX = {props.componentJSX}\r\n                            currentProjectsData = {currentProjectsData}\r\n                            editComponentName = {props.editComponentName}\r\n                            countComponents = {props.componentJSX.length}\r\n                            menuActive = {props.menuActive}\r\n                            sizeParentBox = {props.sizeParentBox}\r\n                            id = {item}\r\n                            countSection = {currentProjectsData.sectionsProject.length}\r\n                            sectionNumber = {i}\r\n                            mode = {props.mode}\r\n                        />\r\n                );\r\n            });\r\n    } else if (props.mode === 'production'){\r\n       const {section} = props;\r\n       const {currentProjectsData} = props;\r\n        return section.map((item,i) => {\r\n            return (\r\n                    <MainBackground\r\n                        key = {item}\r\n                        componentJSX = {props.componentsProdJSX}\r\n                        currentProjectsData = {currentProjectsData}\r\n                        editComponentName = {props.editComponentName}\r\n                        countComponents = {props.componentsProdJSX.length}\r\n                        sizeParentBox = {props.sizeParentBox}\r\n                        id = {item}\r\n                        sectionNumber = {i}\r\n                        mode = {props.mode}\r\n                    />\r\n            );\r\n        });\r\n    }\r\n}\r\n\r\nSection.propTypes = {\r\n    componentJSX: PropTypes.array, /// array with jsx components\r\n    editComponentName: PropTypes.string, // name current edit component\r\n    menuActive: PropTypes.bool, // build menu\r\n    mode: PropTypes.string.isRequired, // curent mode\r\n    sizeParentBox: PropTypes.object, // data with size main component\r\n    userData: PropTypes.object // users data\r\n}\r\n\r\nexport default Section;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport eventEmitter,{controllerStream} from '../../../EventEmitter';\r\nimport styled from 'styled-components';\r\n\r\n\r\nconst InputComponent = styled.input.attrs(props => {\r\n    if (props.mode !== 'production')\r\n    return ({\r\n        style: {\r\n            zIndex: props.indexZ ? '9999' : null,\r\n            left: props.coordX ? props.coordX : '45%',\r\n            top:  props.coordY ? props.coordY : '0%',\r\n        }\r\n    })\r\n})`\r\n    width: ${props => props.size ? props.size.w + 'px' : null};\r\n    color: white;\r\n    height: ${props => props.size ? props.size.h + 'px' : null};\r\n    font-size: ${props => props.fontSize ? props.fontSize + 'px' : null};\r\n    position: absolute;\r\n    background-color: ${props => props.color || null};\r\n    border: ${props => `1px solid ${props.color}`};\r\n    border-radius: ${props => props.borderRadius ? props.borderRadius + 'px' : null};\r\n    white-space: normal;\r\n    font-weight: bold;\r\n    transition: .3s transform linear;\r\n\r\n    :active {\r\n        border: ${props =>`2px dotted ${props.color}`};\r\n        transform: scale(1.05);\r\n    }\r\n`;\r\n\r\nconst ProductionStyle = styled(InputComponent)`\r\n    left: ${props => props.coordX ? props.coordX : '45%'};\r\n    top:  ${props => props.coordY ? props.coordY : '0%'};\r\n`;\r\n\r\n\r\nclass Input extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        id: PropTypes.oneOfType([\r\n            PropTypes.string,\r\n            PropTypes.number\r\n        ]).isRequired,\r\n        targetSection: PropTypes.string.isRequired,\r\n        sizeParentBox: PropTypes.object,\r\n    }\r\n\r\n    state = {\r\n        id: this.props.id,\r\n        istrumentsActive: false,\r\n        getSizeBool: false,\r\n        countSection: 0,\r\n        borderRadius: this.props.borderRadius,\r\n        sectionNumber: 0,\r\n        typeInput: this.props.typeInput || 'button',\r\n        sizeParentBox: this.props.sizeParentBox,\r\n        targetSection: this.props.targetSection,\r\n        size: this.props.size && this.props.size.w ? this.props.size : {w: '100', h:'50'},\r\n        fontSize: this.props.fontSize || 20,\r\n        color: this.props.color || null,\r\n        shiftCoords: null,\r\n        content: this.props.content || 'Input',\r\n        posInput: this.props.coords.x ? {x: this.props.coords.x, y: this.props.coords.y} : null,\r\n        startDragNdrop: false,\r\n    }\r\n\r\n    openInputInstruments = event => {\r\n\r\n        const componentsPatternImage = {\r\n            id: this.state.id,\r\n            targetSection: this.state.targetSection,\r\n            typeInput: this.state.typeInput,\r\n            type: 'input',\r\n            color: this.state.color,\r\n            borderRadius: this.state.borderRadius,\r\n            zIndex: null,\r\n            size: {...this.state.size},\r\n            fontSize: this.state.fontSize,\r\n            content: this.state.content,\r\n            coords: {...this.state.posInput}, // x, y\r\n        }\r\n\r\n        eventEmitter.emit(`EventInstrumentPanel`,{\r\n            componentStats: componentsPatternImage,\r\n            targetSection: this.state.targetSection,\r\n            id: this.state.id,\r\n            sizeTextValue: this.state.size\r\n        });\r\n        this.setState({...this.state, istrumentsActive: true});\r\n        event.stopPropagation();\r\n    };\r\n\r\n    saveCoords = event => {\r\n        if (event.nativeEvent.which !== 1) return false;\r\n        const element = this.refInput.getBoundingClientRect();\r\n\r\n        const cords = {\r\n            left: element.left,\r\n            top: element.top,\r\n            width: element.right - element.left,\r\n            height: element.bottom - element.top\r\n        }\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            shiftCoords: {x: event.clientX - cords.left, y: event.clientY - cords.top},\r\n            startDragNdrop: !this.state.startDragNdrop ? true : false\r\n        });\r\n\r\n        event.stopPropagation();\r\n    };\r\n\r\n    changeSize = eventSize => {\r\n        this.setState({...this.state, size: eventSize.size});\r\n    };\r\n\r\n    changeColor = colorRGB => {\r\n\r\n        if (typeof colorRGB === 'string')\r\n            this.setState({\r\n                ...this.state,\r\n                color: colorRGB\r\n            });\r\n    };\r\n\r\n    changeSizeText = eventSize => {\r\n        this.setState({...this.state, fontSize: eventSize.size});\r\n    };\r\n\r\n    setBorderRadius = eventItem => {\r\n        let radius = eventItem.borderRadius > 200 ? 200 : eventItem.borderRadius;\r\n        radius = eventItem.borderDown < 0 ? 0 : eventItem.borderRadius;\r\n            this.setState({\r\n                ...this.state,\r\n                borderRadius: radius\r\n            });\r\n    };\r\n\r\n    changeContent = eventItem => {\r\n        let booldContent = eventItem.content || eventItem.content === '';\r\n        if (booldContent)\r\n            this.setState({\r\n                ...this.state,\r\n                content: eventItem.content\r\n            });\r\n    }\r\n\r\n\r\n\r\n    checkPivotPosition = (coordX, coordY) => {\r\n\r\n        const element = this.refInput.getBoundingClientRect();\r\n        const borderTopLeft = 0;\r\n        const borderDown = 800 - element.height;\r\n        const borderRight = this.props.sizeParentBox.width - element.width;\r\n\r\n        if (coordY < borderTopLeft) coordY = borderTopLeft;\r\n        if (coordY > borderDown) coordY = borderDown;\r\n        if (coordX < borderTopLeft) coordX = borderTopLeft;\r\n        if (coordX > borderRight) coordX = borderRight;\r\n\r\n        return {x: coordX, y: coordY};\r\n    }\r\n\r\n    delta = (trans,transT) => {\r\n        return {\r\n            x: 0,\r\n            y: 0,\r\n        }\r\n    }\r\n    move = (x,y) => this.setState({...this.state, posInput: {x: x, y: y}});\r\n\r\n    moveInput = event => {\r\n\r\n        if (this.state.startDragNdrop && this.state.istrumentsActive){\r\n            let num = this.state.sectionNumber;\r\n            if (this.state.sectionNumber === 1 && this.state.countSection-1 === this.state.sectionNumber)  \r\n                num = this.state.sectionNumber + 1;\r\n            let xItem = event.clientX - (this.props.sizeParentBox.left  * num);\r\n            let yItem = event.clientY - (this.props.sizeParentBox.top * num);\r\n\r\n            let coordX = xItem - this.state.shiftCoords.x + this.delta().x;\r\n            let coordY = yItem - this.state.shiftCoords.y + this.delta().y;\r\n\r\n            let coords = this.checkPivotPosition(coordX,coordY);\r\n\r\n            let convertToPercentX = coords.x * 100 / this.state.sizeParentBox.width;\r\n            let convertToPercentY = coords.y * 100 / this.state.sizeParentBox.height;\r\n\r\n            this.move(convertToPercentX.toFixed(2) + '%',\r\n                      convertToPercentY.toFixed(2) + '%');\r\n    }\r\n        event.stopPropagation();\r\n    };\r\n\r\n    stopDragNdrop = event => {\r\n        if (this.state.startDragNdrop) {\r\n            this.setState({...this.state, startDragNdrop: false})\r\n            controllerStream.emit(`EventUpdatePosition${this.state.id}`, this.state.posInput);\r\n        }\r\n        event.stopPropagation();\r\n    };\r\n    //currentProjectsData.sectionsProject.length\r\n\r\n    saveSize = event => {\r\n        const {size} = event;\r\n        if (!this.state.getSizeBool){\r\n        this.setState({\r\n            ...this.state,\r\n            getSizeBool: true,\r\n            countSection: event.countSection,\r\n            sectionNumber: event.sectionNumber,\r\n            sizeParentBox: {width: size.width, height: size.height}});\r\n        } else controllerStream.off(`EventSaveWidth${this.state.targetSection}`,this.saveSize);\r\n    }\r\n\r\n    setWidth = eventItem => {\r\n        const {width} = eventItem;\r\n        this.setState({...this.state, \r\n            size: {\r\n                ...this.state.size,\r\n                w: width,\r\n            }\r\n        });\r\n    }\r\n\r\n    setType = eventItem => {\r\n        this.setState({\r\n            ...this.state, \r\n            typeInput: eventItem\r\n        });\r\n    }\r\n\r\n    setHeight = eventItem => {\r\n        const {height} = eventItem;\r\n        this.setState({...this.state, \r\n            size: {\r\n                ...this.state.size,\r\n                h: height,\r\n            }\r\n        });\r\n    }\r\n\r\n    refInput = null;\r\n    refInputComponent = node => this.refInput = node;\r\n\r\n    render(){\r\n\r\n        if (this.props.mode === 'dev'){\r\n            return (\r\n                <InputComponent\r\n                    type = {this.state.typeInput}\r\n                    value = {this.state.content}\r\n                    ref = {this.refInputComponent}\r\n                    size = {this.state.size}\r\n                    color = {this.state.color}\r\n                    borderRadius = {this.state.borderRadius}\r\n                    fontSize = {this.state.fontSize}\r\n                    onClick = {this.openInputInstruments}\r\n                    onMouseDown = {this.saveCoords}\r\n                    onMouseMove= {this.moveInput}\r\n                    onMouseLeave = {this.stopDragNdrop}\r\n                    onMouseUp = {this.stopDragNdrop}\r\n                    onDragStart = {this.stop}\r\n                    coordX = {this.state.posInput ? this.state.posInput.x : null}\r\n                    coordY = {this.state.posInput ? this.state.posInput.y : null}\r\n                    indexZ = {this.state.startDragNdrop}\r\n                    data-imagecomponentwrapper\r\n                />\r\n            )\r\n        } else if (this.props.mode === 'production'){\r\n\r\n            return (\r\n                <ProductionStyle\r\n                    type = {this.state.typeInput}\r\n                    value = {this.state.content}\r\n                    ref = {this.refInputComponent}\r\n                    size = {this.state.size}\r\n                    color = {this.state.color}\r\n                    fontSize = {this.state.fontSize}\r\n                    borderRadius = {this.state.borderRadius}\r\n                    coordX = {this.state.posInput ? this.state.posInput.x : null}\r\n                    coordY = {this.state.posInput ? this.state.posInput.y : null}\r\n                    indexZ = {this.state.startDragNdrop}\r\n                    mode = {this.props.mode}\r\n                />\r\n            )\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        controllerStream.on(`EventSaveWidth${this.state.targetSection}`, this.saveSize);\r\n        controllerStream.on(`EventSetBorderRadius${this.state.id}`, this.setBorderRadius);\r\n        controllerStream.on(`EventChangecolor${this.state.id}`, this.changeColor);\r\n        controllerStream.on(`EventChangeSize${this.state.id}`, this.changeSize);\r\n        controllerStream.on(`EventChangeSizeText${this.state.id}`, this.changeSizeText);\r\n        controllerStream.on(`EventChangeContentText${this.state.id}`, this.changeContent);\r\n        controllerStream.on(`EventSetWidth${this.state.id}`, this.setWidth);\r\n        controllerStream.on(`EventSetType${this.state.id}`, this.setType);\r\n        controllerStream.on(`EventSetHeight${this.state.id}`, this.setHeight);\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        controllerStream.off(`EventSaveWidth${this.state.targetSection}`,this.saveSize);\r\n        controllerStream.off(`EventSetBorderRadius${this.state.id}`, this.setBorderRadius);\r\n        controllerStream.off(`EventChangeSize${this.state.id}`, this.changeSize);\r\n        controllerStream.off(`EventChangeSizeText${this.state.id}`, this.changeSizeText);\r\n        controllerStream.off(`EventChangeContentText${this.state.id}`, this.changeContent);\r\n        controllerStream.off(`EventChangecolor${this.state.id}`, this.changeColor);\r\n        controllerStream.off(`EventSetWidth${this.state.id}`, this.setWidth);\r\n        controllerStream.off(`EventSetType${this.state.id}`, this.setType);\r\n        controllerStream.off(`EventSetHeight${this.state.id}`, this.setHeight);\r\n    }\r\n}\r\n\r\nexport default Input;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport eventEmitter,{controllerStream} from '../../../EventEmitter';\r\nimport styled from 'styled-components';\r\n\r\nconst WrapperMedia = styled.div.attrs(props => {\r\n    if (props.mode !== 'production')\r\n    return ({\r\n        style: {\r\n            zIndex: props.indexZ ? '9999' : null,\r\n            left: props.coordX ? props.coordX : '45%',\r\n            top:  props.coordY ? props.coordY : '0%',\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            padding: props.mode === 'dev' ? '40px' : null\r\n        }\r\n    })\r\n})`\r\n    width: ${props => props.size.w ? props.size.w + '%' : '30%'};\r\n    height: ${props => props.size.h ? props.size.h + '%' : '50%'};\r\n    position: absolute;\r\n    background: ${props => props.mode === 'dev' ? `url(${process.env.PUBLIC_URL}/img/media.svg)` : null};\r\n    background-size: cover;\r\n    border: ${props => props.mode === 'dev' ? `1px solid red` : null};\r\n    padding: 10px;\r\n`;\r\nconst Media = styled.iframe`\r\n    width: 100%;\r\n    height: 100%;\r\n    z-index: ${props => props.zIndex ? '0' : '-1'};\r\n`;\r\n\r\nconst ProductionStyle = styled(WrapperMedia)`\r\n    left: ${props => props.coordX ? props.coordX : '45%'};\r\n    top:  ${props => props.coordY ? props.coordY : '0%'};\r\n`;\r\n\r\nclass MediaComponent extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        id: PropTypes.oneOfType([\r\n            PropTypes.string,\r\n            PropTypes.number\r\n        ]).isRequired,\r\n        targetSection: PropTypes.string.isRequired,\r\n        sizeParentBox: PropTypes.object,\r\n        content: PropTypes.string,\r\n    }\r\n\r\n    state = {\r\n        targetSection: this.props.targetSection,\r\n        id : this.props.id,\r\n        sizeParentBox: this.props.sizeParentBox,\r\n        shiftCoords: null,\r\n        countSection: 0,\r\n        size: this.props.size ? this.props.size : {w: null, h: null},\r\n        posMedia: this.props.coords.x ? {x: this.props.coords.x, y: this.props.coords.y} : null,\r\n        startDragNdrop: false,\r\n        istrumentsActive: false,\r\n        drawContent: false,\r\n        sectionNumber: this.props.sectionNumber,\r\n        content: this.props.content ? this.props.content : null\r\n    }\r\n\r\n    openMediaInstruments = event => {\r\n\r\n        const componentsPatternMedia = {\r\n            id: this.state.id,\r\n            size: this.state.size,\r\n            targetSection: this.state.targetSection,\r\n            type: 'media',\r\n            zIndex: null,\r\n            content: this.state.content,\r\n            coords: {...this.state.posMedia}, // x, y\r\n        }\r\n\r\n        eventEmitter.emit('EventInstrumentPanel',{\r\n            componentStats: componentsPatternMedia,\r\n            targetSection: this.state.targetSection,\r\n            id: this.state.id,\r\n            size: this.state.size,\r\n        });\r\n        this.setState({...this.state, istrumentsActive: true});\r\n        event.stopPropagation();\r\n    }\r\n\r\n    saveCoords = event => {\r\n        if (event.nativeEvent.which !== 1) return false;\r\n        const element = this.refMedia.getBoundingClientRect();\r\n        const cords = {\r\n            left: element.left,\r\n            top: element.top,\r\n            width: element.right - element.left,\r\n            height: element.bottom - element.top\r\n        }\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            shiftCoords: {x: event.clientX - cords.left, y: event.clientY - cords.top},\r\n            startDragNdrop: !this.state.startDragNdrop ? true : false\r\n        });\r\n\r\n        event.stopPropagation();\r\n    };\r\n\r\n    setWidth = eventItem => {\r\n        const {width} = eventItem;\r\n        this.setState({...this.state, \r\n            size: {\r\n                ...this.state.size,\r\n                w: width,\r\n            }\r\n        });\r\n    }\r\n\r\n    setHeight = eventItem => {\r\n        const {height} = eventItem;\r\n        this.setState({...this.state, \r\n            size: {\r\n                ...this.state.size,\r\n                h: height,\r\n            }\r\n        });\r\n    }\r\n\r\n    checkPivotPosition = (coordX, coordY) => {\r\n\r\n        const element = this.refMedia.getBoundingClientRect();\r\n        const borderTopLeft = 0;\r\n        const borderDown = 800 - element.height;\r\n        const borderRight = this.props.sizeParentBox.width - element.width;\r\n\r\n        if (coordY < borderTopLeft) coordY = borderTopLeft;\r\n        if (coordY > borderDown) coordY = borderDown;\r\n        if (coordX < borderTopLeft) coordX = borderTopLeft;\r\n        if (coordX > borderRight) coordX = borderRight;\r\n\r\n        return {x: coordX, y: coordY};\r\n    }\r\n\r\n    delta = (trans,transT) => {\r\n        return {\r\n            x: 0,\r\n            y: 0,\r\n        }\r\n    }\r\n    move = (x,y) => this.setState({...this.state, posMedia: {x: x, y: y}});\r\n\r\n    moveMedia = event => {\r\n\r\n        if (this.state.startDragNdrop && this.state.istrumentsActive){\r\n\r\n            let xItem = event.clientX - (this.props.sizeParentBox.left  * this.state.sectionNumber);\r\n            let yItem = event.clientY - (this.props.sizeParentBox.top * this.state.sectionNumber);\r\n\r\n            let coordX = xItem - this.state.shiftCoords.x + this.delta().x;\r\n            let coordY = yItem - this.state.shiftCoords.y + this.delta().y;\r\n\r\n            let coords = this.checkPivotPosition(coordX,coordY);\r\n\r\n            let convertToPercentX = coords.x * 100 / this.state.sizeParentBox.width;\r\n            let convertToPercentY = coords.y * 100 / this.state.sizeParentBox.height;\r\n\r\n            this.move(convertToPercentX.toFixed(2) + '%',\r\n                      convertToPercentY.toFixed(2) + '%');\r\n    }\r\n        event.stopPropagation();\r\n    };\r\n\r\n    stopDragNdrop = event => {\r\n        if (this.state.startDragNdrop) {\r\n            this.setState({...this.state, startDragNdrop: false})\r\n            controllerStream.emit(`EventUpdatePosition${this.state.id}`, this.state.posMedia);\r\n        }\r\n        event.stopPropagation();\r\n    };\r\n\r\n    setContent = event => {\r\n        const {iframe} = event;\r\n        this.setState({...this.state, content: iframe});\r\n    };\r\n\r\n\r\n    saveSize = event => {\r\n        const {size} = event;\r\n        if (!this.state.getSizeBool){\r\n        this.setState({\r\n            ...this.state,\r\n            getSizeBool: true,\r\n            countSection: event.countSection,\r\n            sectionNumber: event.sectionNumber + 1,\r\n            sizeParentBox: {width: size.width, height: size.height}});\r\n        } else controllerStream.off(`EventSaveWidth${this.state.targetSection}`,this.saveSize);\r\n    }\r\n\r\n    refMedia = null;\r\n    refMediaComponent = node => this.refMedia = node;\r\n\r\n    render(){\r\n        const url = 'https://www.youtube.com/embed/';\r\n\r\n        if (this.props.mode === 'dev'){\r\n            return (\r\n                <WrapperMedia\r\n                    ref = {this.refMediaComponent}\r\n                    onClick={this.openMediaInstruments}\r\n                    onMouseDown = {this.saveCoords}\r\n                    onMouseMove= {this.moveMedia}\r\n                    onMouseLeave = {this.stopDragNdrop}\r\n                    onMouseUp = {this.stopDragNdrop}\r\n                    onDragStart = {this.stop}\r\n                    mode = {this.props.mode}\r\n                    indexZ = {this.state.startDragNdrop}\r\n                    coordX = {this.state.posMedia ? this.state.posMedia.x : null}\r\n                    coordY = {this.state.posMedia ? this.state.posMedia.y : null}\r\n                    size = {this.state.size}\r\n                >\r\n                {!this.state.startDragNdrop ? \r\n                    <Media\r\n                        src= {this.state.content ? url + this.state.content : null }\r\n                        drawContent = {this.state.drawContent}\r\n                        width = {this.state.width} \r\n                        height = {this.state.height}\r\n                        zIndex = {this.state.content}\r\n                        allowfullscreen\r\n                    ></Media> : null\r\n                }\r\n                </WrapperMedia>\r\n            )\r\n        } else if (this.props.mode === 'production'){\r\n            return (\r\n                <ProductionStyle\r\n                    ref = {this.refMediaComponent}\r\n                    indexZ = {this.state.startDragNdrop}\r\n                    size = {this.state.size}\r\n                    coordX = {this.state.posMedia ? this.state.posMedia.x : null}\r\n                    coordY = {this.state.posMedia ? this.state.posMedia.y : null}\r\n                    mode = {this.props.mode}\r\n                >\r\n                {!this.state.startDragNdrop ? \r\n                    <Media\r\n                        src= {this.state.content ? url + this.state.content : null }\r\n                        drawContent = {this.state.drawContent}\r\n                        width = {this.state.width} \r\n                        height = {this.state.height}\r\n                        zIndex = {this.state.content}\r\n                        mode = {this.props.mode}\r\n                        allowfullscreen\r\n                    ></Media> : null\r\n                }\r\n                </ProductionStyle>\r\n            )\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        controllerStream.on(`EventSetContentMedia${this.state.id}`, this.setContent);\r\n        controllerStream.on(`EventSaveWidth${this.state.targetSection}`, this.saveSize);\r\n        controllerStream.on(`EventSetWidth${this.state.id}`, this.setWidth);\r\n        controllerStream.on(`EventSetHeight${this.state.id}`, this.setHeight); \r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        controllerStream.off(`EventSaveWidth${this.state.targetSection}`,this.saveSize);\r\n        controllerStream.off(`EventSetContentMedia${this.state.id}`, this.setContent);\r\n        controllerStream.off(`EventSetWidth${this.state.id}`, this.setWidth);\r\n        controllerStream.off(`EventSetHeight${this.state.id}`, this.setHeight); \r\n    }\r\n}\r\n\r\nexport default MediaComponent;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport eventEmitter,{controllerStream} from '../../../EventEmitter';\r\nimport styled from 'styled-components';\r\n\r\n\r\nconst WrapperImg = styled.div.attrs(props => {\r\n    if (props.mode !== 'production')\r\n    return ({\r\n        style: {\r\n            zIndex: props.indexZ ? '9999' : null,\r\n            transform: `rotateZ(${props.rotate}deg) scale(${props.scale})`,\r\n            left: props.coordX ? props.coordX : '45%',\r\n            top:  props.coordY ? props.coordY : '0',\r\n            transition: `transform  0.3s linear`,\r\n        }\r\n    })\r\n})`\r\n    width: ${props => props.size ? props.size.w + '%' : '30%'};\r\n    height: ${props => props.size ? props.size.h + '%' : '50%'};\r\n    position: absolute;\r\n`;\r\n\r\nconst ImageStyle = styled.img`\r\n    width: 100%;\r\n    height: 100%;\r\n    opacity: ${props => props.opacity};\r\n    border-radius: ${props => props.borderRadius}px;\r\n    pointer-events: none;\r\n    position: absolute;\r\n`;\r\n\r\nconst ProductionStyle = styled(WrapperImg)`\r\n    left: ${props => props.coordX ? props.coordX : '50%'};\r\n    top:  ${props => props.coordY};\r\n    transform: rotate(${props => props.rotate}deg) scale(${props => props.scale});\r\n`;\r\n\r\nclass Image extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        id: PropTypes.oneOfType([\r\n            PropTypes.string,\r\n            PropTypes.number\r\n        ]).isRequired,\r\n        targetSection: PropTypes.string.isRequired,\r\n        sizeParentBox: PropTypes.object,\r\n    }\r\n\r\n    state = {\r\n        id: this.props.id,\r\n        istrumentsActive: false,\r\n        getSizeBool: false,\r\n        countSection: 0,\r\n        opacity: this.props.opacity || 1,\r\n        transformValue: this.props.rotate || 0,\r\n        scaleValue: this.props.scale || 1,\r\n        sectionNumber: 0,\r\n        borderRadius: this.props.borderRadius || 0,\r\n        sizeParentBox: this.props.sizeParentBox,\r\n        targetSection: this.props.targetSection,\r\n        path: this.props.image ? this.props.image : this.props.path,\r\n        size: this.props.size ? this.props.size : {w: 30, h: 50},\r\n        shiftCoords: null,\r\n        posImage: this.props.coords.x ? {x: this.props.coords.x, y: this.props.coords.y} : null,\r\n        startDragNdrop: false,\r\n    }\r\n\r\n    openImageInstruments = event => {\r\n\r\n        const componentsPatternImage = {\r\n            id: this.state.id,\r\n            targetSection: this.state.targetSection,\r\n            size: {...this.state.size},\r\n            type: 'image',\r\n            rotate: this.state.transformValue,\r\n            scale: this.state.scaleValue,\r\n            borderRadius: this.state.borderRadius,\r\n            opacity: this.state.opacity,\r\n            zIndex: null,\r\n            image: this.state.path,\r\n            coords: {...this.state.posImage}, // x, y\r\n        }\r\n\r\n        eventEmitter.emit(`EventInstrumentPanel`,{\r\n            componentStats: componentsPatternImage,\r\n            targetSection: this.state.targetSection,\r\n            id: this.state.id,\r\n            sizeTextValue: this.state.size\r\n        });\r\n        this.setState({...this.state, istrumentsActive: true});\r\n        event.stopPropagation();\r\n    };\r\n\r\n    saveCoords = event => {\r\n        if (event.nativeEvent.which !== 1) return false;\r\n        const element = this.refImage.getBoundingClientRect();\r\n\r\n        const cords = {\r\n            left: element.left,\r\n            top: element.top,\r\n            width: element.right - element.left,\r\n            height: element.bottom - element.top\r\n        }\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            shiftCoords: {x: event.clientX - cords.left, y: event.clientY - cords.top},\r\n            startDragNdrop: !this.state.startDragNdrop ? true : false\r\n        });\r\n\r\n        event.stopPropagation();\r\n    };\r\n\r\n    checkPivotPosition = (coordX, coordY) => {\r\n\r\n        const element = this.refImage.getBoundingClientRect();\r\n        const borderTopLeft = 0;\r\n        const borderDown = 800 - element.height;\r\n        const borderRight = this.props.sizeParentBox.width - element.width;\r\n\r\n        if (coordY < borderTopLeft) coordY = borderTopLeft;\r\n        if (coordY > borderDown) coordY = borderDown;\r\n        if (coordX < borderTopLeft) coordX = borderTopLeft;\r\n        if (coordX > borderRight) coordX = borderRight;\r\n\r\n        return {x: coordX, y: coordY};\r\n    }\r\n\r\n    rotateEvent = eventItem => {\r\n        const angle = eventItem.angle;\r\n        this.setState({\r\n            ...this.state,\r\n            transformValue: angle,\r\n        });\r\n    }\r\n\r\n    scaleEvent = eventItem => {\r\n        const scale = eventItem.scale;\r\n        this.setState({\r\n            ...this.state,\r\n            scaleValue: scale,\r\n        });\r\n    }\r\n\r\n    move = (x,y) => this.setState({...this.state, posImage: {x: x, y: y}});\r\n\r\n    moveText = event => {\r\n\r\n        if (this.state.startDragNdrop && this.state.istrumentsActive){\r\n            const element = this.refImage.getBoundingClientRect();\r\n            let xItem = event.clientX - (this.props.sizeParentBox.left  * this.state.sectionNumber);\r\n            let yItem = event.clientY - (this.props.sizeParentBox.top * this.state.sectionNumber);\r\n            let factorCoord = this.delta(parseInt(this.state.transformValue),element.height,element.width);\r\n\r\n            let coordX = xItem - this.state.shiftCoords.x + factorCoord.xFacotr;\r\n            let coordY = yItem - 61 - this.state.shiftCoords.y + factorCoord.yFactor;\r\n\r\n            let coords = this.checkPivotPosition(coordX,coordY);\r\n\r\n            let convertToPercentX = coords.x * 100 / this.state.sizeParentBox.width;\r\n            let convertToPercentY = coords.y * 100 / this.state.sizeParentBox.height;\r\n\r\n            this.move(convertToPercentX.toFixed(2) + '%',\r\n                      convertToPercentY.toFixed(2) + '%');\r\n    }\r\n        event.stopPropagation();\r\n    };\r\n\r\n\r\n    delta = (transform, height, width) => {\r\n\r\n        let powHeight = height * height;\r\n        let powWidth =  width * width;\r\n\r\n        let pythagoras = Math.sqrt(powHeight + powWidth) / 2;\r\n        let _angle = Math.atan(height / width);\r\n        let angle = Math.atan(width / height);\r\n\r\n        let _biasFactor = 1;\r\n        let biasFactor = 1;\r\n\r\n        if (transform < 0 || transform > 180)\r\n            _biasFactor = - 1;\r\n        if (transform > 90 && transform < 270)\r\n            biasFactor= -1;\r\n\r\n        transform = transform * (Math.PI/180);\r\n\r\n        let sinX = Math.sin(biasFactor * angle + _biasFactor * transform);\r\n        let sinY = Math.sin(biasFactor* _angle + _biasFactor * transform);\r\n\r\n        let xFacotr = pythagoras*(-Math.sin(angle)+sinX);\r\n        let yFactor = pythagoras*(-Math.sin(_angle)+sinY);\r\n\r\n        return {xFacotr, yFactor}\r\n    };\r\n\r\n    stopDragNdrop = event => {\r\n        if (this.state.startDragNdrop) {\r\n            this.setState({...this.state, startDragNdrop: false})\r\n            controllerStream.emit(`EventUpdatePosition${this.state.id}`, this.state.posImage);\r\n        }\r\n        event.stopPropagation();\r\n    };\r\n\r\n    setCurrentImage = event => {\r\n        const {urlFull} = event;\r\n        this.setState({...this.state, path: urlFull});\r\n    };\r\n\r\n    setWidth = eventItem => {\r\n        const {width} = eventItem;\r\n        this.setState({...this.state, \r\n            size: {\r\n                ...this.state.size,\r\n                w: width,\r\n            }\r\n        });\r\n    }\r\n\r\n    setHeight = eventItem => {\r\n        const {height} = eventItem;\r\n        this.setState({...this.state, \r\n            size: {\r\n                ...this.state.size,\r\n                h: height,\r\n            }\r\n        });\r\n    }\r\n\r\n    saveSize = event => {\r\n        const {size} = event;\r\n        if (!this.state.getSizeBool){\r\n        this.setState({\r\n            ...this.state,\r\n            getSizeBool: true,\r\n            countSection: event.countSection,\r\n            sectionNumber: event.sectionNumber,\r\n            sizeParentBox: {width: size.width, height: size.height}});\r\n        } else controllerStream.off(`EventSaveWidth${this.state.targetSection}`,this.saveSize);\r\n    }\r\n\r\n    changeSizeImage = eventItem => {\r\n        this.setState({...this.state, size: eventItem.size});\r\n    };\r\n\r\n    setBorderRadius = eventItem => {\r\n\r\n    let radius = eventItem.borderRadius > 200 ? 200 : eventItem.borderRadius;\r\n    radius = eventItem.borderDown < 0 ? 0 : eventItem.borderRadius;\r\n        this.setState({\r\n            ...this.state,\r\n            borderRadius: radius\r\n        });\r\n    };\r\n\r\n    setOpacity = eventItem => {\r\n        let opacity = eventItem.opacity > 1 ? 1 : eventItem.opacity;\r\n        opacity = eventItem.opacity < 0 ? 0 : eventItem.opacity;\r\n            this.setState({\r\n                ...this.state,\r\n                opacity: opacity\r\n            });\r\n    }\r\n \r\n    refImage = null;\r\n    refImageComponent = node => this.refImage = node;\r\n\r\n    render(){\r\n\r\n        if (this.props.mode === 'dev'){\r\n            return (\r\n                <WrapperImg\r\n                ref = {this.refImageComponent}\r\n                size = {this.state.size}\r\n                rotate = {this.state.transformValue}\r\n                scale = {this.state.scaleValue}\r\n                onClick = {this.openImageInstruments}\r\n                onMouseDown = {this.saveCoords}\r\n                onMouseMove= {this.moveText}\r\n                onMouseLeave = {this.stopDragNdrop}\r\n                onMouseUp = {this.stopDragNdrop}\r\n                onDragStart = {this.stop}\r\n                coordX = {this.state.posImage ? this.state.posImage.x : null}\r\n                coordY = {this.state.posImage ? this.state.posImage.y : null}\r\n                indexZ = {this.state.startDragNdrop}\r\n                data-imagecomponentwrapper\r\n                >\r\n                    <ImageStyle\r\n                        data-imagecomponent\r\n                        borderRadius = {this.state.borderRadius}\r\n                        opacity = {this.state.opacity}\r\n                        src = {this.state.path}\r\n                        alt = 'img'\r\n                    />\r\n                </WrapperImg>\r\n            )\r\n        } else if (this.props.mode === 'production'){\r\n            return (\r\n                <ProductionStyle\r\n                ref = {this.refImageComponent}\r\n                size = {this.state.size}\r\n                rotate = {this.state.transformValue}\r\n                scale = {this.state.scaleValue}\r\n                mode = {this.props.mode}\r\n                coordX = {this.state.posImage ? this.state.posImage.x : null}\r\n                coordY = {this.state.posImage ? this.state.posImage.y : null}\r\n                indexZ = {this.state.startDragNdrop}\r\n                >\r\n                    <ImageStyle\r\n                        borderRadius = {this.state.borderRadius}\r\n                        opacity = {this.state.opacity}\r\n                        crossOrigin = \"anonymous\"\r\n                        src = {this.state.path}\r\n                        alt = 'img'\r\n                    />\r\n                </ProductionStyle>\r\n            )\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        controllerStream.on(`EventSetCurrentImage${this.state.id}`, this.setCurrentImage);\r\n        controllerStream.on(`EventChangeSize${this.state.id}`, this.changeSizeImage);\r\n        controllerStream.on(`EventSetOpacity${this.state.id}`, this.setOpacity);\r\n        controllerStream.on(`EventSetBorderRadius${this.state.id}`,this.setBorderRadius);\r\n        controllerStream.on(`EventSetWidth${this.state.id}`, this.setWidth);\r\n        controllerStream.on(`EventSetHeight${this.state.id}`, this.setHeight); \r\n        controllerStream.on(`EventResize${this.state.id}`,this.rotateEvent);\r\n        controllerStream.on(`EventScale${this.state.id}`,this.scaleEvent);\r\n        controllerStream.on(`EventSaveWidth${this.state.targetSection}`, this.saveSize);\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n       \r\n        controllerStream.off(`EventChangeSize${this.state.id}`, this.changeSizeImage);\r\n        controllerStream.off(`EventSetOpacity${this.state.id}`, this.setOpacity);\r\n        controllerStream.off(`EventSetBorderRadius${this.state.id}`,this.setBorderRadius);\r\n        controllerStream.off(`EventSetCurrentImage${this.state.id}`, this.setCurrentImage);\r\n        controllerStream.off(`EventSetWidth${this.state.id}`, this.setWidth);\r\n        controllerStream.off(`EventSetHeight${this.state.id}`, this.setHeight); \r\n        controllerStream.off(`EventResize${this.state.id}`,this.rotateEvent);\r\n        controllerStream.off(`EventScale${this.state.id}`,this.scaleEvent);\r\n        controllerStream.off(`EventSaveWidth${this.state.targetSection}`,this.saveSize);\r\n    }\r\n}\r\n\r\nexport default Image;","\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport eventEmitter,{controllerStream} from '../../../EventEmitter';\r\nimport Events from 'events';\r\nimport styled from 'styled-components';\r\n\r\nimport './components.scss';\r\n\r\n\r\n\r\nconst WrapperText = styled.div.attrs(props => {\r\n    if (props.mode !== 'production')\r\n    return ({\r\n        style: {\r\n            zIndex: props.indexZ ? '9999' : null,\r\n            transform: `rotateZ(${props.rotate}deg) scale(${props.scale})`,\r\n            left: props.coordX ? props.coordX : '50%',\r\n            top:  props.coordY,\r\n            transition: `transform  0.3s linear`,\r\n        }\r\n    })\r\n})`\r\n    position: absolute;\r\n    font-size: ${props => props.size ? props.size : '120px'};\r\n    color: ${props => props.textColor};\r\n    text-align: center;\r\n    margin: 0;\r\n    word-break: break-all;\r\n`;\r\n\r\nconst TextStyle = styled.p`\r\n    width: 100%;\r\n    height: 100%;\r\n    font-family: ${props => props.font};\r\n    text-align: center;\r\n    margin: 0;\r\n    user-select: none;\r\n`;\r\n\r\n\r\nconst ProductionStyle = styled(WrapperText)`\r\n    left: ${props => props.coordX ? props.coordX : '50%'};\r\n    top:  ${props => props.coordY};\r\n    transform: rotate(${props => props.rotate}deg) scale(${props => props.scale});\r\n`;\r\n\r\n\r\nclass TextComponent extends React.PureComponent {\r\n\r\n    resizeStream = new Events();\r\n\r\n    static propTypes = {\r\n        id: PropTypes.oneOfType([\r\n            PropTypes.string,\r\n            PropTypes.number\r\n        ]).isRequired,\r\n        targetSection: PropTypes.string.isRequired,\r\n        sizeParentBox: PropTypes.object,\r\n        mode: PropTypes.string.isRequired,\r\n    }\r\n\r\n    state = {\r\n        id: this.props.id,\r\n        istrumentsActive: false,\r\n        isHaveSize: false,\r\n        parent: this.props.sizeParentBox,\r\n        targetSection: this.props.targetSection,\r\n        colorText: this.props.color,\r\n        sizeText: this.props.fontSize || this.props.size,\r\n        shiftCoords: null,\r\n        position: this.props.coords,\r\n        transformValue: this.props.rotate || 0,\r\n        scaleValue: this.props.scale || 1,\r\n        font: this.props.font ? this.props.font : 'Arial',\r\n        startDragNdrop: false,\r\n        contentText: this.props.content ? this.props.content : null,\r\n        countSection: 0,\r\n        sectionNumber: 0,\r\n        getSizeBool: false,\r\n    }\r\n\r\n    openTitleInstruments = event => {\r\n         const componentsPatternText = {\r\n            id: this.state.id,\r\n            targetSection: this.state.targetSection,\r\n            type: 'text',\r\n            rotate: this.state.transformValue,\r\n            scale: this.state.scaleValue,\r\n            font: this.state.font,\r\n            color: this.state.colorText,\r\n            fontSize: this.state.sizeText || 120,\r\n            content: this.state.contentText,\r\n            coords: {...this.state.position}, // x, y\r\n        };\r\n        eventEmitter.emit(`EventInstrumentPanel`,{\r\n                type: 'text',\r\n                targetSection: this.state.targetSection,\r\n                id: this.state.id,\r\n                componentStats: componentsPatternText,\r\n                sizeTextValue: this.state.sizeText\r\n        });\r\n        this.setState({...this.state, istrumentsActive: true});\r\n        event.stopPropagation();\r\n    }\r\n\r\n    changeColorText = colorRGB => {\r\n        if (typeof colorRGB === 'string')\r\n            this.setState({\r\n                ...this.state,\r\n                colorText: colorRGB\r\n            });\r\n    };\r\n\r\n    changeSizeText = eventSize => {\r\n        this.setState({...this.state, sizeText: eventSize.size});\r\n    };\r\n\r\n    saveSize = event => {\r\n        const {size} = event;\r\n        if (!this.state.getSizeBool){\r\n        this.setState({\r\n            ...this.state,\r\n            getSizeBool: true,\r\n            countSection: event.countSection,\r\n            sectionNumber: event.sectionNumber,\r\n            parent: {width: size.width, height: size.height}});\r\n        } else controllerStream.off(`EventSaveWidth${this.state.targetSection}`,this.saveSize);\r\n    }\r\n\r\n    changeContentText = eventContent => {\r\n        let booldContent = eventContent.content || eventContent.content === '';\r\n        if (booldContent)\r\n            this.setState({\r\n                ...this.state,\r\n                contentText: eventContent.content\r\n            });\r\n    };\r\n\r\n    saveCoords = event => {\r\n        const element = this.refText.getBoundingClientRect();\r\n        const cords = {\r\n            left: element.left,\r\n            top: element.top,\r\n            width: element.right - element.left,\r\n            height: element.bottom - element.top\r\n        }\r\n\r\n        const resizeStart = event.target.classList[0] === 'resizeDoted'\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            shiftCoords: {x: event.clientX - cords.left, y: event.clientY - cords.top},\r\n            startDragNdrop: !this.state.startDragNdrop ? true : false,\r\n            resizeStart: resizeStart,\r\n        });\r\n\r\n        event.stopPropagation();\r\n    };\r\n\r\n    setFont = eventItem => {\r\n        this.setState({\r\n            ...this.state,\r\n            font: eventItem.font\r\n        });\r\n    };\r\n\r\n    checkPivotPosition = (coordX, coordY) => {\r\n        const element = this.refText.getBoundingClientRect();\r\n        const borderTopLeft = 0;\r\n        const borderDown = 800 - element.height;\r\n        const borderRight = this.props.sizeParentBox.width - element.width;\r\n\r\n        if (coordY < borderTopLeft) coordY = borderTopLeft;\r\n        if (coordY > borderDown) coordY = borderDown;\r\n        if (coordX < borderTopLeft) coordX = borderTopLeft;\r\n        if (coordX > borderRight) coordX = borderRight;\r\n\r\n        return {x: coordX, y: coordY};\r\n    }\r\n\r\n    move = (x,y) => this.setState({...this.state, position: {x: x, y: y}});\r\n\r\n    moveText = event => {\r\n        if (this.state.startDragNdrop && this.state.istrumentsActive){\r\n            const element = this.refText.getBoundingClientRect();\r\n            let sectionNum = this.state.sectionNumber === 0 ? 1 : this.state.sectionNumber;\r\n            let xItem = event.clientX - (this.props.sizeParentBox.left  * sectionNum);\r\n            let yItem = event.clientY - (this.props.sizeParentBox.top * sectionNum);\r\n            let factorCoord = this.delta(parseInt(this.state.transformValue),element.height,element.width);\r\n\r\n            let coordX = xItem - this.state.shiftCoords.x + factorCoord.xFacotr;\r\n            let coordY = yItem - this.state.shiftCoords.y + factorCoord.yFactor;\r\n\r\n            let coords = this.checkPivotPosition(coordX,coordY);\r\n\r\n            let convertToPercentX = coords.x * 100 / this.state.parent.width;\r\n            let convertToPercentY = coords.y * 100 / this.state.parent.height;\r\n\r\n            this.move(convertToPercentX.toFixed(2) + '%',\r\n                      convertToPercentY.toFixed(2) + '%');\r\n        }\r\n        event.stopPropagation();\r\n    };\r\n\r\n\r\n    rotateEvent = eventItem => {\r\n        const angle = eventItem.angle;\r\n        this.setState({\r\n            ...this.state,\r\n            transformValue: angle,\r\n        });\r\n    }\r\n\r\n    scaleEvent = eventItem => {\r\n        const scale = eventItem.scale;\r\n        this.setState({\r\n            ...this.state,\r\n            scaleValue: scale,\r\n        });\r\n    }\r\n\r\n    delta = (transform, height, width) => {\r\n\r\n        let powHeight = height * height;\r\n        let powWidth =  width * width;\r\n\r\n        let pythagoras = Math.sqrt(powHeight + powWidth) / 2;\r\n        let _angle = Math.atan(height / width);\r\n        let angle = Math.atan(width / height);\r\n\r\n        let _biasFactor = 1;\r\n        let biasFactor = 1;\r\n\r\n        if (transform < 0 || transform > 180)\r\n            _biasFactor = - 1;\r\n        if (transform > 90 && transform < 270)\r\n            biasFactor= -1;\r\n\r\n        transform = transform * (Math.PI/180);\r\n\r\n        let sinX = Math.sin(biasFactor * angle + _biasFactor * transform);\r\n        let sinY = Math.sin(biasFactor* _angle + _biasFactor * transform);\r\n\r\n        let xFacotr = pythagoras*(-Math.sin(angle)+sinX);\r\n        let yFactor = pythagoras*(-Math.sin(_angle)+sinY);\r\n\r\n        return {xFacotr, yFactor}\r\n    };\r\n\r\n\r\n    stopDragNdrop = event => {\r\n\r\n        if (this.state.startDragNdrop)\r\n            this.setState({...this.state, startDragNdrop: false},\r\n            () => controllerStream.emit(`EventUpdatePosition${this.state.id}`, this.state.position));\r\n        event.stopPropagation();\r\n    };\r\n\r\n    refText = null;\r\n    refTextComponent = node => this.refText = node;\r\n\r\n\r\n    render(){\r\n        if (this.props.mode === 'dev'){\r\n            return (\r\n                <WrapperText\r\n                    ref  = {this.refTextComponent}\r\n                    onClick={this.openTitleInstruments}\r\n                    textColor = {this.state.colorText ? this.state.colorText : 'red'}\r\n                    size = {this.state.sizeText ? this.state.sizeText + 'px' : '120px'}\r\n                    onMouseDown = {this.saveCoords}\r\n                    onMouseMove= {this.moveText}\r\n                    onMouseLeave = {this.stopDragNdrop}\r\n                    onMouseUp = {this.stopDragNdrop}\r\n                    rotate = {this.state.transformValue}\r\n                    scale = {this.state.scaleValue}\r\n                    coordX = {this.state.position ? this.state.position.x : null}\r\n                    coordY = {this.state.position ? this.state.position.y : null}\r\n                    indexZ = {this.state.startDragNdrop}\r\n                    data-textcomponent\r\n                >\r\n                    <TextStyle font = {this.state.font}>{this.state.contentText}</TextStyle>\r\n                </WrapperText>\r\n            ) \r\n        } else if (this.props.mode === 'production'){\r\n            return (\r\n                <ProductionStyle\r\n                    ref  = {this.refTextComponent}\r\n                    mode = {this.props.mode}\r\n                    scale = {this.state.scaleValue}\r\n                    rotate = {this.state.transformValue}\r\n                    textColor = {this.state.colorText ? this.state.colorText : 'red'}\r\n                    size = {this.state.sizeText ? this.state.sizeText + 'px' : '120px'}\r\n                    coordX = {this.state.position ? this.state.position.x : null}\r\n                    coordY = {this.state.position ? this.state.position.y : null}\r\n                    indexZ = {this.state.startDragNdrop}\r\n                >\r\n                    <TextStyle font = {this.state.font}>{this.state.contentText}</TextStyle>\r\n                </ProductionStyle>\r\n            )\r\n        }\r\n\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        controllerStream.on(`EventChangeColorText${this.state.id}`, this.changeColorText);\r\n        controllerStream.on(`EventSetFont${this.state.id}`, this.setFont);\r\n        controllerStream.on(`EventChangeSize${this.state.id}`, this.changeSizeText);\r\n        controllerStream.on(`EventChangeContentText${this.state.id}`, this.changeContentText);\r\n        controllerStream.on(`EventSaveWidth${this.state.targetSection}`,this.saveSize);\r\n        controllerStream.on(`EventResize${this.state.id}`,this.rotateEvent);\r\n        controllerStream.on(`EventScale${this.state.id}`,this.scaleEvent);\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        controllerStream.off(`EventChangeColorText${this.state.id}`, this.changeColorText);\r\n        controllerStream.off(`EventSetFont${this.state.id}`, this.setFont);\r\n        controllerStream.off(`EventChangeSize${this.state.id}`, this.changeSizeText);\r\n        controllerStream.off(`EventChangeContentText${this.state.id}`, this.changeContentText);\r\n        controllerStream.off(`EventSaveWidth${this.state.targetSection}`,this.saveSize);\r\n        controllerStream.off(`EventResize${this.state.id}`,this.rotateEvent);\r\n        controllerStream.on(`EventScale${this.state.id}`,this.scaleEvent);\r\n    }\r\n}\r\n\r\nexport default TextComponent;","import React from 'react';\r\n\r\nimport Input from './buildComponents/components/Input';\r\nimport Media from './buildComponents/components/Media';\r\nimport Image from './buildComponents/components/Image';\r\nimport TextComponent from './buildComponents/components/Text';\r\nimport BackgroundComponent from './buildComponents/components/Background';\r\n\r\nconst builderHOC = item => Component => {\r\n        if (item.type === 'background') Component = BackgroundComponent;\r\n        else if (item.type === 'input') Component = Input;\r\n        else if (item.type === 'media') Component = Media;\r\n        else if (item.type === 'image') Component = Image;\r\n        else if (item.type === 'text') Component = TextComponent;\r\n\r\n        return <Component key = { `${item.type}${item.id}`} {...item.props} />\r\n};\r\n\r\nexport default builderHOC;","import React,{Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Reveal from 'react-reveal/Reveal';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\n/** Redux actions */\r\nimport {loadCurrentProjectAction, exitProjectAction} from '../../redux/actions';\r\n/* ------- Child components ------- */\r\nimport Section from '../../components/buildComponents/section';\r\nimport builderHOC from '../../components/builderHOC';\r\nimport Loader from '../../components/loading/Loader';\r\nimport Header from '../../components/header/Header';\r\n/* HOC */\r\nimport withFirebase from '../../components/withFirebase';\r\nimport './production.scss';\r\n\r\nclass Production extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        firebase: PropTypes.object,\r\n    }\r\n\r\n    state = {\r\n        idProject: parseInt(this.props.match.params.param), /** @Id project */\r\n        mode: 'production', /** @workMode */\r\n        projectEmpty: false, /** @Bool detected project undefiend */\r\n        isLoadComponents: true, /** @Bool load all necessary components  */\r\n        componentsProdJSX: [] /** @Array with JSX */\r\n    }\r\n\r\n    makeProduction = (array) => {\r\n        /* build components */\r\n        let {componentsProdJSX} = this.state;\r\n        let _components = [];\r\n\r\n        array.forEach(item => {\r\n\r\n            const itemHash = {\r\n                props: {\r\n                    ...item,\r\n                    mode: 'production',\r\n                },\r\n                type: item.type,\r\n                id: item.id,\r\n            }\r\n            const patternJSX = {\r\n                id: item.id,\r\n                targetSection: item.targetSection,\r\n                component: builderHOC(itemHash)(Fragment)\r\n            };\r\n                _components.push(patternJSX);\r\n        });\r\n            this.setState({\r\n                ...this.state,\r\n                isLoadComponents: false,\r\n                componentsProdJSX: [...componentsProdJSX, ..._components],\r\n            });\r\n    };\r\n\r\n    prodRef = null;\r\n    mainProductionRef  = node => node ?\r\n    this.prodRef = {data: node.getBoundingClientRect(), node: node} : node;\r\n\r\n    render(){\r\n\r\n        const {userData} = this.props;\r\n        const {currentProjectsData} = userData;\r\n        const section = currentProjectsData.sectionsProject;\r\n\r\n        if (this.state.projectEmpty) return <Redirect to = '/Cabinet' />\r\n\r\n        if (userData.active && currentProjectsData.loadProject){\r\n            return (\r\n            <Reveal effect=\"fade\">\r\n                <Header key = 'Header' title = \"Constructor\" idUser = {userData.idUser} />\r\n                <div\r\n                    ref = {this.mainProductionRef}\r\n                    className = 'Production'\r\n                    key = 'Production'\r\n                    >\r\n                    {!this.state.isLoadComponents ?\r\n                        section.length &&\r\n                            <Section \r\n                                key = 'section'\r\n                                mode = {this.state.mode}\r\n                                currentProjectsData = {currentProjectsData}\r\n                                componentsProdJSX = {this.state.componentsProdJSX}\r\n                                section = {section}\r\n                            />\r\n                        : null\r\n                    }\r\n                </div>\r\n            </Reveal>\r\n            )\r\n        } else if (!this.props.firebase.getCurrentUser()) return <Redirect to = '/' />\r\n        else return <Loader  key = 'Loader' path = '/img/loading.gif' type = 'production' />\r\n    }\r\n\r\n    componentDidUpdate = () => {\r\n        let {userData} = this.props;\r\n        let {currentProjectsData} = userData;\r\n\r\n        if (userData.active && !currentProjectsData.loadProject) {\r\n            /** load current project of user session active and load project - false */\r\n            const current =  userData.projects.find(item => item.id === this.state.idProject)\r\n            if (current)\r\n            this.props.dispatch(loadCurrentProjectAction({\r\n                id: current.id,\r\n                typeProject: current.type,\r\n                sectionsProject: [...current.sectionsProject],\r\n                components: [...current.components]\r\n            })) /* else redirect */\r\n            else this.setState({...this.state, projectEmpty: true});\r\n        }\r\n\r\n        if (this.state.isLoadComponents && currentProjectsData.loadProject)\r\n            /* if all components load build our JSX */\r\n            this.makeProduction(currentProjectsData.components);\r\n\r\n    }\r\n\r\n\r\n    componentDidMount = () => {\r\n        let {userData} = this.props;\r\n        let {currentProjectsData} = userData;\r\n\r\n        if (userData.active && !currentProjectsData.loadProject) {\r\n            /** if user active and project load - false */\r\n            const current =  userData.projects.find(item => item.id === this.state.idProject)\r\n            this.props.dispatch(loadCurrentProjectAction({\r\n                id: current.id,\r\n                sectionsProject: [...current.sectionsProject],\r\n                typeProject: current.type,\r\n                components: [...current.components]\r\n            })); /** else render loader */\r\n        };\r\n\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        let {userData} = this.props;\r\n        if (userData.active)  this.props.dispatch(exitProjectAction(true));\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        userData: {\r\n            active: state.cabinet.active,\r\n            idUser: state.cabinet.idUser,\r\n            projects: [...state.cabinet.projects],\r\n           currentProjectsData: {...state.builder}\r\n        },\r\n    }\r\n};\r\n\r\n  export default connect(mapStateToProps)(withFirebase(Production));","import React from 'react';\r\nimport Reveal from 'react-reveal/Reveal';\r\nimport PropTypes from 'prop-types';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\n\r\n\r\nimport withFirebase from '../../components/withFirebase';\r\nimport Header from '../../components/header/Header';\r\nimport Loader from '../../components/loading/Loader';\r\n\r\nimport './about.scss';\r\n\r\nclass About extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        config: PropTypes.object.isRequired, /** @Config app */\r\n        firebase: PropTypes.object.isRequired, /** @firebase class for use firebase functions */\r\n        history: PropTypes.object, /** @Router HTML5 history */\r\n        location: PropTypes.object, /** @Router */\r\n        match: PropTypes.object, /** @Router */\r\n    }\r\n\r\n    state = {\r\n        config: this.props.config\r\n    };\r\n\r\n    render(){\r\n\r\n        let user = this.props.firebase.getCurrentUser();\r\n        if (user && this.props.idUser) {\r\n            const { config } = this.state;\r\n            return (\r\n                <Reveal effect=\"fade\">\r\n                    <Header title = {config.title} idUser = {user.uid} />\r\n                    <section className = 'About'>\r\n                        <div className = 'container'>\r\n                            <div className = 'col-12'>\r\n                                <div className = 'About__information'>\r\n                                <img alt = 'img'\r\n                                    className = 'information__logoAbout' \r\n                                    src = {process.env.PUBLIC_URL + '/img/about.jpg'}\r\n                                />\r\n                                    <p className ='developer'><span>Developer:</span>\r\n                                                            {config.about.developer}\r\n                                    </p>\r\n                                    <p className = 'year'><span>Year:</span> {config.about.year}</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </section>\r\n                </Reveal>\r\n            )\r\n        } else if (!user) return <Redirect to = { '/'} />\r\n        else return <Loader path = '/img/loading.gif' type = 'About' />\r\n\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n      idUser: state.cabinet.idUser,\r\n    }\r\n  };\r\n\r\nexport default connect(mapStateToProps)(withFirebase(About));","import {errorAction, loadUpdateCurrentProject} from '../actions';\r\n\r\nconst updateMiddleware = (item) => async (dispatch,getState, {firebase}) => {\r\n \r\n    let newProjects = item.projects.map(project => {\r\n        if (project.id === item.idProject) {\r\n            project.components = [...item.components]\r\n            project.sectionsProject = [...item.sectionsProject]\r\n        }\r\n        return project;\r\n    });\r\n    await firebase.db.collection(\"users\").doc(item.uid).update({\r\n        'projects': JSON.parse(JSON.stringify(newProjects))\r\n    })\r\n    .then(response => {\r\n        let project = item.projects.find(itemdb => itemdb.id === item.idProject);\r\n        dispatch(loadUpdateCurrentProject({\r\n            components: [...project.components],\r\n            idProject: item.idProject,\r\n            sectionsProject: item.sectionsProject,\r\n        }))\r\n    })\r\n    .catch(error => dispatch(errorAction(error.message)));\r\n};\r\n\r\nexport default updateMiddleware;","import React from 'react';\r\nimport eventEmitter from '../EventEmitter';\r\n\r\nimport {animateScroll as scroll, scroller } from \"react-scroll\";\r\n\r\n\r\nconst withScroll = Component => {\r\n    return class ScrollMove extends React.PureComponent {\r\n\r\n        state = {\r\n            mode: 'default',\r\n            scrollConfig: {\r\n                duration: 1000,\r\n                delay: 50,\r\n                smooth: true,\r\n                offset: -60\r\n            },\r\n            position: 0,\r\n            positionCount: null\r\n\r\n        }\r\n\r\n        setStates = event => {\r\n            this.setState({...this.state,positionCount: event});\r\n        }\r\n\r\n        blockMove = event => {\r\n            this.setState({...this.state, mode: event})\r\n        }\r\n\r\n        moveLocation = event => {\r\n\r\n            if (this.state.mode === 'default'){\r\n                const count = this.state.positionCount;\r\n                const moveDown = this.state.position < count && event.deltaY > 0;\r\n                const moveUp = event.deltaY < 0 && this.state.position > 0;\r\n                eventEmitter.emit('EventClosePanel',{close: false});\r\n\r\n                if (moveDown)\r\n                    this.setState({ position: this.state.position + 1},\r\n                        () => scroller.scrollTo(`element${this.state.position}`,this.state.scrollConfig));\r\n                    else if (moveUp){\r\n                        this.state.position === 1 &&\r\n                            this.setState({position: this.state.position - 1}, () => scroll.scrollToTop());\r\n                        this.state.position !== 1 &&\r\n                            this.setState({position: this.state.position - 1},\r\n                                () => scroller.scrollTo(`element${this.state.position}`,this.state.scrollConfig));\r\n                    }\r\n            }\r\n\r\n        }\r\n\r\n\r\n        render(){\r\n            return (\r\n                <div key = 'moveScroll' onWheel = {this.moveLocation} onTouchStart = {() => false}\r\n                >\r\n                    {<Component {...this.props} />}\r\n                </div>\r\n            )\r\n        }\r\n\r\n        componentDidMount = () => {\r\n            eventEmitter.on('EventBlockScroll', this.blockMove);\r\n            eventEmitter.on('EventSetState', this.setStates);\r\n        }\r\n\r\n        componentWillUnmount = () => {\r\n            eventEmitter.off('EventBlockScroll', this.blockMove);\r\n            eventEmitter.off('EventSetState', this.setStates);\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport default withScroll;","import React,{useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Viewer.scss';\r\n\r\nfunction Viewer(props){\r\n\r\n    let [mode] = useState(props.mode);\r\n    let [path] = useState(props.path);\r\n\r\n    const closeViewer = event => {\r\n        props.eventStreamBuild.emit(\"EventView\", { action: false, target: null});\r\n        event.stopPropagation();\r\n    }\r\n\r\n    return (\r\n        \r\n        <div onClick = {closeViewer} className = 'Viewer'>\r\n            {(mode === 'image' || mode === 'background') ? <img src = {path} alt = 'fullImage' /> \r\n            : \r\n            <iframe \r\n            src= {`https://www.youtube.com/embed/${props.iframe}`}\r\n            title = 'youtube'\r\n            frameBorder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" \r\n            allowFullScreen>\r\n            </iframe>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nViewer.propTypes = {\r\n    eventStreamBuild: PropTypes.object.isRequired, // events stream\r\n    mode: PropTypes.string, // use mode\r\n    path: PropTypes.string // path to data component\r\n}\r\n\r\nexport default Viewer;","import React,{Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {SketchPicker} from 'react-color';\r\n\r\n\r\nconst InputInstruments = props => {\r\n\r\n    let {colorPickerActive} = props.instrumentPanel;\r\n    let {content} = props.componentStats;\r\n    let {fontSize} = props.componentStats;\r\n    let {coords} = props.componentStats;\r\n    let {size} = props.componentStats;\r\n\r\n    let _content = content !== '' ? 'Input' : '';\r\n\r\n    return (\r\n        <Fragment>\r\n            <p className = 'titleInstument'>Position: </p>\r\n            <span className = 'textCoordsPanel'>\r\n            {coords.x ?\r\n                coords.x + ' / ' + coords.y : ' drop for active'}\r\n            </span>\r\n            <p className = 'titleInstument'>Color: </p>\r\n            <input \r\n                onClick = {props.cbSetColor}\r\n                className = 'button_switch'\r\n                type = 'button'\r\n                value = 'color pick'\r\n            />\r\n                { colorPickerActive ?\r\n                    <div className ='wrapperColorPicker'>\r\n                        <SketchPicker\r\n                        onChangeComplete={props.cbHandleChangeComplete}\r\n                        color = {props.color ? props.color : 'white'}\r\n                        />\r\n                    </div>\r\n                    : null\r\n                }\r\n            <p className = 'titleInstument'>Size (%):</p>\r\n            <div className = 'controllersText'>\r\n                <input\r\n                    className = 'button_switch'\r\n                    onChange = {props.cbSetWidth}\r\n                    type=\"number\"\r\n                    min = '10' max = '200'\r\n                    value = {size.w ? size.w : 100}\r\n                />\r\n                <input \r\n                    className = 'button_switch'\r\n                    onChange = {props.cbSetHeight}\r\n                    type=\"number\"\r\n                    min = '10' max = '200'\r\n                    value = {size.h ? size.h : 50}\r\n                />\r\n            </div>\r\n            <p className = 'titleInstument'>Text size: </p>\r\n            <input \r\n                className = 'button_switch'\r\n                onChange = {props.cbSetSize}\r\n                type=\"number\"\r\n                min = '10' max = '200'\r\n                value = {fontSize ? fontSize : 21}\r\n            />\r\n            <p className = 'titleInstument'>Border radius: </p>\r\n            <input\r\n                onChange = {props.cbSetBorderRadius}\r\n                className = 'button_switch radius'\r\n                type=\"number\"\r\n                value = {props.componentStats.borderRadius ?\r\n                            props.componentStats.borderRadius : 10\r\n                        }\r\n                min = '10' max = '200'\r\n            />\r\n\r\n            <p className = 'titleInstument'>Type input: </p>\r\n            <select \r\n            value = {props.componentStats.typeInput} \r\n            onChange = {props.cbSetType}\r\n            className = 'button_switch'>\r\n                <option>button</option>\r\n                <option>text</option>\r\n                <option>password</option>\r\n            </select>\r\n            <p className = 'titleInstument'>Content: </p>\r\n            <input\r\n            className = 'button_switch'\r\n            onChange = {props.cbSetContent}\r\n            maxLength = '100'\r\n            type = 'text'\r\n            value = {content ? content : _content}\r\n        />\r\n            <input \r\n                onClick = {props.cbDelete}\r\n                className = 'instrumentPanel__deleteComponentButton'\r\n                type=\"button\"\r\n                value = 'delete'\r\n            />\r\n        </Fragment>\r\n    )\r\n};\r\n\r\nInputInstruments.propTypes = {\r\n    componentStats: PropTypes.object.isRequired, // object with current component data\r\n    cbSetColor: PropTypes.func.isRequired, // callback set color\r\n    cbHandleChangeComplete: PropTypes.func.isRequired, // callback state color picker\r\n    cbSetWidth: PropTypes.func.isRequired, // callback set width\r\n    cbSetHeight: PropTypes.func.isRequired, // callback set height\r\n    cbSetSize: PropTypes.func.isRequired, // callback set size\r\n    cbSetBorderRadius: PropTypes.func.isRequired, // callback set border-radius\r\n    cbSetContent: PropTypes.func.isRequired, // callback set content input\r\n    cbDelete: PropTypes.func.isRequired, // callback delete\r\n}\r\n\r\nexport default InputInstruments;","import React,{Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst MediaInstruments = props => {\r\n\r\n    let {size} = props.componentStats;\r\n    let {coords} = props.componentStats;\r\n\r\n    return (\r\n        <Fragment>\r\n            <p className = 'titleInstument'>Position: </p>\r\n            <span className = 'textCoordsPanel'>\r\n            {coords.x ?\r\n                coords.x + ' / ' + coords.y : ' drop for active'}\r\n            </span>\r\n            <p className = 'titleInstument'>Size (%):</p>\r\n            <div className = 'controllersText media'>\r\n                <input\r\n                    className = 'button_switch'\r\n                    onChange = {props.cbSetWidth}\r\n                    type=\"number\"\r\n                    min = '10' max = '100'\r\n                    value = {size.w ? size.w : 30}\r\n                />\r\n                <input \r\n                    className = 'button_switch'\r\n                    onChange = {props.cbSetHeight}\r\n                    type=\"number\"\r\n                    min = '10' max = '100'\r\n                    value = {size.h ? size.h : 50}\r\n                />\r\n            </div>\r\n            <p className = 'titleInstument'>Content: </p>\r\n            <input \r\n                onClick = {props.cbSearch}\r\n                className = 'ImageSearchButton'\r\n                type=\"button\"\r\n                value = 'search media'\r\n            />\r\n            <input \r\n                onClick = {props.cbDelete}\r\n                className = 'instrumentPanel__deleteComponentButton'\r\n                type=\"button\"\r\n                value = 'delete'\r\n            />\r\n        </Fragment>\r\n    )\r\n};\r\n\r\nMediaInstruments.propTypes = {\r\n    componentStats: PropTypes.object.isRequired, // object with current component data\r\n    cbSearch: PropTypes.func.isRequired, // callback search\r\n    cbSetWidth: PropTypes.func.isRequired, // callback set width\r\n    cbSetHeight: PropTypes.func.isRequired, // callback set height\r\n    cbDelete: PropTypes.func.isRequired, // callback delete\r\n}\r\n\r\nexport default MediaInstruments;","import React, {Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ImageInstruments = props => {\r\n\r\n    let {coords} = props.componentStats;\r\n    let {size} = props.componentStats;\r\n    let {rotate} = props.componentStats;\r\n    let {scale} = props.componentStats;\r\n    let fileRef = React.createRef();\r\n    return (\r\n        <Fragment>\r\n        <p className = 'titleInstument'>Position: </p>\r\n        <span className = 'textCoordsPanel'>\r\n        {coords.x ?\r\n            coords.x + ' / ' + coords.y : ' drop for active'}\r\n        </span>\r\n        <p className = 'titleInstument'>Size (%):</p>\r\n        <div className = 'controllersText'>\r\n            <input\r\n                className = 'button_switch size'\r\n                onChange = {props.cbSetWidth}\r\n                type=\"number\"\r\n                min = '10' max = '100'\r\n                value = {size.w ? size.w : 30}\r\n            />\r\n            <input \r\n                className = 'button_switch size'\r\n                onChange = {props.cbSetHeight}\r\n                type=\"number\"\r\n                min = '10' max = '100'\r\n                value = {size.h ? size.h : 30}\r\n            />\r\n        </div>\r\n        <p className = 'titleInstument'>Rotate/Scale:</p>\r\n        <div className = 'controllersText'>\r\n            <input\r\n            className = 'button_switch rotate'\r\n            onChange = {props.cbRotate}\r\n            type=\"number\"\r\n            min = '0' max = '360'\r\n            value = {rotate ? rotate : 0}\r\n            />\r\n            <input\r\n            className = 'button_switch scale'\r\n            onChange = {props.cbScale}\r\n            type=\"number\"\r\n            step = '0.1'\r\n            min = '0' max = '2'\r\n            value = {scale ? scale : 1}\r\n            />\r\n        </div>\r\n        <p className = 'titleInstument'>Border radius: </p>\r\n            <input\r\n                onChange = {props.cbSetBorderRadius}\r\n                className = 'button_switch radius'\r\n                type=\"number\"\r\n                value = {props.componentStats.borderRadius ?\r\n                            props.componentStats.borderRadius : 10\r\n                        }\r\n                min = '10' max = '200'\r\n            />\r\n            <p className = 'titleInstument titleInstrument__opacity'>Opacity: </p>\r\n            <input \r\n                onChange = {props.cbSetOpacity}\r\n                className = 'ImageSearchButton'\r\n                type=\"number\"\r\n                value = {props.componentStats.opacity ?\r\n                    props.componentStats.opacity : 1\r\n                }\r\n                step = '0.1'\r\n                min = '0' max = '1'\r\n            />\r\n            <p className = 'titleInstument titleInstrument__opacity'>Loader: </p>\r\n            <div className = 'controllersText'>\r\n                <div className = 'fileLoader'>\r\n                    <input\r\n                        ref = {fileRef}\r\n                        className = 'fileInput'\r\n                        onChange = {props.cbLoadFile}\r\n                        accept=\"image/*\"\r\n                        type=\"file\"\r\n                    />\r\n                    <input\r\n                        className = 'ImageSearchButton file'\r\n                        type = 'button'\r\n                        value = 'loading file'\r\n                    />\r\n                </div>\r\n                <input \r\n                    onClick = {props.cbSearch}\r\n                    className = 'ImageSearchButton file'\r\n                    type=\"button\"\r\n                    value = 'search image'\r\n                />\r\n            </div>\r\n            <input \r\n                onClick = {props.cbDelete}\r\n                className = 'instrumentPanel__deleteComponentButton'\r\n                type=\"button\"\r\n                value = 'delete'\r\n            />\r\n        </Fragment>\r\n    )\r\n\r\n}\r\n\r\nImageInstruments.propTypes = {\r\n    componentStats: PropTypes.object.isRequired, // object with current component data\r\n    cbSetWidth: PropTypes.func.isRequired, // callback set width\r\n    cbSetHeight: PropTypes.func.isRequired, // callback set height\r\n    cbSetBorderRadius: PropTypes.func.isRequired, // callback set border-radius\r\n    cbSetOpacity: PropTypes.func.isRequired, // callback set opacity\r\n    cbLoadFile: PropTypes.func.isRequired, // callback load file\r\n    cbSearch: PropTypes.func.isRequired, // callback search\r\n    cbDelete: PropTypes.func.isRequired, // callback delete\r\n}\r\n\r\nexport default ImageInstruments;","import React, {Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {SketchPicker} from 'react-color';\r\n\r\nconst BackgroundInstruments = props => {\r\n    return (\r\n        <Fragment>\r\n        <p className = 'titleInstument'>Color: </p>\r\n        <input\r\n            onClick = {props.cbSetColor}\r\n            className = 'button_switch Color'\r\n            type = 'button'\r\n            value = 'color pick'\r\n        />\r\n            { props.colorPickerActive ?\r\n                <SketchPicker\r\n                    onChangeComplete={props.cbHandleChangeComplete}\r\n                    color = {props.color ? props.color : 'white'}\r\n                />\r\n                : null\r\n            }\r\n            <input \r\n                onClick = {props.cbSearch}\r\n                className = 'ImageSearchButton'\r\n                type = 'button'\r\n                value = 'background-image'\r\n            />\r\n        </Fragment>\r\n    )\r\n\r\n}\r\n\r\nBackgroundInstruments.propTypes = {\r\n    componentStats: PropTypes.object.isRequired, // object with current component data\r\n    cbSetColor: PropTypes.func.isRequired, // callback set color\r\n    cbHandleChangeComplete: PropTypes.func.isRequired, // callback picker state change\r\n    cbSearch: PropTypes.func.isRequired, // callback search\r\n}\r\n\r\nexport default BackgroundInstruments;","import React,{Fragment} from 'react';\r\nimport {SketchPicker} from 'react-color';\r\n\r\nconst TextInstruments = props => {\r\n\r\n\r\n        let {colorPickerActive} = props.instrumentPanel;\r\n        let {content} = props.componentStats;\r\n        let {fontSize} = props.componentStats;\r\n        let {coords} = props.componentStats;\r\n        let {rotate} = props.componentStats;\r\n        let {scale} = props.componentStats;\r\n        let _content = content !== '' ? 'Title' : '';\r\n        return (\r\n            <Fragment>\r\n            <p className = 'titleInstument'>Position: </p>\r\n            <span className = 'textCoordsPanel'>\r\n            {coords.x ?\r\n                coords.x + ' / ' + coords.y : ' drop for active'}\r\n            </span>\r\n            <p className = 'titleInstument'>Rotate/Scale:</p>\r\n            <div className = 'controllersText'>\r\n                <input\r\n                className = 'button_switch rotate'\r\n                onChange = {props.cbRotate}\r\n                type=\"number\"\r\n                min = '0' max = '360'\r\n                value = {rotate ? rotate : 0}\r\n                />\r\n                <input\r\n                className = 'button_switch scale'\r\n                onChange = {props.cbScale}\r\n                type=\"number\"\r\n                step = '0.1'\r\n                min = '0' max = '2'\r\n                value = {scale ? scale : 1}\r\n                />\r\n            </div>\r\n            <p className = 'titleInstument'>Color: </p>\r\n            <input \r\n                onClick = {props.cbSetColor}\r\n                className = 'button_switch color'\r\n                type = 'button'\r\n                value = 'color pick'\r\n            />\r\n            <p className = 'titleInstument'>Text size: </p>\r\n            <input \r\n                className = 'button_switch size'\r\n                onChange = {props.cbSetSize}\r\n                type=\"number\"\r\n                min = '10' max = '200'\r\n                value = {fontSize ? fontSize : 120}\r\n            />\r\n                { colorPickerActive ?\r\n                    <SketchPicker\r\n                    onChangeComplete={props.cbHandleChangeComplete}\r\n                    color = {props.color ? props.color : 'red'}\r\n                    />\r\n                    : null\r\n                }\r\n                <p className = 'titleInstument'>Font: </p>\r\n                <select \r\n                    value = {props.componentStats.font} \r\n                    onChange = {props.cbSetFont}\r\n                    className = 'button_switch font'\r\n                >\r\n                <option>Arial</option>\r\n                <option>Times</option>\r\n                <option>Georgia</option>\r\n                <option>Impact</option>\r\n                <option>Tahoma</option>\r\n                <option>Verdana</option>\r\n                <option>Comic</option>\r\n                </select>\r\n            <p className = 'titleInstument'>Content: </p>\r\n            <input\r\n                className = 'button_switch content'\r\n                onChange = {props.cbSetContent}\r\n                maxLength = '100'\r\n                type = 'text'\r\n                value = {content ? content : _content}\r\n            />\r\n            <input \r\n                onClick = {props.cbDelete}\r\n                className = 'instrumentPanel__deleteComponentButton'\r\n                type=\"button\"\r\n                value = 'delete'\r\n            />\r\n            </Fragment>\r\n        )\r\n}\r\n\r\nexport default TextInstruments;","import React from 'react';\r\nimport eventEmitter,{controllerStream} from '../../EventEmitter';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport InputInstruments from './InputTools/InputInstruments';\r\nimport MediaInstruments from './MediaTools/MediaInstruments';\r\nimport ImageInstruments from './ImageTools/ImageInstruments';\r\nimport BackgroundInstruments from './BackgroundTools/BackgroundInstruments';\r\nimport TextInstruments from './TextTools/TextInstruments';\r\nimport Icon from '../Icon/icon';\r\n\r\nimport './instrumentsPanel.scss';\r\n\r\n\r\n\r\nclass InstrumentsPanel extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        instrumentPanel:  PropTypes.object.isRequired, /** @Settings for panel and data about component */\r\n        editComponentName: PropTypes.string, /** @Name editable component */\r\n        eventStreamBuild: PropTypes.object.isRequired // stream events\r\n    };\r\n\r\n    state = {\r\n        instrumentPanel: {...this.props.instrumentPanel},\r\n        componentStats: this.props.componentStats,\r\n        images: null,\r\n    };\r\n\r\n\r\n    closePanel = event => {\r\n        this.props.eventStreamBuild.emit('EventClosePanel', {close: false});\r\n    };\r\n\r\n    setSize = event => {\r\n        let {id} = this.state.componentStats;\r\n        let size = event.target.value > 200 ? 200 : event.target.value;\r\n\r\n        if (this.state.componentStats.type !== 'input')\r\n        this.setState({\r\n            ...this.state, \r\n            instrumentPanel: {...this.state.instrumentPanel},\r\n            componentStats: {...this.state.componentStats,fontSize: size}\r\n        }, () => controllerStream.emit(`EventChangeSize${id}`, {\r\n                targetSection: this.state.editComponentName, size: size \r\n        }));\r\n        else this.setState({\r\n                ...this.state, \r\n                instrumentPanel: {...this.state.instrumentPanel},\r\n                componentStats: {...this.state.componentStats,fontSize: size}\r\n            }, () => controllerStream.emit(`EventChangeSizeText${id}`, {size: size}\r\n            ));\r\n    };\r\n\r\n    setFont = event => {\r\n        let {id} = this.state.componentStats;\r\n        let fontName = event.target.value;\r\n        this.setState({\r\n            ...this.state, \r\n            instrumentPanel: {...this.state.instrumentPanel},\r\n            componentStats: {...this.state.componentStats,font: fontName}\r\n        },\r\n            () => controllerStream.emit(`EventSetFont${id}`, {\r\n                targetSection: this.state.editComponentName, font: fontName\r\n            })\r\n        );\r\n    }\r\n\r\n    rotate = event => {\r\n        let {id} = this.state.componentStats;\r\n        let angle = event.target.value;\r\n        this.setState({\r\n            ...this.state, \r\n            instrumentPanel: {...this.state.instrumentPanel},\r\n            componentStats: {...this.state.componentStats, rotate: angle}\r\n        },\r\n        () => controllerStream.emit(`EventResize${id}`,{angle: angle}));\r\n        event.stopPropagation();\r\n    }\r\n\r\n    scale = event => {\r\n        let {id} = this.state.componentStats;\r\n        let scale = event.target.value;\r\n        this.setState({\r\n            ...this.state, \r\n            instrumentPanel: {...this.state.instrumentPanel},\r\n            componentStats: {...this.state.componentStats, scale: scale}\r\n        },\r\n        () => controllerStream.emit(`EventScale${id}`,{scale: scale}));\r\n        event.stopPropagation();\r\n    }\r\n\r\n    setIframeContent = eventItem => {\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            componentStats:{\r\n                ...this.state.componentStats,\r\n                content: eventItem.iframe\r\n            }\r\n        });\r\n    }\r\n\r\n    setContent = event => {\r\n        let {id} = this.state.componentStats;\r\n        let contentValue = event.target.value;\r\n        this.setState({\r\n            ...this.state, \r\n            instrumentPanel: {...this.state.instrumentPanel},\r\n            componentStats: {...this.state.componentStats,content: contentValue}\r\n        },\r\n            () => controllerStream.emit(`EventChangeContentText${id}`,{\r\n                targetSection: this.state.editComponentName, content: contentValue\r\n            })\r\n        );\r\n        if (event) event.stopPropagation();\r\n    };\r\n\r\n    setWidth = event => {\r\n        const {id} = this.state.componentStats;\r\n        const width = event.target.value;\r\n        this.setState({\r\n            ...this.state,\r\n            componentStats: {...this.state.componentStats,\r\n                size: {\r\n                    ...this.state.componentStats.size,\r\n                    w: width\r\n                }}\r\n        },\r\n            () => controllerStream.emit(`EventSetWidth${id}`,{width: width}));\r\n\r\n        if (event) event.stopPropagation();\r\n    };\r\n\r\n    setHeight = event => {\r\n        const {id} = this.state.componentStats;\r\n        const height = event.target.value;\r\n        this.setState({\r\n            ...this.state,\r\n            componentStats: {...this.state.componentStats,\r\n                size: {\r\n                    ...this.state.componentStats.size,\r\n                    h: height\r\n                }}\r\n        },\r\n            () => controllerStream.emit(`EventSetHeight${id}`,{height: height}));\r\n\r\n        if (event) event.stopPropagation();\r\n    }\r\n\r\n    updatePosition = eventItem => {\r\n        console.log('updatePosition')\r\n        if (!eventItem) return;\r\n        this.setState({\r\n            ...this.state, \r\n            componentStats: {\r\n                ...this.state.componentStats,\r\n                coords: {\r\n                    ...this.state.componentStats.coords,\r\n                    x: eventItem.x,\r\n                    y: eventItem.y\r\n                }\r\n            }\r\n        });\r\n    };\r\n\r\n    setColor = event => {\r\n        this.setState({...this.state,\r\n            instrumentPanel:{\r\n                ...this.state.instrumentPanel,\r\n                colorPickerActive: this.state.instrumentPanel.colorPickerActive ? false : true\r\n            }\r\n        });\r\n        if (event) event.stopPropagation();\r\n    };\r\n\r\n    setType = event => {\r\n\r\n        let {id} = this.state.componentStats;\r\n        let typeInput = event.target.value;\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            componentStats: {\r\n                ...this.state.componentStats,\r\n                typeInput: typeInput\r\n            }\r\n        },\r\n         () => controllerStream.emit(`EventSetType${id}`, typeInput));\r\n        if (event) event.stopPropagation();\r\n    }\r\n\r\n    setOpacity = event => {\r\n        let {id} = this.state.componentStats;\r\n        let opacity = event.target.value;\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            componentStats: {...this.state.componentStats,opacity: opacity}\r\n        },\r\n         () => controllerStream.emit(`EventSetOpacity${id}`, {opacity: opacity}));\r\n    };\r\n\r\n    setBorderRadius = event => {\r\n        let {id} = this.state.componentStats;\r\n        let radius = event.target.value;\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            componentStats: {...this.state.componentStats,borderRadius: radius}\r\n        },\r\n         () => controllerStream.emit(`EventSetBorderRadius${id}`, {borderRadius: radius}));\r\n    };\r\n\r\n    updateBimageStats = eventItem => {\r\n        const {images} = eventItem;\r\n        if (eventItem.mode !== 'image')\r\n        this.setState({\r\n            ...this.state,\r\n            componentStats:{\r\n                ...this.state.componentStats,\r\n                backgroundImage: images.urlFull\r\n            }\r\n        });\r\n        else {\r\n            this.setState({\r\n                ...this.state,\r\n                componentStats:{\r\n                    ...this.state.componentStats,\r\n                    image: images.urlFull\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    handleChangeComplete = event => {\r\n\r\n        const {rgb} = event;\r\n        let colorRGB = `rgb(${rgb.r},${rgb.g},${rgb.b},${rgb.a})`;\r\n\r\n        let {id} = this.state.componentStats;\r\n        if (this.state.componentStats.type === 'background'){\r\n            this.setState({\r\n                ...this.state,\r\n                componentStats: {...this.state.componentStats,color: colorRGB}\r\n            }, () => controllerStream.emit(`EventChangeColorBackground${id}`,\r\n                        {colorRGB: this.state.componentStats.color}\r\n                    ));\r\n        }\r\n\r\n        else if (this.state.componentStats.type === 'text') {\r\n            this.setState({\r\n                ...this.state,\r\n                componentStats: {...this.state.componentStats,color: colorRGB}\r\n            },\r\n            () => controllerStream.emit(`EventChangeColorText${id}`, colorRGB));\r\n        }\r\n\r\n        else if (this.state.componentStats.type === 'input') {\r\n            this.setState({\r\n                ...this.state,\r\n                componentStats: {...this.state.componentStats,color: colorRGB}\r\n            },\r\n            () => controllerStream.emit(`EventChangecolor${id}`, colorRGB));\r\n        }\r\n\r\n    };\r\n\r\n    redirectSaveChanges = event => {\r\n        this.props.eventStreamBuild.emit(\"EventSaveChangesComponent\", {\r\n            ...this.state.componentStats,\r\n            id: this.state.componentStats.id,\r\n            type: this.state.componentStats.type,\r\n            ms: 0\r\n        });\r\n        if (event) event.stopPropagation();\r\n    }\r\n\r\n    saveChanges = event => {\r\n\r\n        this.props.eventStreamBuild.emit(\"EventSaveChangesComponent\", {\r\n                ...this.state.componentStats,\r\n                id: this.state.componentStats.id,\r\n                type: this.state.componentStats.type,\r\n                ms: 1500,\r\n            });\r\n\r\n        eventEmitter.emit('EventRedirectConfirm', true);\r\n        if (event) event.stopPropagation();\r\n    }\r\n\r\n    deleteComponent = event => {\r\n        this.props.eventStreamBuild.emit('EventDeleteComponent', {\r\n            id: this.state.componentStats.id,\r\n            targetSection: this.state.componentStats.targetSection,\r\n            type: this.state.componentStats.type\r\n        });\r\n    };\r\n\r\n    search = event => {\r\n\r\n        let {id} = this.state.componentStats;\r\n        this.props.eventStreamBuild.emit('EventModalSearchOn',{\r\n            idComponent: id,\r\n            mode: this.state.componentStats.type\r\n        });\r\n\r\n        event.stopPropagation();\r\n    };\r\n\r\n    loadFile = event => {\r\n        let {id} = this.state.componentStats;\r\n        try {\r\n            let image = event.target.files[0];\r\n            let reader = new FileReader();\r\n            if (image.type[0] !== 'i') throw new Error('Invalid file');\r\n            reader.readAsDataURL(image);\r\n            reader.onload = (e) => {\r\n                controllerStream.emit(`EventSetCurrentImage${id}`,{ urlFull: reader.result });\r\n                this.updateBimageStats({images: { urlFull: reader.result }, mode: 'image'});\r\n                e.stopPropagation();\r\n            }\r\n            reader.onerror = () => {\r\n                console.error(reader.error);\r\n            }\r\n        } catch (error) {\r\n            console.error(error.message);\r\n        }\r\n\r\n        event.stopPropagation();\r\n    }\r\n\r\n    makePanelInstruments = (type) => {\r\n            switch (type){\r\n                case 'text':\r\n                   return(\r\n                    <TextInstruments\r\n                        instrumentPanel = {{...this.state.instrumentPanel}}\r\n                        componentStats = {{...this.state.componentStats}}\r\n                        cbSetColor = {this.setColor}\r\n                        cbSetSize = {this.setSize}\r\n                        cbHandleChangeComplete = {this.handleChangeComplete}\r\n                        cbSetContent = {this.setContent}\r\n                        cbSetFont = {this.setFont}\r\n                        cbSetOpacity = {this.setOpacity}\r\n                        color = {this.state.componentStats.color}\r\n                        cbDelete = {this.deleteComponent}\r\n                        cbRotate = {this.rotate}\r\n                        cbScale = {this.scale}\r\n                    />\r\n                   )\r\n                case 'background':\r\n                    return (\r\n                        <BackgroundInstruments\r\n                            colorPickerActive = {this.state.instrumentPanel.colorPickerActive}\r\n                            componentStats = {{...this.state.componentStats}}\r\n                            cbSetColor = {this.setColor}\r\n                            color = {this.state.componentStats.color}\r\n                            cbHandleChangeComplete = {this.handleChangeComplete}\r\n                            cbSearch = {this.search}\r\n                        />\r\n                    )\r\n                case 'image':\r\n                        return (\r\n                            <ImageInstruments\r\n                                instrumentPanel = {{...this.state.instrumentPanel}}\r\n                                componentStats = {{...this.state.componentStats}}\r\n                                cbSearch = {this.search}\r\n                                cbSetSize = {this.setSize}\r\n                                cbSetBorderRadius = {this.setBorderRadius}\r\n                                cbSetOpacity = {this.setOpacity}\r\n                                cbSetWidth = {this.setWidth}\r\n                                cbSetHeight = {this.setHeight}\r\n                                cbLoadFile = {this.loadFile}\r\n                                cbDelete = {this.deleteComponent}\r\n                                cbRotate = {this.rotate}\r\n                                cbScale = {this.scale}\r\n                            />\r\n                        )\r\n                case 'media':\r\n                        return (\r\n                            <MediaInstruments\r\n                                instrumentPanel = {{...this.state.instrumentPanel}}\r\n                                componentStats = {{...this.state.componentStats}}\r\n                                cbSearch = {this.search}\r\n                                cbSetWidth = {this.setWidth}\r\n                                cbSetHeight = {this.setHeight}\r\n                                cbDelete = {this.deleteComponent}\r\n                            />\r\n                            )\r\n                case 'input':\r\n                        return (\r\n                            <InputInstruments\r\n                                instrumentPanel = {{...this.state.instrumentPanel}}\r\n                                componentStats = {{...this.state.componentStats}}\r\n                                cbSetColor = {this.setColor}\r\n                                cbSetBorderRadius = {this.setBorderRadius}\r\n                                cbHandleChangeComplete = {this.handleChangeComplete}\r\n                                cbSetSize = {this.setSize}\r\n                                cbSetWidth = {this.setWidth}\r\n                                cbSetHeight = {this.setHeight}\r\n                                color = {this.state.componentStats.color}\r\n                                cbSetContent = {this.setContent}\r\n                                cbSetType = {this.setType}\r\n                                cbDelete = {this.deleteComponent}\r\n                            />\r\n                        )\r\n                default: return <p className = 'warningInstruments'>No found element</p>\r\n            }\r\n    };\r\n\r\n    render(){\r\n        let { instrumentActive } = this.state.instrumentPanel;\r\n        return (\r\n\r\n                <div  className = 'instumentsPanel'>\r\n                    <button\r\n                        onClick = {this.closePanel}\r\n                        className = 'closeInstrumentsPanel'\r\n                    >\r\n                        <Icon path = '/img/close.svg' />\r\n                    </button>\r\n                    <h3>Instruments</h3>\r\n                    {\r\n                        instrumentActive ? \r\n                        <p className = 'TextComponent'>{this.state.componentStats.type}</p>\r\n                        : null\r\n                    }\r\n                    {\r\n                        instrumentActive ?\r\n                        <div className = 'instuments'>\r\n                            {this.makePanelInstruments(this.state.componentStats.type)}\r\n                        </div>\r\n                        : null\r\n                    }\r\n                </div>\r\n        )\r\n    };\r\n\r\n    componentDidUpdate = (oldProps, oldState) => {\r\n        if (oldState.componentStats !== this.state.componentStats)\r\n        this.saveChanges();\r\n    };\r\n\r\n    componentDidMount = event => {\r\n        eventEmitter.on('EventRedirectSaveChanges', this.redirectSaveChanges);\r\n        eventEmitter.on(\"EventSetBImageInstumentPanel\", this.updateBimageStats);\r\n        eventEmitter.on(`EventSetIframe`, this.setIframeContent);\r\n        controllerStream.on(`EventUpdatePosition${this.state.componentStats.id}`, this.updatePosition);\r\n    };\r\n\r\n    componentWillUnmount = event => {\r\n        if (this.timer) clearTimeout(this.timer);\r\n        eventEmitter.off('EventRedirectSaveChanges', this.redirectSaveChanges);\r\n        eventEmitter.off(\"EventSetBImageInstumentPanel\", this.updateBimageStats);\r\n        eventEmitter.off(`EventSetIframe`, this.setIframeContent);\r\n        controllerStream.off(`EventUpdatePosition${this.state.componentStats.id}`, this.updatePosition);\r\n    };\r\n};\r\n\r\nexport default InstrumentsPanel;","import React,{Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Viewer from '../imageViewer/Viewer';\r\nimport InstrumentsPanel from '../../components/instrumentsPanel/InstrumentsPanel';\r\nimport ModalWindow from '../../components/modalWindow/ModalWindow';\r\nimport {CSSTransition} from 'react-transition-group';\r\n\r\nclass AdditionalTools extends React.PureComponent{\r\n\r\n    static propTypes = {\r\n        eventStreamBuild: PropTypes.object.isRequired, // events stream\r\n    }\r\n\r\n    state = {\r\n        modal: {\r\n            modalSearch: false, /** @bool active modal search image/media */\r\n            modalSearchMode: null, /** @String work mode of search modal */\r\n        },\r\n        modalViewer: {action: false, image: null, mode: null }, /** @Object data with viewer data */\r\n        instrumentPanel: { /** @Object with data controll instrument panel */\r\n            colorPickerActive: false,\r\n            instrumentActive: false,\r\n        },\r\n        componentStats: {}, /** @Object with data about components */\r\n        editComponentName:  this.props.editComponentName, /** @String | @null name current edit component */\r\n    }\r\n\r\n    modalSearchOn = itemEvent => {\r\n        console.log(itemEvent);\r\n        this.setState({\r\n            ...this.state,\r\n            modal:{\r\n                ...this.state.modal,\r\n                modalSearch: !this.state.modal.modalSearch,\r\n                modalSearchMode: itemEvent.mode || null\r\n            }\r\n        });\r\n    }\r\n\r\n    ViewerSwitch = itemEvent => {\r\n        /* set settings for viewer */\r\n        this.setState({\r\n            ...this.state,\r\n            modalViewer: {\r\n                ...this.state.modalViewer,\r\n                action: itemEvent.action,\r\n                target: itemEvent.target,\r\n                mode: itemEvent.mode,\r\n                iframe: itemEvent.iframe\r\n            }\r\n        });\r\n    };\r\n\r\n    openInstrument = itemEvent => {\r\n        /* build instrument panel component */\r\n           const idEqual = this.state.componentStats.id === itemEvent.componentStats.id;\r\n           if (!idEqual || !this.state.instrumentPanel.instrumentActive)\r\n           this.setState({\r\n               ...this.state,\r\n               editComponentName: itemEvent.targetSection,\r\n               componentStats: {\r\n                   ...this.state.componentStats,\r\n                   ...itemEvent.componentStats\r\n               },\r\n               instrumentPanel: {\r\n                   ...this.state.instrumentPanel,\r\n                   instrumentActive: true,\r\n               }\r\n           });\r\n   }\r\n\r\n   closePanel = itemEvent => {\r\n        /* unmount unstrument panel component */\r\n       this.setState({\r\n           ...this.state,\r\n           instrumentPanel: {\r\n               ...this.state.instrumentPanel,\r\n               colorPickerActive: false,\r\n               instrumentActive: itemEvent.close\r\n           }\r\n       });\r\n   };\r\n\r\n    render(){\r\n        const props = this.props;\r\n        if (this.state.instrumentPanel.instrumentActive){\r\n            return (\r\n                <Fragment key = 'AdditionalBuild'>\r\n                    <CSSTransition\r\n                        in={this.state.modalViewer.action}\r\n                        timeout={300}\r\n                        classNames=\"modalAnimation\"\r\n                        unmountOnExit\r\n                        appear\r\n                    >\r\n                        <Viewer\r\n                            key = 'ImageViewer'\r\n                            eventStreamBuild = {props.eventStreamBuild}\r\n                            mode = {this.state.modalViewer.mode}\r\n                            path = {this.state.modalViewer.target}\r\n                            iframe = {this.state.modalViewer.iframe}\r\n                        />\r\n                    </CSSTransition>\r\n                    <CSSTransition\r\n                        in={this.state.modal.modalSearch}\r\n                        timeout={300}\r\n                        classNames=\"modalAnimation\"\r\n                        unmountOnExit\r\n                        appear\r\n                    >\r\n                            <ModalWindow\r\n                                eventStreamBuild = {props.eventStreamBuild}\r\n                                idComponent = {this.state.componentStats.id}\r\n                                modalSearchMode = {this.state.modal.modalSearchMode}\r\n                                key = 'ModalWindow' workMode = 'Search'\r\n                            />\r\n                    </CSSTransition>\r\n                        <InstrumentsPanel\r\n                            key = {`InstrumentsPanel${this.state.componentStats.id}`}\r\n                            eventStreamBuild = {props.eventStreamBuild}\r\n                            editComponentName = {this.state.editComponentName}\r\n                            componentStats = {this.state.componentStats}\r\n                            instrumentPanel = {this.state.instrumentPanel}\r\n                        />\r\n                </Fragment>\r\n            )\r\n        } else return <Fragment></Fragment>;\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.props.eventStreamBuild.on('EventModalSearchOn', this.modalSearchOn);\r\n        this.props.eventStreamBuild.on('EventView', this.ViewerSwitch);\r\n        this.props.eventStreamBuild.on('EventClosePanel', this.closePanel);\r\n        this.props.eventEmitter.on('EventInstrumentPanel', this.openInstrument);\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        this.props.eventStreamBuild.off('EventModalSearchOn', this.modalSearchOn);\r\n        this.props.eventEmitter.off('EventInstrumentPanel', this.openInstrument);\r\n        this.props.eventStreamBuild.off('EventView', this.ViewerSwitch);\r\n        this.props.eventStreamBuild.off('EventClosePanel', this.closePanel);\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport default AdditionalTools;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Input from '../buildComponents/components/Input';\r\nimport Media from '../buildComponents/components/Media';\r\nimport Image from '../buildComponents/components/Image';\r\nimport TextComponent from '../buildComponents/components/Text';\r\nimport BackgroundComponent from '../buildComponents/components/Background';\r\n\r\nimport './buildMenu.scss';\r\n\r\nclass BuildMenu extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        mode: PropTypes.string.isRequired, /** @String work mode component */\r\n        editComponentName: PropTypes.string,\r\n        eventStreamBuild: PropTypes.object, /** @Events stream build */\r\n        countSection: PropTypes.number, /** @Number for new section id */\r\n        countComponents: PropTypes.number, /** @Number last project */\r\n        sizeParentBox: PropTypes.object /** @Object with width and height parent(bg) */\r\n    }\r\n\r\n\r\n    state = {\r\n        mode: this.props.mode,\r\n        sizeParentBox: {...this.props.sizeParentBox},\r\n        title: 'Title'\r\n    }\r\n\r\n    addText = event => {\r\n        let id = Math.random().toFixed(3);\r\n\r\n        const componentsPatternText = {\r\n            type: 'text',\r\n            font: 'Arial',\r\n            color: null,\r\n            rotate: 0,\r\n            scale: 1,\r\n            opacity: 1,\r\n            fontSize: null,\r\n            content: 'Title',\r\n            coords: {x: null, y: null}, // x, y\r\n            id: id,\r\n            targetSection: this.props.editComponentName,\r\n        };\r\n        this.props.eventStreamBuild.emit('EventBuildComponents',{\r\n            componentsPattern: componentsPatternText,\r\n            type: componentsPatternText.type,\r\n            component: <TextComponent\r\n                            key = {`text${id}`}\r\n                            mode = 'dev'\r\n                            {...componentsPatternText}\r\n                            sizeParentBox = {{...this.props.sizeParentBox}}\r\n                            id = {id}\r\n                        >Title</TextComponent>\r\n        });\r\n        event.stopPropagation();\r\n    }\r\n\r\n    addBackground = event => {\r\n        let id = Math.random().toFixed(3);\r\n\r\n        const componentsPatternBackground = {\r\n            id: id,\r\n            type: 'background',\r\n            backgroundColor: null,\r\n            backgroundImage: null,\r\n            targetSection: this.state.editComponentName,\r\n        };\r\n\r\n        this.props.eventStreamBuild.emit('EventBuildComponents',{\r\n            componentsPattern: componentsPatternBackground,\r\n            type: componentsPatternBackground.type,\r\n            component: <BackgroundComponent\r\n                            targetSection = {this.props.editComponentName}\r\n                            {...componentsPatternBackground}\r\n                            key = {`bg${id}`}\r\n                            id = {id}\r\n                        />\r\n        });\r\n\r\n        event.stopPropagation();\r\n    }\r\n\r\n    addImage = event => {\r\n        let id = Math.random().toFixed(3);\r\n\r\n        const componentsPatternImage = {\r\n            borderRadius: 0,\r\n            type: 'image',\r\n            size: {w: 30, h: 50},\r\n            opacity: 1,\r\n            rotate: 0,\r\n            zIndex: null,\r\n            image: '/img/photoPattern.svg',\r\n            coords: {x: null, y: null}, // x, y\r\n            id: id,\r\n            targetSection: this.props.editComponentName,\r\n        };\r\n        this.props.eventStreamBuild.emit('EventBuildComponents',{\r\n            componentsPattern: componentsPatternImage,\r\n            type: componentsPatternImage.type,\r\n            component: <Image\r\n                            key = {`image${id}`}\r\n                            sizeParentBox = {this.props.sizeParentBox}\r\n                            id = {id}\r\n                            mode = 'dev'\r\n                            path = {'/img/photoPattern.svg'}\r\n                            {...componentsPatternImage}\r\n                            type = 'image' />\r\n        });\r\n        event.stopPropagation();\r\n    }\r\n\r\n    addMedia = event => {\r\n        let id = Math.random().toFixed(3);\r\n\r\n        const  componentsPatternMedia = {\r\n            type: 'media',\r\n            size: {w: null, h: null},\r\n            content: null,\r\n            coords: {x: null, y: null}, // x, y\r\n            id: id,\r\n            targetSection: this.props.editComponentName,\r\n        };\r\n\r\n        this.props.eventStreamBuild.emit('EventBuildComponents', {\r\n            componentsPattern: componentsPatternMedia,\r\n            type: componentsPatternMedia.type,\r\n            component: <Media\r\n                            key = {`media${id}`}\r\n                            targetSection = {this.props.editComponentName}\r\n                            sizeParentBox = {this.props.sizeParentBox}\r\n                            content = {null}\r\n                            id = {id}\r\n                            path = {'/img/photoPattern.mp4'}\r\n                            {...componentsPatternMedia}\r\n                            type = 'media'\r\n                            mode = 'dev'\r\n                        />\r\n        });\r\n        event.stopPropagation();\r\n    }\r\n\r\n    addInput = event => {\r\n        let id = Math.random().toFixed(3);\r\n\r\n        const  componentsPatternInput = {\r\n            type: 'input',\r\n            size: {w: null, h: null},\r\n            typeInput: 'button',\r\n            color: null,\r\n            fontSize: null,\r\n            borderRadius: null,\r\n            content: null,\r\n            coords: {x: null, y: null}, // x, y\r\n            id: id,\r\n            targetSection: this.props.editComponentName,\r\n        };\r\n\r\n        this.props.eventStreamBuild.emit('EventBuildComponents', {\r\n            componentsPattern: componentsPatternInput,\r\n            type: componentsPatternInput.type,\r\n            component: <Input\r\n                            key = {`input${id}`}\r\n                            targetSection = {this.props.editComponentName}\r\n                            sizeParentBox = {this.props.sizeParentBox}\r\n                            id = {id}\r\n                            inputType = 'button'\r\n                            {...componentsPatternInput}\r\n                            type = 'input'\r\n                            mode = 'dev'\r\n                        />\r\n        });\r\n        event.stopPropagation();\r\n    }\r\n\r\n    addSection = event => {\r\n        let id = Math.random().toFixed(3);\r\n\r\n        const componentsPatternBackground = {\r\n            backgroundColor: null,\r\n            backgroundImage: null,\r\n            targetSection: `Section${id}`,\r\n            id: `Section${id}`,\r\n            type: 'background',\r\n        };\r\n        this.props.eventStreamBuild.emit('EventNewSection', {\r\n            componentsPattern: componentsPatternBackground,\r\n            component: <BackgroundComponent\r\n                            {...componentsPatternBackground}\r\n                            key = {`bg${id}`}\r\n                            id = {id}\r\n                            targetSection = {`Section${id}`}\r\n                            width = '100%'\r\n                            height = '800px'\r\n                            type = 'background'\r\n                            mode = 'dev'\r\n                        />\r\n        });\r\n        event.stopPropagation();\r\n    }\r\n\r\n    render(){\r\n\r\n        if (this.state.mode === 'build'){\r\n            return (\r\n                <div className = 'ComponentsMenu'>\r\n                    <button \r\n                        onClick = {this.addImage} \r\n                        className = 'ImageTool CompoentnsMenu_button' \r\n                    >\r\n                        <span>Image</span>\r\n                    </button>\r\n                    <button \r\n                        onClick = {this.addText} \r\n                        className = 'TextTool CompoentnsMenu_button' >\r\n                        <span>Text</span>\r\n                    </button>\r\n                    <button\r\n                        onClick = {this.addInput}\r\n                        disabled = {this.props.editComponentName !== 'Header' ? false : true}\r\n                        className = 'ButtonTool CompoentnsMenu_button' >\r\n                        <span>Button</span>\r\n                    </button>\r\n                    <button onClick = {this.addMedia}\r\n                        className = 'VideoTool CompoentnsMenu_button'\r\n                    >\r\n                        <span>Video</span>\r\n                    </button>\r\n                </div>\r\n            )\r\n        } else if (this.state.mode === 'section') {\r\n            return (\r\n                <div className = 'sectionMode'>\r\n                    <button\r\n                        onClick = {this.addSection}\r\n                        className = 'newSectionTool CompoentnsMenu_button'\r\n                    >\r\n                        <span>New section</span>\r\n                    </button>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default BuildMenu;","import React,{Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Icon from '../Icon/icon';\r\nimport BuildMenu from '../componentsBuildMenu/BuildMenu';\r\n\r\nimport './controllers.scss';\r\n\r\nclass Controllers extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        countComponents: PropTypes.number.isRequired, /** @number last project id */\r\n        sizeParentBox: PropTypes.object, /** @Object with width and height parent(bg) */\r\n        eventStreamBuild: PropTypes.object, /** @Events stream */\r\n        menuActive: PropTypes.bool, /** @Bool value active menu or unactive */\r\n    }\r\n\r\n    state = {\r\n        viewComponentMenu: false,\r\n        editComponentName: this.props.editComponentName,\r\n        shiftX: 0,\r\n        shiftY: 0,\r\n        coordsX: '50%',\r\n        coordsY: '0',\r\n        shadowDisplay: 'block'\r\n    }\r\n\r\n    componentMenu = event => {\r\n        this.setState({viewComponentMenu: this.state.viewComponentMenu ? false : true});\r\n        event.stopPropagation();\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <Fragment>\r\n            {\r\n                <div\r\n                ref = {this.refControll}\r\n                className = 'ControllersEditComponent'\r\n                >\r\n                    <Icon\r\n                        onClick = {this.componentMenu}\r\n                        className = 'ControllersEditComponent__addButton'\r\n                        path = '/img/addButton.png'\r\n                    />\r\n                    { this.state.viewComponentMenu ?\r\n                        <BuildMenu\r\n                            key = {`buildMenu ${this.state.editComponentName}`}\r\n                            mode = 'build'\r\n                            eventStreamBuild = {this.props.eventStreamBuild}\r\n                            editComponentName = {this.state.editComponentName}\r\n                            sizeParentBox = {this.props.sizeParentBox}\r\n                            countComponents = {this.props.countComponents}\r\n                        /> : null\r\n                    }\r\n                </div>\r\n            }\r\n            </Fragment>\r\n        )\r\n    }\r\n\r\n    componentDidUpdate = () => {\r\n        if (this.props.editComponentName !== this.state.editComponentName)\r\n            this.setState({\r\n                ...this.state,\r\n                editComponentName: this.props.editComponentName\r\n            })\r\n    }\r\n\r\n}\r\n\r\nexport default Controllers;","import React,{Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport Reveal from 'react-reveal/Reveal';\r\n/* ------- Events streams ------- */\r\nimport eventEmitter from '../../EventEmitter'; // common\r\nimport EventBuild from 'events'; // for builder controllers\r\n/* ------- For load project and exit from project ------- */\r\nimport {loadCurrentProjectAction, exitProjectAction} from '../../redux/actions';\r\n/* ------- Moddlewares ------- */\r\nimport {middlewareDeleteProjectComponent} from '../../redux/middleware/middlewareDelete';\r\nimport updateMiddleware from '../../redux/middleware/updateMiddleware';\r\n/* ------- HOC for het firebase controll object ------- */\r\nimport withScroll from '../../components/withScroll';\r\nimport withFirebase from '../../components/withFirebase';\r\n/* ------- Child components ------- */\r\nimport AdditionalTools from '../../components/additionalTools/additionalTools';\r\nimport builderHOC from '../../components/builderHOC';\r\nimport Controllers from '../../components/controllers/controllers';\r\nimport Loader from '../../components/loading/Loader';\r\nimport Header from '../../components/header/Header';\r\nimport Section from '../../components/buildComponents/section';\r\nimport BuildMenu from '../../components/componentsBuildMenu/BuildMenu';\r\n\r\nimport './build.scss';\r\n\r\nclass Build extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        firebase: PropTypes.object.isRequired, /** @firebase class for use firebase functions */\r\n        active: PropTypes.bool, /** @active - status firebase auth */\r\n        dispatch: PropTypes.func.isRequired, /** @dispatch - redux */\r\n        history: PropTypes.object, /** @Router HTML5 history */\r\n        location: PropTypes.object, /** @Router */\r\n        match: PropTypes.object.isRequired, /** @Router */\r\n        userData: PropTypes.object.isRequired, /** @UserData data about projects,user and current edit prject */\r\n    }\r\n\r\n    state = {\r\n            idProject: parseInt(this.props.match.params.param), /** @Id project */\r\n            editStart: false, /** @Bool start edit or no */\r\n            isChange: false, /** @Bool detected changes */\r\n            isLoadComponents: true, /** @Bool load all necessary components  */\r\n            projectEmpty: false, /** @Bool detected project undefiend */\r\n            componentJSX: [], /** @Array with JSX */\r\n            editComponentName:  null, /** @String | @null name current edit component */\r\n            menuActive: false, /** @bool active menu or no */\r\n            sizeParentBox: null, /** @Object size store */\r\n        }\r\n\r\n        eventEmitterBuild = new EventBuild(); // events stream for controllers\r\n        timer = null; // save timer\r\n\r\n    workModeEdit = itemEvent => {\r\n        /* set edit mode */\r\n        if (itemEvent.editStart)\r\n        this.setState({\r\n            ...this.state,\r\n            editStart: itemEvent.editStart,\r\n            editComponentName: itemEvent.targetSection,\r\n            menuActive: true,\r\n        });\r\n    }\r\n\r\n    deleteComponent = eventItem => {\r\n        /* delete component from DB and from JSX array */\r\n        let {currentProjectsData} = this.props.userData;\r\n        let {componentJSX} = this.state;\r\n\r\n        const data = {\r\n            id: this.state.idProject,\r\n            uid: this.props.userData.idUser,\r\n            idComponent: eventItem.id,\r\n            sectionsProject: [...currentProjectsData.sectionsProject],\r\n            type: eventItem.type\r\n        }\r\n\r\n        this.props.dispatch(middlewareDeleteProjectComponent(data))\r\n        .then(id => {\r\n            if (id !== null){\r\n               const _componentJSX = componentJSX.filter(item => item.id !== id);\r\n            this.setState({\r\n                ...this.state,\r\n                componentJSX: _componentJSX\r\n            });\r\n        }\r\n        });\r\n    }\r\n\r\n    addComponentsFromBD = (array, sizeParentBox) => {\r\n        /* build JSX components from DB */\r\n        if (!sizeParentBox) sizeParentBox = this.state.sizeParentBox;\r\n        let {componentJSX} = this.state;\r\n        let componentsFromDB = [];\r\n\r\n        array.forEach(item => {\r\n            if (item.type !== 'background'){\r\n                const itemHash = {\r\n                    props: {\r\n                        ...item,\r\n                        sizeParentBox,\r\n                        mode: 'dev',\r\n                    },\r\n                    type: item.type,\r\n                    id: item.id,\r\n                }\r\n                const patternJSX = {\r\n                    id: item.id,\r\n                    targetSection: item.targetSection,\r\n                    component: builderHOC(itemHash)(Fragment)\r\n                };\r\n                componentsFromDB.push(patternJSX);\r\n            }\r\n        });\r\n            this.setState({\r\n                ...this.state,\r\n                isLoadComponents: false,\r\n                sizeParentBox: {...sizeParentBox},\r\n                componentJSX: [...componentJSX, ...componentsFromDB],\r\n            });\r\n    };\r\n\r\n    addComponent = itemEvent => {\r\n         /* create new component */\r\n        let {componentJSX} = this.state;\r\n        let {componentsPattern} = itemEvent;\r\n\r\n        const patternJSX = {\r\n            id: componentsPattern.id,\r\n            targetSection: componentsPattern.targetSection,\r\n            component: itemEvent.component\r\n        };\r\n            this.setState({\r\n                ...this.state,\r\n                componentJSX: [...componentJSX, patternJSX],\r\n            });\r\n    };\r\n\r\n    saveChangesComponent = itemEvent => {\r\n        /* save detected changes in DB and call confirm modal */\r\n        const {ms} = itemEvent;\r\n        if (this.timer) clearTimeout(this.timer);\r\n\r\n        this.timer = setTimeout(() => {\r\n            const {currentProjectsData} = this.props.userData;\r\n            const {userData} = this.props;\r\n            let findCurrentItem = false;\r\n            const _components = currentProjectsData.components.map(item => {\r\n                if (item.id === itemEvent.id) { findCurrentItem = true; return {...itemEvent}; }\r\n                return item;\r\n            });\r\n\r\n            if (!findCurrentItem) _components.push(itemEvent);\r\n\r\n            this.props.dispatch(updateMiddleware({\r\n                uid: userData.idUser,\r\n                projects: [...userData.projects],\r\n                components: _components,\r\n                sectionsProject: [...currentProjectsData.sectionsProject],\r\n                idProject: this.state.idProject\r\n            })).then(() =>\r\n                eventEmitter.emit('EventRedirectConfirm', {false: false, confirm: false}));\r\n        },ms);\r\n    };\r\n\r\n    mainComponent = null;\r\n    mainRefComponent = node => node ?\r\n        this.mainComponent = {data: node.getBoundingClientRect(), node: node} : node;\r\n\r\n    addNewSection = eventItem => {\r\n    /* create new project section */\r\n        const {userData} = this.props;\r\n        const {currentProjectsData} = userData;\r\n\r\n        this.props.dispatch(updateMiddleware({\r\n                uid: userData.idUser,\r\n                projects: [...userData.projects],\r\n                components: [...currentProjectsData.components,\r\n                            eventItem.componentsPattern],\r\n                sectionsProject: [\r\n                    ...currentProjectsData.sectionsProject,\r\n                    eventItem.componentsPattern.id\r\n                ],\r\n                idProject: this.state.idProject\r\n        })).then(() => {\r\n            this.setState({\r\n                ...this.state,\r\n                componentJSX:[\r\n                    ...this.state.componentJSX,\r\n                    eventItem.component\r\n                ]\r\n            }, () => {\r\n                eventEmitter.emit('EventSetState', currentProjectsData.sectionsProject.length);\r\n            });\r\n        });\r\n}\r\n\r\n    render(){\r\n\r\n        if (this.state.projectEmpty) return <Redirect to = '/Cabinet' />\r\n        \r\n        const {userData} = this.props;\r\n        const {currentProjectsData} = userData;\r\n        const section = currentProjectsData.sectionsProject;\r\n\r\n        if (userData.active && currentProjectsData.loadProject){\r\n            return (\r\n                <Reveal effect=\"fade\">\r\n                    <Header key = 'Header' title = \"Constructor\" idUser = {userData.idUser}  />\r\n                    <div\r\n                        ref = {this.mainRefComponent} \r\n                        onMouseMove = {this.showAddSection} \r\n                        className = 'Build' \r\n                        key = 'Build'\r\n                    >\r\n                        { this.state.editStart &&\r\n                            <Controllers\r\n                                key = 'controllers'\r\n                                eventStreamBuild = {this.eventEmitterBuild}\r\n                                editComponentName = {this.state.editComponentName}\r\n                                countComponents = {currentProjectsData.components.length}\r\n                                menuActive = {this.state.menuActive}\r\n                                sizeParentBox = {this.state.sizeParentBox}\r\n                            />\r\n                        }\r\n                            <BuildMenu\r\n                                key = 'buildMenu'\r\n                                eventStreamBuild = {this.eventEmitterBuild}\r\n                                countSection = {this.state.componentJSX.length * 5}\r\n                                mode = \"section\"\r\n                                className = 'menu'\r\n                            />\r\n                            <AdditionalTools key = 'tools'\r\n                                eventStreamBuild = {this.eventEmitterBuild}\r\n                                eventEmitter = {eventEmitter}\r\n                                editComponentName = {this.state.editComponentName}\r\n                            />\r\n                        {section.length &&\r\n                            <Section mode = 'dev' key = 'section'\r\n                                componentJSX = {this.state.componentJSX}\r\n                                editComponentName = {this.state.editComponentName}\r\n                                menuActive = {this.state.menuActive}\r\n                                sizeParentBox = {this.state.sizeParentBox}\r\n                                userData = {userData}\r\n                            />\r\n                        }\r\n                    </div>\r\n                </Reveal>\r\n            )\r\n        } else if (!this.props.firebase.getCurrentUser()) return <Redirect to = '/' />\r\n        else return <Loader  key = 'Loader' path = '/img/loading.gif' type = 'build' />\r\n    }\r\n\r\n    componentDidUpdate = (prevProps) => {\r\n\r\n        let {userData} = this.props;\r\n        let {currentProjectsData} = userData;\r\n        const isLoadComponents = this.state.isLoadComponents;\r\n        let sizeParentBox = null;\r\n\r\n        if (this.mainComponent && this.state.sizeParentBox === null)\r\n            sizeParentBox = {\r\n                width: this.mainComponent.data.width,\r\n                height: this.mainComponent.data.height,\r\n                top: this.mainComponent.data.top,\r\n                left: this.mainComponent.data.left,\r\n            }\r\n\r\n            console.log(this.mainComponent.data);\r\n\r\n        if (userData.active && !currentProjectsData.loadProject) {\r\n            /** load current project of user session active and load project - false */\r\n            const current =  userData.projects.find(item => /* find current project */\r\n                                                    item.id === this.state.idProject)\r\n            if (current){ /* load data */\r\n                this.props.dispatch(loadCurrentProjectAction({\r\n                    id: current.id,\r\n                    typeProject: current.type,\r\n                    sectionsProject: [...current.sectionsProject],\r\n                    components: [...current.components]\r\n                }))\r\n                /* else redirect */\r\n            } else this.setState({...this.state, projectEmpty: true});\r\n        }\r\n        if (currentProjectsData.loadProject && isLoadComponents) {\r\n             /* if all components load build our JSX */\r\n            if (this.state.sizeParentBox === null && sizeParentBox !== null)\r\n                this.addComponentsFromBD([...currentProjectsData.components], sizeParentBox);\r\n            else this.addComponentsFromBD([...currentProjectsData.components]);\r\n            /** For scroll component */\r\n            eventEmitter.emit('EventSetState',currentProjectsData.sectionsProject.length-1);\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        let {userData} = this.props;\r\n        let {currentProjectsData} = userData;\r\n        /**  If the session is already active, immediately load */\r\n        if (userData.active && !currentProjectsData.loadProject) {\r\n        /** load current project of user session active and load project - false */\r\n            const current =  userData.projects.find(item => item.id === this.state.idProject)\r\n            this.props.dispatch(loadCurrentProjectAction({\r\n                id: current.id,\r\n                sectionsProject: [...current.sectionsProject],\r\n                typeProject: current.type,\r\n                components: [...current.components]\r\n            }));\r\n\r\n            eventEmitter.on('EventModeEdit', this.workModeEdit);\r\n            this.eventEmitterBuild.on('EventBuildComponents', this.addComponent);\r\n            this.eventEmitterBuild.on('EventDeleteComponent', this.deleteComponent);\r\n            this.eventEmitterBuild.on('EventNewSection', this.addNewSection);\r\n            this.eventEmitterBuild.on('EventSaveChangesComponent', this.saveChangesComponent);\r\n        }; /** else redirect */\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n\r\n        let {userData} = this.props;\r\n        if (userData.active){\r\n            this.props.dispatch(exitProjectAction(true));\r\n            eventEmitter.off('EventModeEdit', this.workModeEdit);\r\n            this.eventEmitterBuild.off('EventBuildComponents', this.addComponent);\r\n            this.eventEmitterBuild.off('EventDeleteComponent', this.deleteComponent);\r\n            this.eventEmitterBuild.off('EventNewSection', this.addNewSection);\r\n            this.eventEmitterBuild.off('EventSaveChangesComponent', this.saveChangesComponent);\r\n        }\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        userData: {\r\n            active: state.cabinet.active,\r\n            idUser: state.cabinet.idUser,\r\n            projects: [...state.cabinet.projects],\r\n           currentProjectsData: {...state.builder}\r\n        },\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(withFirebase(withScroll(Build)));\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport {Route, Switch} from 'react-router-dom';\r\n\r\nimport {middlewareLoadUserData} from './redux/middleware/loadUserMiddleware';\r\nimport {connect} from 'react-redux';\r\nimport withFirebase from './components/withFirebase';\r\nimport Loader from './components/loading/Loader';\r\n\r\nimport Index from './Pages/Index/Index';\r\nimport Cabinet from './Pages/Cabinet/Cabinet';\r\nimport Production from './Pages/Production/Production';\r\nimport About from './Pages/About/About';\r\nimport Build from './Pages/Build/Build';\r\nimport ErrorPage from './components/ErrorCatch/ErrorPage';\r\nimport './root.scss';\r\n\r\nclass App extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        config: PropTypes.object.isRequired, /** @Config app */\r\n        firebase: PropTypes.object.isRequired, /** @firebase class for use firebase functions */\r\n        dispatch: PropTypes.func.isRequired, /** @dispatch - redux */\r\n    }\r\n\r\n    state = {\r\n        firebase: this.props.firebase,\r\n        firebaseLoadState: false,\r\n        config: this.props.config,\r\n    }\r\n\r\n    componentDidMount(){\r\n\r\n        this.props.firebase.auth.onAuthStateChanged((user) => {\r\n            if (!this.state.firebaseLoadState){\r\n                if (user) this.props.dispatch(middlewareLoadUserData(user.uid))\r\n                .then((res) =>  {\r\n                    this.setState({...this.state, firebaseLoadState: res});\r\n                });\r\n                else  this.setState({...this.state, firebaseLoadState: true});\r\n            }\r\n        });\r\n    }\r\n\r\n    render(){\r\n        if (this.state.firebaseLoadState){\r\n            return (\r\n                <Switch>\r\n                        <Route\r\n                            path = {'/'} exact\r\n                            render = {(props) => <Index {...props} config = {this.state.config} />}\r\n                        />\r\n                        <Route \r\n                            path = '/Cabinet/' exact \r\n                            render = {(props) => <Cabinet {...props} config = {this.state.config} />}\r\n                        />\r\n                        <Route\r\n                            path = {'/Cabinet/About'}\r\n                            render = {(props) => <About {...props} config = {this.state.config} />}\r\n                        />\r\n                        <Route path = {'/Cabinet/Build/:param'} exact\r\n                            render = {(props) => <Build {...props} />}\r\n                        />\r\n                        <Route path = {'/Cabinet/Build/:param/Production'} exact component = {Production} />\r\n                        <Route path = {'*'} component = {Index} />\r\n                        <Route path = {'/crashPage'} component = {ErrorPage} />\r\n                </Switch>\r\n\r\n            )\r\n        } else return <Loader path = { '/img/loading.gif'} type = 'application' />\r\n    }\r\n}\r\n\r\nexport default connect()(withFirebase(App));","\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\n\nimport firebase from './Firebase/Firebase';\nimport ErrorBoundary from './components/ErrorCatch/ErrorBoundary';\nimport {HashRouter } from 'react-router-dom';\nimport {Provider} from 'react-redux';\nimport store from './redux/store';\nimport App from './App.jsx';\nimport 'normalize.css';\n\nimport firebaseContext from './Firebase/firebaseContext';\n\nfirebase.saveSession('SESSION');\nconst config = require('./config.json');\nconsole.time();\nReactDOM.render(\n        <HashRouter>\n            <ErrorBoundary>\n                <firebaseContext.Provider value = {firebase}>\n                    <Provider store = {store}>\n                        <App config = {config} />\n                    </Provider>\n                </firebaseContext.Provider>\n            </ErrorBoundary>\n        </HashRouter>,\n        document.getElementById('root')\n);\n\n\nserviceWorker.register();\n\n"],"sourceRoot":""}