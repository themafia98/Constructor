{"version":3,"sources":["serviceWorker.js","Firebase/firebaseConfig.js","Firebase/Firebase.js","EventEmitter.js","components/ErrorCatch/ErrorPage.jsx","components/ErrorCatch/ErrorBoundary.jsx","redux/actions.js","redux/reducerBuilder.js","redux/reducerCabinet.js","redux/reducers.js","redux/store.js","redux/middleware/loadUserMiddleware.js","Firebase/firebaseContext.js","components/withFirebase.jsx","components/loading/Loader.jsx","components/AnimationText/AnimationTitle.jsx","components/Registration/Registration.jsx","components/Icon/icon.jsx","Pages/Index/Index.jsx","redux/middleware/middlewareDelete.js","components/confirmBox/Confirm.jsx","components/header/Header.jsx","components/imageViewer/imageItem.jsx","components/modalWindow/createProject/createProject.jsx","components/modalWindow/Search/searchModal.jsx","components/modalWindow/ModalWindow.jsx","redux/middleware/createProjectMiddleware.js","components/List/Item.jsx","components/List/List.jsx","components/ProjectsSection/ProjectsSection.jsx","Pages/Cabinet/Cabinet.jsx","components/buildComponents/components/Background.jsx","components/buildComponents/MainBackground/MainBackground.jsx","components/buildComponents/section.jsx","components/buildComponents/components/Input.jsx","components/buildComponents/components/Media.jsx","components/buildComponents/components/Image.jsx","components/buildComponents/components/Text.jsx","components/builderHOC.jsx","Pages/Production/Production.jsx","Pages/About/About.jsx","redux/middleware/updateMiddleware.js","components/withScroll.jsx","components/imageViewer/Viewer.jsx","components/instrumentsPanel/InputTools/InputInstruments.jsx","components/instrumentsPanel/MediaTools/MediaInstruments.jsx","components/instrumentsPanel/ImageTools/ImageInstruments.jsx","components/instrumentsPanel/BackgroundTools/BackgroundInstruments.jsx","components/instrumentsPanel/TextTools/TextInstruments.jsx","components/instrumentsPanel/InstrumentsPanel.jsx","components/additionalTools/additionalTools.jsx","components/componentsBuildMenu/BuildMenu.jsx","components/controllers/controllers.jsx","Pages/Build/Build.jsx","App.jsx","index.js"],"names":["Boolean","window","location","hostname","match","firebaseConfig","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firebaseInterface","require","Firebase","Object","classCallCheck","this","firebase","auth","db","config","lowConnection","enablePersistence","catch","err","code","console","error","rules","setPersistence","Auth","Persistence","email","password","signInWithEmailAndPassword","createUserWithEmailAndPassword","signOut","currentUser","saveSession","session","stream","EventEmitter","controllerStream","ErrorPage","state","redirect","update","event","_this","setState","eventEmitter","emit","react_default","a","createElement","react_router","to","class","className","onClick","React","Component","ErrorBoundary","hasError","updateApplication","componentDidMount","on","componentWillUnmount","off","info","ErrorCatch_ErrorPage","props","children","log","PureComponent","exitProjectAction","type","exit","loadCurrentProjectAction","id","typeProject","sectionsProject","components","loadUpdateCurrentProject","idProject","toConsumableArray","loadUserAction","active","idUser","uid","projects","errorAction","initialState","loadProject","combineReducers","builder","arguments","length","undefined","action","objectSpread","cabinet","map","item","middleware","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","thunk","withExtraArgument","store","createStore","middlewareLogin","_ref2","asyncToGenerator","regenerator_default","mark","_callee","dispatch","getState","_ref","isLogin","wrap","_context","prev","next","login","then","response","collection","doc","user","get","docUser","data","message","abrupt","stop","_x","_x2","_x3","apply","middlewareLogOutUser","_ref6","_callee3","_ref5","_context3","_x7","_x8","_x9","firebaseContext","createContext","withFirebase","Firebase_firebaseContext","Consumer","assign","loading_Loader","_useState","useState","path","slicedToArray","_useState3","mode","concat","src","alt","AnimationTitle","styled","h3","_templateObject","dir","AnimationText","tilteContent","content","split","currentTitle","positionTitle","directionAnimation","msAnimation","msTimeout","msPauseEnd","_isMounted","timerAnimation","animationTitle","timer","self","assertThisInitialized","setTimeout","tick","counter","word","_title","slice","e","clearTimeout","data-titlebuild","emailRef","passwordRef","setRefEmail","node","setRefPassword","createUser","value","registration","Error","set","indexStream","autoComplete","placeholder","ref","Icon","_useState5","draggable","title","Index","Events","tryAuth","registrationActive","regStatus","wrongEnter","emailImput","passwordImput","statusRegistration","additionalUserInfo","isNewUser","showBox","stopPropagation","authTo","res","componentDidUpdate","AnimationText_AnimationTitle","Icon_icon","TransitionGroup","component","CSSTransition","timeout","unmountOnExit","classNames","components_Registration_Registration","connect","middlewareDeleteProjectComponent","_ref4","_callee2","_ref3","_context2","findProject","find","project","filter","idComponent","dataUpdate","_x4","_x5","_x6","middlewareDelete","itemdb","Confirm","cbSaveChanges","cbCancelSave","iconPath","CabinetIcon","Header","isChange","redirectConfirm","redirectAbout","redirectA","redirectCabinet","redirectC","confirm","false","confirmSaveDetectChanges","logOut","pathname","add","cabinetStream","componentDidlMount","_this2","Fragment","components_confirmBox_Confirm","withRouter","ImageItem","selected","urls","regular","urlRegular","full","urlFull","_useState7","isFull","_useState9","urlContent","url","iframe","CreateProject","disabled","validateName","name","validateType","typeClassName","nameLength","isNumber","warningLengthMin","warningLengthMax","warningNumber","onChange","cbValidateName","warningType","cbSelectOption","cbAddNewProject","cbCancel","loading","SearchModal","modalSearchMode","items","images","search","refSearch","cbSearch","refSearchFunc","prevProps","prevState","contentPrev","haveUpdate","isSelected","selectedItem","_items","cbMakeImageResultBox","dissabled","menuActive","cbShowImage","cbSetSelectedImage","polyfill","ModalWindow","workMode","buttonSearchDisabled","showUrl","imageBoxView","newProject","imageMenuActive","warning","lengthMax","lengthMin","inputSearch","inputSelect","searchData","api","isFetch","ok","json","results","searchYouTubeAPI","RAITE","KEY","status","arrayItems","forEach","push","snippet","thumbnails","high","videoId","showMenuImage","showImage","_this$state$images","eventStreamBuild","target","setSelectedImage","makeImageResultBox","i","imageItem","key","addNewProject","selectOption","inputs","defineProperty","test","cancel","refSelect","createProject","searchModal","loader","react","middlewareCreateProject","list","lastProject","lastIndex","header","backgroundImage","backgroundColor","min","Math","floor","random","targetSection","productionPath","_useState6","canBuild","setCanBuild","_useState8","canProd","setCanProd","_useState11","_useState13","data-id","List","makeList","List_Item","ProjectsSection","components_List_List","Cabinet","modalActive","deletItem","getCurrentUser","changeWorkMode","header_Header","in","appear","modalWindow_ModalWindow","components_ProjectsSection_ProjectsSection","Background","div","Background_templateObject","width","height","BackgroundComponent","background","color","boxComponent","boxComponentRef","saveDataParent","boxInform","getBoundingClientRect","countSection","sectionNumber","size","openBgInstruments","componentsPatternBackground","componentStats","changeColor","eventItem","colorRGB","setBackgroundImage","onDoubleClick","data-name","MainBackground","editRedy","changeMode","editStart","editComponentName","refSection","refSectionFunc","currentProjectsData","componentJSX","needUpdate","countComponents","data-class","components_Background","Section","userData","buildComponents_MainBackground_MainBackground","sizeParentBox","section","componentsProdJSX","InputComponent","input","attrs","style","zIndex","indexZ","left","coordX","top","coordY","Input_templateObject","w","h","fontSize","borderRadius","ProductionStyle","_templateObject2","Input","istrumentsActive","getSizeBool","typeInput","shiftCoords","posInput","coords","x","y","startDragNdrop","openInputInstruments","componentsPatternImage","sizeTextValue","saveCoords","nativeEvent","which","element","refInput","cords","right","bottom","clientX","clientY","changeSize","eventSize","changeSizeText","setBorderRadius","radius","borderDown","changeContent","checkPivotPosition","borderRight","move","moveInput","num","xItem","yItem","convertToPercentX","convertToPercentY","toFixed","stopDragNdrop","saveSize","setWidth","setType","setHeight","refInputComponent","onMouseDown","onMouseMove","onMouseLeave","onMouseUp","onDragStart","data-imagecomponentwrapper","WrapperMedia","display","justifyContent","alignItems","padding","Media_templateObject","Media","Media_templateObject2","_templateObject3","MediaComponent","posMedia","drawContent","openMediaInstruments","componentsPatternMedia","refMedia","moveMedia","setContent","refMediaComponent","allowfullscreen","Media_ProductionStyle","WrapperImg","transform","rotate","scale","transition","Image_templateObject","ImageStyle","img","Image_templateObject2","opacity","Image_templateObject3","Image","transformValue","scaleValue","image","posImage","openImageInstruments","refImage","rotateEvent","angle","scaleEvent","moveText","factorCoord","diffAngle","parseInt","xFacotr","yFactor","powHeight","pow","powWidth","pythagoras","sqrt","_angle","atan","_biasFactor","biasFactor","PI","sinX","sin","sinY","setCurrentImage","changeSizeImage","setOpacity","stopDrag","preventDefault","refImageComponent","data-imagecomponent","Image_ProductionStyle","crossOrigin","WrapperText","Text_templateObject","textColor","TextStyle","p","Text_templateObject2","font","Text_templateObject3","TextComponent","resizeStream","isHaveSize","parent","colorText","sizeText","position","contentText","openTitleInstruments","componentsPatternText","changeColorText","changeContentText","eventContent","refText","resizeStart","classList","setFont","sectionNum","refTextComponent","data-textcomponent","Text_ProductionStyle","builderHOC","Production","params","param","projectEmpty","isLoadComponents","makeProduction","array","_components","itemHash","patternJSX","prodRef","mainProductionRef","current","buildComponents_section","About","about","developer","year","updateMiddleware","newProjects","JSON","parse","stringify","withScroll","_React$PureComponent","ScrollMove","_getPrototypeOf2","_len","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","scrollConfig","duration","delay","smooth","offset","positionCount","setStates","blockMove","moveLocation","count","moveDown","deltaY","moveUp","close","scroller","scrollTo","scroll","scrollToTop","inherits","createClass","dist_default","except","ie","onWheel","onTouchStart","Viewer","frameBorder","allow","allowFullScreen","InputInstruments","colorPickerActive","instrumentPanel","_content","cbSetColor","lib","onChangeComplete","cbHandleChangeComplete","cbSetWidth","max","cbSetHeight","cbSetSize","cbSetBorderRadius","cbSetType","cbSetContent","maxLength","cbDelete","MediaInstruments","ImageInstruments","fileRef","createRef","cbRotate","cbScale","step","cbSetOpacity","cbLoadFile","accept","BackgroundInstruments","TextInstruments","cbSetFont","InstrumentsPanel","closePanel","setSize","fontName","setIframeContent","contentValue","updatePosition","setColor","updateBimageStats","handleChangeComplete","rgb","r","g","b","redirectSaveChanges","ms","saveChanges","deleteComponent","loadFile","files","reader","FileReader","readAsDataURL","onload","result","onerror","makePanelInstruments","TextTools_TextInstruments","BackgroundTools_BackgroundInstruments","ImageTools_ImageInstruments","MediaTools_MediaInstruments","InputTools_InputInstruments","oldProps","oldState","instrumentActive","AdditionalTools","modal","modalSearch","modalViewer","modalSearchOn","itemEvent","ViewerSwitch","openInstrument","imageViewer_Viewer","instrumentsPanel_InstrumentsPanel","BuildMenu","addText","componentsPattern","Text","addBackground","addImage","components_Image","addMedia","components_Media","addInput","componentsPatternInput","components_Input","inputType","addSection","Controllers","viewComponentMenu","shiftX","shiftY","coordsX","coordsY","shadowDisplay","componentMenu","refControll","componentsBuildMenu_BuildMenu","Build","eventEmitterBuild","EventBuild","workModeEdit","_componentJSX","addComponentsFromBD","componentsFromDB","addComponent","saveChangesComponent","findCurrentItem","mainComponent","mainRefComponent","addNewSection","showAddSection","controllers_controllers","additionalTools","App","firebaseLoadState","onAuthStateChanged","isError","_this3","exact","render","Pages_Index_Index","Pages_Cabinet_Cabinet","Pages_About_About","Pages_Build_Build","smoothscroll","ReactDOM","react_router_dom","ErrorCatch_ErrorBoundary","Provider","es","src_App","document","getElementById","navigator","serviceWorker","ready","unregister"],"mappings":"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","file":"static/js/main.70524dbe.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log('This web app is being served cache-first by a service worker.');\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","// setings in root folder .env\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n    databaseURL: process.env.REACT_APP_DATABASE_URL,\r\n    projectId: process.env.REACT_APP_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n    appId: process.env.REACT_APP_APPID\r\n};\r\n\r\nexport default firebaseConfig;","import * as firebase from 'firebase/app';\r\nimport firebaseConfig from './firebaseConfig';\r\nimport config from '../config.json';\r\nconst auth = require('firebase/auth');\r\nconst firestore = require('firebase/firestore');\r\n\r\nclass Firebase {\r\n\r\n    constructor(firebaseConfig){\r\n        /** Init firebase */\r\n\r\n        firebase.initializeApp(firebaseConfig);\r\n        this.auth = firebase.auth();\r\n        this.db = firebase.firestore();\r\n\r\n        if (config.firebase.lowConnection === 'true'){\r\n        this.db.enablePersistence() /** if user use low internet connection */\r\n            .catch(function(err) {\r\n                if (err.code === 'failed-precondition') {\r\n                    console.error('failed-precondition: Multiple tabs open,' +\r\n                                'persistence can only be enabled in one tab at a a time.');\r\n                } else if (err.code === 'unimplemented') {\r\n                    console.error('failed-precondition: The current browser does not support');\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    saveSession(rules){\r\n        /** Set forebase type session */\r\n        return this.auth.setPersistence(firebase.auth.Auth.Persistence[rules]);\r\n    }\r\n\r\n    login(email, password){\r\n        /** login firebase */\r\n        try {\r\n            return this.auth.signInWithEmailAndPassword(email, password);\r\n        } catch (error) {\r\n            console.error(error);\r\n            return null;\r\n        }\r\n    }\r\n\r\n    registration(email, password){\r\n        /** create new user */\r\n        return this.auth.createUserWithEmailAndPassword(email, password)\r\n    }\r\n\r\n    signOut(){\r\n        /** destroy session */\r\n        return this.auth.signOut()\r\n    }\r\n\r\n    getCurrentUser() {\r\n        /** get current user */\r\n        return this.auth.currentUser\r\n    }\r\n}\r\nlet firebaseInterface = new Firebase(firebaseConfig);\r\nfirebaseInterface.saveSession(config.firebase.session);\r\n\r\nexport default firebaseInterface;\r\nexport { auth, firestore };\r\n\r\n","import {EventEmitter} from 'events';\r\n\r\nconst stream = new EventEmitter(); /** @Events head event stream */\r\nconst controllerStream = new EventEmitter(); /** @Events for controllers */\r\n\r\nexport {controllerStream};\r\nexport default stream;\r\n","import React from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\nimport eventEmitter from '../../EventEmitter';\r\n\r\nimport './errorPage.scss';\r\n\r\n\r\nclass ErrorPage extends React.Component {\r\n\r\n    state = {\r\n        redirect: false,\r\n    }\r\n\r\n    update = event => {\r\n       this.setState({redirect: true},\r\n        () => eventEmitter.emit('EventErrorCatchUpdate'));\r\n    }\r\n\r\n    render(){\r\n        if (this.state.redirect) return <Redirect to = '/' />\r\n        return (\r\n        <div class = 'container'>\r\n            <div class = 'flex-column ErrorPage'>\r\n                <h1>Application crash</h1>\r\n                <button className = 'ErrorPage__button_updateApp' onClick = {this.update}>Update</button>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ErrorPage;","\r\nimport React from 'react';\r\nimport eventEmitter from '../../EventEmitter';\r\nimport ErrorPage from './ErrorPage';\r\n\r\nclass ErrorBoundary extends React.PureComponent {\r\n\r\n      state = { \r\n        hasError: false,\r\n      };\r\n\r\n    static getDerivedStateFromError(error) {\r\n        console.log(error);\r\n      // Обновить состояние с тем, чтобы следующий рендер показал запасной UI.\r\n      return { hasError: true};\r\n    }\r\n\r\n    updateApplication = event => {\r\n      this.setState({hasError: false});\r\n    };\r\n  \r\n    componentDidCatch(error, info) {\r\n      // Можно также сохранить информацию об ошибке в соответствующую службу журнала ошибок\r\n     console.error(error + \",\" + info);\r\n    }\r\n  \r\n    render() {\r\n      if (this.state.hasError) return <ErrorPage />\r\n      return this.props.children;\r\n    }\r\n\r\n    componentDidMount = () => {\r\n      eventEmitter.on('EventErrorCatchUpdate',this.updateApplication);\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n      eventEmitter.off('EventErrorCatchUpdate',this.updateApplication);\r\n    }\r\n  }\r\n\r\n  export default ErrorBoundary;","const CREATE_PROJECT = 'CREATE_PROJECT';\r\nconst LOAD_UPDATE_PROJECT = \"LOAD_UPDATE_PROJECT\";\r\nconst LOAD_CURRENT = 'LOAD_CURRENT';\r\nconst LOG_OUT_CABINET = 'LOG_OUT_CABINET';\r\nconst LOAD_USER_CABINET = 'LOAD_USER_CABINET';\r\nconst ERROR_CABINET = 'ERROR_CABINET';\r\nconst EXIT_PROJECT = 'EXIT_PROJECT';\r\n\r\nconst createProjectAction = (state) => {\r\n    /** action for create project */\r\n    return {\r\n        type: CREATE_PROJECT,\r\n        projects: state,\r\n    }\r\n}\r\n\r\nconst exitProjectAction = (state) => {\r\n       /** action for exit from editable or prod project */\r\n    return {\r\n        type: EXIT_PROJECT,\r\n        exit: state\r\n    }\r\n}\r\n\r\nconst loadCurrentProjectAction = (state) => {\r\n    /** action for load current editable or prod project */\r\n    return {\r\n        type: LOAD_CURRENT,\r\n        id: state.id,\r\n        typeProject: state.typeProject,\r\n        sectionsProject: state.sectionsProject,\r\n        components: state.components\r\n    }\r\n}\r\n\r\nconst loadUpdateCurrentProject = (state) => {\r\n    /** action for update editable project */\r\n    return {\r\n        type: LOAD_UPDATE_PROJECT,\r\n        idProject: state.idProject,\r\n        sectionsProject: [...state.sectionsProject],\r\n        components: [...state.components]\r\n    }\r\n}\r\n\r\nconst loadUserAction = (state) => {\r\n    /** action for load user data */\r\n    return {\r\n        type: LOAD_USER_CABINET,\r\n        active: true,\r\n        idUser: state.uid,\r\n        error: '',\r\n        projects: state.projects\r\n    }\r\n}\r\n\r\nconst logOutAction = (state) => {\r\n    /** action for clear session */\r\n    return {\r\n        type: LOG_OUT_CABINET,\r\n        active: false,\r\n        idUser: null,\r\n        error: '',\r\n        projects: []\r\n    }\r\n}\r\n\r\nconst errorAction = (state) => {\r\n    /** action catch errors */\r\n    return {\r\n        type: ERROR_CABINET,\r\n        error: state\r\n    }\r\n}\r\n\r\nexport {\r\n    CREATE_PROJECT, createProjectAction, /* cabinet */\r\n    LOAD_USER_CABINET, loadUserAction, /* cabinet */\r\n    LOG_OUT_CABINET, logOutAction, /* cabinet */\r\n    LOAD_CURRENT, loadCurrentProjectAction, /* builder */\r\n    LOAD_UPDATE_PROJECT, loadUpdateCurrentProject,\r\n    EXIT_PROJECT, exitProjectAction,\r\n    ERROR_CABINET, errorAction, /* both */\r\n}","import {LOAD_CURRENT,LOAD_UPDATE_PROJECT, EXIT_PROJECT} from './actions';\r\n\r\nconst initialState = { /** @Builder reducer for build mode */\r\n    loadProject: false,\r\n    idProject: null,\r\n    typeProject: null,\r\n    components: [],\r\n    sectionsProject: [],\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n    switch (action.type){\r\n\r\n        case LOAD_CURRENT: {\r\n            /** load data */\r\n            return {\r\n                ...state,\r\n                loadProject: true,\r\n                idProject: action.id,\r\n                typeProject: action.typeProject,\r\n                components: [...action.components],\r\n                sectionsProject: [...action.sectionsProject]\r\n            }\r\n        }\r\n\r\n        case LOAD_UPDATE_PROJECT: {\r\n             /** load update for project */\r\n            return {\r\n                ...state,\r\n                components: [...action.components],\r\n                sectionsProject: [...action.sectionsProject]\r\n            }\r\n        }\r\n\r\n        case EXIT_PROJECT: {\r\n             /** if user exit from edit mode */\r\n            if (action.exit)\r\n            return {\r\n                ...state,\r\n                loadProject: false,\r\n                idProject: null,\r\n                typeProject: null,\r\n                components: []\r\n            }\r\n            else return state;\r\n        }\r\n        default: return state;\r\n    }\r\n};","import {    LOAD_USER_CABINET, LOG_OUT_CABINET,\r\n            ERROR_CABINET, CREATE_PROJECT,\r\n            LOAD_UPDATE_PROJECT\r\n        } from './actions';\r\n\r\nconst initialState = { /** Cabinet reducer (root) */\r\n    active: false,\r\n    idUser: null,\r\n    projects: [],\r\n    error: null,\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case LOAD_USER_CABINET: {\r\n            /** load user data if user auth - true */\r\n            return {\r\n                ...state,\r\n                active: action.active,\r\n                idUser: action.idUser,\r\n                projects: [...action.projects]\r\n            }\r\n        }\r\n\r\n        case CREATE_PROJECT: {\r\n             /** create new project */\r\n            return {\r\n                ...state,\r\n                projects: [...action.projects]\r\n            }\r\n        }\r\n\r\n        case LOAD_UPDATE_PROJECT: {\r\n              /** update project in cabinet */\r\n            return {\r\n                ...state,\r\n                projects: state.projects.map(item => {\r\n                    if (item.id === action.idProject)\r\n                        item.components = [...action.components]\r\n                return item;\r\n                })\r\n            }\r\n        }\r\n\r\n        case LOG_OUT_CABINET: {\r\n            /** clear session */\r\n            return {\r\n                ...state,\r\n                active: false,\r\n                idUser: null,\r\n                projects: []\r\n            }\r\n        }\r\n\r\n        case ERROR_CABINET: {\r\n            /** catch error in cabinet */\r\n            return {\r\n                ...state,\r\n                error: action.error\r\n            }\r\n        }\r\n        default: return state;\r\n    }\r\n}\r\n\r\n","import {combineReducers} from 'redux';\r\nimport reducerBuilder from './reducerBuilder';\r\nimport reducerCabinet from './reducerCabinet';\r\n\r\nexport default combineReducers({\r\n    builder: reducerBuilder,\r\n    cabinet: reducerCabinet,\r\n});","import {createStore, applyMiddleware, compose} from 'redux';\r\nimport firebase from  '../Firebase/Firebase';\r\nimport thunk from 'redux-thunk';\r\nimport combineReducers from './reducers';\r\n\r\n/** For devtools */\r\nconst composeEnhancers =\r\n  typeof window === 'object' &&\r\n  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?\r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\r\n    }) : compose;\r\n\r\nconst middleware = composeEnhancers( /** @Include moddleware */\r\n  applyMiddleware(thunk.withExtraArgument({firebase})));\r\n\r\nconst store = createStore(combineReducers, middleware);\r\nexport default store;","import {loadUserAction, errorAction, logOutAction} from '../actions';\r\n\r\nconst middlewareLogin = (email,password) => async (dispatch,getState, {firebase}) => {\r\n    /** Auth */\r\n    let isLogin = true;\r\n        await firebase.login(email,password)\r\n        .then(response =>{\r\n            firebase.db.collection(\"users\").doc(response.user.uid).get()\r\n            .then(docUser => {\r\n                let user = docUser.data();\r\n                /** Load user if auth - true */\r\n                dispatch(loadUserAction({uid: docUser.id, projects: [...user.projects]}))\r\n            })\r\n        })\r\n        .catch((error) => {\r\n            console.error(error.message);\r\n            dispatch(errorAction(error.message));\r\n        });\r\n        return isLogin;\r\n    }\r\n\r\nconst middlewareLoadUserData = (uid) => async (dispatch,getState, {firebase}) => {\r\n    /** Load user data */\r\n        let isError = null;\r\n        await firebase.db.collection(\"users\").doc(uid).get()\r\n        .then(docUser => {\r\n            let user = docUser.data();\r\n            /** load if user data found */\r\n            dispatch(loadUserAction({uid: uid, projects: [...user.projects]}))\r\n        })\r\n        .catch((error) => {\r\n            console.error(error.message);\r\n            dispatch(errorAction(error.message));\r\n            isError = true;\r\n        });\r\n\r\n        if (!isError) return true;\r\n        else return false;\r\n    }\r\n\r\nconst middlewareLogOutUser = (uid) => async (dispatch,getState, {firebase}) => {\r\n    /** disconnect from session */\r\n    await firebase.signOut()\r\n    .then (response => {\r\n        dispatch(logOutAction());\r\n    })\r\n    .catch((error) => {\r\n        console.error(error.message);\r\n        dispatch(errorAction(error.message));\r\n    });\r\n}\r\nexport {\r\n    middlewareLogin,middlewareLoadUserData, middlewareLogOutUser\r\n}","import React from 'react';\r\nimport firebase from './Firebase';\r\n/** @ContextAPI for firebase */\r\nconst firebaseContext = React.createContext(firebase);\r\nexport default firebaseContext;","import React from 'react';\r\nimport firebaseContext from '../Firebase/firebaseContext';\r\n\r\n\r\nconst withFirebase = Component => props => {\r\n        return ( /** Context API */\r\n            <firebaseContext.Consumer>\r\n                {firebase => <Component {...props} firebase = {firebase} /> }\r\n            </firebaseContext.Consumer>\r\n        )\r\n};\r\n\r\n\r\nexport default withFirebase;","import React,{useState} from 'react';\r\nimport './Loader.scss';\r\nexport default function(props) {\r\n  \r\n    const [path] = useState(props.path ? process.env.PUBLIC_URL + props.path : process.env.PUBLIC_URL + `/img/loading.gif`);\r\n    const [mode] = useState(props.mode ? props.mode : false);\r\n    return (\r\n            <div className = {`loaderBox ${mode && 'specialMode'}`}>\r\n                <img className = 'loader' src = {path} alt = 'loader'></img> \r\n                {!mode && <p>{`Loading ${props.type}`}</p>}\r\n            </div>\r\n    )\r\n}","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst AnimationTitle = styled.h3`\r\n    user-select: none;\r\n    transition: .4s linear all;\r\n    color: ${props => props.dir === 'up' ? 'red' : 'blue'};\r\n`;\r\n\r\nclass AnimationText extends React.PureComponent {\r\n\r\n    state = {\r\n        tilteContent: this.props.content.split(''),\r\n        currentTitle: this.props.content[0],\r\n        positionTitle: 1,\r\n        directionAnimation: 'up',\r\n        msAnimation: this.props.msAnimation,\r\n        msTimeout: this.props.msAnimation,\r\n        msPauseEnd: this.props.msPauseEnd,\r\n    }\r\n\r\n    _isMounted = false;\r\n    timerAnimation = null;\r\n\r\n    animationTitle = timer => {\r\n        let self = this;\r\n        if (this._isMounted)\r\n        timer = setTimeout( function tick(){\r\n\r\n            if (self._isMounted) {\r\n                if (self.state.directionAnimation === 'up'){\r\n                    let counter = self.state.tilteContent.length;\r\n                    const word = counter > self.state.positionTitle ?\r\n                                self.state.tilteContent[self.state.positionTitle] :\r\n                                self.state.tilteContent[self.state.positionTitle-1];\r\n                    self.setState({\r\n                        ...self.state,\r\n                        currentTitle: self.state.currentTitle + word,\r\n                        positionTitle: self.state.positionTitle + 1,\r\n                        directionAnimation: self.state.positionTitle === counter ? 'down' : 'up',\r\n                        msAnimation: self.state.positionTitle === counter ?\r\n                            self.state.msPauseEnd : self.state.msTimeout\r\n                    });\r\n                }\r\n                if (self.state.directionAnimation === 'down'){\r\n                    let _title = self.state.currentTitle;\r\n                    const length = self.state.currentTitle.length;\r\n                    _title = _title.slice(0,length - 1);\r\n                    self.setState({\r\n                        ...self.state,\r\n                        currentTitle: _title,\r\n                        positionTitle: self.state.positionTitle - 1,\r\n                        directionAnimation: self.state.positionTitle === 2 ? 'up' : 'down',\r\n                        msAnimation: self.state.positionTitle === 2 ?\r\n                            self.state.msPauseEnd : self.state.msTimeout\r\n                    });\r\n                }\r\n            timer = setTimeout(tick, self.state.msAnimation);\r\n            }\r\n        }, this.state.msAnimation);\r\n\r\n    }\r\n\r\n\r\n    render(){\r\n        return (\r\n            <AnimationTitle data-titlebuild dir = {this.state.directionAnimation}>\r\n                {this.state.currentTitle}\r\n            </AnimationTitle>\r\n        )\r\n\r\n    }\r\n\r\n    componentDidMount = (e) => {\r\n        this._isMounted = true;\r\n        this.animationTitle(this.timerAnimation);\r\n    }\r\n\r\n    componentWillUnmount = (e) => {\r\n        this._isMounted = false;\r\n        if (this.timerAnimation) clearTimeout(this.timerAnimation);\r\n    }\r\n}\r\n\r\n\r\nexport default AnimationText;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './registration.scss';\r\n\r\nimport withFirebase from '../withFirebase';\r\n\r\n\r\nclass Registration extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        firebase: PropTypes.object.isRequired, /** @firebase class for use firebase functions */\r\n        indexStream: PropTypes.object.isRequired /** @Events stream object */\r\n    }\r\n\r\n    state = {\r\n        firebase: this.props.firebase,\r\n        error: null,\r\n    }\r\n\r\n    emailRef = null;\r\n    passwordRef = null;\r\n\r\n    setRefEmail = (node) => this.emailRef = node;\r\n    setRefPassword = (node) => this.passwordRef = node;\r\n\r\n    createUser = event => {\r\n        /** try to create new user */\r\n        const email = this.emailRef ? this.emailRef.value : null;\r\n        const password = this.passwordRef ? this.passwordRef.value : null;\r\n        const { firebase } = this.props;\r\n\r\n        if (password && email)\r\n        firebase.registration(email, password)\r\n        .then(response => {\r\n            if (!response) throw new Error('Ivaid registration')\r\n            /** if response - true update data user else throw error */\r\n            firebase.db.collection(\"users\").doc(response.user.uid).set({\r\n                'projects': [],\r\n                'email': email,\r\n            }).then(() => this.props.indexStream.emit('EventRegistrationCorrect', response));\r\n        })\r\n        .catch((error) => {\r\n        console.error(error.message);\r\n        this.setState({error: error.message});\r\n        });\r\n        else  return this.setState({error: 'invalid user data'});\r\n    };\r\n\r\n    render(){\r\n        let  { error } = this.state;\r\n        return (\r\n            <div className ='RegistrationBox'>\r\n                <div  className = 'RegistrationBox__RegistrationForm'>\r\n                    <h3>Registration</h3>\r\n                    <form autoComplete = 'off' className = 'RegistrationForm__RegForm'>\r\n                        { error ?\r\n                            <p className = 'error'>{error}</p>\r\n                            : null\r\n                        }\r\n                        <span>E-mail</span>\r\n                        <input placeholder=\"email\" ref = {this.setRefEmail} type = 'text' />\r\n                        <span>Password</span>\r\n                        <input \r\n                            className = 'password' \r\n                            autoComplete = \"off\" \r\n                            ref = {this.setRefPassword} \r\n                            type = 'password' \r\n                            placeholder=\"password\"\r\n                        />\r\n                        <input onClick = {this.createUser}\r\n                                className = 'RegForm__loginButton'\r\n                                type = 'button'\r\n                                value = 'registration'\r\n                        />\r\n                    </form>\r\n                </div>\r\n                </div>\r\n        )\r\n    }\r\n\r\n}\r\nexport default withFirebase(Registration);\r\n","import React, {useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './icon.scss';\r\n\r\nfunction Icon(props){\r\n    const [path] = useState(props.path);\r\n    const [className] = useState(props.className ? props.className : null);\r\n    const [draggable] = useState(props.draggable ? true : false);\r\n\r\n    return (\r\n    <img\r\n        draggable = {draggable}\r\n        onClick = {props.onClick ? props.onClick : null}\r\n        className = {className}\r\n        title = {props.title ? props.title : null}\r\n        src = {process.env.PUBLIC_URL + path } alt = 'icon'>\r\n    </img>\r\n    )\r\n}\r\n\r\nIcon.propTypes = {\r\n    path: PropTypes.string.isRequired, // icon path\r\n    className: PropTypes.string, // class\r\n    draggable: PropTypes.bool // draggable bool\r\n}\r\n\r\nexport default Icon;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Redirect} from 'react-router-dom';\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\r\nimport AnimationText from '../../components/AnimationText/AnimationTitle';\r\nimport Events from 'events';\r\nimport {middlewareLogin} from '../../redux/middleware/loadUserMiddleware';\r\n\r\nimport Loader from '../../components/loading/Loader';\r\nimport Registration from '../../components/Registration/Registration';\r\n\r\nimport {connect} from 'react-redux';\r\n\r\nimport './index.scss';\r\nimport Icon from '../../components/Icon/icon';\r\n\r\n\r\nclass Index extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        active: PropTypes.bool, /** @active - status firebase auth */\r\n        dispatch: PropTypes.func.isRequired, /** @dispatch - redux */\r\n        history: PropTypes.object.isRequired, /** @Router HTML5 history */\r\n        location: PropTypes.object.isRequired, /** @Router */\r\n        match: PropTypes.object.isRequired, /** @Router */\r\n        wrongEnter: PropTypes.string, /** @Error about invalid enter */\r\n        config: PropTypes.object, /** @config - app settings */\r\n    }\r\n\r\n    indexStream = new Events();\r\n\r\n    state = {\r\n        title:  this.props.config.title,\r\n        tryAuth: false,\r\n        registrationActive: false,\r\n        regStatus: false,\r\n        wrongEnter: false,\r\n        error: '',\r\n    }\r\n\r\n    emailImput = null;\r\n    passwordImput = null;\r\n\r\n    statusRegistration = event => {\r\n        /** Update registration status */\r\n        event.additionalUserInfo.isNewUser ?\r\n            this.setState({\r\n                ...this.state,\r\n                regStatus: true,\r\n                registrationActive: false,\r\n                error: 'Account create!'\r\n            })\r\n        : console.error('error registration');\r\n    }\r\n\r\n    showBox = event => {\r\n         /** Show registration box */\r\n        try {\r\n            this.setState ({\r\n                ...this.state,\r\n            registrationActive: this.state.registrationActive ? false : true\r\n            });\r\n        } catch (e) {\r\n        console.error('animation fail');\r\n        }\r\n        event.stopPropagation();\r\n    }\r\n\r\n    authTo = event => {\r\n          /** Auth user */\r\n            if (this.emailImput && this.passwordImput){\r\n                this.setState({\r\n                    ...this.state,\r\n                    tryAuth: true,\r\n                }, () => {\r\n                     this.props.dispatch(middlewareLogin(this.emailImput.value, this.passwordImput.value))\r\n                     .then((res) => this.setState({...this.state,  tryAuth: false}));\r\n                });\r\n            }\r\n            event.stopPropagation();\r\n    }\r\n\r\n    emailRef = node => this.emailImput = node;\r\n    passwordRef = node => this.passwordImput = node;\r\n\r\n    render(){\r\n\r\n        if (this.props.active) return <Redirect to = { '/Cabinet'} />\r\n        else if (!this.props.active) {\r\n            return (\r\n                    <div className = 'LoginPage flex-column'>\r\n                        <h1>{this.state.title}</h1>\r\n                        <div className = 'LoginPage__LoginBox'>\r\n                            <AnimationText\r\n                                content = 'Build your landing page!'\r\n                                msPauseEnd = {1000}\r\n                                msAnimation = {150}\r\n                            />\r\n                            <form className = 'LoginBox__LoginForm'>\r\n                                <h3>Connect form</h3>\r\n                                {this.state.tryAuth &&\r\n                                <Icon\r\n                                    className = 'LoginBox__LoginForm__loader'\r\n                                    path = '/img/loading.gif'\r\n                                />\r\n                                }\r\n                                {(this.props.wrongEnter || this.state.regStatus) && !this.state.tryAuth ?\r\n                                    <p className = 'error'>{this.props.wrongEnter}</p>\r\n                                    : null\r\n                                }\r\n                                    <p>E-mail</p>\r\n                                    <input \r\n                                        autoComplete = 'off'\r\n                                        placeholder=\"email\" \r\n                                        ref = {this.emailRef}\r\n                                        type = 'text' \r\n                                    />\r\n                                    <p>Password</p>\r\n                                    <input \r\n                                        ref = {this.passwordRef} \r\n                                        type = 'password' \r\n                                        autoComplete = 'off'\r\n                                        placeholder=\"password\"\r\n                                    />\r\n                                    <input \r\n                                        onClick = {this.authTo} \r\n                                        className = 'LoginForm__loginButton enterInput'\r\n                                        type = 'button'\r\n                                        value = 'enter' />\r\n                                    <input\r\n                                        onClick = {this.showBox}\r\n                                        className = {this.state.registrationActive ?\r\n                                            `LoginForm__loginButton registration selected` : \r\n                                            'LoginForm__loginButton registration'\r\n                                        }\r\n                                        type = 'button'\r\n                                        value = 'registration'\r\n                                    />\r\n                            </form>\r\n                        </div>\r\n                            <TransitionGroup component={null}>\r\n                                {this.state.registrationActive &&\r\n                                    <CSSTransition\r\n                                        timeout={300}\r\n                                        unmountOnExit\r\n                                        classNames=\"RegAnim\">\r\n                                        <Registration  indexStream = {this.indexStream} />\r\n                                    </CSSTransition>\r\n                                }\r\n                            </TransitionGroup>\r\n                    </div>\r\n            )\r\n        } else  return <Loader path = '/img/loading.gif' type = 'session' />\r\n    }\r\n\r\n    componentDidUpdate = () => {\r\n\r\n    }\r\n\r\n    componentDidMount = (e) => {\r\n        this.indexStream.on('EventRegistrationCorrect', this.statusRegistration);\r\n    }\r\n    componentWillUnmount = (e) => {\r\n        this.indexStream.off('EventRegistrationCorrect', this.statusRegistration);\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        active: state.cabinet.active, \r\n        wrongEnter: state.cabinet.error\r\n    }\r\n  }\r\n\r\nexport default connect(mapStateToProps)(Index);","\r\nimport {errorAction, loadUserAction, loadUpdateCurrentProject} from '../actions';\r\n\r\nconst middlewareDelete = item => async (dispatch,getState, {firebase}) => {\r\n    /** Delete some components from project */\r\n    await firebase.db.collection('users').doc(item.uid).get()\r\n    .then(user => user.data())\r\n    .then(data => {\r\n        return {id: item.uid, projects: data.projects.filter(itemdb => itemdb.id !== item.id)};\r\n    })\r\n    .then(data => {\r\n        /** Load update in database */\r\n        firebase.db.collection(\"users\").doc(item.uid).update({\r\n            \"projects\": data.projects\r\n        })\r\n        .then(response => {\r\n            /** update user data */\r\n            dispatch(loadUserAction({uid: item.uid, projects: data.projects}));\r\n        });\r\n    })\r\n    .catch((error) => {\r\n        console.error(error.message);\r\n        dispatch(errorAction(error.message));\r\n    });\r\n}\r\n\r\nconst middlewareDeleteProjectComponent = item => async (dispatch, getState, {firebase}) => {\r\n    /** Delete project */\r\n    await firebase.db.collection('users').doc(item.uid).get()\r\n    .then(user => user.data())\r\n    .then(data => {\r\n        const userProjects = [...data.projects];\r\n        const findProject = userProjects.find(project => item.id === project.id);\r\n        if (!findProject) throw new Error('No found project');\r\n        findProject.components = findProject.components.filter(component =>\r\n            component.id !== item.idComponent\r\n        );\r\n        return {dataUpdate: data, findProject: findProject};\r\n    })\r\n    .then(data => {\r\n        let {dataUpdate} = data;\r\n        let {findProject} = data;\r\n        /** update data in database */\r\n        firebase.db.collection(\"users\").doc(item.uid).update({\r\n            \"projects\": dataUpdate.projects\r\n        })\r\n        .then(response => {\r\n            /** update user data */\r\n            dispatch(loadUpdateCurrentProject({\r\n                components: [...findProject.components],\r\n                idProject: item.id,\r\n                sectionsProject: [...item.sectionsProject],\r\n            }))\r\n        });\r\n    })\r\n    .catch(error => {\r\n        console.error(error.message);\r\n        dispatch(errorAction(error.message));\r\n        return null;\r\n    });\r\n\r\n    return item.idComponent;\r\n}\r\n\r\nexport {middlewareDeleteProjectComponent};\r\nexport default middlewareDelete;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './Confirm.scss';\r\n\r\nconst Confirm = props => {\r\n\r\n    return (\r\n        <div className = 'wrapperConfirm'>\r\n            <div className = 'confirmSave'>\r\n                <span>Detected new changes</span>\r\n                <input\r\n                    className = 'saveCofirm'\r\n                    onClick = {props.cbSaveChanges}\r\n                    type = 'button'\r\n                    value = 'Save changes'\r\n                />\r\n                <input\r\n                    className = 'cancelCofirm'\r\n                    onClick = {props.cbCancelSave}\r\n                    type = 'button'\r\n                    value = 'Cancel'\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nConfirm.propTypes = {\r\n    cbSaveChanges: PropTypes.func.isRequired, // callback\r\n    cbCancelSave: PropTypes.func.isRequired // callback\r\n}\r\n\r\nexport default Confirm;","import React from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport './header.scss';\r\n\r\nimport {middlewareLogOutUser} from '../../redux/middleware/loadUserMiddleware';\r\nimport {connect} from 'react-redux';\r\nimport {Redirect, withRouter} from 'react-router-dom';\r\n\r\nimport eventEmitter from '../../EventEmitter.js';\r\nimport Icon from '../Icon/icon';\r\nimport Confirm from '../confirmBox/Confirm';\r\n\r\nconst iconPath = require('../../config.json').CabinetIcon;\r\n\r\nclass Header extends React.Component {\r\n\r\n    static propTypes = {\r\n        title: PropTypes.string.isRequired, /** @Config title app */\r\n        cabinetStream: PropTypes.object, /** @Events stream cabinet */\r\n        dispatch: PropTypes.func.isRequired, /** @dispatch redux */\r\n        history: PropTypes.object.isRequired, /** @Router HTML5 history */\r\n        location: PropTypes.object.isRequired, /** @Router */\r\n        match: PropTypes.object, /** @Router */\r\n    };\r\n\r\n    state = {\r\n        idUser: this.props.idUser,\r\n        title: this.props.title,\r\n        isChange: false,\r\n        redirectConfirm: false,\r\n        redirectAbout: {\r\n            path:  '/Cabinet/About',\r\n            redirectA: false,\r\n        },\r\n        redirectCabinet: {\r\n            path:  '/Cabinet',\r\n            redirectC: false,\r\n        }\r\n    };\r\n\r\n    confirm = event => {\r\n        if (typeof event !== 'object')\r\n        this.setState({isChange: event});\r\n        else this.setState({isChange: event.false, redirectConfirm: event.confirm});\r\n    }\r\n\r\n    confirmSaveDetectChanges = event => {\r\n        eventEmitter.emit('EventRedirectSaveChanges');\r\n        this.setState({\r\n            redirectConfirm: false,\r\n            redirectCabinet: {\r\n                ...this.state.redirectCabinet,\r\n                redirectC: true\r\n            }\r\n        });\r\n    };\r\n\r\n    logOut = event => {\r\n        if (this.state.idUser)\r\n            this.props.dispatch(middlewareLogOutUser(this.props.idUser));\r\n        event.stopPropagation();\r\n    };\r\n\r\n    redirectAbout = event => {\r\n        const isPath = this.props.location.pathname !== this.state.redirectAbout.path;\r\n        if (isPath && !this.state.isChange)\r\n           this.setState({\r\n                redirectConfirm: false,\r\n                redirectAbout: {\r\n                   ...this.state.redirectAbout,\r\n                   redirectA: true\r\n               }\r\n           });\r\n           else this.setState({redirectConfirm: true});\r\n        event.stopPropagation()\r\n    };\r\n\r\n    redirectCabinet = event => {\r\n        if (event !== 'cancelMode'){\r\n            const isPath = this.props.location.pathname !== this.state.redirectCabinet.path;\r\n            if (isPath && this.state.isChange === false)\r\n            this.setState({\r\n                redirectConfirm: false,\r\n                redirectCabinet: {\r\n                    ...this.state.redirectCabinet,\r\n                    redirectC: true\r\n                }\r\n            });\r\n            else if (!this.state.redirectConfirm) this.setState({redirectConfirm: true});\r\n            event.stopPropagation();\r\n\r\n        } else this.setState({\r\n            redirectConfirm: false,\r\n            redirectCabinet: {\r\n                ...this.state.redirectCabinet,\r\n                redirectC: true\r\n            }\r\n        });\r\n    }\r\n\r\n    add = event => {\r\n        this.props.cabinetStream.emit('EventChangeWorkMode',{active: true, action: 'newProject'});\r\n        event.stopPropagation()\r\n    };\r\n\r\n    render(){\r\n        let {redirectA} = this.state.redirectAbout;\r\n        let {redirectC} = this.state.redirectCabinet;\r\n\r\n        if (redirectA) return <Redirect to = {this.state.redirectAbout.path} />\r\n        if(redirectC) return <Redirect to = {this.state.redirectCabinet.path} />\r\n\r\n        return (\r\n            <React.Fragment>\r\n            {this.state.isChange && this.state.redirectConfirm ?\r\n                <Confirm \r\n                    cbSaveChanges = {this.confirmSaveDetectChanges}\r\n                    cbCancelSave = {() => this.redirectCabinet('cancelMode')}\r\n                /> : null}\r\n                <header>\r\n                    <div className = 'container'>\r\n                        <div className = 'flex-row'>\r\n                                <div onClick = {this.redirectCabinet} className = 'header__CabinetInfo'>\r\n                                    <Icon className ='mainIcon' path = {iconPath} />\r\n                                    <h3 className = 'tilteApp'>{this.state.title}</h3>\r\n                                </div>\r\n                                {this.props.location.pathname === '/Cabinet' ?\r\n                                    <div onClick = {this.add} className = 'header__newProject__AddButton'>\r\n                                        <Icon className = 'Cabinet' path = '/img/plus.png' />\r\n                                    </div>\r\n                                    : null\r\n                                }\r\n                                    <div  className = 'Navigator'>\r\n                                        <Icon className = 'about' onClick = {this.redirectAbout}\r\n                                            title = 'about'\r\n                                            path = '/img/about_logo.svg'\r\n                                        />\r\n                                        <Icon className = 'logoutButton'\r\n                                            onClick = {this.logOut}\r\n                                            title = 'logOut'\r\n                                            path = '/img/logOut.svg'\r\n                                        />\r\n                                    </div>\r\n                        </div>\r\n                </div>\r\n                </header>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n    componentDidlMount = () => {\r\n        eventEmitter.on('EventRedirectConfirm', this.confirm);\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        eventEmitter.off('EventRedirectConfirm', this.confirm);\r\n    }\r\n}\r\n\r\nexport default connect()(withRouter(Header));","import React, {useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport eventEmitter from '../../EventEmitter';\r\n\r\nconst ImageItem = props => {\r\n\r\n    const {selected} = props;\r\n    const [id] = useState(props.id);\r\n    const [urlRegular] = useState(props.urls.regular);\r\n    const [urlFull] = useState(props.urls.full);\r\n    const [isFull] = useState(props.isFull);\r\n    const [urlContent] = useState(props.urlContent);\r\n    const showImageMenu = event => {\r\n\r\n       eventEmitter.emit(\"EventShowMenuImage\",{\r\n            id: id,\r\n            url: urlRegular,\r\n            urlFull: urlFull,\r\n            iframe: urlContent\r\n        });\r\n        event.stopPropagation();\r\n    }\r\n\r\n    return (\r\n        <div className = {selected ? 'ItemBox selected' : 'ItemBox'}>\r\n            <img\r\n                className = 'ImageItem'\r\n                onClick = {showImageMenu}\r\n                src = {isFull ? urlFull : urlRegular}\r\n                alt = 'item'\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nImageItem.propTypes = {\r\n    id: PropTypes.oneOfType([\r\n        PropTypes.string,\r\n        PropTypes.number,\r\n    ]),\r\n    urls: PropTypes.object, // data with image path\r\n    isFull: PropTypes.bool, // mode view\r\n    urlContent: PropTypes.string // content path\r\n}\r\n\r\nexport default ImageItem;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Loader from '../../loading/Loader';\r\n\r\nconst CreateProject = props => {\r\n\r\n    const content = props.content; /** Content */\r\n    const {disabled,validateName,name,validateType,typeClassName} = content;\r\n    const nameLength = name.length; /** Length */\r\n\r\n    let isNumber = props.nameLength >= 4 && props.nameLength <= 20;\r\n\r\n    return (\r\n    <div className = 'Modal Modal__create'>\r\n        <h3>Create new Project</h3>\r\n        { nameLength <= 3 ?\r\n            <span className = 'warning'>{props.warningLengthMin}</span> : null\r\n        }\r\n        { nameLength >= 20 ?\r\n            <span className = 'warning'>{props.warningLengthMax}</span> : null\r\n        }\r\n        {\r\n            isNumber && !validateName ?\r\n            <span className = 'warning'>{props.warningNumber}</span> : null\r\n        }\r\n        <input\r\n            className = {typeClassName ? 'ready' : 'wrong'}\r\n            value = {props.name}\r\n            onChange = {props.cbValidateName}\r\n            type = 'text'\r\n            placeholder = \"Project name\"\r\n        />\r\n        { !validateType ?\r\n            <span className = 'warning'>{props.warningType}</span> : null\r\n        }\r\n        <select onChange = {props.cbSelectOption} >\r\n            <option value = 'empty'>--------</option>\r\n            <option value = 'landing'>Landing</option>\r\n        </select>\r\n        <input \r\n            onClick = {props.cbAddNewProject}\r\n            className = 'acceptButton'\r\n            disabled = {disabled}\r\n            type = 'button'\r\n            value = 'Submit'\r\n        />\r\n        <input onClick = {props.cbCancel} type ='button' value = 'Cancel' />\r\n        {props.loading && <Loader mode = 'create' />}\r\n    </div>\r\n    )\r\n}\r\n\r\nCreateProject.propTypes = {\r\n    content: PropTypes.object, // type color className\r\n    warningType: PropTypes.string, // errors\r\n    warningLengthMax: PropTypes.string, // error max length\r\n    warningLengthMin: PropTypes.string, // error min length\r\n    cbValidateName: PropTypes.func.isRequired, // callback validate\r\n    cbAddNewProject: PropTypes.func.isRequired, // callback add new project\r\n}\r\n\r\nexport default CreateProject;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport eventEmitter from '../../../EventEmitter';\r\nimport Icon from '../../Icon/icon';\r\nimport Loader from '../../loading/Loader';\r\n\r\nclass  SearchModal extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        modalSearchMode: PropTypes.string.isRequired, // search mode\r\n        content: PropTypes.object, // with search data\r\n        cbCancel: PropTypes.func.isRequired, // callback cancel\r\n        cbShowImage: PropTypes.func.isRequired, // callback show image\r\n        cbSetSelectedImage: PropTypes.func.isRequired, // callback show image\r\n    }\r\n\r\n    state = {\r\n        mode: this.props.modalSearchMode,\r\n        items: this.props.images,\r\n    }\r\n\r\n    search = event => {\r\n        /** event search on */\r\n        const value = this.refSearch ? this.refSearch.value : null;\r\n        this.props.cbSearch(event,value, this.props.modalSearchMode);\r\n        event.stopPropagation();\r\n    }\r\n\r\n    refSearch = null;\r\n    refSearchFunc = node => this.refSearch = node;\r\n\r\n    render(){\r\n\r\n        let {content} = this.props;\r\n        return (\r\n            <React.Fragment>\r\n                <div className = 'Modal Modal-search'>\r\n                <h3>\r\n                {this.props.modalSearchMode ? \r\n                    `Search ${this.props.modalSearchMode}` : '' \r\n                }\r\n                </h3>\r\n                { this.props.error ?\r\n                    <span className = 'error'>{content.error}</span> : null\r\n                }\r\n                <div className = 'Modal-search__controllers'>\r\n                    <input ref = {this.refSearchFunc} type = 'text' />\r\n                        <input\r\n                            disabled = {content.dissabled}\r\n                            className = 'acceptButton'\r\n                            type = 'button'\r\n                            value = 'Search'\r\n                            onClick = {this.search}\r\n                        />\r\n                    <input onClick = {this.props.cbCancel} type ='button' value = 'Cancel' />\r\n                </div>\r\n                <div className = 'searchResultBox'>\r\n                    {this.state.items}\r\n                    {this.props.loading ? <Loader type = 'images' /> : null}\r\n                </div>\r\n                </div>\r\n                {  this.props.menuActive ?\r\n                    <div className = 'ActionModalSearch'>\r\n                    <button onClick = {this.props.cbShowImage} className = 'actionModalSearch__view'>\r\n                        <Icon path = '/img/view.png' />\r\n                    </button>\r\n                    <button onClick = {this.props.cbSetSelectedImage} className = 'actionModalSearch__settings'>\r\n                        <Icon path = '/img/settings.png' />\r\n                    </button>\r\n                    </div>\r\n                    : null\r\n                }\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n    componentDidUpdate = (prevProps,prevState) => {\r\n        let {content} = this.props;\r\n        let {content: contentPrev} = prevProps;\r\n        const haveUpdate = (contentPrev.images !== content.images && content.images);\r\n        const isSelected = contentPrev.selectedItem !== content.selectedItem;\r\n        /** update if selected */\r\n        if (haveUpdate || isSelected){\r\n            let _items = this.props.cbMakeImageResultBox(content.images);\r\n            this.setState({\r\n                ...this.state,\r\n                items: [..._items]\r\n            });\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        eventEmitter.emit('EventBlockScroll', 'window');\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        eventEmitter.emit('EventBlockScroll', 'default');\r\n    }\r\n}\r\n\r\nexport default SearchModal;","import React,{Fragment} from 'react';\r\n\r\nimport isFetch from 'isomorphic-fetch';\r\nimport PropTypes from 'prop-types';\r\nimport eventEmitter,{controllerStream} from '../../EventEmitter.js';\r\nimport ImageItem from '../imageViewer/imageItem';\r\n\r\nimport CreateProject from './createProject/createProject';\r\nimport SearchModal from './Search/searchModal';\r\nimport './modal.scss';\r\nrequire('es6-promise').polyfill();\r\n\r\nclass ModalWindow extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        workMode: PropTypes.string.isRequired, /** @Mode for modal */\r\n        cabinetStream: PropTypes.object, /** @Events stream cabinet */\r\n        eventStreamBuild: PropTypes.object, /** @Events stream build */\r\n        idComponent: PropTypes.oneOfType([\r\n            PropTypes.string,\r\n            PropTypes.number\r\n        ]) /** @Id current user project */\r\n    }\r\n\r\n    state = {\r\n        workMode: this.props.workMode,\r\n        loading: false,\r\n        items: [],\r\n        images: {\r\n            loading: false,\r\n            buttonSearchDisabled: false,\r\n            selectedItem: null, \r\n            showUrl: null, \r\n            images: [],\r\n            urlFull: null,\r\n            imageBoxView: false, \r\n            iframe: null,\r\n            error: ''\r\n        },\r\n        newProject: {\r\n            validateName: false,\r\n            validateType: false,\r\n            disabled: true,\r\n            name: '',\r\n            type: 'empty'\r\n        },\r\n        imageMenuActive: false,\r\n        warning: {\r\n            lengthMax: 'Max length: 20 laters',\r\n            warningNumber: `Don't use numbers`,\r\n            lengthMin: 'Min length: 4 letters',\r\n            type: 'Select type of webpage',\r\n        }\r\n    }\r\n\r\n    inputSearch = null;\r\n    inputSelect = null;\r\n\r\n    searchData = (event,value, mode) => {\r\n        /** search images or media */\r\n        this.setState({...this.state, \r\n            images: {\r\n                ...this.state.images,\r\n                loading: true,\r\n                buttonSearchDisabled: true\r\n            }\r\n        });\r\n\r\n        let search = null;\r\n        if (value) search = value;\r\n        else search = this.inputSearch.value;\r\n\r\n        if (mode !== 'media'){\r\n        const modeAPI = 'search/photos/?page=1&per_page=40&query=';\r\n        const api = `https://api.unsplash.com/${modeAPI}`;\r\n \r\n        isFetch(`${api + search}&client_id=${process.env.REACT_APP_UNSPLASH_TOKEN}`)\r\n        .then(response => {\r\n            if (response.ok) return response.json();\r\n            else throw new Error('request invalid');\r\n        })\r\n        .then(response => {\r\n            let {results} = response;\r\n            if (results.length) /** save results */\r\n            this.setState({\r\n                ...this.state,\r\n                images: {\r\n                    ...this.state.images,\r\n                    loading: false,\r\n                    imageBoxView: true,\r\n                    error: '',\r\n                    images: [...results],\r\n                    buttonSearchDisabled: false\r\n                },\r\n            });\r\n            else throw new Error('Photos not found');\r\n        })\r\n        .catch(error => {\r\n            console.error(error.message);\r\n            this.setState({\r\n                ...this.state,\r\n                images: {\r\n                    ...this.state.images,\r\n                    buttonSearchDisabled: false,\r\n                    loading: false,\r\n                    error: error.message},\r\n                imageBoxView: false,\r\n            });\r\n        });\r\n        } else this.searchYouTubeAPI(search);\r\n    }\r\n\r\n\r\n    searchYouTubeAPI = (search) => {\r\n        /** search media */\r\n        const API = `https://www.googleapis.com/youtube/v3/search?part=snippet`;\r\n        const RAITE = `&maxResults=25&order=date&q=${search}`;\r\n        const KEY = `&key=${process.env.REACT_APP_YOUTUBE_SEARCH_TOKEN}`;\r\n        isFetch(API + RAITE + KEY)\r\n        .then(res => {\r\n            if (res.ok)\r\n            return res.json();\r\n            else throw new Error (`Error ${res.status}`);\r\n        })\r\n        .then(res => {\r\n            const arrayItems = [];\r\n            res.items.forEach(item => {\r\n                arrayItems.push({\r\n                    urls: { regular: item.snippet.thumbnails.high.url },\r\n                    videoId: item.id.videoId\r\n                })\r\n            });\r\n            return arrayItems;\r\n        })\r\n        .then(results => {\r\n            this.setState({ /** save results */\r\n                ...this.state,\r\n                images: {\r\n                    ...this.state.images,\r\n                    loading: false,\r\n                    imageBoxView: true,\r\n                    error: '',\r\n                    images: [...results],\r\n                    buttonSearchDisabled: false\r\n                },\r\n            });\r\n        })\r\n        .catch(error => console.error(error));\r\n    }\r\n\r\n    showMenuImage = event => {\r\n        /** tools for show or set content */\r\n        this.setState({\r\n            ...this.state, \r\n            imageMenuActive: true,\r\n            images: {\r\n                ...this.state.images,\r\n                selectedItem: event.id, \r\n                showUrl: event.url,\r\n                urlFull: event.urlFull,\r\n                iframe: event.iframe\r\n\r\n            }\r\n        });\r\n    }\r\n\r\n    showImage = event => {\r\n        /** on viewer */\r\n        const {showUrl, iframe} = this.state.images;\r\n\r\n        this.props.eventStreamBuild.emit(\"EventView\", {\r\n            action: true, \r\n            target: showUrl ? showUrl : null,\r\n            iframe: iframe,\r\n            mode: this.props.modalSearchMode\r\n        });\r\n        event.stopPropagation();\r\n    }\r\n\r\n    setSelectedImage = event => {\r\n        /** set current selected content */\r\n        let data = {...this.state.images};\r\n        if (this.props.modalSearchMode === 'background'){\r\n            controllerStream.emit(`EventSetBackgroundImage${this.props.idComponent}`,data);\r\n            eventEmitter.emit(`EventSetBImageInstumentPanel`,{images: data, mode: this.props.modalSearchMode});\r\n        } else if (this.props.modalSearchMode === 'image'){\r\n            controllerStream.emit(`EventSetCurrentImage${this.props.idComponent}`, data);\r\n            eventEmitter.emit(`EventSetBImageInstumentPanel`, {images: data,  mode: this.props.modalSearchMode });\r\n        } else if (this.props.modalSearchMode === 'media'){\r\n            controllerStream.emit(`EventSetContentMedia${this.props.idComponent}`,{\r\n                    iframe: data.iframe,\r\n                    mode: this.props.modalSearchMode\r\n                }\r\n            );\r\n            eventEmitter.emit(`EventSetIframe`, {iframe: data.iframe});\r\n        }\r\n\r\n        event.stopPropagation();\r\n    };\r\n\r\n    makeImageResultBox = (items) => {\r\n        /** make results */\r\n        if (!items) return null;\r\n        return items.map((item,i) =>{\r\n                return <ImageItem\r\n                            key = {`item${item.videoId}${i}`}\r\n                            id = {i}\r\n                            urlContent = {item.videoId ? item.videoId : null}\r\n                            selected = {this.state.images.selectedItem === i ? true : false} \r\n                            isFull = {false}\r\n                            urls = {item.urls}\r\n                        />\r\n        });\r\n\r\n    }\r\n\r\n    addNewProject = event => {\r\n        /** create new projects modal */\r\n        let mode = this.state[this.state.workMode];\r\n        if (mode.validateType &&  mode.validateName) {\r\n\r\n            this.setState({\r\n                ...this.state,\r\n                loading: true,\r\n            });\r\n            this.props.cabinetStream.emit('EventAddProject',\r\n            {\r\n                title: this.state[this.state.workMode].name,\r\n                type: this.state[this.state.workMode].type\r\n            });\r\n\r\n            this.props.cabinetStream.emit('EventChangeWorkMode',{action: 'default'});\r\n        }\r\n    }\r\n\r\n    selectOption = event => {\r\n        /** type project */\r\n        let inputs = {...this.state[this.state.workMode]};\r\n        inputs.type = event.target.value;\r\n        inputs.validateType = inputs.type !== 'empty';\r\n        inputs.disabled = inputs.validateType && inputs.validateName ? false : true;\r\n        this.setState({\r\n            ...this.state,\r\n            [this.state.workMode]: inputs\r\n        });\r\n    }\r\n\r\n    validateName = event => {\r\n        /** validate name project */\r\n        let inputs = {...this.state[this.state.workMode]};\r\n        inputs.name = event.target.value;\r\n        inputs.validateName = /^\\D{4,20}$/i.test(inputs.name);\r\n        inputs.disabled = inputs.validateType && inputs.validateName ? false : true;\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            [this.state.workMode]: inputs\r\n        })\r\n    };\r\n\r\n    cancel = event => {\r\n        /** remove modal */\r\n        if (this.state.workMode === 'Search')\r\n        this.props.eventStreamBuild.emit(\"EventModalSearchOn\", {action: 'offline', mode: null});\r\n        else  this.props.cabinetStream.emit('EventChangeWorkMode',{active: false, action: 'default'});\r\n    }\r\n\r\n    refSelect = (node) => this.inputSelect = node;\r\n    refSearch = node => this.inputSearch = node;\r\n\r\n\r\n\r\n    render(){\r\n           switch (this.state.workMode){\r\n            case 'newProject':\r\n                return (\r\n                        <CreateProject\r\n                                content = {this.state[this.state.workMode]}\r\n                                warningType = {this.state.warning.type}\r\n                                warningNumber = {this.state.warning.warningNumber}\r\n                                warningLengthMin = {this.state.warning.lengthMin}\r\n                                warningLengthMax = {this.state.warning.lengthMax}\r\n                                cbValidateName = {this.validateName}\r\n                                cbSelectOption = {this.selectOption}\r\n                                cbAddNewProject = {this.addNewProject}\r\n                                cbCancel = {this.cancel}\r\n                                loading = {this.state.loading}\r\n                        />\r\n                )\r\n            case 'Search':\r\n                    return (\r\n                            <div className = 'searchWrapper'> \r\n                                <SearchModal\r\n                                    content = {this.state.images}\r\n                                    cbCancel = {this.cancel}\r\n                                    menuActive = {this.state.imageMenuActive}\r\n                                    cbMakeImageResultBox = {this.makeImageResultBox}\r\n                                    cbShowImage = {this.showImage}\r\n                                    cbSetSelectedImage = {this.setSelectedImage}\r\n                                    modalSearchMode = {this.props.modalSearchMode}\r\n                                    cbSearch = {this.searchData}\r\n                                    loader = {this.state.loading}\r\n                                />\r\n                            </div>\r\n                    )\r\n\r\n            default: return <Fragment></Fragment>\r\n        }\r\n    }\r\n\r\n    componentDidMount = event => {\r\n        if (this.state.workMode === 'Search')\r\n            eventEmitter.on('EventShowMenuImage', this.showMenuImage);\r\n    }\r\n\r\n    componentWillUnmount = event => {\r\n        if (this.state.workMode === 'Search')\r\n            eventEmitter.off('EventShowMenuImage', this.showMenuImage);\r\n    }\r\n}\r\n\r\nexport default ModalWindow;\r\n\r\n","import {createProjectAction, errorAction} from '../actions';\r\n\r\n\r\nfunction random(min){ /** Generate keys */\r\n    return `${Math.floor(min + Math.random() * (10000-min))}`\r\n}\r\n\r\n\r\nconst middlewareCreateProject = (uid, list, title, type) => async (dispatch,getState, {firebase}) => {\r\n    /** Create new project */\r\n    let lastProject = [...list];\r\n    const lastIndex = lastProject.length  ? lastProject[lastProject.length-1].id + 1 : 0;\r\n    const sectionsProject = [];\r\n    if (type === 'portfolio') sectionsProject.push(\"Header\");\r\n    else sectionsProject.push(\"Header\");\r\n    const header = {\r\n        backgroundImage: null,\r\n        backgroundColor: null,\r\n        id: `MainBackgroundHeader${random(0)}`,\r\n        targetSection: \"Header\",\r\n        type: \"background\"\r\n    }\r\n\r\n    lastProject.push({\r\n        id: lastIndex,\r\n        title: title,\r\n        type: type,\r\n        components: [header],\r\n        sectionsProject: [...sectionsProject],\r\n    });\r\n    /** Load project in database */\r\n    await firebase.db.collection(\"users\").doc(uid).update({\r\n        'projects': lastProject,\r\n    })\r\n    .then (() => dispatch(createProjectAction(lastProject)))\r\n    .catch(error => {\r\n        console.error(error.message);\r\n        dispatch(errorAction(error.message));\r\n    })\r\n};\r\n\r\nexport {\r\n    middlewareCreateProject\r\n}","import React, {useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {withRouter, Redirect} from 'react-router-dom';\r\n\r\nfunction Item(props) {\r\n    /** Project item in cabinet */\r\n    const [path] = useState( `/Cabinet/Build/${props.id}`);\r\n    const [productionPath] = useState(`/Cabinet/Build/${props.id}/Production/`);\r\n\r\n    let [canBuild,setCanBuild] = useState(false);\r\n    let [canProd, setCanProd] = useState(false);\r\n\r\n    const [id] = useState(props.id);\r\n    const [name] = useState(props.name);\r\n    const [type] = useState(props.type);\r\n\r\n\r\n    const build = event => {\r\n        if(props.location.pathname !== path)\r\n            setCanBuild(true);\r\n        event.stopPropagation();\r\n    };\r\n\r\n    const showProduction = event => {\r\n        if(props.location.pathname !== path)\r\n        setCanProd(true);\r\n        event.stopPropagation();\r\n    };\r\n\r\n    const deleteItem = event => {\r\n        props.cabinetStream.emit('EventDeleteItem',{\r\n            id: props.id,\r\n            name: props.name,\r\n            type: props.type\r\n        });\r\n        event.stopPropagation();\r\n    };\r\n\r\n\r\n    if (canBuild) return <Redirect to = {path} />\r\n    else if (canProd) return <Redirect to = {productionPath} />\r\n    else return (\r\n            <div className = 'item' data-id = {id}>\r\n                <p className = 'ProjectName'>{name}</p>\r\n                <p className = 'ProjectType'>{type}</p>\r\n                <div className = 'projectController'>\r\n                    <input \r\n                        onClick = {build} \r\n                        className = 'projectControllerButton_enter' \r\n                        type = 'button' \r\n                        value = 'enter build' />\r\n                    <input onClick = {deleteItem} \r\n                        className = 'projectControllerButton_delete' \r\n                        type = 'button' \r\n                        value = 'delete' />\r\n                </div>\r\n                <input onClick = {showProduction} \r\n                    className = 'productionButton' \r\n                    type = 'button' \r\n                    value = 'Production' />\r\n            </div>\r\n        )\r\n}\r\n\r\nItem.propTypes = {\r\n    id: PropTypes.number.isRequired, // id item\r\n    name: PropTypes.string.isRequired, // item name\r\n    type: PropTypes.string.isRequired, // item type\r\n}\r\n\r\nexport default withRouter(Item);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport {middlewareCreateProject} from '../../redux/middleware/createProjectMiddleware';\r\n// import {CSSTransition, TransitionGroup} from 'react-transition-group';\r\nimport './list.scss';\r\n\r\nimport Item from './Item';\r\n\r\nclass List extends React.PureComponent {\r\n    /** List of projects items in cabinet */\r\n    static propTypes = {\r\n        dispatch: PropTypes.func.isRequired, /** @dispatch redux */\r\n        idUser: PropTypes.string.isRequired, /** @UID current user */\r\n        list: PropTypes.array.isRequired, /** @List user projects */\r\n    }\r\n\r\n    state = {\r\n        redirect: false,\r\n    }\r\n\r\n    addNewProject = (item) => {\r\n        if (this.props.idUser) {\r\n            this.props.dispatch(middlewareCreateProject(\r\n                    this.props.idUser,\r\n                    this.props.list,\r\n                    item.title,\r\n                    item.type\r\n                ));\r\n        } else this.setState({...this.state, redirect: true});\r\n    }\r\n\r\n\r\n    makeList = (list) => {\r\n\r\n        return list.map (project => {\r\n\r\n            return(\r\n                <Item\r\n                    key = {project.id}\r\n                    id = {project.id}\r\n                    name = {project.title}\r\n                    type = {project.type}\r\n                    cabinetStream = {this.props.cabinetStream}\r\n                />\r\n            )\r\n        });\r\n    }\r\n\r\n    render(){\r\n        if (this.state.redirect)\r\n            return <Redirect to = { '/'} />\r\n            else return (\r\n                    <div className = 'projectsList__list'>\r\n                        {this.makeList([...this.props.list])}\r\n                    </div>\r\n                )\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.props.cabinetStream.on('EventAddProject',this.addNewProject);\r\n    }\r\n\r\n      componentWillUnmount = () => {\r\n        this.props.cabinetStream.off('EventAddProject',this.addNewProject);\r\n      }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        idUser: state.cabinet.idUser,\r\n        list: [...state.cabinet.projects]\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(List);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport List from '../List/List.jsx';\r\nimport './ProjectsSection.scss';\r\n\r\nconst ProjectsSection = props => {\r\n        return (\r\n            <section className = 'projectsList'>\r\n                <div className = 'container'>\r\n                    <div className = 'flex-column'>\r\n                        <div className = 'projectsList__box'>\r\n                            <h3>Your Projects</h3>\r\n                        </div>\r\n                        <List cabinetStream = {props.cabinetStream} />\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        )\r\n\r\n}\r\n\r\nProjectsSection.propTypes = {\r\n    cabinetStream: PropTypes.object /** @Events stream */\r\n}\r\n\r\nexport default ProjectsSection;","import React,{Fragment} from 'react';\nimport PropTypes from 'prop-types';\nimport {connect} from 'react-redux';\nimport {Redirect} from 'react-router-dom';\nimport {CSSTransition} from 'react-transition-group';\n/* ------- Event stream ------- */\nimport Events from 'events';\n/* ------- HOC for het firebase controll object ------- */\nimport withFirebase from '../../components/withFirebase';\n/* ------- Moddlewares ------- */\nimport {middlewareLogOutUser} from '../../redux/middleware/loadUserMiddleware';\nimport middlewareDelete from '../../redux/middleware/middlewareDelete';\n/* ------- Child components ------- */\nimport Loader from '../../components/loading/Loader';\nimport Header from '../../components/header/Header';\nimport Modal from '../../components/modalWindow/ModalWindow';\nimport ProjectsSection from '../../components/ProjectsSection/ProjectsSection';\nimport './Cabinet.scss';\n\nclass Cabinet extends React.PureComponent {\n\n\tstatic propTypes = {\n\t\tfirebase: PropTypes.object.isRequired, /** @firebase class for use firebase functions */\n\t\tactive: PropTypes.bool, /** @active - status firebase auth */\n\t\tdispatch: PropTypes.func.isRequired, /** @dispatch - redux */\n\t\thistory: PropTypes.object.isRequired, /** @Router HTML5 history */\n\t\tlocation: PropTypes.object.isRequired, /** @Router */\n\t\tmatch: PropTypes.object.isRequired, /** @Router */\n\t\tidUser: PropTypes.string, /** @Session user id from redux */\n\t\tprojects: PropTypes.arrayOf(PropTypes.object).isRequired /** @Projects array with user projects from redux */\n\t}\n\n\tcabinetStream = new Events();\n\n\tstate = {\n\t\tmodalActive: false,\n\t\tworkMode: 'default',\n\t}\n\n\tlogOut = () => {\n\t\t/** destroy session */\n\t\tthis.props.dispatch(middlewareLogOutUser(this.props.idUser));\n\t}\n\n\tdeletItem = event => {\n\t\t/** destroy project */\n\t\tthis.props.dispatch(middlewareDelete({...event, uid: this.props.firebase.getCurrentUser().uid}));\n\t};\n\n\t\tchangeWorkMode = event => {\n\t\t/** workMode changes */\n\t\tthis.setState ({\n\t\t...this.state,\n\t\tmodalActive: event.active,\n\t\tworkMode: event.action\n\t\t});\n\t\t}\n\n\n\trender(){\n\n\t\tif (this.props.active){\n\t\treturn (\n\t\t<Fragment>\n\t\t\t\t<Header cabinetStream = {this.cabinetStream} \n\t\t\t\t\ttitle = {this.props.config.title} \n\t\t\t\t\tidUser = {this.props.idUser} \n\t\t\t\t/>\n\t\t\t\t<div className = 'Cabinet'>\n\t\t\t\t<CSSTransition\n\t\t\t\t\tin={this.state.modalActive}\n\t\t\t\t\ttimeout={300}\n\t\t\t\t\tclassNames=\"modalAnimation\"\n\t\t\t\t\tunmountOnExit\n\t\t\t\t\tappear\n\t\t\t\t>\n\t\t\t\t<Modal\n\t\t\t\t\tcabinetStream = {this.cabinetStream}\n\t\t\t\t\tworkMode = {this.state.workMode} \n\t\t\t\t/>\n\t\t\t\t</CSSTransition>\n\t\t\t\t<ProjectsSection cabinetStream = {this.cabinetStream} />\n\t\t\t\t</div>\n\t\t\t</Fragment>\n\t\t)\n\t\t} else if (!this.props.firebase.getCurrentUser()) return <Redirect to = { '/'} />\n\t\telse return <Loader path = '/img/loading.gif' type = 'Cabinet' />\n\t}\n\n\n\tcomponentDidMount = () => {\n\t\tthis.cabinetStream.on('EventDeleteItem', this.deletItem);\n\t\tthis.cabinetStream.on('EventChangeWorkMode', this.changeWorkMode);\n\t};\n\n\tcomponentWillUnmount = () => {\n\t\tthis.cabinetStream.off('EventDeleteItem', this.deletItem);\n\t\tthis.cabinetStream.off('EventChangeWorkMode', this.changeWorkMode);\n\t}\n}\n\n\tconst mapStateToProps = (state) => {\n\treturn {\n\t\tidUser: state.cabinet.idUser,\n\t\tprojects: [...state.cabinet.projects],\n\t\tactive: state.cabinet.active\n\t}\n\t};\n\n\texport default connect(mapStateToProps)(withFirebase(Cabinet));\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport eventEmitter,{controllerStream} from '../../../EventEmitter';\r\nimport styled from 'styled-components';\r\n\r\n\r\nconst Background = styled.div`\r\n    position: relative;\r\n    width: ${props => props.width || '100%'};\r\n    height: ${props => props.height || '100%'};\r\n    background-color: ${props => props.backgroundColor};\r\n    ${props => props.backgroundImage ? `background-image: url(${props.backgroundImage});` : null}\r\n    background-size: cover;\r\n`;\r\n\r\nclass BackgroundComponent extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        id: PropTypes.string.isRequired,\r\n        targetSection: PropTypes.string.isRequired,\r\n        background: PropTypes.string,\r\n        backgroundImage: PropTypes.string,\r\n        width: PropTypes.string,\r\n        height: PropTypes.string,\r\n        sectionNumber: PropTypes.number,\r\n        mode: PropTypes.string.isRequired\r\n    };\r\n\r\n    state = {\r\n        id: this.props.id,\r\n        targetSection: this.props.targetSection,\r\n        backgroundColor: this.props.background || this.props.color,\r\n        backgroundImage: this.props.backgroundImage,\r\n        width: this.props.width,\r\n        height: this.props.height\r\n    };\r\n\r\n    boxComponent = null; // ref\r\n    boxComponentRef = node => this.boxComponent = node;\r\n\r\n    saveDataParent = () => {\r\n        let boxInform =  this.boxComponent.getBoundingClientRect();\r\n        controllerStream.emit(`EventSaveWidth${this.state.targetSection}`,{\r\n            countSection: this.props.countSection,\r\n            sectionNumber: this.props.sectionNumber,\r\n            size: {width: boxInform.width, height: boxInform.height}\r\n        });\r\n    };\r\n\r\n    openBgInstruments = event => {\r\n\r\n        const componentsPatternBackground = {\r\n            id: this.state.id,\r\n            targetSection: this.state.targetSection,\r\n            type: 'background',\r\n            backgroundColor: this.state.backgroundColor,\r\n            backgroundImage: this.state.backgroundImage,\r\n        }\r\n        eventEmitter.emit('EventInstrumentPanel',{\r\n            componentStats: componentsPatternBackground,\r\n            targetSection: this.state.targetSection,\r\n            type: 'background',\r\n            id: this.state.id,\r\n        });\r\n        event.stopPropagation();\r\n    };\r\n\r\n    changeColor = eventItem => {\r\n        this.setState({\r\n            ...this.state,\r\n            backgroundColor: eventItem.colorRGB\r\n        });\r\n    };\r\n\r\n    setBackgroundImage = event => {\r\n        const {urlFull} = event;\r\n        this.setState({\r\n            ...this.state,\r\n            backgroundImage: urlFull,\r\n        });\r\n    };\r\n\r\n    render(){\r\n            if (this.props.mode === 'dev'){\r\n        return (\r\n            <Background\r\n                key = {this.state.id}\r\n                ref  = {this.boxComponentRef}\r\n                onDoubleClick={this.openBgInstruments}\r\n                data-name = {this.state.targetSection}\r\n                backgroundColor = {this.state.backgroundColor}\r\n                backgroundImage = {this.state.backgroundImage}\r\n                width = {this.state.width}\r\n                height = {this.state.height}\r\n            >\r\n                {this.props.children}\r\n            </Background>\r\n        )\r\n    } else if (this.props.mode === 'production'){\r\n\r\n        return (\r\n            <Background\r\n                key = {this.state.id}\r\n                ref  = {this.boxComponentRef}\r\n                data-name = {this.state.targetSection}\r\n                backgroundColor = {this.state.backgroundColor}\r\n                backgroundImage = {this.state.backgroundImage}\r\n                width = {this.state.width}\r\n                height = {this.state.height}\r\n            >\r\n            {this.props.children}\r\n            </Background>\r\n        )\r\n    }\r\n\r\n    }\r\n\r\n    componentDidUpdate = () => {\r\n        this.saveDataParent();\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.saveDataParent();\r\n        controllerStream.on(`EventChangeColorBackground${this.state.id}`, this.changeColor);\r\n        controllerStream.on(`EventSetBackgroundImage${this.state.id}`, this.setBackgroundImage);\r\n    };\r\n\r\n    componentWillUnmount = () => {\r\n        controllerStream.off(`EventChangeColorBackground${this.state.id}`, this.changeColor);\r\n        controllerStream.off(`EventSetBackgroundImage${this.state.id}`, this.setBackgroundImage);\r\n    };\r\n};\r\n\r\n\r\n\r\nexport default BackgroundComponent;","import React, {Fragment} from 'react';\r\nimport eventEmitter from '../../../EventEmitter';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport BackgroundComponent from '../components/Background';\r\nimport Loader from '../../loading/Loader';\r\n\r\nimport './MainBackground.scss';\r\n\r\nclass MainBackground extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        countComponents: PropTypes.number.isRequired, /** @Number last project */\r\n        menuActive: PropTypes.bool, /** @Bool active menu or unactive */\r\n        id: PropTypes.string.isRequired, /** @id current project */\r\n    };\r\n\r\n    state = {\r\n        targetSection: this.props.id,\r\n        editRedy: false,\r\n        component: null,\r\n        children: null,\r\n    };\r\n\r\n    changeMode = () => {\r\n        if (!this.state.editStart || this.props.id !== this.props.editComponentName) {\r\n            this.setState({\r\n                ...this.state,\r\n                editStart: true\r\n            }, () =>\r\n            eventEmitter.emit('EventModeEdit', {\r\n                ...this.state,\r\n                editStart: true,\r\n                targetSection: this.state.targetSection,\r\n            }));\r\n        }\r\n    };\r\n\r\n    refSection = null;\r\n    refSectionFunc = node => node ? this.refSection = {data: node.getBoundingClientRect(), node: node} : node;\r\n\r\n    render() {\r\n\r\n        if (this.props.mode === 'dev' && this.state.component){\r\n            return (\r\n                <Fragment>\r\n                    <section\r\n                        key = {this.props.sectionNumber}\r\n                        className = {`element${this.props.sectionNumber}`} \r\n                        ref={this.refSectionFunc}\r\n                        data-class = 'editable' \r\n                        onClick = {this.changeMode}\r\n                    >\r\n                        <BackgroundComponent \r\n                            mode = {this.props.mode}\r\n                            sectionNumber = {this.props.sectionNumber}\r\n                            countSection = {this.props.countSection}\r\n                            {...this.state.component}\r\n                        >\r\n                            {this.state.children || null}\r\n                        </BackgroundComponent>\r\n                        {!this.state.editStart &&\r\n                            <div className = 'warningEdit'><p>Click for start edit</p></div>\r\n                        }\r\n                    </section>\r\n                </Fragment>\r\n            );\r\n        } else if (this.props.mode === 'production' && this.state.component){\r\n            return (\r\n                <Fragment>\r\n                    <section \r\n                        key = {this.props.sectionNumber}\r\n                        ref={this.refSectionFunc} \r\n                        data-class = 'production'\r\n                    >\r\n                        <BackgroundComponent\r\n                            key = {this.props.sectionNumber}\r\n                            mode = {this.props.mode}\r\n                            sectionNumber = {this.props.sectionNumber}\r\n                            {...this.state.component}\r\n                        >\r\n                        {this.state.children || null}\r\n                        </BackgroundComponent>\r\n                    </section>\r\n                </Fragment>\r\n            );\r\n        }\r\n        else return <Loader type = {`${this.props.mode} components`} />;\r\n    }\r\n\r\n\r\n    componentDidMount = () => {\r\n        if (!this.state.component){\r\n            let component = this.props.currentProjectsData.components.find(item =>\r\n                                            item.targetSection === this.props.id);\r\n            const children = this.props.componentJSX.filter(item => \r\n                item.targetSection === this.props.id && item.id !== component.id)\r\n                            .map(item => item.component);\r\n           this.setState({\r\n               ...this.state,\r\n               component: component,\r\n               children: children,\r\n           });\r\n        }\r\n    }\r\n\r\n    componentDidUpdate = (prevProps) => {\r\n        const needUpdate = this.props.countComponents !== prevProps.countComponents;\r\n        if (!this.state.component){\r\n            let component = this.props.currentProjectsData.components.find(item =>\r\n                                            item.targetSection === this.props.id);\r\n            const children = this.props.componentJSX.filter(item => item.targetSection === this.props.id)\r\n                            .map(item => item.component);\r\n           this.setState({\r\n               ...this.state,\r\n               component: component,\r\n               children: children,\r\n           });\r\n        }\r\n        if (needUpdate){\r\n            const children = this.props.componentJSX.filter(item => item.targetSection === this.props.id)\r\n            children && this.setState({...this.state,children: children.map(item => item.component) });\r\n        }\r\n    }\r\n}\r\nexport default MainBackground;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport MainBackground from './MainBackground/MainBackground';\r\n\r\n\r\nconst Section = props => {\r\n    if (props.mode === 'dev'){\r\n    const {currentProjectsData} = props.userData;\r\n    const section = currentProjectsData.sectionsProject;\r\n\r\n            return section.map((item,i) => {\r\n                return (\r\n                        <MainBackground\r\n                            key = {item}\r\n                            componentJSX = {props.componentJSX}\r\n                            currentProjectsData = {currentProjectsData}\r\n                            editComponentName = {props.editComponentName}\r\n                            countComponents = {props.componentJSX.length}\r\n                            menuActive = {props.menuActive}\r\n                            sizeParentBox = {props.sizeParentBox}\r\n                            id = {item}\r\n                            countSection = {currentProjectsData.sectionsProject.length}\r\n                            sectionNumber = {i}\r\n                            mode = {props.mode}\r\n                        />\r\n                );\r\n            });\r\n    } else if (props.mode === 'production'){\r\n       const {section} = props;\r\n       const {currentProjectsData} = props;\r\n        return section.map((item,i) => {\r\n            return (\r\n                    <MainBackground\r\n                        key = {item}\r\n                        componentJSX = {props.componentsProdJSX}\r\n                        currentProjectsData = {currentProjectsData}\r\n                        editComponentName = {props.editComponentName}\r\n                        countComponents = {props.componentsProdJSX.length}\r\n                        sizeParentBox = {props.sizeParentBox}\r\n                        id = {item}\r\n                        sectionNumber = {i}\r\n                        mode = {props.mode}\r\n                    />\r\n            );\r\n        });\r\n    }\r\n}\r\n\r\nSection.propTypes = {\r\n    componentJSX: PropTypes.array, /// array with jsx components\r\n    editComponentName: PropTypes.string, // name current edit component\r\n    menuActive: PropTypes.bool, // build menu\r\n    mode: PropTypes.string.isRequired, // curent mode\r\n    sizeParentBox: PropTypes.object, // data with size main component\r\n    userData: PropTypes.object // users data\r\n}\r\n\r\nexport default Section;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport eventEmitter,{controllerStream} from '../../../EventEmitter';\r\nimport styled from 'styled-components';\r\n\r\n\r\nconst InputComponent = styled.input.attrs(props => {\r\n    if (props.mode !== 'production')\r\n    return ({\r\n        style: {\r\n            zIndex: props.indexZ ? '9999' : null,\r\n            left: props.coordX ? props.coordX : '45%',\r\n            top:  props.coordY ? props.coordY : '0%',\r\n        }\r\n    })\r\n})`\r\n    width: ${props => props.size ? props.size.w + 'px' : null};\r\n    color: white;\r\n    height: ${props => props.size ? props.size.h + 'px' : null};\r\n    font-size: ${props => props.fontSize ? props.fontSize + 'px' : null};\r\n    position: absolute;\r\n    background-color: ${props => props.color || null};\r\n    border: ${props => `1px solid ${props.color}`};\r\n    border-radius: ${props => props.borderRadius ? props.borderRadius + 'px' : null};\r\n    white-space: normal;\r\n    font-weight: bold;\r\n    transition: .3s transform linear;\r\n\r\n    :active {\r\n        border: ${props =>`2px dotted ${props.color}`};\r\n        transform: scale(1.05);\r\n    }\r\n`;\r\n\r\nconst ProductionStyle = styled(InputComponent)`\r\n    left: ${props => props.coordX ? props.coordX : '45%'};\r\n    top:  ${props => props.coordY ? props.coordY : '0%'};\r\n`;\r\n\r\n\r\nclass Input extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        id: PropTypes.oneOfType([\r\n            PropTypes.string,\r\n            PropTypes.number\r\n        ]).isRequired,\r\n        targetSection: PropTypes.string.isRequired,\r\n        sizeParentBox: PropTypes.object,\r\n    }\r\n\r\n    state = {\r\n        id: this.props.id,\r\n        istrumentsActive: false,\r\n        getSizeBool: false,\r\n        countSection: 0,\r\n        borderRadius: this.props.borderRadius,\r\n        sectionNumber: 0,\r\n        typeInput: this.props.typeInput || 'button',\r\n        sizeParentBox: this.props.sizeParentBox,\r\n        targetSection: this.props.targetSection,\r\n        size: this.props.size && this.props.size.w ? this.props.size : {w: '100', h:'50'},\r\n        fontSize: this.props.fontSize || 20,\r\n        color: this.props.color || null,\r\n        shiftCoords: null,\r\n        content: this.props.content || 'Input',\r\n        posInput: this.props.coords.x ? {x: this.props.coords.x, y: this.props.coords.y} : null,\r\n        startDragNdrop: false,\r\n    }\r\n\r\n    openInputInstruments = event => {\r\n\r\n        const componentsPatternImage = {\r\n            id: this.state.id,\r\n            targetSection: this.state.targetSection,\r\n            typeInput: this.state.typeInput,\r\n            type: 'input',\r\n            color: this.state.color,\r\n            borderRadius: this.state.borderRadius,\r\n            zIndex: null,\r\n            size: {...this.state.size},\r\n            fontSize: this.state.fontSize,\r\n            content: this.state.content,\r\n            coords: {...this.state.posInput}, // x, y\r\n        }\r\n\r\n        eventEmitter.emit(`EventInstrumentPanel`,{\r\n            componentStats: componentsPatternImage,\r\n            targetSection: this.state.targetSection,\r\n            id: this.state.id,\r\n            sizeTextValue: this.state.size\r\n        });\r\n        this.setState({...this.state, istrumentsActive: true});\r\n        event.stopPropagation();\r\n    };\r\n\r\n    saveCoords = event => {\r\n        if (event.nativeEvent.which !== 1) return false;\r\n        const element = this.refInput.getBoundingClientRect();\r\n\r\n        const cords = {\r\n            left: element.left,\r\n            top: element.top,\r\n            width: element.right - element.left,\r\n            height: element.bottom - element.top\r\n        }\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            shiftCoords: {x: event.clientX - cords.left, y: event.clientY - cords.top},\r\n            startDragNdrop: !this.state.startDragNdrop ? true : false\r\n        });\r\n\r\n        event.stopPropagation();\r\n    };\r\n\r\n    changeSize = eventSize => {\r\n        this.setState({...this.state, size: eventSize.size});\r\n    };\r\n\r\n    changeColor = colorRGB => {\r\n\r\n        if (typeof colorRGB === 'string')\r\n            this.setState({\r\n                ...this.state,\r\n                color: colorRGB\r\n            });\r\n    };\r\n\r\n    changeSizeText = eventSize => {\r\n        this.setState({...this.state, fontSize: eventSize.size});\r\n    };\r\n\r\n    setBorderRadius = eventItem => {\r\n        let radius = eventItem.borderRadius > 200 ? 200 : eventItem.borderRadius;\r\n        radius = eventItem.borderDown < 0 ? 0 : eventItem.borderRadius;\r\n            this.setState({\r\n                ...this.state,\r\n                borderRadius: radius\r\n            });\r\n    };\r\n\r\n    changeContent = eventItem => {\r\n        let booldContent = eventItem.content || eventItem.content === '';\r\n        if (booldContent)\r\n            this.setState({\r\n                ...this.state,\r\n                content: eventItem.content\r\n            });\r\n    }\r\n\r\n\r\n\r\n    checkPivotPosition = (coordX, coordY) => {\r\n\r\n        const element = this.refInput.getBoundingClientRect();\r\n        const borderTopLeft = 0;\r\n        const borderDown = 800 - element.height;\r\n        const borderRight = this.props.sizeParentBox.width - element.width;\r\n\r\n        if (coordY < borderTopLeft) coordY = borderTopLeft;\r\n        if (coordY > borderDown) coordY = borderDown;\r\n        if (coordX < borderTopLeft) coordX = borderTopLeft;\r\n        if (coordX > borderRight) coordX = borderRight;\r\n\r\n        return {x: coordX, y: coordY};\r\n    }\r\n\r\n\r\n    move = (x,y) => this.setState({...this.state, posInput: {x: x, y: y}});\r\n\r\n    moveInput = event => {\r\n\r\n        if (this.state.startDragNdrop && this.state.istrumentsActive){\r\n            let num = this.state.sectionNumber;\r\n            if (this.state.sectionNumber === 1 && this.state.countSection-1 === this.state.sectionNumber)  \r\n                num = this.state.sectionNumber + 1;\r\n            let xItem = event.clientX - (this.props.sizeParentBox.left  * num);\r\n            let yItem = event.clientY - (this.props.sizeParentBox.top * num);\r\n\r\n            let coordX = xItem - this.state.shiftCoords.x;\r\n            let coordY = yItem - this.state.shiftCoords.y;\r\n\r\n            let coords = this.checkPivotPosition(coordX,coordY);\r\n\r\n            let convertToPercentX = coords.x * 100 / this.state.sizeParentBox.width;\r\n            let convertToPercentY = coords.y * 100 / this.state.sizeParentBox.height;\r\n\r\n            this.move(convertToPercentX.toFixed(2) + '%',\r\n                      convertToPercentY.toFixed(2) + '%');\r\n    }\r\n        event.stopPropagation();\r\n    };\r\n\r\n    stopDragNdrop = event => {\r\n        if (this.state.startDragNdrop) {\r\n            this.setState({...this.state, startDragNdrop: false})\r\n            controllerStream.emit(`EventUpdatePosition${this.state.id}`, this.state.posInput);\r\n        }\r\n        event.stopPropagation();\r\n    };\r\n    //currentProjectsData.sectionsProject.length\r\n\r\n    saveSize = event => {\r\n        const {size} = event;\r\n        if (!this.state.getSizeBool){\r\n        this.setState({\r\n            ...this.state,\r\n            getSizeBool: true,\r\n            countSection: event.countSection,\r\n            sectionNumber: event.sectionNumber,\r\n            sizeParentBox: {width: size.width, height: size.height}});\r\n        } else controllerStream.off(`EventSaveWidth${this.state.targetSection}`,this.saveSize);\r\n    }\r\n\r\n    setWidth = eventItem => {\r\n        const {width} = eventItem;\r\n        this.setState({...this.state, \r\n            size: {\r\n                ...this.state.size,\r\n                w: width,\r\n            }\r\n        });\r\n    }\r\n\r\n    setType = eventItem => {\r\n        this.setState({\r\n            ...this.state, \r\n            typeInput: eventItem\r\n        });\r\n    }\r\n\r\n    setHeight = eventItem => {\r\n        const {height} = eventItem;\r\n        this.setState({...this.state, \r\n            size: {\r\n                ...this.state.size,\r\n                h: height,\r\n            }\r\n        });\r\n    }\r\n\r\n    refInput = null;\r\n    refInputComponent = node => this.refInput = node;\r\n\r\n    render(){\r\n\r\n        if (this.props.mode === 'dev'){\r\n            return (\r\n                <InputComponent\r\n                    type = {this.state.typeInput}\r\n                    value = {this.state.content}\r\n                    ref = {this.refInputComponent}\r\n                    size = {this.state.size}\r\n                    color = {this.state.color}\r\n                    borderRadius = {this.state.borderRadius}\r\n                    fontSize = {this.state.fontSize}\r\n                    onClick = {this.openInputInstruments}\r\n                    onMouseDown = {this.saveCoords}\r\n                    onMouseMove= {this.moveInput}\r\n                    onMouseLeave = {this.stopDragNdrop}\r\n                    onMouseUp = {this.stopDragNdrop}\r\n                    onDragStart = {this.stop}\r\n                    coordX = {this.state.posInput ? this.state.posInput.x : null}\r\n                    coordY = {this.state.posInput ? this.state.posInput.y : null}\r\n                    indexZ = {this.state.startDragNdrop}\r\n                    data-imagecomponentwrapper\r\n                />\r\n            )\r\n        } else if (this.props.mode === 'production'){\r\n\r\n            return (\r\n                <ProductionStyle\r\n                    type = {this.state.typeInput}\r\n                    value = {this.state.content}\r\n                    ref = {this.refInputComponent}\r\n                    size = {this.state.size}\r\n                    color = {this.state.color}\r\n                    fontSize = {this.state.fontSize}\r\n                    borderRadius = {this.state.borderRadius}\r\n                    coordX = {this.state.posInput ? this.state.posInput.x : null}\r\n                    coordY = {this.state.posInput ? this.state.posInput.y : null}\r\n                    indexZ = {this.state.startDragNdrop}\r\n                    mode = {this.props.mode}\r\n                />\r\n            )\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        controllerStream.on(`EventSaveWidth${this.state.targetSection}`, this.saveSize);\r\n        controllerStream.on(`EventSetBorderRadius${this.state.id}`, this.setBorderRadius);\r\n        controllerStream.on(`EventChangecolor${this.state.id}`, this.changeColor);\r\n        controllerStream.on(`EventChangeSize${this.state.id}`, this.changeSize);\r\n        controllerStream.on(`EventChangeSizeText${this.state.id}`, this.changeSizeText);\r\n        controllerStream.on(`EventChangeContentText${this.state.id}`, this.changeContent);\r\n        controllerStream.on(`EventSetWidth${this.state.id}`, this.setWidth);\r\n        controllerStream.on(`EventSetType${this.state.id}`, this.setType);\r\n        controllerStream.on(`EventSetHeight${this.state.id}`, this.setHeight);\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        controllerStream.off(`EventSaveWidth${this.state.targetSection}`,this.saveSize);\r\n        controllerStream.off(`EventSetBorderRadius${this.state.id}`, this.setBorderRadius);\r\n        controllerStream.off(`EventChangeSize${this.state.id}`, this.changeSize);\r\n        controllerStream.off(`EventChangeSizeText${this.state.id}`, this.changeSizeText);\r\n        controllerStream.off(`EventChangeContentText${this.state.id}`, this.changeContent);\r\n        controllerStream.off(`EventChangecolor${this.state.id}`, this.changeColor);\r\n        controllerStream.off(`EventSetWidth${this.state.id}`, this.setWidth);\r\n        controllerStream.off(`EventSetType${this.state.id}`, this.setType);\r\n        controllerStream.off(`EventSetHeight${this.state.id}`, this.setHeight);\r\n    }\r\n}\r\n\r\nexport default Input;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport eventEmitter,{controllerStream} from '../../../EventEmitter';\r\nimport styled from 'styled-components';\r\n\r\nconst WrapperMedia = styled.div.attrs(props => {\r\n    if (props.mode !== 'production')\r\n    return ({\r\n        style: {\r\n            zIndex: props.indexZ ? '9999' : null,\r\n            left: props.coordX ? props.coordX : '45%',\r\n            top:  props.coordY ? props.coordY : '0%',\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            padding: props.mode === 'dev' ? '40px' : null\r\n        }\r\n    })\r\n})`\r\n    width: ${props => props.size.w ? props.size.w + '%' : '30%'};\r\n    height: ${props => props.size.h ? props.size.h + '%' : '50%'};\r\n    position: absolute;\r\n    background: ${props => props.mode === 'dev' ? `url(${process.env.PUBLIC_URL}/img/media.svg)` : null};\r\n    background-size: cover;\r\n    border: ${props => props.mode === 'dev' ? `1px solid red` : null};\r\n    padding: 10px;\r\n`;\r\nconst Media = styled.iframe`\r\n    width: 100%;\r\n    height: 100%;\r\n    z-index: ${props => props.zIndex ? '0' : '-1'};\r\n`;\r\n\r\nconst ProductionStyle = styled(WrapperMedia)`\r\n    left: ${props => props.coordX ? props.coordX : '45%'};\r\n    top:  ${props => props.coordY ? props.coordY : '0%'};\r\n`;\r\n\r\nclass MediaComponent extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        id: PropTypes.oneOfType([\r\n            PropTypes.string,\r\n            PropTypes.number\r\n        ]).isRequired,\r\n        targetSection: PropTypes.string.isRequired,\r\n        sizeParentBox: PropTypes.object,\r\n        content: PropTypes.string,\r\n    }\r\n\r\n    state = {\r\n        targetSection: this.props.targetSection,\r\n        id : this.props.id,\r\n        sizeParentBox: this.props.sizeParentBox,\r\n        shiftCoords: null,\r\n        countSection: 0,\r\n        size: this.props.size ? this.props.size : {w: null, h: null},\r\n        posMedia: this.props.coords.x ? {x: this.props.coords.x, y: this.props.coords.y} : null,\r\n        startDragNdrop: false,\r\n        istrumentsActive: false,\r\n        drawContent: false,\r\n        sectionNumber: this.props.sectionNumber,\r\n        content: this.props.content ? this.props.content : null\r\n    }\r\n\r\n    openMediaInstruments = event => {\r\n\r\n        const componentsPatternMedia = {\r\n            id: this.state.id,\r\n            size: this.state.size,\r\n            targetSection: this.state.targetSection,\r\n            type: 'media',\r\n            zIndex: null,\r\n            content: this.state.content,\r\n            coords: {...this.state.posMedia}, // x, y\r\n        }\r\n\r\n        eventEmitter.emit('EventInstrumentPanel',{\r\n            componentStats: componentsPatternMedia,\r\n            targetSection: this.state.targetSection,\r\n            id: this.state.id,\r\n            size: this.state.size,\r\n        });\r\n        this.setState({...this.state, istrumentsActive: true});\r\n        event.stopPropagation();\r\n    }\r\n\r\n    saveCoords = event => {\r\n        if (event.nativeEvent.which !== 1) return false;\r\n        const element = this.refMedia.getBoundingClientRect();\r\n        const cords = {\r\n            left: element.left,\r\n            top: element.top,\r\n            width: element.right - element.left,\r\n            height: element.bottom - element.top\r\n        }\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            shiftCoords: {x: event.clientX - cords.left, y: event.clientY - cords.top},\r\n            startDragNdrop: !this.state.startDragNdrop ? true : false\r\n        });\r\n\r\n        event.stopPropagation();\r\n    };\r\n\r\n    setWidth = eventItem => {\r\n        const {width} = eventItem;\r\n        this.setState({...this.state, \r\n            size: {\r\n                ...this.state.size,\r\n                w: width,\r\n            }\r\n        });\r\n    }\r\n\r\n    setHeight = eventItem => {\r\n        const {height} = eventItem;\r\n        this.setState({...this.state, \r\n            size: {\r\n                ...this.state.size,\r\n                h: height,\r\n            }\r\n        });\r\n    }\r\n\r\n    checkPivotPosition = (coordX, coordY) => {\r\n\r\n        const element = this.refMedia.getBoundingClientRect();\r\n        const borderTopLeft = 0;\r\n        const borderDown = 800 - element.height;\r\n        const borderRight = this.props.sizeParentBox.width - element.width;\r\n\r\n        if (coordY < borderTopLeft) coordY = borderTopLeft;\r\n        if (coordY > borderDown) coordY = borderDown;\r\n        if (coordX < borderTopLeft) coordX = borderTopLeft;\r\n        if (coordX > borderRight) coordX = borderRight;\r\n\r\n        return {x: coordX, y: coordY};\r\n    }\r\n\r\n\r\n    move = (x,y) => this.setState({...this.state, posMedia: {x: x, y: y}});\r\n\r\n    moveMedia = event => {\r\n\r\n        if (this.state.startDragNdrop && this.state.istrumentsActive){\r\n\r\n            let xItem = event.clientX - (this.props.sizeParentBox.left  * this.state.sectionNumber);\r\n            let yItem = event.clientY - (this.props.sizeParentBox.top * this.state.sectionNumber);\r\n\r\n            let coordX = xItem - this.state.shiftCoords.x;\r\n            let coordY = yItem - this.state.shiftCoords.y;\r\n\r\n            let coords = this.checkPivotPosition(coordX,coordY);\r\n\r\n            let convertToPercentX = coords.x * 100 / this.state.sizeParentBox.width;\r\n            let convertToPercentY = coords.y * 100 / this.state.sizeParentBox.height;\r\n\r\n            this.move(convertToPercentX.toFixed(2) + '%',\r\n                      convertToPercentY.toFixed(2) + '%');\r\n    }\r\n        event.stopPropagation();\r\n    };\r\n\r\n    stopDragNdrop = event => {\r\n        if (this.state.startDragNdrop) {\r\n            this.setState({...this.state, startDragNdrop: false})\r\n            controllerStream.emit(`EventUpdatePosition${this.state.id}`, this.state.posMedia);\r\n        }\r\n        event.stopPropagation();\r\n    };\r\n\r\n    setContent = event => {\r\n        const {iframe} = event;\r\n        this.setState({...this.state, content: iframe});\r\n    };\r\n\r\n\r\n    saveSize = event => {\r\n        const {size} = event;\r\n        if (!this.state.getSizeBool){\r\n        this.setState({\r\n            ...this.state,\r\n            getSizeBool: true,\r\n            countSection: event.countSection,\r\n            sectionNumber: event.sectionNumber + 1,\r\n            sizeParentBox: {width: size.width, height: size.height}});\r\n        } else controllerStream.off(`EventSaveWidth${this.state.targetSection}`,this.saveSize);\r\n    }\r\n\r\n    refMedia = null;\r\n    refMediaComponent = node => this.refMedia = node;\r\n\r\n    render(){\r\n        const url = 'https://www.youtube.com/embed/';\r\n\r\n        if (this.props.mode === 'dev'){\r\n            return (\r\n                <WrapperMedia\r\n                    ref = {this.refMediaComponent}\r\n                    onClick={this.openMediaInstruments}\r\n                    onMouseDown = {this.saveCoords}\r\n                    onMouseMove= {this.moveMedia}\r\n                    onMouseLeave = {this.stopDragNdrop}\r\n                    onMouseUp = {this.stopDragNdrop}\r\n                    onDragStart = {this.stop}\r\n                    mode = {this.props.mode}\r\n                    indexZ = {this.state.startDragNdrop}\r\n                    coordX = {this.state.posMedia ? this.state.posMedia.x : null}\r\n                    coordY = {this.state.posMedia ? this.state.posMedia.y : null}\r\n                    size = {this.state.size}\r\n                >\r\n                {!this.state.startDragNdrop ? \r\n                    <Media\r\n                        src= {this.state.content ? url + this.state.content : null }\r\n                        drawContent = {this.state.drawContent}\r\n                        width = {this.state.width} \r\n                        height = {this.state.height}\r\n                        zIndex = {this.state.content}\r\n                        allowfullscreen\r\n                    ></Media> : null\r\n                }\r\n                </WrapperMedia>\r\n            )\r\n        } else if (this.props.mode === 'production'){\r\n            return (\r\n                <ProductionStyle\r\n                    ref = {this.refMediaComponent}\r\n                    indexZ = {this.state.startDragNdrop}\r\n                    size = {this.state.size}\r\n                    coordX = {this.state.posMedia ? this.state.posMedia.x : null}\r\n                    coordY = {this.state.posMedia ? this.state.posMedia.y : null}\r\n                    mode = {this.props.mode}\r\n                >\r\n                {!this.state.startDragNdrop ? \r\n                    <Media\r\n                        src= {this.state.content ? url + this.state.content : null }\r\n                        drawContent = {this.state.drawContent}\r\n                        width = {this.state.width} \r\n                        height = {this.state.height}\r\n                        zIndex = {this.state.content}\r\n                        mode = {this.props.mode}\r\n                        allowfullscreen\r\n                    ></Media> : null\r\n                }\r\n                </ProductionStyle>\r\n            )\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        controllerStream.on(`EventSetContentMedia${this.state.id}`, this.setContent);\r\n        controllerStream.on(`EventSaveWidth${this.state.targetSection}`, this.saveSize);\r\n        controllerStream.on(`EventSetWidth${this.state.id}`, this.setWidth);\r\n        controllerStream.on(`EventSetHeight${this.state.id}`, this.setHeight); \r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        controllerStream.off(`EventSaveWidth${this.state.targetSection}`,this.saveSize);\r\n        controllerStream.off(`EventSetContentMedia${this.state.id}`, this.setContent);\r\n        controllerStream.off(`EventSetWidth${this.state.id}`, this.setWidth);\r\n        controllerStream.off(`EventSetHeight${this.state.id}`, this.setHeight); \r\n    }\r\n}\r\n\r\nexport default MediaComponent;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport eventEmitter,{controllerStream} from '../../../EventEmitter';\r\nimport styled from 'styled-components';\r\n\r\n\r\nconst WrapperImg = styled.div.attrs(props => {\r\n    if (props.mode !== 'production')\r\n    return ({\r\n        style: {\r\n            zIndex: props.indexZ ? '9999' : null,\r\n            transform: `rotateZ(${props.rotate}deg) scale(${props.scale})`,\r\n            left: props.coordX ? props.coordX : '45%',\r\n            top:  props.coordY ? props.coordY : '0',\r\n            transition: `transform  0.3s linear`,\r\n        }\r\n    })\r\n})`\r\n    width: ${props => props.size ? props.size.w + '%' : '30%'};\r\n    height: ${props => props.size ? props.size.h + '%' : '50%'};\r\n    position: absolute;\r\n`;\r\n\r\nconst ImageStyle = styled.img`\r\n    width: 100%;\r\n    height: 100%;\r\n    opacity: ${props => props.opacity};\r\n    border-radius: ${props => props.borderRadius}px;\r\n    position: absolute;\r\n`;\r\n\r\nconst ProductionStyle = styled(WrapperImg)`\r\n    left: ${props => props.coordX ? props.coordX : '50%'};\r\n    top:  ${props => props.coordY};\r\n    transform: rotate(${props => props.rotate}deg) scale(${props => props.scale});\r\n`;\r\n\r\nclass Image extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        id: PropTypes.oneOfType([\r\n            PropTypes.string,\r\n            PropTypes.number\r\n        ]).isRequired,\r\n        targetSection: PropTypes.string.isRequired,\r\n        sizeParentBox: PropTypes.object,\r\n    }\r\n\r\n    state = {\r\n        id: this.props.id,\r\n        istrumentsActive: false,\r\n        getSizeBool: false,\r\n        countSection: 0,\r\n        opacity: this.props.opacity || 1,\r\n        transformValue: this.props.rotate || 0,\r\n        scaleValue: this.props.scale || 1,\r\n        sectionNumber: 0,\r\n        borderRadius: this.props.borderRadius || 0,\r\n        sizeParentBox: this.props.sizeParentBox,\r\n        targetSection: this.props.targetSection,\r\n        path: this.props.image ? this.props.image : this.props.path,\r\n        size: this.props.size ? this.props.size : {w: 30, h: 50},\r\n        shiftCoords: null,\r\n        posImage: this.props.coords.x ? {x: this.props.coords.x, y: this.props.coords.y} : null,\r\n        startDragNdrop: false,\r\n    }\r\n\r\n    openImageInstruments = event => {\r\n\r\n        const componentsPatternImage = {\r\n            id: this.state.id,\r\n            targetSection: this.state.targetSection,\r\n            size: {...this.state.size},\r\n            type: 'image',\r\n            rotate: this.state.transformValue,\r\n            scale: this.state.scaleValue,\r\n            borderRadius: this.state.borderRadius,\r\n            opacity: this.state.opacity,\r\n            zIndex: null,\r\n            image: this.state.path,\r\n            coords: {...this.state.posImage}, // x, y\r\n        }\r\n\r\n        eventEmitter.emit(`EventInstrumentPanel`,{\r\n            componentStats: componentsPatternImage,\r\n            targetSection: this.state.targetSection,\r\n            id: this.state.id,\r\n            sizeTextValue: this.state.size\r\n        });\r\n        this.setState({...this.state, istrumentsActive: true});\r\n        event.stopPropagation();\r\n    };\r\n\r\n    saveCoords = event => {\r\n        if (event.nativeEvent.which !== 1) return false;\r\n        const element = this.refImage.getBoundingClientRect();\r\n\r\n        const cords = {\r\n            left: element.left,\r\n            top: element.top,\r\n            width: element.right - element.left,\r\n            height: element.bottom - element.top\r\n        }\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            shiftCoords: {x: event.clientX - cords.left, y: event.clientY - cords.top},\r\n            startDragNdrop: !this.state.startDragNdrop ? true : false\r\n        });\r\n\r\n        event.stopPropagation();\r\n    };\r\n\r\n    checkPivotPosition = (coordX, coordY) => {\r\n\r\n        const element = this.refImage.getBoundingClientRect();\r\n        const borderTopLeft = 0;\r\n        const borderDown = 800 - element.height;\r\n        const borderRight = this.props.sizeParentBox.width - element.width;\r\n\r\n        if (coordY < borderTopLeft) coordY = borderTopLeft;\r\n        if (coordY > borderDown) coordY = borderDown;\r\n        if (coordX < borderTopLeft) coordX = borderTopLeft;\r\n        if (coordX > borderRight) coordX = borderRight;\r\n\r\n        return {x: coordX, y: coordY};\r\n    }\r\n\r\n    rotateEvent = eventItem => {\r\n        const angle = eventItem.angle;\r\n        this.setState({\r\n            ...this.state,\r\n            transformValue: angle,\r\n        });\r\n    }\r\n\r\n    scaleEvent = eventItem => {\r\n        const scale = eventItem.scale;\r\n        this.setState({\r\n            ...this.state,\r\n            scaleValue: scale,\r\n        });\r\n    }\r\n\r\n    move = (x,y) => this.setState({...this.state, posImage: {x: x, y: y}});\r\n\r\n    moveText = event => {\r\n\r\n        if (this.state.startDragNdrop && this.state.istrumentsActive){\r\n            const element = this.refImage.getBoundingClientRect();\r\n            let xItem = event.clientX - (this.props.sizeParentBox.left  * this.state.sectionNumber);\r\n            let yItem = event.clientY - (this.props.sizeParentBox.top * this.state.sectionNumber);\r\n            let factorCoord = this.diffAngle(parseInt(this.state.transformValue),element.height,element.width);\r\n\r\n            let coordX = xItem - this.state.shiftCoords.x + factorCoord.xFacotr;\r\n            let coordY = yItem - 61 - this.state.shiftCoords.y + factorCoord.yFactor;\r\n\r\n            let coords = this.checkPivotPosition(coordX,coordY);\r\n\r\n            let convertToPercentX = coords.x * 100 / this.state.sizeParentBox.width;\r\n            let convertToPercentY = coords.y * 100 / this.state.sizeParentBox.height;\r\n\r\n            this.move(convertToPercentX.toFixed(2) + '%',\r\n                      convertToPercentY.toFixed(2) + '%');\r\n    }\r\n        event.stopPropagation();\r\n    };\r\n\r\n\r\n    diffAngle = (transform, height, width) => {\r\n\r\n        let powHeight = height**2;\r\n        let powWidth =  width**2;\r\n\r\n        let pythagoras = Math.sqrt(powHeight + powWidth) / 2;\r\n        let _angle = Math.atan(height / width);\r\n        let angle = Math.atan(width / height);\r\n\r\n        let _biasFactor = 1;\r\n        let biasFactor = 1;\r\n\r\n        if (transform < 0 || transform > 180)\r\n            _biasFactor = - 1;\r\n        if (transform > 90 && transform < 270)\r\n            biasFactor= -1;\r\n\r\n        transform = transform * (Math.PI/180);\r\n\r\n        let sinX = Math.sin(biasFactor * angle + _biasFactor * transform);\r\n        let sinY = Math.sin(biasFactor* _angle + _biasFactor * transform);\r\n\r\n        let xFacotr = pythagoras*(-Math.sin(angle)+sinX);\r\n        let yFactor = pythagoras*(-Math.sin(_angle)+sinY);\r\n\r\n        return {xFacotr, yFactor}\r\n    };\r\n\r\n    stopDragNdrop = event => {\r\n        if (this.state.startDragNdrop) {\r\n            this.setState({...this.state, startDragNdrop: false})\r\n            controllerStream.emit(`EventUpdatePosition${this.state.id}`, this.state.posImage);\r\n        }\r\n        event.stopPropagation();\r\n    };\r\n\r\n    setCurrentImage = event => {\r\n        const {urlFull} = event;\r\n        this.setState({...this.state, path: urlFull});\r\n    };\r\n\r\n    setWidth = eventItem => {\r\n        const {width} = eventItem;\r\n        this.setState({...this.state, \r\n            size: {\r\n                ...this.state.size,\r\n                w: width,\r\n            }\r\n        });\r\n    }\r\n\r\n    setHeight = eventItem => {\r\n        const {height} = eventItem;\r\n        this.setState({...this.state, \r\n            size: {\r\n                ...this.state.size,\r\n                h: height,\r\n            }\r\n        });\r\n    }\r\n\r\n    saveSize = event => {\r\n        const {size} = event;\r\n        if (!this.state.getSizeBool){\r\n        this.setState({\r\n            ...this.state,\r\n            getSizeBool: true,\r\n            countSection: event.countSection,\r\n            sectionNumber: event.sectionNumber,\r\n            sizeParentBox: {width: size.width, height: size.height}});\r\n        } else controllerStream.off(`EventSaveWidth${this.state.targetSection}`,this.saveSize);\r\n    }\r\n\r\n    changeSizeImage = eventItem => {\r\n        this.setState({...this.state, size: eventItem.size});\r\n    };\r\n\r\n    setBorderRadius = eventItem => {\r\n\r\n    let radius = eventItem.borderRadius > 200 ? 200 : eventItem.borderRadius;\r\n    radius = eventItem.borderDown < 0 ? 0 : eventItem.borderRadius;\r\n        this.setState({\r\n            ...this.state,\r\n            borderRadius: radius\r\n        });\r\n    };\r\n\r\n    setOpacity = eventItem => {\r\n        let opacity = eventItem.opacity > 1 ? 1 : eventItem.opacity;\r\n        opacity = eventItem.opacity < 0 ? 0 : eventItem.opacity;\r\n            this.setState({\r\n                ...this.state,\r\n                opacity: opacity\r\n            });\r\n    }\r\n\r\n    stopDrag = event => {\r\n        event.preventDefault();\r\n    }\r\n \r\n    refImage = null;\r\n    refImageComponent = node => this.refImage = node;\r\n\r\n    render(){\r\n\r\n        if (this.props.mode === 'dev'){\r\n            return (\r\n                <WrapperImg\r\n                ref = {this.refImageComponent}\r\n                size = {this.state.size}\r\n                rotate = {this.state.transformValue}\r\n                scale = {this.state.scaleValue}\r\n                onClick = {this.openImageInstruments}\r\n                onMouseDown = {this.saveCoords}\r\n                onMouseMove= {this.moveText}\r\n                onMouseLeave = {this.stopDragNdrop}\r\n                onMouseUp = {this.stopDragNdrop}\r\n                onDragStart = {this.stopDrag}\r\n                coordX = {this.state.posImage ? this.state.posImage.x : null}\r\n                coordY = {this.state.posImage ? this.state.posImage.y : null}\r\n                indexZ = {this.state.startDragNdrop}\r\n                data-imagecomponentwrapper\r\n                >\r\n                    <ImageStyle\r\n                        data-imagecomponent\r\n                        borderRadius = {this.state.borderRadius}\r\n                        onDragStart = {this.stopDrag}\r\n                        opacity = {this.state.opacity}\r\n                        src = {this.state.path}\r\n                        alt = 'img'\r\n                    />\r\n                </WrapperImg>\r\n            )\r\n        } else if (this.props.mode === 'production'){\r\n            return (\r\n                <ProductionStyle\r\n                ref = {this.refImageComponent}\r\n                size = {this.state.size}\r\n                rotate = {this.state.transformValue}\r\n                scale = {this.state.scaleValue}\r\n                mode = {this.props.mode}\r\n                coordX = {this.state.posImage ? this.state.posImage.x : null}\r\n                coordY = {this.state.posImage ? this.state.posImage.y : null}\r\n                indexZ = {this.state.startDragNdrop}\r\n                >\r\n                    <ImageStyle\r\n                        borderRadius = {this.state.borderRadius}\r\n                        opacity = {this.state.opacity}\r\n                        crossOrigin = \"anonymous\"\r\n                        src = {this.state.path}\r\n                        alt = 'img'\r\n                    />\r\n                </ProductionStyle>\r\n            )\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        controllerStream.on(`EventSetCurrentImage${this.state.id}`, this.setCurrentImage);\r\n        controllerStream.on(`EventChangeSize${this.state.id}`, this.changeSizeImage);\r\n        controllerStream.on(`EventSetOpacity${this.state.id}`, this.setOpacity);\r\n        controllerStream.on(`EventSetBorderRadius${this.state.id}`,this.setBorderRadius);\r\n        controllerStream.on(`EventSetWidth${this.state.id}`, this.setWidth);\r\n        controllerStream.on(`EventSetHeight${this.state.id}`, this.setHeight); \r\n        controllerStream.on(`EventResize${this.state.id}`,this.rotateEvent);\r\n        controllerStream.on(`EventScale${this.state.id}`,this.scaleEvent);\r\n        controllerStream.on(`EventSaveWidth${this.state.targetSection}`, this.saveSize);\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n       \r\n        controllerStream.off(`EventChangeSize${this.state.id}`, this.changeSizeImage);\r\n        controllerStream.off(`EventSetOpacity${this.state.id}`, this.setOpacity);\r\n        controllerStream.off(`EventSetBorderRadius${this.state.id}`,this.setBorderRadius);\r\n        controllerStream.off(`EventSetCurrentImage${this.state.id}`, this.setCurrentImage);\r\n        controllerStream.off(`EventSetWidth${this.state.id}`, this.setWidth);\r\n        controllerStream.off(`EventSetHeight${this.state.id}`, this.setHeight); \r\n        controllerStream.off(`EventResize${this.state.id}`,this.rotateEvent);\r\n        controllerStream.off(`EventScale${this.state.id}`,this.scaleEvent);\r\n        controllerStream.off(`EventSaveWidth${this.state.targetSection}`,this.saveSize);\r\n    }\r\n}\r\n\r\nexport default Image;","\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport eventEmitter,{controllerStream} from '../../../EventEmitter';\r\nimport Events from 'events';\r\nimport styled from 'styled-components';\r\n\r\nimport './components.scss';\r\n\r\n\r\n\r\nconst WrapperText = styled.div.attrs(props => {\r\n    if (props.mode !== 'production')\r\n    return ({\r\n        style: {\r\n            zIndex: props.indexZ ? '9999' : null,\r\n            transform: `rotateZ(${props.rotate}deg) scale(${props.scale})`,\r\n            left: props.coordX ? props.coordX : '50%',\r\n            top:  props.coordY,\r\n            transition: `transform  0.3s linear`,\r\n        }\r\n    })\r\n})`\r\n    position: absolute;\r\n    font-size: ${props => props.size ? props.size : '120px'};\r\n    color: ${props => props.textColor};\r\n    text-align: center;\r\n    margin: 0;\r\n    word-break: break-all;\r\n`;\r\n\r\nconst TextStyle = styled.p`\r\n    width: 100%;\r\n    height: 100%;\r\n    font-family: ${props => props.font};\r\n    text-align: center;\r\n    margin: 0;\r\n    user-select: none;\r\n`;\r\n\r\n\r\nconst ProductionStyle = styled(WrapperText)`\r\n    left: ${props => props.coordX ? props.coordX : '50%'};\r\n    top:  ${props => props.coordY};\r\n    transform: rotate(${props => props.rotate}deg) scale(${props => props.scale});\r\n`;\r\n\r\n\r\nclass TextComponent extends React.PureComponent {\r\n\r\n    resizeStream = new Events();\r\n\r\n    static propTypes = {\r\n        id: PropTypes.oneOfType([\r\n            PropTypes.string,\r\n            PropTypes.number\r\n        ]).isRequired,\r\n        targetSection: PropTypes.string.isRequired,\r\n        sizeParentBox: PropTypes.object,\r\n        mode: PropTypes.string.isRequired,\r\n    }\r\n\r\n    state = {\r\n        id: this.props.id,\r\n        istrumentsActive: false,\r\n        isHaveSize: false,\r\n        parent: this.props.sizeParentBox,\r\n        targetSection: this.props.targetSection,\r\n        colorText: this.props.color,\r\n        sizeText: this.props.fontSize || this.props.size,\r\n        shiftCoords: null,\r\n        position: this.props.coords,\r\n        transformValue: this.props.rotate || 0,\r\n        scaleValue: this.props.scale || 1,\r\n        font: this.props.font ? this.props.font : 'Arial',\r\n        startDragNdrop: false,\r\n        contentText: this.props.content ? this.props.content : null,\r\n        countSection: 0,\r\n        sectionNumber: 0,\r\n        getSizeBool: false,\r\n    }\r\n\r\n    openTitleInstruments = event => {\r\n         const componentsPatternText = {\r\n            id: this.state.id,\r\n            targetSection: this.state.targetSection,\r\n            type: 'text',\r\n            rotate: this.state.transformValue,\r\n            scale: this.state.scaleValue,\r\n            font: this.state.font,\r\n            color: this.state.colorText,\r\n            fontSize: this.state.sizeText || 120,\r\n            content: this.state.contentText,\r\n            coords: {...this.state.position}, // x, y\r\n        };\r\n        eventEmitter.emit(`EventInstrumentPanel`,{\r\n                type: 'text',\r\n                targetSection: this.state.targetSection,\r\n                id: this.state.id,\r\n                componentStats: componentsPatternText,\r\n                sizeTextValue: this.state.sizeText\r\n        });\r\n        this.setState({...this.state, istrumentsActive: true});\r\n        event.stopPropagation();\r\n    }\r\n\r\n    changeColorText = colorRGB => {\r\n        if (typeof colorRGB === 'string')\r\n            this.setState({\r\n                ...this.state,\r\n                colorText: colorRGB\r\n            });\r\n    };\r\n\r\n    changeSizeText = eventSize => {\r\n        this.setState({...this.state, sizeText: eventSize.size});\r\n    };\r\n\r\n    saveSize = event => {\r\n        const {size} = event;\r\n        if (!this.state.getSizeBool){\r\n        this.setState({\r\n            ...this.state,\r\n            getSizeBool: true,\r\n            countSection: event.countSection,\r\n            sectionNumber: event.sectionNumber,\r\n            parent: {width: size.width, height: size.height}});\r\n        } else controllerStream.off(`EventSaveWidth${this.state.targetSection}`,this.saveSize);\r\n    }\r\n\r\n    changeContentText = eventContent => {\r\n        let booldContent = eventContent.content || eventContent.content === '';\r\n        if (booldContent)\r\n            this.setState({\r\n                ...this.state,\r\n                contentText: eventContent.content\r\n            });\r\n    };\r\n\r\n    saveCoords = event => {\r\n        const element = this.refText.getBoundingClientRect();\r\n        const cords = {\r\n            left: element.left,\r\n            top: element.top,\r\n            width: element.right - element.left,\r\n            height: element.bottom - element.top\r\n        }\r\n\r\n        const resizeStart = event.target.classList[0] === 'resizeDoted'\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            shiftCoords: {x: event.clientX - cords.left, y: event.clientY - cords.top},\r\n            startDragNdrop: !this.state.startDragNdrop ? true : false,\r\n            resizeStart: resizeStart,\r\n        });\r\n\r\n        event.stopPropagation();\r\n    };\r\n\r\n    setFont = eventItem => {\r\n        this.setState({\r\n            ...this.state,\r\n            font: eventItem.font\r\n        });\r\n    };\r\n\r\n    checkPivotPosition = (coordX, coordY) => {\r\n        const element = this.refText.getBoundingClientRect();\r\n        const borderTopLeft = 0;\r\n        const borderDown = 800 - element.height;\r\n        const borderRight = this.props.sizeParentBox.width - element.width;\r\n\r\n        if (coordY < borderTopLeft) coordY = borderTopLeft;\r\n        if (coordY > borderDown) coordY = borderDown;\r\n        if (coordX < borderTopLeft) coordX = borderTopLeft;\r\n        if (coordX > borderRight) coordX = borderRight;\r\n\r\n        return {x: coordX, y: coordY};\r\n    }\r\n\r\n    move = (x,y) => this.setState({...this.state, position: {x: x, y: y}});\r\n\r\n    moveText = event => {\r\n        if (this.state.startDragNdrop && this.state.istrumentsActive){\r\n            const element = this.refText.getBoundingClientRect();\r\n            let sectionNum = this.state.sectionNumber === 0 ? 1 : this.state.sectionNumber;\r\n            let xItem = event.clientX - (this.props.sizeParentBox.left  * sectionNum);\r\n            let yItem = event.clientY - (this.props.sizeParentBox.top * sectionNum);\r\n            let factorCoord = this.diffAngle(parseInt(this.state.transformValue),element.height,element.width);\r\n\r\n            let coordX = xItem - this.state.shiftCoords.x + factorCoord.xFacotr;\r\n            let coordY = yItem - this.state.shiftCoords.y + factorCoord.yFactor;\r\n\r\n            let coords = this.checkPivotPosition(coordX,coordY);\r\n\r\n            let convertToPercentX = coords.x * 100 / this.state.parent.width;\r\n            let convertToPercentY = coords.y * 100 / this.state.parent.height;\r\n\r\n            this.move(convertToPercentX.toFixed(2) + '%',\r\n                      convertToPercentY.toFixed(2) + '%');\r\n        }\r\n        event.stopPropagation();\r\n    };\r\n\r\n\r\n    rotateEvent = eventItem => {\r\n        const angle = eventItem.angle;\r\n        this.setState({\r\n            ...this.state,\r\n            transformValue: angle,\r\n        });\r\n    }\r\n\r\n    scaleEvent = eventItem => {\r\n        const scale = eventItem.scale;\r\n        this.setState({\r\n            ...this.state,\r\n            scaleValue: scale,\r\n        });\r\n    }\r\n\r\n    diffAngle = (transform, height, width) => {\r\n\r\n        let powHeight = height**2;\r\n        let powWidth =  width**2;\r\n\r\n        let pythagoras = Math.sqrt(powHeight + powWidth) / 2;\r\n        let _angle = Math.atan(height / width);\r\n        let angle = Math.atan(width / height);\r\n\r\n        let _biasFactor = 1;\r\n        let biasFactor = 1;\r\n\r\n        if (transform < 0 || transform > 180)\r\n            _biasFactor = - 1;\r\n        if (transform > 90 && transform < 270)\r\n            biasFactor= -1;\r\n\r\n        transform = transform * (Math.PI/180);\r\n\r\n        let sinX = Math.sin(biasFactor * angle + _biasFactor * transform);\r\n        let sinY = Math.sin(biasFactor* _angle + _biasFactor * transform);\r\n\r\n        const xFacotr = pythagoras * (-Math.sin(angle) + sinX);\r\n        const yFactor = pythagoras * (-Math.sin(_angle) + sinY);\r\n\r\n        return {xFacotr, yFactor}\r\n    };\r\n\r\n\r\n    stopDragNdrop = event => {\r\n\r\n        if (this.state.startDragNdrop)\r\n            this.setState({...this.state, startDragNdrop: false},\r\n            () => controllerStream.emit(`EventUpdatePosition${this.state.id}`, this.state.position));\r\n        event.stopPropagation();\r\n    };\r\n\r\n    refText = null;\r\n    refTextComponent = node => this.refText = node;\r\n\r\n\r\n    render(){\r\n        if (this.props.mode === 'dev'){\r\n            return (\r\n                <WrapperText\r\n                    ref  = {this.refTextComponent}\r\n                    onClick={this.openTitleInstruments}\r\n                    textColor = {this.state.colorText ? this.state.colorText : 'red'}\r\n                    size = {this.state.sizeText ? this.state.sizeText + 'px' : '120px'}\r\n                    onMouseDown = {this.saveCoords}\r\n                    onMouseMove= {this.moveText}\r\n                    onMouseLeave = {this.stopDragNdrop}\r\n                    onMouseUp = {this.stopDragNdrop}\r\n                    rotate = {this.state.transformValue}\r\n                    scale = {this.state.scaleValue}\r\n                    coordX = {this.state.position ? this.state.position.x : null}\r\n                    coordY = {this.state.position ? this.state.position.y : null}\r\n                    indexZ = {this.state.startDragNdrop}\r\n                    data-textcomponent\r\n                >\r\n                    <TextStyle font = {this.state.font}>{this.state.contentText}</TextStyle>\r\n                </WrapperText>\r\n            ) \r\n        } else if (this.props.mode === 'production'){\r\n            return (\r\n                <ProductionStyle\r\n                    ref  = {this.refTextComponent}\r\n                    mode = {this.props.mode}\r\n                    scale = {this.state.scaleValue}\r\n                    rotate = {this.state.transformValue}\r\n                    textColor = {this.state.colorText ? this.state.colorText : 'red'}\r\n                    size = {this.state.sizeText ? this.state.sizeText + 'px' : '120px'}\r\n                    coordX = {this.state.position ? this.state.position.x : null}\r\n                    coordY = {this.state.position ? this.state.position.y : null}\r\n                    indexZ = {this.state.startDragNdrop}\r\n                >\r\n                    <TextStyle font = {this.state.font}>{this.state.contentText}</TextStyle>\r\n                </ProductionStyle>\r\n            )\r\n        }\r\n\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        controllerStream.on(`EventChangeColorText${this.state.id}`, this.changeColorText);\r\n        controllerStream.on(`EventSetFont${this.state.id}`, this.setFont);\r\n        controllerStream.on(`EventChangeSize${this.state.id}`, this.changeSizeText);\r\n        controllerStream.on(`EventChangeContentText${this.state.id}`, this.changeContentText);\r\n        controllerStream.on(`EventSaveWidth${this.state.targetSection}`,this.saveSize);\r\n        controllerStream.on(`EventResize${this.state.id}`,this.rotateEvent);\r\n        controllerStream.on(`EventScale${this.state.id}`,this.scaleEvent);\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        controllerStream.off(`EventChangeColorText${this.state.id}`, this.changeColorText);\r\n        controllerStream.off(`EventSetFont${this.state.id}`, this.setFont);\r\n        controllerStream.off(`EventChangeSize${this.state.id}`, this.changeSizeText);\r\n        controllerStream.off(`EventChangeContentText${this.state.id}`, this.changeContentText);\r\n        controllerStream.off(`EventSaveWidth${this.state.targetSection}`,this.saveSize);\r\n        controllerStream.off(`EventResize${this.state.id}`,this.rotateEvent);\r\n        controllerStream.on(`EventScale${this.state.id}`,this.scaleEvent);\r\n    }\r\n}\r\n\r\nexport default TextComponent;","import React from 'react';\r\n\r\nimport Input from './buildComponents/components/Input';\r\nimport Media from './buildComponents/components/Media';\r\nimport Image from './buildComponents/components/Image';\r\nimport TextComponent from './buildComponents/components/Text';\r\nimport BackgroundComponent from './buildComponents/components/Background';\r\n\r\nconst builderHOC = item => Component => {\r\n        /** Builder editable components */\r\n        if (item.type === 'background') Component = BackgroundComponent;\r\n        else if (item.type === 'input') Component = Input;\r\n        else if (item.type === 'media') Component = Media;\r\n        else if (item.type === 'image') Component = Image;\r\n        else if (item.type === 'text') Component = TextComponent;\r\n\r\n        return <Component key = { `${item.type}${item.id}`} {...item.props} />\r\n};\r\n\r\nexport default builderHOC;","import React,{Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\n/** Redux actions */\r\nimport {loadCurrentProjectAction, exitProjectAction} from '../../redux/actions';\r\n/* ------- Child components ------- */\r\nimport Section from '../../components/buildComponents/section';\r\nimport builderHOC from '../../components/builderHOC';\r\nimport Loader from '../../components/loading/Loader';\r\nimport Header from '../../components/header/Header';\r\n/* HOC */\r\nimport withFirebase from '../../components/withFirebase';\r\nimport './production.scss';\r\n\r\nclass Production extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        firebase: PropTypes.object,\r\n    }\r\n\r\n    state = {\r\n        idProject: parseInt(this.props.match.params.param), /** @Id project */\r\n        mode: 'production', /** @workMode */\r\n        projectEmpty: false, /** @Bool detected project undefiend */\r\n        isLoadComponents: true, /** @Bool load all necessary components  */\r\n        componentsProdJSX: [] /** @Array with JSX */\r\n    }\r\n\r\n    makeProduction = (array) => {\r\n        /* build components */\r\n        let {componentsProdJSX} = this.state;\r\n        let _components = [];\r\n\r\n        array.forEach(item => {\r\n\r\n            const itemHash = {\r\n                props: {\r\n                    ...item,\r\n                    mode: 'production',\r\n                },\r\n                type: item.type,\r\n                id: item.id,\r\n            }\r\n            const patternJSX = {\r\n                id: item.id,\r\n                targetSection: item.targetSection,\r\n                component: builderHOC(itemHash)(Fragment)\r\n            };\r\n                _components.push(patternJSX);\r\n        });\r\n            this.setState({\r\n                ...this.state,\r\n                isLoadComponents: false,\r\n                componentsProdJSX: [...componentsProdJSX, ..._components],\r\n            });\r\n    };\r\n\r\n    prodRef = null;\r\n    mainProductionRef  = node => node ?\r\n    this.prodRef = {data: node.getBoundingClientRect(), node: node} : node;\r\n\r\n    render(){\r\n\r\n        const {userData} = this.props;\r\n        const {currentProjectsData} = userData;\r\n        const section = currentProjectsData.sectionsProject;\r\n\r\n        if (this.state.projectEmpty) return <Redirect to = '/Cabinet' />\r\n\r\n        if (userData.active && currentProjectsData.loadProject){\r\n            return (\r\n                <Fragment>\r\n                    <Header key = 'Header' title = \"Constructor\" idUser = {userData.idUser} />\r\n                    <div\r\n                        ref = {this.mainProductionRef}\r\n                        className = 'Production'\r\n                        key = 'Production'\r\n                        >\r\n                        {!this.state.isLoadComponents ?\r\n                            section.length &&\r\n                                <Section \r\n                                    key = 'section'\r\n                                    mode = {this.state.mode}\r\n                                    currentProjectsData = {currentProjectsData}\r\n                                    componentsProdJSX = {this.state.componentsProdJSX}\r\n                                    section = {section}\r\n                                />\r\n                            : null\r\n                        }\r\n                    </div>\r\n                </Fragment>\r\n            )\r\n        } else if (!this.props.firebase.getCurrentUser()) return <Redirect to = '/' />\r\n        else return <Loader  key = 'Loader' path = '/img/loading.gif' type = 'production' />\r\n    }\r\n\r\n    componentDidUpdate = () => {\r\n        let {userData} = this.props;\r\n        let {currentProjectsData} = userData;\r\n\r\n        if (userData.active && !currentProjectsData.loadProject) {\r\n            /** load current project of user session active and load project - false */\r\n            const current =  userData.projects.find(item => item.id === this.state.idProject)\r\n            if (current)\r\n            this.props.dispatch(loadCurrentProjectAction({\r\n                id: current.id,\r\n                typeProject: current.type,\r\n                sectionsProject: [...current.sectionsProject],\r\n                components: [...current.components]\r\n            })) /* else redirect */\r\n            else this.setState({...this.state, projectEmpty: true});\r\n        }\r\n\r\n        if (this.state.isLoadComponents && currentProjectsData.loadProject)\r\n            /* if all components load build our JSX */\r\n            this.makeProduction(currentProjectsData.components);\r\n\r\n    }\r\n\r\n\r\n    componentDidMount = () => {\r\n        let {userData} = this.props;\r\n        let {currentProjectsData} = userData;\r\n\r\n        if (userData.active && !currentProjectsData.loadProject) {\r\n            /** if user active and project load - false */\r\n            const current =  userData.projects.find(item => item.id === this.state.idProject)\r\n            this.props.dispatch(loadCurrentProjectAction({\r\n                id: current.id,\r\n                sectionsProject: [...current.sectionsProject],\r\n                typeProject: current.type,\r\n                components: [...current.components]\r\n            })); /** else render loader */\r\n        };\r\n\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        let {userData} = this.props;\r\n        if (userData.active)  this.props.dispatch(exitProjectAction(true));\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        userData: {\r\n            active: state.cabinet.active,\r\n            idUser: state.cabinet.idUser,\r\n            projects: [...state.cabinet.projects],\r\n           currentProjectsData: {...state.builder}\r\n        },\r\n    }\r\n};\r\n\r\n  export default connect(mapStateToProps)(withFirebase(Production));","import React,{Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\n\r\n\r\nimport withFirebase from '../../components/withFirebase';\r\nimport Header from '../../components/header/Header';\r\nimport Loader from '../../components/loading/Loader';\r\n\r\nimport './about.scss';\r\n\r\nclass About extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        config: PropTypes.object.isRequired, /** @Config app */\r\n        firebase: PropTypes.object.isRequired, /** @firebase class for use firebase functions */\r\n        history: PropTypes.object, /** @Router HTML5 history */\r\n        location: PropTypes.object, /** @Router */\r\n        match: PropTypes.object, /** @Router */\r\n    }\r\n\r\n    state = {\r\n        config: this.props.config\r\n    };\r\n\r\n    render(){\r\n\r\n        let user = this.props.firebase.getCurrentUser();\r\n        if (user && this.props.idUser) {\r\n            const { config } = this.state;\r\n            return (\r\n                <Fragment>\r\n                    <Header title = {config.title} idUser = {user.uid} />\r\n                    <section className = 'About'>\r\n                        <div className = 'container'>\r\n                            <div className = 'col-12'>\r\n                                <div className = 'About__information'>\r\n                                <img alt = 'img'\r\n                                    className = 'information__logoAbout' \r\n                                    src = {process.env.PUBLIC_URL + '/img/about.jpg'}\r\n                                />\r\n                                    <p className ='developer'><span>Developer:</span>\r\n                                                            {config.about.developer}\r\n                                    </p>\r\n                                    <p className = 'year'><span>Year:</span> {config.about.year}</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </section>\r\n                </Fragment>\r\n            )\r\n        } else if (!user) return <Redirect to = { '/'} />\r\n        else return <Loader path = '/img/loading.gif' type = 'About' />\r\n\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n      idUser: state.cabinet.idUser,\r\n    }\r\n  };\r\n\r\nexport default connect(mapStateToProps)(withFirebase(About));","import {errorAction, loadUpdateCurrentProject} from '../actions';\r\n\r\nconst updateMiddleware = (item) => async (dispatch,getState, {firebase}) => {\r\n    /** Save new updates for projects */\r\n    let newProjects = item.projects.map(project => {\r\n        if (project.id === item.idProject) {\r\n            project.components = [...item.components]\r\n            project.sectionsProject = [...item.sectionsProject]\r\n        }\r\n        return project;\r\n    });\r\n    await firebase.db.collection(\"users\").doc(item.uid).update({\r\n        'projects': JSON.parse(JSON.stringify(newProjects))\r\n    })\r\n    .then(response => {\r\n        /** find and save updates */\r\n        let project = item.projects.find(itemdb => itemdb.id === item.idProject);\r\n        dispatch(loadUpdateCurrentProject({\r\n            components: [...project.components],\r\n            idProject: item.idProject,\r\n            sectionsProject: item.sectionsProject,\r\n        }))\r\n    })\r\n    .catch(error => dispatch(errorAction(error.message)));\r\n};\r\n\r\nexport default updateMiddleware;","import React from 'react';\r\nimport eventEmitter from '../EventEmitter';\r\nimport RenderInBrowser from 'react-render-in-browser';\r\nimport {animateScroll as scroll, scroller } from \"react-scroll\";\r\n\r\n\r\nconst withScroll = Component => {\r\n    return class ScrollMove extends React.PureComponent {\r\n\r\n        state = {\r\n            mode: 'default',\r\n            scrollConfig: {\r\n                duration: 1000,\r\n                delay: 50,\r\n                smooth: true,\r\n                offset: -60\r\n            },\r\n            position: 0,\r\n            positionCount: null\r\n\r\n        }\r\n\r\n        setStates = event => {\r\n            /** Count all positions */\r\n            this.setState({...this.state,positionCount: event});\r\n        }\r\n\r\n        blockMove = event => {\r\n            /** block for move */\r\n            this.setState({...this.state, mode: event})\r\n        }\r\n\r\n        moveLocation = event => {\r\n            /** Scrolling */\r\n            if (this.state.mode === 'default'){\r\n                const count = this.state.positionCount;\r\n                const moveDown = this.state.position < count && event.deltaY > 0;\r\n                const moveUp = event.deltaY < 0 && this.state.position > 0;\r\n                eventEmitter.emit('EventClosePanel',{close: false});\r\n\r\n                if (moveDown)\r\n                    this.setState({ position: this.state.position + 1},\r\n                        () => scroller.scrollTo(`element${this.state.position}`,this.state.scrollConfig));\r\n                    else if (moveUp){\r\n                        this.state.position === 1 &&\r\n                            this.setState({position: this.state.position - 1}, () => scroll.scrollToTop());\r\n                        this.state.position !== 1 &&\r\n                            this.setState({position: this.state.position - 1},\r\n                                () => scroller.scrollTo(`element${this.state.position}`,this.state.scrollConfig));\r\n                    }\r\n            }\r\n\r\n        }\r\n\r\n\r\n        render(){\r\n            return (\r\n                <RenderInBrowser except ie>\r\n                    <div key = 'moveScroll' onWheel = {this.moveLocation} onTouchStart = {() => false}\r\n                    >\r\n                        {<Component {...this.props} />}\r\n                    </div>\r\n                </RenderInBrowser>\r\n            )\r\n        }\r\n\r\n        componentDidMount = () => {\r\n            eventEmitter.on('EventBlockScroll', this.blockMove);\r\n            eventEmitter.on('EventSetState', this.setStates);\r\n        }\r\n\r\n        componentWillUnmount = () => {\r\n            eventEmitter.off('EventBlockScroll', this.blockMove);\r\n            eventEmitter.off('EventSetState', this.setStates);\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport default withScroll;","import React,{useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Viewer.scss';\r\n\r\nfunction Viewer(props){\r\n\r\n    let [mode] = useState(props.mode);\r\n    let [path] = useState(props.path);\r\n\r\n    const closeViewer = event => {\r\n        props.eventStreamBuild.emit(\"EventView\", { action: false, target: null});\r\n        event.stopPropagation();\r\n    }\r\n\r\n    return (\r\n        \r\n        <div onClick = {closeViewer} className = 'Viewer'>\r\n            {(mode === 'image' || mode === 'background') ? <img src = {path} alt = 'fullImage' /> \r\n            : \r\n            <iframe \r\n            src= {`https://www.youtube.com/embed/${props.iframe}`}\r\n            title = 'youtube'\r\n            frameBorder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" \r\n            allowFullScreen>\r\n            </iframe>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nViewer.propTypes = {\r\n    eventStreamBuild: PropTypes.object.isRequired, // events stream\r\n    mode: PropTypes.string, // use mode\r\n    path: PropTypes.string // path to data component\r\n}\r\n\r\nexport default Viewer;","import React,{Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {SketchPicker} from 'react-color';\r\n\r\n\r\nconst InputInstruments = props => {\r\n\r\n    let {colorPickerActive} = props.instrumentPanel;\r\n    let {content} = props.componentStats;\r\n    let {fontSize} = props.componentStats;\r\n    let {coords} = props.componentStats;\r\n    let {size} = props.componentStats;\r\n\r\n    let _content = content !== '' ? 'Input' : '';\r\n\r\n    return (\r\n        <Fragment>\r\n            <p className = 'titleInstument'>Position: </p>\r\n            <span className = 'textCoordsPanel'>\r\n            {coords.x ?\r\n                coords.x + ' / ' + coords.y : ' drop for active'}\r\n            </span>\r\n            <p className = 'titleInstument'>Color: </p>\r\n            <div className = 'controllersText'>\r\n                <input \r\n                    onClick = {props.cbSetColor}\r\n                    className = 'button_switch color_switch'\r\n                    type = 'button'\r\n                    value = 'color pick'\r\n                />\r\n            </div>\r\n                { colorPickerActive ?\r\n                    <div className ='wrapperColorPicker'>\r\n                        <SketchPicker\r\n                        onChangeComplete={props.cbHandleChangeComplete}\r\n                        color = {props.color ? props.color : 'white'}\r\n                        />\r\n                    </div>\r\n                    : null\r\n                }\r\n            <p className = 'titleInstument'>Size (%):</p>\r\n            <div className = 'controllersText'>\r\n                <input\r\n                    className = 'button_switch'\r\n                    onChange = {props.cbSetWidth}\r\n                    type=\"number\"\r\n                    min = '10' max = '200'\r\n                    value = {size.w ? size.w : 100}\r\n                />\r\n                <input \r\n                    className = 'button_switch'\r\n                    onChange = {props.cbSetHeight}\r\n                    type=\"number\"\r\n                    min = '10' max = '200'\r\n                    value = {size.h ? size.h : 50}\r\n                />\r\n            </div>\r\n            <p className = 'titleInstument'>Text size: </p>\r\n            <input \r\n                className = 'button_switch'\r\n                onChange = {props.cbSetSize}\r\n                type=\"number\"\r\n                min = '10' max = '200'\r\n                value = {fontSize ? fontSize : 21}\r\n            />\r\n            <p className = 'titleInstument'>Border radius: </p>\r\n            <input\r\n                onChange = {props.cbSetBorderRadius}\r\n                className = 'button_switch radius'\r\n                type=\"number\"\r\n                value = {props.componentStats.borderRadius ?\r\n                            props.componentStats.borderRadius : 10\r\n                        }\r\n                min = '10' max = '200'\r\n            />\r\n\r\n            <p className = 'titleInstument'>Type input: </p>\r\n            <select \r\n            value = {props.componentStats.typeInput} \r\n            onChange = {props.cbSetType}\r\n            className = 'button_switch button_switch_type'>\r\n                <option>button</option>\r\n                <option>text</option>\r\n                <option>password</option>\r\n            </select>\r\n            <p className = 'titleInstument'>Content: </p>\r\n            <input\r\n            className = 'button_switch'\r\n            onChange = {props.cbSetContent}\r\n            maxLength = '100'\r\n            type = 'text'\r\n            value = {content ? content : _content}\r\n        />\r\n            <input \r\n                onClick = {props.cbDelete}\r\n                className = 'instrumentPanel__deleteComponentButton'\r\n                type=\"button\"\r\n                value = 'delete'\r\n            />\r\n        </Fragment>\r\n    )\r\n};\r\n\r\nInputInstruments.propTypes = {\r\n    componentStats: PropTypes.object.isRequired, // object with current component data\r\n    cbSetColor: PropTypes.func.isRequired, // callback set color\r\n    cbHandleChangeComplete: PropTypes.func.isRequired, // callback state color picker\r\n    cbSetWidth: PropTypes.func.isRequired, // callback set width\r\n    cbSetHeight: PropTypes.func.isRequired, // callback set height\r\n    cbSetSize: PropTypes.func.isRequired, // callback set size\r\n    cbSetBorderRadius: PropTypes.func.isRequired, // callback set border-radius\r\n    cbSetContent: PropTypes.func.isRequired, // callback set content input\r\n    cbDelete: PropTypes.func.isRequired, // callback delete\r\n}\r\n\r\nexport default InputInstruments;","import React,{Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst MediaInstruments = props => {\r\n\r\n    let {size} = props.componentStats;\r\n    let {coords} = props.componentStats;\r\n\r\n    return (\r\n        <Fragment>\r\n            <p className = 'titleInstument'>Position: </p>\r\n            <span className = 'textCoordsPanel'>\r\n            {coords.x ?\r\n                coords.x + ' / ' + coords.y : ' drop for active'}\r\n            </span>\r\n            <p className = 'titleInstument'>Size (%):</p>\r\n            <div className = 'controllersText media'>\r\n                <input\r\n                    className = 'button_switch'\r\n                    onChange = {props.cbSetWidth}\r\n                    type=\"number\"\r\n                    min = '10' max = '100'\r\n                    value = {size.w ? size.w : 30}\r\n                />\r\n                <input \r\n                    className = 'button_switch'\r\n                    onChange = {props.cbSetHeight}\r\n                    type=\"number\"\r\n                    min = '10' max = '100'\r\n                    value = {size.h ? size.h : 50}\r\n                />\r\n            </div>\r\n            <p className = 'titleInstument'>Content: </p>\r\n            <input \r\n                onClick = {props.cbSearch}\r\n                className = 'ImageSearchButton'\r\n                type=\"button\"\r\n                value = 'search media'\r\n            />\r\n            <input \r\n                onClick = {props.cbDelete}\r\n                className = 'instrumentPanel__deleteComponentButton'\r\n                type=\"button\"\r\n                value = 'delete'\r\n            />\r\n        </Fragment>\r\n    )\r\n};\r\n\r\nMediaInstruments.propTypes = {\r\n    componentStats: PropTypes.object.isRequired, // object with current component data\r\n    cbSearch: PropTypes.func.isRequired, // callback search\r\n    cbSetWidth: PropTypes.func.isRequired, // callback set width\r\n    cbSetHeight: PropTypes.func.isRequired, // callback set height\r\n    cbDelete: PropTypes.func.isRequired, // callback delete\r\n}\r\n\r\nexport default MediaInstruments;","import React, {Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ImageInstruments = props => {\r\n\r\n    let {coords} = props.componentStats;\r\n    let {size} = props.componentStats;\r\n    let {rotate} = props.componentStats;\r\n    let {scale} = props.componentStats;\r\n    let fileRef = React.createRef();\r\n    return (\r\n        <Fragment>\r\n        <p className = 'titleInstument'>Position: </p>\r\n        <span className = 'textCoordsPanel'>\r\n        {coords.x ?\r\n            coords.x + ' / ' + coords.y : ' drop for active'}\r\n        </span>\r\n        <p className = 'titleInstument'>Size (%):</p>\r\n        <div className = 'controllersText'>\r\n            <input\r\n                className = 'button_switch size'\r\n                onChange = {props.cbSetWidth}\r\n                type=\"number\"\r\n                min = '10' max = '100'\r\n                value = {size.w ? size.w : 30}\r\n            />\r\n            <input \r\n                className = 'button_switch size'\r\n                onChange = {props.cbSetHeight}\r\n                type=\"number\"\r\n                min = '10' max = '100'\r\n                value = {size.h ? size.h : 30}\r\n            />\r\n        </div>\r\n        <p className = 'titleInstument'>Rotate/Scale:</p>\r\n        <div className = 'controllersText'>\r\n            <input\r\n            className = 'button_switch rotate'\r\n            onChange = {props.cbRotate}\r\n            type=\"number\"\r\n            min = '0' max = '360'\r\n            value = {rotate ? rotate : 0}\r\n            />\r\n            <input\r\n            className = 'button_switch scale'\r\n            onChange = {props.cbScale}\r\n            type=\"number\"\r\n            step = '0.1'\r\n            min = '0' max = '2'\r\n            value = {scale ? scale : 1}\r\n            />\r\n        </div>\r\n        <p className = 'titleInstument'>Border radius: </p>\r\n            <input\r\n                onChange = {props.cbSetBorderRadius}\r\n                className = 'button_switch radius'\r\n                type=\"number\"\r\n                value = {props.componentStats.borderRadius ?\r\n                            props.componentStats.borderRadius : 10\r\n                        }\r\n                min = '10' max = '200'\r\n            />\r\n            <p className = 'titleInstument titleInstrument__opacity'>Opacity: </p>\r\n            <input \r\n                onChange = {props.cbSetOpacity}\r\n                className = 'ImageSearchButton'\r\n                type=\"number\"\r\n                value = {props.componentStats.opacity ?\r\n                    props.componentStats.opacity : 1\r\n                }\r\n                step = '0.1'\r\n                min = '0' max = '1'\r\n            />\r\n            <p className = 'titleInstument titleInstrument__opacity'>Loader: </p>\r\n            <div className = 'controllersText'>\r\n                <div className = 'fileLoader'>\r\n                    <input \r\n                        onClick = {props.cbSearch}\r\n                        className = 'ImageSearchButton file'\r\n                        type=\"button\"\r\n                        value = 'search image'\r\n                    />\r\n                    <input\r\n                        ref = {fileRef}\r\n                        className = 'fileInput'\r\n                        onChange = {props.cbLoadFile}\r\n                        accept=\"image/*\"\r\n                        type=\"file\"\r\n                    />\r\n                    <input\r\n                        className = 'ImageSearchButton file'\r\n                        type = 'button'\r\n                        value = 'loading file'\r\n                    />\r\n\r\n                </div>\r\n            </div>\r\n            <input \r\n                onClick = {props.cbDelete}\r\n                className = 'instrumentPanel__deleteComponentButton'\r\n                type=\"button\"\r\n                value = 'delete'\r\n            />\r\n        </Fragment>\r\n    )\r\n\r\n}\r\n\r\nImageInstruments.propTypes = {\r\n    componentStats: PropTypes.object.isRequired, // object with current component data\r\n    cbSetWidth: PropTypes.func.isRequired, // callback set width\r\n    cbSetHeight: PropTypes.func.isRequired, // callback set height\r\n    cbSetBorderRadius: PropTypes.func.isRequired, // callback set border-radius\r\n    cbSetOpacity: PropTypes.func.isRequired, // callback set opacity\r\n    cbLoadFile: PropTypes.func.isRequired, // callback load file\r\n    cbSearch: PropTypes.func.isRequired, // callback search\r\n    cbDelete: PropTypes.func.isRequired, // callback delete\r\n}\r\n\r\nexport default ImageInstruments;","import React, {Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {SketchPicker} from 'react-color';\r\n\r\nconst BackgroundInstruments = props => {\r\n    return (\r\n        <Fragment>\r\n        <p className = 'titleInstument'>Color: </p>\r\n        <input\r\n            onClick = {props.cbSetColor}\r\n            className = 'button_switch Color'\r\n            type = 'button'\r\n            value = 'color pick'\r\n        />\r\n            { props.colorPickerActive ?\r\n                <SketchPicker\r\n                    onChangeComplete={props.cbHandleChangeComplete}\r\n                    color = {props.color ? props.color : 'white'}\r\n                />\r\n                : null\r\n            }\r\n            <input \r\n                onClick = {props.cbSearch}\r\n                className = 'ImageSearchButton'\r\n                type = 'button'\r\n                value = 'background-image'\r\n            />\r\n            <input \r\n                onClick = {props.cbDelete}\r\n                className = 'instrumentPanel__deleteComponentButton'\r\n                type=\"button\"\r\n                value = 'delete'\r\n            />\r\n        </Fragment>\r\n    )\r\n\r\n}\r\n\r\nBackgroundInstruments.propTypes = {\r\n    componentStats: PropTypes.object.isRequired, // object with current component data\r\n    cbSetColor: PropTypes.func.isRequired, // callback set color\r\n    cbHandleChangeComplete: PropTypes.func.isRequired, // callback picker state change\r\n    cbSearch: PropTypes.func.isRequired, // callback search\r\n}\r\n\r\nexport default BackgroundInstruments;","import React,{Fragment} from 'react';\r\nimport {SketchPicker} from 'react-color';\r\n\r\nconst TextInstruments = props => {\r\n\r\n\r\n        let {colorPickerActive} = props.instrumentPanel;\r\n        let {content} = props.componentStats;\r\n        let {fontSize} = props.componentStats;\r\n        let {coords} = props.componentStats;\r\n        let {rotate} = props.componentStats;\r\n        let {scale} = props.componentStats;\r\n        let _content = content !== '' ? 'Title' : '';\r\n        return (\r\n            <Fragment>\r\n            <p className = 'titleInstument'>Position: </p>\r\n            <span className = 'textCoordsPanel'>\r\n            {coords.x ?\r\n                coords.x + ' / ' + coords.y : ' drop for active'}\r\n            </span>\r\n            <p className = 'titleInstument'>Rotate/Scale:</p>\r\n            <div className = 'controllersText'>\r\n                <input\r\n                className = 'button_switch rotate'\r\n                onChange = {props.cbRotate}\r\n                type=\"number\"\r\n                min = '0' max = '360'\r\n                value = {rotate ? rotate : 0}\r\n                />\r\n                <input\r\n                className = 'button_switch scale'\r\n                onChange = {props.cbScale}\r\n                type=\"number\"\r\n                step = '0.1'\r\n                min = '0' max = '2'\r\n                value = {scale ? scale : 1}\r\n                />\r\n            </div>\r\n            <p className = 'titleInstument'>Color: </p>\r\n            <input \r\n                onClick = {props.cbSetColor}\r\n                className = 'button_switch color'\r\n                type = 'button'\r\n                value = 'color pick'\r\n            />\r\n            <p className = 'titleInstument'>Text size: </p>\r\n            <input \r\n                className = 'button_switch size'\r\n                onChange = {props.cbSetSize}\r\n                type=\"number\"\r\n                min = '10' max = '200'\r\n                value = {fontSize ? fontSize : 120}\r\n            />\r\n                { colorPickerActive ?\r\n                    <div className ='wrapperColorPicker text'>\r\n                        <SketchPicker\r\n                            onChangeComplete={props.cbHandleChangeComplete}\r\n                            color = {props.color ? props.color : 'red'}\r\n                        />\r\n                    </div>\r\n                    : null\r\n                }\r\n                <p className = 'titleInstument'>Font: </p>\r\n                <select \r\n                    value = {props.componentStats.font} \r\n                    onChange = {props.cbSetFont}\r\n                    className = 'button_switch font'\r\n                >\r\n                <option>Arial</option>\r\n                <option>Times</option>\r\n                <option>Georgia</option>\r\n                <option>Impact</option>\r\n                <option>Tahoma</option>\r\n                <option>Verdana</option>\r\n                <option>Comic</option>\r\n                </select>\r\n            <p className = 'titleInstument'>Content: </p>\r\n            <input\r\n                className = 'button_switch content'\r\n                onChange = {props.cbSetContent}\r\n                maxLength = '100'\r\n                type = 'text'\r\n                value = {content ? content : _content}\r\n            />\r\n            <input \r\n                onClick = {props.cbDelete}\r\n                className = 'instrumentPanel__deleteComponentButton'\r\n                type=\"button\"\r\n                value = 'delete'\r\n            />\r\n            </Fragment>\r\n        )\r\n}\r\n\r\nexport default TextInstruments;","import React from 'react';\r\nimport eventEmitter,{controllerStream} from '../../EventEmitter';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport InputInstruments from './InputTools/InputInstruments';\r\nimport MediaInstruments from './MediaTools/MediaInstruments';\r\nimport ImageInstruments from './ImageTools/ImageInstruments';\r\nimport BackgroundInstruments from './BackgroundTools/BackgroundInstruments';\r\nimport TextInstruments from './TextTools/TextInstruments';\r\nimport Icon from '../Icon/icon';\r\n\r\nimport './instrumentsPanel.scss';\r\n\r\n\r\n\r\nclass InstrumentsPanel extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        instrumentPanel:  PropTypes.object.isRequired, /** @Settings for panel and data about component */\r\n        editComponentName: PropTypes.string, /** @Name editable component */\r\n        eventStreamBuild: PropTypes.object.isRequired // stream events\r\n    };\r\n\r\n    state = {\r\n        instrumentPanel: {...this.props.instrumentPanel},\r\n        componentStats: this.props.componentStats,\r\n        images: null,\r\n    };\r\n\r\n\r\n    closePanel = event => {\r\n        this.props.eventStreamBuild.emit('EventClosePanel', {close: false});\r\n    };\r\n\r\n    setSize = event => {\r\n        let {id} = this.state.componentStats;\r\n        let size = event.target.value > 200 ? 200 : event.target.value;\r\n\r\n        if (this.state.componentStats.type !== 'input')\r\n        this.setState({\r\n            ...this.state, \r\n            instrumentPanel: {...this.state.instrumentPanel},\r\n            componentStats: {...this.state.componentStats,fontSize: size}\r\n        }, () => controllerStream.emit(`EventChangeSize${id}`, {\r\n                targetSection: this.state.editComponentName, size: size \r\n        }));\r\n        else this.setState({\r\n                ...this.state, \r\n                instrumentPanel: {...this.state.instrumentPanel},\r\n                componentStats: {...this.state.componentStats,fontSize: size}\r\n            }, () => controllerStream.emit(`EventChangeSizeText${id}`, {size: size}\r\n            ));\r\n    };\r\n\r\n    setFont = event => {\r\n        let {id} = this.state.componentStats;\r\n        let fontName = event.target.value;\r\n        this.setState({\r\n            ...this.state, \r\n            instrumentPanel: {...this.state.instrumentPanel},\r\n            componentStats: {...this.state.componentStats,font: fontName}\r\n        },\r\n            () => controllerStream.emit(`EventSetFont${id}`, {\r\n                targetSection: this.state.editComponentName, font: fontName\r\n            })\r\n        );\r\n    }\r\n\r\n    rotate = event => {\r\n        let {id} = this.state.componentStats;\r\n        let angle = event.target.value;\r\n        this.setState({\r\n            ...this.state, \r\n            instrumentPanel: {...this.state.instrumentPanel},\r\n            componentStats: {...this.state.componentStats, rotate: angle}\r\n        },\r\n        () => controllerStream.emit(`EventResize${id}`,{angle: angle}));\r\n        event.stopPropagation();\r\n    }\r\n\r\n    scale = event => {\r\n        let {id} = this.state.componentStats;\r\n        let scale = event.target.value;\r\n        this.setState({\r\n            ...this.state, \r\n            instrumentPanel: {...this.state.instrumentPanel},\r\n            componentStats: {...this.state.componentStats, scale: scale}\r\n        },\r\n        () => controllerStream.emit(`EventScale${id}`,{scale: scale}));\r\n        event.stopPropagation();\r\n    }\r\n\r\n    setIframeContent = eventItem => {\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            componentStats:{\r\n                ...this.state.componentStats,\r\n                content: eventItem.iframe\r\n            }\r\n        });\r\n    }\r\n\r\n    setContent = event => {\r\n        let {id} = this.state.componentStats;\r\n        let contentValue = event.target.value;\r\n        this.setState({\r\n            ...this.state, \r\n            instrumentPanel: {...this.state.instrumentPanel},\r\n            componentStats: {...this.state.componentStats,content: contentValue}\r\n        },\r\n            () => controllerStream.emit(`EventChangeContentText${id}`,{\r\n                targetSection: this.state.editComponentName, content: contentValue\r\n            })\r\n        );\r\n        if (event) event.stopPropagation();\r\n    };\r\n\r\n    setWidth = event => {\r\n        const {id} = this.state.componentStats;\r\n        const width = event.target.value;\r\n        this.setState({\r\n            ...this.state,\r\n            componentStats: {...this.state.componentStats,\r\n                size: {\r\n                    ...this.state.componentStats.size,\r\n                    w: width\r\n                }}\r\n        },\r\n            () => controllerStream.emit(`EventSetWidth${id}`,{width: width}));\r\n\r\n        if (event) event.stopPropagation();\r\n    };\r\n\r\n    setHeight = event => {\r\n        const {id} = this.state.componentStats;\r\n        const height = event.target.value;\r\n        this.setState({\r\n            ...this.state,\r\n            componentStats: {...this.state.componentStats,\r\n                size: {\r\n                    ...this.state.componentStats.size,\r\n                    h: height\r\n                }}\r\n        },\r\n            () => controllerStream.emit(`EventSetHeight${id}`,{height: height}));\r\n\r\n        if (event) event.stopPropagation();\r\n    }\r\n\r\n    updatePosition = eventItem => {\r\n        if (!eventItem) return;\r\n        this.setState({\r\n            ...this.state, \r\n            componentStats: {\r\n                ...this.state.componentStats,\r\n                coords: {\r\n                    ...this.state.componentStats.coords,\r\n                    x: eventItem.x,\r\n                    y: eventItem.y\r\n                }\r\n            }\r\n        });\r\n    };\r\n\r\n    setColor = event => {\r\n        this.setState({...this.state,\r\n            instrumentPanel:{\r\n                ...this.state.instrumentPanel,\r\n                colorPickerActive: this.state.instrumentPanel.colorPickerActive ? false : true\r\n            }\r\n        });\r\n        if (event) event.stopPropagation();\r\n    };\r\n\r\n    setType = event => {\r\n\r\n        let {id} = this.state.componentStats;\r\n        let typeInput = event.target.value;\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            componentStats: {\r\n                ...this.state.componentStats,\r\n                typeInput: typeInput\r\n            }\r\n        },\r\n         () => controllerStream.emit(`EventSetType${id}`, typeInput));\r\n        if (event) event.stopPropagation();\r\n    }\r\n\r\n    setOpacity = event => {\r\n        let {id} = this.state.componentStats;\r\n        let opacity = event.target.value;\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            componentStats: {...this.state.componentStats,opacity: opacity}\r\n        },\r\n         () => controllerStream.emit(`EventSetOpacity${id}`, {opacity: opacity}));\r\n    };\r\n\r\n    setBorderRadius = event => {\r\n        let {id} = this.state.componentStats;\r\n        let radius = event.target.value;\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            componentStats: {...this.state.componentStats,borderRadius: radius}\r\n        },\r\n         () => controllerStream.emit(`EventSetBorderRadius${id}`, {borderRadius: radius}));\r\n    };\r\n\r\n    updateBimageStats = eventItem => {\r\n        const {images} = eventItem;\r\n        if (eventItem.mode !== 'image')\r\n        this.setState({\r\n            ...this.state,\r\n            componentStats:{\r\n                ...this.state.componentStats,\r\n                backgroundImage: images.urlFull\r\n            }\r\n        });\r\n        else {\r\n            this.setState({\r\n                ...this.state,\r\n                componentStats:{\r\n                    ...this.state.componentStats,\r\n                    image: images.urlFull\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    handleChangeComplete = event => {\r\n\r\n        const {rgb} = event;\r\n        let colorRGB = `rgb(${rgb.r},${rgb.g},${rgb.b},${rgb.a})`;\r\n\r\n        let {id} = this.state.componentStats;\r\n        if (this.state.componentStats.type === 'background'){\r\n            this.setState({\r\n                ...this.state,\r\n                componentStats: {...this.state.componentStats,color: colorRGB}\r\n            }, () => controllerStream.emit(`EventChangeColorBackground${id}`,\r\n                        {colorRGB: this.state.componentStats.color}\r\n                    ));\r\n        }\r\n\r\n        else if (this.state.componentStats.type === 'text') {\r\n            this.setState({\r\n                ...this.state,\r\n                componentStats: {...this.state.componentStats,color: colorRGB}\r\n            },\r\n            () => controllerStream.emit(`EventChangeColorText${id}`, colorRGB));\r\n        }\r\n\r\n        else if (this.state.componentStats.type === 'input') {\r\n            this.setState({\r\n                ...this.state,\r\n                componentStats: {...this.state.componentStats,color: colorRGB}\r\n            },\r\n            () => controllerStream.emit(`EventChangecolor${id}`, colorRGB));\r\n        }\r\n\r\n    };\r\n\r\n    redirectSaveChanges = event => {\r\n        this.props.eventStreamBuild.emit(\"EventSaveChangesComponent\", {\r\n            ...this.state.componentStats,\r\n            id: this.state.componentStats.id,\r\n            type: this.state.componentStats.type,\r\n            ms: 0\r\n        });\r\n        if (event) event.stopPropagation();\r\n    }\r\n\r\n    saveChanges = event => {\r\n\r\n        this.props.eventStreamBuild.emit(\"EventSaveChangesComponent\", {\r\n                ...this.state.componentStats,\r\n                id: this.state.componentStats.id,\r\n                type: this.state.componentStats.type,\r\n                ms: 1500,\r\n            });\r\n\r\n        eventEmitter.emit('EventRedirectConfirm', true);\r\n        if (event) event.stopPropagation();\r\n    }\r\n\r\n    deleteComponent = event => {\r\n        this.props.eventStreamBuild.emit('EventDeleteComponent', {\r\n            id: this.state.componentStats.id,\r\n            targetSection: this.state.componentStats.targetSection,\r\n            type: this.state.componentStats.type\r\n        });\r\n    };\r\n\r\n    search = event => {\r\n\r\n        let {id} = this.state.componentStats;\r\n        this.props.eventStreamBuild.emit('EventModalSearchOn',{\r\n            idComponent: id,\r\n            mode: this.state.componentStats.type\r\n        });\r\n\r\n        event.stopPropagation();\r\n    };\r\n\r\n    loadFile = event => {\r\n        let {id} = this.state.componentStats;\r\n        try {\r\n            let image = event.target.files[0];\r\n            let reader = new FileReader();\r\n            if (image.type[0] !== 'i') throw new Error('Invalid file');\r\n            reader.readAsDataURL(image);\r\n            reader.onload = (e) => {\r\n                controllerStream.emit(`EventSetCurrentImage${id}`,{ urlFull: reader.result });\r\n                this.updateBimageStats({images: { urlFull: reader.result }, mode: 'image'});\r\n                e.stopPropagation();\r\n            }\r\n            reader.onerror = () => {\r\n                console.error(reader.error);\r\n            }\r\n        } catch (error) {\r\n            console.error(error.message);\r\n        }\r\n\r\n        event.stopPropagation();\r\n    }\r\n\r\n    makePanelInstruments = (type) => {\r\n            switch (type){\r\n                case 'text':\r\n                   return(\r\n                    <TextInstruments\r\n                        instrumentPanel = {{...this.state.instrumentPanel}}\r\n                        componentStats = {{...this.state.componentStats}}\r\n                        cbSetColor = {this.setColor}\r\n                        cbSetSize = {this.setSize}\r\n                        cbHandleChangeComplete = {this.handleChangeComplete}\r\n                        cbSetContent = {this.setContent}\r\n                        cbSetFont = {this.setFont}\r\n                        cbSetOpacity = {this.setOpacity}\r\n                        color = {this.state.componentStats.color}\r\n                        cbDelete = {this.deleteComponent}\r\n                        cbRotate = {this.rotate}\r\n                        cbScale = {this.scale}\r\n                    />\r\n                   )\r\n                case 'background':\r\n                    return (\r\n                        <BackgroundInstruments\r\n                            colorPickerActive = {this.state.instrumentPanel.colorPickerActive}\r\n                            componentStats = {{...this.state.componentStats}}\r\n                            cbSetColor = {this.setColor}\r\n                            color = {this.state.componentStats.color}\r\n                            cbHandleChangeComplete = {this.handleChangeComplete}\r\n                            cbSearch = {this.search}\r\n                            cbDelete = {this.deleteComponent}\r\n                        />\r\n                    )\r\n                case 'image':\r\n                        return (\r\n                            <ImageInstruments\r\n                                instrumentPanel = {{...this.state.instrumentPanel}}\r\n                                componentStats = {{...this.state.componentStats}}\r\n                                cbSearch = {this.search}\r\n                                cbSetSize = {this.setSize}\r\n                                cbSetBorderRadius = {this.setBorderRadius}\r\n                                cbSetOpacity = {this.setOpacity}\r\n                                cbSetWidth = {this.setWidth}\r\n                                cbSetHeight = {this.setHeight}\r\n                                cbLoadFile = {this.loadFile}\r\n                                cbDelete = {this.deleteComponent}\r\n                                cbRotate = {this.rotate}\r\n                                cbScale = {this.scale}\r\n                            />\r\n                        )\r\n                case 'media':\r\n                        return (\r\n                            <MediaInstruments\r\n                                instrumentPanel = {{...this.state.instrumentPanel}}\r\n                                componentStats = {{...this.state.componentStats}}\r\n                                cbSearch = {this.search}\r\n                                cbSetWidth = {this.setWidth}\r\n                                cbSetHeight = {this.setHeight}\r\n                                cbDelete = {this.deleteComponent}\r\n                            />\r\n                            )\r\n                case 'input':\r\n                        return (\r\n                            <InputInstruments\r\n                                instrumentPanel = {{...this.state.instrumentPanel}}\r\n                                componentStats = {{...this.state.componentStats}}\r\n                                cbSetColor = {this.setColor}\r\n                                cbSetBorderRadius = {this.setBorderRadius}\r\n                                cbHandleChangeComplete = {this.handleChangeComplete}\r\n                                cbSetSize = {this.setSize}\r\n                                cbSetWidth = {this.setWidth}\r\n                                cbSetHeight = {this.setHeight}\r\n                                color = {this.state.componentStats.color}\r\n                                cbSetContent = {this.setContent}\r\n                                cbSetType = {this.setType}\r\n                                cbDelete = {this.deleteComponent}\r\n                            />\r\n                        )\r\n                default: return <p className = 'warningInstruments'>No found element</p>\r\n            }\r\n    };\r\n\r\n    render(){\r\n        let { instrumentActive } = this.state.instrumentPanel;\r\n        return (\r\n\r\n                <div  className = 'instumentsPanel'>\r\n                    <button\r\n                        onClick = {this.closePanel}\r\n                        className = 'closeInstrumentsPanel'\r\n                    >\r\n                        <Icon path = '/img/close.svg' />\r\n                    </button>\r\n                    <h3>Instruments</h3>\r\n                    {\r\n                        instrumentActive ? \r\n                        <p className = 'TextComponent'>{this.state.componentStats.type}</p>\r\n                        : null\r\n                    }\r\n                    {\r\n                        instrumentActive ?\r\n                        <div className = 'instuments'>\r\n                            {this.makePanelInstruments(this.state.componentStats.type)}\r\n                        </div>\r\n                        : null\r\n                    }\r\n                </div>\r\n        )\r\n    };\r\n\r\n    componentDidUpdate = (oldProps, oldState) => {\r\n        if (oldState.componentStats !== this.state.componentStats)\r\n        this.saveChanges();\r\n    };\r\n\r\n    componentDidMount = event => {\r\n        eventEmitter.on('EventRedirectSaveChanges', this.redirectSaveChanges);\r\n        eventEmitter.on(\"EventSetBImageInstumentPanel\", this.updateBimageStats);\r\n        eventEmitter.on(`EventSetIframe`, this.setIframeContent);\r\n        controllerStream.on(`EventUpdatePosition${this.state.componentStats.id}`, this.updatePosition);\r\n    };\r\n\r\n    componentWillUnmount = event => {\r\n        if (this.timer) clearTimeout(this.timer);\r\n        eventEmitter.off('EventRedirectSaveChanges', this.redirectSaveChanges);\r\n        eventEmitter.off(\"EventSetBImageInstumentPanel\", this.updateBimageStats);\r\n        eventEmitter.off(`EventSetIframe`, this.setIframeContent);\r\n        controllerStream.off(`EventUpdatePosition${this.state.componentStats.id}`, this.updatePosition);\r\n    };\r\n};\r\n\r\nexport default InstrumentsPanel;","import React,{Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Viewer from '../imageViewer/Viewer';\r\nimport InstrumentsPanel from '../../components/instrumentsPanel/InstrumentsPanel';\r\nimport ModalWindow from '../../components/modalWindow/ModalWindow';\r\nimport {CSSTransition} from 'react-transition-group';\r\n\r\nclass AdditionalTools extends React.PureComponent{\r\n\r\n    static propTypes = {\r\n        eventStreamBuild: PropTypes.object.isRequired, // events stream\r\n    }\r\n\r\n    state = {\r\n        modal: {\r\n            modalSearch: false, /** @bool active modal search image/media */\r\n            modalSearchMode: null, /** @String work mode of search modal */\r\n        },\r\n        modalViewer: {action: false, image: null, mode: null }, /** @Object data with viewer data */\r\n        instrumentPanel: { /** @Object with data controll instrument panel */\r\n            colorPickerActive: false,\r\n            instrumentActive: false,\r\n        },\r\n        componentStats: {}, /** @Object with data about components */\r\n        editComponentName:  this.props.editComponentName, /** @String | @null name current edit component */\r\n    }\r\n\r\n    modalSearchOn = itemEvent => {\r\n        this.setState({\r\n            ...this.state,\r\n            modal:{\r\n                ...this.state.modal,\r\n                modalSearch: !this.state.modal.modalSearch,\r\n                modalSearchMode: itemEvent.mode || null\r\n            }\r\n        });\r\n    }\r\n\r\n    ViewerSwitch = itemEvent => {\r\n        /* set settings for viewer */\r\n        this.setState({\r\n            ...this.state,\r\n            modalViewer: {\r\n                ...this.state.modalViewer,\r\n                action: itemEvent.action,\r\n                target: itemEvent.target,\r\n                mode: itemEvent.mode,\r\n                iframe: itemEvent.iframe\r\n            }\r\n        });\r\n    };\r\n\r\n    openInstrument = itemEvent => {\r\n        /* build instrument panel component */\r\n           const idEqual = this.state.componentStats.id === itemEvent.componentStats.id;\r\n           if (!idEqual || !this.state.instrumentPanel.instrumentActive)\r\n           this.setState({\r\n               ...this.state,\r\n               editComponentName: itemEvent.targetSection,\r\n               componentStats: {\r\n                   ...this.state.componentStats,\r\n                   ...itemEvent.componentStats\r\n               },\r\n               instrumentPanel: {\r\n                   ...this.state.instrumentPanel,\r\n                   instrumentActive: true,\r\n               }\r\n           });\r\n   }\r\n\r\n   closePanel = itemEvent => {\r\n        /* unmount unstrument panel component */\r\n       this.setState({\r\n           ...this.state,\r\n           instrumentPanel: {\r\n               ...this.state.instrumentPanel,\r\n               colorPickerActive: false,\r\n               instrumentActive: itemEvent.close\r\n           }\r\n       });\r\n   };\r\n\r\n    render(){\r\n        const props = this.props;\r\n        if (this.state.instrumentPanel.instrumentActive){\r\n            return (\r\n                <Fragment key = 'AdditionalBuild'>\r\n                    <CSSTransition\r\n                        in={this.state.modalViewer.action}\r\n                        timeout={300}\r\n                        classNames=\"modalAnimation\"\r\n                        unmountOnExit\r\n                        appear\r\n                    >\r\n                        <Viewer\r\n                            key = 'ImageViewer'\r\n                            eventStreamBuild = {props.eventStreamBuild}\r\n                            mode = {this.state.modalViewer.mode}\r\n                            path = {this.state.modalViewer.target}\r\n                            iframe = {this.state.modalViewer.iframe}\r\n                        />\r\n                    </CSSTransition>\r\n                    <CSSTransition\r\n                        in={this.state.modal.modalSearch}\r\n                        timeout={300}\r\n                        classNames=\"modalAnimation\"\r\n                        unmountOnExit\r\n                        appear\r\n                    >\r\n                            <ModalWindow\r\n                                eventStreamBuild = {props.eventStreamBuild}\r\n                                idComponent = {this.state.componentStats.id}\r\n                                modalSearchMode = {this.state.modal.modalSearchMode}\r\n                                key = 'ModalWindow' workMode = 'Search'\r\n                            />\r\n                    </CSSTransition>\r\n                        <InstrumentsPanel\r\n                            key = {`InstrumentsPanel${this.state.componentStats.id}`}\r\n                            eventStreamBuild = {props.eventStreamBuild}\r\n                            editComponentName = {this.state.editComponentName}\r\n                            componentStats = {this.state.componentStats}\r\n                            instrumentPanel = {this.state.instrumentPanel}\r\n                        />\r\n                </Fragment>\r\n            )\r\n        } else return <Fragment></Fragment>;\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.props.eventStreamBuild.on('EventModalSearchOn', this.modalSearchOn);\r\n        this.props.eventStreamBuild.on('EventView', this.ViewerSwitch);\r\n        this.props.eventStreamBuild.on('EventClosePanel', this.closePanel);\r\n        this.props.eventEmitter.on('EventInstrumentPanel', this.openInstrument);\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        this.props.eventStreamBuild.off('EventModalSearchOn', this.modalSearchOn);\r\n        this.props.eventEmitter.off('EventInstrumentPanel', this.openInstrument);\r\n        this.props.eventStreamBuild.off('EventView', this.ViewerSwitch);\r\n        this.props.eventStreamBuild.off('EventClosePanel', this.closePanel);\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport default AdditionalTools;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Input from '../buildComponents/components/Input';\r\nimport Media from '../buildComponents/components/Media';\r\nimport Image from '../buildComponents/components/Image';\r\nimport TextComponent from '../buildComponents/components/Text';\r\nimport BackgroundComponent from '../buildComponents/components/Background';\r\n\r\nimport './buildMenu.scss';\r\n\r\nclass BuildMenu extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        mode: PropTypes.string.isRequired, /** @String work mode component */\r\n        editComponentName: PropTypes.string,\r\n        eventStreamBuild: PropTypes.object, /** @Events stream build */\r\n        countSection: PropTypes.number, /** @Number for new section id */\r\n        countComponents: PropTypes.number, /** @Number last project */\r\n        sizeParentBox: PropTypes.object /** @Object with width and height parent(bg) */\r\n    }\r\n\r\n\r\n    state = {\r\n        mode: this.props.mode,\r\n        sizeParentBox: {...this.props.sizeParentBox},\r\n        title: 'Title'\r\n    }\r\n\r\n    addText = event => {\r\n        let id = Math.random().toFixed(3);\r\n\r\n        const componentsPatternText = {\r\n            type: 'text',\r\n            font: 'Arial',\r\n            color: null,\r\n            rotate: 0,\r\n            scale: 1,\r\n            opacity: 1,\r\n            fontSize: null,\r\n            content: 'Title',\r\n            coords: {x: null, y: null}, // x, y\r\n            id: id,\r\n            targetSection: this.props.editComponentName,\r\n        };\r\n        this.props.eventStreamBuild.emit('EventBuildComponents',{\r\n            componentsPattern: componentsPatternText,\r\n            type: componentsPatternText.type,\r\n            component: <TextComponent\r\n                            key = {`text${id}`}\r\n                            mode = 'dev'\r\n                            {...componentsPatternText}\r\n                            sizeParentBox = {{...this.props.sizeParentBox}}\r\n                            id = {id}\r\n                        >Title</TextComponent>\r\n        });\r\n        event.stopPropagation();\r\n    }\r\n\r\n    addBackground = event => {\r\n        let id = Math.random().toFixed(3);\r\n\r\n        const componentsPatternBackground = {\r\n            id: id,\r\n            type: 'background',\r\n            backgroundColor: null,\r\n            backgroundImage: null,\r\n            targetSection: this.state.editComponentName,\r\n        };\r\n\r\n        this.props.eventStreamBuild.emit('EventBuildComponents',{\r\n            componentsPattern: componentsPatternBackground,\r\n            type: componentsPatternBackground.type,\r\n            component: <BackgroundComponent\r\n                            targetSection = {this.props.editComponentName}\r\n                            {...componentsPatternBackground}\r\n                            key = {`bg${id}`}\r\n                            id = {id}\r\n                        />\r\n        });\r\n\r\n        event.stopPropagation();\r\n    }\r\n\r\n    addImage = event => {\r\n        let id = Math.random().toFixed(3);\r\n\r\n        const componentsPatternImage = {\r\n            borderRadius: 0,\r\n            type: 'image',\r\n            size: {w: 30, h: 50},\r\n            opacity: 1,\r\n            rotate: 0,\r\n            zIndex: null,\r\n            image: '/img/photoPattern.svg',\r\n            coords: {x: null, y: null}, // x, y\r\n            id: id,\r\n            targetSection: this.props.editComponentName,\r\n        };\r\n        this.props.eventStreamBuild.emit('EventBuildComponents',{\r\n            componentsPattern: componentsPatternImage,\r\n            type: componentsPatternImage.type,\r\n            component: <Image\r\n                            key = {`image${id}`}\r\n                            sizeParentBox = {this.props.sizeParentBox}\r\n                            id = {id}\r\n                            mode = 'dev'\r\n                            path = {'/img/photoPattern.svg'}\r\n                            {...componentsPatternImage}\r\n                            type = 'image' />\r\n        });\r\n        event.stopPropagation();\r\n    }\r\n\r\n    addMedia = event => {\r\n        let id = Math.random().toFixed(3);\r\n\r\n        const  componentsPatternMedia = {\r\n            type: 'media',\r\n            size: {w: null, h: null},\r\n            content: null,\r\n            coords: {x: null, y: null}, // x, y\r\n            id: id,\r\n            targetSection: this.props.editComponentName,\r\n        };\r\n\r\n        this.props.eventStreamBuild.emit('EventBuildComponents', {\r\n            componentsPattern: componentsPatternMedia,\r\n            type: componentsPatternMedia.type,\r\n            component: <Media\r\n                            key = {`media${id}`}\r\n                            targetSection = {this.props.editComponentName}\r\n                            sizeParentBox = {this.props.sizeParentBox}\r\n                            content = {null}\r\n                            id = {id}\r\n                            path = {'/img/photoPattern.mp4'}\r\n                            {...componentsPatternMedia}\r\n                            type = 'media'\r\n                            mode = 'dev'\r\n                        />\r\n        });\r\n        event.stopPropagation();\r\n    }\r\n\r\n    addInput = event => {\r\n        let id = Math.random().toFixed(3);\r\n\r\n        const  componentsPatternInput = {\r\n            type: 'input',\r\n            size: {w: null, h: null},\r\n            typeInput: 'button',\r\n            color: null,\r\n            fontSize: null,\r\n            borderRadius: null,\r\n            content: null,\r\n            coords: {x: null, y: null}, // x, y\r\n            id: id,\r\n            targetSection: this.props.editComponentName,\r\n        };\r\n\r\n        this.props.eventStreamBuild.emit('EventBuildComponents', {\r\n            componentsPattern: componentsPatternInput,\r\n            type: componentsPatternInput.type,\r\n            component: <Input\r\n                            key = {`input${id}`}\r\n                            targetSection = {this.props.editComponentName}\r\n                            sizeParentBox = {this.props.sizeParentBox}\r\n                            id = {id}\r\n                            inputType = 'button'\r\n                            {...componentsPatternInput}\r\n                            type = 'input'\r\n                            mode = 'dev'\r\n                        />\r\n        });\r\n        event.stopPropagation();\r\n    }\r\n\r\n    addSection = event => {\r\n        let id = Math.random().toFixed(3);\r\n\r\n        const componentsPatternBackground = {\r\n            backgroundColor: null,\r\n            backgroundImage: null,\r\n            targetSection: `Section${id}`,\r\n            id: `Section${id}`,\r\n            type: 'background',\r\n        };\r\n        this.props.eventStreamBuild.emit('EventNewSection', {\r\n            componentsPattern: componentsPatternBackground,\r\n            component: <BackgroundComponent\r\n                            {...componentsPatternBackground}\r\n                            key = {`bg${id}`}\r\n                            id = {id}\r\n                            targetSection = {`Section${id}`}\r\n                            width = '100%'\r\n                            height = '800px'\r\n                            type = 'background'\r\n                            mode = 'dev'\r\n                        />\r\n        });\r\n        event.stopPropagation();\r\n    }\r\n\r\n    render(){\r\n\r\n        if (this.state.mode === 'build'){\r\n            return (\r\n                <div className = 'ComponentsMenu'>\r\n                    <button \r\n                        onClick = {this.addImage} \r\n                        className = 'ImageTool CompoentnsMenu_button' \r\n                    >\r\n                        <span>Image</span>\r\n                    </button>\r\n                    <button \r\n                        onClick = {this.addText} \r\n                        className = 'TextTool CompoentnsMenu_button' >\r\n                        <span>Text</span>\r\n                    </button>\r\n                    <button\r\n                        onClick = {this.addInput}\r\n                        disabled = {this.props.editComponentName !== 'Header' ? false : true}\r\n                        className = 'ButtonTool CompoentnsMenu_button' >\r\n                        <span>Button</span>\r\n                    </button>\r\n                    <button onClick = {this.addMedia}\r\n                        className = 'VideoTool CompoentnsMenu_button'\r\n                    >\r\n                        <span>Video</span>\r\n                    </button>\r\n                </div>\r\n            )\r\n        } else if (this.state.mode === 'section') {\r\n            return (\r\n                <div className = 'sectionMode'>\r\n                    <button\r\n                        onClick = {this.addSection}\r\n                        className = 'newSectionTool CompoentnsMenu_button'\r\n                    >\r\n                        <span>New section</span>\r\n                    </button>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default BuildMenu;","import React,{Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Icon from '../Icon/icon';\r\nimport BuildMenu from '../componentsBuildMenu/BuildMenu';\r\n\r\nimport './controllers.scss';\r\n\r\nclass Controllers extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        countComponents: PropTypes.number.isRequired, /** @number last project id */\r\n        sizeParentBox: PropTypes.object, /** @Object with width and height parent(bg) */\r\n        eventStreamBuild: PropTypes.object, /** @Events stream */\r\n        menuActive: PropTypes.bool, /** @Bool value active menu or unactive */\r\n    }\r\n\r\n    state = {\r\n        viewComponentMenu: false,\r\n        editComponentName: this.props.editComponentName,\r\n        shiftX: 0,\r\n        shiftY: 0,\r\n        coordsX: '50%',\r\n        coordsY: '0',\r\n        shadowDisplay: 'block'\r\n    }\r\n\r\n    componentMenu = event => {\r\n        this.setState({viewComponentMenu: this.state.viewComponentMenu ? false : true});\r\n        event.stopPropagation();\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <Fragment>\r\n            {\r\n                <div\r\n                ref = {this.refControll}\r\n                className = 'ControllersEditComponent'\r\n                >\r\n                    <Icon\r\n                        onClick = {this.componentMenu}\r\n                        className = 'ControllersEditComponent__addButton'\r\n                        path = '/img/addButton.png'\r\n                    />\r\n                    { this.state.viewComponentMenu ?\r\n                        <BuildMenu\r\n                            key = {`buildMenu ${this.state.editComponentName}`}\r\n                            mode = 'build'\r\n                            eventStreamBuild = {this.props.eventStreamBuild}\r\n                            editComponentName = {this.state.editComponentName}\r\n                            sizeParentBox = {this.props.sizeParentBox}\r\n                            countComponents = {this.props.countComponents}\r\n                        /> : null\r\n                    }\r\n                </div>\r\n            }\r\n            </Fragment>\r\n        )\r\n    }\r\n\r\n    componentDidUpdate = () => {\r\n        if (this.props.editComponentName !== this.state.editComponentName)\r\n            this.setState({\r\n                ...this.state,\r\n                editComponentName: this.props.editComponentName\r\n            })\r\n    }\r\n\r\n}\r\n\r\nexport default Controllers;","import React,{Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\n/* ------- Events streams ------- */\r\nimport eventEmitter from '../../EventEmitter'; // common\r\nimport EventBuild from 'events'; // for builder controllers\r\n/* ------- For load project and exit from project ------- */\r\nimport {loadCurrentProjectAction, exitProjectAction} from '../../redux/actions';\r\n/* ------- Moddlewares ------- */\r\nimport {middlewareDeleteProjectComponent} from '../../redux/middleware/middlewareDelete';\r\nimport updateMiddleware from '../../redux/middleware/updateMiddleware';\r\n/* ------- HOC for het firebase controll object ------- */\r\nimport withScroll from '../../components/withScroll';\r\nimport withFirebase from '../../components/withFirebase';\r\n/* ------- Child components ------- */\r\nimport AdditionalTools from '../../components/additionalTools/additionalTools';\r\nimport builderHOC from '../../components/builderHOC';\r\nimport Controllers from '../../components/controllers/controllers';\r\nimport Loader from '../../components/loading/Loader';\r\nimport Header from '../../components/header/Header';\r\nimport Section from '../../components/buildComponents/section';\r\nimport BuildMenu from '../../components/componentsBuildMenu/BuildMenu';\r\n\r\nimport './build.scss';\r\n\r\nclass Build extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        firebase: PropTypes.object.isRequired, /** @firebase class for use firebase functions */\r\n        active: PropTypes.bool, /** @active - status firebase auth */\r\n        dispatch: PropTypes.func.isRequired, /** @dispatch - redux */\r\n        history: PropTypes.object, /** @Router HTML5 history */\r\n        location: PropTypes.object, /** @Router */\r\n        match: PropTypes.object.isRequired, /** @Router */\r\n        userData: PropTypes.object.isRequired, /** @UserData data about projects,user and current edit prject */\r\n    }\r\n\r\n    state = {\r\n            idProject: parseInt(this.props.match.params.param), /** @Id project */\r\n            editStart: false, /** @Bool start edit or no */\r\n            isChange: false, /** @Bool detected changes */\r\n            isLoadComponents: true, /** @Bool load all necessary components  */\r\n            projectEmpty: false, /** @Bool detected project undefiend */\r\n            componentJSX: [], /** @Array with JSX */\r\n            editComponentName:  null, /** @String | @null name current edit component */\r\n            menuActive: false, /** @bool active menu or no */\r\n            sizeParentBox: null, /** @Object size store */\r\n        }\r\n\r\n        eventEmitterBuild = new EventBuild(); // events stream for controllers\r\n        timer = null; // save timer\r\n\r\n    workModeEdit = itemEvent => {\r\n        /* set edit mode */\r\n        if (itemEvent.editStart)\r\n        this.setState({\r\n            ...this.state,\r\n            editStart: itemEvent.editStart,\r\n            editComponentName: itemEvent.targetSection,\r\n            menuActive: true,\r\n        });\r\n    }\r\n\r\n    deleteComponent = eventItem => {\r\n        /* delete component from DB and from JSX array */\r\n        let {currentProjectsData} = this.props.userData;\r\n        let {componentJSX} = this.state;\r\n\r\n        const data = {\r\n            id: this.state.idProject,\r\n            uid: this.props.userData.idUser,\r\n            idComponent: eventItem.id,\r\n            sectionsProject: [...currentProjectsData.sectionsProject],\r\n            type: eventItem.type\r\n        }\r\n\r\n        this.props.dispatch(middlewareDeleteProjectComponent(data))\r\n        .then(id => {\r\n            if (id !== null){\r\n               const _componentJSX = componentJSX.filter(item => item.id !== id);\r\n            this.setState({\r\n                ...this.state,\r\n                componentJSX: _componentJSX\r\n            });\r\n        }\r\n        });\r\n    }\r\n\r\n    addComponentsFromBD = (array, sizeParentBox) => {\r\n        /* build JSX components from DB */\r\n        if (!sizeParentBox) sizeParentBox = this.state.sizeParentBox;\r\n        let {componentJSX} = this.state;\r\n        let componentsFromDB = [];\r\n\r\n        array.forEach(item => {\r\n            if (item.type !== 'background'){\r\n                const itemHash = {\r\n                    props: {\r\n                        ...item,\r\n                        sizeParentBox,\r\n                        mode: 'dev',\r\n                    },\r\n                    type: item.type,\r\n                    id: item.id,\r\n                }\r\n                const patternJSX = {\r\n                    id: item.id,\r\n                    targetSection: item.targetSection,\r\n                    component: builderHOC(itemHash)(Fragment)\r\n                };\r\n                componentsFromDB.push(patternJSX);\r\n            }\r\n        });\r\n            this.setState({\r\n                ...this.state,\r\n                isLoadComponents: false,\r\n                sizeParentBox: {...sizeParentBox},\r\n                componentJSX: [...componentJSX, ...componentsFromDB],\r\n            });\r\n    };\r\n\r\n    addComponent = itemEvent => {\r\n         /* create new component */\r\n        let {componentJSX} = this.state;\r\n        let {componentsPattern} = itemEvent;\r\n\r\n        const patternJSX = {\r\n            id: componentsPattern.id,\r\n            targetSection: componentsPattern.targetSection,\r\n            component: itemEvent.component\r\n        };\r\n            this.setState({\r\n                ...this.state,\r\n                componentJSX: [...componentJSX, patternJSX],\r\n            });\r\n    };\r\n\r\n    saveChangesComponent = itemEvent => {\r\n        /* save detected changes in DB and call confirm modal */\r\n        const {ms} = itemEvent;\r\n        if (this.timer) clearTimeout(this.timer);\r\n\r\n        this.timer = setTimeout(() => {\r\n            const {currentProjectsData} = this.props.userData;\r\n            const {userData} = this.props;\r\n            let findCurrentItem = false;\r\n            const _components = currentProjectsData.components.map(item => {\r\n                if (item.id === itemEvent.id) { findCurrentItem = true; return {...itemEvent}; }\r\n                return item;\r\n            });\r\n\r\n            if (!findCurrentItem) _components.push(itemEvent);\r\n\r\n            this.props.dispatch(updateMiddleware({\r\n                uid: userData.idUser,\r\n                projects: [...userData.projects],\r\n                components: _components,\r\n                sectionsProject: [...currentProjectsData.sectionsProject],\r\n                idProject: this.state.idProject\r\n            })).then(() =>\r\n                eventEmitter.emit('EventRedirectConfirm', {false: false, confirm: false}));\r\n        },ms);\r\n    };\r\n\r\n    mainComponent = null;\r\n    mainRefComponent = node => node ?\r\n        this.mainComponent = {data: node.getBoundingClientRect(), node: node} : node;\r\n\r\n    addNewSection = eventItem => {\r\n    /* create new project section */\r\n        const {userData} = this.props;\r\n        const {currentProjectsData} = userData;\r\n\r\n        this.props.dispatch(updateMiddleware({\r\n                uid: userData.idUser,\r\n                projects: [...userData.projects],\r\n                components: [...currentProjectsData.components,\r\n                            eventItem.componentsPattern],\r\n                sectionsProject: [\r\n                    ...currentProjectsData.sectionsProject,\r\n                    eventItem.componentsPattern.id\r\n                ],\r\n                idProject: this.state.idProject\r\n        })).then(() => {\r\n            this.setState({\r\n                ...this.state,\r\n                componentJSX:[\r\n                    ...this.state.componentJSX,\r\n                    eventItem.component\r\n                ]\r\n            }, () => {\r\n                eventEmitter.emit('EventSetState', currentProjectsData.sectionsProject.length);\r\n            });\r\n        });\r\n}\r\n\r\n    render(){\r\n\r\n        if (this.state.projectEmpty) return <Redirect to = '/Cabinet' />\r\n        \r\n        const {userData} = this.props;\r\n        const {currentProjectsData} = userData;\r\n        const section = currentProjectsData.sectionsProject;\r\n\r\n        if (userData.active && currentProjectsData.loadProject){\r\n            return (\r\n                <Fragment>\r\n                    <Header key = 'Header' title = \"Constructor\" idUser = {userData.idUser}  />\r\n                    <div\r\n                        ref = {this.mainRefComponent} \r\n                        onMouseMove = {this.showAddSection} \r\n                        className = 'Build' \r\n                        key = 'Build'\r\n                    >\r\n                        { this.state.editStart &&\r\n                            <Controllers\r\n                                key = 'controllers'\r\n                                eventStreamBuild = {this.eventEmitterBuild}\r\n                                editComponentName = {this.state.editComponentName}\r\n                                countComponents = {currentProjectsData.components.length}\r\n                                menuActive = {this.state.menuActive}\r\n                                sizeParentBox = {this.state.sizeParentBox}\r\n                            />\r\n                        }\r\n                            <BuildMenu\r\n                                key = 'buildMenu'\r\n                                eventStreamBuild = {this.eventEmitterBuild}\r\n                                countSection = {this.state.componentJSX.length * 5}\r\n                                mode = \"section\"\r\n                                className = 'menu'\r\n                            />\r\n                            <AdditionalTools key = 'tools'\r\n                                eventStreamBuild = {this.eventEmitterBuild}\r\n                                eventEmitter = {eventEmitter}\r\n                                editComponentName = {this.state.editComponentName}\r\n                            />\r\n                        {section.length &&\r\n                            <Section mode = 'dev' key = 'section'\r\n                                componentJSX = {this.state.componentJSX}\r\n                                editComponentName = {this.state.editComponentName}\r\n                                menuActive = {this.state.menuActive}\r\n                                sizeParentBox = {this.state.sizeParentBox}\r\n                                userData = {userData}\r\n                            />\r\n                        }\r\n                    </div>\r\n                </Fragment>\r\n            )\r\n        } else if (!this.props.firebase.getCurrentUser()) return <Redirect to = '/' />\r\n        else return <Loader  key = 'Loader' path = '/img/loading.gif' type = 'build' />\r\n    }\r\n\r\n    componentDidUpdate = (prevProps) => {\r\n\r\n        let {userData} = this.props;\r\n        let {currentProjectsData} = userData;\r\n        const isLoadComponents = this.state.isLoadComponents;\r\n        let sizeParentBox = null;\r\n\r\n        if (this.mainComponent && this.state.sizeParentBox === null)\r\n            sizeParentBox = {\r\n                width: this.mainComponent.data.width,\r\n                height: this.mainComponent.data.height,\r\n                top: this.mainComponent.data.top,\r\n                left: this.mainComponent.data.left,\r\n            }\r\n\r\n\r\n        if (userData.active && !currentProjectsData.loadProject) {\r\n            /** load current project of user session active and load project - false */\r\n            const current =  userData.projects.find(item => /* find current project */\r\n                                                    item.id === this.state.idProject)\r\n            if (current){ /* load data */\r\n                this.props.dispatch(loadCurrentProjectAction({\r\n                    id: current.id,\r\n                    typeProject: current.type,\r\n                    sectionsProject: [...current.sectionsProject],\r\n                    components: [...current.components]\r\n                }))\r\n                /* else redirect */\r\n            } else this.setState({...this.state, projectEmpty: true});\r\n        }\r\n        if (currentProjectsData.loadProject && isLoadComponents) {\r\n             /* if all components load build our JSX */\r\n            if (this.state.sizeParentBox === null && sizeParentBox !== null)\r\n                this.addComponentsFromBD([...currentProjectsData.components], sizeParentBox);\r\n            else this.addComponentsFromBD([...currentProjectsData.components]);\r\n            /** For scroll component */\r\n            eventEmitter.emit('EventSetState',currentProjectsData.sectionsProject.length-1);\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        let {userData} = this.props;\r\n        let {currentProjectsData} = userData;\r\n        /**  If the session is already active, immediately load */\r\n        if (userData.active && !currentProjectsData.loadProject) {\r\n        /** load current project of user session active and load project - false */\r\n            const current =  userData.projects.find(item => item.id === this.state.idProject)\r\n            this.props.dispatch(loadCurrentProjectAction({\r\n                id: current.id,\r\n                sectionsProject: [...current.sectionsProject],\r\n                typeProject: current.type,\r\n                components: [...current.components]\r\n            }));\r\n\r\n            eventEmitter.on('EventModeEdit', this.workModeEdit);\r\n            this.eventEmitterBuild.on('EventBuildComponents', this.addComponent);\r\n            this.eventEmitterBuild.on('EventDeleteComponent', this.deleteComponent);\r\n            this.eventEmitterBuild.on('EventNewSection', this.addNewSection);\r\n            this.eventEmitterBuild.on('EventSaveChangesComponent', this.saveChangesComponent);\r\n        }; /** else redirect */\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n\r\n        let {userData} = this.props;\r\n        if (userData.active){\r\n            this.props.dispatch(exitProjectAction(true));\r\n            eventEmitter.off('EventModeEdit', this.workModeEdit);\r\n            this.eventEmitterBuild.off('EventBuildComponents', this.addComponent);\r\n            this.eventEmitterBuild.off('EventDeleteComponent', this.deleteComponent);\r\n            this.eventEmitterBuild.off('EventNewSection', this.addNewSection);\r\n            this.eventEmitterBuild.off('EventSaveChangesComponent', this.saveChangesComponent);\r\n        }\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        userData: {\r\n            active: state.cabinet.active,\r\n            idUser: state.cabinet.idUser,\r\n            projects: [...state.cabinet.projects],\r\n           currentProjectsData: {...state.builder}\r\n        },\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(withFirebase(withScroll(Build)));\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {connect} from 'react-redux';\r\nimport {Route, Switch} from 'react-router-dom';\r\n/* ------- Moddlewares ------- */\r\nimport {middlewareLoadUserData} from './redux/middleware/loadUserMiddleware';\r\n/* ------- Child components ------- */\r\nimport withFirebase from './components/withFirebase';\r\nimport Loader from './components/loading/Loader';\r\nimport Index from './Pages/Index/Index';\r\nimport Cabinet from './Pages/Cabinet/Cabinet';\r\nimport Production from './Pages/Production/Production';\r\nimport About from './Pages/About/About';\r\nimport Build from './Pages/Build/Build';\r\nimport ErrorPage from './components/ErrorCatch/ErrorPage';\r\nimport './root.scss';\r\n\r\nclass App extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        config: PropTypes.object.isRequired, /** @Config app */\r\n        firebase: PropTypes.object.isRequired, /** @firebase class for use firebase functions */\r\n        dispatch: PropTypes.func.isRequired, /** @dispatch - redux */\r\n    }\r\n\r\n    state = {\r\n        firebase: this.props.firebase,\r\n        firebaseLoadState: false,\r\n        config: this.props.config,\r\n    }\r\n\r\n    componentDidMount(){\r\n        /** Listening firebase answer after first load app */\r\n        this.props.firebase.auth.onAuthStateChanged((user) => {\r\n            if (!this.state.firebaseLoadState){\r\n                /** if user - true, loading data in store */\r\n                if (user) this.props.dispatch(middlewareLoadUserData(user.uid))\r\n                .then((res) =>  { /** show loader */\r\n                    this.setState({...this.state, firebaseLoadState: res});\r\n                }); /** if loading = redirect */\r\n                else  this.setState({...this.state, firebaseLoadState: true});\r\n            }\r\n        });\r\n    }\r\n\r\n    render(){\r\n        if (this.state.firebaseLoadState){\r\n            return (\r\n                <Switch>\r\n                        <Route\r\n                            path = {'/'} exact\r\n                            render = {(props) => <Index {...props} config = {this.state.config} />}\r\n                        />\r\n                        <Route \r\n                            path = '/Cabinet/' exact \r\n                            render = {(props) => <Cabinet {...props} config = {this.state.config} />}\r\n                        />\r\n                        <Route\r\n                            path = {'/Cabinet/About'}\r\n                            render = {(props) => <About {...props} config = {this.state.config} />}\r\n                        />\r\n                        <Route path = {'/Cabinet/Build/:param'} exact\r\n                            render = {(props) => <Build {...props} />}\r\n                        />\r\n                        <Route path = {'/Cabinet/Build/:param/Production'} exact component = {Production} />\r\n                        <Route path = {'*'} component = {Index} />\r\n                        <Route path = {'/crashPage'} component = {ErrorPage} />\r\n                </Switch>\r\n\r\n            )\r\n        } else return <Loader path = { '/img/loading.gif'} type = 'application' />\r\n    }\r\n}\r\n\r\nexport default connect()(withFirebase(App));","\n/** IE supports polyfills */\nimport 'core-js/es/map';\nimport 'core-js/es/set';\nimport 'core-js/es/symbol';\nimport smoothscroll from 'smoothscroll-polyfill';\n/** --------------------- */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\nimport firebase from './Firebase/Firebase';\nimport ErrorBoundary from './components/ErrorCatch/ErrorBoundary';\nimport {HashRouter } from 'react-router-dom';\nimport {Provider} from 'react-redux';\nimport store from './redux/store';\nimport App from './App.jsx';\nimport 'normalize.css';\n\nimport firebaseContext from './Firebase/firebaseContext'; /** firebase contect API */\nimport config from './config.json'; /** app config file */\n\n\n// kick off the polyfill!\nsmoothscroll.polyfill();\n\nReactDOM.render(\n        <HashRouter>\n            <ErrorBoundary>\n                <firebaseContext.Provider value = {firebase}>\n                    <Provider store = {store}>\n                        <App config = {config} />\n                    </Provider>\n                </firebaseContext.Provider>\n            </ErrorBoundary>\n        </HashRouter>,\n        document.getElementById('root')\n);\n\n\nserviceWorker.unregister();\n\n"],"sourceRoot":""}