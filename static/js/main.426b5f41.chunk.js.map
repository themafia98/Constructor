{"version":3,"sources":["serviceWorker.js","Firebase/firebaseConfig.js","Firebase/Firebase.js","EventEmitter.js","components/ErrorCatch/ErrorPage.jsx","components/ErrorCatch/ErrorBoundary.jsx","redux/actions.js","redux/reducerBuilder.js","redux/reducerCabinet.js","redux/reducers.js","redux/store.js","redux/middleware/loadUserMiddleware.js","Firebase/firebaseContext.js","components/firebaseHOC.jsx","components/loading/Loader.jsx","components/Registration/Registration.jsx","Pages/Index/Index.jsx","redux/middleware/middlewareDelete.js","components/Icon/icon.jsx","components/confirmBox/Confirm.jsx","components/header/Header.jsx","components/imageViewer/imageItem.jsx","components/modalWindow/createProject/createProject.jsx","components/modalWindow/Search/searchModal.jsx","components/modalWindow/ModalWindow.jsx","redux/middleware/createProjectMiddleware.js","components/List/Item.jsx","components/List/List.jsx","components/ProjectsSection/ProjectsSection.jsx","Pages/Cabinet/Cabinet.jsx","components/buildComponents/components/Background.jsx","components/buildComponents/MainBackground/MainBackground.jsx","components/buildComponents/section.jsx","components/builderHOC.jsx","components/buildComponents/components/Input.jsx","components/buildComponents/components/Media.jsx","components/buildComponents/components/Image.jsx","components/buildComponents/components/Text.jsx","Pages/Production/Production.jsx","Pages/About/About.jsx","redux/middleware/updateMiddleware.js","components/imageViewer/Viewer.jsx","components/instrumentsPanel/InputTools/InputInstruments.jsx","components/instrumentsPanel/MediaTools/MediaInstruments.jsx","components/instrumentsPanel/ImageTools/ImageInstruments.jsx","components/instrumentsPanel/BackgroundTools/BackgroundInstruments.jsx","components/instrumentsPanel/TextTools/TextInstruments.jsx","components/instrumentsPanel/InstrumentsPanel.jsx","components/additionalTools/additionalTools.jsx","components/componentsBuildMenu/BuildMenu.jsx","components/controllers/controllers.jsx","Pages/Build/Build.jsx","components/scroll/ScrollMove.jsx","App.jsx","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","firebaseConfig","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firebaseInterface","require","Firebase","Object","classCallCheck","this","firebase","auth","db","rules","setPersistence","Auth","Persistence","email","password","signInWithEmailAndPassword","createUserWithEmailAndPassword","signOut","currentUser","stream","EventEmitter","ErrorPage","redirect","update","event","_this","setState","eventEmitter","emit","react_default","a","createElement","react_router","to","class","className","onClick","React","Component","ErrorBoundary","hasError","updateApplication","componentDidMount","on","componentWillUnmount","off","info","ErrorCatch_ErrorPage","props","children","PureComponent","exitProjectAction","type","exit","loadCurrentProjectAction","id","typeProject","sectionsProject","components","loadUpdateCurrentProject","idProject","toConsumableArray","loadUserAction","active","idUser","uid","projects","errorAction","initialState","loadProject","combineReducers","builder","arguments","length","undefined","action","objectSpread","cabinet","map","item","middleware","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","thunk","withExtraArgument","store","createStore","middlewareLogin","_ref2","asyncToGenerator","regenerator_default","mark","_callee","dispatch","getState","_ref","wrap","_context","prev","next","login","response","collection","doc","user","get","docUser","data","message","stop","_x","_x2","_x3","apply","middlewareLogOutUser","_ref6","_callee3","_ref5","_context3","_x7","_x8","_x9","firebaseContext","createContext","withFirebase","Firebase_firebaseContext","Consumer","assign","Loader","_useState","useState","path","slicedToArray","src","alt","emailRef","passwordRef","setRefEmail","node","setRefPassword","createUser","value","Error","set","indexStream","autoComplete","ref","AnimationTitle","styled","h3","_templateObject","color","Index","Events","title","registrationActive","regStatus","wrongEnter","tilteContent","split","currentTitle","positionTitle","directionAnimation","msAnimation","emailImput","passwordImput","timerAnimation","animationTitle","self","assertThisInitialized","setTimeout","tick","counter","word","_title","slice","statusRegistration","additionalUserInfo","isNewUser","showBox","stopPropagation","authTo","e","clearTimeout","data-titlebuild","components_Registration_Registration","connect","middlewareDeleteProjectComponent","_ref4","_callee2","_ref3","_context2","findProject","find","project","filter","component","idComponent","dataUpdate","abrupt","_x4","_x5","_x6","middlewareDelete","itemdb","Icon","_useState3","_useState5","draggable","Confirm","cbSaveChanges","cbCancelSave","iconPath","CabinetIcon","Header","isChange","redirectConfirm","redirectAbout","redirectA","redirectCabinet","redirectC","confirm","false","confirmSaveDetectChanges","logOut","pathname","add","cabinetStream","componentWillMount","_this2","Fragment","components_confirmBox_Confirm","Icon_icon","withRouter","ImageItem","urls","regular","urlRegular","full","urlFull","_useState7","isFull","_useState9","urlContent","selected","url","iframe","CreateProject","nameLength","warningLengthMin","warningLengthMax","typeClassName","name","onChange","cbValidateName","placeholder","validType","warningType","cbSelectOption","cbAddNewProject","disabled","dissabled","cbCancel","SearchModal","refSearch","createRef","concat","modalSearchMode","current","focus","cbSearch","view","cbMakeImageResultBox","images","loading","menuActive","cbShowImage","cbSetSelectedImage","polyfill","ModalWindow","workMode","buttonSearchDisabled","selectedItem","showUrl","imageBoxView","newProject","validateName","validateType","imageMenuActive","warning","lengthMax","lengthMin","inputSearch","inputSelect","searchData","mode","inages","search","api","isFetch","ok","json","results","searchYouTubeAPI","RAITE","KEY","res","status","arrayItems","items","forEach","push","snippet","thumbnails","high","videoId","showMenuImage","showImage","_this$state$images","eventStreamBuild","target","setSelectedImage","makeImageResultBox","i","imageItem","key","addNewProject","selectOption","inputs","defineProperty","lengthInput","cancel","refSelect","createProject","searchModal","react","middlewareCreateProject","list","lastProject","lastIndex","header","backgroundImage","backgroundColor","min","max","Math","floor","random","targetSection","productionPath","_useState6","canBuild","setCanBuild","_useState8","canProd","setCanProd","_useState11","_useState13","data-id","List","makeList","List_Item","ProjectsSection","components_List_List","Cabinet","deletItem","getCurrentUser","changeWorkMode","header_Header","modalWindow_ModalWindow","components_ProjectsSection_ProjectsSection","Background","div","Background_templateObject","width","height","BackgroundComponent","background","boxComponent","boxComponentRef","saveDataParent","boxInform","getBoundingClientRect","sectionNumber","size","openBgInstruments","componentsPatternBackground","componentStats","changeColor","eventItem","colorRGB","setBackgroundImage","componentDidUpdate","onDoubleClick","data-name","MainBackground","editRedy","changeMode","editStart","editComponentName","refSection","refSectionFunc","currentProjectsData","componentJSX","data-class","components_Background","Section","userData","buildComponents_MainBackground_MainBackground","countComponents","sizeParentBox","section","componentsProdJSX","builderHOC","InputComponent","input","attrs","style","zIndex","indexZ","left","coordX","top","coordY","Input_templateObject","w","h","fontSize","borderRadius","ProductionStyle","_templateObject2","Input","istrumentsActive","getSizeBool","shiftCoords","content","posInput","coords","x","y","startDragNdrop","openInputInstruments","componentsPatternImage","sizeTextValue","saveCoords","nativeEvent","which","element","refInput","cords","right","bottom","clientX","clientY","changeSize","eventSize","changeSizeText","setBorderRadius","radius","borderDown","changeContent","checkPivotPosition","borderRight","delta","trans","transT","move","moveInput","xItem","yItem","convertToPercentX","convertToPercentY","toFixed","stopDragNdrop","saveSize","setWidth","setHeight","refInputComponent","onMouseDown","onMouseMove","onMouseLeave","onMouseUp","onDragStart","data-imagecomponentwrapper","WrapperMedia","display","justifyContent","alignItems","padding","Media_templateObject","Media","Media_templateObject2","_templateObject3","MediaComponent","posMedia","drawContent","openMediaInstruments","componentsPatternMedia","refMedia","moveMedia","setContent","refMediaComponent","allowfullscreen","Media_ProductionStyle","WrapperImg","Image_templateObject","ImageStyle","img","Image_templateObject2","opacity","Image_templateObject3","Image","image","posImage","openImageInstruments","refImage","moveText","setCurrentImage","changeSizeImage","setOpacity","refImageComponent","data-imagecomponent","Image_ProductionStyle","crossOrigin","WrapperText","Text_templateObject","textColor","TextStyle","p","Text_templateObject2","font","Text_templateObject3","TextComponent","isHaveSize","parent","colorText","sizeText","position","contentText","openTitleInstruments","componentsPatternText","posText","changeColorText","changeContentText","eventContent","refText","setFont","sectionNum","refTextComponent","data-textcomponent","Text_ProductionStyle","Production","parseInt","params","param","projectEmpty","isLoadComponents","makeProduction","array","_components","prodRef","patternJSX","mainProductionRef","prevProps","prevState","buildComponents_section","About","about","developer","year","updateMiddleware","newProjects","JSON","parse","stringify","Viewer","frameBorder","allow","allowFullScreen","InputInstruments","colorPickerActive","instrumentPanel","_content","cbSetColor","lib","onChangeComplete","cbHandleChangeComplete","cbSetWidth","cbSetHeight","cbSetSize","cbSetBorderRadius","cbSetContent","maxLength","cbDelete","MediaInstruments","defaultValue","ImageInstruments","fileRef","cbSetOpacity","step","cbLoadFile","accept","BackgroundInstruments","TextInstruments","cbSetFont","InstrumentsPanel","closePanel","close","setSize","fontName","setIframeContent","contentValue","updatePosition","setColor","updateBimageStats","handleChangeComplete","rgb","r","g","b","redirectSaveChanges","ms","saveChanges","deleteComponent","loadFile","files","reader","FileReader","readAsDataURL","onload","result","onerror","makePanelInstruments","TextTools_TextInstruments","BackgroundTools_BackgroundInstruments","ImageTools_ImageInstruments","MediaTools_MediaInstruments","InputTools_InputInstruments","oldProps","oldState","timer","instrumentActive","AdditionalTools","modalViewer","imageViewer_Viewer","modalSearch","instrumentsPanel_InstrumentsPanel","BuildMenu","addText","componentsPattern","Text","addBackground","addImage","components_Image","addMedia","components_Media","addInput","componentsPatternInput","components_Input","inputType","addSection","Controllers","viewComponentMenu","shiftX","shiftY","coordsX","coordsY","shadowDisplay","componentMenu","refControll","componentsBuildMenu_BuildMenu","Build","eventEmitterBuild","EventBuild","modalSearchOn","itemEvent","modeHave","hasOwnProperty","ViewerSwitch","workModeEdit","openInstrument","_componentJSX","addComponentsFromBD","componentsFromDB","mainComponent","addComponent","saveChangesComponent","findCurrentItem","mainRefComponent","addNewSection","showAddSection","controllers","countSection","additionalTools","ScrollMove","scrollConfig","duration","delay","smooth","offset","positionCount","setStates","moveLocation","count","moveDown","deltaY","moveUp","scroller","scrollTo","scroll","scrollToTop","onWheel","App","firebaseLoadState","onAuthStateChanged","_this3","exact","render","Pages_Index_Index","Pages_About_About","scroll_ScrollMove","Pages_Build_Build","saveSession","time","ReactDOM","react_router_dom","ErrorCatch_ErrorBoundary","Provider","es","src_App","document","getElementById","URL","href","origin","addEventListener","fetch","contentType","headers","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.426b5f41.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log('This web app is being served cache-first by a service worker.');\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","// setings in root folder / firebase.env\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n    databaseURL: process.env.REACT_APP_DATABASE_URL,\r\n    projectId: process.env.REACT_APP_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n    appId: process.env.REACT_APP_APPID\r\n};\r\n\r\nexport default firebaseConfig;","import * as firebase from 'firebase/app';\r\nimport firebaseConfig from './firebaseConfig';\r\n\r\nconst auth = require('firebase/auth');\r\nconst firestore = require('firebase/firestore');\r\n\r\nclass Firebase {\r\n\r\n    constructor(firebaseConfig){\r\n        firebase.initializeApp(firebaseConfig);\r\n        this.auth = firebase.auth();\r\n        this.db = firebase.firestore();\r\n    }\r\n\r\n    saveSession(rules){\r\n        return this.auth.setPersistence(firebase.auth.Auth.Persistence[rules]);\r\n    }\r\n\r\n    login(email, password){\r\n        try {\r\n            return this.auth.signInWithEmailAndPassword(email, password);\r\n        } catch (error) {\r\n            console.error(error);\r\n            return null;\r\n        }\r\n    }\r\n\r\n    registration(email, password){\r\n        return this.auth.createUserWithEmailAndPassword(email, password)\r\n    }\r\n\r\n    signOut(){\r\n        return this.auth.signOut()\r\n    }\r\n\r\n    getCurrentUser() {\r\n        return this.auth.currentUser\r\n    }\r\n}\r\n\r\nlet firebaseInterface = new Firebase(firebaseConfig);\r\n\r\nexport default firebaseInterface;\r\n\r\nexport { auth, firestore };\r\n\r\n","import {EventEmitter} from 'events';\r\n\r\nconst stream = new EventEmitter();\r\nexport default stream;","import React from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\nimport eventEmitter from '../../EventEmitter';\r\n\r\nimport './errorPage.scss';\r\n\r\n\r\nclass ErrorPage extends React.Component {\r\n\r\n    state = {\r\n        redirect: false,\r\n    }\r\n\r\n    update = event => {\r\n       this.setState({redirect: true},\r\n        () => eventEmitter.emit('EventErrorCatchUpdate'));\r\n    }\r\n\r\n    render(){\r\n        if (this.state.redirect) return <Redirect to = '/' />\r\n        return (\r\n        <div class = 'container'>\r\n            <div class = 'flex-column'>\r\n                <h1>Application crash</h1>\r\n                <button className = 'button_updateApp' onClick = {this.update}>Update</button>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ErrorPage;","\r\nimport React from 'react';\r\nimport eventEmitter from '../../EventEmitter';\r\nimport ErrorPage from './ErrorPage';\r\n\r\nclass ErrorBoundary extends React.PureComponent {\r\n\r\n      state = { \r\n        hasError: false,\r\n      };\r\n\r\n    static getDerivedStateFromError(error) {\r\n        console.log(error);\r\n      // Обновить состояние с тем, чтобы следующий рендер показал запасной UI.\r\n      return { hasError: true};\r\n    }\r\n\r\n    updateApplication = event => {\r\n      this.setState({hasError: false});\r\n    };\r\n  \r\n    componentDidCatch(error, info) {\r\n      // Можно также сохранить информацию об ошибке в соответствующую службу журнала ошибок\r\n     console.error(error + \",\" + info);\r\n    }\r\n  \r\n    render() {\r\n      if (this.state.hasError) return <ErrorPage />\r\n      return this.props.children;\r\n    }\r\n\r\n    componentDidMount = () => {\r\n      eventEmitter.on('EventErrorCatchUpdate',this.updateApplication);\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n      eventEmitter.off('EventErrorCatchUpdate',this.updateApplication);\r\n    }\r\n  }\r\n\r\n  export default ErrorBoundary;","const CREATE_PROJECT = 'CREATE_PROJECT';\r\nconst LOAD_UPDATE_PROJECT = \"LOAD_UPDATE_PROJECT\";\r\nconst LOAD_CURRENT = 'LOAD_CURRENT';\r\nconst LOG_OUT_CABINET = 'LOG_OUT_CABINET';\r\nconst LOAD_USER_CABINET = 'LOAD_USER_CABINET';\r\nconst ERROR_CABINET = 'ERROR_CABINET';\r\nconst EXIT_PROJECT = 'EXIT_PROJECT';\r\n\r\nconst createProjectAction = (state) => {\r\n    return {\r\n        type: CREATE_PROJECT,\r\n        projects: state,\r\n    }\r\n}\r\n\r\nconst exitProjectAction = (state) => {\r\n    return {\r\n        type: EXIT_PROJECT,\r\n        exit: state\r\n    }\r\n}\r\n\r\nconst loadCurrentProjectAction = (state) => {\r\n    return {\r\n        type: LOAD_CURRENT,\r\n        id: state.id,\r\n        typeProject: state.typeProject,\r\n        sectionsProject: state.sectionsProject,\r\n        components: state.components\r\n    }\r\n}\r\n\r\nconst loadUpdateCurrentProject = (state) => {\r\n    return {\r\n        type: LOAD_UPDATE_PROJECT,\r\n        idProject: state.idProject,\r\n        sectionsProject: [...state.sectionsProject],\r\n        components: [...state.components]\r\n    }\r\n}\r\n\r\nconst loadUserAction = (state) => {\r\n    return {\r\n        type: LOAD_USER_CABINET,\r\n        active: true,\r\n        idUser: state.uid,\r\n        error: '',\r\n        projects: state.projects\r\n    }\r\n}\r\n\r\nconst logOutAction = (state) => {\r\n\r\n    return {\r\n        type: LOG_OUT_CABINET,\r\n        active: false,\r\n        idUser: null,\r\n        error: '',\r\n        projects: []\r\n    }\r\n}\r\n\r\nconst errorAction = (state) => {\r\n    return {\r\n        type: ERROR_CABINET,\r\n        error: state\r\n    }\r\n}\r\n\r\nexport {\r\n    CREATE_PROJECT, createProjectAction, /* cabinet */\r\n    LOAD_USER_CABINET, loadUserAction, /* cabinet */\r\n    LOG_OUT_CABINET, logOutAction, /* cabinet */\r\n    LOAD_CURRENT, loadCurrentProjectAction, /* builder */\r\n    LOAD_UPDATE_PROJECT, loadUpdateCurrentProject,\r\n    EXIT_PROJECT, exitProjectAction,\r\n    ERROR_CABINET, errorAction, /* both */\r\n}","import {LOAD_CURRENT,LOAD_UPDATE_PROJECT, EXIT_PROJECT} from './actions';\r\n\r\nconst initialState = {\r\n    loadProject: false,\r\n    idProject: null,\r\n    typeProject: null,\r\n    components: [],\r\n    sectionsProject: [],\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n    switch (action.type){\r\n\r\n        case LOAD_CURRENT: {\r\n            return {\r\n                ...state,\r\n                loadProject: true,\r\n                idProject: action.id,\r\n                typeProject: action.typeProject,\r\n                components: [...action.components],\r\n                sectionsProject: [...action.sectionsProject]\r\n            }\r\n        }\r\n\r\n        case LOAD_UPDATE_PROJECT: {\r\n            return {\r\n                ...state,\r\n                components: [...action.components],\r\n                sectionsProject: [...action.sectionsProject]\r\n            }\r\n        }\r\n\r\n        case EXIT_PROJECT: {\r\n            if (action.exit)\r\n            return {\r\n                ...state,\r\n                loadProject: false,\r\n                idProject: null,\r\n                typeProject: null,\r\n                components: []\r\n            }\r\n            else return state;\r\n        }\r\n        default: return state;\r\n    }\r\n};","import {LOAD_USER_CABINET, LOG_OUT_CABINET, ERROR_CABINET, CREATE_PROJECT, LOAD_UPDATE_PROJECT} from './actions';\r\n\r\nconst initialState = {\r\n    active: false,\r\n    idUser: null,\r\n    projects: [],\r\n    error: null,\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case LOAD_USER_CABINET: {\r\n\r\n            return {\r\n                ...state,\r\n                active: action.active,\r\n                idUser: action.idUser,\r\n                projects: [...action.projects]\r\n            }\r\n        }\r\n\r\n        case CREATE_PROJECT: {\r\n            return {\r\n                ...state,\r\n                projects: [...action.projects]\r\n            }\r\n        }\r\n\r\n        case LOAD_UPDATE_PROJECT: {\r\n            return {\r\n                ...state,\r\n                projects: state.projects.map(item => {\r\n                    if (item.id === action.idProject)\r\n                        item.components = [...action.components]\r\n                return item;\r\n                })\r\n            }\r\n        }\r\n\r\n        case LOG_OUT_CABINET: {\r\n            return {\r\n                ...state,\r\n                active: false,\r\n                idUser: null,\r\n                projects: []\r\n            }\r\n        }\r\n\r\n        case ERROR_CABINET: {\r\n            return {\r\n                ...state,\r\n                error: action.error\r\n            }\r\n        }\r\n        default: return state;\r\n    }\r\n}\r\n\r\n","import {combineReducers} from 'redux';\r\nimport reducerBuilder from './reducerBuilder';\r\nimport reducerCabinet from './reducerCabinet';\r\n\r\nexport default combineReducers({\r\n    builder: reducerBuilder,\r\n    cabinet: reducerCabinet,\r\n});","import {createStore, applyMiddleware, compose} from 'redux';\r\nimport firebase from  '../Firebase/Firebase';\r\nimport thunk from 'redux-thunk';\r\nimport combineReducers from './reducers';\r\n\r\nconst composeEnhancers =\r\n  typeof window === 'object' &&\r\n  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?\r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\r\n    }) : compose;\r\n\r\nconst middleware = composeEnhancers(\r\n  applyMiddleware(thunk.withExtraArgument({firebase})));\r\n\r\nconst store = createStore(combineReducers, middleware);\r\nexport default store;","import {loadUserAction, errorAction, logOutAction} from '../actions';\r\n\r\nconst middlewareLogin = (email,password) => async (dispatch,getState, {firebase}) => {\r\n        await firebase.login(email,password)\r\n        .then(response =>{\r\n            firebase.db.collection(\"users\").doc(response.user.uid).get()\r\n            .then(docUser => {\r\n                let user = docUser.data();\r\n                dispatch(loadUserAction({uid: docUser.id, projects: [...user.projects]}))\r\n            })\r\n        })\r\n        .catch((error) => {\r\n            console.error(error.message);\r\n            dispatch(errorAction(error.message));\r\n        });\r\n    }\r\n\r\nconst middlewareLoadUserData = (uid) => async (dispatch,getState, {firebase}) => {\r\n        await firebase.db.collection(\"users\").doc(uid).get()\r\n        .then(docUser => {\r\n            let user = docUser.data();\r\n            dispatch(loadUserAction({uid: uid, projects: [...user.projects]}))\r\n        })\r\n        .catch((error) => {\r\n            console.error(error.message);\r\n            dispatch(errorAction(error.message));\r\n        });\r\n    }\r\n\r\nconst middlewareLogOutUser = (uid) => async (dispatch,getState, {firebase}) => {\r\n    await firebase.signOut()\r\n    .then (response => {\r\n        dispatch(logOutAction());\r\n    })\r\n    .catch((error) => {\r\n        console.error(error.message);\r\n        dispatch(errorAction(error.message));\r\n    });\r\n}\r\nexport {\r\n    middlewareLogin,middlewareLoadUserData, middlewareLogOutUser\r\n}","import React from 'react';\r\nimport firebase from './Firebase';\r\nconst firebaseContext = React.createContext(firebase);\r\nexport default firebaseContext;","import React from 'react';\r\nimport firebaseContext from '../Firebase/firebaseContext';\r\n\r\n\r\nconst withFirebase = Component => props => {\r\n        return (\r\n            <firebaseContext.Consumer>\r\n                {firebase => <Component {...props} firebase = {firebase} /> }\r\n            </firebaseContext.Consumer>\r\n        )\r\n};\r\n\r\n\r\nexport default withFirebase;","import React,{useState} from 'react';\r\n\r\nexport default function(props) {\r\n    const [path] = useState(props.path ? props.path : '/img/loading.gif');\r\n    return (\r\n            <div className = 'loaderBox'>\r\n                <img className = 'loader' src = {path} alt = 'loader'></img> \r\n                <p>Loading {props.type}</p>\r\n            </div>\r\n    )\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './registration.scss';\r\n\r\nimport withFirebase from '../../components/firebaseHOC';\r\n\r\n\r\nclass Registration extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        firebase: PropTypes.object.isRequired, /** @firebase class for use firebase functions */\r\n        indexStream: PropTypes.object.isRequired /** @Events stream object */\r\n    }\r\n\r\n    state = {\r\n        firebase: this.props.firebase,\r\n        error: null,\r\n    }\r\n\r\n    emailRef = null;\r\n    passwordRef = null;\r\n\r\n    setRefEmail = (node) => this.emailRef = node;\r\n    setRefPassword = (node) => this.passwordRef = node;\r\n\r\n    createUser = event => {\r\n\r\n        const email = this.emailRef ? this.emailRef.value : null;\r\n        const password = this.passwordRef ? this.passwordRef.value : null;\r\n        const { firebase } = this.props;\r\n\r\n        if (password && email)\r\n        firebase.registration(email, password)\r\n        .then(response => {\r\n            if (!response) throw new Error('Ivaid registration')\r\n            firebase.db.collection(\"users\").doc(response.user.uid).set({\r\n                'projects': [],\r\n                'email': email,\r\n            }).then(() => this.props.indexStream.emit('EventRegistrationCorrect', response))\r\n        })\r\n        .catch((error) => {\r\n        console.error(error.message);\r\n        this.setState({error: error.message});\r\n        });\r\n        else  return this.setState({error: 'invalid user data'});\r\n    };\r\n\r\n    render(){\r\n        let  { error } = this.state;\r\n        return (\r\n            <div className = 'RegistrationBox'>\r\n                <div  className = 'RegistrationForm'>\r\n                    <h3>Registration</h3>\r\n                    <form autoComplete = 'off' className = 'RegForm'>\r\n                        { error ?\r\n                            <p className = 'error'>{error}</p>\r\n                            : null\r\n                        }\r\n                        <span>E-mail</span>\r\n                        <input ref = {this.setRefEmail} type = 'text' />\r\n                        <span>Password</span>\r\n                        <input className = 'password' autoComplete = \"off\" ref = {this.setRefPassword} type = 'password' />\r\n                        <input onClick = {this.createUser}\r\n                                className = 'loginButton'\r\n                                type = 'button'\r\n                                value = 'registration'\r\n                        />\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\nexport default withFirebase(Registration);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nimport styled from 'styled-components';\r\nimport Events from 'events';\r\nimport {middlewareLogin} from '../../redux/middleware/loadUserMiddleware';\r\n\r\nimport Loader from '../../components/loading/Loader';\r\nimport Registration from '../../components/Registration/Registration';\r\n\r\nimport {connect} from 'react-redux';\r\n\r\nimport './index.scss';\r\n\r\nconst AnimationTitle = styled.h3`\r\n    user-select: none;\r\n    transition: .4s linear all;\r\n    color: ${props => props.color === 'up' ? 'red' : 'blue'};\r\n`;\r\n\r\nclass Index extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        active: PropTypes.bool, /** @active - status firebase auth */\r\n        dispatch: PropTypes.func.isRequired, /** @dispatch - redux */\r\n        history: PropTypes.object.isRequired, /** @Router HTML5 history */\r\n        location: PropTypes.object.isRequired, /** @Router */\r\n        match: PropTypes.object.isRequired, /** @Router */\r\n        wrongEnter: PropTypes.string, /** @Error about invalid enter */\r\n        config: PropTypes.object, /** @config - app settings */\r\n    }\r\n\r\n    indexStream = new Events();\r\n\r\n    state = {\r\n        title:  \"Constructor\",\r\n        registrationActive: false,\r\n        regStatus: false,\r\n        wrongEnter: false,\r\n        error: '',\r\n        tilteContent: 'Build your landing page!'.split(''),\r\n        currentTitle: 'B',\r\n        positionTitle: 1,\r\n        directionAnimation: 'up',\r\n        msAnimation: 100,\r\n    }\r\n\r\n    emailImput = null;\r\n    passwordImput = null;\r\n    timerAnimation = null;\r\n\r\n    animationTitle = event => {\r\n        let self = this;\r\n        this.timerAnimation = setTimeout( function tick(){\r\n            if (self.state.directionAnimation === 'up'){\r\n                let counter = self.state.tilteContent.length;\r\n                const word = counter > self.state.positionTitle ?\r\n                            self.state.tilteContent[self.state.positionTitle] :\r\n                            self.state.tilteContent[self.state.positionTitle-1];\r\n                self.setState({\r\n                    ...self.state,\r\n                    currentTitle: self.state.currentTitle + word,\r\n                    positionTitle: self.state.positionTitle + 1,\r\n                    directionAnimation: self.state.positionTitle === counter ? 'down' : 'up',\r\n                    msAnimation: self.state.positionTitle === counter ? 1000 : 150\r\n                });\r\n            }\r\n            if (self.state.directionAnimation === 'down'){\r\n                let _title = self.state.currentTitle;\r\n                const length = self.state.currentTitle.length;\r\n                _title = _title.slice(0,length - 1);\r\n                self.setState({\r\n                    ...self.state,\r\n                    currentTitle: _title,\r\n                    positionTitle: self.state.positionTitle - 1,\r\n                    directionAnimation: self.state.positionTitle === 2 ? 'up' : 'down',\r\n                    msAnimation: self.state.positionTitle === 2 ? 1000 : 150\r\n                });\r\n            }\r\n            self.timerAnimation = setTimeout(tick, self.state.msAnimation);\r\n        }, this.state.msAnimation);\r\n    }\r\n\r\n    statusRegistration = event => {\r\n        event.additionalUserInfo.isNewUser ?\r\n            this.setState({\r\n                ...this.state,\r\n                regStatus: true,\r\n                registrationActive: false,\r\n                error: 'Account create!'\r\n            })\r\n        : console.error('error registration');\r\n    }\r\n\r\n    showBox = event => {\r\n        this.setState ({\r\n            ...this.state,\r\n        registrationActive: this.state.registrationActive ? false : true\r\n        });\r\n        event.stopPropagation();\r\n    }\r\n\r\n    authTo = event => {\r\n            if (this.emailImput && this.passwordImput)\r\n            this.props.dispatch(middlewareLogin(this.emailImput.value, this.passwordImput.value));\r\n            event.stopPropagation();\r\n    }\r\n\r\n    emailRef = node => this.emailImput = node;\r\n    passwordRef = node => this.passwordImput = node;\r\n\r\n    render(){\r\n\r\n        if (this.props.active) return <Redirect to = { '/Cabinet'} />\r\n        else if (!this.props.active) {\r\n            return (\r\n                <div className = 'LoginPage flex-column'>\r\n                        <h1>{this.state.title}</h1>\r\n                        <div className = 'LoginBox'>\r\n                        <AnimationTitle data-titlebuild color = {this.state.directionAnimation}>\r\n                            {this.state.currentTitle}\r\n                        </AnimationTitle>\r\n                            <div className = 'LoginForm'>\r\n                                <h3>Connect form</h3>\r\n                                {\r\n                                    this.props.wrongEnter || this.state.regStatus ?\r\n                                    <p className = 'error'>{this.props.wrongEnter}</p>\r\n                                    : null\r\n                                }\r\n                                <p>E-mail</p>\r\n                                <input ref = {this.emailRef} type = 'text' />\r\n                                <p>Password</p>\r\n                                <input ref = {this.passwordRef} type = 'password' />\r\n                                <input \r\n                                    onClick = {this.authTo} \r\n                                    className = 'loginButton enterInput'\r\n                                    type = 'button'\r\n                                    value = 'enter' />\r\n                                <input\r\n                                    onClick = {this.showBox}\r\n                                    className = {this.state.registrationActive ?\r\n                                        `loginButton registration selected` : 'loginButton registration'}\r\n                                    type = 'button'\r\n                                    value = 'registration'\r\n                                    />\r\n                            </div>\r\n                        </div>\r\n                        {\r\n                            this.state.registrationActive ?\r\n                            <Registration indexStream = {this.indexStream} />\r\n                            : null\r\n                        }\r\n                </div>\r\n            )\r\n        } else  return <Loader path = '/img/loading.gif' type = 'session' />\r\n    }\r\n\r\n    componentDidMount = (e) => {\r\n        this.animationTitle();\r\n        this.indexStream.on('EventRegistrationCorrect', this.statusRegistration);\r\n    }\r\n    componentWillUnmount = (e) => {\r\n        if (this.timerAnimation) clearTimeout(this.timerAnimation);\r\n        this.indexStream.off('EventRegistrationCorrect', this.statusRegistration);\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        active: state.cabinet.active, \r\n        wrongEnter: state.cabinet.error\r\n    }\r\n  }\r\n\r\nexport default connect(mapStateToProps)(Index);","\r\nimport {errorAction, loadUserAction, loadUpdateCurrentProject} from '../actions';\r\n\r\nconst middlewareDelete = item => async (dispatch,getState, {firebase}) => {\r\n    await firebase.db.collection('users').doc(item.uid).get()\r\n    .then(user => user.data())\r\n    .then(data => {\r\n        return {id: data.id, projects: data.projects.filter(itemdb => itemdb.id !== item.id)};\r\n    })\r\n    .then(data => {\r\n        firebase.db.collection(\"users\").doc(item.uid).update({\r\n            \"projects\": data.projects\r\n        })\r\n        .then(response => {\r\n            dispatch(loadUserAction({uid: data.id, projects: data.projects}));\r\n        });\r\n    })\r\n    .catch((error) => {\r\n        console.error(error.message);\r\n        dispatch(errorAction(error.message));\r\n    });\r\n}\r\n\r\nconst middlewareDeleteProjectComponent = item => async (dispatch, getState, {firebase}) => {\r\n    await firebase.db.collection('users').doc(item.uid).get()\r\n    .then(user => user.data())\r\n    .then(data => {\r\n        const userProjects = [...data.projects];\r\n        const findProject = userProjects.find(project => item.id === project.id);\r\n        if (!findProject) throw new Error('No found project');\r\n        findProject.components = findProject.components.filter(component =>\r\n            component.id !== item.idComponent\r\n        );\r\n        return {dataUpdate: data, findProject: findProject};\r\n    })\r\n    .then(data => {\r\n        let {dataUpdate} = data;\r\n        let {findProject} = data;\r\n        firebase.db.collection(\"users\").doc(item.uid).update({\r\n            \"projects\": dataUpdate.projects\r\n        })\r\n        .then(response => {\r\n            dispatch(loadUpdateCurrentProject({\r\n                components: [...findProject.components],\r\n                idProject: item.id,\r\n                sectionsProject: [...item.sectionsProject],\r\n            }))\r\n        });\r\n    })\r\n    .catch(error => {\r\n        console.error(error.message);\r\n        dispatch(errorAction(error.message));\r\n        return null;\r\n    });\r\n\r\n    return item.idComponent;\r\n}\r\n\r\nexport {middlewareDeleteProjectComponent};\r\nexport default middlewareDelete;\r\n","import React, {useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './icon.scss';\r\n\r\nfunction Icon(props){\r\n    const [path] = useState(props.path);\r\n    const [className] = useState(props.className ? props.className : null);\r\n    const [draggable] = useState(props.draggable ? true : false);\r\n\r\n    return (\r\n    <img\r\n        draggable = {draggable}\r\n        onClick = {props.onClick ? props.onClick : null}\r\n        className = {className}\r\n        title = {props.title ? props.title : null}\r\n        src = {process.env.PUBLIC_URL + path } alt = 'icon'>\r\n    </img>\r\n    )\r\n}\r\n\r\nIcon.propTypes = {\r\n    path: PropTypes.string.isRequired, // icon path\r\n    className: PropTypes.string, // class\r\n    draggable: PropTypes.bool // draggable bool\r\n}\r\n\r\nexport default Icon;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './Confirm.scss';\r\n\r\nconst Confirm = props => {\r\n\r\n    return (\r\n        <div className = 'wrapperConfirm'>\r\n            <div className = 'confirmSave'>\r\n                <span>Detected new changes</span>\r\n                <input\r\n                    className = 'saveCofirm'\r\n                    onClick = {props.cbSaveChanges}\r\n                    type = 'button'\r\n                    value = 'Save changes'\r\n                />\r\n                <input\r\n                    className = 'cancelCofirm'\r\n                    onClick = {props.cbCancelSave}\r\n                    type = 'button'\r\n                    value = 'Cancel'\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nConfirm.propTypes = {\r\n    cbSaveChanges: PropTypes.func.isRequired, // callback\r\n    cbCancelSave: PropTypes.func.isRequired // callback\r\n}\r\n\r\nexport default Confirm;","import React from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport './header.scss';\r\n\r\nimport {middlewareLogOutUser} from '../../redux/middleware/loadUserMiddleware';\r\nimport {connect} from 'react-redux';\r\nimport {Redirect, withRouter} from 'react-router-dom';\r\n\r\nimport eventEmitter from '../../EventEmitter.js';\r\nimport Icon from '../Icon/icon';\r\nimport Confirm from '../confirmBox/Confirm';\r\n\r\nconst iconPath = require('../../config.json').CabinetIcon;\r\n\r\nclass Header extends React.Component {\r\n\r\n    static propTypes = {\r\n        title: PropTypes.string.isRequired, /** @Config title app */\r\n        cabinetStream: PropTypes.object, /** @Events stream cabinet */\r\n        dispatch: PropTypes.func.isRequired, /** @dispatch redux */\r\n        history: PropTypes.object.isRequired, /** @Router HTML5 history */\r\n        location: PropTypes.object.isRequired, /** @Router */\r\n        match: PropTypes.object.isRequired, /** @Router */\r\n    };\r\n\r\n    state = {\r\n        idUser: this.props.idUser,\r\n        title: this.props.title,\r\n        isChange: false,\r\n        redirectConfirm: false,\r\n        redirectAbout: {\r\n            path:  '/Cabinet/About',\r\n            redirectA: false,\r\n        },\r\n        redirectCabinet: {\r\n            path:  '/Cabinet',\r\n            redirectC: false,\r\n        }\r\n    };\r\n\r\n    confirm = event => {\r\n        if (typeof event !== 'object')\r\n        this.setState({isChange: event});\r\n        else this.setState({isChange: event.false, redirectConfirm: event.confirm});\r\n    }\r\n\r\n    confirmSaveDetectChanges = event => {\r\n        eventEmitter.emit('EventRedirectSaveChanges');\r\n        this.setState({\r\n            redirectConfirm: false,\r\n            redirectCabinet: {\r\n                ...this.state.redirectCabinet,\r\n                redirectC: true\r\n            }\r\n        });\r\n    };\r\n\r\n    logOut = event => {\r\n        if (this.state.idUser)\r\n            this.props.dispatch(middlewareLogOutUser(this.props.idUser));\r\n        event.stopPropagation();\r\n    };\r\n\r\n    redirectAbout = event => {\r\n        const isPath = this.props.location.pathname !== this.state.redirectAbout.path;\r\n        if (isPath && !this.state.isChange)\r\n           this.setState({\r\n                redirectConfirm: false,\r\n                redirectAbout: {\r\n                   ...this.state.redirectAbout,\r\n                   redirectA: true\r\n               }\r\n           });\r\n           else this.setState({redirectConfirm: true});\r\n        event.stopPropagation()\r\n    };\r\n\r\n    redirectCabinet = event => {\r\n        if (event !== 'cancelMode'){\r\n            const isPath = this.props.location.pathname !== this.state.redirectCabinet.path;\r\n            if (isPath && this.state.isChange === false)\r\n            this.setState({\r\n                redirectConfirm: false,\r\n                redirectCabinet: {\r\n                    ...this.state.redirectCabinet,\r\n                    redirectC: true\r\n                }\r\n            });\r\n            else if (!this.state.redirectConfirm) this.setState({redirectConfirm: true});\r\n            event.stopPropagation();\r\n\r\n        } else this.setState({\r\n            redirectConfirm: false,\r\n            redirectCabinet: {\r\n                ...this.state.redirectCabinet,\r\n                redirectC: true\r\n            }\r\n        });\r\n    }\r\n\r\n    add = event => {\r\n        this.props.cabinetStream.emit('EventChangeWorkMode',{action: 'newProject'});\r\n        event.stopPropagation()\r\n    };\r\n\r\n    render(){\r\n        let {redirectA} = this.state.redirectAbout;\r\n        let {redirectC} = this.state.redirectCabinet;\r\n\r\n        if (redirectA) return <Redirect to = {this.state.redirectAbout.path} />\r\n        if(redirectC) return <Redirect to = {this.state.redirectCabinet.path} />\r\n\r\n        return (\r\n            <React.Fragment>\r\n            {this.state.isChange && this.state.redirectConfirm ? \r\n                <Confirm \r\n                    cbSaveChanges = {this.confirmSaveDetectChanges}\r\n                    cbCancelSave = {() => this.redirectCabinet('cancelMode')}\r\n                /> : null}\r\n                <header>\r\n                    <div className = 'container'>\r\n                        <div className = 'flex-row'>\r\n                                <div onClick = {this.redirectCabinet} className = 'header__CabinetInfo'>\r\n                                    <Icon className ='mainIcon' path = {iconPath} />\r\n                                    <h3 className = 'tilteApp'>{this.state.title}</h3>\r\n                                </div>\r\n                                {this.props.location.pathname === '/Cabinet' ?\r\n                                    <div onClick = {this.add} className = 'header__newProject__AddButton'>\r\n                                        <Icon className = 'Cabinet' path = '/img/plus.png' />\r\n                                    </div>\r\n                                    : null\r\n                                }\r\n                                    <div  className = 'Navigator'>\r\n                                        <Icon className = 'about' onClick = {this.redirectAbout}\r\n                                            title = 'about'\r\n                                            path = '/img/about_logo.svg'\r\n                                        />\r\n                                        <Icon className = 'logoutButton'\r\n                                            onClick = {this.logOut}\r\n                                            title = 'logOut'\r\n                                            path = '/img/logOut.svg'\r\n                                        />\r\n                                    </div>\r\n                        </div>\r\n                </div>\r\n                </header>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n    componentWillMount = () => {\r\n        eventEmitter.on('EventRedirectConfirm', this.confirm);\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        eventEmitter.off('EventRedirectConfirm', this.confirm);\r\n    }\r\n}\r\n\r\nexport default connect()(withRouter(Header));","import React, {useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport eventEmitter from '../../EventEmitter';\r\n\r\nconst ImageItem = props => {\r\n\r\n    const [id] = useState(props.id);\r\n    const [urlRegular] = useState(props.urls.regular);\r\n    const [urlFull] = useState(props.urls.full);\r\n    const [isFull] = useState(props.isFull);\r\n    const [urlContent] = useState(props.urlContent);\r\n\r\n    const showImageMenu = event => {\r\n       eventEmitter.emit(\"EventShowMenuImage\", {id: id, url: urlRegular, urlFull: urlFull, iframe: urlContent});\r\n    }\r\n\r\n\r\n    return (\r\n        <div className = {props.selected ? 'ItemBox selected' : 'ItemBox'}>\r\n            <img\r\n                className = 'ImageItem'\r\n                onClick = {showImageMenu}\r\n                src = {isFull ? urlFull : urlRegular}\r\n                alt = 'item'\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nImageItem.propTypes = {\r\n    id: PropTypes.oneOfType([\r\n        PropTypes.string,\r\n        PropTypes.number,\r\n    ]),\r\n    urls: PropTypes.object, // data with image path\r\n    isFull: PropTypes.bool, // mode view\r\n    urlContent: PropTypes.string // content path\r\n}\r\n\r\nexport default ImageItem;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst CreateProject = props => {\r\n\r\n    return (\r\n    <div className = 'Modal'>\r\n        <h3>Create new Project</h3>\r\n        { props.nameLength <= 3 ?\r\n            <span className = 'warning'>{props.warningLengthMin}</span> : null\r\n        }\r\n        { props.nameLength >= 20 ?\r\n            <span className = 'warning'>{props.warningLengthMax}</span> : null\r\n        }\r\n        <input\r\n            className = {props.typeClassName ? 'ready' : 'wrong'}\r\n            value = {props.name}\r\n            onChange = {props.cbValidateName}\r\n            type = 'text'\r\n            placeholder = \"Project name\"\r\n        />\r\n        { !props.validType ?\r\n            <span className = 'warning'>{props.warningType}</span> : null\r\n        }\r\n        <select onChange = {props.cbSelectOption} >\r\n            <option value = 'empty'>--------</option>\r\n            <option value = 'landing'>Landing</option>\r\n        </select>\r\n        <input \r\n            onClick = {props.cbAddNewProject}\r\n            className = 'acceptButton'\r\n            disabled = {props.dissabled}\r\n            type = 'button'\r\n            value = 'Submit'\r\n        />\r\n        <input onClick = {props.cbCancel} type ='button' value = 'Cancel' />\r\n    </div>\r\n    )\r\n}\r\n\r\nCreateProject.propTypes = {\r\n    typeClassName: PropTypes.bool, // type color className\r\n    name: PropTypes.string, // name of project\r\n    warningType: PropTypes.string, // errors\r\n    warningLengthMax: PropTypes.string, // error max length\r\n    warningLengthMin: PropTypes.string, // error min length\r\n    dissabled: PropTypes.bool, // buttons dissabled\r\n    validType: PropTypes.bool, // valid or no\r\n    cbValidateName: PropTypes.func.isRequired, // callback validate\r\n    cbAddNewProject: PropTypes.func.isRequired, // callback add new project\r\n}\r\n\r\nexport default CreateProject;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Icon from '../../Icon/icon';\r\nimport Loader from '../../loading/Loader';\r\n\r\nconst SearchModal = props => {\r\n\r\n    const refSearch = React.createRef();\r\n\r\n    const search = event => {\r\n        let value = null;\r\n        refSearch.current.focus();\r\n        value = refSearch.current.value;\r\n\r\n        props.cbSearch(event,value,props.modalSearchMode);\r\n        event.stopPropagation();\r\n    }\r\n    return (\r\n\r\n        <React.Fragment>\r\n            <div className = 'Modal Modal-search'>\r\n            <h3>{`Search ${props.modalSearchMode}`}</h3>\r\n            { props.error ?\r\n                <span className = 'error'>{props.error}</span> : null\r\n            }\r\n                <input ref = {refSearch} type = 'text' placeholder = \"name\" />\r\n                    <input\r\n                        disabled = {props.dissabled}\r\n                        className = 'acceptButton'\r\n                        type = 'button'\r\n                        value = 'Search'\r\n                        onClick = {search}\r\n                    />\r\n                <input onClick = {props.cbCancel} type ='button' value = 'Cancel' />\r\n            <div className = 'searchResultBox'>\r\n                {props.view ? props.cbMakeImageResultBox([...props.images]) : null}\r\n                {props.loading ? <Loader type = 'images' /> : null}\r\n            </div>\r\n        </div>\r\n        {  props.menuActive ?\r\n            <div className = 'ActionModalSearch'>\r\n            <button onClick = {props.cbShowImage} className = 'actionModalSearch__view'>\r\n                <Icon path = '/img/view.png' />\r\n            </button>\r\n            <button onClick = {props.cbSetSelectedImage} className = 'actionModalSearch__settings'>\r\n                <Icon path = '/img/settings.png' />\r\n            </button>\r\n            </div>\r\n            : null\r\n        }\r\n    </React.Fragment>\r\n\r\n    )\r\n}\r\n\r\nSearchModal.propTypes = {\r\n    modalSearchMode: PropTypes.string.isRequired, // search mode\r\n    error: PropTypes.string, // about error\r\n    dissabled: PropTypes.bool, // dissabled buttons\r\n    images: PropTypes.array, // array of images\r\n    cbCancel: PropTypes.func.isRequired, // callback cancel\r\n    cbShowImage: PropTypes.func.isRequired, // callback show image\r\n    cbSetSelectedImage: PropTypes.func.isRequired, // callback show image\r\n};\r\n\r\nexport default SearchModal;","import React,{Fragment} from 'react';\r\n\r\nimport isFetch from 'isomorphic-fetch';\r\nimport PropTypes from 'prop-types';\r\nimport eventEmitter from '../../EventEmitter.js';\r\n\r\nimport ImageItem from '../imageViewer/imageItem';\r\n\r\nimport CreateProject from './createProject/createProject';\r\nimport SearchModal from './Search/searchModal';\r\nimport './modal.scss';\r\nrequire('es6-promise').polyfill();\r\n\r\nclass ModalWindow extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        workMode: PropTypes.string.isRequired, /** @Mode for modal */\r\n        cabinetStream: PropTypes.object, /** @Events stream cabinet */\r\n        eventStreamBuild: PropTypes.object, /** @Events stream build */\r\n        idComponent: PropTypes.oneOfType([\r\n            PropTypes.string,\r\n            PropTypes.number\r\n        ]) /** @Id current user project */\r\n    }\r\n\r\n    state = {\r\n        workMode: this.props.workMode,\r\n        images: {\r\n            loading: false,\r\n            buttonSearchDisabled: false,\r\n            selectedItem: null, \r\n            showUrl: null, \r\n            images: null,\r\n            urlFull: null,\r\n            imageBoxView: false, \r\n            iframe: null,\r\n            error: ''\r\n        },\r\n        newProject: {\r\n            validateName: false,\r\n            validateType: false,\r\n            disabled: true,\r\n            name: '',\r\n            type: 'empty'\r\n        },\r\n        imageMenuActive: false,\r\n        warning: {\r\n            lengthMax: 'Max length: 20 symbols',\r\n            lengthMin: 'Min length: 4 symbol',\r\n            type: 'Select type of webpage',\r\n        }\r\n    }\r\n\r\n    inputSearch = null;\r\n    inputSelect = null;\r\n\r\n    searchData = (event,value, mode) => {\r\n\r\n        this.setState({...this.state, \r\n            images: {\r\n                ...this.state.inages,\r\n                loading: true,\r\n                buttonSearchDisabled: true\r\n            }\r\n        });\r\n\r\n        let search = null;\r\n        if (value) search = value;\r\n        else search = this.inputSearch.value;\r\n\r\n        if (mode !== 'media'){\r\n        const modeAPI = 'search/photos/?page=1&per_page=40&query=';\r\n        const api = `https://api.unsplash.com/${modeAPI}`;\r\n \r\n        isFetch(`${api + search}&client_id=${process.env.REACT_APP_UNSPLASH_TOKEN}`)\r\n        .then(response => {\r\n            if (response.ok) return response.json();\r\n            else throw new Error('request invalid');\r\n        })\r\n        .then(response => {\r\n            let {results} = response;\r\n            if (results.length)\r\n            this.setState({\r\n                ...this.state,\r\n                images: {\r\n                    ...this.state.images,\r\n                    loading: false,\r\n                    imageBoxView: true,\r\n                    error: '',\r\n                    images: [...results],\r\n                    buttonSearchDisabled: false\r\n                },\r\n            });\r\n            else throw new Error('Photos not found');\r\n        })\r\n        .catch(error => {\r\n            console.error(error.message);\r\n            this.setState({\r\n                ...this.state,\r\n                images: {\r\n                    ...this.state.images,\r\n                    buttonSearchDisabled: false,\r\n                    loading: false,\r\n                    error: error.message},\r\n                imageBoxView: false,\r\n            });\r\n        });\r\n        } else this.searchYouTubeAPI(search);\r\n    }\r\n\r\n    \r\n    searchYouTubeAPI = (search) => {\r\n\r\n        const API = `https://www.googleapis.com/youtube/v3/search?part=snippet`;\r\n        const RAITE = `&maxResults=25&order=date&q=${search}`;\r\n        const KEY = `&key=${process.env.REACT_APP_YOUTUBE_SEARCH_TOKEN}`;\r\n        isFetch(API + RAITE + KEY)\r\n        .then(res => {\r\n            if (res.ok)\r\n            return res.json();\r\n            else throw new Error (`Error ${res.status}`);\r\n        })\r\n        .then(res => {\r\n            const arrayItems = [];\r\n            res.items.forEach(item => {\r\n                arrayItems.push({\r\n                    urls: { regular: item.snippet.thumbnails.high.url },\r\n                    videoId: item.id.videoId\r\n                })\r\n            });\r\n            return arrayItems;\r\n        })\r\n        .then(results => {\r\n            this.setState({\r\n                ...this.state,\r\n                images: {\r\n                    ...this.state.images,\r\n                    loading: false,\r\n                    imageBoxView: true,\r\n                    error: '',\r\n                    images: [...results],\r\n                    buttonSearchDisabled: false\r\n                },\r\n            });\r\n        })\r\n        .catch(error => console.error(error));\r\n    }\r\n\r\n    showMenuImage = event => {\r\n        this.setState({\r\n            ...this.state, \r\n            imageMenuActive: true,\r\n            images: {\r\n                ...this.state.images,\r\n                selectedItem: event.id, \r\n                showUrl: event.url,\r\n                urlFull: event.urlFull,\r\n                iframe: event.iframe\r\n\r\n            }\r\n        });\r\n    }\r\n\r\n    showImage = event => {\r\n\r\n        const {showUrl, iframe} = this.state.images;\r\n\r\n        this.props.eventStreamBuild.emit(\"EventView\", {\r\n            action: true, \r\n            target: showUrl ? showUrl : null,\r\n            iframe: iframe,\r\n            mode: this.props.modalSearchMode\r\n        });\r\n        event.stopPropagation();\r\n    }\r\n\r\n    setSelectedImage = event => {\r\n\r\n        let data = {...this.state.images};\r\n        if (this.props.modalSearchMode === 'background'){\r\n            eventEmitter.emit(`EventSetBackgroundImage${this.props.idComponent}`,data);\r\n            eventEmitter.emit(`EventSetBImageInstumentPanel`,{images: data, mode: this.props.modalSearchMode});\r\n        } else if (this.props.modalSearchMode === 'image'){\r\n            eventEmitter.emit(`EventSetCurrentImage${this.props.idComponent}`, data);\r\n            eventEmitter.emit(`EventSetBImageInstumentPanel`, {images: data,  mode: this.props.modalSearchMode });\r\n        } else if (this.props.modalSearchMode === 'media'){\r\n            eventEmitter.emit(`EventSetContentMedia${this.props.idComponent}`,{\r\n                    iframe: data.iframe,\r\n                    mode: this.props.modalSearchMode\r\n                }\r\n            );\r\n            eventEmitter.emit(`EventSetIframe`, {iframe: data.iframe});\r\n        }\r\n\r\n        event.stopPropagation();\r\n    };\r\n\r\n    makeImageResultBox = (items) => {\r\n        if (!items) return null;\r\n\r\n        return items.map((item,i) =>{\r\n           return <ImageItem \r\n                key = {`item${i}`} \r\n                id = {i}\r\n                urlContent = {item.videoId ? item.videoId : null}\r\n                selected = {this.state.images.selectedItem === i ? true : false} \r\n                isFull = {false}\r\n                urls = {{...item.urls}} \r\n            />\r\n        });\r\n\r\n    }\r\n\r\n    addNewProject = event => {\r\n        let mode = this.state[this.state.workMode];\r\n        if (mode.validateType &&  mode.validateName) {\r\n            this.props.cabinetStream.emit('EventAddProject',\r\n            {\r\n                title: this.state[this.state.workMode].name,\r\n                type: this.state[this.state.workMode].type\r\n            });\r\n\r\n            this.props.cabinetStream.emit('EventChangeWorkMode',{action: 'default'});\r\n        }\r\n    }\r\n\r\n    selectOption = event => {\r\n\r\n        let inputs = {...this.state[this.state.workMode]};\r\n        inputs.type = event.target.value;\r\n        inputs.validateType = inputs.type !== 'empty';\r\n        inputs.disabled = inputs.validateType && inputs.validateName ? false : true;\r\n        this.setState({\r\n            ...this.state,\r\n            [this.state.workMode]: inputs\r\n        });\r\n    }\r\n\r\n    validateName = event => {\r\n\r\n        let inputs = {...this.state[this.state.workMode]};\r\n        inputs.name = event.target.value;\r\n        let lengthInput = inputs.name.length;\r\n        inputs.validateName = lengthInput >= 4 && lengthInput < 20 ? true : false;\r\n        inputs.disabled = inputs.validateType && inputs.validateName ? false : true;\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            [this.state.workMode]: inputs\r\n        })\r\n    };\r\n\r\n    cancel = event => {\r\n\r\n        if (this.state.workMode === 'Search')\r\n        this.props.eventStreamBuild.emit(\"EventModalSearchOn\", {action: 'offline', mode: null});\r\n        else  this.props.cabinetStream.emit('EventChangeWorkMode',{action: 'default'});\r\n    }\r\n\r\n    refSelect = (node) => this.inputSelect = node;\r\n    refSearch = node => this.inputSearch = node;\r\n\r\n    render(){\r\n        switch (this.state.workMode){\r\n            case 'newProject':\r\n                return <CreateProject\r\n                            dissabled = {this.state[this.state.workMode].disabled}\r\n                            nameLength = {this.state[this.state.workMode].name.length}\r\n                            name = {this.state[this.state.workMode].name}\r\n                            validType = {this.state[this.state.workMode].validateType}\r\n                            warningType = {this.state.warning.type}\r\n                            typeClassName = {this.state[this.state.workMode].validateName}\r\n                            warningLengthMin = {this.state.warning.lengthMin}\r\n                            warningLengthMax = {this.state.warning.lengthMax}\r\n                            cbValidateName = {this.validateName}\r\n                            cbSelectOption = {this.selectOption}\r\n                            cbAddNewProject = {this.addNewProject}\r\n                            cbCancel = {this.cancel}\r\n                        />\r\n            case 'Search':\r\n                    return (\r\n                        <SearchModal\r\n                            images = {this.state.images['images']}\r\n                            loading = {this.state.images.loading}\r\n                            view = {this.state.images.imageBoxView}\r\n                            dissabled = {this.state.images.buttonSearchDisabled}\r\n                            error = {this.state.images.error}\r\n                            cbCancel = {this.cancel}\r\n                            menuActive = {this.state.imageMenuActive}\r\n                            cbMakeImageResultBox = {this.makeImageResultBox}\r\n                            cbShowImage = {this.showImage}\r\n                            cbSetSelectedImage = {this.setSelectedImage}\r\n                            modalSearchMode = {this.props.modalSearchMode}\r\n                            cbSearch = {this.searchData}\r\n                        />\r\n                    )\r\n\r\n            default: return <Fragment></Fragment>\r\n        }\r\n    }\r\n\r\n    componentDidMount = event => {\r\n        if (this.state.workMode === 'Search')\r\n            eventEmitter.on('EventShowMenuImage', this.showMenuImage);\r\n    }\r\n\r\n    componentWillUnmount = event => {\r\n        if (this.state.workMode === 'Search')\r\n            eventEmitter.off('EventShowMenuImage', this.showMenuImage);\r\n    }\r\n}\r\n\r\nexport default ModalWindow;\r\n\r\n","import {createProjectAction, errorAction} from '../actions';\r\n\r\n\r\nfunction random(min,max){\r\n    return `${Math.floor(min + Math.random() * (max-min))}`\r\n}\r\n\r\n\r\nconst middlewareCreateProject = (uid, list, title, type) => async (dispatch,getState, {firebase}) => {\r\n    let lastProject = [...list];\r\n    const lastIndex = lastProject.length  ? lastProject[lastProject.length-1].id + 1 : 0;\r\n    const sectionsProject = [];\r\n    if (type === 'portfolio') sectionsProject.push(\"Header\");\r\n    else sectionsProject.push(\"Header\");\r\n    const header = {\r\n        backgroundImage: null,\r\n        backgroundColor: null,\r\n        id: `MainBackgroundHeader${random(0,10000)}`,\r\n        targetSection: \"Header\",\r\n        type: \"background\"\r\n    }\r\n\r\n    lastProject.push({\r\n        id: lastIndex,\r\n        title: title,\r\n        type: type,\r\n        components: [header],\r\n        sectionsProject: [...sectionsProject],\r\n    });\r\n\r\n    await firebase.db.collection(\"users\").doc(uid).update({\r\n        'projects': lastProject,\r\n    })\r\n    .then (() => dispatch(createProjectAction(lastProject)))\r\n    .catch(error => {\r\n        console.error(error.message);\r\n        dispatch(errorAction(error.message));\r\n    })\r\n};\r\n\r\nexport {\r\n    middlewareCreateProject\r\n}","import React, {useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {withRouter, Redirect} from 'react-router-dom';\r\n\r\nfunction Item(props) {\r\n\r\n    const [path] = useState( `/Cabinet/Build/${props.id}`);\r\n    const [productionPath] = useState(`/Cabinet/Build/${props.id}/Production/`);\r\n\r\n    let [canBuild,setCanBuild] = useState(false);\r\n    let [canProd, setCanProd] = useState(false);\r\n\r\n    const [id] = useState(props.id);\r\n    const [name] = useState(props.name);\r\n    const [type] = useState(props.type);\r\n\r\n\r\n    const build = event => {\r\n        if(props.location.pathname !== path)\r\n            setCanBuild(true);\r\n        event.stopPropagation();\r\n    };\r\n\r\n    const showProduction = event => {\r\n        if(props.location.pathname !== path)\r\n        setCanProd(true);\r\n        event.stopPropagation();\r\n    };\r\n\r\n    const deleteItem = event => {\r\n        props.cabinetStream.emit('EventDeleteItem',{\r\n            id: props.id,\r\n            name: props.name,\r\n            type: props.type\r\n        });\r\n        event.stopPropagation();\r\n    };\r\n\r\n\r\n    if (canBuild) return <Redirect to = {path} />\r\n    else if (canProd) return <Redirect to = {productionPath} />\r\n    else return (\r\n            <div className = 'item' data-id = {id}>\r\n                <p className = 'ProjectName'>{name}</p>\r\n                <p className = 'ProjectType'>{type}</p>\r\n                <div className = 'projectController'>\r\n                    <input \r\n                        onClick = {build} \r\n                        className = 'projectControllerButton_enter' \r\n                        type = 'button' \r\n                        value = 'enter build' />\r\n                    <input onClick = {deleteItem} \r\n                        className = 'projectControllerButton_delete' \r\n                        type = 'button' \r\n                        value = 'delete' />\r\n                </div>\r\n                <input onClick = {showProduction} \r\n                    className = 'productionButton' \r\n                    type = 'button' \r\n                    value = 'Production' />\r\n            </div>\r\n        )\r\n}\r\n\r\nItem.propTypes = {\r\n    id: PropTypes.number.isRequired, // id item\r\n    name: PropTypes.string.isRequired, // item name\r\n    type: PropTypes.string.isRequired, // item type\r\n}\r\n\r\nexport default withRouter(Item);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport {middlewareCreateProject} from '../../redux/middleware/createProjectMiddleware';\r\n\r\nimport './list.scss';\r\n\r\nimport Item from './Item';\r\n\r\nclass List extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        dispatch: PropTypes.func.isRequired, /** @dispatch redux */\r\n        idUser: PropTypes.string.isRequired, /** @UID current user */\r\n        list: PropTypes.array.isRequired, /** @List user projects */\r\n    }\r\n\r\n    state = {\r\n        redirect: false,\r\n    }\r\n\r\n    addNewProject = (item) => {\r\n        if (this.props.idUser) {\r\n            this.props.dispatch(middlewareCreateProject(\r\n                    this.props.idUser,\r\n                    this.props.list,\r\n                    item.title,\r\n                    item.type\r\n                ));\r\n        } else this.setState({...this.state, redirect: true});\r\n    }\r\n\r\n\r\n    makeList = (list) => {\r\n\r\n        return list.map (project => {\r\n\r\n            return(\r\n                <Item\r\n                    key = {project.id}\r\n                    id = {project.id}\r\n                    name = {project.title}\r\n                    type = {project.type}\r\n                    cabinetStream = {this.props.cabinetStream}\r\n                />\r\n            )\r\n        });\r\n    }\r\n\r\n    render(){\r\n        if (this.state.redirect)\r\n            return <Redirect to = { '/'} />\r\n            else return (\r\n                    <div className = 'projectsList__list'>\r\n                        {this.makeList([...this.props.list])}\r\n                    </div>\r\n                )\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.props.cabinetStream.on('EventAddProject',this.addNewProject);\r\n    }\r\n\r\n      componentWillUnmount = () => {\r\n        this.props.cabinetStream.off('EventAddProject',this.addNewProject);\r\n      }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        idUser: state.cabinet.idUser,\r\n        list: [...state.cabinet.projects]\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(List);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport List from '../List/List.jsx';\r\nimport './ProjectsSection.scss';\r\n\r\nconst ProjectsSection = props => {\r\n        return (\r\n            <section className = 'projectsList'>\r\n                <div className = 'container'>\r\n                    <div className = 'flex-column'>\r\n                        <div className = 'projectsList__about'>\r\n                            <h3>Your Projects</h3>\r\n                        </div>\r\n                        <List cabinetStream = {props.cabinetStream} />\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        )\r\n\r\n}\r\n\r\nProjectsSection.propTypes = {\r\n    cabinetStream: PropTypes.object /** @Events stream */\r\n}\r\n\r\nexport default ProjectsSection;","import React,{Fragment} from 'react';\nimport PropTypes from 'prop-types';\nimport Events from 'events';\nimport {Redirect} from 'react-router-dom';\nimport withFirebase from '../../components/firebaseHOC';\n\nimport {middlewareLogOutUser} from '../../redux/middleware/loadUserMiddleware';\nimport middlewareDelete from '../../redux/middleware/middlewareDelete';\nimport Loader from '../../components/loading/Loader';\nimport {connect} from 'react-redux';\n\nimport Header from '../../components/header/Header';\nimport Modal from '../../components/modalWindow/ModalWindow';\nimport ProjectsSection from '../../components/ProjectsSection/ProjectsSection';\n\nimport './Cabinet.scss';\n\nconst title = require('../../config.json').title;\n\nclass Cabinet extends React.PureComponent {\n\n  static propTypes = {\n    firebase: PropTypes.object.isRequired, /** @firebase class for use firebase functions */\n    active: PropTypes.bool, /** @active - status firebase auth */\n    dispatch: PropTypes.func.isRequired, /** @dispatch - redux */\n    history: PropTypes.object.isRequired, /** @Router HTML5 history */\n    location: PropTypes.object.isRequired, /** @Router */\n    match: PropTypes.object.isRequired, /** @Router */\n    idUser: PropTypes.string, /** @Session user id from redux */\n    projects: PropTypes.arrayOf(PropTypes.object).isRequired /** @Projects array with user projects from redux */\n  }\n\n  cabinetStream = new Events();\n\n  state = {\n    workMode: 'default',\n  }\n\n  logOut = () => {\n    this.props.dispatch(middlewareLogOutUser(this.props.idUser));\n  }\n\n  deletItem = event => {\n    this.props.dispatch(middlewareDelete({...event, uid: this.props.firebase.getCurrentUser().uid}));\n  };\n\n  changeWorkMode = event => {\n    this.setState ({\n      ...this.state,\n      workMode: event.action,\n    });\n  };\n\n  render(){\n\n    if (this.props.active){\n      return (\n        <Fragment>\n          <Header cabinetStream = {this.cabinetStream} title = {title} idUser = {this.props.idUser} />\n          <div className = 'Cabinet'>\n            {(this.state.workMode === 'newProject') ?\n              <Modal\n                cabinetStream = {this.cabinetStream}\n                workMode = {this.state.workMode} \n              />\n            : null}\n              <ProjectsSection cabinetStream = {this.cabinetStream} />\n            </div>\n        </Fragment>\n      )\n    } else if (!this.props.firebase.getCurrentUser()) return <Redirect to = { '/'} />\n    else return <Loader path = '/img/loading.gif' type = 'Cabinet' />\n  }\n\n\n  componentDidMount = () => {\n    this.cabinetStream.on('EventDeleteItem', this.deletItem);\n    this.cabinetStream.on('EventChangeWorkMode', this.changeWorkMode);\n  };\n\n  componentWillUnmount = () => {\n    this.cabinetStream.off('EventDeleteItem', this.deletItem);\n    this.cabinetStream.off('EventChangeWorkMode', this.changeWorkMode);\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    idUser: state.cabinet.idUser,\n    projects: [...state.cabinet.projects],\n    active: state.cabinet.active\n  }\n};\n\nexport default connect(mapStateToProps)(withFirebase(Cabinet));\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport eventEmitter from '../../../EventEmitter';\r\nimport styled from 'styled-components';\r\n\r\n\r\nconst Background = styled.div`\r\n    position: relative;\r\n    width: ${props => props.width || '100%'};\r\n    height: ${props => props.height || '100%'};\r\n    background-size: cover;\r\n    background-color: ${props => props.backgroundColor};\r\n    ${props => props.backgroundImage ? `background-image: url(${props.backgroundImage});` : null}\r\n`;\r\n\r\nclass BackgroundComponent extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        id: PropTypes.string.isRequired,\r\n        targetSection: PropTypes.string.isRequired,\r\n        background: PropTypes.string,\r\n        backgroundImage: PropTypes.string,\r\n        width: PropTypes.string,\r\n        height: PropTypes.string,\r\n        sectionNumber: PropTypes.number,\r\n        mode: PropTypes.string.isRequired\r\n    };\r\n\r\n    state = {\r\n        id: this.props.id,\r\n        targetSection: this.props.targetSection,\r\n        backgroundColor: this.props.background || this.props.color,\r\n        backgroundImage: this.props.backgroundImage,\r\n        width: this.props.width,\r\n        height: this.props.height\r\n    };\r\n\r\n    boxComponent = null; // ref\r\n    boxComponentRef = node => this.boxComponent = node;\r\n\r\n    saveDataParent = () => {\r\n        let boxInform =  this.boxComponent.getBoundingClientRect();\r\n        eventEmitter.emit(`EventSaveWidth${this.state.targetSection}`,{\r\n            sectionNumber: this.props.sectionNumber,\r\n            size: {width: boxInform.width, height: boxInform.height}\r\n        });\r\n    };\r\n\r\n    openBgInstruments = event => {\r\n\r\n        const componentsPatternBackground = {\r\n            id: this.state.id,\r\n            targetSection: this.state.targetSection,\r\n            type: 'background',\r\n            backgroundColor: this.state.backgroundColor,\r\n            backgroundImage: this.state.backgroundImage,\r\n        }\r\n        eventEmitter.emit('EventInstrumentPanel',{\r\n            componentStats: componentsPatternBackground,\r\n            targetSection: this.state.targetSection,\r\n            type: 'background',\r\n            id: this.state.id,\r\n        });\r\n        event.stopPropagation();\r\n    };\r\n\r\n    changeColor = eventItem => {\r\n        this.setState({\r\n            ...this.state,\r\n            backgroundColor: eventItem.colorRGB\r\n        });\r\n    };\r\n\r\n    setBackgroundImage = event => {\r\n        const {urlFull} = event;\r\n        this.setState({\r\n            ...this.state,\r\n            backgroundImage: urlFull,\r\n        });\r\n    };\r\n\r\n    render(){\r\n            if (this.props.mode === 'dev'){\r\n        return (\r\n            <Background\r\n                ref  = {this.boxComponentRef}\r\n                onDoubleClick={this.openBgInstruments}\r\n                data-name = {this.state.targetSection}\r\n                backgroundColor = {this.state.backgroundColor}\r\n                backgroundImage = {this.state.backgroundImage}\r\n                width = {this.state.width}\r\n                height = {this.state.height}\r\n            >\r\n                {this.props.children}\r\n            </Background>\r\n        )\r\n    } else if (this.props.mode === 'production'){\r\n\r\n        return (\r\n            <Background\r\n            ref  = {this.boxComponentRef}\r\n                data-name = {this.state.targetSection}\r\n                backgroundColor = {this.state.backgroundColor}\r\n                backgroundImage = {this.state.backgroundImage}\r\n                width = {this.state.width}\r\n                height = {this.state.height}\r\n            >\r\n            {this.props.children}\r\n            </Background>\r\n        )\r\n    }\r\n\r\n    }\r\n\r\n    componentDidUpdate = () => {\r\n        this.saveDataParent();\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.saveDataParent();\r\n        eventEmitter.on(`EventChangeColorBackground${this.state.id}`, this.changeColor);\r\n        eventEmitter.on(`EventSetBackgroundImage${this.state.id}`, this.setBackgroundImage);\r\n    };\r\n\r\n    componentWillUnmount = () => {\r\n        eventEmitter.off(`EventChangeColorBackground${this.state.id}`, this.changeColor);\r\n        eventEmitter.off(`EventSetBackgroundImage${this.state.id}`, this.setBackgroundImage);\r\n    };\r\n};\r\n\r\n\r\n\r\nexport default BackgroundComponent;","import React, {Fragment} from 'react';\r\nimport eventEmitter from '../../../EventEmitter';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport BackgroundComponent from '../components/Background';\r\nimport Loader from '../../loading/Loader';\r\n\r\nimport './MainBackground.scss';\r\n\r\n\r\nclass MainBackground extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        countComponents: PropTypes.number.isRequired, /** @Number last project */\r\n        menuActive: PropTypes.bool, /** @Bool active menu or unactive */\r\n        id: PropTypes.string.isRequired, /** @id current project */\r\n    };\r\n\r\n    state = {\r\n        targetSection: this.props.id,\r\n        editRedy: false,\r\n        component: null,\r\n    };\r\n\r\n    changeMode = () => {\r\n        if (!this.state.editStart || this.props.id !== this.props.editComponentName) {\r\n            this.setState({\r\n                ...this.state,\r\n                editStart: true\r\n            }, () =>\r\n            eventEmitter.emit('EventModeEdit', {\r\n                ...this.state,\r\n                editStart: true,\r\n                targetSection: this.state.targetSection,\r\n            }));\r\n        }\r\n    };\r\n\r\n    refSection = null;\r\n    refSectionFunc = node => node ? this.refSection = {data: node.getBoundingClientRect(), node: node} : node;\r\n\r\n    render() {\r\n        if (this.props.mode === 'dev'){\r\n            let props = this.props.currentProjectsData.components.find(item => item.targetSection === this.props.id) || null;\r\n            let children = this.props.componentJSX.filter(item => item.targetSection === this.props.id)\r\n            \r\n            if (props)\r\n            return (\r\n                <Fragment>\r\n                    <section\r\n                        key = {this.props.sectionNumber}\r\n                        className = {`element${this.props.sectionNumber}`} \r\n                        ref={this.refSectionFunc}\r\n                        data-class = 'editable' \r\n                        onClick = {this.changeMode}>\r\n                            <BackgroundComponent \r\n                                mode = {this.props.mode} \r\n                                {...props} sectionNumber = {this.props.sectionNumber} \r\n                            >\r\n                                {children.map(item => item.component) || null}\r\n                            </BackgroundComponent>\r\n                            {!this.state.editStart && \r\n                                <div className = 'warningEdit'><p>Click for start edit</p></div>\r\n                            }\r\n                    </section>\r\n                </Fragment>\r\n            );\r\n        } else if (this.props.mode === 'production'){\r\n            let props = this.props.currentProjectsData.components.find(item => item.targetSection === this.props.id) || null;\r\n            let children = this.props.componentJSX.filter(item => item.targetSection === this.props.id);\r\n\r\n            if (props)\r\n            return (\r\n                <Fragment>\r\n                    <section \r\n                        key = {this.props.sectionNumber}\r\n                        ref={this.refSectionFunc} \r\n                        data-class = 'production'\r\n                    >\r\n                        <BackgroundComponent\r\n                            key = {this.props.sectionNumber*2}\r\n                            mode = {this.props.mode}\r\n                            {...props} sectionNumber = {this.props.sectionNumber} \r\n                        >\r\n                            {children.map(item => item.component) || null}\r\n                        </BackgroundComponent>\r\n                    </section>\r\n                </Fragment>\r\n            );\r\n        }\r\n        else return <Loader type = {`${this.props.mode} components`} />;\r\n    }\r\n}\r\nexport default MainBackground;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport MainBackground from './MainBackground/MainBackground';\r\n\r\n\r\nconst Section = props => {\r\n    if (props.mode === 'dev'){\r\n    const {currentProjectsData} = props.userData;\r\n    const section = currentProjectsData.sectionsProject;\r\n            return section.map((item,i) => {\r\n                return (\r\n                        <MainBackground\r\n                            key = {item}\r\n                            componentJSX = {[...props.componentJSX]}\r\n                            currentProjectsData = {{...currentProjectsData}}\r\n                            editComponentName = {props.editComponentName}\r\n                            countComponents = {props.componentJSX.length}\r\n                            menuActive = {props.menuActive}\r\n                            sizeParentBox = {props.sizeParentBox}\r\n                            id = {item}\r\n                            sectionNumber = {i}\r\n                            mode = {props.mode}\r\n                        />\r\n                );\r\n            });\r\n    } else if (props.mode === 'production'){\r\n       const {section} = props;\r\n       const {currentProjectsData} = props;\r\n        return section.map((item,i) => {\r\n            return (\r\n                    <MainBackground\r\n                        key = {item}\r\n                        componentJSX = {[...props.componentsProdJSX]}\r\n                        currentProjectsData = {{...currentProjectsData}}\r\n                        editComponentName = {props.editComponentName}\r\n                        countComponents = {props.componentsProdJSX.length}\r\n                        sizeParentBox = {props.sizeParentBox}\r\n                        id = {item}\r\n                        sectionNumber = {i}\r\n                        mode = {props.mode}\r\n                    />\r\n            );\r\n        });\r\n    }\r\n}\r\n\r\nSection.propTypes = {\r\n    componentJSX: PropTypes.array, /// array with jsx components\r\n    editComponentName: PropTypes.string, // name current edit component\r\n    menuActive: PropTypes.bool, // build menu\r\n    mode: PropTypes.string.isRequired, // curent mode\r\n    sizeParentBox: PropTypes.object, // data with size main component\r\n    userData: PropTypes.object // users data\r\n}\r\n\r\nexport default Section;","import React from 'react';\r\n\r\nconst builderHOC = data => Component => {\r\n        return <Component key = { `${data.type}${data.id}`} {...data} />\r\n};\r\n\r\nexport default builderHOC;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport eventEmitter from '../../../EventEmitter';\r\nimport styled from 'styled-components';\r\n\r\n\r\nconst InputComponent = styled.input.attrs(props => {\r\n    if (props.mode !== 'production')\r\n    return ({\r\n        style: {\r\n            zIndex: props.indexZ ? '9999' : null,\r\n            left: props.coordX ? props.coordX : '45%',\r\n            top:  props.coordY ? props.coordY : '0%',\r\n        }\r\n    })\r\n})`\r\n    width: ${props => props.size ? props.size.w + 'px' : null};\r\n    height: ${props => props.size ? props.size.h + 'px' : null};\r\n    font-size: ${props => props.fontSize ? props.fontSize + 'px' : null};\r\n    position: absolute;\r\n    background-color: ${props => props.color || null};\r\n    border-radius: ${props => props.borderRadius || null};\r\n    white-space: normal;\r\n    font-weight: bold;\r\n`;\r\n\r\nconst ProductionStyle = styled(InputComponent)`\r\n    left: ${props => props.coordX ? props.coordX : '45%'};\r\n    top:  ${props => props.coordY ? props.coordY : '0%'};\r\n`;\r\n\r\n\r\nclass Input extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        id: PropTypes.oneOfType([\r\n            PropTypes.string,\r\n            PropTypes.number\r\n        ]).isRequired,\r\n        targetSection: PropTypes.string.isRequired,\r\n        sizeParentBox: PropTypes.object.isRequired,\r\n    }\r\n\r\n    state = {\r\n        id: this.props.id,\r\n        istrumentsActive: false,\r\n        getSizeBool: false,\r\n        sizeParentBox: this.props.sizeParentBox,\r\n        targetSection: this.props.targetSection,\r\n        size: this.props.size && this.props.size.w ? this.props.size : {w: '100', h:'50'},\r\n        fontSize: this.props.fontSize || 20,\r\n        borderRadius: this.props.borderRadius || null,\r\n        color: this.props.color || null,\r\n        shiftCoords: null,\r\n        content: this.props.content || 'Input',\r\n        posInput: this.props.coords.x ? {x: this.props.coords.x, y: this.props.coords.y} : null,\r\n        startDragNdrop: false,\r\n    }\r\n\r\n    openInputInstruments = event => {\r\n\r\n        const componentsPatternImage = {\r\n            id: this.state.id,\r\n            targetSection: this.state.targetSection,\r\n            type: 'input',\r\n            color: this.state.color,\r\n            borderRadius: this.state.borderRadius,\r\n            zIndex: null,\r\n            size: {...this.state.size},\r\n            fontSize: this.state.fontSize,\r\n            content: this.state.content,\r\n            coords: {...this.state.posInput}, // x, y\r\n        }\r\n\r\n        eventEmitter.emit(`EventInstrumentPanel`,{\r\n            componentStats: componentsPatternImage,\r\n            targetSection: this.state.targetSection,\r\n            id: this.state.id,\r\n            sizeTextValue: this.state.size\r\n        });\r\n        this.setState({...this.state, istrumentsActive: true});\r\n        event.stopPropagation();\r\n    };\r\n\r\n    saveCoords = event => {\r\n        if (event.nativeEvent.which !== 1) return false;\r\n        const element = this.refInput.getBoundingClientRect();\r\n\r\n        const cords = {\r\n            left: element.left,\r\n            top: element.top,\r\n            width: element.right - element.left,\r\n            height: element.bottom - element.top\r\n        }\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            shiftCoords: {x: event.clientX - cords.left, y: event.clientY - cords.top},\r\n            startDragNdrop: !this.state.startDragNdrop ? true : false\r\n        });\r\n\r\n        event.stopPropagation();\r\n    };\r\n\r\n    changeSize = eventSize => {\r\n        this.setState({...this.state, size: eventSize.size});\r\n    };\r\n\r\n    changeColor = colorRGB => {\r\n\r\n        if (typeof colorRGB === 'string')\r\n            this.setState({\r\n                ...this.state,\r\n                color: colorRGB\r\n            });\r\n    };\r\n\r\n    changeSizeText = eventSize => {\r\n        this.setState({...this.state, fontSize: eventSize.size});\r\n    };\r\n\r\n    setBorderRadius = eventItem => {\r\n\r\n        let radius = eventItem.borderRadius > 200 ? 200 : eventItem.borderRadius;\r\n        radius = eventItem.borderDown < 0 ? 0 : eventItem.borderRadius;\r\n            this.setState({\r\n                ...this.state,\r\n                borderRadius: radius\r\n            });\r\n    };\r\n\r\n    changeContent = eventItem => {\r\n        let booldContent = eventItem.content || eventItem.content === '';\r\n        if (booldContent)\r\n            this.setState({\r\n                ...this.state,\r\n                content: eventItem.content\r\n            });\r\n    }\r\n\r\n\r\n\r\n    checkPivotPosition = (coordX, coordY) => {\r\n\r\n        const element = this.refInput.getBoundingClientRect();\r\n        const borderTopLeft = 0;\r\n        const borderDown = 800 - element.height;\r\n        const borderRight = this.props.sizeParentBox.width - element.width;\r\n\r\n        if (coordY < borderTopLeft) coordY = borderTopLeft;\r\n        if (coordY > borderDown) coordY = borderDown;\r\n        if (coordX < borderTopLeft) coordX = borderTopLeft;\r\n        if (coordX > borderRight) coordX = borderRight;\r\n\r\n        return {x: coordX, y: coordY};\r\n    }\r\n\r\n    delta = (trans,transT) => {\r\n        return {\r\n            x: 0,\r\n            y: 0,\r\n        }\r\n    }\r\n    move = (x,y) => this.setState({...this.state, posInput: {x: x, y: y}});\r\n\r\n    moveInput = event => {\r\n\r\n        if (this.state.startDragNdrop && this.state.istrumentsActive){\r\n\r\n            let xItem = event.clientX - (this.props.sizeParentBox.left  * this.state.sectionNumber);\r\n            let yItem = event.clientY - (this.props.sizeParentBox.top * this.state.sectionNumber);\r\n\r\n            let coordX = xItem - this.state.shiftCoords.x + this.delta().x;\r\n            let coordY = yItem - this.state.shiftCoords.y + this.delta().y;\r\n\r\n            let coords = this.checkPivotPosition(coordX,coordY);\r\n\r\n            let convertToPercentX = coords.x * 100 / this.state.sizeParentBox.width;\r\n            let convertToPercentY = coords.y * 100 / this.state.sizeParentBox.height;\r\n\r\n            this.move(convertToPercentX.toFixed(2) + '%',\r\n                      convertToPercentY.toFixed(2) + '%');\r\n    }\r\n        event.stopPropagation();\r\n    };\r\n\r\n    stopDragNdrop = event => {\r\n        if (this.state.startDragNdrop) {\r\n            this.setState({...this.state, startDragNdrop: false})\r\n            eventEmitter.emit(`EventUpdatePosition${this.state.id}`, this.state.posInput);\r\n        }\r\n        event.stopPropagation();\r\n    };\r\n\r\n    saveSize = event => {\r\n        const {size} = event;\r\n        if (!this.state.getSizeBool){\r\n        this.setState({\r\n            ...this.state,\r\n            getSizeBool: true,\r\n            sectionNumber: event.sectionNumber,\r\n            sizeParentBox: {width: size.width, height: size.height}});\r\n        } else eventEmitter.off(`EventSaveWidth${this.state.targetSection}`,this.saveSize);\r\n    }\r\n\r\n    setWidth = eventItem => {\r\n        const {width} = eventItem;\r\n        this.setState({...this.state, \r\n            size: {\r\n                ...this.state.size,\r\n                w: width,\r\n            }\r\n        });\r\n    }\r\n\r\n    setHeight = eventItem => {\r\n        const {height} = eventItem;\r\n        this.setState({...this.state, \r\n            size: {\r\n                ...this.state.size,\r\n                h: height,\r\n            }\r\n        });\r\n    }\r\n\r\n    refInput = null;\r\n    refInputComponent = node => this.refInput = node;\r\n\r\n    render(){\r\n\r\n        if (this.props.mode === 'dev'){\r\n            return (\r\n                <InputComponent\r\n                    type = 'button'\r\n                    value = {this.state.content}\r\n                    ref = {this.refInputComponent}\r\n                    size = {this.state.size}\r\n                    color = {this.state.color}\r\n                    borderRadius = {this.state.borderRadius}\r\n                    fontSize = {this.state.fontSize}\r\n                    onClick = {this.openInputInstruments}\r\n                    onMouseDown = {this.saveCoords}\r\n                    onMouseMove= {this.moveInput}\r\n                    onMouseLeave = {this.stopDragNdrop}\r\n                    onMouseUp = {this.stopDragNdrop}\r\n                    onDragStart = {this.stop}\r\n                    coordX = {this.state.posInput ? this.state.posInput.x : null}\r\n                    coordY = {this.state.posInput ? this.state.posInput.y : null}\r\n                    indexZ = {this.state.startDragNdrop}\r\n                    data-imagecomponentwrapper\r\n                />\r\n            )\r\n        } else if (this.props.mode === 'production'){\r\n\r\n            return (\r\n                <ProductionStyle\r\n                    type = 'button'\r\n                    value = {this.state.content}\r\n                    ref = {this.refInputComponent}\r\n                    size = {this.state.size}\r\n                    color = {this.state.color}\r\n                    fontSize = {this.state.fontSize}\r\n                    borderRadius = {this.state.borderRadius}\r\n                    coordX = {this.state.posInput ? this.state.posInput.x : null}\r\n                    coordY = {this.state.posInput ? this.state.posInput.y : null}\r\n                    indexZ = {this.state.startDragNdrop}\r\n                    mode = {this.props.mode}\r\n                />\r\n            )\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        eventEmitter.on(`EventSaveWidth${this.state.targetSection}`, this.saveSize);\r\n        eventEmitter.on(`EventChangecolor${this.state.id}`, this.changeColor);\r\n        eventEmitter.on(`EventChangeSize${this.state.id}`, this.changeSize);\r\n        eventEmitter.on(`EventChangeSizeText${this.state.id}`, this.changeSizeText);\r\n        eventEmitter.on(`EventChangeContentText${this.state.id}`, this.changeContent);\r\n        eventEmitter.on(`EventSetWidth${this.state.id}`, this.setWidth);\r\n        eventEmitter.on(`EventSetHeight${this.state.id}`, this.setHeight);\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        eventEmitter.off(`EventSaveWidth${this.state.targetSection}`,this.saveSize);\r\n        eventEmitter.off(`EventChangeSize${this.state.id}`, this.changeSize);\r\n        eventEmitter.off(`EventChangeSizeText${this.state.id}`, this.changeSizeText);\r\n        eventEmitter.off(`EventChangeContentText${this.state.id}`, this.changeContent);\r\n        eventEmitter.off(`EventChangecolor${this.state.id}`, this.changeColor);\r\n        eventEmitter.off(`EventSetWidth${this.state.id}`, this.setWidth);\r\n        eventEmitter.off(`EventSetHeight${this.state.id}`, this.setHeight);\r\n    }\r\n}\r\n\r\nexport default Input;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport eventEmitter from '../../../EventEmitter';\r\nimport styled from 'styled-components';\r\n\r\nconst WrapperMedia = styled.div.attrs(props => {\r\n    if (props.mode !== 'production')\r\n    return ({\r\n        style: {\r\n            zIndex: props.indexZ ? '9999' : null,\r\n            left: props.coordX ? props.coordX : '45%',\r\n            top:  props.coordY ? props.coordY : '0%',\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            padding: props.mode === 'dev' ? '40px' : null\r\n        }\r\n    })\r\n})`\r\n    width: 30%;\r\n    height: 50%;\r\n    position: absolute;\r\n    background: ${props => props.mode === 'dev' ? `url(/img/media.svg)` : null};\r\n    border: ${props => props.mode === 'dev' ? `1px solid red` : null};\r\n    padding: 10px;\r\n`;\r\nconst Media = styled.iframe`\r\n    width: 100%;\r\n    height: 100%;\r\n    z-index: ${props => props.zIndex ? '0' : '-1'};\r\n`;\r\n\r\nconst ProductionStyle = styled(WrapperMedia)`\r\n    left: ${props => props.coordX ? props.coordX : '45%'};\r\n    top:  ${props => props.coordY ? props.coordY : '0%'};\r\n`;\r\n\r\nclass MediaComponent extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        id: PropTypes.oneOfType([\r\n            PropTypes.string,\r\n            PropTypes.number\r\n        ]).isRequired,\r\n        targetSection: PropTypes.string.isRequired,\r\n        sizeParentBox: PropTypes.object.isRequired,\r\n        content: PropTypes.string,\r\n    }\r\n\r\n    state = {\r\n        targetSection: this.props.targetSection,\r\n        id : this.props.id,\r\n        sizeParentBox: this.props.sizeParentBox,\r\n        shiftCoords: null,\r\n        size: this.props.size ? this.props.size : 30,\r\n        posMedia: this.props.coords.x ? {x: this.props.coords.x, y: this.props.coords.y} : null,\r\n        startDragNdrop: false,\r\n        istrumentsActive: false,\r\n        drawContent: false,\r\n        sectionNumber: this.props.sectionNumber,\r\n        content: this.props.content ? this.props.content : null\r\n    }\r\n\r\n    openMediaInstruments = event => {\r\n\r\n        const componentsPatternMedia = {\r\n            id: this.state.id,\r\n            targetSection: this.state.targetSection,\r\n            type: 'media',\r\n            zIndex: null,\r\n            content: this.state.content,\r\n            coords: {...this.state.posMedia}, // x, y\r\n        }\r\n\r\n        eventEmitter.emit('EventInstrumentPanel',{\r\n            componentStats: componentsPatternMedia,\r\n            targetSection: this.state.targetSection,\r\n            id: this.state.id,\r\n            sizeTextValue: this.state.size\r\n        });\r\n        this.setState({...this.state, istrumentsActive: true});\r\n        event.stopPropagation();\r\n    }\r\n\r\n    saveCoords = event => {\r\n        if (event.nativeEvent.which !== 1) return false;\r\n        const element = this.refMedia.getBoundingClientRect();\r\n        const cords = {\r\n            left: element.left,\r\n            top: element.top,\r\n            width: element.right - element.left,\r\n            height: element.bottom - element.top\r\n        }\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            shiftCoords: {x: event.clientX - cords.left, y: event.clientY - cords.top},\r\n            startDragNdrop: !this.state.startDragNdrop ? true : false\r\n        });\r\n\r\n        event.stopPropagation();\r\n    };\r\n\r\n    checkPivotPosition = (coordX, coordY) => {\r\n\r\n        const element = this.refMedia.getBoundingClientRect();\r\n        const borderTopLeft = 0;\r\n        const borderDown = 800 - element.height;\r\n        const borderRight = this.props.sizeParentBox.width - element.width;\r\n\r\n        if (coordY < borderTopLeft) coordY = borderTopLeft;\r\n        if (coordY > borderDown) coordY = borderDown;\r\n        if (coordX < borderTopLeft) coordX = borderTopLeft;\r\n        if (coordX > borderRight) coordX = borderRight;\r\n\r\n        return {x: coordX, y: coordY};\r\n    }\r\n\r\n    delta = (trans,transT) => {\r\n        return {\r\n            x: 0,\r\n            y: 0,\r\n        }\r\n    }\r\n    move = (x,y) => this.setState({...this.state, posMedia: {x: x, y: y}});\r\n\r\n    moveMedia = event => {\r\n\r\n        if (this.state.startDragNdrop && this.state.istrumentsActive){\r\n\r\n            let xItem = event.clientX - (this.props.sizeParentBox.left  * this.state.sectionNumber);\r\n            let yItem = event.clientY - (this.props.sizeParentBox.top * this.state.sectionNumber);\r\n\r\n            let coordX = xItem - this.state.shiftCoords.x + this.delta().x;\r\n            let coordY = yItem - this.state.shiftCoords.y + this.delta().y;\r\n\r\n            let coords = this.checkPivotPosition(coordX,coordY);\r\n\r\n            let convertToPercentX = coords.x * 100 / this.state.sizeParentBox.width;\r\n            let convertToPercentY = coords.y * 100 / this.state.sizeParentBox.height;\r\n\r\n            this.move(convertToPercentX.toFixed(2) + '%',\r\n                      convertToPercentY.toFixed(2) + '%');\r\n    }\r\n        event.stopPropagation();\r\n    };\r\n\r\n    stopDragNdrop = event => {\r\n        if (this.state.startDragNdrop) {\r\n            this.setState({...this.state, startDragNdrop: false})\r\n            eventEmitter.emit(`EventUpdatePosition${this.state.id}`, this.state.posMedia);\r\n        }\r\n        event.stopPropagation();\r\n    };\r\n\r\n    setContent = event => {\r\n        const {iframe} = event;\r\n        this.setState({...this.state, content: iframe});\r\n    };\r\n\r\n\r\n    saveSize = event => {\r\n        const {size} = event;\r\n        if (!this.state.getSizeBool){\r\n        this.setState({\r\n            ...this.state,\r\n            getSizeBool: true,\r\n            sectionNumber: event.sectionNumber + 1,\r\n            sizeParentBox: {width: size.width, height: size.height}});\r\n        } else eventEmitter.off(`EventSaveWidth${this.state.targetSection}`,this.saveSize);\r\n    }\r\n\r\n    refMedia = null;\r\n    refMediaComponent = node => this.refMedia = node;\r\n\r\n    render(){\r\n        const url = 'https://www.youtube.com/embed/';\r\n\r\n        if (this.props.mode === 'dev'){\r\n            return (\r\n                <WrapperMedia\r\n                    ref = {this.refMediaComponent}\r\n                    onClick={this.openMediaInstruments}\r\n                    onMouseDown = {this.saveCoords}\r\n                    onMouseMove= {this.moveMedia}\r\n                    onMouseLeave = {this.stopDragNdrop}\r\n                    onMouseUp = {this.stopDragNdrop}\r\n                    onDragStart = {this.stop}\r\n                    mode = {this.props.mode}\r\n                    indexZ = {this.state.startDragNdrop}\r\n                    coordX = {this.state.posMedia ? this.state.posMedia.x : null}\r\n                    coordY = {this.state.posMedia ? this.state.posMedia.y : null}\r\n                >\r\n                {!this.state.startDragNdrop ? \r\n                    <Media\r\n                        src= {this.state.content ? url + this.state.content : null }\r\n                        drawContent = {this.state.drawContent}\r\n                        width = {this.state.width} \r\n                        height = {this.state.height}\r\n                        zIndex = {this.state.content}\r\n                        allowfullscreen\r\n                    ></Media> : null\r\n                }\r\n                </WrapperMedia>\r\n            )\r\n        } else if (this.props.mode === 'production'){\r\n            return (\r\n                <ProductionStyle\r\n                    ref = {this.refMediaComponent}\r\n                    indexZ = {this.state.startDragNdrop}\r\n                    coordX = {this.state.posMedia ? this.state.posMedia.x : null}\r\n                    coordY = {this.state.posMedia ? this.state.posMedia.y : null}\r\n                    mode = {this.props.mode}\r\n                >\r\n                {!this.state.startDragNdrop ? \r\n                    <Media\r\n                        src= {this.state.content ? url + this.state.content : null }\r\n                        drawContent = {this.state.drawContent}\r\n                        width = {this.state.width} \r\n                        height = {this.state.height}\r\n                        zIndex = {this.state.content}\r\n                        mode = {this.props.mode}\r\n                        allowfullscreen\r\n                    ></Media> : null\r\n                }\r\n                </ProductionStyle>\r\n            )\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        eventEmitter.on(`EventSetContentMedia${this.state.id}`, this.setContent);\r\n        eventEmitter.on(`EventSaveWidth${this.state.targetSection}`, this.saveSize);\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        eventEmitter.off(`EventSaveWidth${this.state.targetSection}`,this.saveSize);\r\n        eventEmitter.off(`EventSetContentMedia${this.state.id}`, this.setContent);\r\n    }\r\n}\r\n\r\nexport default MediaComponent;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport eventEmitter from '../../../EventEmitter';\r\nimport styled from 'styled-components';\r\n\r\n\r\nconst WrapperImg = styled.div.attrs(props => {\r\n    if (props.mode !== 'production')\r\n    return ({\r\n        style: {\r\n            zIndex: props.indexZ ? '9999' : null,\r\n            left: props.coordX ? props.coordX : '45%',\r\n            top:  props.coordY ? props.coordY : '0',\r\n        }\r\n    })\r\n})`\r\n    width: ${props => props.size ? props.size.w + '%' : '30%'};\r\n    height: ${props => props.size ? props.size.h + '%' : '50%'};\r\n    position: absolute;\r\n`;\r\n\r\nconst ImageStyle = styled.img`\r\n    width: 100%;\r\n    height: 100%;\r\n    opacity: ${props => props.opacity};\r\n    border-radius: ${props => props.borderRadius}px;\r\n    pointer-events: none;\r\n    position: absolute;\r\n`;\r\n\r\nconst ProductionStyle = styled(WrapperImg)`\r\n    left: ${props => props.coordX ? props.coordX : '50%'};\r\n    top:  ${props => props.coordY};\r\n`;\r\n\r\nclass Image extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        id: PropTypes.oneOfType([\r\n            PropTypes.string,\r\n            PropTypes.number\r\n        ]).isRequired,\r\n        targetSection: PropTypes.string.isRequired,\r\n        sizeParentBox: PropTypes.object.isRequired,\r\n    }\r\n\r\n    state = {\r\n        id: this.props.id,\r\n        istrumentsActive: false,\r\n        getSizeBool: false,\r\n        opacity: this.props.opacity || 1,\r\n        sectionNumber: 0,\r\n        borderRadius: this.props.borderRadius || 0,\r\n        sizeParentBox: this.props.sizeParentBox,\r\n        targetSection: this.props.targetSection,\r\n        path: this.props.image ? this.props.image : this.props.path,\r\n        size: this.props.size ? this.props.size : {w: 30, h: 50},\r\n        shiftCoords: null,\r\n        posImage: this.props.coords.x ? {x: this.props.coords.x, y: this.props.coords.y} : null,\r\n        startDragNdrop: false,\r\n    }\r\n\r\n    openImageInstruments = event => {\r\n\r\n        const componentsPatternImage = {\r\n            id: this.state.id,\r\n            targetSection: this.state.targetSection,\r\n            size: {...this.state.size},\r\n            type: 'image',\r\n            borderRadius: this.state.borderRadius,\r\n            opacity: this.state.opacity,\r\n            zIndex: null,\r\n            image: this.state.path,\r\n            coords: {...this.state.posImage}, // x, y\r\n        }\r\n\r\n        eventEmitter.emit(`EventInstrumentPanel`,{\r\n            componentStats: componentsPatternImage,\r\n            targetSection: this.state.targetSection,\r\n            id: this.state.id,\r\n            sizeTextValue: this.state.size\r\n        });\r\n        this.setState({...this.state, istrumentsActive: true});\r\n        event.stopPropagation();\r\n    };\r\n\r\n    saveCoords = event => {\r\n        if (event.nativeEvent.which !== 1) return false;\r\n        const element = this.refImage.getBoundingClientRect();\r\n\r\n        const cords = {\r\n            left: element.left,\r\n            top: element.top,\r\n            width: element.right - element.left,\r\n            height: element.bottom - element.top\r\n        }\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            shiftCoords: {x: event.clientX - cords.left, y: event.clientY - cords.top},\r\n            startDragNdrop: !this.state.startDragNdrop ? true : false\r\n        });\r\n\r\n        event.stopPropagation();\r\n    };\r\n\r\n    checkPivotPosition = (coordX, coordY) => {\r\n\r\n        const element = this.refImage.getBoundingClientRect();\r\n        const borderTopLeft = 0;\r\n        const borderDown = 800 - element.height;\r\n        const borderRight = this.props.sizeParentBox.width - element.width;\r\n\r\n        if (coordY < borderTopLeft) coordY = borderTopLeft;\r\n        if (coordY > borderDown) coordY = borderDown;\r\n        if (coordX < borderTopLeft) coordX = borderTopLeft;\r\n        if (coordX > borderRight) coordX = borderRight;\r\n\r\n        return {x: coordX, y: coordY};\r\n    }\r\n\r\n    delta = (trans,transT) => {\r\n        return {\r\n            x: 0,\r\n            y: 0,\r\n        }\r\n    }\r\n    move = (x,y) => this.setState({...this.state, posImage: {x: x, y: y}});\r\n\r\n    moveText = event => {\r\n\r\n        if (this.state.startDragNdrop && this.state.istrumentsActive){\r\n\r\n            let xItem = event.clientX - (this.props.sizeParentBox.left  * this.state.sectionNumber);\r\n            let yItem = event.clientY - (this.props.sizeParentBox.top * this.state.sectionNumber);\r\n\r\n            let coordX = xItem - this.state.shiftCoords.x + this.delta().x;\r\n            let coordY = yItem - this.state.shiftCoords.y + this.delta().y;\r\n\r\n            let coords = this.checkPivotPosition(coordX,coordY);\r\n\r\n            let convertToPercentX = coords.x * 100 / this.state.sizeParentBox.width;\r\n            let convertToPercentY = coords.y * 100 / this.state.sizeParentBox.height;\r\n\r\n            this.move(convertToPercentX.toFixed(2) + '%',\r\n                      convertToPercentY.toFixed(2) + '%');\r\n    }\r\n        event.stopPropagation();\r\n    };\r\n\r\n    stopDragNdrop = event => {\r\n        if (this.state.startDragNdrop) {\r\n            this.setState({...this.state, startDragNdrop: false})\r\n            eventEmitter.emit(`EventUpdatePosition${this.state.id}`, this.state.posImage);\r\n        }\r\n        event.stopPropagation();\r\n    };\r\n\r\n    setCurrentImage = event => {\r\n        const {urlFull} = event;\r\n        this.setState({...this.state, path: urlFull});\r\n    };\r\n\r\n    setWidth = eventItem => {\r\n        const {width} = eventItem;\r\n        this.setState({...this.state, \r\n            size: {\r\n                ...this.state.size,\r\n                w: width,\r\n            }\r\n        });\r\n    }\r\n\r\n    setHeight = eventItem => {\r\n        const {height} = eventItem;\r\n        this.setState({...this.state, \r\n            size: {\r\n                ...this.state.size,\r\n                h: height,\r\n            }\r\n        });\r\n    }\r\n\r\n    saveSize = event => {\r\n        const {size} = event;\r\n        if (!this.state.getSizeBool){\r\n        this.setState({\r\n            ...this.state,\r\n            getSizeBool: true,\r\n            sectionNumber: event.sectionNumber,\r\n            sizeParentBox: {width: size.width, height: size.height}});\r\n        } else eventEmitter.off(`EventSaveWidth${this.state.targetSection}`,this.saveSize);\r\n    }\r\n\r\n    changeSizeImage = eventItem => {\r\n        this.setState({...this.state, size: eventItem.size});\r\n    };\r\n\r\n    setBorderRadius = eventItem => {\r\n\r\n    let radius = eventItem.borderRadius > 200 ? 200 : eventItem.borderRadius;\r\n    radius = eventItem.borderDown < 0 ? 0 : eventItem.borderRadius;\r\n        this.setState({\r\n            ...this.state,\r\n            borderRadius: radius\r\n        });\r\n    };\r\n\r\n    setOpacity = eventItem => {\r\n        let opacity = eventItem.opacity > 1 ? 1 : eventItem.opacity;\r\n        opacity = eventItem.opacity < 0 ? 0 : eventItem.opacity;\r\n            this.setState({\r\n                ...this.state,\r\n                opacity: opacity\r\n            });\r\n    }\r\n \r\n    refImage = null;\r\n    refImageComponent = node => this.refImage = node;\r\n\r\n    render(){\r\n\r\n        if (this.props.mode === 'dev'){\r\n            return (\r\n                <WrapperImg\r\n                ref = {this.refImageComponent}\r\n                size = {this.state.size}\r\n                onClick = {this.openImageInstruments}\r\n                onMouseDown = {this.saveCoords}\r\n                onMouseMove= {this.moveText}\r\n                onMouseLeave = {this.stopDragNdrop}\r\n                onMouseUp = {this.stopDragNdrop}\r\n                onDragStart = {this.stop}\r\n                coordX = {this.state.posImage ? this.state.posImage.x : null}\r\n                coordY = {this.state.posImage ? this.state.posImage.y : null}\r\n                indexZ = {this.state.startDragNdrop}\r\n                data-imagecomponentwrapper\r\n                >\r\n                    <ImageStyle\r\n                        data-imagecomponent\r\n                        borderRadius = {this.state.borderRadius}\r\n                        opacity = {this.state.opacity}\r\n                        src = {this.state.path}\r\n                        alt = 'img'\r\n                    />\r\n                </WrapperImg>\r\n            )\r\n        } else if (this.props.mode === 'production'){\r\n            return (\r\n                <ProductionStyle\r\n                ref = {this.refImageComponent}\r\n                size = {this.state.size}\r\n                mode = {this.props.mode}\r\n                coordX = {this.state.posImage ? this.state.posImage.x : null}\r\n                coordY = {this.state.posImage ? this.state.posImage.y : null}\r\n                indexZ = {this.state.startDragNdrop}\r\n                >\r\n                    <ImageStyle\r\n                        borderRadius = {this.state.borderRadius}\r\n                        opacity = {this.state.opacity}\r\n                        crossOrigin = \"anonymous\"\r\n                        src = {this.state.path}\r\n                        alt = 'img'\r\n                    />\r\n                </ProductionStyle>\r\n            )\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        eventEmitter.on(`EventSetCurrentImage${this.state.id}`, this.setCurrentImage);\r\n        eventEmitter.on(`EventChangeSize${this.state.id}`, this.changeSizeImage);\r\n        eventEmitter.on(`EventSetOpacity${this.state.id}`, this.setOpacity);\r\n        eventEmitter.on(`EventSetBorderRadius${this.state.id}`,this.setBorderRadius);\r\n        eventEmitter.on(`EventSaveWidth${this.state.targetSection}`, this.saveSize);\r\n        eventEmitter.on(`EventSetWidth${this.state.id}`, this.setWidth);\r\n        eventEmitter.on(`EventSetHeight${this.state.id}`, this.setHeight);\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        eventEmitter.off(`EventSaveWidth${this.state.targetSection}`,this.saveSize);\r\n        eventEmitter.off(`EventChangeSize${this.state.id}`, this.changeSizeImage);\r\n        eventEmitter.off(`EventSetOpacity${this.state.id}`, this.setOpacity);\r\n        eventEmitter.off(`EventSetBorderRadius${this.state.id}`,this.setBorderRadius);\r\n        eventEmitter.off(`EventSetCurrentImage${this.state.id}`, this.setCurrentImage);\r\n        eventEmitter.off(`EventSetWidth${this.state.id}`, this.setWidth);\r\n        eventEmitter.off(`EventSetHeight${this.state.id}`, this.setHeight);\r\n    }\r\n}\r\n\r\nexport default Image;","\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport eventEmitter from '../../../EventEmitter';\r\nimport styled from 'styled-components';\r\nimport './components.scss';\r\n\r\n\r\n\r\nconst WrapperText = styled.div.attrs(props => {\r\n    if (props.mode !== 'production')\r\n    return ({\r\n        style: {\r\n            zIndex: props.indexZ ? '9999' : null,\r\n            left: props.coordX ? props.coordX : '50%',\r\n            top:  props.coordY,\r\n        }\r\n    })\r\n})`\r\n    position: absolute;\r\n    font-size: ${props => props.size ? props.size : '120px'};\r\n    color: ${props => props.textColor};\r\n    text-align: center;\r\n    margin: 0;\r\n    word-break: break-all;\r\n`;\r\n\r\nconst TextStyle = styled.p`\r\n    width: 100%;\r\n    height: 100%;\r\n    font-family: ${props => props.font};\r\n    text-align: center;\r\n    margin: 0;\r\n    user-select: none;\r\n`;\r\n\r\n\r\nconst ProductionStyle = styled(WrapperText)`\r\n    left: ${props => props.coordX ? props.coordX : '50%'};\r\n    top:  ${props => props.coordY};\r\n\r\n    @media ${`screen and (max-width: 500px)`} {\r\n        font-size: 50px;\r\n      }\r\n`;\r\n\r\nclass TextComponent extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        id: PropTypes.oneOfType([\r\n            PropTypes.string,\r\n            PropTypes.number\r\n        ]).isRequired,\r\n        targetSection: PropTypes.string.isRequired,\r\n        sizeParentBox: PropTypes.object.isRequired,\r\n        mode: PropTypes.string.isRequired,\r\n    }\r\n\r\n    state = {\r\n        id: this.props.id,\r\n        istrumentsActive: false,\r\n        isHaveSize: false,\r\n        parent: this.props.sizeParentBox,\r\n        targetSection: this.props.targetSection,\r\n        colorText: this.props.color,\r\n        sizeText: this.props.fontSize || this.props.size,\r\n        shiftCoords: null,\r\n        position: this.props.coords,\r\n        font: this.props.font ? this.props.font : 'Arial',\r\n        startDragNdrop: false,\r\n        contentText: this.props.content ? this.props.content : null,\r\n        sectionNumber: 0,\r\n        getSizeBool: false\r\n    }\r\n\r\n    openTitleInstruments = event => {\r\n\r\n         const componentsPatternText = {\r\n            id: this.state.id,\r\n            targetSection: this.state.targetSection,\r\n            type: 'text',\r\n            font: this.state.font,\r\n            color: this.state.colorText,\r\n            fontSize: this.state.sizeText,\r\n            content: this.state.contentText,\r\n            coords: {...this.state.posText}, // x, y\r\n        };\r\n        eventEmitter.emit(`EventInstrumentPanel`,{\r\n                type: 'text',\r\n                targetSection: this.state.targetSection,\r\n                id: this.state.id,\r\n                componentStats: componentsPatternText,\r\n                sizeTextValue: this.state.sizeText\r\n        });\r\n        this.setState({...this.state, istrumentsActive: true});\r\n        event.stopPropagation();\r\n    }\r\n\r\n    changeColorText = colorRGB => {\r\n        if (typeof colorRGB === 'string')\r\n            this.setState({\r\n                ...this.state,\r\n                colorText: colorRGB\r\n            });\r\n    };\r\n\r\n    changeSizeText = eventSize => {\r\n        this.setState({...this.state, sizeText: eventSize.size});\r\n    };\r\n\r\n    saveSize = event => {\r\n        const {size} = event;\r\n        if (!this.state.getSizeBool){\r\n        this.setState({\r\n            ...this.state,\r\n            getSizeBool: true,\r\n            sectionNumber: event.sectionNumber,\r\n            parent: {width: size.width, height: size.height}});\r\n        } else eventEmitter.off(`EventSaveWidth${this.state.targetSection}`,this.saveSize);\r\n    }\r\n\r\n    changeContentText = eventContent => {\r\n        let booldContent = eventContent.content || eventContent.content === '';\r\n        if (booldContent)\r\n            this.setState({\r\n                ...this.state,\r\n                contentText: eventContent.content\r\n            });\r\n    };\r\n\r\n    saveCoords = event => {\r\n        if (event.nativeEvent.which !== 1) return false;\r\n        const element = this.refText.getBoundingClientRect();\r\n\r\n        const cords = {\r\n            left: element.left,\r\n            top: element.top,\r\n            width: element.right - element.left,\r\n            height: element.bottom - element.top\r\n        }\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            shiftCoords: {x: event.clientX - cords.left, y: event.clientY - cords.top},\r\n            startDragNdrop: !this.state.startDragNdrop ? true : false\r\n        });\r\n\r\n        event.stopPropagation();\r\n    };\r\n\r\n    setFont = eventItem => {\r\n        this.setState({\r\n            ...this.state,\r\n            font: eventItem.font\r\n        });\r\n    };\r\n\r\n    checkPivotPosition = (coordX, coordY) => {\r\n\r\n        const element = this.refText.getBoundingClientRect();\r\n        const borderTopLeft = 0;\r\n        const borderDown = 800 - element.height;\r\n        const borderRight = this.props.sizeParentBox.width - element.width;\r\n\r\n        if (coordY < borderTopLeft) coordY = borderTopLeft;\r\n        if (coordY > borderDown) coordY = borderDown;\r\n        if (coordX < borderTopLeft) coordX = borderTopLeft;\r\n        if (coordX > borderRight) coordX = borderRight;\r\n\r\n        return {x: coordX, y: coordY};\r\n    }\r\n\r\n    delta = (trans,transT) => {\r\n        return {\r\n            x: 0,\r\n            y: 0,\r\n        }\r\n    }\r\n    move = (x,y) => this.setState({...this.state, position: {x: x, y: y}});\r\n\r\n    moveText = event => {\r\n\r\n        if (this.state.startDragNdrop && this.state.istrumentsActive){\r\n\r\n            let sectionNum = this.state.sectionNumber === 0 ? 1 : this.state.sectionNumber;\r\n            let xItem = event.clientX - (this.props.sizeParentBox.left  * sectionNum);\r\n            let yItem = event.clientY - (this.props.sizeParentBox.top * sectionNum);\r\n\r\n            let coordX = xItem - this.state.shiftCoords.x + this.delta().x;\r\n            let coordY = yItem - this.state.shiftCoords.y + this.delta().y;\r\n\r\n            let coords = this.checkPivotPosition(coordX,coordY);\r\n\r\n            let convertToPercentX = coords.x * 100 / this.state.parent.width;\r\n            let convertToPercentY = coords.y * 100 / this.state.parent.height;\r\n\r\n            this.move(convertToPercentX.toFixed(2) + '%',\r\n                      convertToPercentY.toFixed(2) + '%');\r\n    }\r\n        event.stopPropagation();\r\n    };\r\n\r\n    stopDragNdrop = event => {\r\n        if (this.state.startDragNdrop) {\r\n            this.setState({...this.state, startDragNdrop: false})\r\n            eventEmitter.emit(`EventUpdatePosition${this.state.id}`, this.state.position);\r\n        }\r\n        event.stopPropagation();\r\n    };\r\n\r\n    refText = null;\r\n    refTextComponent = node => this.refText = node;\r\n\r\n\r\n    render(){\r\n        if (this.props.mode === 'dev'){\r\n            return (\r\n                <WrapperText\r\n                    ref  = {this.refTextComponent}\r\n                    onClick={this.openTitleInstruments}\r\n                    textColor = {this.state.colorText ? this.state.colorText : 'red'}\r\n                    size = {this.state.sizeText ? this.state.sizeText + 'px' : '120px'}\r\n                    onMouseDown = {this.saveCoords}\r\n                    onMouseMove= {this.moveText}\r\n                    onMouseLeave = {this.stopDragNdrop}\r\n                    onMouseUp = {this.stopDragNdrop}\r\n                    coordX = {this.state.position ? this.state.position.x : null}\r\n                    coordY = {this.state.position ? this.state.position.y : null}\r\n                    indexZ = {this.state.startDragNdrop}\r\n                    data-textcomponent\r\n                >\r\n                    <TextStyle font = {this.state.font}>{this.state.contentText}</TextStyle>\r\n                </WrapperText>\r\n            ) \r\n        } else if (this.props.mode === 'production'){\r\n            return (\r\n                <ProductionStyle\r\n                    ref  = {this.refTextComponent}\r\n                    mode = {this.props.mode}\r\n                    textColor = {this.state.colorText ? this.state.colorText : 'red'}\r\n                    size = {this.state.sizeText ? this.state.sizeText + 'px' : '120px'}\r\n                    coordX = {this.state.position ? this.state.position.x : null}\r\n                    coordY = {this.state.position ? this.state.position.y : null}\r\n                    indexZ = {this.state.startDragNdrop}\r\n                >\r\n                    <TextStyle font = {this.state.font}>{this.state.contentText}</TextStyle>\r\n                </ProductionStyle>\r\n            )\r\n        }\r\n\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        eventEmitter.on(`EventChangeColorText${this.state.id}`, this.changeColorText);\r\n        eventEmitter.on(`EventSetFont${this.state.id}`, this.setFont);\r\n        eventEmitter.on(`EventChangeSize${this.state.id}`, this.changeSizeText);\r\n        eventEmitter.on(`EventChangeContentText${this.state.id}`, this.changeContentText);\r\n        eventEmitter.on(`EventSaveWidth${this.state.targetSection}`,this.saveSize);\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        eventEmitter.off(`EventChangeColorText${this.state.id}`, this.changeColorText);\r\n        eventEmitter.off(`EventSetFont${this.state.id}`, this.setFont);\r\n        eventEmitter.off(`EventChangeSize${this.state.id}`, this.changeSizeText);\r\n        eventEmitter.off(`EventChangeContentText${this.state.id}`, this.changeContentText);\r\n        eventEmitter.off(`EventSaveWidth${this.state.targetSection}`,this.saveSize);\r\n    }\r\n}\r\n\r\nexport default TextComponent;","import React,{Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport {Redirect} from 'react-router-dom';\r\nimport {loadCurrentProjectAction, exitProjectAction} from '../../redux/actions';\r\n\r\nimport Section from '../../components/buildComponents/section';\r\nimport builderHOC from '../../components/builderHOC';\r\nimport Loader from '../../components/loading/Loader';\r\nimport Header from '../../components/header/Header';\r\nimport withFirebase from '../../components/firebaseHOC';\r\nimport {connect} from 'react-redux';\r\n\r\n\r\n\r\nimport Input from '../../components/buildComponents/components/Input';\r\nimport Media from '../../components/buildComponents/components/Media';\r\nimport Image from '../../components/buildComponents/components/Image';\r\nimport TextComponent from '../../components/buildComponents/components/Text';\r\nimport BackgroundComponent from '../../components/buildComponents/components/Background';\r\n\r\nimport './production.scss';\r\n\r\nclass Production extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        firebase: PropTypes.object,\r\n    }\r\n\r\n    state = {\r\n        idProject: parseInt(this.props.match.params.param),\r\n        mode: 'production',\r\n        projectEmpty: false,\r\n        isLoadComponents: true,\r\n        componentsProdJSX: []\r\n    }\r\n\r\n    makeProduction = array => {\r\n\r\n        let {componentsProdJSX} = this.state;\r\n        let _components = [];\r\n\r\n        array.forEach(item => {\r\n\r\n            let props = {\r\n                sizeParentBox: {\r\n                    width: this.prodRef.data.width,\r\n                    height: this.prodRef.data.height,\r\n                    top: this.prodRef.data.top,\r\n                    left: this.prodRef.data.left,\r\n                },\r\n                ...item,\r\n                mode: 'production',\r\n            }\r\n\r\n            let Component = null;\r\n                if (item.type === 'background') Component = BackgroundComponent;\r\n                else if (item.type === 'input') Component = Input;\r\n                else if (item.type === 'media') Component = Media;\r\n                else if (item.type === 'image') Component = Image;\r\n                else if (item.type === 'text') Component = TextComponent;\r\n\r\n            const patternJSX = {\r\n                id: item.id,\r\n                targetSection: item.targetSection,\r\n                component: builderHOC(props)(Component)\r\n            };\r\n                _components.push(patternJSX);\r\n        });\r\n            this.setState({\r\n                ...this.state,\r\n                isLoadComponents: false,\r\n                componentsProdJSX: [...componentsProdJSX, ..._components],\r\n            });\r\n    };\r\n\r\n    prodRef = null;\r\n    mainProductionRef  = node => node ?\r\n    this.prodRef = {data: node.getBoundingClientRect(), node: node} : node;\r\n\r\n    render(){\r\n\r\n        const {userData} = this.props;\r\n        const {currentProjectsData} = userData;\r\n        const section = currentProjectsData.sectionsProject;\r\n\r\n        if (this.state.projectEmpty) return <Redirect to = '/Cabinet' />\r\n\r\n        if (userData.active && currentProjectsData.loadProject){\r\n            return (\r\n            <Fragment>\r\n                <Header key = 'Header' title = \"Constructor\" idUser = {userData.idUser} />\r\n                <div\r\n                    ref = {this.mainProductionRef}\r\n                    className = 'Production'\r\n                    key = 'Production'\r\n                    >\r\n                    {!this.state.isLoadComponents ?\r\n                        section.length &&\r\n                            <Section \r\n                                key = 'section'\r\n                                mode = {this.state.mode}\r\n                                currentProjectsData = {currentProjectsData}\r\n                                componentsProdJSX = {this.state.componentsProdJSX}\r\n                                section = {section}\r\n                            />\r\n                        : null\r\n                    }\r\n                </div>\r\n            </Fragment>\r\n            )\r\n        } else if (!this.props.firebase.getCurrentUser()) return <Redirect to = '/' />\r\n        else return <Loader  key = 'Loader' path = '/img/loading.gif' type = 'production' />\r\n    }\r\n\r\n    componentDidUpdate = (prevProps, prevState) => {\r\n        let {userData} = this.props;\r\n        let {currentProjectsData} = userData;\r\n\r\n        if (userData.active && !currentProjectsData.loadProject) {\r\n            const current =  userData.projects.find(item => item.id === this.state.idProject)\r\n            if (current)\r\n            this.props.dispatch(loadCurrentProjectAction({\r\n                id: current.id,\r\n                typeProject: current.type,\r\n                sectionsProject: [...current.sectionsProject],\r\n                components: [...current.components]\r\n            }))\r\n            else this.setState({...this.state, projectEmpty: true});\r\n        }\r\n\r\n        if (this.state.isLoadComponents && currentProjectsData.loadProject) \r\n            this.makeProduction(currentProjectsData.components);\r\n\r\n    }\r\n\r\n\r\n    componentDidMount = () => {\r\n        let {userData} = this.props;\r\n        let {currentProjectsData} = userData;\r\n\r\n        if (userData.active && !currentProjectsData.loadProject) {\r\n            const current =  userData.projects.find(item => item.id === this.state.idProject)\r\n            this.props.dispatch(loadCurrentProjectAction({\r\n                id: current.id,\r\n                sectionsProject: [...current.sectionsProject],\r\n                typeProject: current.type,\r\n                components: [...current.components]\r\n            }));\r\n        };\r\n\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n\r\n        let {userData} = this.props;\r\n        if (userData.active)  this.props.dispatch(exitProjectAction(true));\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        userData: {\r\n            active: state.cabinet.active,\r\n            idUser: state.cabinet.idUser,\r\n            projects: [...state.cabinet.projects],\r\n           currentProjectsData: {...state.builder}\r\n        },\r\n    }\r\n};\r\n\r\n  export default connect(mapStateToProps)(withFirebase(Production));","import React, {Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\n\r\n\r\nimport withFirebase from '../../components/firebaseHOC';\r\n\r\nimport Header from '../../components/header/Header';\r\nimport Loader from '../../components/loading/Loader';\r\n\r\nimport './about.scss';\r\n\r\nclass About extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        config: PropTypes.object.isRequired, /** @Config app */\r\n        firebase: PropTypes.object.isRequired, /** @firebase class for use firebase functions */\r\n        history: PropTypes.object, /** @Router HTML5 history */\r\n        location: PropTypes.object, /** @Router */\r\n        match: PropTypes.object, /** @Router */\r\n    }\r\n\r\n    state = {\r\n        config: this.props.config\r\n    };\r\n\r\n    render(){\r\n\r\n        let user = this.props.firebase.getCurrentUser();\r\n        if (user && this.props.idUser) {\r\n            const { config } = this.state;\r\n            return (\r\n                <Fragment>\r\n                    <Header title = {config.title} idUser = {user.uid} />\r\n                    <section className = 'About'>\r\n                        <div className = 'container'>\r\n                            <div className = 'col-12'>\r\n                                <div className = 'information'>\r\n                                <img alt = 'img' className = 'logoAbout' src = {process.env.PUBLIC_URL + '/img/about.jpg'}/>\r\n                                    <p className ='developer'><span>Developer:</span> {config.about.developer}</p>\r\n                                    <p className = 'year'><span>Year:</span> {config.about.year}</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </section>\r\n                </Fragment>\r\n            )\r\n        } else if (!user) return <Redirect to = { '/'} />\r\n        else return <Loader path = '/img/loading.gif' type = 'About' />\r\n\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n      idUser: state.cabinet.idUser,\r\n    }\r\n  };\r\n\r\nexport default connect(mapStateToProps)(withFirebase(About));","import {errorAction, loadUpdateCurrentProject} from '../actions';\r\n\r\nconst updateMiddleware = (item) => async (dispatch,getState, {firebase}) => {\r\n \r\n    let newProjects = item.projects.map(project => {\r\n        if (project.id === item.idProject) {\r\n            project.components = [...item.components]\r\n            project.sectionsProject = [...item.sectionsProject]\r\n        }\r\n        return project;\r\n    });\r\n    await firebase.db.collection(\"users\").doc(item.uid).update({\r\n        'projects': JSON.parse(JSON.stringify(newProjects))\r\n    })\r\n    .then(response => {\r\n        let project = item.projects.find(itemdb => itemdb.id === item.idProject);\r\n        dispatch(loadUpdateCurrentProject({\r\n            components: [...project.components],\r\n            idProject: item.idProject,\r\n            sectionsProject: item.sectionsProject,\r\n        }))\r\n    })\r\n    .catch(error => dispatch(errorAction(error.message)));\r\n};\r\n\r\nexport default updateMiddleware;","import React,{useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Viewer.scss';\r\n\r\nfunction Viewer(props){\r\n\r\n    let [mode] = useState(props.mode);\r\n    let [path] = useState(props.path);\r\n\r\n    const closeViewer = event => {\r\n        props.eventStreamBuild.emit(\"EventView\", { action: false, target: null});\r\n        event.stopPropagation();\r\n    }\r\n\r\n    return (\r\n        \r\n        <div onClick = {closeViewer} className = 'Viewer'>\r\n            {(mode === 'image' || mode === 'background') ? <img src = {path} alt = 'fullImage' /> \r\n            : \r\n            <iframe \r\n            src= {`https://www.youtube.com/embed/${props.iframe}`}\r\n            title = 'youtube'\r\n            frameBorder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" \r\n            allowFullScreen>\r\n            </iframe>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nViewer.propTypes = {\r\n    eventStreamBuild: PropTypes.object.isRequired, // events stream\r\n    mode: PropTypes.string.isRequired, // use mode\r\n    path: PropTypes.string.isRequired // path to data component\r\n}\r\n\r\nexport default Viewer;","import React,{Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {SketchPicker} from 'react-color';\r\n\r\n\r\nconst InputInstruments = props => {\r\n\r\n    let {colorPickerActive} = props.instrumentPanel;\r\n    let {content} = props.componentStats;\r\n    let {fontSize} = props.componentStats;\r\n    let {coords} = props.componentStats;\r\n    let {size} = props.componentStats;\r\n    let {color} = props.componentStats;\r\n\r\n    let _content = content !== '' ? 'Input' : '';\r\n\r\n    return (\r\n        <Fragment>\r\n            <p className = 'titleInstument'>Position: </p>\r\n            <span className = 'textCoordsPanel'>\r\n            {coords.x ?\r\n                coords.x + ' / ' + coords.y : ' drop for active'}\r\n            </span>\r\n            <p className = 'titleInstument'>Color: </p>\r\n            <input \r\n                onClick = {props.cbSetColor}\r\n                className = 'button_switch'\r\n                type = 'button'\r\n                value = 'color pick'\r\n            />\r\n                { colorPickerActive ?\r\n                    <div className ='wrapperColorPicker'>\r\n                        <SketchPicker\r\n                        onChangeComplete={props.cbHandleChangeComplete}\r\n                        color = {color ? color: 'red'}\r\n                        />\r\n                    </div>\r\n                    : null\r\n                }\r\n            <p className = 'titleInstument'>Size (%):</p>\r\n            <div className = 'panel__sizes'>\r\n                <input\r\n                    className = 'button_switch'\r\n                    onChange = {props.cbSetWidth}\r\n                    type=\"number\"\r\n                    min = '10' max = '200'\r\n                    value = {size.w ? size.w : 100}\r\n                />\r\n                <input \r\n                    className = 'button_switch'\r\n                    onChange = {props.cbSetHeight}\r\n                    type=\"number\"\r\n                    min = '10' max = '200'\r\n                    value = {size.h ? size.h : 50}\r\n                />\r\n            </div>\r\n            <p className = 'titleInstument'>Text size: </p>\r\n            <input \r\n                className = 'button_switch'\r\n                onChange = {props.cbSetSize}\r\n                type=\"number\"\r\n                min = '10' max = '200'\r\n                value = {fontSize ? fontSize : 21}\r\n            />\r\n            <p className = 'titleInstument'>Border radius: </p>\r\n            <input\r\n                onChange = {props.cbSetBorderRadius}\r\n                className = 'button_switch radius'\r\n                type=\"number\"\r\n                value = {props.componentStats.borderRadius ?\r\n                            props.componentStats.borderRadius : 10\r\n                        }\r\n                min = '10' max = '200'\r\n            />\r\n            <p className = 'titleInstument'>Content: </p>\r\n            <input\r\n            className = 'button_switch'\r\n            onChange = {props.cbSetContent}\r\n            maxLength = '100'\r\n            type = 'text'\r\n            value = {content ? content : _content}\r\n        />\r\n            <input \r\n                onClick = {props.cbDelete}\r\n                className = 'instrumentPanel__deleteComponentButton'\r\n                type=\"button\"\r\n                value = 'delete'\r\n            />\r\n        </Fragment>\r\n    )\r\n};\r\n\r\nInputInstruments.propTypes = {\r\n    componentStats: PropTypes.object.isRequired, // object with current component data\r\n    cbSetColor: PropTypes.func.isRequired, // callback set color\r\n    cbHandleChangeComplete: PropTypes.func.isRequired, // callback state color picker\r\n    cbSetWidth: PropTypes.func.isRequired, // callback set width\r\n    cbSetHeight: PropTypes.func.isRequired, // callback set height\r\n    cbSetSize: PropTypes.func.isRequired, // callback set size\r\n    cbSetBorderRadius: PropTypes.func.isRequired, // callback set border-radius\r\n    cbSetContent: PropTypes.func.isRequired, // callback set content input\r\n    cbDelete: PropTypes.func.isRequired, // callback delete\r\n}\r\n\r\nexport default InputInstruments;","import React,{Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst MediaInstruments = props => {\r\n\r\n    let {fontSize} = props.componentStats;\r\n    let {coords} = props.componentStats;\r\n\r\n    return (\r\n        <Fragment>\r\n            <p className = 'titleInstument'>Position: </p>\r\n            <span className = 'textCoordsPanel'>\r\n            {coords.x ?\r\n                coords.x + ' / ' + coords.y : ' drop for active'}\r\n            </span>\r\n            <p className = 'titleInstument'>Size: </p>\r\n            <input\r\n                className = 'button_switch'\r\n                onChange = {props.cbSetSize}\r\n                type=\"number\"\r\n                min = '10' max = '200'\r\n                defaultValue = {fontSize ? fontSize : 120}\r\n            />\r\n            <p className = 'titleInstument'>Content: </p>\r\n            <input \r\n                onClick = {props.cbSearch}\r\n                className = 'ImageSearchButton'\r\n                type=\"button\"\r\n                value = 'search media'\r\n            />\r\n            <input \r\n                onClick = {props.cbDelete}\r\n                className = 'instrumentPanel__deleteComponentButton'\r\n                type=\"button\"\r\n                value = 'delete'\r\n            />\r\n        </Fragment>\r\n    )\r\n};\r\n\r\nMediaInstruments.propTypes = {\r\n    componentStats: PropTypes.object.isRequired, // object with current component data\r\n    cbSearch: PropTypes.func.isRequired, // callback search\r\n    cbSetSize: PropTypes.func.isRequired, // callback set size\r\n    cbDelete: PropTypes.func.isRequired, // callback delete\r\n}\r\n\r\nexport default MediaInstruments;","import React, {Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ImageInstruments = props => {\r\n\r\n    let {coords} = props.componentStats;\r\n    let {size} = props.componentStats;\r\n    let fileRef = React.createRef();\r\n    return (\r\n        <Fragment>\r\n        <p className = 'titleInstument'>Position: </p>\r\n        <span className = 'textCoordsPanel'>\r\n        {coords.x ?\r\n            coords.x + ' / ' + coords.y : ' drop for active'}\r\n        </span>\r\n        <p className = 'titleInstument'>Size (%):</p>\r\n        <div className = 'panel__sizes'>\r\n            <input\r\n                className = 'button_switch'\r\n                onChange = {props.cbSetWidth}\r\n                type=\"number\"\r\n                min = '10' max = '100'\r\n                value = {size.w ? size.w : 30}\r\n            />\r\n            <input \r\n                className = 'button_switch'\r\n                onChange = {props.cbSetHeight}\r\n                type=\"number\"\r\n                min = '10' max = '100'\r\n                value = {size.h ? size.h : 30}\r\n            />\r\n        </div>\r\n        <p className = 'titleInstument'>Border radius: </p>\r\n            <input\r\n                onChange = {props.cbSetBorderRadius}\r\n                className = 'button_switch radius'\r\n                type=\"number\"\r\n                value = {props.componentStats.borderRadius ?\r\n                            props.componentStats.borderRadius : 10\r\n                        }\r\n                min = '10' max = '200'\r\n            />\r\n            <p className = 'titleInstument titleInstrument__opacity'>Opacity: </p>\r\n            <input \r\n                onChange = {props.cbSetOpacity}\r\n                className = 'ImageSearchButton'\r\n                type=\"number\"\r\n                value = {props.componentStats.opacity ?\r\n                    props.componentStats.opacity : 1\r\n                }\r\n                step = '0.1'\r\n                min = '0' max = '1'\r\n            />\r\n            <p className = 'titleInstument titleInstrument__opacity'>Loader: </p>\r\n            <div className = 'fileLoader'>\r\n            <input\r\n                ref = {fileRef}\r\n                className = 'fileInput'\r\n                onChange = {props.cbLoadFile}\r\n                accept=\"image/*\"\r\n                type=\"file\"\r\n            />\r\n                <input\r\n                        // onClick = {simulateClickFile}\r\n                        className = 'ImageSearchButton'\r\n                        type = 'button'\r\n                        value = 'loading file'\r\n                />\r\n            </div>\r\n            <input \r\n                onClick = {props.cbSearch}\r\n                className = 'ImageSearchButton'\r\n                type=\"button\"\r\n                value = 'search image'\r\n            />\r\n            <input \r\n                onClick = {props.cbDelete}\r\n                className = 'instrumentPanel__deleteComponentButton'\r\n                type=\"button\"\r\n                value = 'delete'\r\n            />\r\n        </Fragment>\r\n    )\r\n\r\n}\r\n\r\nImageInstruments.propTypes = {\r\n    componentStats: PropTypes.object.isRequired, // object with current component data\r\n    cbSetWidth: PropTypes.func.isRequired, // callback set width\r\n    cbSetHeight: PropTypes.func.isRequired, // callback set height\r\n    cbSetBorderRadius: PropTypes.func.isRequired, // callback set border-radius\r\n    cbSetOpacity: PropTypes.func.isRequired, // callback set opacity\r\n    cbLoadFile: PropTypes.func.isRequired, // callback load file\r\n    cbSearch: PropTypes.func.isRequired, // callback search\r\n    cbDelete: PropTypes.func.isRequired, // callback delete\r\n}\r\n\r\nexport default ImageInstruments;","import React, {Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {SketchPicker} from 'react-color';\r\n\r\nconst BackgroundInstruments = props => {\r\n\r\n    const {componentStats} = props;\r\n    let color = null;\r\n    if (componentStats)\r\n        color = componentStats.backgroundColor;\r\n\r\n    return (\r\n        <Fragment>\r\n        <p className = 'titleInstument'>Color: </p>\r\n        <input\r\n            onClick = {props.cbSetColor}\r\n            className = 'button_switch Color'\r\n            type = 'button'\r\n            value = 'color pick'\r\n        />\r\n            { props.colorPickerActive ?\r\n                <SketchPicker\r\n                    onChangeComplete={props.cbHandleChangeComplete}\r\n                    color = {color ? color : 'red'}\r\n                />\r\n                : null\r\n            }\r\n            <input \r\n                onClick = {props.cbSearch}\r\n                className = 'ImageSearchButton'\r\n                type = 'button'\r\n                value = 'background-image'\r\n            />\r\n        </Fragment>\r\n    )\r\n\r\n}\r\n\r\nBackgroundInstruments.propTypes = {\r\n    componentStats: PropTypes.object.isRequired, // object with current component data\r\n    cbSetColor: PropTypes.func.isRequired, // callback set color\r\n    cbHandleChangeComplete: PropTypes.func.isRequired, // callback picker state change\r\n    cbSearch: PropTypes.func.isRequired, // callback search\r\n}\r\n\r\nexport default BackgroundInstruments;","import React,{Fragment} from 'react';\r\nimport {SketchPicker} from 'react-color';\r\n\r\nconst TextInstruments = props => {\r\n\r\n        let {colorPickerActive} = props.instrumentPanel;\r\n        let {content} = props.componentStats;\r\n        let {fontSize} = props.componentStats;\r\n        let {coords} = props.componentStats;\r\n        let {color} = props.componentStats;\r\n        let _content = content !== '' ? 'Title' : '';\r\n\r\n        return (\r\n            <Fragment>\r\n            <p className = 'titleInstument'>Position: </p>\r\n            <span className = 'textCoordsPanel'>\r\n            {coords.x ?\r\n                coords.x + ' / ' + coords.y : ' drop for active'}\r\n            </span>\r\n            <p className = 'titleInstument'>Color: </p>\r\n            <input \r\n                onClick = {props.cbSetColor}\r\n                className = 'button_switch'\r\n                type = 'button'\r\n                value = 'color pick'\r\n            />\r\n            <p className = 'titleInstument'>Text size: </p>\r\n            <input \r\n                className = 'button_switch'\r\n                onChange = {props.cbSetSize}\r\n                type=\"number\"\r\n                min = '10' max = '200'\r\n                value = {fontSize ? fontSize : 120}\r\n            />\r\n                { colorPickerActive ?\r\n                    <SketchPicker\r\n                    onChangeComplete={props.cbHandleChangeComplete}\r\n                    color = {color ? color: 'red'}\r\n                    />\r\n                    : null\r\n                }\r\n                <p className = 'titleInstument'>Font: </p>\r\n                <select \r\n                    value = {props.componentStats.font} \r\n                    onChange = {props.cbSetFont}\r\n                    className = 'button_switch'\r\n                >\r\n                <option>Arial</option>\r\n                <option>Times</option>\r\n                <option>Georgia</option>\r\n                <option>Impact</option>\r\n                <option>Tahoma</option>\r\n                <option>Verdana</option>\r\n                <option>Comic</option>\r\n                </select>\r\n            <p className = 'titleInstument'>Content: </p>\r\n            <input\r\n                className = 'button_switch'\r\n                onChange = {props.cbSetContent}\r\n                maxLength = '100'\r\n                type = 'text'\r\n                value = {content ? content : _content}\r\n            />\r\n            <input \r\n                onClick = {props.cbDelete}\r\n                className = 'instrumentPanel__deleteComponentButton'\r\n                type=\"button\"\r\n                value = 'delete'\r\n            />\r\n            </Fragment>\r\n        )\r\n}\r\n\r\nexport default TextInstruments;","import React, {Fragment} from 'react';\r\nimport eventEmitter from '../../EventEmitter';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport InputInstruments from './InputTools/InputInstruments';\r\nimport MediaInstruments from './MediaTools/MediaInstruments';\r\nimport ImageInstruments from './ImageTools/ImageInstruments';\r\nimport BackgroundInstruments from './BackgroundTools/BackgroundInstruments';\r\nimport TextInstruments from './TextTools/TextInstruments';\r\n\r\nimport Icon from '../Icon/icon';\r\n\r\nimport './instrumentsPanel.scss';\r\n\r\n\r\nclass InstrumentsPanel extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        instrumentPanel:  PropTypes.object.isRequired, /** @Settings for panel and data about component */\r\n        editComponentName: PropTypes.string, /** @Name editable component */\r\n        eventStreamBuild: PropTypes.object.isRequired // stream events\r\n    };\r\n\r\n    state = {\r\n        instrumentPanel: {...this.props.instrumentPanel},\r\n        componentStats: this.props.componentStats,\r\n        images: null,\r\n    };\r\n\r\n\r\n    closePanel = event => {\r\n        this.props.eventStreamBuild.emit('EventClosePanel', {close: false});\r\n    };\r\n\r\n    setSize = event => {\r\n        let {id} = this.state.componentStats;\r\n        let size = event.target.value > 200 ? 200 : event.target.value;\r\n\r\n        if (this.state.componentStats.type !== 'input')\r\n        this.setState({\r\n            ...this.state, \r\n            instrumentPanel: {...this.state.instrumentPanel},\r\n            componentStats: {...this.state.componentStats,fontSize: size}\r\n        }, () => eventEmitter.emit(`EventChangeSize${id}`, {\r\n                targetSection: this.state.editComponentName, size: size \r\n        }));\r\n        else this.setState({\r\n                ...this.state, \r\n                instrumentPanel: {...this.state.instrumentPanel},\r\n                componentStats: {...this.state.componentStats,fontSize: size}\r\n            }, () => eventEmitter.emit(`EventChangeSizeText${id}`, {size: size}\r\n            ));\r\n    };\r\n\r\n    setFont = event => {\r\n        let {id} = this.state.componentStats;\r\n        let fontName = event.target.value;\r\n        this.setState({\r\n            ...this.state, \r\n            instrumentPanel: {...this.state.instrumentPanel},\r\n            componentStats: {...this.state.componentStats,font: fontName}\r\n        },\r\n            () => eventEmitter.emit(`EventSetFont${id}`, {\r\n                targetSection: this.state.editComponentName, font: fontName\r\n            })\r\n        );\r\n    }\r\n\r\n    setIframeContent = eventItem => {\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            componentStats:{\r\n                ...this.state.componentStats,\r\n                content: eventItem.iframe\r\n            }\r\n        });\r\n    }\r\n\r\n    setContent = event => {\r\n        let {id} = this.state.componentStats;\r\n        let contentValue = event.target.value;\r\n        this.setState({\r\n            ...this.state, \r\n            instrumentPanel: {...this.state.instrumentPanel},\r\n            componentStats: {...this.state.componentStats,content: contentValue}\r\n        },\r\n            () => eventEmitter.emit(`EventChangeContentText${id}`,{\r\n                targetSection: this.state.editComponentName, content: contentValue\r\n            })\r\n        );\r\n        if (event) event.stopPropagation();\r\n    };\r\n\r\n    setWidth = event => {\r\n        const {id} = this.state.componentStats;\r\n        const width = event.target.value;\r\n        this.setState({\r\n            ...this.state,\r\n            componentStats: {...this.state.componentStats,\r\n                size: {\r\n                    ...this.state.componentStats.size,\r\n                    w: width\r\n                }}\r\n        },\r\n            () => eventEmitter.emit(`EventSetWidth${id}`,{width: width}));\r\n\r\n        if (event) event.stopPropagation();\r\n    };\r\n\r\n    setHeight = event => {\r\n        const {id} = this.state.componentStats;\r\n        const height = event.target.value;\r\n        this.setState({\r\n            ...this.state,\r\n            componentStats: {...this.state.componentStats,\r\n                size: {\r\n                    ...this.state.componentStats.size,\r\n                    h: height\r\n                }}\r\n        },\r\n            () => eventEmitter.emit(`EventSetHeight${id}`,{height: height}));\r\n\r\n        if (event) event.stopPropagation();\r\n    }\r\n\r\n    updatePosition = eventItem => {\r\n        if (!eventItem) return;\r\n        this.setState({\r\n            ...this.state, \r\n            componentStats: {\r\n                ...this.state.componentStats,\r\n                coords: {\r\n                    ...this.state.componentStats.coords,\r\n                    x: eventItem.x,\r\n                    y: eventItem.y\r\n                }\r\n            }\r\n        });\r\n    };\r\n\r\n    setColor = event => {\r\n        this.setState({...this.state,\r\n            instrumentPanel:{\r\n                ...this.state.instrumentPanel,\r\n                colorPickerActive: this.state.instrumentPanel.colorPickerActive ? false : true\r\n            }\r\n        });\r\n        if (event) event.stopPropagation();\r\n    };\r\n\r\n    setOpacity = event => {\r\n        let {id} = this.state.componentStats;\r\n        let opacity = event.target.value;\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            componentStats: {...this.state.componentStats,opacity: opacity}\r\n        },\r\n         () => eventEmitter.emit(`EventSetOpacity${id}`, {opacity: opacity}));\r\n    };\r\n\r\n    setBorderRadius = event => {\r\n        let {id} = this.state.componentStats;\r\n        let radius = event.target.value;\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            componentStats: {...this.state.componentStats,borderRadius: radius}\r\n        },\r\n         () => eventEmitter.emit(`EventSetBorderRadius${id}`, {borderRadius: radius}));\r\n    };\r\n\r\n    updateBimageStats = eventItem => {\r\n        const {images} = eventItem;\r\n        if (eventItem.mode !== 'image')\r\n        this.setState({\r\n            ...this.state,\r\n            componentStats:{\r\n                ...this.state.componentStats,\r\n                backgroundImage: images.urlFull\r\n            }\r\n        });\r\n        else {\r\n            this.setState({\r\n                ...this.state,\r\n                componentStats:{\r\n                    ...this.state.componentStats,\r\n                    image: images.urlFull\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    handleChangeComplete = event => {\r\n\r\n        const {rgb} = event;\r\n        let colorRGB = `rgb(${rgb.r},${rgb.g},${rgb.b},${rgb.a})`;\r\n\r\n        let {id} = this.state.componentStats;\r\n        if (this.state.componentStats.type === 'background'){\r\n            this.setState({\r\n                ...this.state,\r\n                componentStats: {...this.state.componentStats,color: colorRGB}\r\n            }, () => eventEmitter.emit(`EventChangeColorBackground${id}`,\r\n                        {colorRGB: this.state.componentStats.color}\r\n                    ));\r\n        }\r\n\r\n        else if (this.state.componentStats.type === 'text') {\r\n            this.setState({\r\n                ...this.state,\r\n                componentStats: {...this.state.componentStats,color: colorRGB}\r\n            },\r\n            () => eventEmitter.emit(`EventChangeColorText${id}`, colorRGB));\r\n        }\r\n\r\n        else if (this.state.componentStats.type === 'input') {\r\n            this.setState({\r\n                ...this.state,\r\n                componentStats: {...this.state.componentStats,color: colorRGB}\r\n            },\r\n            () => eventEmitter.emit(`EventChangecolor${id}`, colorRGB));\r\n        }\r\n\r\n    };\r\n\r\n    redirectSaveChanges = event => {\r\n        this.props.eventStreamBuild.emit(\"EventSaveChangesComponent\", {\r\n            ...this.state.componentStats,\r\n            id: this.state.componentStats.id,\r\n            type: this.state.componentStats.type,\r\n            ms: 0\r\n        });\r\n        if (event) event.stopPropagation();\r\n    }\r\n\r\n    saveChanges = event => {\r\n\r\n        this.props.eventStreamBuild.emit(\"EventSaveChangesComponent\", {\r\n                ...this.state.componentStats,\r\n                id: this.state.componentStats.id,\r\n                type: this.state.componentStats.type,\r\n                ms: 1500\r\n            });\r\n\r\n        eventEmitter.emit('EventRedirectConfirm', true);\r\n        if (event) event.stopPropagation();\r\n    }\r\n\r\n    deleteComponent = event => {\r\n        this.props.eventStreamBuild.emit('EventDeleteComponent', {\r\n            id: this.state.componentStats.id,\r\n            targetSection: this.state.componentStats.targetSection,\r\n            type: this.state.componentStats.type\r\n        });\r\n    };\r\n\r\n    search = event => {\r\n\r\n        let {id} = this.state.componentStats;\r\n        this.props.eventStreamBuild.emit('EventModalSearchOn', {idComponent: id, mode: this.state.componentStats.type});\r\n\r\n        event.stopPropagation();\r\n    };\r\n\r\n    loadFile = event => {\r\n        let {id} = this.state.componentStats;\r\n        try {\r\n            let image = event.target.files[0];\r\n            let reader = new FileReader();\r\n            if (image.type[0] !== 'i') throw new Error('Invalid file');\r\n            reader.readAsDataURL(image);\r\n            reader.onload = (e) => {\r\n                eventEmitter.emit(`EventSetCurrentImage${id}`,{ urlFull: reader.result });\r\n                this.updateBimageStats({images: { urlFull: reader.result }, mode: 'image'});\r\n                e.stopPropagation();\r\n            }\r\n            reader.onerror = () => {\r\n                console.error(reader.error);\r\n            }\r\n        } catch (error) {\r\n            console.error(error.message);\r\n        }\r\n\r\n        event.stopPropagation();\r\n    }\r\n\r\n    makePanelInstruments = (type) => {\r\n            switch (type){\r\n                case 'text':\r\n                   return(\r\n                    <TextInstruments\r\n                        instrumentPanel = {{...this.state.instrumentPanel}}\r\n                        componentStats = {{...this.state.componentStats}}\r\n                        cbSetColor = {this.setColor}\r\n                        cbSetSize = {this.setSize}\r\n                        cbHandleChangeComplete = {this.handleChangeComplete}\r\n                        cbSetContent = {this.setContent}\r\n                        cbSetFont = {this.setFont}\r\n                        cbSetOpacity = {this.setOpacity}\r\n                        cbDelete = {this.deleteComponent}\r\n                    />\r\n                   )\r\n                case 'background':\r\n                    return (\r\n                        <BackgroundInstruments\r\n                            colorPickerActive = {this.state.instrumentPanel.colorPickerActive}\r\n                            componentStats = {{...this.state.componentStats}}\r\n                            cbSetColor = {this.setColor}\r\n                            cbHandleChangeComplete = {this.handleChangeComplete}\r\n                            cbSearch = {this.search}\r\n                        />\r\n                    )\r\n                case 'image':\r\n                        return (\r\n                            <ImageInstruments\r\n                                instrumentPanel = {{...this.state.instrumentPanel}}\r\n                                componentStats = {{...this.state.componentStats}}\r\n                                cbSearch = {this.search}\r\n                                cbSetSize = {this.setSize}\r\n                                cbSetBorderRadius = {this.setBorderRadius}\r\n                                cbSetOpacity = {this.setOpacity}\r\n                                cbSetWidth = {this.setWidth}\r\n                                cbSetHeight = {this.setHeight}\r\n                                cbLoadFile = {this.loadFile}\r\n                                cbDelete = {this.deleteComponent}\r\n                            />\r\n                        )\r\n                case 'media':\r\n                        return (\r\n                            <MediaInstruments\r\n                                instrumentPanel = {{...this.state.instrumentPanel}}\r\n                                componentStats = {{...this.state.componentStats}}\r\n                                cbSearch = {this.search}\r\n                                cbDelete = {this.deleteComponent}\r\n                            />\r\n                            )\r\n                case 'input':\r\n                        return (\r\n                            <InputInstruments\r\n                                instrumentPanel = {{...this.state.instrumentPanel}}\r\n                                componentStats = {{...this.state.componentStats}}\r\n                                cbSetColor = {this.setColor}\r\n                                cbHandleChangeComplete = {this.handleChangeComplete}\r\n                                cbSetSize = {this.setSize}\r\n                                cbSetWidth = {this.setWidth}\r\n                                cbSetHeight = {this.setHeight}\r\n                                cbSetContent = {this.setContent}\r\n                                cbDelete = {this.deleteComponent}\r\n                            />\r\n                        )\r\n                default: return <p className = 'warningInstruments'>No found element</p>\r\n            }\r\n    };\r\n\r\n    render(){\r\n        let { instrumentActive } = this.state.instrumentPanel;\r\n        return (\r\n            <Fragment>\r\n                <div  className = 'instumentsPanel'>\r\n                    <button\r\n                        onClick = {this.closePanel}\r\n                        className = 'closeInstrumentsPanel'\r\n                    >\r\n                        <Icon path = '/img/close.svg' />\r\n                    </button>\r\n                    <h3>Instruments</h3>\r\n                    {\r\n                        instrumentActive ? \r\n                        <p className = 'TextComponent'>{this.state.componentStats.type}</p>\r\n                        : null\r\n                    }\r\n                    {\r\n                        instrumentActive ?\r\n                        <div className = 'instuments'>\r\n                            {this.makePanelInstruments(this.state.componentStats.type)}\r\n                        </div>\r\n                        : null\r\n                    }\r\n                </div>\r\n            </Fragment>\r\n        )\r\n    };\r\n\r\n    componentDidUpdate = (oldProps, oldState) => {\r\n        if (oldState.componentStats !== this.state.componentStats)\r\n        this.saveChanges();\r\n    };\r\n\r\n    componentDidMount = event => {\r\n        eventEmitter.on('EventRedirectSaveChanges', this.redirectSaveChanges);\r\n        eventEmitter.on(`EventSetIframe`, this.setIframeContent);\r\n        eventEmitter.on(\"EventSetBImageInstumentPanel\", this.updateBimageStats);\r\n        eventEmitter.on(`EventUpdatePosition${this.state.componentStats.id}`, this.updatePosition);\r\n    };\r\n\r\n    componentWillUnmount = event => {\r\n        if (this.timer) clearTimeout(this.timer);\r\n        eventEmitter.on('EventClosePaanel', this.closePanel);\r\n        eventEmitter.off('EventRedirectSaveChanges', this.redirectSaveChanges);\r\n        eventEmitter.off(`EventSetIframe`, this.setIframeContent);\r\n        eventEmitter.off(\"EventSetBImageInstumentPanel\", this.updateBimageStats);\r\n        eventEmitter.off(`EventUpdatePosition${this.state.componentStats.id}`, this.updatePosition);\r\n    };\r\n};\r\n\r\nexport default InstrumentsPanel;","import React,{Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Viewer from '../imageViewer/Viewer';\r\nimport InstrumentsPanel from '../../components/instrumentsPanel/InstrumentsPanel';\r\nimport ModalWindow from '../../components/modalWindow/ModalWindow';\r\n\r\nconst AdditionalTools = props => {\r\n\r\n    return (\r\n        <Fragment key = 'AdditionalBuild'>\r\n            {   props.modalViewer.action &&\r\n                    <Viewer \r\n                        key = 'ImageViewer'\r\n                        eventStreamBuild = {props.eventStreamBuild} \r\n                        mode = {props.modalViewer.mode} \r\n                        path = {props.modalViewer.target}\r\n                        iframe = {props.modalViewer.iframe}\r\n                    />\r\n            }\r\n            {   props.modalSearch &&\r\n                    <ModalWindow\r\n                        eventStreamBuild = {props.eventStreamBuild}\r\n                        idComponent = {props.componentStats.id}\r\n                        modalSearchMode = {props.modalSearchMode}\r\n                        key = 'ModalWindow' workMode = 'Search' \r\n                    />\r\n            }\r\n                <InstrumentsPanel\r\n                    key = {`InstrumentsPanel${props.componentStats.id}`}\r\n                    eventStreamBuild = {props.eventStreamBuild}\r\n                    editComponentName = {props.editComponentName}\r\n                    componentStats = {{...props.componentStats}}\r\n                    instrumentPanel = {props.instrumentPanel}\r\n                />\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nAdditionalTools.propTypes = {\r\n    eventStreamBuild: PropTypes.object.isRequired, // events stream\r\n    componentStats: PropTypes.object.isRequired, // current components data\r\n    instrumentPanel: PropTypes.object.isRequired, // instruments data\r\n    modalViewer: PropTypes.object.isRequired, // Viewer data\r\n}\r\n\r\nexport default AdditionalTools;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Input from '../buildComponents/components/Input';\r\nimport Media from '../buildComponents/components/Media';\r\nimport Image from '../buildComponents/components/Image';\r\nimport TextComponent from '../buildComponents/components/Text';\r\nimport BackgroundComponent from '../buildComponents/components/Background';\r\n\r\nimport './buildMenu.scss';\r\n\r\nclass BuildMenu extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        mode: PropTypes.string.isRequired, /** @String work mode component */\r\n        editComponentName: PropTypes.string,\r\n        eventStreamBuild: PropTypes.object, /** @Events stream build */\r\n        countSection: PropTypes.number, /** @Number for new section id */\r\n        countComponents: PropTypes.number, /** @Number last project */\r\n        sizeParentBox: PropTypes.object /** @Object with width and height parent(bg) */\r\n    }\r\n\r\n\r\n    state = {\r\n        mode: this.props.mode,\r\n        sizeParentBox: {...this.props.sizeParentBox},\r\n        title: 'Title'\r\n    }\r\n\r\n    addText = event => {\r\n        let id = Math.random().toFixed(3);\r\n\r\n        const componentsPatternText = {\r\n            type: 'text',\r\n            font: 'Arial',\r\n            color: null,\r\n            opacity: 1,\r\n            fontSize: null,\r\n            content: 'Title',\r\n            coords: {x: null, y: null}, // x, y\r\n            id: id,\r\n            targetSection: this.props.editComponentName,\r\n        };\r\n        this.props.eventStreamBuild.emit('EventBuildComponents',{\r\n            componentsPattern: componentsPatternText,\r\n            type: componentsPatternText.type,\r\n            component: <TextComponent\r\n                            key = {`text${id}`}\r\n                            mode = 'dev'\r\n                            {...componentsPatternText}\r\n                            sizeParentBox = {{...this.props.sizeParentBox}}\r\n                            id = {id}\r\n                        >Title</TextComponent>\r\n        });\r\n        event.stopPropagation();\r\n    }\r\n\r\n    addBackground = event => {\r\n        let id = Math.random().toFixed(3);\r\n\r\n        const componentsPatternBackground = {\r\n            id: id,\r\n            type: 'background',\r\n            backgroundColor: null,\r\n            backgroundImage: null,\r\n            targetSection: this.state.editComponentName,\r\n        };\r\n\r\n        this.props.eventStreamBuild.emit('EventBuildComponents',{\r\n            componentsPattern: componentsPatternBackground,\r\n            type: componentsPatternBackground.type,\r\n            component: <BackgroundComponent\r\n                            targetSection = {this.props.editComponentName}\r\n                            {...componentsPatternBackground}\r\n                            key = {`bg${id}`}\r\n                            id = {id}\r\n                        />\r\n        });\r\n\r\n        event.stopPropagation();\r\n    }\r\n\r\n    addImage = event => {\r\n        let id = Math.random().toFixed(3);\r\n\r\n        const componentsPatternImage = {\r\n            borderRadius: 0,\r\n            type: 'image',\r\n            size: {w: 30, h: 50},\r\n            opacity: 1,\r\n            zIndex: null,\r\n            image: '/img/photoPattern.svg',\r\n            coords: {x: null, y: null}, // x, y\r\n            id: id,\r\n            targetSection: this.props.editComponentName,\r\n        };\r\n        this.props.eventStreamBuild.emit('EventBuildComponents',{\r\n            componentsPattern: componentsPatternImage,\r\n            type: componentsPatternImage.type,\r\n            component: <Image\r\n                            key = {`image${id}`}\r\n                            sizeParentBox = {this.props.sizeParentBox}\r\n                            id = {id}\r\n                            mode = 'dev'\r\n                            path = {'/img/photoPattern.svg'}\r\n                            {...componentsPatternImage}\r\n                            type = 'image' />\r\n        });\r\n        event.stopPropagation();\r\n    }\r\n\r\n    addMedia = event => {\r\n        let id = Math.random().toFixed(3);\r\n\r\n        const  componentsPatternMedia = {\r\n            type: 'media',\r\n            size: null,\r\n            content: null,\r\n            coords: {x: null, y: null}, // x, y\r\n            id: id,\r\n            targetSection: this.props.editComponentName,\r\n        };\r\n\r\n        this.props.eventStreamBuild.emit('EventBuildComponents', {\r\n            componentsPattern: componentsPatternMedia,\r\n            type: componentsPatternMedia.type,\r\n            component: <Media\r\n                            key = {`media${id}`}\r\n                            targetSection = {this.props.editComponentName}\r\n                            sizeParentBox = {this.props.sizeParentBox}\r\n                            content = {null}\r\n                            id = {id}\r\n                            path = {'/img/photoPattern.mp4'}\r\n                            {...componentsPatternMedia}\r\n                            type = 'media'\r\n                            mode = 'dev'\r\n                        />\r\n        });\r\n        event.stopPropagation();\r\n    }\r\n\r\n    addInput = event => {\r\n        let id = Math.random().toFixed(3);\r\n\r\n        const  componentsPatternInput = {\r\n            type: 'input',\r\n            size: {w: null, h: null},\r\n            color: null,\r\n            fontSize: null,\r\n            borderRadius: null,\r\n            content: null,\r\n            coords: {x: null, y: null}, // x, y\r\n            id: id,\r\n            targetSection: this.props.editComponentName,\r\n        };\r\n\r\n        this.props.eventStreamBuild.emit('EventBuildComponents', {\r\n            componentsPattern: componentsPatternInput,\r\n            type: componentsPatternInput.type,\r\n            component: <Input\r\n                            key = {`input${id}`}\r\n                            targetSection = {this.props.editComponentName}\r\n                            sizeParentBox = {this.props.sizeParentBox}\r\n                            id = {id}\r\n                            inputType = 'button'\r\n                            {...componentsPatternInput}\r\n                            type = 'input'\r\n                            mode = 'dev'\r\n                        />\r\n        });\r\n        event.stopPropagation();\r\n    }\r\n\r\n    addSection = event => {\r\n        let id = Math.random().toFixed(3);\r\n\r\n        const componentsPatternBackground = {\r\n            backgroundColor: null,\r\n            backgroundImage: null,\r\n            targetSection: `Section${id}`,\r\n            id: `Section${id}`,\r\n            type: 'background',\r\n        };\r\n        this.props.eventStreamBuild.emit('EventNewSection', {\r\n            componentsPattern: componentsPatternBackground,\r\n            component: <BackgroundComponent\r\n                            {...componentsPatternBackground}\r\n                            key = {`bg${id}`}\r\n                            id = {id}\r\n                            targetSection = {`Section${id}`}\r\n                            width = '100%'\r\n                            height = '800px'\r\n                            type = 'background'\r\n                            mode = 'dev'\r\n                        />\r\n        });\r\n        event.stopPropagation();\r\n    }\r\n\r\n    render(){\r\n\r\n        if (this.state.mode === 'build'){\r\n            return (\r\n                <div className = 'ComponentsMenu'>\r\n                    <button \r\n                        onClick = {this.addImage} \r\n                        className = 'ImageTool CompoentnsMenu_button' \r\n                    >\r\n                        <span>Image</span>\r\n                    </button>\r\n                    <button \r\n                        onClick = {this.addText} \r\n                        className = 'TextTool CompoentnsMenu_button' >\r\n                        <span>Text</span>\r\n                    </button>\r\n                    <button\r\n                        onClick = {this.addInput}\r\n                        disabled = {this.props.editComponentName !== 'Header' ? false : true}\r\n                        className = 'ButtonTool CompoentnsMenu_button' >\r\n                        <span>Button</span>\r\n                    </button>\r\n                    <button onClick = {this.addMedia}\r\n                        className = 'VideoTool CompoentnsMenu_button'\r\n                    >\r\n                        <span>Video</span>\r\n                    </button>\r\n                </div>\r\n            )\r\n        } else if (this.state.mode === 'section') {\r\n            return (\r\n                <div className = 'sectionMode'>\r\n                    <button\r\n                        onClick = {this.addSection}\r\n                        className = 'newSectionTool CompoentnsMenu_button'\r\n                    >\r\n                        <span>New section</span>\r\n                    </button>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default BuildMenu;","import React,{Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Icon from '../Icon/icon';\r\nimport BuildMenu from '../componentsBuildMenu/BuildMenu';\r\n\r\n\r\nclass Controllers extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        countComponents: PropTypes.number.isRequired, /** @number last project id */\r\n        sizeParentBox: PropTypes.object, /** @Object with width and height parent(bg) */\r\n        eventStreamBuild: PropTypes.object, /** @Events stream */\r\n        menuActive: PropTypes.bool, /** @Bool value active menu or unactive */\r\n    }\r\n\r\n    state = {\r\n        viewComponentMenu: false,\r\n        editComponentName: this.props.editComponentName,\r\n        shiftX: 0,\r\n        shiftY: 0,\r\n        coordsX: '50%',\r\n        coordsY: '0',\r\n        shadowDisplay: 'block'\r\n    }\r\n\r\n    componentMenu = event => {\r\n        this.setState({viewComponentMenu: this.state.viewComponentMenu ? false : true});\r\n        event.stopPropagation();\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <Fragment>\r\n            {\r\n                <div\r\n                ref = {this.refControll}\r\n                className = 'ControllersEditComponent'\r\n                onClick = {this.componentMenu}\r\n                >\r\n                    <Icon\r\n                        onClick = {this.componentMenu}\r\n                        className = 'addButton'\r\n                        path = '/img/addButton.png'\r\n                    />\r\n                    { this.state.viewComponentMenu ?\r\n                        <BuildMenu\r\n                            key = {`buildMenu ${this.state.editComponentName}`}\r\n                            mode = 'build'\r\n                            eventStreamBuild = {this.props.eventStreamBuild}\r\n                            editComponentName = {this.state.editComponentName}\r\n                            sizeParentBox = {this.props.sizeParentBox}\r\n                            countComponents = {this.props.countComponents}\r\n                        /> : null\r\n                    }\r\n                </div>\r\n            }\r\n            </Fragment>\r\n        )\r\n    }\r\n\r\n    componentDidUpdate = () => {\r\n        if (this.props.editComponentName !== this.state.editComponentName)\r\n            this.setState({\r\n                ...this.state,\r\n                editComponentName: this.props.editComponentName\r\n            })\r\n    }\r\n\r\n}\r\n\r\nexport default Controllers;","import React,{Fragment} from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport {Redirect} from 'react-router-dom';\r\nimport eventEmitter from '../../EventEmitter';\r\nimport EventBuild from 'events';\r\nimport {loadCurrentProjectAction, exitProjectAction} from '../../redux/actions';\r\n\r\nimport {middlewareDeleteProjectComponent} from '../../redux/middleware/middlewareDelete';\r\nimport updateMiddleware from '../../redux/middleware/updateMiddleware';\r\nimport withFirebase from '../../components/firebaseHOC';\r\nimport {connect} from 'react-redux';\r\n\r\nimport AdditionalTools from '../../components/additionalTools/additionalTools';\r\nimport builderHOC from '../../components/builderHOC';\r\nimport Controllers from '../../components/controllers/controllers';\r\nimport Loader from '../../components/loading/Loader';\r\nimport Header from '../../components/header/Header';\r\nimport Section from '../../components/buildComponents/section';\r\nimport BuildMenu from '../../components/componentsBuildMenu/BuildMenu';\r\n\r\nimport './build.scss';\r\n\r\nimport Input from '../../components/buildComponents/components/Input';\r\nimport Media from '../../components/buildComponents/components/Media';\r\nimport Image from '../../components/buildComponents/components/Image';\r\nimport TextComponent from '../../components/buildComponents/components/Text';\r\nimport BackgroundComponent from '../../components/buildComponents/components/Background';\r\n\r\nclass Build extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        firebase: PropTypes.object.isRequired, /** @firebase class for use firebase functions */\r\n        active: PropTypes.bool, /** @active - status firebase auth */\r\n        dispatch: PropTypes.func.isRequired, /** @dispatch - redux */\r\n        history: PropTypes.object, /** @Router HTML5 history */\r\n        location: PropTypes.object, /** @Router */\r\n        match: PropTypes.object.isRequired, /** @Router */\r\n        userData: PropTypes.object.isRequired, /** @UserData data about projects,user and current edit prject */\r\n    }\r\n\r\n    state = {\r\n            idProject: parseInt(this.props.match.params.param),\r\n            editStart: false,\r\n            isChange: false,\r\n            isLoadComponents: true,\r\n            projectEmpty: false,\r\n            componentStats: {},\r\n            componentJSX: [],\r\n            instrumentPanel: {\r\n                colorPickerActive: false,\r\n                instrumentActive: false,\r\n            },\r\n            editComponentName:  null,\r\n            menuActive: false,\r\n            modalSearch: false,\r\n            modalSearchMode: null,\r\n            modalViewer: {action: false, image: null, mode: null },\r\n            sizeParentBox: null,\r\n        }\r\n\r\n        eventEmitterBuild = new EventBuild(); // events stream for controllers\r\n        timer = null; // save timer\r\n\r\n    modalSearchOn = itemEvent => {\r\n        const modeHave = itemEvent.hasOwnProperty('mode');\r\n        this.setState({\r\n            ...this.state, \r\n            modalSearch: !this.state.modalSearch,\r\n            modalSearchMode: modeHave ? itemEvent.mode : null\r\n        });\r\n    }\r\n\r\n    ViewerSwitch = itemEvent => {\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            modalViewer: {\r\n                ...this.state.modalViewer,\r\n                action: itemEvent.action,\r\n                target: itemEvent.target,\r\n                mode: itemEvent.mode,\r\n                iframe: itemEvent.iframe\r\n            }\r\n        });\r\n    };\r\n\r\n    workModeEdit = itemEvent => {\r\n\r\n        if (itemEvent.editStart)\r\n        this.setState({\r\n            ...this.state,\r\n            editStart: itemEvent.editStart,\r\n            editComponentName: itemEvent.targetSection,\r\n            menuActive: true,\r\n        });\r\n\r\n    }\r\n\r\n    openInstrument = itemEvent => {\r\n            const idEqual = this.state.componentStats.id === itemEvent.componentStats.id;\r\n            if (!idEqual || !this.state.instrumentPanel.instrumentActive)\r\n            this.setState({\r\n                ...this.state,\r\n                editComponentName: itemEvent.targetSection,\r\n                componentStats: {\r\n                    ...this.state.componentStats,\r\n                    ...itemEvent.componentStats\r\n                },\r\n                instrumentPanel: {\r\n                    ...this.state.instrumentPanel,\r\n                    instrumentActive: true,\r\n                }\r\n            });\r\n    }\r\n\r\n    closePanel = itemEvent => {\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            instrumentPanel: {\r\n                ...this.state.instrumentPanel,\r\n                colorPickerActive: false,\r\n                instrumentActive: itemEvent.close\r\n            }\r\n        });\r\n    };\r\n\r\n    deleteComponent = eventItem => {\r\n        let {currentProjectsData} = this.props.userData;\r\n        let {componentJSX} = this.state;\r\n\r\n        const data = {\r\n            id: this.state.idProject,\r\n            uid: this.props.userData.idUser,\r\n            idComponent: eventItem.id,\r\n            sectionsProject: [...currentProjectsData.sectionsProject],\r\n            type: eventItem.type\r\n        }\r\n\r\n        this.props.dispatch(middlewareDeleteProjectComponent(data))\r\n        .then(id => {\r\n            if (id !== null){\r\n               const _componentJSX = componentJSX.filter(item => item.id !== id);\r\n            this.setState({\r\n                ...this.state,\r\n                componentJSX: _componentJSX\r\n            });\r\n        }\r\n        });\r\n    }\r\n\r\n    addComponentsFromBD = array => {\r\n\r\n        let {componentJSX} = this.state;\r\n        let componentsFromDB = [];\r\n\r\n        array.forEach(item => {\r\n            if (item.type !== 'background'){\r\n\r\n                let props = {\r\n                    sizeParentBox: {\r\n                        width: this.mainComponent.data.width,\r\n                        height: this.mainComponent.data.height,\r\n                        top: this.mainComponent.data.top,\r\n                        left: this.mainComponent.data.left,\r\n                    },\r\n                    ...item,\r\n                    mode: 'dev',\r\n                }\r\n                let Component = null;\r\n                    if (item.type === 'background') Component = BackgroundComponent;\r\n                    else if (item.type === 'input') Component = Input;\r\n                    else if (item.type === 'media') Component = Media;\r\n                    else if (item.type === 'image') Component = Image;\r\n                    else if (item.type === 'text') Component = TextComponent;\r\n\r\n                const patternJSX = {\r\n                    id: item.id,\r\n                    targetSection: item.targetSection,\r\n                    component: builderHOC(props)(Component)\r\n                };\r\n                componentsFromDB.push(patternJSX);\r\n            }\r\n        });\r\n            this.setState({\r\n                ...this.state,\r\n                isLoadComponents: false,\r\n                componentJSX: [...componentJSX, ...componentsFromDB],\r\n            });\r\n    };\r\n\r\n    addComponent = itemEvent => {\r\n        let {componentJSX} = this.state;\r\n        let {componentsPattern} = itemEvent;\r\n\r\n        const patternJSX = {\r\n            id: componentsPattern.id,\r\n            targetSection: componentsPattern.targetSection,\r\n            component: itemEvent.component\r\n        };\r\n            this.setState({\r\n                ...this.state,\r\n                componentJSX: [...componentJSX, patternJSX],\r\n            });\r\n    };\r\n\r\n    saveChangesComponent = itemEvent => {\r\n\r\n        const {ms} = itemEvent;\r\n        if (this.timer) clearTimeout(this.timer);\r\n\r\n        this.timer = setTimeout(() => {\r\n            const {currentProjectsData} = this.props.userData;\r\n            const {userData} = this.props;\r\n            let findCurrentItem = false;\r\n            const _components = currentProjectsData.components.map(item => {\r\n                if (item.id === itemEvent.id) { findCurrentItem = true; return {...itemEvent}; }\r\n                return item;\r\n            });\r\n\r\n            if (!findCurrentItem) _components.push(itemEvent);\r\n\r\n            this.props.dispatch(updateMiddleware({\r\n                uid: userData.idUser,\r\n                projects: [...userData.projects],\r\n                components: _components,\r\n                sectionsProject: [...currentProjectsData.sectionsProject],\r\n                idProject: this.state.idProject\r\n            })).then(() =>\r\n                eventEmitter.emit('EventRedirectConfirm', {false: false, confirm: false}));\r\n        },ms);\r\n    };\r\n\r\n    mainComponent = null;\r\n    mainRefComponent = node => node ?\r\n        this.mainComponent = {data: node.getBoundingClientRect(), node: node} : node;\r\n\r\n    addNewSection = eventItem => {\r\n\r\n        const {userData} = this.props;\r\n        const {currentProjectsData} = userData;\r\n\r\n        this.props.dispatch(updateMiddleware({\r\n                uid: userData.idUser,\r\n                projects: [...userData.projects],\r\n                components: [...currentProjectsData.components,\r\n                            eventItem.componentsPattern],\r\n                sectionsProject: [\r\n                    ...currentProjectsData.sectionsProject,\r\n                    eventItem.componentsPattern.id\r\n                ],\r\n                idProject: this.state.idProject\r\n        })).then(() => {\r\n            this.setState({\r\n                ...this.state,\r\n                componentJSX:[\r\n                    ...this.state.componentJSX,\r\n                    eventItem.component\r\n                ]\r\n            }, () => {\r\n                eventEmitter.emit('EventSetState', currentProjectsData.sectionsProject.length);\r\n            });\r\n        });\r\n}\r\n\r\n    render(){\r\n\r\n        if (this.state.projectEmpty) return <Redirect to = '/Cabinet' />\r\n\r\n        const {instrumentActive} = this.state.instrumentPanel;\r\n        const {userData} = this.props;\r\n        const {currentProjectsData} = userData;\r\n        const section = currentProjectsData.sectionsProject;\r\n\r\n        if (userData.active && currentProjectsData.loadProject){\r\n            return (\r\n                <Fragment>\r\n                    <Header key = 'Header' title = \"Constructor\" idUser = {userData.idUser}  />\r\n                    <div\r\n                        ref = {this.mainRefComponent} \r\n                        onMouseMove = {this.showAddSection} \r\n                        className = 'Build' \r\n                        key = 'Build'\r\n                    >\r\n                        { this.state.editStart &&\r\n                        <Controllers\r\n                            key = 'controllers'\r\n                            eventStreamBuild = {this.eventEmitterBuild}\r\n                            editComponentName = {this.state.editComponentName}\r\n                            countComponents = {currentProjectsData.components.length}\r\n                            menuActive = {this.state.menuActive}\r\n                            sizeParentBox = {this.state.sizeParentBox}\r\n                        />\r\n                        }\r\n                            <BuildMenu\r\n                                key = 'buildMenu'\r\n                                eventStreamBuild = {this.eventEmitterBuild}\r\n                                countSection = {this.state.componentJSX.length * 5}\r\n                                mode = \"section\"\r\n                                className = 'menu'\r\n                            />\r\n                        {instrumentActive && \r\n                            <AdditionalTools\r\n                                eventStreamBuild = {this.eventEmitterBuild}\r\n                                key = 'tools' {...this.state} \r\n                            />}\r\n                        {section.length && <Section mode = 'dev' key = 'section' {...this.state} userData = {userData} />}\r\n                    </div>\r\n                </Fragment>\r\n            )\r\n        } else if (!this.props.firebase.getCurrentUser()) return <Redirect to = '/' />\r\n        else return <Loader  key = 'Loader' path = '/img/loading.gif' type = 'build' />\r\n    }\r\n\r\n    componentDidUpdate = (prevProps) => {\r\n\r\n        let {userData} = this.props;\r\n        let {currentProjectsData} = userData;\r\n        const isLoadComponents = this.state.isLoadComponents;\r\n        let sizeParentBox = null;\r\n\r\n        if (this.mainComponent && this.state.sizeParentBox === null)\r\n            sizeParentBox = {\r\n                width: this.mainComponent.data.width,\r\n                height: this.mainComponent.data.height,\r\n                top: this.mainComponent.data.top,\r\n                left: this.mainComponent.data.left,\r\n            }\r\n\r\n        if (userData.active && !currentProjectsData.loadProject) {\r\n            const current =  userData.projects.find(item => item.id === this.state.idProject)\r\n            if (current){\r\n                this.props.dispatch(loadCurrentProjectAction({\r\n                    id: current.id,\r\n                    typeProject: current.type,\r\n                    sectionsProject: [...current.sectionsProject],\r\n                    components: [...current.components]\r\n                }))\r\n\r\n            } else this.setState({...this.state, projectEmpty: true, sizeParentBox: sizeParentBox});\r\n        }\r\n        if (currentProjectsData.loadProject && isLoadComponents) {\r\n            if (this.state.sizeParentBox === null && sizeParentBox !== null)\r\n            this.setState({\r\n                ...this.state,\r\n                sizeParentBox: sizeParentBox\r\n            }, () => this.addComponentsFromBD([...currentProjectsData.components]));\r\n            else this.addComponentsFromBD([...currentProjectsData.components]);\r\n            eventEmitter.emit('EventSetState',currentProjectsData.sectionsProject.length-1);\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        let {userData} = this.props;\r\n        let {currentProjectsData} = userData;\r\n\r\n        if (userData.active && !currentProjectsData.loadProject) {\r\n\r\n            const current =  userData.projects.find(item => item.id === this.state.idProject)\r\n            this.props.dispatch(loadCurrentProjectAction({\r\n                id: current.id,\r\n                sectionsProject: [...current.sectionsProject],\r\n                typeProject: current.type,\r\n                components: [...current.components]\r\n            }));\r\n        };\r\n\r\n        eventEmitter.on('EventInstrumentPanel', this.openInstrument);\r\n        eventEmitter.on('EventModeEdit', this.workModeEdit);\r\n        this.eventEmitterBuild.on('EventBuildComponents', this.addComponent);\r\n        this.eventEmitterBuild.on('EventDeleteComponent', this.deleteComponent);\r\n        this.eventEmitterBuild.on('EventNewSection', this.addNewSection);\r\n        this.eventEmitterBuild.on('EventSaveChangesComponent', this.saveChangesComponent);\r\n        this.eventEmitterBuild.on('EventClosePanel', this.closePanel);\r\n        this.eventEmitterBuild.on('EventModalSearchOn', this.modalSearchOn);\r\n        this.eventEmitterBuild.on('EventView', this.ViewerSwitch);\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n\r\n        let {userData} = this.props;\r\n        if (userData.active)  this.props.dispatch(exitProjectAction(true));\r\n\r\n        eventEmitter.off('EventInstrumentPanel', this.openInstrument);\r\n        eventEmitter.off('EventModeEdit', this.workModeEdit);\r\n        this.eventEmitterBuild.off('EventBuildComponents', this.addComponent);\r\n        this.eventEmitterBuild.off('EventDeleteComponent', this.deleteComponent);\r\n        this.eventEmitterBuild.off('EventNewSection', this.addNewSection);\r\n        this.eventEmitterBuild.off('EventSaveChangesComponent', this.saveChangesComponent);\r\n        this.eventEmitterBuild.off('EventModalSearchOn', this.modalSearchOn);\r\n        this.eventEmitterBuild.off('EventClosePanel', this.closePanel);\r\n        this.eventEmitterBuild.off('EventView', this.ViewerSwitch);\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        userData: {\r\n            active: state.cabinet.active,\r\n            idUser: state.cabinet.idUser,\r\n            projects: [...state.cabinet.projects],\r\n           currentProjectsData: {...state.builder}\r\n        },\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(withFirebase(Build));\r\n","import React from 'react';\r\nimport eventEmitter from '../../EventEmitter';\r\n\r\nimport {animateScroll as scroll, scroller } from \"react-scroll\";\r\n\r\nclass ScrollMove extends React.PureComponent {\r\n\r\n    state = {\r\n        scrollConfig: {\r\n            duration: 1000,\r\n            delay: 50,\r\n            smooth: true,\r\n            offset: -60, // Scrolls to element -80 pixels down the page\r\n        },\r\n        position: 0,\r\n        positionCount: null\r\n\r\n    }\r\n\r\n    setStates = event => {\r\n        this.setState({...this.state,positionCount: event});\r\n    }\r\n\r\n    moveLocation = event => {\r\n        const count = this.state.positionCount;\r\n        const moveDown = this.state.position < count && event.deltaY > 0;\r\n        const moveUp = event.deltaY < 0 && this.state.position > 0;\r\n        eventEmitter.emit('EventClosePanel',{close: false});\r\n\r\n        if (moveDown)\r\n            this.setState({ position: this.state.position + 1},\r\n                () => scroller.scrollTo(`element${this.state.position}`,this.state.scrollConfig));\r\n            else if (moveUp){\r\n                this.state.position === 1 &&\r\n                    this.setState({position: this.state.position - 1}, () => scroll.scrollToTop());\r\n                this.state.position !== 1 &&\r\n                    this.setState({position: this.state.position - 1},\r\n                        () => scroller.scrollTo(`element${this.state.position}`,this.state.scrollConfig));\r\n            }\r\n\r\n    }\r\n\r\n\r\n    render(){\r\n        return (\r\n            <div key = 'moveScroll' onWheel = {this.moveLocation}>\r\n                {this.props.children}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        eventEmitter.on('EventSetState', this.setStates);\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        eventEmitter.off('EventSetState', this.setStates);\r\n    }\r\n}\r\n\r\n\r\nexport default ScrollMove;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport {Route, Switch} from 'react-router-dom';\r\n\r\nimport {middlewareLoadUserData} from './redux/middleware/loadUserMiddleware';\r\nimport {connect} from 'react-redux';\r\nimport withFirebase from './components/firebaseHOC';\r\nimport Loader from './components/loading/Loader';\r\n\r\nimport Index from './Pages/Index/Index';\r\nimport Cabinet from './Pages/Cabinet/Cabinet';\r\nimport Production from './Pages/Production/Production';\r\nimport About from './Pages/About/About';\r\nimport Build from './Pages/Build/Build';\r\nimport ErrorPage from './components/ErrorCatch/ErrorPage';\r\nimport ScrollMove from './components/scroll/ScrollMove';\r\n\r\nclass App extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        config: PropTypes.object.isRequired, /** @Config app */\r\n        firebase: PropTypes.object.isRequired, /** @firebase class for use firebase functions */\r\n        dispatch: PropTypes.func.isRequired, /** @dispatch - redux */\r\n    }\r\n\r\n    state = {\r\n        firebase: this.props.firebase,\r\n        firebaseLoadState: false,\r\n    }\r\n\r\n    componentDidMount(){\r\n\r\n        this.props.firebase.auth.onAuthStateChanged((user) => {\r\n\r\n            if (!this.state.firebaseLoadState){\r\n                if (user) this.props.dispatch(middlewareLoadUserData(user.uid));\r\n                this.setState({...this.state, firebaseLoadState: true});\r\n            }\r\n        });\r\n    }\r\n\r\n    render(){\r\n        if (this.state.firebaseLoadState){\r\n            return (\r\n                <Switch>\r\n                    <Route\r\n                        path = {'/'} exact\r\n                        render = {(props) => <Index {...props} />}\r\n                    />\r\n                    <Route path = '/Cabinet/' exact component = {Cabinet}/>\r\n                    <Route\r\n                        path = {'/Cabinet/About'}\r\n                        render = {(props) => <About {...props} config = {this.props.config} />}\r\n                    />\r\n                    <Route path = {'/Cabinet/Build/:param'} exact \r\n                        render = {(props) => <ScrollMove><Build {...props}></Build></ScrollMove>}\r\n                    />\r\n                    <Route path = {'/Cabinet/Build/:param/Production'} exact component = {Production} />\r\n                    <Route path = {'*'} component = {Index} />\r\n                    <Route path = {'/crashPage'} component = {ErrorPage} />\r\n                </Switch>\r\n            )\r\n        } else return <Loader path = { '/img/loading.gif'} type = 'application' />\r\n    }\r\n}\r\n\r\nexport default connect()(withFirebase(App));","\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\n\nimport firebase from './Firebase/Firebase';\nimport ErrorBoundary from './components/ErrorCatch/ErrorBoundary';\nimport {HashRouter } from 'react-router-dom';\nimport {Provider} from 'react-redux';\nimport store from './redux/store';\nimport App from './App.jsx';\nimport 'normalize.css';\n\nimport firebaseContext from './Firebase/firebaseContext';\n\nfirebase.saveSession('SESSION');\nconst config = require('./config.json');\nconsole.time();\nReactDOM.render(\n        <HashRouter>\n            <ErrorBoundary>\n                <firebaseContext.Provider value = {firebase}>\n                    <Provider store = {store}>\n                        <App config = {config} />\n                    </Provider>\n                </firebaseContext.Provider>\n            </ErrorBoundary>\n        </HashRouter>,\n        document.getElementById('root')\n);\n\n\nserviceWorker.register();\n\n"],"sourceRoot":""}