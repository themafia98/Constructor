{"version":3,"sources":["serviceWorker.js","Firebase/firebaseConfig.js","Firebase/Firebase.js","EventEmitter.js","components/ErrorCatch/ErrorPage.jsx","components/ErrorCatch/ErrorBoundary.jsx","redux/actions.js","redux/reducerBuilder.js","redux/reducerCabinet.js","redux/reducers.js","redux/store.js","redux/middleware/loadUserMiddleware.js","components/firebaseHOC.jsx","components/loading/Loader.jsx","components/Registration/Registration.jsx","Pages/Index/Index.jsx","redux/middleware/middlewareDelete.js","components/Icon/icon.jsx","components/header/Header.jsx","components/imageViewer/imageItem.jsx","components/modalWindow/ModalWindow.jsx","redux/middleware/createProjectMiddleware.js","components/List/Item.jsx","components/List/List.jsx","components/ProjectsSection/ProjectsSection.jsx","Pages/Cabinet/Cabinet.jsx","Pages/About/About.jsx","redux/middleware/updateMiddleware.js","components/buildComponents/components/Image.jsx","components/buildComponents/components/Text.jsx","components/buildComponents/components/Background.jsx","components/componentsBuilder/BuilderComponents.jsx","components/componentsBuildMenu/BuildMenu.jsx","components/controllers/controllers.jsx","components/imageViewer/imageViewer.jsx","components/instrumentsPanel/BackgroundTools/BackgroundInstruments.jsx","components/instrumentsPanel/TextTools/TextInstruments.jsx","components/confirmBox/Confirm.jsx","components/instrumentsPanel/InstrumentsPanel.jsx","components/buildComponents/MainBackground/MainBackground.jsx","Pages/Build/Build.jsx","App.jsx","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","firebaseConfig","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firebaseInterface","require","Firebase","Object","classCallCheck","this","firebase","auth","db","rules","setPersistence","Auth","Persistence","email","password","signInWithEmailAndPassword","createUserWithEmailAndPassword","signOut","currentUser","stream","EventEmitter","ErrorPage","redirect","update","event","_this","setState","eventEmitter","emit","react_default","a","createElement","react_router","to","class","className","onClick","React","Component","ErrorBoundary","hasError","updateApplication","componentDidMount","on","componentWillUnmount","off","info","ErrorCatch_ErrorPage","props","children","PureComponent","exitProjectAction","type","exit","loadCurrentProjectAction","id","typeProject","sectionTitleProject","components","loadUserAction","active","idUser","uid","projects","errorAction","initialState","loadProject","idProject","combineReducers","builder","arguments","length","undefined","action","objectSpread","toConsumableArray","cabinet","map","item","middleware","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","thunk","withExtraArgument","reduxCatch","getState","lastAction","dispatch","debug","store","createStore","middlewareLogin","_ref2","asyncToGenerator","regenerator_default","mark","_callee","_ref","wrap","_context","prev","next","login","response","collection","doc","user","get","docUser","data","message","stop","_x","_x2","_x3","apply","middlewareLogOutUser","_ref6","_callee3","_ref5","_context3","_x7","_x8","_x9","withFirebase","assign","Loader","_useState","useState","path","slicedToArray","src","alt","emailRef","passwordRef","setRefEmail","node","setRefPassword","createUser","value","Error","set","autoComplete","ref","Index","title","registrationActive","regStatus","wrongEnter","emailImput","passwordImput","statusRegistration","additionalUserInfo","isNewUser","stopPropagation","showBox","authTo","e","components_Registration_Registration","connect","middlewareDelete","filter","itemdb","Icon","_useState3","_useState5","draggable","iconPath","CabinetIcon","Header","redirectAbout","redirectA","redirectCabinet","redirectC","logOut","pathname","add","icon","withRouter","ImageItem","urls","regular","urlRegular","full","urlFull","_useState7","isFull","selected","url","ModalWindow","workMode","images","buttonSearchDisabled","selectedItem","showUrl","imageBoxView","newProject","validateName","validateType","disabled","name","imageMenuActive","warning","lengthMax","lengthMin","inputSearch","inputSelect","searchBackground","api","concat","search","inages","isFetch","ok","json","results","showMenuImage","showImage","target","setSelectedImage","idComponent","makeImageResultBox","items","i","imageItem","key","addNewProject","mode","selectOption","inputs","defineProperty","lengthInput","cancel","refSelect","refSearch","onChange","placeholder","react","middlewareCreateProject","list","lastProject","lastIndex","header","push","backgroundImage","color","min","max","Math","floor","random","_useState4","canBuild","setCanBuild","_useState9","data-id","List","makeList","project","List_Item","ProjectsSection","components_List_List","Cabinet","deletItem","getCurrentUser","changeWorkMode","header_Header","modalWindow_ModalWindow","components_ProjectsSection_ProjectsSection","about","developer","year","updateMiddleware","newProjects","JSON","parse","stringify","find","ImageStyle","styled","img","attrs","style","left","coordX","top","coordY","_templateObject","size","Image","_useState6","setSize","_useState10","count","setCount","_useState11","sizeParenBox","_useState12","setSizeParenBox","_useState13","_useState14","shiftCoords","setShiftCoords","_useState15","coords","x","y","_useState16","setDragNdrop","moveText","pageX","pageY","convertToPercentX","width","convertToPercentY","height","position","toFixed","shadowDisplay","saveSize","useEffect","effect","res","status","onMouseDown","rect","getBoundingClientRect","pageXOffset","onDragStart","sizeTextValue","onDrag","onDragEnd","onWheel","shiftKey","deltaY","counter","TextStyle","h1","Text_templateObject","textColor","TextComponent","_useState8","colorText","setColorText","sizeText","setSizeText","content","contentText","setText","_useState17","_useState18","dragNdrop","openTitleInstruments","changeColorText","eventItem","colorRGB","changeSizeText","eventSize","changeContentText","eventContent","idSection","Background","div","Background_templateObject","backgroundColor","BackgroundComponent","boxComponent","createRef","background","setBgColor","setImage","changeColor","setBackgroundImage","current","focus","boxInform","saveWidth","BuilderComponents","Text","components_Background","components_Image","BuildMenu","componentsPatternStatus","fontSize","image","addText","countComponents","editComponentName","component","componentsBuilder_BuilderComponents","addBackground","addImage","addSection","countSection","ControllersBox","controllers_templateObject","Controllers","viewComponentMenu","shiftX","shiftY","coordsX","coordsY","componentMenu","saveCoords","controlBox","drag","refControll","componentsBuildMenu_BuildMenu","ImageViewer","BackgroundInstruments","stats","componentsStats","colorPickerActive","instrumentPanel","cbSetColor","lib","onChangeComplete","cbHandleChangeComplete","cbSearchImage","cbSaveChanges","TextInstruments","cbSetSize","cbSetContent","maxLength","defaultValue","Confirm","cbCancelSave","InstrumentsPanel","isChange","confirmActive","mainBuilderData","updateSizeText","closePanel","close","setContent","contentValue","updatePosition","setColor","updateBimageStats","handleChangeComplete","rgb","r","g","b","saveChanges","searchImage","makePanelInstruments","TextTools_TextInstruments","BackgroundTools_BackgroundInstruments","cancelSave","componentDidUpdate","oldProps","oldState","targetBool","compare","instrumentActive","components_confirmBox_Confirm","MainBackground","editRedy","changeMode","editStart","refBox","refBackground","_this2","bg","currentProjectsData","childrens","componentJSX","data-class","Build","parseInt","params","param","isLoadComponents","projectEmpty","sectionTitleProjectAction","showSectionAddMenu","mainBoxWidth","mainBoxHeight","buildGetComponents","menuActive","modalSearch","modalImageViewer","modalSearchOn","itemEvent","imageViewerSwitch","workModeEdit","openInstrument","targetEqual","idEqual","instumentActive","addComponentsFromBD","array","_sizeParenBox","componentsFromDB","forEach","patternJSX","addComponent","dataBaseData","saveChangesComponent","userData","findCurrentItem","_components","section","buildComponents_MainBackground_MainBackground","buildAdditional","imageViewer_imageViewer","instrumentsPanel_InstrumentsPanel","showAddSection","mainComponent","mainRefComponent","addNewSection","showEv","onMouseMove","controllers","prevProps","App","firebaseLoadState","onAuthStateChanged","_ref4","_callee2","_ref3","_context2","_x4","_x5","_x6","_this3","exact","render","Pages_Index_Index","Pages_About_About","saveSession","ReactDOM","react_router_dom","ErrorCatch_ErrorBoundary","es","src_App","document","getElementById","URL","href","origin","addEventListener","fetch","contentType","headers","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.84fe5a8b.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log('This web app is being served cache-first by a service worker.');\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","// setings in root folder / firebase.env\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n    databaseURL: process.env.REACT_APP_DATABASE_URL,\r\n    projectId: process.env.REACT_APP_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n    appId: process.env.REACT_APP_APPID\r\n};\r\n\r\nexport default firebaseConfig;","import * as firebase from 'firebase/app';\r\nimport firebaseConfig from './firebaseConfig';\r\n\r\nconst auth = require('firebase/auth');\r\nconst firestore = require('firebase/firestore');\r\n\r\nclass Firebase {\r\n\r\n    constructor(firebaseConfig){\r\n        firebase.initializeApp(firebaseConfig);\r\n        this.auth = firebase.auth();\r\n        this.db = firebase.firestore();\r\n    }\r\n\r\n    saveSession(rules){\r\n        return this.auth.setPersistence(firebase.auth.Auth.Persistence[rules]);\r\n    }\r\n\r\n    login(email, password){\r\n        try {\r\n            return this.auth.signInWithEmailAndPassword(email, password);\r\n        } catch (error) {\r\n            console.error(error);\r\n            return null;\r\n        }\r\n    }\r\n\r\n    registration(email, password){\r\n        return this.auth.createUserWithEmailAndPassword(email, password)\r\n    }\r\n\r\n    signOut(){\r\n        return this.auth.signOut()\r\n    }\r\n\r\n    getCurrentUser() {\r\n        return this.auth.currentUser\r\n    }\r\n}\r\n\r\nlet firebaseInterface = new Firebase(firebaseConfig);\r\n\r\nexport default firebaseInterface;\r\n\r\nexport { auth, firestore };\r\n\r\n","import {EventEmitter} from 'events';\r\n\r\nconst stream = new EventEmitter();\r\nexport default stream;","import React from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\nimport eventEmitter from '../../EventEmitter';\r\n\r\nimport './errorPage.scss';\r\n\r\n\r\nclass ErrorPage extends React.Component {\r\n\r\n    state = {\r\n        redirect: false,\r\n    }\r\n\r\n    update = event => {\r\n       this.setState({redirect: true},\r\n        () => eventEmitter.emit('EventErrorCatchUpdate'));\r\n    }\r\n\r\n    render(){\r\n        if (this.state.redirect) return <Redirect to = '/' />\r\n        return (\r\n        <div class = 'container'>\r\n            <div class = 'flex-column'>\r\n                <h1>Application crash</h1>\r\n                <button className = 'button_updateApp' onClick = {this.update}>Update</button>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ErrorPage;","\r\nimport React from 'react';\r\nimport eventEmitter from '../../EventEmitter';\r\nimport ErrorPage from './ErrorPage';\r\n\r\nclass ErrorBoundary extends React.PureComponent {\r\n\r\n      state = { \r\n        hasError: false,\r\n      };\r\n\r\n    static getDerivedStateFromError(error) {\r\n        console.log(error);\r\n      // Обновить состояние с тем, чтобы следующий рендер показал запасной UI.\r\n      return { hasError: true};\r\n    }\r\n\r\n    updateApplication = event => {\r\n      this.setState({hasError: false});\r\n    };\r\n  \r\n    componentDidCatch(error, info) {\r\n      // Можно также сохранить информацию об ошибке в соответствующую службу журнала ошибок\r\n     console.error(error + \",\" + info);\r\n    }\r\n  \r\n    render() {\r\n      if (this.state.hasError) return <ErrorPage />\r\n      return this.props.children;\r\n    }\r\n\r\n    componentDidMount = () => {\r\n      eventEmitter.on('EventErrorCatchUpdate',this.updateApplication);\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n      eventEmitter.off('EventErrorCatchUpdate',this.updateApplication);\r\n    }\r\n  }\r\n\r\n  export default ErrorBoundary;","const CREATE_PROJECT = 'CREATE_PROJECT';\r\nconst LOAD_UPDATE_PROJECT = \"LOAD_UPDATE_PROJECT\";\r\nconst LOAD_CURRENT = 'LOAD_CURRENT';\r\nconst LOG_OUT_CABINET = 'LOG_OUT_CABINET';\r\nconst LOAD_USER_CABINET = 'LOAD_USER_CABINET';\r\nconst ERROR_CABINET = 'ERROR_CABINET';\r\nconst EXIT_PROJECT = 'EXIT_PROJECT';\r\n\r\nconst createProjectAction = (state) => {\r\n    return {\r\n        type: CREATE_PROJECT,\r\n        projects: state,\r\n    }\r\n}\r\n\r\nconst exitProjectAction = (state) => {\r\n    return {\r\n        type: EXIT_PROJECT,\r\n        exit: state\r\n    }\r\n}\r\n\r\nconst loadCurrentProjectAction = (state) => {\r\n    return {\r\n        type: LOAD_CURRENT,\r\n        id: state.id,\r\n        typeProject: state.typeProject,\r\n        sectionTitleProject: state.sectionTitleProject,\r\n        components: state.components\r\n    }\r\n}\r\n\r\nconst loadUpdateCurrentProject = (state) => {\r\n    console.log(state);\r\n    return {\r\n        type: LOAD_UPDATE_PROJECT,\r\n        idProject: state.idProject,\r\n        sectionTitleProject: state.sectionTitleProject,\r\n        components: state.components\r\n    }\r\n}\r\n\r\nconst loadUserAction = (state) => {\r\n    return {\r\n        type: LOAD_USER_CABINET,\r\n        active: true,\r\n        idUser: state.uid,\r\n        error: '',\r\n        projects: state.projects\r\n    }\r\n}\r\n\r\nconst logOutAction = (state) => {\r\n\r\n    return {\r\n        type: LOG_OUT_CABINET,\r\n        active: false,\r\n        idUser: null,\r\n        error: '',\r\n        projects: []\r\n    }\r\n}\r\n\r\nconst errorAction = (state) => {\r\n    return {\r\n        type: ERROR_CABINET,\r\n        error: state\r\n    }\r\n}\r\n\r\nexport {\r\n    CREATE_PROJECT, createProjectAction, /* cabinet */\r\n    LOAD_USER_CABINET, loadUserAction, /* cabinet */\r\n    LOG_OUT_CABINET, logOutAction, /* cabinet */\r\n    LOAD_CURRENT, loadCurrentProjectAction, /* builder */\r\n    LOAD_UPDATE_PROJECT, loadUpdateCurrentProject,\r\n    EXIT_PROJECT, exitProjectAction,\r\n    ERROR_CABINET, errorAction, /* both */\r\n}","import {LOAD_CURRENT,LOAD_UPDATE_PROJECT, EXIT_PROJECT} from './actions';\r\n\r\nconst initialState = {\r\n    loadProject: false,\r\n    idProject: null,\r\n    typeProject: null,\r\n    components: [],\r\n    sectionTitleProject: [],\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n    switch (action.type){\r\n\r\n        case LOAD_CURRENT: {\r\n            return {\r\n                ...state,\r\n                loadProject: true,\r\n                idProject: action.id,\r\n                typeProject: action.typeProject,\r\n                components: [...action.components],\r\n                sectionTitleProject: [...action.sectionTitleProject]\r\n            }\r\n        }\r\n\r\n        case LOAD_UPDATE_PROJECT: {\r\n            return {\r\n                ...state,\r\n                components: [...action.components],\r\n                sectionTitleProject: [...action.sectionTitleProject]\r\n            }\r\n        }\r\n\r\n        case EXIT_PROJECT: {\r\n            if (action.exit)\r\n            return {\r\n                ...state,\r\n                loadProject: false,\r\n                idProject: null,\r\n                typeProject: null,\r\n                components: []\r\n            }\r\n            else return state;\r\n        }\r\n        default: return state;\r\n    }\r\n};","import {LOAD_USER_CABINET, LOG_OUT_CABINET, ERROR_CABINET, CREATE_PROJECT, LOAD_UPDATE_PROJECT} from './actions';\r\n\r\nconst initialState = {\r\n    active: false,\r\n    idUser: null,\r\n    projects: [],\r\n    error: null,\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case LOAD_USER_CABINET: {\r\n\r\n            return {\r\n                ...state,\r\n                active: action.active,\r\n                idUser: action.idUser,\r\n                projects: [...action.projects]\r\n            }\r\n        }\r\n\r\n        case CREATE_PROJECT: {\r\n            return {\r\n                ...state,\r\n                projects: [...action.projects]\r\n            }\r\n        }\r\n\r\n        case LOAD_UPDATE_PROJECT: {\r\n            return {\r\n                ...state,\r\n                projects: state.projects.map(item => {\r\n                    if (item.id === action.idProject)\r\n                        item.components = [...action.components]\r\n                return item;\r\n                })\r\n            }\r\n        }\r\n\r\n        case LOG_OUT_CABINET: {\r\n            return {\r\n                ...state,\r\n                active: false,\r\n                idUser: null,\r\n                projects: []\r\n            }\r\n        }\r\n\r\n        case ERROR_CABINET: {\r\n            return {\r\n                ...state,\r\n                error: action.error\r\n            }\r\n        }\r\n        default: return state;\r\n    }\r\n}\r\n\r\n","import {combineReducers} from 'redux';\r\nimport reducerBuilder from './reducerBuilder';\r\nimport reducerCabinet from './reducerCabinet';\r\n\r\nexport default combineReducers({\r\n    builder: reducerBuilder,\r\n    cabinet: reducerCabinet,\r\n});","import {createStore, applyMiddleware, compose} from 'redux';\r\nimport firebase from  '../Firebase/Firebase';\r\nimport reduxCatch from 'redux-catch';\r\nimport thunk from 'redux-thunk';\r\nimport combineReducers from './reducers';\r\n\r\nconst composeEnhancers =\r\n  typeof window === 'object' &&\r\n  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?\r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\r\n    }) : compose;\r\n\r\n    function errorHandler(error, getState, lastAction, dispatch) {\r\n      console.error(error);\r\n      console.debug('current state', getState());\r\n      console.debug('last action was', lastAction);\r\n      // optionally dispatch an action due to the error using the dispatch parameter\r\n    }\r\n\r\nconst middleware = composeEnhancers(\r\n  applyMiddleware(thunk.withExtraArgument({firebase})),\r\n  applyMiddleware(reduxCatch(errorHandler))\r\n);\r\nconst store = createStore(combineReducers, middleware);\r\n\r\n\r\nexport default store;","import {loadUserAction, errorAction, logOutAction} from '../actions';\r\n\r\nconst middlewareLogin = (email,password) => async (dispatch,getState, {firebase}) => {\r\n        await firebase.login(email,password)\r\n        .then(response =>{\r\n            firebase.db.collection(\"users\").doc(response.user.uid).get()\r\n            .then(docUser => {\r\n                let user = docUser.data();\r\n                dispatch(loadUserAction({uid: docUser.id, projects: [...user.projects]}))\r\n            })\r\n        })\r\n        .catch((error) => {\r\n            console.error(error.message);\r\n            dispatch(errorAction(error.message));\r\n        });\r\n    }\r\n\r\nconst middlewareLoadUserData = (uid) => async (dispatch,getState, {firebase}) => {\r\n        await firebase.db.collection(\"users\").doc(uid).get()\r\n        .then(docUser => {\r\n            let user = docUser.data();\r\n            dispatch(loadUserAction({uid: uid, projects: [...user.projects]}))\r\n        })\r\n        .catch((error) => {\r\n            console.error(error.message);\r\n            dispatch(errorAction(error.message));\r\n        });\r\n    }\r\n\r\nconst middlewareLogOutUser = (uid) => async (dispatch,getState, {firebase}) => {\r\n    await firebase.signOut()\r\n    .then (response => {\r\n        dispatch(logOutAction());\r\n    })\r\n    .catch((error) => {\r\n        console.error(error.message);\r\n        dispatch(errorAction(error.message));\r\n    });\r\n}\r\nexport {\r\n    middlewareLogin,middlewareLoadUserData, middlewareLogOutUser\r\n}","import React from 'react';\r\nimport firebase from '../Firebase/Firebase';\r\n\r\nconst withFirebase = Component => props => (\r\n    <Component firebase = {firebase} {...props} />\r\n);\r\n\r\nexport default withFirebase;","import React,{useState} from 'react';\r\n\r\nexport default function(props) {\r\n    const [path] = useState(props.path);\r\n    return (\r\n            <div className = 'loaderBox'>\r\n                <img className = 'loader' src = {path} alt = 'loader'></img> \r\n                <p>Loading {props.type}</p>\r\n            </div>\r\n    )\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport eventEmitter from '../../EventEmitter';\r\nimport './registration.scss';\r\n\r\nimport withFirebase from '../../components/firebaseHOC';\r\n\r\n\r\nclass Registration extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        firebase: PropTypes.object.isRequired, /** @firebase class for use firebase functions */\r\n    }\r\n\r\n    state = {\r\n        firebase: this.props.firebase,\r\n        error: null,\r\n    }\r\n\r\n    emailRef = null;\r\n    passwordRef = null;\r\n\r\n    setRefEmail = (node) => this.emailRef = node;\r\n    setRefPassword = (node) => this.passwordRef = node;\r\n\r\n    createUser = event => {\r\n\r\n        const email = this.emailRef ? this.emailRef.value : null;\r\n        const password = this.passwordRef ? this.passwordRef.value : null;\r\n        const { firebase } = this.props;\r\n\r\n        if (password && email)\r\n        firebase.registration(email, password)\r\n        .then(response => {\r\n            if (!response) throw new Error('Ivaid registration')\r\n            firebase.db.collection(\"users\").doc(response.user.uid).set({\r\n                'projects': [],\r\n                'email': email,\r\n            }).then(() => eventEmitter.emit('EventRegistrationCorrect', response))\r\n        })\r\n        .catch((error) => {\r\n        console.error(error.message);\r\n        this.setState({error: error.message});\r\n        });\r\n        else  return this.setState({error: 'invalid user data'});\r\n    };\r\n\r\n    render(){\r\n        let  { error } = this.state;\r\n        return (\r\n            <div className = 'RegistrationBox'>\r\n                <div  className = 'RegistrationForm'>\r\n                    <h3>Registration</h3>\r\n                    <form autoComplete = 'off' className = 'RegForm'>\r\n                        { error ?\r\n                            <p className = 'error'>{error}</p>\r\n                            : null\r\n                        }\r\n                        <span>E-mail</span>\r\n                        <input ref = {this.setRefEmail} type = 'text' />\r\n                        <span>Password</span>\r\n                        <input className = 'password' autoComplete = \"off\" ref = {this.setRefPassword} type = 'password' />\r\n                        <input onClick = {this.createUser}\r\n                                className = 'loginButton'\r\n                                type = 'button'\r\n                                value = 'registration'\r\n                        />\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\nexport default withFirebase(Registration);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport eventEmitter from '../../EventEmitter';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nimport {middlewareLogin} from '../../redux/middleware/loadUserMiddleware';\r\n\r\nimport Loader from '../../components/loading/Loader';\r\nimport Registration from '../../components/Registration/Registration';\r\n\r\nimport {connect} from 'react-redux';\r\n\r\nimport './index.scss';\r\n\r\nclass Index extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        active: PropTypes.bool, /** @active - status firebase auth */\r\n        dispatch: PropTypes.func.isRequired, /** @dispatch - redux */\r\n        history: PropTypes.object.isRequired, /** @Router HTML5 history */\r\n        location: PropTypes.object.isRequired, /** @Router */\r\n        match: PropTypes.object.isRequired, /** @Router */\r\n        wrongEnter: PropTypes.string, /** @Error about invalid enter */\r\n        config: PropTypes.object, /** @config - app settings */\r\n    }\r\n\r\n    state = {\r\n        title:  \"Constructor\",\r\n        registrationActive: false,\r\n        regStatus: false,\r\n        wrongEnter: false,\r\n        error: ''\r\n    }\r\n\r\n    emailImput = null;\r\n    passwordImput = null;\r\n\r\n    statusRegistration = event => {\r\n        event.additionalUserInfo.isNewUser ?\r\n            this.setState({\r\n                ...this.state,\r\n                regStatus: true,\r\n                registrationActive: false,\r\n                error: 'Account create!'\r\n            })\r\n        : console.error('error registration');\r\n        event.stopPropagation();\r\n    }\r\n\r\n    showBox = event => {\r\n        this.setState ({\r\n            ...this.state,\r\n        registrationActive: this.state.registrationActive ? false : true\r\n        });\r\n        event.stopPropagation();\r\n    }\r\n\r\n    authTo = event => {\r\n            if (this.emailImput && this.passwordImput)\r\n            this.props.dispatch(middlewareLogin(this.emailImput.value, this.passwordImput.value));\r\n            event.stopPropagation();\r\n    }\r\n\r\n    emailRef = node => this.emailImput = node;\r\n    passwordRef = node => this.passwordImput = node;\r\n\r\n    render(){\r\n\r\n        if (this.props.active) return <Redirect to = { '/Cabinet'} />\r\n        else if (!this.props.active) {\r\n            return (\r\n                <div className = 'LoginPage flex-column'>\r\n                        <h1>{this.state.title}</h1>\r\n                        <div className = 'LoginBox'>\r\n                            <div className = 'LoginForm'>\r\n                                <h3>Connect form</h3>\r\n                                {\r\n                                    this.props.wrongEnter || this.state.regStatus ?\r\n                                    <p className = 'error'>{this.props.wrongEnter}</p>\r\n                                    : null\r\n                                }\r\n                                <p>E-mail</p>\r\n                                <input ref = {this.emailRef} type = 'text' />\r\n                                <p>Password</p>\r\n                                <input ref = {this.passwordRef} type = 'password' />\r\n                                <input \r\n                                    onClick = {this.authTo} \r\n                                    className = 'loginButton enterInput'\r\n                                    type = 'button'\r\n                                    value = 'enter' />\r\n                                <input\r\n                                    onClick = {this.showBox}\r\n                                    className = {this.state.registrationActive ?\r\n                                        `loginButton registration selected` : 'loginButton registration'}\r\n                                    type = 'button'\r\n                                    value = 'registration'\r\n                                    />\r\n                            </div>\r\n                        </div>\r\n                        {\r\n                            this.state.registrationActive ?\r\n                            <Registration />\r\n                            : null\r\n                        }\r\n                </div>\r\n            )\r\n        } else  return <Loader path = '/img/loading.gif' type = 'session' />\r\n    }\r\n\r\n    componentDidMount = (e) => {\r\n        eventEmitter.on('EventRegistrationCorrect', this.statusRegistration);\r\n    }\r\n    componentWillUnmount = (e) => {\r\n        eventEmitter.off('EventRegistrationCorrect', this.statusRegistration);\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        active: state.cabinet.active, \r\n        wrongEnter: state.cabinet.error\r\n    }\r\n  }\r\n\r\nexport default connect(mapStateToProps)(Index);","\r\nimport {errorAction, loadUserAction} from '../actions';\r\n\r\nconst middlewareDelete = item => async (dispatch,getState, {firebase}) => {\r\n    await firebase.db.collection('users').doc(item.uid).get()\r\n    .then(user => user.data())\r\n    .then(data => {\r\n        return {id: data.id, projects: data.projects.filter(itemdb => itemdb.id !== item.id)};\r\n    })\r\n    .then(data => {\r\n        firebase.db.collection(\"users\").doc(item.uid).update({\r\n            \"projects\": data.projects\r\n        })\r\n        .then(response => {\r\n            dispatch(loadUserAction({uid: data.id, projects: data.projects}));\r\n        });\r\n    })\r\n    .catch((error) => {\r\n        console.error(error.message);\r\n        dispatch(errorAction(error.message));\r\n    });\r\n}\r\n\r\nexport default middlewareDelete;\r\n","import React, {useState} from 'react';\r\n\r\n\r\nfunction Icon(props){\r\n    const [path] = useState(props.path);\r\n    const [className] = useState(props.className ? props.className : null);\r\n    const [draggable] = useState(props.draggable ? true : false);\r\n\r\n    return (\r\n    <img\r\n        draggable = {draggable}\r\n        onClick = {props.onClick ? props.onClick : null}\r\n        className = {className}\r\n        title = {props.title ? props.title : null}\r\n        src = {process.env.PUBLIC_URL + path } alt = 'icon'>\r\n    </img>\r\n    )\r\n}\r\n\r\nexport default Icon;","import React from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport './header.scss';\r\n\r\nimport {middlewareLogOutUser} from '../../redux/middleware/loadUserMiddleware';\r\nimport {connect} from 'react-redux';\r\nimport {Redirect, withRouter} from 'react-router-dom';\r\n\r\nimport eventEmitter from '../../EventEmitter.js';\r\nimport Icon from '../Icon/icon';\r\n\r\n\r\nconst iconPath = require('../../config.json').CabinetIcon;\r\n\r\nclass Header extends React.Component {\r\n\r\n    static propTypes = {\r\n        title: PropTypes.string.isRequired, /** @Config title app */\r\n        dispatch: PropTypes.func.isRequired, /** @dispatch redux */\r\n        history: PropTypes.object.isRequired, /** @Router HTML5 history */\r\n        location: PropTypes.object.isRequired, /** @Router */\r\n        match: PropTypes.object.isRequired, /** @Router */\r\n    };\r\n\r\n    state = {\r\n        title: this.props.title,\r\n        redirectAbout: {\r\n            path:  '/Cabinet/About',\r\n            redirectA: false,\r\n        },\r\n        redirectCabinet: {\r\n            path:  '/Cabinet',\r\n            redirectC: false,\r\n        }\r\n    };\r\n\r\n    logOut = event => {\r\n        if (this.props.idUser)\r\n            this.props.dispatch(middlewareLogOutUser(this.props.idUser));\r\n        event.stopPropagation();\r\n    };\r\n\r\n    redirectAbout = event => {\r\n        if (this.props.location.pathname !== this.state.redirectAbout.path)\r\n           this.setState({\r\n               redirectAbout: {\r\n                   ...this.state.redirectAbout,\r\n                   redirectA: true\r\n               }\r\n           });\r\n        event.stopPropagation()\r\n    };\r\n\r\n    redirectCabinet = event => {\r\n        if (this.props.location.pathname !== this.state.redirectCabinet.path)\r\n        this.setState({\r\n            redirectCabinet: {\r\n                ...this.state.redirectCabinet,\r\n                redirectC: true\r\n            }\r\n        });\r\n        event.stopPropagation()\r\n    }\r\n\r\n    add = (e) => {\r\n        eventEmitter.emit('EventChangeWorkMode',{action: 'newProject'});\r\n    };\r\n\r\n    render(){\r\n        let {redirectA} = this.state.redirectAbout;\r\n        let {redirectC} = this.state.redirectCabinet;\r\n\r\n        if (redirectA) return <Redirect to = {this.state.redirectAbout.path} />\r\n        if(redirectC) return <Redirect to = {this.state.redirectCabinet.path} />\r\n\r\n        return (\r\n            <header>\r\n                <div className = 'container'>\r\n                    <div className = 'flex-row'>\r\n                            <div onClick = {this.redirectCabinet} className = 'header__CabinetInfo'>\r\n                                <Icon className ='mainIcon' path = {iconPath} />\r\n                                <h3 className = 'tilteApp'>{this.state.title}</h3>\r\n                            </div>\r\n                            {this.props.location.pathname === '/Cabinet' ?\r\n                                <div onClick = {this.add} className = 'header__newProject__AddButton'>\r\n                                    <Icon className = 'Cabinet' path = '/img/plus.png' />\r\n                                </div>\r\n                                : null\r\n                            }\r\n                                <div  className = 'Navigator'>\r\n                                    <Icon className = 'about' onClick = {this.redirectAbout} title = 'about' path = '/img/about_logo.svg' />\r\n                                    <Icon className = 'logoutButton' onClick = {this.logOut} title = 'logOut' path = '/img/logOut.svg' />\r\n                                </div>\r\n                    </div>\r\n               </div>\r\n            </header>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect()(withRouter(Header));","import React, {useState} from 'react';\r\nimport eventEmitter from '../../EventEmitter';\r\n\r\nconst ImageItem = props => {\r\n\r\n    const [id] = useState(props.id);\r\n    const [urlRegular] = useState(props.urls.regular);\r\n    const [urlFull] = useState(props.urls.full);\r\n    const [isFull] = useState(props.isFull);\r\n\r\n    const showImageMenu = event => {\r\n       eventEmitter.emit(\"EventShowMenuImage\", {id: id, url: urlRegular, urlFull: urlFull});\r\n    }\r\n\r\n\r\n    return (\r\n        <div className = {props.selected ? 'ItemBox selected' : 'ItemBox'}>\r\n            <img\r\n                className = 'ImageItem'\r\n                onClick = {showImageMenu}\r\n                src = {isFull ? urlFull : urlRegular}\r\n                alt = 'item'\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ImageItem;","import React,{Fragment} from 'react';\r\nimport isFetch from 'isomorphic-fetch';\r\nimport PropTypes from 'prop-types';\r\nimport eventEmitter from '../../EventEmitter.js';\r\n\r\nimport ImageItem from '../imageViewer/imageItem';\r\nimport Icon from '../Icon/icon';\r\n\r\nimport './modal.scss';\r\n\r\nclass ModalWindow extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        workMode: PropTypes.string.isRequired, /** @Mode for modal */\r\n        idComponent: PropTypes.string || PropTypes.number /** @Id current user project */\r\n    }\r\n\r\n    state = {\r\n        workMode: this.props.workMode,\r\n        images: {\r\n            buttonSearchDisabled: false,\r\n            selectedItem: null, \r\n            showUrl: null, \r\n            images: null,\r\n            urlFull: null,\r\n            imageBoxView: false, \r\n            error: ''\r\n        },\r\n        newProject: {\r\n            validateName: false,\r\n            validateType: false,\r\n            disabled: true,\r\n            name: '',\r\n            type: 'empty'\r\n        },\r\n        imageMenuActive: false,\r\n        warning: {\r\n            lengthMax: 'Max length: 20 symbols',\r\n            lengthMin: 'Min length: 4 symbol',\r\n            type: 'Select type of webpage',\r\n        }\r\n    }\r\n\r\n    inputSearch = null;\r\n    inputSelect = null;\r\n\r\n    searchBackground = event => {\r\n        const mode = 'search/photos/?page=1&per_page=40&query=';\r\n        const api = `https://api.unsplash.com/${mode}`;\r\n        const search = this.inputSearch.value;\r\n\r\n        this.setState({...this.state, images: {...this.state.inages, buttonSearchDisabled: true}})\r\n\r\n        isFetch(`${api + search}&client_id=${process.env.REACT_APP_UNSPLASH_TOKEN}`)\r\n        .then(response => {\r\n            if (response.ok) return response.json();\r\n            else throw new Error('request invalid');\r\n        })\r\n        .then(response => {\r\n\r\n            let {results} = response;\r\n            if (results.length)\r\n            this.setState({\r\n                ...this.state,\r\n                images: {\r\n                    ...this.state.images,\r\n                    imageBoxView: true,\r\n                    error: '',\r\n                    images: [...results],\r\n                    buttonSearchDisabled: false\r\n                },\r\n            });\r\n            else throw new Error('Photos not found');\r\n        })\r\n        .catch(error => {\r\n            console.error(error.message);\r\n            this.setState({\r\n                ...this.state,\r\n                images: {...this.state.images, error: error.message},\r\n                imageBoxView: false,\r\n                buttonSearchDisabled: false\r\n            });\r\n        });\r\n    }\r\n\r\n    showMenuImage = event => {\r\n        this.setState({\r\n            ...this.state, \r\n            imageMenuActive: true,\r\n            images: {\r\n                ...this.state.images,\r\n                selectedItem: event.id, \r\n                showUrl: event.url,\r\n                urlFull: event.urlFull\r\n\r\n            }\r\n        });\r\n    }\r\n\r\n    showImage = event => {\r\n\r\n        const {showUrl} = this.state.images;\r\n        eventEmitter.emit(\"EventImageView\", {action: true, target: showUrl ? showUrl : null});\r\n        event.stopPropagation();\r\n    }\r\n\r\n    setSelectedImage = event => {\r\n\r\n        let images = {...this.state.images};\r\n        eventEmitter.emit(`EventSetBackgroundImage${this.props.idComponent}`,images);\r\n        eventEmitter.emit(`EventSetBImageInstumentPanel`,images);\r\n        event.stopPropagation();\r\n    };\r\n\r\n    makeImageResultBox = (items) => {\r\n        if (!items) return null;\r\n\r\n        return items.map((item,i) =>{\r\n           return <ImageItem \r\n                key = {`item${i}`} \r\n                id = {i}\r\n                selected = {this.state.images.selectedItem === i ? true : false} \r\n                isFull = {false}\r\n                urls = {{...item.urls}} \r\n            />\r\n        });\r\n    }\r\n\r\n    addNewProject = event => {\r\n        let mode = this.state[this.state.workMode];\r\n        if (mode.validateType &&  mode.validateName) {\r\n            eventEmitter.emit('EventAddProject',\r\n            {\r\n                title: this.state[this.state.workMode].name,\r\n                type: this.state[this.state.workMode].type\r\n            });\r\n\r\n            eventEmitter.emit('EventChangeWorkMode',{action: 'default'});\r\n        }\r\n    }\r\n\r\n    selectOption = event => {\r\n\r\n        let inputs = {...this.state[this.state.workMode]};\r\n        inputs.type = event.target.value;\r\n        inputs.validateType = inputs.type !== 'empty';\r\n        inputs.disabled = inputs.validateType && inputs.validateName ? false : true;\r\n        this.setState({\r\n            ...this.state,\r\n            [this.state.workMode]: inputs\r\n        });\r\n    }\r\n\r\n    validateName = event => {\r\n\r\n        let inputs = {...this.state[this.state.workMode]};\r\n        inputs.name = event.target.value;\r\n        let lengthInput = inputs.name.length;\r\n        inputs.validateName = lengthInput >= 4 && lengthInput < 20 ? true : false;\r\n        inputs.disabled = inputs.validateType && inputs.validateName ? false : true;\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            [this.state.workMode]: inputs\r\n        })\r\n    };\r\n\r\n    cancel = event => {\r\n\r\n        if (this.state.workMode === 'Search')\r\n            eventEmitter.emit(\"EventModalSearchOn\");\r\n        else  eventEmitter.emit('EventChangeWorkMode',{action: 'default'});\r\n    }\r\n\r\n    refSelect = (node) => this.inputSelect = node;\r\n    refSearch = node => this.inputSearch = node;\r\n\r\n    render(){\r\n        switch (this.state.workMode){\r\n            case 'newProject':\r\n                return (\r\n                    <div className = 'Modal'>\r\n                        <h3>Create new Project</h3>\r\n                        { this.state[this.state.workMode].name.length <= 3 ?\r\n                            <span className = 'warning'>{this.state.warning.lengthMin}</span> : null\r\n                        }\r\n                        { this.state[this.state.workMode].name.length >= 20 ?\r\n                            <span className = 'warning'>{this.state.warning.lengthMax}</span> : null\r\n                        }\r\n                        <input\r\n                            className = {this.state[this.state.workMode].validateName ? 'ready' : 'wrong'}\r\n                            value = {this.state[this.state.workMode].name}\r\n                            onChange = {this.validateName}\r\n                            type = 'text'\r\n                            placeholder = \"Project name\"\r\n                        />\r\n                        { !this.state[this.state.workMode].validateType ?\r\n                            <span className = 'warning'>{this.state.warning.type}</span> : null\r\n                        }\r\n                        <select onChange = {this.selectOption} >\r\n                            <option value = 'empty'>--------</option>\r\n                            <option value = 'landing'>Landing</option>\r\n                            <option value = 'portfolio'>Portfolio</option>\r\n                        </select>\r\n                        <input \r\n                            onClick = {this.addNewProject}\r\n                            className = 'acceptButton'\r\n                            disabled = {this.state[this.state.workMode].disabled}\r\n                            type = 'button'\r\n                            value = 'Submit'\r\n                        />\r\n                            <input onClick = {this.cancel} type ='button' value = 'Cancel' />\r\n                    </div>\r\n                )\r\n            case 'Search':\r\n                return (\r\n                    <Fragment>\r\n                        <div className = 'Modal Modal-search'>\r\n                            <h3>Search background image</h3>\r\n                            { this.state.images.error ?\r\n                                <span className = 'error'>{this.state.images.error}</span> : null\r\n                            }\r\n                            <input ref = {this.refSearch} type = 'text' placeholder = \"Photo name\" />\r\n                            <input \r\n                                disabled = {this.state.images.buttonSearchDisabled} \r\n                                className = 'acceptButton' \r\n                                type = 'button' \r\n                                value = 'Search'\r\n                                onClick = {this.searchBackground}\r\n                            />\r\n                            <input onClick = {this.cancel} type ='button' value = 'Cancel' />\r\n                            {\r\n                                this.state.images.imageBoxView ?\r\n                                <div className = 'searchResultBox'>\r\n                                    {this.makeImageResultBox([...this.state.images['images']])}\r\n                                </div>\r\n                                : null\r\n                            }\r\n                        </div>\r\n                        {  this.state.imageMenuActive ?\r\n                            <div className = 'ActionModalSearch'>\r\n                            <button onClick = {this.showImage} className = 'actionModalSearch__view'>\r\n                                <Icon path = '/img/view.png' />\r\n                            </button>\r\n                            <button onClick = {this.setSelectedImage} className = 'actionModalSearch__settings'>\r\n                                <Icon path = '/img/settings.png' />\r\n                            </button>\r\n                            </div>\r\n                            : null\r\n                        }\r\n                    </Fragment>\r\n                )\r\n            default: return <Fragment></Fragment>\r\n        }\r\n    }\r\n\r\n    componentDidMount = event => {\r\n        if (this.state.workMode === 'Search')\r\n            eventEmitter.on('EventShowMenuImage', this.showMenuImage);\r\n    }\r\n\r\n    componentWillUnmount = event => {\r\n        if (this.state.workMode === 'Search')\r\n            eventEmitter.off('EventShowMenuImage', this.showMenuImage);\r\n    }\r\n}\r\n\r\nexport default ModalWindow;\r\n\r\n","import {createProjectAction, errorAction} from '../actions';\r\n\r\n\r\nfunction random(min,max){\r\n    return `${Math.floor(min + Math.random() * (max-min))}`\r\n}\r\n\r\n\r\nconst middlewareCreateProject = (uid, list, title, type) => async (dispatch,getState, {firebase}) => {\r\n    let lastProject = [...list];\r\n    const lastIndex = lastProject.length  ? lastProject[lastProject.length-1].id + 1 : 0;\r\n    const sectionTitleProject = [];\r\n    if (type === 'portfolio') sectionTitleProject.push(\"Header\");\r\n    else sectionTitleProject.push(\"Header\");\r\n    const header = {\r\n        backgroundImage: null,\r\n        color: null,\r\n        id: `MainBackgroundHeader${random(0,10000)}`,\r\n        name: \"Header\",\r\n        type: \"background\"\r\n    }\r\n\r\n    lastProject.push({\r\n        id: lastIndex,\r\n        title: title,\r\n        type: type,\r\n        components: [header],\r\n        sectionTitleProject: [...sectionTitleProject],\r\n    });\r\n\r\n    await firebase.db.collection(\"users\").doc(uid).update({\r\n        'projects': lastProject,\r\n    })\r\n    .then (() => dispatch(createProjectAction(lastProject)))\r\n    .catch(error => {\r\n        console.error(error.message);\r\n        dispatch(errorAction(error.message));\r\n    })\r\n};\r\n\r\nexport {\r\n    middlewareCreateProject\r\n}","import React, {useState} from 'react';\r\nimport eventEmitter from '../../EventEmitter';\r\nimport {withRouter, Redirect} from 'react-router-dom';\r\n\r\nfunction Item(props) {\r\n\r\n    const [path] = useState( `/Cabinet/Build/${props.id}`);\r\n\r\n    let [canBuild,setCanBuild] = useState(false);\r\n\r\n    const [id] = useState(props.id);\r\n    const [name] = useState(props.name);\r\n    const [type] = useState(props.type);\r\n\r\n\r\n    const build = event => {\r\n        if(props.location.pathname !== path)\r\n            setCanBuild(true);\r\n        event.stopPropagation();\r\n    };\r\n\r\n    const deleteItem = event => {\r\n        eventEmitter.emit('EventDeleteItem',{\r\n            id: props.id,\r\n            name: props.name,\r\n            type: props.type\r\n        });\r\n        event.stopPropagation();\r\n    };\r\n\r\n    const showProduction =event => {\r\n        event.stopPropagation();\r\n    }\r\n\r\n    if (canBuild) return <Redirect to = {path} />\r\n    else return (\r\n            <div className = 'item' data-id = {id}>\r\n                <p className = 'ProjectName'>{name}</p>\r\n                <p className = 'ProjectType'>{type}</p>\r\n                <div className = 'projectController'>\r\n                    <input \r\n                        onClick = {build} \r\n                        className = 'projectControllerButton_enter' \r\n                        type = 'button' \r\n                        value = 'enter build' />\r\n                    <input onClick = {deleteItem} \r\n                        className = 'projectControllerButton_delete' \r\n                        type = 'button' \r\n                        value = 'delete' />\r\n                </div>\r\n                <input onClick = {showProduction} \r\n                    className = 'productionButton' \r\n                    type = 'button' \r\n                    value = 'Show demo' />\r\n            </div>\r\n        )\r\n}\r\n\r\nexport default withRouter(Item);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport {middlewareCreateProject} from '../../redux/middleware/createProjectMiddleware';\r\n\r\nimport './list.scss';\r\n\r\nimport Item from './Item';\r\nimport eventEmitter from '../../EventEmitter.js';\r\n\r\nclass List extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        dispatch: PropTypes.func.isRequired, /** @dispatch redux */\r\n        idUser: PropTypes.string.isRequired, /** @UID current user */\r\n        list: PropTypes.array.isRequired, /** @List user projects */\r\n    }\r\n\r\n    state = {\r\n        redirect: false,\r\n    }\r\n\r\n    addNewProject = (item) => {\r\n        if (this.props.idUser) {\r\n            this.props.dispatch(middlewareCreateProject(this.props.idUser, this.props.list, item.title, item.type));\r\n        } else this.setState({...this.state, redirect: true});\r\n    }\r\n\r\n\r\n    makeList = (list) => {\r\n\r\n        return list.map (project => {\r\n\r\n            return(\r\n                <Item\r\n                    key = {project.id}\r\n                    id = {project.id}\r\n                    name = {project.title}\r\n                    type = {project.type}\r\n                />\r\n            )\r\n        });\r\n    }\r\n\r\n    render(){\r\n        if (this.state.redirect)\r\n            return <Redirect to = { '/'} />\r\n            else return (\r\n                    <div className = 'projectsList__list'>\r\n                        {this.makeList([...this.props.list])}\r\n                    </div>\r\n                )\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        eventEmitter.on('EventAddProject',this.addNewProject);\r\n    }\r\n\r\n      componentWillUnmount = () => {\r\n        eventEmitter.off('EventAddProject',this.addNewProject);\r\n      }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        idUser: state.cabinet.idUser,\r\n        list: [...state.cabinet.projects]\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(List);","import React from 'react';\r\n\r\nimport List from '../List/List.jsx';\r\n\r\nimport './ProjectsSection.scss';\r\n\r\nconst ProjectsSection = props => {\r\n\r\n        return (\r\n                <section className = 'projectsList'>\r\n                    <div className = 'container'>\r\n                        <div className = 'flex-column'>\r\n                            <div className = 'projectsList__about'>\r\n                                <h3>Your Projects</h3>\r\n                            </div>\r\n                            {List ? <List /> : null}\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n        )\r\n\r\n}\r\n\r\nexport default ProjectsSection;","import React,{Fragment} from 'react';\nimport PropTypes from 'prop-types';\nimport eventEmitter from '../../EventEmitter.js';\nimport {Redirect} from 'react-router-dom';\nimport withFirebase from '../../components/firebaseHOC';\n\nimport {middlewareLogOutUser} from '../../redux/middleware/loadUserMiddleware';\nimport middlewareDelete from '../../redux/middleware/middlewareDelete';\nimport Loader from '../../components/loading/Loader';\nimport {connect} from 'react-redux';\n\nimport Header from '../../components/header/Header';\nimport Modal from '../../components/modalWindow/ModalWindow';\nimport ProjectsSection from '../../components/ProjectsSection/ProjectsSection';\n\nimport './Cabinet.scss';\n\nconst title = require('../../config.json').title;\n\nclass Cabinet extends React.PureComponent {\n\n  static propTypes = {\n    firebase: PropTypes.object.isRequired, /** @firebase class for use firebase functions */\n    active: PropTypes.bool, /** @active - status firebase auth */\n    dispatch: PropTypes.func.isRequired, /** @dispatch - redux */\n    history: PropTypes.object.isRequired, /** @Router HTML5 history */\n    location: PropTypes.object.isRequired, /** @Router */\n    match: PropTypes.object.isRequired, /** @Router */\n    idUser: PropTypes.string, /** @Session user id from redux */\n    projects: PropTypes.arrayOf(PropTypes.object).isRequired /** @Projects array with user projects from redux */\n  }\n\n  state = {\n    workMode: 'default',\n  }\n\n  logOut = event => {\n    this.props.dispatch(middlewareLogOutUser(this.props.idUser));\n  }\n\n  deletItem = event => {\n    this.props.dispatch(middlewareDelete({...event, uid: this.props.firebase.getCurrentUser().uid}));\n  }\n\n  changeWorkMode = event => {\n    this.setState ({\n      ...this.state,\n      workMode: event.action,\n    });\n  }\n\n  render(){\n\n    if (this.props.active){\n      return (\n        <Fragment>\n          <Header title = {title} idUser = {this.props.idUser} />\n          {(this.state.workMode === 'newProject') ? <Modal workMode = {this.state.workMode} /> : null}\n            <ProjectsSection />\n        </Fragment>\n      )\n    } else if (!this.props.firebase.getCurrentUser()) return <Redirect to = { '/'} />\n    else return <Loader path = '/img/loading.gif' type = 'Cabinet' />\n  }\n\n\n  componentDidMount = () => {\n    eventEmitter.on('EventDeleteItem', this.deletItem);\n    eventEmitter.on('EventChangeWorkMode', this.changeWorkMode);\n  }\n\n  componentWillUnmount = () => {\n    eventEmitter.off('EventDeleteItem', this.deletItem);\n    eventEmitter.off('EventChangeWorkMode', this.changeWorkMode);\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    idUser: state.cabinet.idUser,\n    projects: [...state.cabinet.projects],\n    active: state.cabinet.active\n  }\n}\n\nexport default connect(mapStateToProps)(withFirebase(Cabinet));\n","import React, {Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nimport withFirebase from '../../components/firebaseHOC';\r\nimport Header from '../../components/header/Header';\r\n\r\nimport './about.scss';\r\n\r\nclass About extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        config: PropTypes.object.isRequired, /** @Config app */\r\n        firebase: PropTypes.object.isRequired, /** @firebase class for use firebase functions */\r\n        history: PropTypes.object, /** @Router HTML5 history */\r\n        location: PropTypes.object, /** @Router */\r\n        match: PropTypes.object, /** @Router */\r\n    }\r\n\r\n    state = {\r\n        config: this.props.config\r\n    };\r\n\r\n    render(){\r\n        if (this.props.firebase.getCurrentUser()) {\r\n            const { config } = this.state;\r\n            return (\r\n                <Fragment>\r\n                    <Header title = {config.title} />\r\n                    <section className = 'About'>\r\n                        <div className = 'container'>\r\n                            <div className = 'col-12'>\r\n                                <div className = 'information'>\r\n                                <img alt = 'img' className = 'logoAbout' src = {process.env.PUBLIC_URL + '/img/about.jpg'}/>\r\n                                    <p className ='developer'><span>Developer:</span> {config.about.developer}</p>\r\n                                    <p className = 'year'><span>Year:</span> {config.about.year}</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </section>\r\n                </Fragment>\r\n            )\r\n        } else return <Redirect to = { '/'} />\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default withFirebase(About);","import {errorAction, loadUpdateCurrentProject} from '../actions';\r\n\r\nconst updateMiddleware = (item) => async (dispatch,getState, {firebase}) => {\r\n    console.log('updatae');\r\n    let newProjects = item.projects.map(project => {\r\n        if (project.id === item.idProject) {\r\n            project.components = [...item.components]\r\n            project.sectionTitleProject = [...item.sectionTitleProject]\r\n        }\r\n        return project;\r\n    });\r\n    await firebase.db.collection(\"users\").doc(item.uid).update({\r\n        'projects': JSON.parse(JSON.stringify(newProjects))\r\n    })\r\n    .then(response => {\r\n        let project = item.projects.find(itemdb => itemdb.id === item.idProject);\r\n        dispatch(loadUpdateCurrentProject({\r\n            components: [...project.components],\r\n            idProject: item.idProject,\r\n            sectionTitleProject: item.sectionTitleProject,\r\n        }))\r\n    })\r\n    .catch(error => dispatch(errorAction(error.message)));\r\n};\r\n\r\nexport default updateMiddleware;","import React,{useState,useEffect} from 'react';\r\nimport eventEmitter from '../../../EventEmitter';\r\nimport isFetch from 'isomorphic-fetch';\r\nimport styled from 'styled-components';\r\n\r\nconst ImageStyle = styled.img.attrs(props => ({\r\n    style: {\r\n        // display: props.shadowDisplay ? 'none' : 'block',\r\n        left: props.coordX ? props.coordX : '50%',\r\n        top:  props.coordY,\r\n}}))`\r\n    position: absolute;\r\n    width: ${props => props.size};\r\n    transform: translate(-50%);\r\n`;\r\n\r\nconst Image = props => {\r\n\r\n\r\n    console.log(props);\r\n\r\n    const [id] = useState(props.id);\r\n    const [path] = useState(props.path);\r\n    const [size,setSize] = useState(props.size ? props.size : '50%');\r\n    const [name] = useState(props.target);\r\n\r\n    let [count,setCount] = useState(0);\r\n    const [sizeParenBox, setSizeParenBox] = useState({...props.sizeParenBox});\r\n    const [shiftCoords, setShiftCoords] = useState(null)\r\n    const [dragNdrop, setDragNdrop] = useState(props.coords.left ? {x: props.coords.left, y: props.coords.top} : null);\r\n\r\n\r\n\r\n    const openTitleInstruments = event => {\r\n\r\n        eventEmitter.emit(`EventInstrumentPanel`,{\r\n            target: 'text',\r\n            id: id,\r\n            sizeTextValue: size\r\n        });\r\n        event.stopPropagation();\r\n    }\r\n\r\n    const saveCoords = event => {\r\n\r\n        let rect = event.target.getBoundingClientRect();\r\n        let left = rect.left + window.pageXOffset;\r\n        let top = rect.top;\r\n        let width = rect.width;\r\n        let height = rect.height;\r\n\r\n        setShiftCoords({x: event.pageX - left - width/2, y: event.pageY - top + height/2});\r\n\r\n        event.stopPropagation();\r\n    }\r\n\r\n    const moveText = event => {\r\n\r\n        let coordX = event.pageX - shiftCoords.x;\r\n        let coordY = event.pageY - shiftCoords.y;\r\n\r\n\r\n        let convertToPercentX = ((coordX) * 100) / sizeParenBox.width;\r\n        let convertToPercentY = ((coordY) * 100) / (sizeParenBox.height);\r\n\r\n        const position = {\r\n            x: convertToPercentX.toFixed(1) + '%', \r\n            y: convertToPercentY.toFixed(1) + '%', \r\n            shadowDisplay: event.type === 'drag' ? true : false\r\n        };\r\n        setDragNdrop(position);\r\n        if (event.type === 'dragend') {\r\n            eventEmitter.emit('EventUpdatePosition', position);\r\n        }\r\n        event.stopPropagation();\r\n    }\r\n\r\n    \r\n    const weelResizeText = event => {\r\n\r\n        if (event.shiftKey && event.deltaY === -100) {\r\n            let counter = size + 1;\r\n            counter = counter > 100 ? 100 : counter;\r\n            setSize(counter);\r\n            eventEmitter.emit('EventUpdateSizeText', counter);\r\n        }\r\n\r\n        if (event.shiftKey && event.deltaY === 100) {\r\n            let counter = size - 1;\r\n             counter = counter <= 0 ? 0 : counter;\r\n             setSize(counter);\r\n             eventEmitter.emit('EventUpdateSizeText', counter);\r\n            }\r\n        event.stopPropagation();\r\n    }\r\n\r\n    const saveSize = event => {\r\n\r\n        if (count === 0){\r\n        setSizeParenBox({width: event.width, height: event.height});\r\n        setCount(count + 1);\r\n        } else  eventEmitter.off(`EventSaveWidth`,saveSize);\r\n    }\r\n\r\n    const didUpdate = effect => {\r\n        eventEmitter.on(`EventSaveWidth${name}`,saveSize);\r\n        return () => {\r\n            eventEmitter.off(`EventSaveWidth${name}`,saveSize);\r\n        }\r\n    }\r\n    console.log('asdsa');\r\n    const searchTest = e => {\r\n\r\n        const api = 'https://www.googleapis.com/youtube/v3/search?order=date&part=snippet&channelId=';\r\n\r\n        isFetch(`${api}${process.env.REACT_APP_CHANNEL_ID}&maxResults=20&key=${process.env.REACT_APP_YOUTUBE_SEARCH_TOKEN}`)\r\n        .then(res => {\r\n            if (res.ok)\r\n            return res.json();\r\n            else throw new Error (`Error ${res.status}`);\r\n        })\r\n        .then(res => {\r\n            console.log(res);\r\n        })\r\n        .catch(error => console.error(error));\r\n    }\r\n\r\n    useEffect(didUpdate);\r\n\r\n    return (\r\n        <ImageStyle  \r\n            size = {size}\r\n            src = {path} \r\n            alt = 'img' \r\n            onClick = {searchTest}\r\n            draggable = {true}\r\n            onMouseDown = {saveCoords}\r\n            onDragStart = {openTitleInstruments}\r\n            onDrag   = {moveText}\r\n            onDragEnd = {moveText}\r\n            onWheel = {weelResizeText}\r\n        />\r\n    )\r\n};\r\n\r\nexport default Image;","\r\nimport React, {useEffect, useState} from 'react';\r\nimport eventEmitter from '../../../EventEmitter';\r\nimport styled from 'styled-components';\r\n\r\n\r\nconst TextStyle = styled.h1.attrs(props => ({\r\n    style: {\r\n        // display: props.shadowDisplay ? 'none' : 'block',\r\n        left: props.coordX ? props.coordX : '50%',\r\n        top:  props.coordY,\r\n}}))`\r\n    position: absolute;\r\n    transform: translate(-50%);\r\n    font-size: ${props => props.size};\r\n    color: ${props => props.textColor};\r\n    text-align: center;\r\n    margin: 0;\r\n`;\r\n\r\n// left: ${props => props.coordX ? props.coordX : '50%'};\r\n// top:  ${props => props.coordY};\r\n\r\nconst TextComponent = props =>  {\r\n    const [id] = useState(props.id);\r\n    const [sizeParenBox, setSizeParenBox] = useState({...props.sizeParenBox});\r\n\r\n    const [name] = useState(props.target);\r\n    let [count,setCount] = useState(0);\r\n\r\n    let [colorText, setColorText] = useState(props.color);\r\n    let [sizeText, setSizeText] = useState(props.size ? props.size : 120);\r\n    let [contentText, setText] = useState(props.content ? props.content : props.children);\r\n    const [shiftCoords, setShiftCoords] = useState(null)\r\n    const [dragNdrop, setDragNdrop] = useState(props.coords.left ? {x: props.coords.left, y: props.coords.top} : null);\r\n\r\n    const openTitleInstruments = event => {\r\n\r\n        eventEmitter.emit(`EventInstrumentPanel`,{\r\n            target: 'text',\r\n            id: id,\r\n            sizeTextValue: sizeText\r\n        });\r\n        event.stopPropagation();\r\n    }\r\n\r\n    const changeColorText = eventItem => {\r\n        setColorText(eventItem.colorRGB);\r\n    }\r\n\r\n    const changeSizeText = eventSize => {\r\n        const {size} = eventSize;\r\n        setSizeText(size);\r\n    }\r\n\r\n    const saveSize = event => {\r\n\r\n        if (count === 0){\r\n        setSizeParenBox({width: event.width, height: event.height});\r\n        setCount(count + 1);\r\n        } else  eventEmitter.off(`EventSaveWidth`,saveSize);\r\n    }\r\n\r\n    const changeContentText = eventContent => {\r\n        if (name === eventContent.idSection){\r\n            const {content} = eventContent;\r\n            setText(content);\r\n        }\r\n    }\r\n\r\n\r\n    const didUpdate = event => {\r\n        eventEmitter.on(`EventChangeColorText${id}`, changeColorText);\r\n        eventEmitter.on(`EventChangeSizeText${id}`, changeSizeText);\r\n        eventEmitter.on(`EventChangeContentText${id}`, changeContentText);\r\n        eventEmitter.on(`EventSaveWidth${name}`,saveSize);\r\n        return () => {\r\n            eventEmitter.off(`EventChangeColorText${id}`, changeColorText);\r\n            eventEmitter.off(`EventSaveWidth${name}`,saveSize);\r\n            eventEmitter.off(`EventChangeSizeText${id}`, changeSizeText);\r\n            eventEmitter.off(`EventChangeContentText${id}`, changeContentText);\r\n        }\r\n    }\r\n\r\n    const saveCoords = event => {\r\n\r\n        let rect = event.target.getBoundingClientRect();\r\n        let left = rect.left + window.pageXOffset;\r\n        let top = rect.top;\r\n        let width = rect.width;\r\n        let height = rect.height;\r\n\r\n        setShiftCoords({x: event.pageX - left - width/2, y: event.pageY - top + height/2});\r\n\r\n        event.stopPropagation();\r\n    }\r\n\r\n    const moveText = event => {\r\n\r\n        let coordX = event.pageX - shiftCoords.x;\r\n        let coordY = event.pageY - shiftCoords.y;\r\n\r\n\r\n        let convertToPercentX = ((coordX) * 100) / sizeParenBox.width;\r\n        let convertToPercentY = ((coordY) * 100) / (sizeParenBox.height);\r\n\r\n        const position = {\r\n            x: convertToPercentX.toFixed(1) + '%', \r\n            y: convertToPercentY.toFixed(1) + '%', \r\n            shadowDisplay: event.type === 'drag' ? true : false\r\n        };\r\n        setDragNdrop(position);\r\n        if (event.type === 'dragend') {\r\n            eventEmitter.emit('EventUpdatePosition', position);\r\n        }\r\n        event.stopPropagation();\r\n    }\r\n\r\n    const weelResizeText = event => {\r\n\r\n        if (event.shiftKey && event.deltaY === -100) {\r\n            let counter = sizeText + 1;\r\n            counter = counter > 200 ? 200 : counter;\r\n            setSizeText(counter);\r\n            eventEmitter.emit('EventUpdateSizeText', counter);\r\n        }\r\n\r\n        if (event.shiftKey && event.deltaY === 100) {\r\n            let counter = sizeText - 1;\r\n             counter = counter <= 10 ? 10 : counter;\r\n             setSizeText(counter);\r\n             eventEmitter.emit('EventUpdateSizeText', counter);\r\n            }\r\n        event.stopPropagation();\r\n    }\r\n    useEffect(didUpdate);\r\n\r\n    return (\r\n        <TextStyle\r\n            onClick={openTitleInstruments}\r\n            textColor = {colorText ? colorText : 'red'}\r\n            size = {sizeText ? sizeText + 'px' : '120px'}\r\n            draggable = {true}\r\n            onMouseDown = {saveCoords}\r\n            onDragStart = {openTitleInstruments}\r\n            onDrag   = {moveText}\r\n            onDragEnd = {moveText}\r\n            onWheel = {weelResizeText}\r\n            coordX = {dragNdrop ? dragNdrop.x : null}\r\n            coordY = {dragNdrop ? dragNdrop.y : null}\r\n            shadowDisplay = {dragNdrop ? dragNdrop.shadowDisplay : false}\r\n        >\r\n            {contentText}\r\n        </TextStyle>\r\n    )\r\n}\r\n\r\nexport default TextComponent;","import React, {useEffect, useState} from 'react';\r\nimport eventEmitter from '../../../EventEmitter';\r\nimport styled from 'styled-components';\r\n\r\n\r\nconst Background = styled.div`\r\n    position: relative;\r\n    width: 100%;\r\n    height: 95vh;\r\n    background-size: cover;\r\n    background-color: ${props => props.backgroundColor};\r\n    background-image: url(${props => props.backgroundImage});\r\n`;\r\n\r\nconst BackgroundComponent = props => {\r\n\r\n    const [id] = useState(props.id);\r\n    const [name] = useState(props.name);\r\n    let boxComponent = React.createRef();\r\n\r\n    let [backgroundColor, setBgColor] = useState(props.background);\r\n    let [backgroundImage, setImage] = useState(props.backgroundImage ? props.backgroundImage : null);\r\n\r\n    const saveWidth = event => {\r\n        boxComponent.current.focus();\r\n        let boxInform =  boxComponent.current.getBoundingClientRect();\r\n        eventEmitter.emit(`EventSaveWidth${name}`, {width: boxInform.width, height: boxInform.height});\r\n    }\r\n\r\n    const openBgInstruments = event => {\r\n        eventEmitter.emit('EventInstrumentPanel',{\r\n            name: name,\r\n            target: 'background',\r\n            id: id,\r\n        });\r\n        event.stopPropagation();\r\n    }\r\n\r\n    const changeColor = eventItem => {\r\n        if (eventItem.idSection === name)\r\n        setBgColor(eventItem.colorRGB);\r\n    }\r\n\r\n    const setBackgroundImage = event => {\r\n        const {urlFull} = event;\r\n        setImage(urlFull);\r\n    };\r\n\r\n    const didUpdate = () => {\r\n        saveWidth();\r\n        eventEmitter.on(`EventChangeColorBackground${id}`, changeColor);\r\n        eventEmitter.on(`EventSetBackgroundImage${id}`, setBackgroundImage);\r\n        return () => {\r\n            eventEmitter.off(`EventChangeColorBackground${id}`, changeColor);\r\n            eventEmitter.off(`EventSetBackgroundImage${id}`, setBackgroundImage);\r\n        }\r\n    }\r\n\r\n    useEffect(didUpdate);\r\n    return (\r\n        <Background\r\n            ref  = {boxComponent}\r\n            onClick={openBgInstruments}\r\n            backgroundColor = {backgroundColor ? backgroundColor : props.background}\r\n            backgroundImage = {backgroundImage ? backgroundImage : props.backgroundImage}\r\n        >\r\n            {props.children}\r\n        </Background>\r\n    )\r\n}\r\n\r\nexport default BackgroundComponent;","import React,{useState} from 'react';\r\n\r\nimport Image from '../buildComponents/components/Image';\r\nimport TextComponent from '../buildComponents/components/Text';\r\nimport BackgroundComponent from '../buildComponents/components/Background';\r\n\r\nconst BuilderComponents = props => {\r\n\r\n    const [target] = useState(props.target);\r\n    let [id] = useState(props.id);\r\n    let [size] = useState(props.size);\r\n    let [color] = useState(props.color ? props.color : 'red');\r\n    let [content] = useState(props.content ? props.content : null);\r\n    let [type] = useState(props.type);\r\n\r\n    if (type === 'text')\r\n        return <TextComponent\r\n                    key = {`text${id}`}\r\n                    sizeParenBox = {{...props.sizeParenBox}}\r\n                    id = {id}\r\n                    size = {size}\r\n                    color = {color}\r\n                    coords = {{...props.coords}}\r\n                    target = {target}\r\n                >\r\n                    {content}\r\n                </TextComponent>\r\n\r\n    if (type === 'background')\r\n        return <BackgroundComponent\r\n                    target = {target}\r\n                    color = {color}\r\n                    size = {size}\r\n                    id = {id}\r\n                    key = {`bg${id}`}\r\n                />;\r\n\r\n\r\n    if (type === 'image')\r\n        return <Image\r\n                    target = {target}\r\n                    size = {size}\r\n                    path = {props.path}\r\n                    coords = {{...props.coords}}\r\n                    id = {id}\r\n                    key = {`image${id}`}\r\n                />\r\n};\r\n\r\nexport default BuilderComponents;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport BuilderComponents from '../componentsBuilder/BuilderComponents';\r\n\r\nimport eventEmitter from '../../EventEmitter';\r\nimport './buildMenu.scss';\r\n\r\nclass BuildMenu extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        mode: PropTypes.string.isRequired, /** @String work mode component */\r\n        editComponentName: PropTypes.string,\r\n        countSection: PropTypes.number, /** @Number for new section id */\r\n        countComponents: PropTypes.number, /** @Number last project */\r\n        sizeParenBox: PropTypes.object /** @Object with width and height parent(bg) */\r\n    }\r\n\r\n    state = {\r\n        mode: this.props.mode,\r\n        componentsPatternStatus: {\r\n            id: null,\r\n            name: null,\r\n            type: null,\r\n            content: null,\r\n            fontSize: null,\r\n            color: null,\r\n            backgroundImage: null,\r\n            image: null,\r\n            coords: {left: null, top: null}, // x, y\r\n        },\r\n        sizeParenBox: {...this.props.sizeParenBox},\r\n        title: 'Title'\r\n    }\r\n\r\n    addText = event => {\r\n        let id = this.props.countComponents;\r\n        eventEmitter.emit('EventBuildComponents',{\r\n            componentsPatternStatus: {\r\n                ...this.state.componentsPatternStatus,\r\n                id: id,\r\n                name: this.props.editComponentName,\r\n                type: 'text',\r\n            },\r\n            component: <BuilderComponents\r\n                            target = {this.props.editComponentName}\r\n                            key = {`text${id}`}\r\n                            sizeParenBox = {this.props.sizeParenBox}\r\n                            content = \"Title\"\r\n                            id = {id}\r\n                            type = 'text' />\r\n        });\r\n        event.stopPropagation();\r\n    }\r\n\r\n    addBackground = event => {\r\n        let id = this.props.countComponents;\r\n        eventEmitter.emit('EventBuildComponents',{\r\n            componentsPatternStatus: {\r\n                ...this.state.componentsPatternStatus,\r\n                name: this.state.editComponentName,\r\n                type: 'background',\r\n            },\r\n            component: <BuilderComponents\r\n                            target = {this.props.editComponentName}\r\n                            key = {`bg${id}`}\r\n                            id = {id}\r\n                            type = 'background'\r\n                        />\r\n        });\r\n\r\n        event.stopPropagation();\r\n    }\r\n\r\n    addImage = event => {\r\n        let id = this.props.countComponents;\r\n        eventEmitter.emit('EventBuildComponents',{\r\n            componentsPatternStatus: {\r\n                ...this.state.componentsPatternStatus,\r\n                id: id,\r\n                name: this.props.editComponentName,\r\n                type: 'image',\r\n            },\r\n            component: <BuilderComponents\r\n                            target = {this.props.editComponentName}\r\n                            key = {`text${id}`}\r\n                            sizeParenBox = {this.props.sizeParenBox}\r\n                            id = {id}\r\n                            coords = {{...this.state.componentsPatternStatus.coords}}\r\n                            path = {'/img/test.jpg'}\r\n                            type = 'image' />\r\n        });\r\n        event.stopPropagation();\r\n    }\r\n\r\n    addSection = event => {\r\n        let id = this.props.countSection + 1;\r\n        eventEmitter.emit('EventNewSection', {\r\n            componentsPatternStatus: {\r\n                ...this.state.componentsPatternStatus,\r\n                name:  `Section${id}`,\r\n                id: `Section${id}`,\r\n                type: 'background',\r\n            },\r\n           \r\n            type:'section',\r\n            component: <BuilderComponents\r\n            target = {this.props.editComponentName}\r\n            key = {`bg${id}`}\r\n            id = {id}\r\n            type = 'background'\r\n        />\r\n        });\r\n        event.stopPropagation();\r\n    }\r\n\r\n    render(){\r\n        console.log('buildMenu');\r\n        if (this.state.mode === 'build'){\r\n            return (\r\n                <div className = 'ComponentsMenu'>\r\n                    <button \r\n                        onClick = {this.addImage} \r\n                        className = 'ImageTool CompoentnsMenu_button' \r\n                    >\r\n                        <span>Image</span>\r\n                    </button>\r\n                    <button \r\n                        onClick = {this.addText} \r\n                        className = 'TextTool CompoentnsMenu_button' >\r\n                        <span>Text</span>\r\n                    </button>\r\n                    <button\r\n                        disabled = {this.props.editComponentName !== 'Header' ? false : true}\r\n                        className = 'ButtonTool CompoentnsMenu_button' >\r\n                        <span>Button</span>\r\n                    </button>\r\n                    <button\r\n                        className = 'VideoTool CompoentnsMenu_button'\r\n                    >\r\n                        <span>Video</span>\r\n                    </button>\r\n                </div>\r\n            )\r\n        } else if (this.state.mode === 'section') {\r\n            return (\r\n                <div className = 'sectionMode'>\r\n                    <button\r\n                        onClick = {this.addSection}\r\n                        className = 'newSectionTool CompoentnsMenu_button'\r\n                    >\r\n                        <span>New section</span>\r\n                    </button>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default BuildMenu;","import React,{Fragment} from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Icon from '../Icon/icon';\r\nimport BuildMenu from '../componentsBuildMenu/BuildMenu';\r\n\r\n\r\nconst ControllersBox = styled.div\r\n    .attrs(props =>({\r\n        style: {\r\n                left: props.coordX,\r\n                top: props.coordY,\r\n        }\r\n    })) `\r\n    position: 'absolute',\r\n    display: ${props => props.shadowDisplay}\r\n    `;\r\n\r\nclass Controllers extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        countComponents: PropTypes.number.isRequired, /** @number last project id */\r\n        sizeParenBox: PropTypes.object, /** @Object with width and height parent(bg) */\r\n        menuActive: PropTypes.bool, /** @Bool value active menu or unactive */\r\n    }\r\n\r\n    state = {\r\n        viewComponentMenu: false,\r\n        shiftX: 0,\r\n        shiftY: 0,\r\n        coordsX: '50%',\r\n        coordsY: '0',\r\n        shadowDisplay: 'block'\r\n    }\r\n\r\n    componentMenu = event => {\r\n        this.setState({viewComponentMenu: this.state.viewComponentMenu ? false : true});\r\n        event.stopPropagation();\r\n    }\r\n\r\n    saveCoords = event => {\r\n        let left = this.controlBox.getBoundingClientRect().left;\r\n        let top = this.controlBox.getBoundingClientRect().top;\r\n        this.setState({...this.state, shiftX: event.pageX - left, \r\n        shiftY: event.pageY - top });\r\n\r\n        event.stopPropagation();\r\n    }\r\n\r\n    drag = event => {\r\n        if (!this.state.viewComponentMenu)\r\n            this.setState({\r\n                ...this.state,\r\n                coordsX: event.pageX - this.state.shiftX + 'px', \r\n                coordsY: event.pageY - this.state.shiftY + 'px',\r\n                shadowDisplay: event.type === 'drag' ? 'none' : 'block'\r\n            });\r\n        event.stopPropagation();\r\n    }\r\n\r\n    controlBox = null;\r\n    refControll = (node) => this.controlBox = node;\r\n\r\n\r\n    render(){\r\n        console.log('controllers');\r\n        return (\r\n            <Fragment>\r\n            {\r\n                <ControllersBox\r\n                ref = {this.refControll}\r\n                className = 'ControllersEditComponent'\r\n                coordX = {this.state.coordsX}\r\n                coordY = {this.state.coordsY}\r\n                // draggable = {!this.state.viewComponentMenu}\r\n                // onMouseDown = {this.saveCoords}\r\n                onClick = {this.componentMenu}\r\n                // onDrag   = {this.drag}\r\n                // onDragEnd = {this.drag}\r\n                // shadowDisplay = {this.state.shadowDisplay}\r\n                >\r\n                    <Icon\r\n                        draggable = {true}\r\n                        onClick = {this.componentMenu}\r\n                        className = 'addButton'\r\n                        path = '/img/addButton.png'\r\n                    />\r\n                    { this.state.viewComponentMenu ?\r\n                        <BuildMenu\r\n                            key = {`buildMenu ${this.props.mode}`}\r\n                            mode = 'build'\r\n                            editComponentName = {this.props.editComponentName}\r\n                            sizeParenBox = {this.props.sizeParenBox}\r\n                            countComponents = {this.props.countComponents}\r\n                        /> : null\r\n                    }\r\n                </ControllersBox>\r\n            }\r\n            </Fragment>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Controllers;","import React,{useState} from 'react';\r\nimport eventEmitter from '../../EventEmitter';\r\n\r\nimport './imageViewer.scss';\r\n\r\nfunction ImageViewer(props){\r\n\r\n    let [path] = useState(props.path);\r\n\r\n    const closeViewer = event => {\r\n        eventEmitter.emit(\"EventImageView\", { action: false, target: null});\r\n        event.stopPropagation();\r\n    }\r\n\r\n    return (\r\n        <div onClick = {closeViewer} className = 'ImageViewer'>\r\n            <img src = {path} alt = 'fullImage' />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ImageViewer;","import React, {Fragment} from 'react';\r\nimport {SketchPicker} from 'react-color';\r\n\r\nconst BackgroundInstruments = props => {\r\n\r\n    const stats = props.componentsStats;\r\n    let {colorPickerActive} = props.instrumentPanel;\r\n\r\n    return (\r\n        <Fragment>\r\n        <p className = 'titleInstument'>Color: </p>\r\n        <input\r\n            onClick = {props.cbSetColor}\r\n            className = 'button_switchColor'\r\n            type = 'button'\r\n            value = 'color pick'\r\n        />\r\n            { colorPickerActive ?\r\n                <SketchPicker\r\n                    onChangeComplete={props.cbHandleChangeComplete}\r\n                    color = {stats.color ? stats.color : 'red'}\r\n                />\r\n                : null\r\n            }\r\n            <input \r\n                onClick = {props.cbSearchImage}\r\n                className = 'ImageSearchButton'\r\n                type = 'button'\r\n                value = 'background-image'\r\n            />\r\n            <input \r\n                onClick = {props.cbSaveChanges}\r\n                className = 'saveButtonInstument'\r\n                type = 'button'\r\n                value = 'save changes'\r\n            />\r\n        </Fragment>\r\n    )\r\n\r\n}\r\n\r\nexport default BackgroundInstruments;","import React,{Fragment} from 'react';\r\nimport {SketchPicker} from 'react-color';\r\n\r\nconst TextInstruments = props => {\r\n\r\n        const stats = props.componentsStats;\r\n        let {colorPickerActive} = props.instrumentPanel;\r\n        let {content} = stats;\r\n        let {fontSize} = stats;\r\n        let {coords} = stats;\r\n\r\n        return (\r\n            <Fragment>\r\n            <p className = 'titleInstument'>Position: </p>\r\n            <span className = 'textCoordsPanel'>\r\n            {coords.left ?\r\n                coords.left + ' / ' + coords.top : ' drop for active'}\r\n            </span>\r\n            <p className = 'titleInstument'>Color: </p>\r\n            <input \r\n                onClick = {props.cbSetColor}\r\n                className = 'button_switchColor'\r\n                type = 'button'\r\n                value = 'color pick'\r\n            />\r\n            <p className = 'titleInstument'>Text size: </p>\r\n            <input \r\n                onChange = {props.cbSetSize}\r\n                type=\"number\"\r\n                min = '10' max = '200'\r\n                value = {fontSize ? fontSize : 120 }\r\n            />\r\n                { colorPickerActive ?\r\n                    <SketchPicker\r\n                    onChangeComplete={props.cbHandleChangeComplete}\r\n                    color = {stats.color ? stats.color : 'red'}\r\n                    />\r\n                    : null\r\n                }\r\n            <p className = 'titleInstument'>Content: </p>\r\n            <input\r\n                onChange = {props.cbSetContent}\r\n                maxLength = '20'\r\n                type = 'text'\r\n                defaultValue = {content}\r\n            />\r\n            <input \r\n                onClick = {props.cbSaveChanges}\r\n                className = 'saveButtonInstument'\r\n                type = 'button'\r\n                value = 'save changes'\r\n            />\r\n            </Fragment>\r\n        )\r\n}\r\n\r\nexport default TextInstruments;","import React from 'react';\r\n\r\nimport './Confirm.scss';\r\n\r\nconst Confirm = props => {\r\n\r\n    return (\r\n        <div className = 'wrapperConfirm'>\r\n            <div className = 'confirmSave'>\r\n                <span>Detected new changes</span>\r\n                <input\r\n                    className = 'saveCofirm'\r\n                    onClick = {props.cbSaveChanges}\r\n                    type = 'button'\r\n                    value = 'Save changes'\r\n                />\r\n                <input\r\n                    className = 'cancelCofirm'\r\n                    onClick = {props.cbCancelSave}\r\n                    type = 'button'\r\n                    value = 'Cancel'\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Confirm;","import React, {Fragment} from 'react';\r\nimport eventEmitter from '../../EventEmitter';\r\nimport PropTypes from 'prop-types';\r\nimport './instrumentsPanel.scss';\r\n\r\nimport BackgroundInstruments from './BackgroundTools/BackgroundInstruments';\r\nimport TextInstruments from './TextTools/TextInstruments';\r\n\r\nimport Confirm from '../confirmBox/Confirm';\r\nimport Icon from '../Icon/icon';\r\n\r\nclass InstrumentsPanel extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        instrumentPanel:  PropTypes.object.isRequired, /** @Settings for panel and data about component */\r\n        editComponentName: PropTypes.string /** @Name editable component */\r\n    };\r\n\r\n    state = {\r\n        isChange: false,\r\n        confirmActive: false,\r\n        instrumentPanel: {...this.props.instrumentPanel},\r\n        componentsStats: this.props.mainBuilderData.components.find(item =>\r\n                    {return item.id === this.props.instrumentPanel.idComponent }),\r\n        images: null,\r\n    };\r\n\r\n    updateSizeText = eventSize => {\r\n        this.setState({\r\n            ...this.state,\r\n            instrumentPanel: {...this.state.instrumentPanel},\r\n            componentsStats: {\r\n                ...this.state.componentsStats,\r\n                fontSize: eventSize\r\n            }\r\n        });\r\n    };\r\n\r\n    closePanel = event => {\r\n        if (!this.state.isChange)\r\n        eventEmitter.emit('EventClosePanel', {close: false});\r\n        else this.setState({...this.state, confirmActive: true});\r\n    };\r\n\r\n    setSize = event => {\r\n        let {idComponent} = this.state.instrumentPanel;\r\n        let size = event.target.value > 200 ? 200 : event.target.value;\r\n        this.setState({\r\n            ...this.state, \r\n            instrumentPanel: {...this.state.instrumentPanel},\r\n            componentsStats: {...this.state.componentsStats,fontSize: size}\r\n        },\r\n            () => eventEmitter.emit(`EventChangeSizeText${idComponent}`, {idSection: this.props.editComponentName, size: size })\r\n        );\r\n    };\r\n\r\n    setContent = event => {\r\n        let {idComponent} = this.state.instrumentPanel;\r\n        let contentValue = event.target.value;\r\n        this.setState({\r\n            ...this.state, \r\n            instrumentPanel: {...this.state.instrumentPanel},\r\n            componentsStats: {...this.state.componentsStats,content: contentValue}\r\n        },\r\n        () => eventEmitter.emit(`EventChangeContentText${idComponent}`,{idSection: this.props.editComponentName, content: contentValue}));\r\n    };\r\n\r\n    updatePosition = eventItem => {\r\n        this.setState({\r\n            ...this.state, \r\n            componentsStats: {\r\n                ...this.state.componentsStats,\r\n                coords: {\r\n                    ...this.state.componentsStats.coords,\r\n                    left: eventItem.x,\r\n                    top: eventItem.y\r\n                }\r\n            }\r\n        });\r\n    };\r\n\r\n    setColor = event => {\r\n        this.setState({...this.state,\r\n            instrumentPanel:{\r\n                ...this.state.instrumentPanel,\r\n                colorPickerActive: this.state.instrumentPanel.colorPickerActive ? false : true\r\n            }\r\n        });\r\n    };\r\n\r\n    updateBimageStats = eventItem => {\r\n        const {urlFull} = eventItem;\r\n        this.setState({\r\n            ...this.state,\r\n            componentsStats:{\r\n                ...this.state.componentsStats,\r\n                backgroundImage: urlFull\r\n            }\r\n        });\r\n    };\r\n\r\n    handleChangeComplete = event => {\r\n\r\n        const {rgb} = event;\r\n        let colorRGB = `rgb(${rgb.r},${rgb.g},${rgb.b},${rgb.a})`;\r\n\r\n        let {idComponent} = this.state.instrumentPanel;\r\n        if (this.state.instrumentPanel.target === 'background'){\r\n            this.setState({\r\n                ...this.state,\r\n                componentsStats: {...this.state.componentsStats,color: colorRGB}\r\n            }, () => eventEmitter.emit(`EventChangeColorBackground${idComponent}`,{idSection: this.props.editComponentName,  colorRGB}));\r\n        }\r\n\r\n        else if (this.state.instrumentPanel.target === 'text') {\r\n            this.setState({\r\n                ...this.state,\r\n                componentsStats: {...this.state.componentsStats,color: colorRGB}\r\n            },\r\n            () => eventEmitter.emit(`EventChangeColorText${idComponent}`, colorRGB));\r\n        }\r\n\r\n    };\r\n\r\n    saveChanges = event => {\r\n\r\n        this.setState({...this.state, isChange: false, confirmActive: false}, () =>\r\n        eventEmitter.emit(\"EventSaveChangesComponent\", {\r\n            ...this.state.componentsStats,\r\n            id: this.state.instrumentPanel.idComponent,\r\n            type: this.state.instrumentPanel.target,\r\n        }));\r\n\r\n        event.stopPropagation();\r\n    }\r\n\r\n    searchImage = event => {\r\n\r\n        let {idComponent} = this.state.instrumentPanel;\r\n        eventEmitter.emit('EventModalSearchOn', {idComponent: idComponent});\r\n\r\n        event.stopPropagation();\r\n    };\r\n\r\n    makePanelInstruments = (type) => {\r\n            switch (type){\r\n                case 'text':\r\n                   return(\r\n                    <TextInstruments\r\n                        instrumentPanel = {{...this.state.instrumentPanel}}\r\n                        componentsStats = {{...this.state.componentsStats}}\r\n                        cbSetColor = {this.setColor}\r\n                        cbSetSize = {this.setSize}\r\n                        cbHandleChangeComplete = {this.handleChangeComplete}\r\n                        cbSetContent = {this.setContent}\r\n                        cbSaveChanges = {this.saveChanges}\r\n                    />\r\n                   )\r\n                case 'background':\r\n                    return (\r\n                        <BackgroundInstruments\r\n                            instrumentPanel = {{...this.state.instrumentPanel}}\r\n                            componentsStats = {{...this.state.componentsStats}}\r\n                            cbSetColor = {this.setColor}\r\n                            cbHandleChangeComplete = {this.handleChangeComplete}\r\n                            cbSearchImage = {this.searchImage}\r\n                            cbSaveChanges = {this.saveChanges}\r\n                        />\r\n                    )\r\n                default: return <p className = 'warningInstruments'>\r\n                                    Select elements for accses edit instruments\r\n                                </p>\r\n            }\r\n    };\r\n\r\n\r\n    cancelSave = event => {\r\n        this.setState({...this.state, isChange: false, confirmActive: false});\r\n        event.stopPropagation();\r\n    }\r\n\r\n\r\n    render(){\r\n        let { instrumentActive } = this.state.instrumentPanel;\r\n\r\n        return (\r\n            <Fragment>\r\n                { this.state.confirmActive ?\r\n                    <Confirm cbSaveChanges = {this.saveChanges} cbCancelSave = {this.cancelSave} /> : null\r\n                }\r\n                <div  className = 'instumentsPanel'>\r\n                    <button\r\n                        onClick = {this.closePanel}\r\n                        className = 'closeInstrumentsPanel'\r\n                    >\r\n                        <Icon path = '/img/close.svg' />\r\n                    </button>\r\n                    <h3>Instruments</h3>\r\n                    {\r\n                        instrumentActive ? \r\n                        <p className = 'TextComponent'>{this.state.instrumentPanel.target}</p>\r\n                        : null\r\n                    }\r\n                    {\r\n                        instrumentActive ?\r\n                        <div className = 'instuments'>\r\n                            {this.makePanelInstruments(this.state.instrumentPanel.target)}\r\n                        </div>\r\n                        : null\r\n                    }\r\n                </div>\r\n            </Fragment>\r\n        )\r\n    };\r\n\r\n    componentDidUpdate = (oldProps, oldState) => {\r\n\r\n        let targetBool = oldState.instrumentPanel.target !== this.props.instrumentPanel.target;\r\n        let idBool = oldState.instrumentPanel.idComponent !== this.props.instrumentPanel.idComponent;\r\n\r\n        const compare = idBool || targetBool;\r\n        if (compare && !this.state.isChange){\r\n            this.setState({\r\n                ...this.state,\r\n                instrumentPanel: {...this.props.instrumentPanel, colorPickerActive: false, isChange: false},\r\n                componentsStats: this.props.mainBuilderData.components.find(item =>\r\n                    {return item.id === this.props.instrumentPanel.idComponent }),\r\n            });\r\n        } else if (this.state.componentsStats !== oldState.componentsStats &&\r\n                !this.state.isChange) this.setState({...this.state, isChange: true});\r\n        else if (compare && this.state.isChange) this.setState({...this.state, confirmActive: true});\r\n    };\r\n\r\n    componentDidMount = event => {\r\n        eventEmitter.on(\"EventUpdateSizeText\", this.updateSizeText);\r\n        eventEmitter.on(\"EventSetBImageInstumentPanel\", this.updateBimageStats);\r\n        eventEmitter.on(\"EventUpdatePosition\", this.updatePosition);\r\n    };\r\n\r\n    componentWillUnmount = event => {\r\n        console.log('componentWillUnmount');\r\n        eventEmitter.off(\"EventUpdateSizeText\", this.updateSizeText);\r\n        eventEmitter.off(\"EventSetBImageInstumentPanel\", this.updateBimageStats);\r\n        eventEmitter.off(\"EventUpdatePosition\", this.updatePosition);\r\n    };\r\n};\r\n\r\nexport default InstrumentsPanel;","import React, {Fragment} from 'react';\r\nimport eventEmitter from '../../../EventEmitter';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nimport BackgroundComponent from '../components/Background';\r\n\r\nimport './MainBackground.scss';\r\n\r\nclass MainBackground extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        children: PropTypes.object.isRequired, /** @Object with name */\r\n        countComponents: PropTypes.number.isRequired, /** @Number last project */\r\n        menuActive: PropTypes.bool.isRequired, /** @Bool active menu or unactive */\r\n        id: PropTypes.string.isRequired, /** @id current project */\r\n    }\r\n\r\n    state = {\r\n        idProject: this.props.id,\r\n        editRedy: false,\r\n        components: {...this.props.children},\r\n    }\r\n\r\n    changeMode = event => {\r\n        console.log('cgange');\r\n        if (!this.state.editStart || this.state.idProject !== this.props.editComponentName) {\r\n            console.log(this.state.idProject);\r\n            this.setState({\r\n                ...this.state,\r\n                editStart: true\r\n            }, () =>\r\n            eventEmitter.emit('EventModeEdit', {\r\n                ...this.state,\r\n                editStart: true,\r\n                idProject: this.state.idProject,\r\n                target: 'Header',\r\n            }));\r\n        }\r\n    }\r\n\r\n    refBox = null;\r\n    refBackground = node => this.refBox = node;\r\n\r\n    render() {\r\n        console.log('main');\r\n        let bg = this.props.currentProjectsData.components.find(item => item.name === this.props.id) || {};\r\n        let childrens = this.props.mainBuilderData.componentJSX.filter(item => item.name === this.props.id)\r\n        .map(item => item.component);\r\n\r\n        return (\r\n            <Fragment>\r\n                <section data-class = 'editable' onClick = {this.changeMode}>\r\n                    <BackgroundComponent \r\n                        name = {this.state.idProject}\r\n                        id = {bg.id}\r\n                        background = {bg.color}  {...bg}>\r\n                    {  childrens ?\r\n                        childrens : null\r\n                    }\r\n                    </BackgroundComponent>\r\n                    {!this.state.editStart ? <p className = 'warningEdit'>Click for start edit</p> : null}\r\n                </section>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\nexport default MainBackground;","import React,{Fragment} from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport {Redirect} from 'react-router-dom';\r\nimport eventEmitter from '../../EventEmitter';\r\n\r\nimport {loadCurrentProjectAction, exitProjectAction} from '../../redux/actions';\r\nimport updateMiddleware from '../../redux/middleware/updateMiddleware';\r\nimport withFirebase from '../../components/firebaseHOC';\r\nimport {connect} from 'react-redux';\r\n\r\nimport BuilderComponents from '../../components/componentsBuilder/BuilderComponents';\r\nimport Controllers from '../../components/controllers/controllers';\r\nimport ImageViewer from '../../components/imageViewer/imageViewer';\r\nimport Loader from '../../components/loading/Loader';\r\nimport Header from '../../components/header/Header';\r\nimport InstrumentsPanel from '../../components/instrumentsPanel/InstrumentsPanel';\r\nimport ModalWindow from '../../components/modalWindow/ModalWindow';\r\nimport MainBackground from '../../components/buildComponents/MainBackground/MainBackground';\r\n\r\nimport BuildMenu from '../../components/componentsBuildMenu/BuildMenu';\r\n\r\nimport './build.scss';\r\n\r\n\r\nclass Build extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        firebase: PropTypes.object.isRequired, /** @firebase class for use firebase functions */\r\n        active: PropTypes.bool, /** @active - status firebase auth */\r\n        dispatch: PropTypes.func.isRequired, /** @dispatch - redux */\r\n        history: PropTypes.object, /** @Router HTML5 history */\r\n        location: PropTypes.object, /** @Router */\r\n        match: PropTypes.object.isRequired, /** @Router */\r\n        userData: PropTypes.object.isRequired, /** @UserData data about projects,user and current edit prject */\r\n    }\r\n\r\n    state = {\r\n            idProject: parseInt(this.props.match.params.param),\r\n            editStart: false,\r\n            isLoadComponents: true,\r\n            projectEmpty: false,\r\n            sectionTitleProjectAction: true,\r\n            showSectionAddMenu: false,\r\n            mainBuilderData: {\r\n                mainBoxWidth: null,\r\n                mainBoxHeight: null,\r\n                buildGetComponents: false,\r\n                components: [],\r\n                sectionTitleProject: this.props.currentProjectsData ? this.props.currentProjectsData.sectionTitleProject : [],\r\n                componentJSX: []\r\n            },\r\n            instrumentPanel: {\r\n                colorPickerActive: false,\r\n                instrumentActive: false,\r\n                target: '',\r\n                idComponent: null,\r\n            },\r\n            editComponentName:  null,\r\n            menuActive: false,\r\n            modalSearch: false,\r\n            modalImageViewer: {action: false, image: null },\r\n        }\r\n\r\n    modalSearchOn = itemEvent => {\r\n        this.setState({...this.state, modalSearch: this.state.modalSearch ? false : true});\r\n    }\r\n\r\n    imageViewerSwitch = itemEvent => {\r\n        this.setState({\r\n            ...this.state,\r\n            modalImageViewer: {\r\n                ...this.state.modalImageViewer, \r\n                action: itemEvent.action, \r\n                target: itemEvent.target\r\n            }\r\n        });\r\n    };\r\n\r\n    workModeEdit = itemEvent => {\r\n        if (itemEvent.editStart)\r\n        this.setState({\r\n            ...this.state,\r\n            editStart: itemEvent.editStart,\r\n            editComponentName: itemEvent.idProject,\r\n            mainBuilderData: {\r\n                ...this.state.mainBuilderData,\r\n                mainBoxWidth: itemEvent.width,\r\n                mainBoxHeight: itemEvent.height,\r\n            },\r\n            menuActive: true,\r\n        });\r\n\r\n    }\r\n\r\n    openInstrument = itemEvent => {\r\n\r\n\r\n            const targetEqual = this.state.instrumentPanel.target !== itemEvent.target;\r\n            const idEqual = this.state.instrumentPanel.idComponent !== itemEvent.id;\r\n            const instumentActive = this.state.instrumentPanel.instrumentActive;\r\n            if (targetEqual || !instumentActive || idEqual)\r\n            this.setState({\r\n                ...this.state,\r\n                editComponentName: itemEvent.name,\r\n                instrumentPanel: {\r\n                    ...this.state.instrumentPanel,\r\n                    instrumentActive: true,\r\n                    sizeTextValue: itemEvent.sizeTextValue,\r\n                    idComponent: itemEvent.id,\r\n                    target: itemEvent.target\r\n                }\r\n            })\r\n    }\r\n\r\n    closePanel = itemEvent => {\r\n        this.setState({\r\n            ...this.state,\r\n            instrumentPanel: {\r\n                ...this.state.instrumentPanel,\r\n                colorPickerActive: false,\r\n                instrumentActive: itemEvent.close\r\n            }\r\n        });\r\n    };\r\n\r\n    addComponentsFromBD = array => {\r\n\r\n        let _sizeParenBox = {...this.state.sizeParenBox};\r\n        let componentsFromDB = [];\r\n        let components = [...this.state.mainBuilderData.components];\r\n        array.forEach(item => {\r\n            if (item.type !== 'background'){\r\n\r\n                let component =\r\n                    <BuilderComponents\r\n                        target = {item.name}\r\n                        sizeParenBox = {{..._sizeParenBox}}\r\n                        coords = {{...item.coords}}\r\n                        size = {item.fontSize}\r\n                        color = {item.color}\r\n                        id = {item.id}\r\n                        type = {item.type}\r\n                        key = {`${item.type}${item.id}`}\r\n                        content = {item.content ? item.content : 'Title'}\r\n                    />\r\n\r\n                const patternJSX = {\r\n                    id: item.id,\r\n                    name: item.name,\r\n                    component: component\r\n                }\r\n                componentsFromDB.push(patternJSX);\r\n                components.push(item);\r\n            }\r\n            else components.push(item);\r\n        });\r\n        this.addComponent({\r\n            components: components,\r\n            target: this.state.editComponentName,\r\n            dataBaseData: componentsFromDB, mode: 'DB'});\r\n    }\r\n\r\n    addComponent = itemEvent => {\r\n        let {componentJSX} = this.state.mainBuilderData;\r\n\r\n        if (itemEvent.mode !== 'DB'){\r\n        const patternJSX = {\r\n            id: itemEvent.componentsPatternStatus.id,\r\n            name: itemEvent.componentsPatternStatus.name,\r\n            component: itemEvent.component\r\n        }\r\n            this.setState({\r\n                ...this.state,\r\n                mainBuilderData: {\r\n                    ...this.state.mainBuilderData,\r\n                    components: [...this.state.mainBuilderData.components,\r\n                                itemEvent.componentsPatternStatus],\r\n                    componentJSX: [...componentJSX, patternJSX],\r\n                },\r\n            });\r\n        } else {\r\n            this.setState({\r\n                ...this.state,\r\n                isLoadComponents: false,\r\n                mainBuilderData: {\r\n                    ...this.state.mainBuilderData,\r\n                    components: [...this.state.mainBuilderData.components,\r\n                                ...itemEvent.components],\r\n                    componentJSX: [...componentJSX, ...itemEvent.dataBaseData],\r\n                },\r\n            });\r\n        }\r\n    };\r\n\r\n    saveChangesComponent = itemEvent => {\r\n\r\n        const {userData} = this.props;\r\n        let findCurrentItem = false;\r\n        const _components = this.state.mainBuilderData.components.map(item => {\r\n            if (item.id === itemEvent.id) { findCurrentItem = true; return {...itemEvent}; }\r\n            return item;\r\n        });\r\n\r\n        if (!findCurrentItem) _components.push(itemEvent);\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            mainBuilderData: {\r\n                ...this.state.mainBuilderData,\r\n                isChange: false,\r\n                components: _components\r\n            }\r\n        }, () => {\r\n            let {currentProjectsData} =this.props.userData;\r\n        return    (\r\n        this.props.dispatch(updateMiddleware({\r\n            uid: userData.idUser,\r\n            projects: [...userData.projects],\r\n            components: [...this.state.mainBuilderData.components],\r\n            sectionTitleProject: [...currentProjectsData.sectionTitleProject],\r\n            idProject: this.state.idProject}))\r\n        )});\r\n    };\r\n\r\n    sectionTitleProject = section => {\r\n        return section.map(item => {\r\n            return (\r\n                <MainBackground\r\n                    key = {item}\r\n                    mainBuilderData = {{...this.state.mainBuilderData}}\r\n                    currentProjectsData = {{...this.props.userData.currentProjectsData}}\r\n                    editComponentName = {this.state.editComponentName}\r\n                    countComponents = {this.state.mainBuilderData.componentJSX.length}\r\n                    menuActive = {this.state.menuActive}\r\n                    sizeParenBox = {this.state.sizeParenBox}\r\n                    id = {item}\r\n                >\r\n                    {{name: this.state.editComponentName}}\r\n                </MainBackground>\r\n            );\r\n        });\r\n    }\r\n\r\n    buildAdditional = () => {\r\n        return (\r\n            <Fragment key = 'AdditionalBuild'>\r\n                {   this.state.modalImageViewer.action ?\r\n                        <ImageViewer key = 'ImageViewer' path = {this.state.modalImageViewer.target} />\r\n                    : null\r\n                }\r\n                {   this.state.modalSearch ?\r\n                        <ModalWindow\r\n                            idComponent = {this.state.instrumentPanel.idComponent}\r\n                            key = 'ModalWindow' workMode = 'Search' \r\n                        /> \r\n                    : null\r\n                }\r\n                    <InstrumentsPanel\r\n                        key = 'InstrumentsPanel'\r\n                        editComponentName = {this.state.editComponentName}\r\n                        mainBuilderData =  {{...this.state.mainBuilderData}}\r\n                        instrumentPanel = {{...this.state.instrumentPanel}}\r\n                    />\r\n            </Fragment>\r\n        )\r\n    }\r\n\r\n    showAddSection = event => {\r\n        if (event.pageY > 780 && !this.state.showSectionAddMenu){\r\n            this.setState({\r\n                ...this.state,\r\n                showSectionAddMenu: true,\r\n            });\r\n        } else if (event.pageY < 780 && this.state.showSectionAddMenu){\r\n            this.setState({\r\n                ...this.state,\r\n                showSectionAddMenu: false,\r\n            });\r\n        }\r\n        event.stopPropagation();\r\n    }\r\n    mainComponent = null;\r\n    mainRefComponent = node => this.mainComponent = node;\r\n\r\n    \r\n    addNewSection = eventItem => {\r\n\r\n        const {userData} = this.props;\r\n        const {currentProjectsData} = userData;\r\n    this.setState({\r\n        ...this.state,\r\n        mainBuilderData:{\r\n            ...this.state.mainBuilderData,\r\n            sectionTitleProject: [\r\n                ...this.state.mainBuilderData.sectionTitleProject,\r\n                ...currentProjectsData.sectionTitleProject,\r\n                eventItem.componentsPatternStatus.id\r\n            ],\r\n            components:[\r\n                ...this.state.mainBuilderData.components,\r\n                eventItem.componentsPatternStatus\r\n            ],\r\n            componentJSX:[\r\n                ...this.state.mainBuilderData.componentJSX,\r\n                eventItem.component\r\n            ]\r\n        }\r\n    },  () => (\r\n    this.props.dispatch(updateMiddleware({\r\n        uid: userData.idUser,\r\n        projects: [...userData.projects],\r\n        components: [...this.state.mainBuilderData.components],\r\n        sectionTitleProject: [...this.state.mainBuilderData.sectionTitleProject],\r\n        idProject: this.state.idProject}))\r\n    ));\r\n}\r\n\r\n    showEv = event => {}\r\n\r\n    render(){\r\n\r\n        if (this.state.projectEmpty) return <Redirect to = '/Cabinet' />\r\n\r\n        const {instrumentActive} = this.state.instrumentPanel;\r\n        const {userData} = this.props;\r\n        const {currentProjectsData} = userData;\r\n\r\n        if (userData.active && currentProjectsData.loadProject){\r\n            return (\r\n                    <div\r\n                        ref = {this.mainRefComponent} \r\n                        onWheel = {this.showEv}\r\n                        onMouseMove = {this.showAddSection} \r\n                        className = 'Build' \r\n                        key = 'Build'>\r\n                        <Header key = 'Header' title = \"Constructor\"  />\r\n                        { this.state.editStart ?\r\n                        <Controllers\r\n                            key = {`controllers`}\r\n                            editComponentName = {this.state.editComponentName}\r\n                            countComponents = {this.state.mainBuilderData.components.length}\r\n                            menuActive = {this.state.menuActive}\r\n                            sizeParenBox = {this.state.sizeParenBox}\r\n                        /> : null\r\n                        }\r\n                        {   this.state.showSectionAddMenu ?\r\n                            <BuildMenu\r\n                                countSection = {this.state.mainBuilderData.componentJSX.length * 5}\r\n                                mode = \"section\"\r\n                                className = 'menu'\r\n                            />\r\n                        : null\r\n                        }\r\n                        {   instrumentActive ?\r\n                                this.buildAdditional()\r\n                            : null\r\n                        }\r\n                        {this.sectionTitleProject(currentProjectsData.sectionTitleProject)}\r\n                    </div>\r\n            )\r\n        } else if (!this.props.firebase.getCurrentUser()) return <Redirect to = '/' />\r\n        else return <Loader  key = 'Loader' path = '/img/loading.gif' type = 'build' />\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n\r\n        let {userData} = this.props;\r\n        let {currentProjectsData} = userData;\r\n        const isLoadComponents = this.state.isLoadComponents;\r\n\r\n        if (userData.active && !currentProjectsData.loadProject) {\r\n            const current =  userData.projects.find(item => item.id === this.state.idProject)\r\n            current ?\r\n            this.props.dispatch(loadCurrentProjectAction({\r\n                id: current.id,\r\n                typeProject: current.type,\r\n                sectionTitleProject: [...current.sectionTitleProject],\r\n                components: [...current.components]\r\n            })) : this.setState({...this.state, projectEmpty: true});\r\n        }\r\n        if (currentProjectsData.loadProject && isLoadComponents)\r\n            this.addComponentsFromBD([...currentProjectsData.components]);\r\n    }\r\n\r\n    componentDidMount = () => {\r\n\r\n        let {userData} = this.props;\r\n        let {currentProjectsData} = userData;\r\n\r\n        if (userData.active && !currentProjectsData.loadProject) {\r\n\r\n            const current =  userData.projects.find(item => item.id === this.state.idProject)\r\n            this.props.dispatch(loadCurrentProjectAction({\r\n                id: current.id,\r\n                sectionTitleProject: [...current.sectionTitleProject],\r\n                typeProject: current.type,\r\n                components: [...current.components]\r\n            }));\r\n        };\r\n\r\n        eventEmitter.on('EventBuildComponents', this.addComponent);\r\n        eventEmitter.on('EventNewSection', this.addNewSection);\r\n        eventEmitter.on('EventSaveChangesComponent', this.saveChangesComponent);\r\n        eventEmitter.on('EventClosePanel', this.closePanel);\r\n        eventEmitter.on('EventModalSearchOn', this.modalSearchOn);\r\n        eventEmitter.on('EventInstrumentPanel', this.openInstrument);\r\n        eventEmitter.on('EventImageView', this.imageViewerSwitch);\r\n        eventEmitter.on('EventModeEdit', this.workModeEdit);\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n\r\n        let {userData} = this.props;\r\n        if (userData.active)  this.props.dispatch(exitProjectAction(true));\r\n\r\n        eventEmitter.off('EventBuildComponents', this.addComponent);\r\n        eventEmitter.off('EventNewSection', this.addNewSection);\r\n        eventEmitter.off('EventSaveChangesComponent', this.saveChangesComponent);\r\n        eventEmitter.off('EventModalSearchOn', this.modalSearchOn);\r\n        eventEmitter.off('EventClosePanel', this.closePanel);\r\n        eventEmitter.off('EventInstrumentPanel', this.openInstrument);\r\n        eventEmitter.off('EventImageView', this.imageViewerSwitch);\r\n        eventEmitter.off('EventModeEdit', this.workModeEdit);\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        userData: {\r\n            active: state.cabinet.active,\r\n            idUser: state.cabinet.idUser,\r\n            projects: [...state.cabinet.projects],\r\n            currentProjectsData: {...state.builder}\r\n        },\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(withFirebase(Build));","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport {Route, Switch} from 'react-router-dom';\r\n\r\nimport {middlewareLoadUserData} from './redux/middleware/loadUserMiddleware';\r\nimport {connect} from 'react-redux';\r\nimport withFirebase from './components/firebaseHOC';\r\nimport Loader from './components/loading/Loader';\r\n\r\nimport Index from './Pages/Index/Index';\r\nimport Cabinet from './Pages/Cabinet/Cabinet';\r\nimport About from './Pages/About/About';\r\nimport Build from './Pages/Build/Build';\r\nimport ErrorPage from './components/ErrorCatch/ErrorPage';\r\n\r\n// require('es6-promise').polyfill();\r\n\r\nclass App extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        config: PropTypes.object.isRequired, /** @Config app */\r\n        firebase: PropTypes.object.isRequired, /** @firebase class for use firebase functions */\r\n        dispatch: PropTypes.func.isRequired, /** @dispatch - redux */\r\n    }\r\n\r\n    state = {\r\n        firebase: this.props.firebase,\r\n        firebaseLoadState: false,\r\n    }\r\n\r\n    componentDidMount(){\r\n\r\n        this.props.firebase.auth.onAuthStateChanged((user) => {\r\n\r\n            if (!this.state.firebaseLoadState){\r\n                if (user) this.props.dispatch(middlewareLoadUserData(user.uid));\r\n                this.setState({...this.state, firebaseLoadState: true});\r\n            }\r\n        });\r\n    }\r\n\r\n    render(){\r\n        if (this.state.firebaseLoadState){\r\n        return (\r\n            <div>\r\n                <Switch>\r\n                    <Route\r\n                        path = {'/'} exact\r\n                        render = {(props) => <Index {...props} />}\r\n                    />\r\n                    <Route path = '/Cabinet/' exact component = {Cabinet}/>\r\n                    <Route\r\n                        path = {'/Cabinet/About'}\r\n                        render = {(props) => <About {...props} config = {this.props.config} />}\r\n                    />\r\n                    <Route path = {'/Cabinet/Build/:param'} component = {Build}/>\r\n                    <Route path = {'*'} component = {Index} />\r\n                    <Route path = {'/crashPage'} component = {ErrorPage} />\r\n                </Switch>\r\n                </div>\r\n\r\n        )\r\n        } else return <Loader path = { '/img/loading.gif'} type = 'application' />\r\n    }\r\n}\r\n\r\nexport default connect()(withFirebase(App));","\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\n\nimport firebase from './Firebase/Firebase';\nimport ErrorBoundary from './components/ErrorCatch/ErrorBoundary';\nimport {HashRouter } from 'react-router-dom';\nimport {Provider} from 'react-redux';\nimport store from './redux/store';\nimport App from './App.jsx';\nimport 'normalize.css';\n\n\nfirebase.saveSession('SESSION');\nconst config = require('./config.json');\n\nReactDOM.render(\n        <HashRouter>\n            <ErrorBoundary>\n                <Provider store = {store}>\n                    <App config = {config} />\n                </Provider>\n            </ErrorBoundary>\n        </HashRouter >,\n        document.getElementById('root')\n);\n\nserviceWorker.register();\n\n"],"sourceRoot":""}