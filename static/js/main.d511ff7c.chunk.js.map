{"version":3,"sources":["serviceWorker.js","Firebase/firebaseConfig.js","Firebase/Firebase.js","EventEmitter.js","components/ErrorCatch/ErrorPage.jsx","components/ErrorCatch/ErrorBoundary.jsx","redux/actions.js","redux/reducerBuilder.js","redux/reducerCabinet.js","redux/reducers.js","redux/store.js","redux/middleware/loadUserMiddleware.js","Firebase/firebaseContext.js","components/withFirebase.jsx","components/loading/Loader.jsx","components/AnimationText/AnimationTitle.jsx","components/Registration/Registration.jsx","components/Icon/icon.jsx","Pages/Index/Index.jsx","redux/middleware/middlewareDelete.js","components/confirmBox/Confirm.jsx","components/header/Header.jsx","components/imageViewer/imageItem.jsx","components/modalWindow/createProject/createProject.jsx","components/modalWindow/Search/searchModal.jsx","components/modalWindow/ModalWindow.jsx","redux/middleware/createProjectMiddleware.js","components/List/Item.jsx","components/List/List.jsx","components/ProjectsSection/ProjectsSection.jsx","Pages/Cabinet/Cabinet.jsx","components/buildComponents/components/Background.jsx","components/buildComponents/MainBackground/MainBackground.jsx","components/buildComponents/section.jsx","components/buildComponents/components/Input.jsx","components/buildComponents/components/Media.jsx","components/buildComponents/components/Image.jsx","components/buildComponents/components/Text.jsx","components/builderHOC.jsx","Pages/Production/Production.jsx","Pages/About/About.jsx","redux/middleware/updateMiddleware.js","components/withScroll.jsx","components/imageViewer/Viewer.jsx","components/instrumentsPanel/InputTools/InputInstruments.jsx","components/instrumentsPanel/MediaTools/MediaInstruments.jsx","components/instrumentsPanel/ImageTools/ImageInstruments.jsx","components/instrumentsPanel/BackgroundTools/BackgroundInstruments.jsx","components/instrumentsPanel/TextTools/TextInstruments.jsx","components/instrumentsPanel/InstrumentsPanel.jsx","components/additionalTools/additionalTools.jsx","components/componentsBuildMenu/BuildMenu.jsx","components/controllers/controllers.jsx","Pages/Build/Build.jsx","components/SwitchContainer/Guides/OpenPanel.jsx","components/SwitchContainer/Guides/SearchGuide.jsx","components/SwitchContainer/Guides/AddComponents.jsx","components/SwitchContainer/Guides/AddNewSection.jsx","components/SwitchContainer/Guides/CreateNewProject.jsx","components/SwitchContainer/SwitchContainer.jsx","Pages/Guide/Guide.jsx","App.jsx","index.js"],"names":["Boolean","window","location","hostname","match","firebaseConfig","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firebaseInterface","require","Firebase","Object","classCallCheck","this","firebase","auth","db","config","lowConnection","enablePersistence","catch","err","code","console","error","rules","setPersistence","Auth","Persistence","email","password","signInWithEmailAndPassword","createUserWithEmailAndPassword","signOut","currentUser","saveSession","session","stream","EventEmitter","controllerStream","ErrorPage","state","redirect","update","event","_this","setState","eventEmitter","emit","react_default","a","createElement","react_router","to","class","className","onClick","React","Component","ErrorBoundary","hasError","updateApplication","componentDidMount","on","componentWillUnmount","off","info","ErrorCatch_ErrorPage","props","children","log","PureComponent","exitProjectAction","type","exit","loadCurrentProjectAction","id","typeProject","sectionsProject","components","loadUpdateCurrentProject","idProject","toConsumableArray","loadUserAction","active","idUser","uid","projects","errorAction","initialState","loadProject","combineReducers","builder","arguments","length","undefined","action","objectSpread","cabinet","map","item","middleware","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","thunk","withExtraArgument","store","createStore","middlewareLogin","_ref2","asyncToGenerator","regenerator_default","mark","_callee","dispatch","getState","_ref","isLogin","wrap","_context","prev","next","login","then","response","collection","doc","user","get","docUser","data","message","abrupt","stop","_x","_x2","_x3","apply","middlewareLogOutUser","_ref6","_callee3","_ref5","_context3","_x7","_x8","_x9","firebaseContext","createContext","withFirebase","Firebase_firebaseContext","Consumer","assign","loading_Loader","_useState","useState","path","slicedToArray","_useState3","mode","concat","src","alt","AnimationTitle","styled","h3","_templateObject","dir","AnimationText","tilteContent","content","split","currentTitle","positionTitle","directionAnimation","msAnimation","msTimeout","msPauseEnd","_isMounted","timerAnimation","animationTitle","timer","self","assertThisInitialized","setTimeout","tick","counter","word","_title","slice","e","clearTimeout","data-titlebuild","emailRef","passwordRef","setRefEmail","node","setRefPassword","createUser","value","registration","Error","set","indexStream","autoComplete","placeholder","ref","Icon","_useState5","draggable","title","Index","Events","tryAuth","registrationActive","regStatus","wrongEnter","emailImput","passwordImput","statusRegistration","additionalUserInfo","isNewUser","showBox","stopPropagation","authTo","res","componentDidUpdate","AnimationText_AnimationTitle","Icon_icon","TransitionGroup","component","CSSTransition","timeout","unmountOnExit","classNames","components_Registration_Registration","connect","middlewareDeleteProjectComponent","_ref4","_callee2","_ref3","_context2","findProject","find","project","filter","idComponent","section","dataUpdate","_x4","_x5","_x6","middlewareDelete","itemdb","Confirm","cbSaveChanges","cbCancelSave","iconPath","CabinetIcon","Header","isChange","redirectConfirm","redirectAbout","redirectA","redirectCabinet","redirectC","redirectGuide","redirectG","confirm","false","confirmSaveDetectChanges","logOut","pathname","add","cabinetStream","componentDidlMount","_this2","Fragment","components_confirmBox_Confirm","withRouter","ImageItem","selected","urls","regular","urlRegular","full","urlFull","_useState7","isFull","_useState9","urlContent","url","iframe","CreateProject","disabled","validateName","name","validateType","typeClassName","nameLength","isNumber","warningLengthMin","warningLengthMax","warningNumber","onChange","cbValidateName","warningType","cbSelectOption","cbAddNewProject","cbCancel","loading","SearchModal","modalSearchMode","items","images","search","refSearch","cbSearch","refSearchFunc","prevProps","prevState","contentPrev","haveUpdate","isSelected","selectedItem","_items","cbMakeImageResultBox","dissabled","menuActive","cbShowImage","cbSetSelectedImage","polyfill","ModalWindow","workMode","buttonSearchDisabled","showUrl","imageBoxView","newProject","imageMenuActive","warning","lengthMax","lengthMin","inputSearch","inputSelect","searchData","api","isFetch","ok","json","results","searchYouTubeAPI","RAITE","KEY","status","arrayItems","forEach","push","snippet","thumbnails","high","videoId","showMenuImage","showImage","_this$state$images","eventStreamBuild","target","setSelectedImage","makeImageResultBox","i","imageItem","key","addNewProject","selectOption","inputs","defineProperty","test","cancel","refSelect","createProject","searchModal","loader","react","middlewareCreateProject","list","lastProject","lastIndex","header","backgroundImage","backgroundColor","min","Math","floor","random","targetSection","productionPath","_useState6","canBuild","setCanBuild","_useState8","canProd","setCanProd","_useState11","_useState13","data-id","List","makeList","List_Item","ProjectsSection","components_List_List","Cabinet","modalActive","deletItem","getCurrentUser","changeWorkMode","header_Header","in","appear","modalWindow_ModalWindow","components_ProjectsSection_ProjectsSection","Background","div","Background_templateObject","width","height","BackgroundComponent","background","color","boxComponent","boxComponentRef","saveDataParent","boxInform","getBoundingClientRect","countSection","sectionNumber","size","openBgInstruments","componentsPatternBackground","componentStats","changeColor","eventItem","colorRGB","setBackgroundImage","onDoubleClick","data-name","MainBackground","editRedy","changeMode","editStart","editComponentName","refSection","refSectionFunc","currentProjectsData","componentJSX","needUpdate","countComponents","data-class","components_Background","Section","userData","buildComponents_MainBackground_MainBackground","sizeParentBox","componentsProdJSX","InputComponent","input","attrs","style","zIndex","indexZ","left","coordX","top","coordY","Input_templateObject","w","h","fontSize","borderRadius","ProductionStyle","_templateObject2","Input","istrumentsActive","getSizeBool","typeInput","shiftCoords","posInput","coords","x","y","startDragNdrop","openInputInstruments","componentsPatternImage","sizeTextValue","saveCoords","nativeEvent","which","element","refInput","cords","right","bottom","clientX","clientY","changeSize","eventSize","changeSizeText","setBorderRadius","radius","borderDown","changeContent","checkPivotPosition","borderRight","move","moveInput","num","xItem","yItem","convertToPercentX","convertToPercentY","toFixed","stopDragNdrop","saveSize","setWidth","setType","setHeight","refInputComponent","onMouseDown","onMouseMove","onMouseLeave","onMouseUp","onDragStart","data-imagecomponentwrapper","WrapperMedia","display","justifyContent","alignItems","padding","Media_templateObject","Media","Media_templateObject2","_templateObject3","MediaComponent","posMedia","drawContent","openMediaInstruments","componentsPatternMedia","refMedia","moveMedia","setContent","refMediaComponent","allowfullscreen","Media_ProductionStyle","WrapperImg","transform","rotate","scale","transition","Image_templateObject","ImageStyle","img","Image_templateObject2","opacity","Image_templateObject3","Image","transformValue","scaleValue","image","posImage","openImageInstruments","refImage","rotateEvent","angle","scaleEvent","moveText","factorCoord","diffAngle","parseInt","xFacotr","yFactor","powHeight","pow","powWidth","pythagoras","sqrt","_angle","atan","_biasFactor","biasFactor","PI","sinX","sin","sinY","setCurrentImage","changeSizeImage","setOpacity","stopDrag","preventDefault","refImageComponent","data-imagecomponent","Image_ProductionStyle","crossOrigin","WrapperText","Text_templateObject","textColor","TextStyle","p","Text_templateObject2","font","Text_templateObject3","TextComponent","resizeStream","isHaveSize","parent","colorText","sizeText","position","contentText","openTitleInstruments","componentsPatternText","changeColorText","changeContentText","eventContent","refText","resizeStart","classList","setFont","sectionNum","refTextComponent","data-textcomponent","Text_ProductionStyle","builderHOC","Production","params","param","projectEmpty","isLoadComponents","makeProduction","array","_components","itemHash","patternJSX","prodRef","mainProductionRef","current","buildComponents_section","About","about","developer","year","updateMiddleware","newProjects","JSON","parse","stringify","withScroll","_React$PureComponent","ScrollMove","_getPrototypeOf2","_len","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","scrollConfig","duration","delay","smooth","offset","positionCount","setStates","blockMove","moveLocation","count","moveDown","deltaY","moveUp","close","scroller","scrollTo","scroll","scrollToTop","inherits","createClass","onWheel","onTouchStart","Viewer","frameBorder","allow","allowFullScreen","InputInstruments","colorPickerActive","instrumentPanel","_content","cbSetColor","lib","onChangeComplete","cbHandleChangeComplete","cbSetWidth","max","cbSetHeight","cbSetSize","cbSetBorderRadius","cbSetType","cbSetContent","maxLength","cbDelete","MediaInstruments","ImageInstruments","fileRef","createRef","cbRotate","cbScale","step","cbSetOpacity","cbLoadFile","accept","BackgroundInstruments","TextInstruments","cbSetFont","InstrumentsPanel","closePanel","setSize","fontName","setIframeContent","contentValue","updatePosition","setColor","updateBimageStats","handleChangeComplete","rgb","r","g","b","redirectSaveChanges","ms","saveChanges","deleteComponent","loadFile","files","reader","FileReader","readAsDataURL","onload","result","onerror","makePanelInstruments","TextTools_TextInstruments","BackgroundTools_BackgroundInstruments","ImageTools_ImageInstruments","MediaTools_MediaInstruments","InputTools_InputInstruments","oldProps","oldState","instrumentActive","AdditionalTools","modal","modalSearch","modalViewer","modalSearchOn","itemEvent","ViewerSwitch","openInstrument","imageViewer_Viewer","instrumentsPanel_InstrumentsPanel","BuildMenu","addText","componentsPattern","Text","addBackground","addImage","components_Image","addMedia","components_Media","addInput","componentsPatternInput","components_Input","inputType","addSection","Controllers","viewComponentMenu","shiftX","shiftY","coordsX","coordsY","shadowDisplay","componentMenu","refControll","componentsBuildMenu_BuildMenu","Build","eventEmitterBuild","EventBuild","workModeEdit","_componentJSX","addComponentsFromBD","componentsFromDB","addComponent","saveChangesComponent","findCurrentItem","mainComponent","mainRefComponent","addNewSection","dist_default","ie","only","except","showAddSection","controllers_controllers","additionalTools","OpenPanel","SearchGuide","AddComponents","AddNewSection","CreateNewProject","SwitchContainer","refOP","refSE","refADD","refSN","refPR","refOpenPanel","refAdd","refProject","Guides_OpenPanel","Guides_SearchGuide","Guides_AddComponents","Guides_AddNewSection","Guides_CreateNewProject","Guide","components_SwitchContainer_SwitchContainer","App","firebaseLoadState","onAuthStateChanged","isError","_this3","exact","render","Pages_Index_Index","Pages_Cabinet_Cabinet","Pages_About_About","Pages_Build_Build","Pages_Guide_Guide","ReactDOM","react_router_dom","ErrorCatch_ErrorBoundary","Provider","es","src_App","document","getElementById","navigator","serviceWorker","ready","unregister"],"mappings":"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","file":"static/js/main.d511ff7c.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log('This web app is being served cache-first by a service worker.');\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","// setings in root folder .env\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n    databaseURL: process.env.REACT_APP_DATABASE_URL,\r\n    projectId: process.env.REACT_APP_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n    appId: process.env.REACT_APP_APPID\r\n};\r\n\r\nexport default firebaseConfig;","import * as firebase from 'firebase/app';\r\nimport firebaseConfig from './firebaseConfig';\r\nimport config from '../config.json';\r\nconst auth = require('firebase/auth');\r\nconst firestore = require('firebase/firestore');\r\n\r\nclass Firebase {\r\n\r\n    constructor(firebaseConfig){\r\n        /** Init firebase */\r\n\r\n        firebase.initializeApp(firebaseConfig);\r\n        this.auth = firebase.auth();\r\n        this.db = firebase.firestore();\r\n\r\n        if (config.firebase.lowConnection === 'true'){\r\n        this.db.enablePersistence() /** if user use low internet connection */\r\n            .catch(function(err) {\r\n                if (err.code === 'failed-precondition') {\r\n                    console.error('failed-precondition: Multiple tabs open,' +\r\n                                'persistence can only be enabled in one tab at a a time.');\r\n                } else if (err.code === 'unimplemented') {\r\n                    console.error('failed-precondition: The current browser does not support');\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    saveSession(rules){\r\n        /** Set forebase type session */\r\n        return this.auth.setPersistence(firebase.auth.Auth.Persistence[rules]);\r\n    }\r\n\r\n    login(email, password){\r\n        /** login firebase */\r\n        try {\r\n            return this.auth.signInWithEmailAndPassword(email, password);\r\n        } catch (error) {\r\n            console.error(error);\r\n            return null;\r\n        }\r\n    }\r\n\r\n    registration(email, password){\r\n        /** create new user */\r\n        return this.auth.createUserWithEmailAndPassword(email, password)\r\n    }\r\n\r\n    signOut(){\r\n        /** destroy session */\r\n        return this.auth.signOut()\r\n    }\r\n\r\n    getCurrentUser() {\r\n        /** get current user */\r\n        return this.auth.currentUser\r\n    }\r\n}\r\nlet firebaseInterface = new Firebase(firebaseConfig);\r\nfirebaseInterface.saveSession(config.firebase.session);\r\n\r\nexport default firebaseInterface;\r\nexport { auth, firestore };\r\n\r\n","import {EventEmitter} from 'events';\r\n\r\nconst stream = new EventEmitter(); /** @Events head event stream */\r\nconst controllerStream = new EventEmitter(); /** @Events for controllers */\r\n\r\nexport {controllerStream};\r\nexport default stream;\r\n","import React from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\nimport eventEmitter from '../../EventEmitter';\r\n\r\nimport './errorPage.scss';\r\n\r\n\r\nclass ErrorPage extends React.Component {\r\n\r\n    state = {\r\n        redirect: false,\r\n    }\r\n\r\n    update = event => {\r\n       this.setState({redirect: true},\r\n        () => eventEmitter.emit('EventErrorCatchUpdate'));\r\n    }\r\n\r\n    render(){\r\n        if (this.state.redirect) return <Redirect to = '/' />\r\n        return (\r\n        <div class = 'container'>\r\n            <div class = 'flex-column ErrorPage'>\r\n                <h1>Application crash</h1>\r\n                <button className = 'ErrorPage__button_updateApp' onClick = {this.update}>Update</button>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ErrorPage;","\r\nimport React from 'react';\r\nimport eventEmitter from '../../EventEmitter';\r\nimport ErrorPage from './ErrorPage';\r\n\r\nclass ErrorBoundary extends React.PureComponent {\r\n\r\n      state = { \r\n        hasError: false,\r\n      };\r\n\r\n    static getDerivedStateFromError(error) {\r\n        console.log(error);\r\n      // Обновить состояние с тем, чтобы следующий рендер показал запасной UI.\r\n      return { hasError: true};\r\n    }\r\n\r\n    updateApplication = event => {\r\n      this.setState({hasError: false});\r\n    };\r\n  \r\n    componentDidCatch(error, info) {\r\n      // Можно также сохранить информацию об ошибке в соответствующую службу журнала ошибок\r\n     console.error(error + \",\" + info);\r\n    }\r\n  \r\n    render() {\r\n      if (this.state.hasError) return <ErrorPage />\r\n      return this.props.children;\r\n    }\r\n\r\n    componentDidMount = () => {\r\n      eventEmitter.on('EventErrorCatchUpdate',this.updateApplication);\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n      eventEmitter.off('EventErrorCatchUpdate',this.updateApplication);\r\n    }\r\n  }\r\n\r\n  export default ErrorBoundary;","const CREATE_PROJECT = 'CREATE_PROJECT';\r\nconst LOAD_UPDATE_PROJECT = \"LOAD_UPDATE_PROJECT\";\r\nconst LOAD_CURRENT = 'LOAD_CURRENT';\r\nconst LOG_OUT_CABINET = 'LOG_OUT_CABINET';\r\nconst LOAD_USER_CABINET = 'LOAD_USER_CABINET';\r\nconst ERROR_CABINET = 'ERROR_CABINET';\r\nconst EXIT_PROJECT = 'EXIT_PROJECT';\r\n\r\nconst createProjectAction = (state) => {\r\n    /** action for create project */\r\n    return {\r\n        type: CREATE_PROJECT,\r\n        projects: state,\r\n    }\r\n}\r\n\r\nconst exitProjectAction = (state) => {\r\n       /** action for exit from editable or prod project */\r\n    return {\r\n        type: EXIT_PROJECT,\r\n        exit: state\r\n    }\r\n}\r\n\r\nconst loadCurrentProjectAction = (state) => {\r\n    /** action for load current editable or prod project */\r\n    return {\r\n        type: LOAD_CURRENT,\r\n        id: state.id,\r\n        typeProject: state.typeProject,\r\n        sectionsProject: state.sectionsProject,\r\n        components: state.components\r\n    }\r\n}\r\n\r\nconst loadUpdateCurrentProject = (state) => {\r\n    /** action for update editable project */\r\n    return {\r\n        type: LOAD_UPDATE_PROJECT,\r\n        idProject: state.idProject,\r\n        sectionsProject: [...state.sectionsProject],\r\n        components: [...state.components]\r\n    }\r\n}\r\n\r\nconst loadUserAction = (state) => {\r\n    /** action for load user data */\r\n    return {\r\n        type: LOAD_USER_CABINET,\r\n        active: true,\r\n        idUser: state.uid,\r\n        error: '',\r\n        projects: state.projects\r\n    }\r\n}\r\n\r\nconst logOutAction = (state) => {\r\n    /** action for clear session */\r\n    return {\r\n        type: LOG_OUT_CABINET,\r\n        active: false,\r\n        idUser: null,\r\n        error: '',\r\n        projects: []\r\n    }\r\n}\r\n\r\nconst errorAction = (state) => {\r\n    /** action catch errors */\r\n    return {\r\n        type: ERROR_CABINET,\r\n        error: state\r\n    }\r\n}\r\n\r\nexport {\r\n    CREATE_PROJECT, createProjectAction, /* cabinet */\r\n    LOAD_USER_CABINET, loadUserAction, /* cabinet */\r\n    LOG_OUT_CABINET, logOutAction, /* cabinet */\r\n    LOAD_CURRENT, loadCurrentProjectAction, /* builder */\r\n    LOAD_UPDATE_PROJECT, loadUpdateCurrentProject,\r\n    EXIT_PROJECT, exitProjectAction,\r\n    ERROR_CABINET, errorAction, /* both */\r\n}","import {LOAD_CURRENT,LOAD_UPDATE_PROJECT, EXIT_PROJECT} from './actions';\r\n\r\nconst initialState = { /** @Builder reducer for build mode */\r\n    loadProject: false,\r\n    idProject: null,\r\n    typeProject: null,\r\n    components: [],\r\n    sectionsProject: [],\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n    switch (action.type){\r\n\r\n        case LOAD_CURRENT: {\r\n            /** load data */\r\n            return {\r\n                ...state,\r\n                loadProject: true,\r\n                idProject: action.id,\r\n                typeProject: action.typeProject,\r\n                components: [...action.components],\r\n                sectionsProject: [...action.sectionsProject]\r\n            }\r\n        }\r\n\r\n        case LOAD_UPDATE_PROJECT: {\r\n             /** load update for project */\r\n            return {\r\n                ...state,\r\n                components: [...action.components],\r\n                sectionsProject: [...action.sectionsProject]\r\n            }\r\n        }\r\n\r\n        case EXIT_PROJECT: {\r\n             /** if user exit from edit mode */\r\n            if (action.exit)\r\n            return {\r\n                ...state,\r\n                loadProject: false,\r\n                idProject: null,\r\n                typeProject: null,\r\n                components: []\r\n            }\r\n            else return state;\r\n        }\r\n        default: return state;\r\n    }\r\n};","import {    LOAD_USER_CABINET, LOG_OUT_CABINET,\r\n            ERROR_CABINET, CREATE_PROJECT,\r\n            LOAD_UPDATE_PROJECT\r\n        } from './actions';\r\n\r\nconst initialState = { /** Cabinet reducer (root) */\r\n    active: false,\r\n    idUser: null,\r\n    projects: [],\r\n    error: null,\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case LOAD_USER_CABINET: {\r\n            /** load user data if user auth - true */\r\n            return {\r\n                ...state,\r\n                active: action.active,\r\n                idUser: action.idUser,\r\n                projects: [...action.projects]\r\n            }\r\n        }\r\n\r\n        case CREATE_PROJECT: {\r\n             /** create new project */\r\n            return {\r\n                ...state,\r\n                projects: [...action.projects]\r\n            }\r\n        }\r\n\r\n        case LOAD_UPDATE_PROJECT: {\r\n              /** update project in cabinet */\r\n            return {\r\n                ...state,\r\n                projects: state.projects.map(item => {\r\n                    if (item.id === action.idProject)\r\n                        item.components = [...action.components]\r\n                return item;\r\n                })\r\n            }\r\n        }\r\n\r\n        case LOG_OUT_CABINET: {\r\n            /** clear session */\r\n            return {\r\n                ...state,\r\n                active: false,\r\n                idUser: null,\r\n                projects: []\r\n            }\r\n        }\r\n\r\n        case ERROR_CABINET: {\r\n            /** catch error in cabinet */\r\n            return {\r\n                ...state,\r\n                error: action.error\r\n            }\r\n        }\r\n        default: return state;\r\n    }\r\n}\r\n\r\n","import {combineReducers} from 'redux';\r\nimport reducerBuilder from './reducerBuilder';\r\nimport reducerCabinet from './reducerCabinet';\r\n\r\nexport default combineReducers({\r\n    builder: reducerBuilder,\r\n    cabinet: reducerCabinet,\r\n});","import {createStore, applyMiddleware, compose} from 'redux';\r\nimport firebase from  '../Firebase/Firebase';\r\nimport thunk from 'redux-thunk';\r\nimport combineReducers from './reducers';\r\n\r\n/** For devtools */\r\nconst composeEnhancers =\r\n  typeof window === 'object' &&\r\n  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?\r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\r\n    }) : compose;\r\n\r\nconst middleware = composeEnhancers( /** @Include moddleware */\r\n  applyMiddleware(thunk.withExtraArgument({firebase})));\r\n\r\nconst store = createStore(combineReducers, middleware);\r\nexport default store;","import {loadUserAction, errorAction, logOutAction} from '../actions';\r\n\r\nconst middlewareLogin = (email,password) => async (dispatch,getState, {firebase}) => {\r\n    /** Auth */\r\n    let isLogin = true;\r\n        await firebase.login(email,password)\r\n        .then(response =>{\r\n            firebase.db.collection(\"users\").doc(response.user.uid).get()\r\n            .then(docUser => {\r\n                let user = docUser.data();\r\n                /** Load user if auth - true */\r\n                dispatch(loadUserAction({uid: docUser.id, projects: [...user.projects]}))\r\n            })\r\n        })\r\n        .catch((error) => {\r\n            console.error(error.message);\r\n            dispatch(errorAction(error.message));\r\n        });\r\n        return isLogin;\r\n    }\r\n\r\nconst middlewareLoadUserData = (uid) => async (dispatch,getState, {firebase}) => {\r\n    /** Load user data */\r\n        let isError = null;\r\n        await firebase.db.collection(\"users\").doc(uid).get()\r\n        .then(docUser => {\r\n            let user = docUser.data();\r\n            /** load if user data found */\r\n            dispatch(loadUserAction({uid: uid, projects: [...user.projects]}))\r\n        })\r\n        .catch((error) => {\r\n            console.error(error.message);\r\n            dispatch(errorAction(error.message));\r\n            isError = true;\r\n        });\r\n\r\n        if (!isError) return true;\r\n        else return false;\r\n    }\r\n\r\nconst middlewareLogOutUser = (uid) => async (dispatch,getState, {firebase}) => {\r\n    /** disconnect from session */\r\n    await firebase.signOut()\r\n    .then (response => {\r\n        dispatch(logOutAction());\r\n    })\r\n    .catch((error) => {\r\n        console.error(error.message);\r\n        dispatch(errorAction(error.message));\r\n    });\r\n}\r\nexport {\r\n    middlewareLogin,middlewareLoadUserData, middlewareLogOutUser\r\n}","import React from 'react';\r\nimport firebase from './Firebase';\r\n/** @ContextAPI for firebase */\r\nconst firebaseContext = React.createContext(firebase);\r\nexport default firebaseContext;","import React from 'react';\r\nimport firebaseContext from '../Firebase/firebaseContext';\r\n\r\n\r\nconst withFirebase = Component => props => {\r\n        return ( /** Context API */\r\n            <firebaseContext.Consumer>\r\n                {firebase => <Component {...props} firebase = {firebase} /> }\r\n            </firebaseContext.Consumer>\r\n        )\r\n};\r\n\r\n\r\nexport default withFirebase;","import React,{useState} from 'react';\r\nimport './Loader.scss';\r\nexport default function(props) {\r\n  \r\n    const [path] = useState(props.path ? process.env.PUBLIC_URL + props.path : process.env.PUBLIC_URL + `/img/loading.gif`);\r\n    const [mode] = useState(props.mode ? props.mode : false);\r\n    return (\r\n            <div className = {`loaderBox ${mode && 'specialMode'}`}>\r\n                <img className = 'loader' src = {path} alt = 'loader'></img> \r\n                {!mode && <p>{`Loading ${props.type}`}</p>}\r\n            </div>\r\n    )\r\n}","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst AnimationTitle = styled.h3`\r\n    user-select: none;\r\n    transition: .4s linear all;\r\n    color: ${props => props.dir === 'up' ? 'red' : 'blue'};\r\n`;\r\n\r\nclass AnimationText extends React.PureComponent {\r\n\r\n    state = {\r\n        tilteContent: this.props.content.split(''),\r\n        currentTitle: this.props.content[0],\r\n        positionTitle: 1,\r\n        directionAnimation: 'up',\r\n        msAnimation: this.props.msAnimation,\r\n        msTimeout: this.props.msAnimation,\r\n        msPauseEnd: this.props.msPauseEnd,\r\n    }\r\n\r\n    _isMounted = false;\r\n    timerAnimation = null;\r\n\r\n    animationTitle = timer => {\r\n        let self = this;\r\n        if (this._isMounted)\r\n        timer = setTimeout( function tick(){\r\n\r\n            if (self._isMounted) {\r\n                if (self.state.directionAnimation === 'up'){\r\n                    let counter = self.state.tilteContent.length;\r\n                    const word = counter > self.state.positionTitle ?\r\n                                self.state.tilteContent[self.state.positionTitle] :\r\n                                self.state.tilteContent[self.state.positionTitle-1];\r\n                    self.setState({\r\n                        ...self.state,\r\n                        currentTitle: self.state.currentTitle + word,\r\n                        positionTitle: self.state.positionTitle + 1,\r\n                        directionAnimation: self.state.positionTitle === counter ? 'down' : 'up',\r\n                        msAnimation: self.state.positionTitle === counter ?\r\n                            self.state.msPauseEnd : self.state.msTimeout\r\n                    });\r\n                }\r\n                if (self.state.directionAnimation === 'down'){\r\n                    let _title = self.state.currentTitle;\r\n                    const length = self.state.currentTitle.length;\r\n                    _title = _title.slice(0,length - 1);\r\n                    self.setState({\r\n                        ...self.state,\r\n                        currentTitle: _title,\r\n                        positionTitle: self.state.positionTitle - 1,\r\n                        directionAnimation: self.state.positionTitle === 2 ? 'up' : 'down',\r\n                        msAnimation: self.state.positionTitle === 2 ?\r\n                            self.state.msPauseEnd : self.state.msTimeout\r\n                    });\r\n                }\r\n            timer = setTimeout(tick, self.state.msAnimation);\r\n            }\r\n        }, this.state.msAnimation);\r\n\r\n    }\r\n\r\n\r\n    render(){\r\n        return (\r\n            <AnimationTitle data-titlebuild dir = {this.state.directionAnimation}>\r\n                {this.state.currentTitle}\r\n            </AnimationTitle>\r\n        )\r\n\r\n    }\r\n\r\n    componentDidMount = (e) => {\r\n        this._isMounted = true;\r\n        this.animationTitle(this.timerAnimation);\r\n    }\r\n\r\n    componentWillUnmount = (e) => {\r\n        this._isMounted = false;\r\n        if (this.timerAnimation) clearTimeout(this.timerAnimation);\r\n    }\r\n}\r\n\r\n\r\nexport default AnimationText;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './registration.scss';\r\n\r\nimport withFirebase from '../withFirebase';\r\n\r\n\r\nclass Registration extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        firebase: PropTypes.object.isRequired, /** @firebase class for use firebase functions */\r\n        indexStream: PropTypes.object.isRequired /** @Events stream object */\r\n    }\r\n\r\n    state = {\r\n        firebase: this.props.firebase,\r\n        error: null,\r\n    }\r\n\r\n    emailRef = null;\r\n    passwordRef = null;\r\n\r\n    setRefEmail = (node) => this.emailRef = node;\r\n    setRefPassword = (node) => this.passwordRef = node;\r\n\r\n    createUser = event => {\r\n        /** try to create new user */\r\n        const email = this.emailRef ? this.emailRef.value : null;\r\n        const password = this.passwordRef ? this.passwordRef.value : null;\r\n        const { firebase } = this.props;\r\n\r\n        if (password && email)\r\n        firebase.registration(email, password)\r\n        .then(response => {\r\n            if (!response) throw new Error('Ivaid registration')\r\n            /** if response - true update data user else throw error */\r\n            firebase.db.collection(\"users\").doc(response.user.uid).set({\r\n                'projects': [],\r\n                'email': email,\r\n            }).then(() => this.props.indexStream.emit('EventRegistrationCorrect', response));\r\n        })\r\n        .catch((error) => {\r\n        console.error(error.message);\r\n        this.setState({error: error.message});\r\n        });\r\n        else  return this.setState({error: 'invalid user data'});\r\n    };\r\n\r\n    render(){\r\n        let  { error } = this.state;\r\n        return (\r\n            <div className ='RegistrationBox'>\r\n                <div  className = 'RegistrationBox__RegistrationForm'>\r\n                    <h3>Registration</h3>\r\n                    <form autoComplete = 'off' className = 'RegistrationForm__RegForm'>\r\n                        { error ?\r\n                            <p className = 'error'>{error}</p>\r\n                            : null\r\n                        }\r\n                        <span>E-mail</span>\r\n                        <input placeholder=\"email\" ref = {this.setRefEmail} type = 'text' />\r\n                        <span>Password</span>\r\n                        <input \r\n                            className = 'password' \r\n                            autoComplete = \"off\" \r\n                            ref = {this.setRefPassword} \r\n                            type = 'password' \r\n                            placeholder=\"password\"\r\n                        />\r\n                        <input onClick = {this.createUser}\r\n                                className = 'RegForm__loginButton'\r\n                                type = 'button'\r\n                                value = 'registration'\r\n                        />\r\n                    </form>\r\n                </div>\r\n                </div>\r\n        )\r\n    }\r\n\r\n}\r\nexport default withFirebase(Registration);\r\n","import React, {useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './icon.scss';\r\n\r\nfunction Icon(props){\r\n    const [path] = useState(props.path);\r\n    const [className] = useState(props.className ? props.className : null);\r\n    const [draggable] = useState(props.draggable ? true : false);\r\n\r\n    return (\r\n    <img\r\n        draggable = {draggable}\r\n        onClick = {props.onClick ? props.onClick : null}\r\n        className = {className}\r\n        title = {props.title ? props.title : null}\r\n        src = {process.env.PUBLIC_URL + path } alt = 'icon'>\r\n    </img>\r\n    )\r\n}\r\n\r\nIcon.propTypes = {\r\n    path: PropTypes.string.isRequired, // icon path\r\n    className: PropTypes.string, // class\r\n    draggable: PropTypes.bool // draggable bool\r\n}\r\n\r\nexport default Icon;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Redirect} from 'react-router-dom';\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\r\nimport AnimationText from '../../components/AnimationText/AnimationTitle';\r\nimport Events from 'events';\r\nimport {middlewareLogin} from '../../redux/middleware/loadUserMiddleware';\r\n\r\nimport Loader from '../../components/loading/Loader';\r\nimport Registration from '../../components/Registration/Registration';\r\n\r\nimport {connect} from 'react-redux';\r\n\r\nimport './index.scss';\r\nimport Icon from '../../components/Icon/icon';\r\n\r\n\r\nclass Index extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        active: PropTypes.bool, /** @active - status firebase auth */\r\n        dispatch: PropTypes.func.isRequired, /** @dispatch - redux */\r\n        history: PropTypes.object.isRequired, /** @Router HTML5 history */\r\n        location: PropTypes.object.isRequired, /** @Router */\r\n        match: PropTypes.object.isRequired, /** @Router */\r\n        wrongEnter: PropTypes.string, /** @Error about invalid enter */\r\n        config: PropTypes.object, /** @config - app settings */\r\n    }\r\n\r\n    indexStream = new Events();\r\n\r\n    state = {\r\n        title:  this.props.config.title,\r\n        tryAuth: false,\r\n        registrationActive: false,\r\n        regStatus: false,\r\n        wrongEnter: false,\r\n        error: '',\r\n    }\r\n\r\n    emailImput = null;\r\n    passwordImput = null;\r\n\r\n    statusRegistration = event => {\r\n        /** Update registration status */\r\n        event.additionalUserInfo.isNewUser ?\r\n            this.setState({\r\n                ...this.state,\r\n                regStatus: true,\r\n                registrationActive: false,\r\n                error: 'Account create!'\r\n            })\r\n        : console.error('error registration');\r\n    }\r\n\r\n    showBox = event => {\r\n         /** Show registration box */\r\n        try {\r\n            this.setState ({\r\n                ...this.state,\r\n            registrationActive: this.state.registrationActive ? false : true\r\n            });\r\n        } catch (e) {\r\n        console.error('animation fail');\r\n        }\r\n        event.stopPropagation();\r\n    }\r\n\r\n    authTo = event => {\r\n          /** Auth user */\r\n            if (this.emailImput && this.passwordImput){\r\n                this.setState({\r\n                    ...this.state,\r\n                    tryAuth: true,\r\n                }, () => {\r\n                     this.props.dispatch(middlewareLogin(this.emailImput.value, this.passwordImput.value))\r\n                     .then((res) => this.setState({...this.state,  tryAuth: false}));\r\n                });\r\n            }\r\n            event.stopPropagation();\r\n    }\r\n\r\n    emailRef = node => this.emailImput = node;\r\n    passwordRef = node => this.passwordImput = node;\r\n\r\n    render(){\r\n\r\n        if (this.props.active) return <Redirect to = { '/Cabinet'} />\r\n        else if (!this.props.active) {\r\n            return (\r\n                    <div className = 'LoginPage flex-column'>\r\n                        <h1>{this.state.title}</h1>\r\n                        <div className = 'LoginPage__LoginBox'>\r\n                            <AnimationText\r\n                                content = 'Build your landing page!'\r\n                                msPauseEnd = {1000}\r\n                                msAnimation = {150}\r\n                            />\r\n                            <form className = 'LoginBox__LoginForm'>\r\n                                <h3>Connect form</h3>\r\n                                {this.state.tryAuth &&\r\n                                <Icon\r\n                                    className = 'LoginBox__LoginForm__loader'\r\n                                    path = '/img/loading.gif'\r\n                                />\r\n                                }\r\n                                {(this.props.wrongEnter || this.state.regStatus) && !this.state.tryAuth ?\r\n                                    <p className = 'error'>{this.props.wrongEnter}</p>\r\n                                    : null\r\n                                }\r\n                                    <p>E-mail</p>\r\n                                    <input \r\n                                        autoComplete = 'off'\r\n                                        placeholder=\"email\" \r\n                                        ref = {this.emailRef}\r\n                                        type = 'text' \r\n                                    />\r\n                                    <p>Password</p>\r\n                                    <input \r\n                                        ref = {this.passwordRef} \r\n                                        type = 'password' \r\n                                        autoComplete = 'off'\r\n                                        placeholder=\"password\"\r\n                                    />\r\n                                    <input \r\n                                        onClick = {this.authTo} \r\n                                        className = 'LoginForm__loginButton enterInput'\r\n                                        type = 'button'\r\n                                        value = 'enter' />\r\n                                    <input\r\n                                        onClick = {this.showBox}\r\n                                        className = {this.state.registrationActive ?\r\n                                            `LoginForm__loginButton registration selected` : \r\n                                            'LoginForm__loginButton registration'\r\n                                        }\r\n                                        type = 'button'\r\n                                        value = 'registration'\r\n                                    />\r\n                            </form>\r\n                        </div>\r\n                            <TransitionGroup component={null}>\r\n                                {this.state.registrationActive &&\r\n                                    <CSSTransition\r\n                                        timeout={300}\r\n                                        unmountOnExit\r\n                                        classNames=\"RegAnim\">\r\n                                        <Registration  indexStream = {this.indexStream} />\r\n                                    </CSSTransition>\r\n                                }\r\n                            </TransitionGroup>\r\n                    </div>\r\n            )\r\n        } else  return <Loader path = '/img/loading.gif' type = 'session' />\r\n    }\r\n\r\n    componentDidUpdate = () => {\r\n\r\n    }\r\n\r\n    componentDidMount = (e) => {\r\n        this.indexStream.on('EventRegistrationCorrect', this.statusRegistration);\r\n    }\r\n    componentWillUnmount = (e) => {\r\n        this.indexStream.off('EventRegistrationCorrect', this.statusRegistration);\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        active: state.cabinet.active, \r\n        wrongEnter: state.cabinet.error\r\n    }\r\n  }\r\n\r\nexport default connect(mapStateToProps)(Index);","\r\nimport {errorAction, loadUserAction, loadUpdateCurrentProject} from '../actions';\r\nconst middlewareDelete = item => async (dispatch,getState, {firebase}) => {\r\n    /** Delete some components from project */\r\n    await firebase.db.collection('users').doc(item.uid).get()\r\n    .then(user => user.data())\r\n    .then(data => {\r\n        return {id: item.uid, projects: data.projects.filter(itemdb => itemdb.id !== item.id)};\r\n    })\r\n    .then(data => {\r\n        /** Load update in database */\r\n        firebase.db.collection(\"users\").doc(item.uid).update({\r\n            \"projects\": data.projects\r\n        })\r\n        .then(response => {\r\n            /** update user data */\r\n            dispatch(loadUserAction({uid: item.uid, projects: data.projects}));\r\n        });\r\n    })\r\n    .catch((error) => {\r\n        console.error(error.message);\r\n        dispatch(errorAction(error.message));\r\n    });\r\n}\r\n\r\nconst middlewareDeleteProjectComponent = item => async (dispatch, getState, {firebase}) => {\r\n    /** Delete project */\r\n    await firebase.db.collection('users').doc(item.uid).get()\r\n    .then(user => user.data())\r\n    .then(data => {\r\n        const userProjects = [...data.projects];\r\n        const findProject = userProjects.find(project => item.id === project.id);\r\n        if (!findProject) throw new Error('No found project');\r\n        findProject.components = findProject.components.filter(component =>\r\n            component.id !== item.idComponent\r\n        );\r\n\r\n        if (item && item.type === 'background'){\r\n            findProject.sectionsProject = findProject.sectionsProject.filter(section => {\r\n                return section !== item.idComponent;\r\n            });\r\n        }\r\n        return {dataUpdate: data, findProject: findProject};\r\n    })\r\n    .then(data => {\r\n        let {dataUpdate} = data;\r\n        let {findProject} = data;\r\n        /** update data in database */\r\n        firebase.db.collection(\"users\").doc(item.uid).update({\r\n            \"projects\": dataUpdate.projects\r\n        })\r\n        .then(response => {\r\n            /** update user data */\r\n            dispatch(loadUpdateCurrentProject({\r\n                components: [...findProject.components],\r\n                idProject: item.id,\r\n                sectionsProject: [...findProject.sectionsProject],\r\n            }))\r\n        });\r\n    })\r\n    .catch(error => {\r\n        console.error(error.message);\r\n        dispatch(errorAction(error.message));\r\n        return null;\r\n    });\r\n\r\n    return item.idComponent;\r\n}\r\n\r\nexport {middlewareDeleteProjectComponent};\r\nexport default middlewareDelete;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './Confirm.scss';\r\n\r\nconst Confirm = props => {\r\n\r\n    return (\r\n        <div className = 'wrapperConfirm'>\r\n            <div className = 'confirmSave'>\r\n                <span>Detected new changes</span>\r\n                <input\r\n                    className = 'saveCofirm'\r\n                    onClick = {props.cbSaveChanges}\r\n                    type = 'button'\r\n                    value = 'Save changes'\r\n                />\r\n                <input\r\n                    className = 'cancelCofirm'\r\n                    onClick = {props.cbCancelSave}\r\n                    type = 'button'\r\n                    value = 'Cancel'\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nConfirm.propTypes = {\r\n    cbSaveChanges: PropTypes.func.isRequired, // callback\r\n    cbCancelSave: PropTypes.func.isRequired // callback\r\n}\r\n\r\nexport default Confirm;","import React from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport './header.scss';\r\n\r\nimport {middlewareLogOutUser} from '../../redux/middleware/loadUserMiddleware';\r\nimport {connect} from 'react-redux';\r\nimport {Redirect, withRouter} from 'react-router-dom';\r\n\r\nimport eventEmitter from '../../EventEmitter.js';\r\nimport Icon from '../Icon/icon';\r\nimport Confirm from '../confirmBox/Confirm';\r\n\r\nconst iconPath = require('../../config.json').CabinetIcon;\r\n\r\nclass Header extends React.Component {\r\n\r\n    static propTypes = {\r\n        title: PropTypes.string.isRequired, /** @Config title app */\r\n        cabinetStream: PropTypes.object, /** @Events stream cabinet */\r\n        dispatch: PropTypes.func.isRequired, /** @dispatch redux */\r\n        history: PropTypes.object.isRequired, /** @Router HTML5 history */\r\n        location: PropTypes.object.isRequired, /** @Router */\r\n        match: PropTypes.object, /** @Router */\r\n    };\r\n\r\n    state = {\r\n        idUser: this.props.idUser,\r\n        title: this.props.title,\r\n        isChange: false,\r\n        redirectConfirm: false,\r\n        redirectAbout: {\r\n            path:  '/Cabinet/About',\r\n            redirectA: false,\r\n        },\r\n        redirectCabinet: {\r\n            path:  '/Cabinet',\r\n            redirectC: false,\r\n        },\r\n        redirectGuide: {\r\n            path:  '/Cabinet/Guide',\r\n            redirectG: false,\r\n        }\r\n    };\r\n\r\n    confirm = event => {\r\n        if (typeof event !== 'object')\r\n        this.setState({isChange: event});\r\n        else this.setState({isChange: event.false, redirectConfirm: event.confirm});\r\n    }\r\n\r\n    confirmSaveDetectChanges = event => {\r\n        eventEmitter.emit('EventRedirectSaveChanges');\r\n        this.setState({\r\n            redirectConfirm: false,\r\n            redirectCabinet: {\r\n                ...this.state.redirectCabinet,\r\n                redirectC: true\r\n            }\r\n        });\r\n    };\r\n\r\n    logOut = event => {\r\n        if (this.state.idUser)\r\n            this.props.dispatch(middlewareLogOutUser(this.props.idUser));\r\n        event.stopPropagation();\r\n    };\r\n\r\n    redirectAbout = event => {\r\n        const isPath = this.props.location.pathname !== this.state.redirectAbout.path;\r\n        if (isPath && !this.state.isChange)\r\n           this.setState({\r\n                redirectConfirm: false,\r\n                redirectAbout: {\r\n                   ...this.state.redirectAbout,\r\n                   redirectA: true\r\n               }\r\n           }); else if (!this.state.redirectConfirm) \r\n                this.setState({redirectConfirm: true});\r\n        event.stopPropagation()\r\n    };\r\n\r\n    redirectGuide = event => {\r\n        const isPath = this.props.location.pathname !== this.state.redirectGuide.path;\r\n        if (isPath && !this.state.isChange)\r\n           this.setState({\r\n                redirectConfirm: false,\r\n                redirectGuide: {\r\n                   ...this.state.redirectGuide,\r\n                   redirectG: true\r\n               }\r\n           }); else if (!this.state.redirectConfirm) \r\n                this.setState({redirectConfirm: true});\r\n        event.stopPropagation()\r\n    };\r\n\r\n    redirectCabinet = event => {\r\n        if (event !== 'cancelMode'){\r\n            const isPath = this.props.location.pathname !== this.state.redirectCabinet.path;\r\n            if (isPath && this.state.isChange === false)\r\n            this.setState({\r\n                redirectConfirm: false,\r\n                redirectCabinet: {\r\n                    ...this.state.redirectCabinet,\r\n                    redirectC: true\r\n                }\r\n            });\r\n            else if (!this.state.redirectConfirm) this.setState({redirectConfirm: true});\r\n            event.stopPropagation();\r\n\r\n        } else this.setState({\r\n            redirectConfirm: false,\r\n            redirectCabinet: {\r\n                ...this.state.redirectCabinet,\r\n                redirectC: true\r\n            }\r\n        });\r\n    }\r\n\r\n    add = event => {\r\n        this.props.cabinetStream.emit('EventChangeWorkMode',{active: true, action: 'newProject'});\r\n        event.stopPropagation()\r\n    };\r\n\r\n    render(){\r\n        let {redirectA} = this.state.redirectAbout;\r\n        let {redirectC} = this.state.redirectCabinet;\r\n        let {redirectG} = this.state.redirectGuide;\r\n\r\n        if (redirectA) return <Redirect to = {this.state.redirectAbout.path} />\r\n        if (redirectC) return <Redirect to = {this.state.redirectCabinet.path} />\r\n        if (redirectG) return <Redirect to = {this.state.redirectGuide.path} />\r\n\r\n        return (\r\n            <React.Fragment>\r\n            {this.state.isChange && this.state.redirectConfirm ?\r\n                <Confirm \r\n                    cbSaveChanges = {this.confirmSaveDetectChanges}\r\n                    cbCancelSave = {() => this.redirectCabinet('cancelMode')}\r\n                /> : null}\r\n                <header>\r\n                    <div className = 'container'>\r\n                        <div className = 'flex-row'>\r\n                                <div onClick = {this.redirectCabinet} className = 'header__CabinetInfo'>\r\n                                    <Icon className ='mainIcon' path = {iconPath} />\r\n                                    <h3 className = 'tilteApp'>{this.state.title}</h3>\r\n                                </div>\r\n                                {this.props.location.pathname === '/Cabinet' ?\r\n                                    <div onClick = {this.add} className = 'header__newProject__AddButton'>\r\n                                        <Icon className = 'Cabinet' path = '/img/plus.png' />\r\n                                    </div>\r\n                                    : null\r\n                                }\r\n                                    <div  className = 'Navigator'>\r\n                                        <i title = 'Guide' onClick = {this.redirectGuide} \r\n                                            className=\" about fas fa-2x fa-book\"\r\n                                        />\r\n                                        <Icon className = 'about' onClick = {this.redirectAbout}\r\n                                            title = 'about'\r\n                                            path = '/img/about_logo.svg'\r\n                                        />\r\n                                        <Icon className = 'logoutButton'\r\n                                            onClick = {this.logOut}\r\n                                            title = 'logOut'\r\n                                            path = '/img/logOut.svg'\r\n                                        />\r\n                                    </div>\r\n                        </div>\r\n                </div>\r\n                </header>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n    componentDidlMount = () => {\r\n        eventEmitter.on('EventRedirectConfirm', this.confirm);\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        eventEmitter.off('EventRedirectConfirm', this.confirm);\r\n    }\r\n}\r\n\r\nexport default connect()(withRouter(Header));","import React, {useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport eventEmitter from '../../EventEmitter';\r\n\r\nconst ImageItem = props => {\r\n\r\n    const {selected} = props;\r\n    const [id] = useState(props.id);\r\n    const [urlRegular] = useState(props.urls.regular);\r\n    const [urlFull] = useState(props.urls.full);\r\n    const [isFull] = useState(props.isFull);\r\n    const [urlContent] = useState(props.urlContent);\r\n    const showImageMenu = event => {\r\n\r\n       eventEmitter.emit(\"EventShowMenuImage\",{\r\n            id: id,\r\n            url: urlRegular,\r\n            urlFull: urlFull,\r\n            iframe: urlContent\r\n        });\r\n        event.stopPropagation();\r\n    }\r\n\r\n    return (\r\n        <div className = {selected ? 'ItemBox selected' : 'ItemBox'}>\r\n            <img\r\n                className = 'ImageItem'\r\n                onClick = {showImageMenu}\r\n                src = {isFull ? urlFull : urlRegular}\r\n                alt = 'item'\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nImageItem.propTypes = {\r\n    id: PropTypes.oneOfType([\r\n        PropTypes.string,\r\n        PropTypes.number,\r\n    ]),\r\n    urls: PropTypes.object, // data with image path\r\n    isFull: PropTypes.bool, // mode view\r\n    urlContent: PropTypes.string // content path\r\n}\r\n\r\nexport default ImageItem;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Loader from '../../loading/Loader';\r\n\r\nconst CreateProject = props => {\r\n\r\n    const content = props.content; /** Content */\r\n    const {disabled,validateName,name,validateType,typeClassName} = content;\r\n    const nameLength = name.length; /** Length */\r\n\r\n    let isNumber = props.nameLength >= 4 && props.nameLength <= 20;\r\n\r\n    return (\r\n    <div className = 'Modal Modal__create'>\r\n        <h3>Create new Project</h3>\r\n        { nameLength <= 3 ?\r\n            <span className = 'warning'>{props.warningLengthMin}</span> : null\r\n        }\r\n        { nameLength >= 20 ?\r\n            <span className = 'warning'>{props.warningLengthMax}</span> : null\r\n        }\r\n        {\r\n            isNumber && !validateName ?\r\n            <span className = 'warning'>{props.warningNumber}</span> : null\r\n        }\r\n        <input\r\n            className = {typeClassName ? 'ready' : 'wrong'}\r\n            value = {props.name}\r\n            onChange = {props.cbValidateName}\r\n            type = 'text'\r\n            placeholder = \"Project name\"\r\n        />\r\n        { !validateType ?\r\n            <span className = 'warning'>{props.warningType}</span> : null\r\n        }\r\n        <select onChange = {props.cbSelectOption} >\r\n            <option value = 'empty'>--------</option>\r\n            <option value = 'landing'>Landing</option>\r\n        </select>\r\n        <input \r\n            onClick = {props.cbAddNewProject}\r\n            className = 'acceptButton'\r\n            disabled = {disabled}\r\n            type = 'button'\r\n            value = 'Submit'\r\n        />\r\n        <input onClick = {props.cbCancel} type ='button' value = 'Cancel' />\r\n        {props.loading && <Loader mode = 'create' />}\r\n    </div>\r\n    )\r\n}\r\n\r\nCreateProject.propTypes = {\r\n    content: PropTypes.object, // type color className\r\n    warningType: PropTypes.string, // errors\r\n    warningLengthMax: PropTypes.string, // error max length\r\n    warningLengthMin: PropTypes.string, // error min length\r\n    cbValidateName: PropTypes.func.isRequired, // callback validate\r\n    cbAddNewProject: PropTypes.func.isRequired, // callback add new project\r\n}\r\n\r\nexport default CreateProject;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport eventEmitter from '../../../EventEmitter';\r\nimport Icon from '../../Icon/icon';\r\nimport Loader from '../../loading/Loader';\r\n\r\nclass  SearchModal extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        modalSearchMode: PropTypes.string.isRequired, // search mode\r\n        content: PropTypes.object, // with search data\r\n        cbCancel: PropTypes.func.isRequired, // callback cancel\r\n        cbShowImage: PropTypes.func.isRequired, // callback show image\r\n        cbSetSelectedImage: PropTypes.func.isRequired, // callback show image\r\n    }\r\n\r\n    state = {\r\n        mode: this.props.modalSearchMode,\r\n        items: this.props.images,\r\n    }\r\n\r\n    search = event => {\r\n        /** event search on */\r\n        const value = this.refSearch ? this.refSearch.value : null;\r\n        this.props.cbSearch(event,value, this.props.modalSearchMode);\r\n        event.stopPropagation();\r\n    }\r\n\r\n    refSearch = null;\r\n    refSearchFunc = node => this.refSearch = node;\r\n\r\n    render(){\r\n\r\n        let {content} = this.props;\r\n        return (\r\n            <React.Fragment>\r\n                <div className = 'Modal Modal-search'>\r\n                <h3>\r\n                {this.props.modalSearchMode ? \r\n                    `Search ${this.props.modalSearchMode}` : '' \r\n                }\r\n                </h3>\r\n                { this.props.error ?\r\n                    <span className = 'error'>{content.error}</span> : null\r\n                }\r\n                <div className = 'Modal-search__controllers'>\r\n                    <input ref = {this.refSearchFunc} type = 'text' />\r\n                        <input\r\n                            disabled = {content.dissabled}\r\n                            className = 'acceptButton'\r\n                            type = 'button'\r\n                            value = 'Search'\r\n                            onClick = {this.search}\r\n                        />\r\n                    <input onClick = {this.props.cbCancel} type ='button' value = 'Cancel' />\r\n                </div>\r\n                <div className = 'searchResultBox'>\r\n                    {this.state.items}\r\n                    {this.props.loading ? <Loader type = 'images' /> : null}\r\n                </div>\r\n                </div>\r\n                {  this.props.menuActive ?\r\n                    <div className = 'ActionModalSearch'>\r\n                    <button onClick = {this.props.cbShowImage} className = 'actionModalSearch__view'>\r\n                        <Icon path = '/img/view.png' />\r\n                    </button>\r\n                    <button onClick = {this.props.cbSetSelectedImage} className = 'actionModalSearch__settings'>\r\n                        <Icon path = '/img/settings.png' />\r\n                    </button>\r\n                    </div>\r\n                    : null\r\n                }\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n    componentDidUpdate = (prevProps,prevState) => {\r\n        let {content} = this.props;\r\n        let {content: contentPrev} = prevProps;\r\n        const haveUpdate = (contentPrev.images !== content.images && content.images);\r\n        const isSelected = contentPrev.selectedItem !== content.selectedItem;\r\n        /** update if selected */\r\n        if (haveUpdate || isSelected){\r\n            let _items = this.props.cbMakeImageResultBox(content.images);\r\n            this.setState({\r\n                ...this.state,\r\n                items: [..._items]\r\n            });\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        eventEmitter.emit('EventBlockScroll', 'window');\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        eventEmitter.emit('EventBlockScroll', 'default');\r\n    }\r\n}\r\n\r\nexport default SearchModal;","import React,{Fragment} from 'react';\r\n\r\nimport isFetch from 'isomorphic-fetch';\r\nimport PropTypes from 'prop-types';\r\nimport eventEmitter,{controllerStream} from '../../EventEmitter.js';\r\nimport ImageItem from '../imageViewer/imageItem';\r\n\r\nimport CreateProject from './createProject/createProject';\r\nimport SearchModal from './Search/searchModal';\r\nimport './modal.scss';\r\nrequire('es6-promise').polyfill();\r\n\r\nclass ModalWindow extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        workMode: PropTypes.string.isRequired, /** @Mode for modal */\r\n        cabinetStream: PropTypes.object, /** @Events stream cabinet */\r\n        eventStreamBuild: PropTypes.object, /** @Events stream build */\r\n        idComponent: PropTypes.oneOfType([\r\n            PropTypes.string,\r\n            PropTypes.number\r\n        ]) /** @Id current user project */\r\n    }\r\n\r\n    state = {\r\n        workMode: this.props.workMode,\r\n        loading: false,\r\n        items: [],\r\n        images: {\r\n            loading: false,\r\n            buttonSearchDisabled: false,\r\n            selectedItem: null, \r\n            showUrl: null, \r\n            images: [],\r\n            urlFull: null,\r\n            imageBoxView: false, \r\n            iframe: null,\r\n            error: ''\r\n        },\r\n        newProject: {\r\n            validateName: false,\r\n            validateType: false,\r\n            disabled: true,\r\n            name: '',\r\n            type: 'empty'\r\n        },\r\n        imageMenuActive: false,\r\n        warning: {\r\n            lengthMax: 'Max length: 20 laters',\r\n            warningNumber: `Don't use numbers`,\r\n            lengthMin: 'Min length: 4 letters',\r\n            type: 'Select type of webpage',\r\n        }\r\n    }\r\n\r\n    inputSearch = null;\r\n    inputSelect = null;\r\n\r\n    searchData = (event,value, mode) => {\r\n        /** search images or media */\r\n        this.setState({...this.state, \r\n            images: {\r\n                ...this.state.images,\r\n                loading: true,\r\n                buttonSearchDisabled: true\r\n            }\r\n        });\r\n\r\n        let search = null;\r\n        if (value) search = value;\r\n        else search = this.inputSearch.value;\r\n\r\n        if (mode !== 'media'){\r\n        const modeAPI = 'search/photos/?page=1&per_page=40&query=';\r\n        const api = `https://api.unsplash.com/${modeAPI}`;\r\n \r\n        isFetch(`${api + search}&client_id=${process.env.REACT_APP_UNSPLASH_TOKEN}`)\r\n        .then(response => {\r\n            if (response.ok) return response.json();\r\n            else throw new Error('request invalid');\r\n        })\r\n        .then(response => {\r\n            let {results} = response;\r\n            if (results.length) /** save results */\r\n            this.setState({\r\n                ...this.state,\r\n                images: {\r\n                    ...this.state.images,\r\n                    loading: false,\r\n                    imageBoxView: true,\r\n                    error: '',\r\n                    images: [...results],\r\n                    buttonSearchDisabled: false\r\n                },\r\n            });\r\n            else throw new Error('Photos not found');\r\n        })\r\n        .catch(error => {\r\n            console.error(error.message);\r\n            this.setState({\r\n                ...this.state,\r\n                images: {\r\n                    ...this.state.images,\r\n                    buttonSearchDisabled: false,\r\n                    loading: false,\r\n                    error: error.message},\r\n                imageBoxView: false,\r\n            });\r\n        });\r\n        } else this.searchYouTubeAPI(search);\r\n    }\r\n\r\n\r\n    searchYouTubeAPI = (search) => {\r\n        /** search media */\r\n        const API = `https://www.googleapis.com/youtube/v3/search?part=snippet`;\r\n        const RAITE = `&maxResults=25&order=date&q=${search}`;\r\n        const KEY = `&key=${process.env.REACT_APP_YOUTUBE_SEARCH_TOKEN}`;\r\n        isFetch(API + RAITE + KEY)\r\n        .then(res => {\r\n            if (res.ok)\r\n            return res.json();\r\n            else throw new Error (`Error ${res.status}`);\r\n        })\r\n        .then(res => {\r\n            const arrayItems = [];\r\n            res.items.forEach(item => {\r\n                arrayItems.push({\r\n                    urls: { regular: item.snippet.thumbnails.high.url },\r\n                    videoId: item.id.videoId\r\n                })\r\n            });\r\n            return arrayItems;\r\n        })\r\n        .then(results => {\r\n            this.setState({ /** save results */\r\n                ...this.state,\r\n                images: {\r\n                    ...this.state.images,\r\n                    loading: false,\r\n                    imageBoxView: true,\r\n                    error: '',\r\n                    images: [...results],\r\n                    buttonSearchDisabled: false\r\n                },\r\n            });\r\n        })\r\n        .catch(error => console.error(error));\r\n    }\r\n\r\n    showMenuImage = event => {\r\n        /** tools for show or set content */\r\n        this.setState({\r\n            ...this.state, \r\n            imageMenuActive: true,\r\n            images: {\r\n                ...this.state.images,\r\n                selectedItem: event.id, \r\n                showUrl: event.url,\r\n                urlFull: event.urlFull,\r\n                iframe: event.iframe\r\n\r\n            }\r\n        });\r\n    }\r\n\r\n    showImage = event => {\r\n        /** on viewer */\r\n        const {showUrl, iframe} = this.state.images;\r\n\r\n        this.props.eventStreamBuild.emit(\"EventView\", {\r\n            action: true, \r\n            target: showUrl ? showUrl : null,\r\n            iframe: iframe,\r\n            mode: this.props.modalSearchMode\r\n        });\r\n        event.stopPropagation();\r\n    }\r\n\r\n    setSelectedImage = event => {\r\n        /** set current selected content */\r\n        let data = {...this.state.images};\r\n        if (this.props.modalSearchMode === 'background'){\r\n            controllerStream.emit(`EventSetBackgroundImage${this.props.idComponent}`,data);\r\n            eventEmitter.emit(`EventSetBImageInstumentPanel`,{images: data, mode: this.props.modalSearchMode});\r\n        } else if (this.props.modalSearchMode === 'image'){\r\n            controllerStream.emit(`EventSetCurrentImage${this.props.idComponent}`, data);\r\n            eventEmitter.emit(`EventSetBImageInstumentPanel`, {images: data,  mode: this.props.modalSearchMode });\r\n        } else if (this.props.modalSearchMode === 'media'){\r\n            controllerStream.emit(`EventSetContentMedia${this.props.idComponent}`,{\r\n                    iframe: data.iframe,\r\n                    mode: this.props.modalSearchMode\r\n                }\r\n            );\r\n            eventEmitter.emit(`EventSetIframe`, {iframe: data.iframe});\r\n        }\r\n\r\n        event.stopPropagation();\r\n    };\r\n\r\n    makeImageResultBox = (items) => {\r\n        /** make results */\r\n        if (!items) return null;\r\n        return items.map((item,i) =>{\r\n                return <ImageItem\r\n                            key = {`item${item.videoId}${i}`}\r\n                            id = {i}\r\n                            urlContent = {item.videoId ? item.videoId : null}\r\n                            selected = {this.state.images.selectedItem === i ? true : false} \r\n                            isFull = {false}\r\n                            urls = {item.urls}\r\n                        />\r\n        });\r\n\r\n    }\r\n\r\n    addNewProject = event => {\r\n        /** create new projects modal */\r\n        let mode = this.state[this.state.workMode];\r\n        if (mode.validateType &&  mode.validateName) {\r\n\r\n            this.setState({\r\n                ...this.state,\r\n                loading: true,\r\n            });\r\n            this.props.cabinetStream.emit('EventAddProject',\r\n            {\r\n                title: this.state[this.state.workMode].name,\r\n                type: this.state[this.state.workMode].type\r\n            });\r\n\r\n            this.props.cabinetStream.emit('EventChangeWorkMode',{action: 'default'});\r\n        }\r\n    }\r\n\r\n    selectOption = event => {\r\n        /** type project */\r\n        let inputs = {...this.state[this.state.workMode]};\r\n        inputs.type = event.target.value;\r\n        inputs.validateType = inputs.type !== 'empty';\r\n        inputs.disabled = inputs.validateType && inputs.validateName ? false : true;\r\n        this.setState({\r\n            ...this.state,\r\n            [this.state.workMode]: inputs\r\n        });\r\n    }\r\n\r\n    validateName = event => {\r\n        /** validate name project */\r\n        let inputs = {...this.state[this.state.workMode]};\r\n        inputs.name = event.target.value;\r\n        inputs.validateName = /^\\D{4,20}$/i.test(inputs.name);\r\n        inputs.disabled = inputs.validateType && inputs.validateName ? false : true;\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            [this.state.workMode]: inputs\r\n        })\r\n    };\r\n\r\n    cancel = event => {\r\n        /** remove modal */\r\n        if (this.state.workMode === 'Search')\r\n        this.props.eventStreamBuild.emit(\"EventModalSearchOn\", {action: 'offline', mode: null});\r\n        else  this.props.cabinetStream.emit('EventChangeWorkMode',{active: false, action: 'default'});\r\n    }\r\n\r\n    refSelect = (node) => this.inputSelect = node;\r\n    refSearch = node => this.inputSearch = node;\r\n\r\n\r\n\r\n    render(){\r\n           switch (this.state.workMode){\r\n            case 'newProject':\r\n                return (\r\n                        <CreateProject\r\n                                content = {this.state[this.state.workMode]}\r\n                                warningType = {this.state.warning.type}\r\n                                warningNumber = {this.state.warning.warningNumber}\r\n                                warningLengthMin = {this.state.warning.lengthMin}\r\n                                warningLengthMax = {this.state.warning.lengthMax}\r\n                                cbValidateName = {this.validateName}\r\n                                cbSelectOption = {this.selectOption}\r\n                                cbAddNewProject = {this.addNewProject}\r\n                                cbCancel = {this.cancel}\r\n                                loading = {this.state.loading}\r\n                        />\r\n                )\r\n            case 'Search':\r\n                    return (\r\n                            <div className = 'searchWrapper'> \r\n                                <SearchModal\r\n                                    content = {this.state.images}\r\n                                    cbCancel = {this.cancel}\r\n                                    menuActive = {this.state.imageMenuActive}\r\n                                    cbMakeImageResultBox = {this.makeImageResultBox}\r\n                                    cbShowImage = {this.showImage}\r\n                                    cbSetSelectedImage = {this.setSelectedImage}\r\n                                    modalSearchMode = {this.props.modalSearchMode}\r\n                                    cbSearch = {this.searchData}\r\n                                    loader = {this.state.loading}\r\n                                />\r\n                            </div>\r\n                    )\r\n\r\n            default: return <Fragment></Fragment>\r\n        }\r\n    }\r\n\r\n    componentDidMount = event => {\r\n        if (this.state.workMode === 'Search')\r\n            eventEmitter.on('EventShowMenuImage', this.showMenuImage);\r\n    }\r\n\r\n    componentWillUnmount = event => {\r\n        if (this.state.workMode === 'Search')\r\n            eventEmitter.off('EventShowMenuImage', this.showMenuImage);\r\n    }\r\n}\r\n\r\nexport default ModalWindow;\r\n\r\n","import {createProjectAction, errorAction} from '../actions';\r\n\r\n\r\nfunction random(min){ /** Generate keys */\r\n    return `${Math.floor(min + Math.random() * (10000-min))}`\r\n}\r\n\r\n\r\nconst middlewareCreateProject = (uid, list, title, type) => async (dispatch,getState, {firebase}) => {\r\n    /** Create new project */\r\n    let lastProject = [...list];\r\n    const lastIndex = lastProject.length  ? lastProject[lastProject.length-1].id + 1 : 0;\r\n    const sectionsProject = [];\r\n    if (type === 'portfolio') sectionsProject.push(\"Header\");\r\n    else sectionsProject.push(\"Header\");\r\n    const header = {\r\n        backgroundImage: null,\r\n        backgroundColor: null,\r\n        id: `MainBackgroundHeader${random(0)}`,\r\n        targetSection: \"Header\",\r\n        type: \"background\"\r\n    }\r\n\r\n    lastProject.push({\r\n        id: lastIndex,\r\n        title: title,\r\n        type: type,\r\n        components: [header],\r\n        sectionsProject: [...sectionsProject],\r\n    });\r\n    /** Load project in database */\r\n    await firebase.db.collection(\"users\").doc(uid).update({\r\n        'projects': lastProject,\r\n    })\r\n    .then (() => dispatch(createProjectAction(lastProject)))\r\n    .catch(error => {\r\n        console.error(error.message);\r\n        dispatch(errorAction(error.message));\r\n    })\r\n};\r\n\r\nexport {\r\n    middlewareCreateProject\r\n}","import React, {useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {withRouter, Redirect} from 'react-router-dom';\r\n\r\nfunction Item(props) {\r\n    /** Project item in cabinet */\r\n    const [path] = useState( `/Cabinet/Build/${props.id}`);\r\n    const [productionPath] = useState(`/Cabinet/Build/${props.id}/Production/`);\r\n\r\n    let [canBuild,setCanBuild] = useState(false);\r\n    let [canProd, setCanProd] = useState(false);\r\n\r\n    const [id] = useState(props.id);\r\n    const [name] = useState(props.name);\r\n    const [type] = useState(props.type);\r\n\r\n\r\n    const build = event => {\r\n        if(props.location.pathname !== path)\r\n            setCanBuild(true);\r\n        event.stopPropagation();\r\n    };\r\n\r\n    const showProduction = event => {\r\n        if(props.location.pathname !== path)\r\n        setCanProd(true);\r\n        event.stopPropagation();\r\n    };\r\n\r\n    const deleteItem = event => {\r\n        props.cabinetStream.emit('EventDeleteItem',{\r\n            id: props.id,\r\n            name: props.name,\r\n            type: props.type\r\n        });\r\n        event.stopPropagation();\r\n    };\r\n\r\n\r\n    if (canBuild) return <Redirect to = {path} />\r\n    else if (canProd) return <Redirect to = {productionPath} />\r\n    else return (\r\n            <div className = 'item' data-id = {id}>\r\n                <p className = 'ProjectName'>{name}</p>\r\n                <p className = 'ProjectType'>{type}</p>\r\n                <div className = 'projectController'>\r\n                    <input \r\n                        onClick = {build} \r\n                        className = 'projectControllerButton_enter' \r\n                        type = 'button' \r\n                        value = 'enter build' />\r\n                    <input onClick = {deleteItem} \r\n                        className = 'projectControllerButton_delete' \r\n                        type = 'button' \r\n                        value = 'delete' />\r\n                </div>\r\n                <input onClick = {showProduction} \r\n                    className = 'productionButton' \r\n                    type = 'button' \r\n                    value = 'Production' />\r\n            </div>\r\n        )\r\n}\r\n\r\nItem.propTypes = {\r\n    id: PropTypes.number.isRequired, // id item\r\n    name: PropTypes.string.isRequired, // item name\r\n    type: PropTypes.string.isRequired, // item type\r\n}\r\n\r\nexport default withRouter(Item);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport {middlewareCreateProject} from '../../redux/middleware/createProjectMiddleware';\r\n// import {CSSTransition, TransitionGroup} from 'react-transition-group';\r\nimport './list.scss';\r\n\r\nimport Item from './Item';\r\n\r\nclass List extends React.PureComponent {\r\n    /** List of projects items in cabinet */\r\n    static propTypes = {\r\n        dispatch: PropTypes.func.isRequired, /** @dispatch redux */\r\n        idUser: PropTypes.string.isRequired, /** @UID current user */\r\n        list: PropTypes.array.isRequired, /** @List user projects */\r\n    }\r\n\r\n    state = {\r\n        redirect: false,\r\n    }\r\n\r\n    addNewProject = (item) => {\r\n        if (this.props.idUser) {\r\n            this.props.dispatch(middlewareCreateProject(\r\n                    this.props.idUser,\r\n                    this.props.list,\r\n                    item.title,\r\n                    item.type\r\n                ));\r\n        } else this.setState({...this.state, redirect: true});\r\n    }\r\n\r\n\r\n    makeList = (list) => {\r\n\r\n        return list.map (project => {\r\n\r\n            return(\r\n                <Item\r\n                    key = {project.id}\r\n                    id = {project.id}\r\n                    name = {project.title}\r\n                    type = {project.type}\r\n                    cabinetStream = {this.props.cabinetStream}\r\n                />\r\n            )\r\n        });\r\n    }\r\n\r\n    render(){\r\n        if (this.state.redirect)\r\n            return <Redirect to = { '/'} />\r\n            else return (\r\n                    <div className = 'projectsList__list'>\r\n                        {this.makeList([...this.props.list])}\r\n                    </div>\r\n                )\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.props.cabinetStream.on('EventAddProject',this.addNewProject);\r\n    }\r\n\r\n      componentWillUnmount = () => {\r\n        this.props.cabinetStream.off('EventAddProject',this.addNewProject);\r\n      }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        idUser: state.cabinet.idUser,\r\n        list: [...state.cabinet.projects]\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(List);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport List from '../List/List.jsx';\r\nimport './ProjectsSection.scss';\r\n\r\nconst ProjectsSection = props => {\r\n        return (\r\n            <section className = 'projectsList'>\r\n                <div className = 'container'>\r\n                    <div className = 'flex-column'>\r\n                        <div className = 'projectsList__box'>\r\n                            <h3>Your Projects</h3>\r\n                        </div>\r\n                        <List cabinetStream = {props.cabinetStream} />\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        )\r\n\r\n}\r\n\r\nProjectsSection.propTypes = {\r\n    cabinetStream: PropTypes.object /** @Events stream */\r\n}\r\n\r\nexport default ProjectsSection;","import React,{Fragment} from 'react';\nimport PropTypes from 'prop-types';\nimport {connect} from 'react-redux';\nimport {Redirect} from 'react-router-dom';\nimport {CSSTransition} from 'react-transition-group';\n/* ------- Event stream ------- */\nimport Events from 'events';\n/* ------- HOC for het firebase controll object ------- */\nimport withFirebase from '../../components/withFirebase';\n/* ------- Moddlewares ------- */\nimport {middlewareLogOutUser} from '../../redux/middleware/loadUserMiddleware';\nimport middlewareDelete from '../../redux/middleware/middlewareDelete';\n/* ------- Child components ------- */\nimport Loader from '../../components/loading/Loader';\nimport Header from '../../components/header/Header';\nimport Modal from '../../components/modalWindow/ModalWindow';\nimport ProjectsSection from '../../components/ProjectsSection/ProjectsSection';\nimport './Cabinet.scss';\n\nclass Cabinet extends React.PureComponent {\n\n\tstatic propTypes = {\n\t\tfirebase: PropTypes.object.isRequired, /** @firebase class for use firebase functions */\n\t\tactive: PropTypes.bool, /** @active - status firebase auth */\n\t\tdispatch: PropTypes.func.isRequired, /** @dispatch - redux */\n\t\thistory: PropTypes.object.isRequired, /** @Router HTML5 history */\n\t\tlocation: PropTypes.object.isRequired, /** @Router */\n\t\tmatch: PropTypes.object.isRequired, /** @Router */\n\t\tidUser: PropTypes.string, /** @Session user id from redux */\n\t\tprojects: PropTypes.arrayOf(PropTypes.object).isRequired /** @Projects array with user projects from redux */\n\t}\n\n\tcabinetStream = new Events();\n\n\tstate = {\n\t\tmodalActive: false,\n\t\tworkMode: 'default',\n\t}\n\n\tlogOut = () => {\n\t\t/** destroy session */\n\t\tthis.props.dispatch(middlewareLogOutUser(this.props.idUser));\n\t}\n\n\tdeletItem = event => {\n\t\t/** destroy project */\n\t\tthis.props.dispatch(middlewareDelete({...event, uid: this.props.firebase.getCurrentUser().uid}));\n\t};\n\n\t\tchangeWorkMode = event => {\n\t\t/** workMode changes */\n\t\tthis.setState ({\n\t\t...this.state,\n\t\tmodalActive: event.active,\n\t\tworkMode: event.action\n\t\t});\n\t\t}\n\n\n\trender(){\n\n\t\tif (this.props.active){\n\t\treturn (\n\t\t<Fragment>\n\t\t\t\t<Header cabinetStream = {this.cabinetStream} \n\t\t\t\t\ttitle = {this.props.config.title} \n\t\t\t\t\tidUser = {this.props.idUser} \n\t\t\t\t/>\n\t\t\t\t<div className = 'Cabinet'>\n\t\t\t\t<CSSTransition\n\t\t\t\t\tin={this.state.modalActive}\n\t\t\t\t\ttimeout={300}\n\t\t\t\t\tclassNames=\"modalAnimation\"\n\t\t\t\t\tunmountOnExit\n\t\t\t\t\tappear\n\t\t\t\t>\n\t\t\t\t<Modal\n\t\t\t\t\tcabinetStream = {this.cabinetStream}\n\t\t\t\t\tworkMode = {this.state.workMode} \n\t\t\t\t/>\n\t\t\t\t</CSSTransition>\n\t\t\t\t<ProjectsSection cabinetStream = {this.cabinetStream} />\n\t\t\t\t</div>\n\t\t\t</Fragment>\n\t\t)\n\t\t} else if (!this.props.firebase.getCurrentUser()) return <Redirect to = { '/'} />\n\t\telse return <Loader path = '/img/loading.gif' type = 'Cabinet' />\n\t}\n\n\n\tcomponentDidMount = () => {\n\t\tthis.cabinetStream.on('EventDeleteItem', this.deletItem);\n\t\tthis.cabinetStream.on('EventChangeWorkMode', this.changeWorkMode);\n\t};\n\n\tcomponentWillUnmount = () => {\n\t\tthis.cabinetStream.off('EventDeleteItem', this.deletItem);\n\t\tthis.cabinetStream.off('EventChangeWorkMode', this.changeWorkMode);\n\t}\n}\n\n\tconst mapStateToProps = (state) => {\n\treturn {\n\t\tidUser: state.cabinet.idUser,\n\t\tprojects: [...state.cabinet.projects],\n\t\tactive: state.cabinet.active\n\t}\n\t};\n\n\texport default connect(mapStateToProps)(withFirebase(Cabinet));\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport eventEmitter,{controllerStream} from '../../../EventEmitter';\r\nimport styled from 'styled-components';\r\n\r\n\r\nconst Background = styled.div`\r\n    position: relative;\r\n    width: ${props => props.width || '100%'};\r\n    height: ${props => props.height || '100%'};\r\n    background-color: ${props => props.backgroundColor};\r\n    ${props => props.backgroundImage ? `background-image: url(${props.backgroundImage});` : null}\r\n    background-size: cover;\r\n`;\r\n\r\nclass BackgroundComponent extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        id: PropTypes.string.isRequired,\r\n        targetSection: PropTypes.string.isRequired,\r\n        background: PropTypes.string,\r\n        backgroundImage: PropTypes.string,\r\n        width: PropTypes.string,\r\n        height: PropTypes.string,\r\n        sectionNumber: PropTypes.number,\r\n        mode: PropTypes.string.isRequired\r\n    };\r\n\r\n    state = {\r\n        id: this.props.id,\r\n        targetSection: this.props.targetSection,\r\n        backgroundColor: this.props.background || this.props.color,\r\n        backgroundImage: this.props.backgroundImage,\r\n        width: this.props.width,\r\n        height: this.props.height\r\n    };\r\n\r\n    boxComponent = null; // ref\r\n    boxComponentRef = node => this.boxComponent = node;\r\n\r\n    saveDataParent = () => {\r\n        let boxInform =  this.boxComponent.getBoundingClientRect();\r\n        controllerStream.emit(`EventSaveWidth${this.state.targetSection}`,{\r\n            countSection: this.props.countSection,\r\n            sectionNumber: this.props.sectionNumber,\r\n            size: {width: boxInform.width, height: boxInform.height}\r\n        });\r\n    };\r\n\r\n    openBgInstruments = event => {\r\n\r\n        const componentsPatternBackground = {\r\n            id: this.state.id,\r\n            targetSection: this.state.targetSection,\r\n            type: 'background',\r\n            backgroundColor: this.state.backgroundColor,\r\n            backgroundImage: this.state.backgroundImage,\r\n        }\r\n        eventEmitter.emit('EventInstrumentPanel',{\r\n            componentStats: componentsPatternBackground,\r\n            targetSection: this.state.targetSection,\r\n            type: 'background',\r\n            id: this.state.id,\r\n        });\r\n        event.stopPropagation();\r\n    };\r\n\r\n    changeColor = eventItem => {\r\n        this.setState({\r\n            ...this.state,\r\n            backgroundColor: eventItem.colorRGB\r\n        });\r\n    };\r\n\r\n    setBackgroundImage = event => {\r\n        const {urlFull} = event;\r\n        this.setState({\r\n            ...this.state,\r\n            backgroundImage: urlFull,\r\n        });\r\n    };\r\n\r\n    render(){\r\n            if (this.props.mode === 'dev'){\r\n        return (\r\n            <Background\r\n                key = {this.state.id}\r\n                ref  = {this.boxComponentRef}\r\n                onDoubleClick={this.openBgInstruments}\r\n                data-name = {this.state.targetSection}\r\n                backgroundColor = {this.state.backgroundColor}\r\n                backgroundImage = {this.state.backgroundImage}\r\n                width = {this.state.width}\r\n                height = {this.state.height}\r\n            >\r\n                {this.props.children}\r\n            </Background>\r\n        )\r\n    } else if (this.props.mode === 'production'){\r\n\r\n        return (\r\n            <Background\r\n                key = {this.state.id}\r\n                ref  = {this.boxComponentRef}\r\n                data-name = {this.state.targetSection}\r\n                backgroundColor = {this.state.backgroundColor}\r\n                backgroundImage = {this.state.backgroundImage}\r\n                width = {this.state.width}\r\n                height = {this.state.height}\r\n            >\r\n            {this.props.children}\r\n            </Background>\r\n        )\r\n    }\r\n\r\n    }\r\n\r\n    componentDidUpdate = () => {\r\n        this.saveDataParent();\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.saveDataParent();\r\n        controllerStream.on(`EventChangeColorBackground${this.state.id}`, this.changeColor);\r\n        controllerStream.on(`EventSetBackgroundImage${this.state.id}`, this.setBackgroundImage);\r\n    };\r\n\r\n    componentWillUnmount = () => {\r\n        controllerStream.off(`EventChangeColorBackground${this.state.id}`, this.changeColor);\r\n        controllerStream.off(`EventSetBackgroundImage${this.state.id}`, this.setBackgroundImage);\r\n    };\r\n};\r\n\r\n\r\n\r\nexport default BackgroundComponent;","import React, {Fragment} from 'react';\r\nimport eventEmitter from '../../../EventEmitter';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport BackgroundComponent from '../components/Background';\r\nimport Loader from '../../loading/Loader';\r\n\r\nimport './MainBackground.scss';\r\n\r\nclass MainBackground extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        countComponents: PropTypes.number.isRequired, /** @Number last project */\r\n        menuActive: PropTypes.bool, /** @Bool active menu or unactive */\r\n        id: PropTypes.string.isRequired, /** @id current project */\r\n    };\r\n\r\n    state = {\r\n        targetSection: this.props.id,\r\n        editRedy: false,\r\n        component: null,\r\n        children: null,\r\n    };\r\n\r\n    changeMode = () => {\r\n        if (!this.state.editStart || this.props.id !== this.props.editComponentName) {\r\n            this.setState({\r\n                ...this.state,\r\n                editStart: true\r\n            }, () =>\r\n            eventEmitter.emit('EventModeEdit', {\r\n                ...this.state,\r\n                editStart: true,\r\n                targetSection: this.state.targetSection,\r\n            }));\r\n        }\r\n    };\r\n\r\n    refSection = null;\r\n    refSectionFunc = node => node ? this.refSection = {data: node.getBoundingClientRect(), node: node} : node;\r\n\r\n    render() {\r\n\r\n        if (this.props.mode === 'dev' && this.state.component){\r\n            return (\r\n                <Fragment>\r\n                    <section\r\n                        key = {this.props.sectionNumber}\r\n                        className = {`element${this.props.sectionNumber}`} \r\n                        ref={this.refSectionFunc}\r\n                        data-class = 'editable' \r\n                        onClick = {this.changeMode}\r\n                    >\r\n                        <BackgroundComponent \r\n                            mode = {this.props.mode}\r\n                            sectionNumber = {this.props.sectionNumber}\r\n                            countSection = {this.props.countSection}\r\n                            {...this.state.component}\r\n                        >\r\n                            {this.state.children || null}\r\n                        </BackgroundComponent>\r\n                        {!this.state.editStart &&\r\n                            <div className = 'warningEdit'><p>Click for start edit</p></div>\r\n                        }\r\n                    </section>\r\n                </Fragment>\r\n            );\r\n        } else if (this.props.mode === 'production' && this.state.component){\r\n            return (\r\n                <Fragment>\r\n                    <section \r\n                        key = {this.props.sectionNumber}\r\n                        ref={this.refSectionFunc} \r\n                        data-class = 'production'\r\n                    >\r\n                        <BackgroundComponent\r\n                            key = {this.props.sectionNumber}\r\n                            mode = {this.props.mode}\r\n                            sectionNumber = {this.props.sectionNumber}\r\n                            {...this.state.component}\r\n                        >\r\n                        {this.state.children || null}\r\n                        </BackgroundComponent>\r\n                    </section>\r\n                </Fragment>\r\n            );\r\n        }\r\n        else return <Loader type = {`${this.props.mode} components`} />;\r\n    }\r\n\r\n\r\n    componentDidMount = () => {\r\n        if (!this.state.component){\r\n            let component = this.props.currentProjectsData.components.find(item =>\r\n                                            item.targetSection === this.props.id);\r\n            const children = this.props.componentJSX.filter(item => \r\n                item.targetSection === this.props.id && item.id !== component.id)\r\n                            .map(item => item.component);\r\n           this.setState({\r\n               ...this.state,\r\n               component: component,\r\n               children: children,\r\n           });\r\n        }\r\n    }\r\n\r\n    componentDidUpdate = (prevProps) => {\r\n        const needUpdate = this.props.countComponents !== prevProps.countComponents;\r\n        if (!this.state.component){\r\n            let component = this.props.currentProjectsData.components.find(item =>\r\n                                            item.targetSection === this.props.id);\r\n            const children = this.props.componentJSX.filter(item => item.targetSection === this.props.id)\r\n                            .map(item => item.component);\r\n           this.setState({\r\n               ...this.state,\r\n               component: component,\r\n               children: children,\r\n           });\r\n        }\r\n        if (needUpdate){\r\n            const children = this.props.componentJSX.filter(item => item.targetSection === this.props.id)\r\n            children && this.setState({...this.state,children: children.map(item => item.component) });\r\n        }\r\n    }\r\n}\r\nexport default MainBackground;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport MainBackground from './MainBackground/MainBackground';\r\n\r\n\r\nconst Section = props => {\r\n    if (props.mode === 'dev'){\r\n    const {currentProjectsData} = props.userData;\r\n    const section = currentProjectsData.sectionsProject;\r\n\r\n            return section.map((item,i) => {\r\n                return (\r\n                        <MainBackground\r\n                            key = {item}\r\n                            componentJSX = {props.componentJSX}\r\n                            currentProjectsData = {currentProjectsData}\r\n                            editComponentName = {props.editComponentName}\r\n                            countComponents = {props.componentJSX.length}\r\n                            menuActive = {props.menuActive}\r\n                            sizeParentBox = {props.sizeParentBox}\r\n                            id = {item}\r\n                            countSection = {currentProjectsData.sectionsProject.length}\r\n                            sectionNumber = {i}\r\n                            mode = {props.mode}\r\n                        />\r\n                );\r\n            });\r\n    } else if (props.mode === 'production'){\r\n       const {section} = props;\r\n       const {currentProjectsData} = props;\r\n        return section.map((item,i) => {\r\n            return (\r\n                    <MainBackground\r\n                        key = {item}\r\n                        componentJSX = {props.componentsProdJSX}\r\n                        currentProjectsData = {currentProjectsData}\r\n                        editComponentName = {props.editComponentName}\r\n                        countComponents = {props.componentsProdJSX.length}\r\n                        sizeParentBox = {props.sizeParentBox}\r\n                        id = {item}\r\n                        sectionNumber = {i}\r\n                        mode = {props.mode}\r\n                    />\r\n            );\r\n        });\r\n    }\r\n}\r\n\r\nSection.propTypes = {\r\n    componentJSX: PropTypes.array, /// array with jsx components\r\n    editComponentName: PropTypes.string, // name current edit component\r\n    menuActive: PropTypes.bool, // build menu\r\n    mode: PropTypes.string.isRequired, // curent mode\r\n    sizeParentBox: PropTypes.object, // data with size main component\r\n    userData: PropTypes.object // users data\r\n}\r\n\r\nexport default Section;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport eventEmitter,{controllerStream} from '../../../EventEmitter';\r\nimport styled from 'styled-components';\r\n\r\n\r\nconst InputComponent = styled.input.attrs(props => {\r\n    if (props.mode !== 'production')\r\n    return ({\r\n        style: {\r\n            zIndex: props.indexZ ? '9999' : null,\r\n            left: props.coordX ? props.coordX : '45%',\r\n            top:  props.coordY ? props.coordY : '0%',\r\n        }\r\n    })\r\n})`\r\n    width: ${props => props.size ? props.size.w + 'px' : null};\r\n    color: white;\r\n    height: ${props => props.size ? props.size.h + 'px' : null};\r\n    font-size: ${props => props.fontSize ? props.fontSize + 'px' : null};\r\n    position: absolute;\r\n    background-color: ${props => props.color || null};\r\n    border: ${props => `1px solid ${props.color}`};\r\n    border-radius: ${props => props.borderRadius ? props.borderRadius + 'px' : null};\r\n    white-space: normal;\r\n    font-weight: bold;\r\n    transition: .3s transform linear;\r\n\r\n    :active {\r\n        border: ${props =>`2px dotted ${props.color}`};\r\n        transform: scale(1.05);\r\n    }\r\n`;\r\n\r\nconst ProductionStyle = styled(InputComponent)`\r\n    left: ${props => props.coordX ? props.coordX : '45%'};\r\n    top:  ${props => props.coordY ? props.coordY : '0%'};\r\n`;\r\n\r\n\r\nclass Input extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        id: PropTypes.oneOfType([\r\n            PropTypes.string,\r\n            PropTypes.number\r\n        ]).isRequired,\r\n        targetSection: PropTypes.string.isRequired,\r\n        sizeParentBox: PropTypes.object,\r\n    }\r\n\r\n    state = {\r\n        id: this.props.id,\r\n        istrumentsActive: false,\r\n        getSizeBool: false,\r\n        countSection: 0,\r\n        borderRadius: this.props.borderRadius,\r\n        sectionNumber: 0,\r\n        typeInput: this.props.typeInput || 'button',\r\n        sizeParentBox: this.props.sizeParentBox,\r\n        targetSection: this.props.targetSection,\r\n        size: this.props.size && this.props.size.w ? this.props.size : {w: '100', h:'50'},\r\n        fontSize: this.props.fontSize || 20,\r\n        color: this.props.color || null,\r\n        shiftCoords: null,\r\n        content: this.props.content || 'Input',\r\n        posInput: this.props.coords.x ? {x: this.props.coords.x, y: this.props.coords.y} : null,\r\n        startDragNdrop: false,\r\n    }\r\n\r\n    openInputInstruments = event => {\r\n\r\n        const componentsPatternImage = {\r\n            id: this.state.id,\r\n            targetSection: this.state.targetSection,\r\n            typeInput: this.state.typeInput,\r\n            type: 'input',\r\n            color: this.state.color,\r\n            borderRadius: this.state.borderRadius,\r\n            zIndex: null,\r\n            size: {...this.state.size},\r\n            fontSize: this.state.fontSize,\r\n            content: this.state.content,\r\n            coords: {...this.state.posInput}, // x, y\r\n        }\r\n\r\n        eventEmitter.emit(`EventInstrumentPanel`,{\r\n            componentStats: componentsPatternImage,\r\n            targetSection: this.state.targetSection,\r\n            id: this.state.id,\r\n            sizeTextValue: this.state.size\r\n        });\r\n        this.setState({...this.state, istrumentsActive: true});\r\n        event.stopPropagation();\r\n    };\r\n\r\n    saveCoords = event => {\r\n        if (event.nativeEvent.which !== 1) return false;\r\n        const element = this.refInput.getBoundingClientRect();\r\n\r\n        const cords = {\r\n            left: element.left,\r\n            top: element.top,\r\n            width: element.right - element.left,\r\n            height: element.bottom - element.top\r\n        }\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            shiftCoords: {x: event.clientX - cords.left, y: event.clientY - cords.top},\r\n            startDragNdrop: !this.state.startDragNdrop ? true : false\r\n        });\r\n\r\n        event.stopPropagation();\r\n    };\r\n\r\n    changeSize = eventSize => {\r\n        this.setState({...this.state, size: eventSize.size});\r\n    };\r\n\r\n    changeColor = colorRGB => {\r\n\r\n        if (typeof colorRGB === 'string')\r\n            this.setState({\r\n                ...this.state,\r\n                color: colorRGB\r\n            });\r\n    };\r\n\r\n    changeSizeText = eventSize => {\r\n        this.setState({...this.state, fontSize: eventSize.size});\r\n    };\r\n\r\n    setBorderRadius = eventItem => {\r\n        let radius = eventItem.borderRadius > 200 ? 200 : eventItem.borderRadius;\r\n        radius = eventItem.borderDown < 0 ? 0 : eventItem.borderRadius;\r\n            this.setState({\r\n                ...this.state,\r\n                borderRadius: radius\r\n            });\r\n    };\r\n\r\n    changeContent = eventItem => {\r\n        let booldContent = eventItem.content || eventItem.content === '';\r\n        if (booldContent)\r\n            this.setState({\r\n                ...this.state,\r\n                content: eventItem.content\r\n            });\r\n    }\r\n\r\n\r\n\r\n    checkPivotPosition = (coordX, coordY) => {\r\n\r\n        const element = this.refInput.getBoundingClientRect();\r\n        const borderTopLeft = 0;\r\n        const borderDown = 800 - element.height;\r\n        const borderRight = this.props.sizeParentBox.width - element.width;\r\n\r\n        if (coordY < borderTopLeft) coordY = borderTopLeft;\r\n        if (coordY > borderDown) coordY = borderDown;\r\n        if (coordX < borderTopLeft) coordX = borderTopLeft;\r\n        if (coordX > borderRight) coordX = borderRight;\r\n\r\n        return {x: coordX, y: coordY};\r\n    }\r\n\r\n\r\n    move = (x,y) => this.setState({...this.state, posInput: {x: x, y: y}});\r\n\r\n    moveInput = event => {\r\n\r\n        if (this.state.startDragNdrop && this.state.istrumentsActive){\r\n            let num = this.state.sectionNumber;\r\n            if (this.state.sectionNumber === 1 && this.state.countSection-1 === this.state.sectionNumber)  \r\n                num = this.state.sectionNumber + 1;\r\n            let xItem = event.clientX - (this.props.sizeParentBox.left  * num);\r\n            let yItem = event.clientY - (this.props.sizeParentBox.top * num);\r\n\r\n            let coordX = xItem - this.state.shiftCoords.x;\r\n            let coordY = yItem - this.state.shiftCoords.y;\r\n\r\n            let coords = this.checkPivotPosition(coordX,coordY);\r\n\r\n            let convertToPercentX = coords.x * 100 / this.state.sizeParentBox.width;\r\n            let convertToPercentY = coords.y * 100 / this.state.sizeParentBox.height;\r\n\r\n            this.move(convertToPercentX.toFixed(2) + '%',\r\n                      convertToPercentY.toFixed(2) + '%');\r\n    }\r\n        event.stopPropagation();\r\n    };\r\n\r\n    stopDragNdrop = event => {\r\n        if (this.state.startDragNdrop) {\r\n            this.setState({...this.state, startDragNdrop: false})\r\n            controllerStream.emit(`EventUpdatePosition${this.state.id}`, this.state.posInput);\r\n        }\r\n        event.stopPropagation();\r\n    };\r\n    //currentProjectsData.sectionsProject.length\r\n\r\n    saveSize = event => {\r\n        const {size} = event;\r\n        if (!this.state.getSizeBool){\r\n        this.setState({\r\n            ...this.state,\r\n            getSizeBool: true,\r\n            countSection: event.countSection,\r\n            sectionNumber: event.sectionNumber,\r\n            sizeParentBox: {width: size.width, height: size.height}});\r\n        } else controllerStream.off(`EventSaveWidth${this.state.targetSection}`,this.saveSize);\r\n    }\r\n\r\n    setWidth = eventItem => {\r\n        const {width} = eventItem;\r\n        this.setState({...this.state, \r\n            size: {\r\n                ...this.state.size,\r\n                w: width,\r\n            }\r\n        });\r\n    }\r\n\r\n    setType = eventItem => {\r\n        this.setState({\r\n            ...this.state, \r\n            typeInput: eventItem\r\n        });\r\n    }\r\n\r\n    setHeight = eventItem => {\r\n        const {height} = eventItem;\r\n        this.setState({...this.state, \r\n            size: {\r\n                ...this.state.size,\r\n                h: height,\r\n            }\r\n        });\r\n    }\r\n\r\n    refInput = null;\r\n    refInputComponent = node => this.refInput = node;\r\n\r\n    render(){\r\n\r\n        if (this.props.mode === 'dev'){\r\n            return (\r\n                <InputComponent\r\n                    type = {this.state.typeInput}\r\n                    value = {this.state.content}\r\n                    ref = {this.refInputComponent}\r\n                    size = {this.state.size}\r\n                    color = {this.state.color}\r\n                    borderRadius = {this.state.borderRadius}\r\n                    fontSize = {this.state.fontSize}\r\n                    onClick = {this.openInputInstruments}\r\n                    onMouseDown = {this.saveCoords}\r\n                    onMouseMove= {this.moveInput}\r\n                    onMouseLeave = {this.stopDragNdrop}\r\n                    onMouseUp = {this.stopDragNdrop}\r\n                    onDragStart = {this.stop}\r\n                    coordX = {this.state.posInput ? this.state.posInput.x : null}\r\n                    coordY = {this.state.posInput ? this.state.posInput.y : null}\r\n                    indexZ = {this.state.startDragNdrop}\r\n                    data-imagecomponentwrapper\r\n                />\r\n            )\r\n        } else if (this.props.mode === 'production'){\r\n\r\n            return (\r\n                <ProductionStyle\r\n                    type = {this.state.typeInput}\r\n                    value = {this.state.content}\r\n                    ref = {this.refInputComponent}\r\n                    size = {this.state.size}\r\n                    color = {this.state.color}\r\n                    fontSize = {this.state.fontSize}\r\n                    borderRadius = {this.state.borderRadius}\r\n                    coordX = {this.state.posInput ? this.state.posInput.x : null}\r\n                    coordY = {this.state.posInput ? this.state.posInput.y : null}\r\n                    indexZ = {this.state.startDragNdrop}\r\n                    mode = {this.props.mode}\r\n                />\r\n            )\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        controllerStream.on(`EventSaveWidth${this.state.targetSection}`, this.saveSize);\r\n        controllerStream.on(`EventSetBorderRadius${this.state.id}`, this.setBorderRadius);\r\n        controllerStream.on(`EventChangecolor${this.state.id}`, this.changeColor);\r\n        controllerStream.on(`EventChangeSize${this.state.id}`, this.changeSize);\r\n        controllerStream.on(`EventChangeSizeText${this.state.id}`, this.changeSizeText);\r\n        controllerStream.on(`EventChangeContentText${this.state.id}`, this.changeContent);\r\n        controllerStream.on(`EventSetWidth${this.state.id}`, this.setWidth);\r\n        controllerStream.on(`EventSetType${this.state.id}`, this.setType);\r\n        controllerStream.on(`EventSetHeight${this.state.id}`, this.setHeight);\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        controllerStream.off(`EventSaveWidth${this.state.targetSection}`,this.saveSize);\r\n        controllerStream.off(`EventSetBorderRadius${this.state.id}`, this.setBorderRadius);\r\n        controllerStream.off(`EventChangeSize${this.state.id}`, this.changeSize);\r\n        controllerStream.off(`EventChangeSizeText${this.state.id}`, this.changeSizeText);\r\n        controllerStream.off(`EventChangeContentText${this.state.id}`, this.changeContent);\r\n        controllerStream.off(`EventChangecolor${this.state.id}`, this.changeColor);\r\n        controllerStream.off(`EventSetWidth${this.state.id}`, this.setWidth);\r\n        controllerStream.off(`EventSetType${this.state.id}`, this.setType);\r\n        controllerStream.off(`EventSetHeight${this.state.id}`, this.setHeight);\r\n    }\r\n}\r\n\r\nexport default Input;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport eventEmitter,{controllerStream} from '../../../EventEmitter';\r\nimport styled from 'styled-components';\r\n\r\nconst WrapperMedia = styled.div.attrs(props => {\r\n    if (props.mode !== 'production')\r\n    return ({\r\n        style: {\r\n            zIndex: props.indexZ ? '9999' : null,\r\n            left: props.coordX ? props.coordX : '45%',\r\n            top:  props.coordY ? props.coordY : '0%',\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            padding: props.mode === 'dev' ? '40px' : null\r\n        }\r\n    })\r\n})`\r\n    width: ${props => props.size.w ? props.size.w + '%' : '30%'};\r\n    height: ${props => props.size.h ? props.size.h + '%' : '50%'};\r\n    position: absolute;\r\n    background: ${props => props.mode === 'dev' ? `url(${process.env.PUBLIC_URL}/img/media.svg)` : null};\r\n    background-size: cover;\r\n    border: ${props => props.mode === 'dev' ? `1px solid red` : null};\r\n    padding: 10px;\r\n`;\r\nconst Media = styled.iframe`\r\n    width: 100%;\r\n    height: 100%;\r\n    z-index: ${props => props.zIndex ? '0' : '-1'};\r\n`;\r\n\r\nconst ProductionStyle = styled(WrapperMedia)`\r\n    left: ${props => props.coordX ? props.coordX : '45%'};\r\n    top:  ${props => props.coordY ? props.coordY : '0%'};\r\n`;\r\n\r\nclass MediaComponent extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        id: PropTypes.oneOfType([\r\n            PropTypes.string,\r\n            PropTypes.number\r\n        ]).isRequired,\r\n        targetSection: PropTypes.string.isRequired,\r\n        sizeParentBox: PropTypes.object,\r\n        content: PropTypes.string,\r\n    }\r\n\r\n    state = {\r\n        targetSection: this.props.targetSection,\r\n        id : this.props.id,\r\n        sizeParentBox: this.props.sizeParentBox,\r\n        shiftCoords: null,\r\n        countSection: 0,\r\n        size: this.props.size ? this.props.size : {w: null, h: null},\r\n        posMedia: this.props.coords.x ? {x: this.props.coords.x, y: this.props.coords.y} : null,\r\n        startDragNdrop: false,\r\n        istrumentsActive: false,\r\n        drawContent: false,\r\n        sectionNumber: this.props.sectionNumber,\r\n        content: this.props.content ? this.props.content : null\r\n    }\r\n\r\n    openMediaInstruments = event => {\r\n\r\n        const componentsPatternMedia = {\r\n            id: this.state.id,\r\n            size: this.state.size,\r\n            targetSection: this.state.targetSection,\r\n            type: 'media',\r\n            zIndex: null,\r\n            content: this.state.content,\r\n            coords: {...this.state.posMedia}, // x, y\r\n        }\r\n\r\n        eventEmitter.emit('EventInstrumentPanel',{\r\n            componentStats: componentsPatternMedia,\r\n            targetSection: this.state.targetSection,\r\n            id: this.state.id,\r\n            size: this.state.size,\r\n        });\r\n        this.setState({...this.state, istrumentsActive: true});\r\n        event.stopPropagation();\r\n    }\r\n\r\n    saveCoords = event => {\r\n        if (event.nativeEvent.which !== 1) return false;\r\n        const element = this.refMedia.getBoundingClientRect();\r\n        const cords = {\r\n            left: element.left,\r\n            top: element.top,\r\n            width: element.right - element.left,\r\n            height: element.bottom - element.top\r\n        }\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            shiftCoords: {x: event.clientX - cords.left, y: event.clientY - cords.top},\r\n            startDragNdrop: !this.state.startDragNdrop ? true : false\r\n        });\r\n\r\n        event.stopPropagation();\r\n    };\r\n\r\n    setWidth = eventItem => {\r\n        const {width} = eventItem;\r\n        this.setState({...this.state, \r\n            size: {\r\n                ...this.state.size,\r\n                w: width,\r\n            }\r\n        });\r\n    }\r\n\r\n    setHeight = eventItem => {\r\n        const {height} = eventItem;\r\n        this.setState({...this.state, \r\n            size: {\r\n                ...this.state.size,\r\n                h: height,\r\n            }\r\n        });\r\n    }\r\n\r\n    checkPivotPosition = (coordX, coordY) => {\r\n\r\n        const element = this.refMedia.getBoundingClientRect();\r\n        const borderTopLeft = 0;\r\n        const borderDown = 800 - element.height;\r\n        const borderRight = this.props.sizeParentBox.width - element.width;\r\n\r\n        if (coordY < borderTopLeft) coordY = borderTopLeft;\r\n        if (coordY > borderDown) coordY = borderDown;\r\n        if (coordX < borderTopLeft) coordX = borderTopLeft;\r\n        if (coordX > borderRight) coordX = borderRight;\r\n\r\n        return {x: coordX, y: coordY};\r\n    }\r\n\r\n\r\n    move = (x,y) => this.setState({...this.state, posMedia: {x: x, y: y}});\r\n\r\n    moveMedia = event => {\r\n\r\n        if (this.state.startDragNdrop && this.state.istrumentsActive){\r\n\r\n            let xItem = event.clientX - (this.props.sizeParentBox.left  * this.state.sectionNumber);\r\n            let yItem = event.clientY - (this.props.sizeParentBox.top * this.state.sectionNumber);\r\n\r\n            let coordX = xItem - this.state.shiftCoords.x;\r\n            let coordY = yItem - this.state.shiftCoords.y;\r\n\r\n            let coords = this.checkPivotPosition(coordX,coordY);\r\n\r\n            let convertToPercentX = coords.x * 100 / this.state.sizeParentBox.width;\r\n            let convertToPercentY = coords.y * 100 / this.state.sizeParentBox.height;\r\n\r\n            this.move(convertToPercentX.toFixed(2) + '%',\r\n                      convertToPercentY.toFixed(2) + '%');\r\n    }\r\n        event.stopPropagation();\r\n    };\r\n\r\n    stopDragNdrop = event => {\r\n        if (this.state.startDragNdrop) {\r\n            this.setState({...this.state, startDragNdrop: false})\r\n            controllerStream.emit(`EventUpdatePosition${this.state.id}`, this.state.posMedia);\r\n        }\r\n        event.stopPropagation();\r\n    };\r\n\r\n    setContent = event => {\r\n        const {iframe} = event;\r\n        this.setState({...this.state, content: iframe});\r\n    };\r\n\r\n\r\n    saveSize = event => {\r\n        const {size} = event;\r\n        if (!this.state.getSizeBool){\r\n        this.setState({\r\n            ...this.state,\r\n            getSizeBool: true,\r\n            countSection: event.countSection,\r\n            sectionNumber: event.sectionNumber + 1,\r\n            sizeParentBox: {width: size.width, height: size.height}});\r\n        } else controllerStream.off(`EventSaveWidth${this.state.targetSection}`,this.saveSize);\r\n    }\r\n\r\n    refMedia = null;\r\n    refMediaComponent = node => this.refMedia = node;\r\n\r\n    render(){\r\n        const url = 'https://www.youtube.com/embed/';\r\n\r\n        if (this.props.mode === 'dev'){\r\n            return (\r\n                <WrapperMedia\r\n                    ref = {this.refMediaComponent}\r\n                    onClick={this.openMediaInstruments}\r\n                    onMouseDown = {this.saveCoords}\r\n                    onMouseMove= {this.moveMedia}\r\n                    onMouseLeave = {this.stopDragNdrop}\r\n                    onMouseUp = {this.stopDragNdrop}\r\n                    onDragStart = {this.stop}\r\n                    mode = {this.props.mode}\r\n                    indexZ = {this.state.startDragNdrop}\r\n                    coordX = {this.state.posMedia ? this.state.posMedia.x : null}\r\n                    coordY = {this.state.posMedia ? this.state.posMedia.y : null}\r\n                    size = {this.state.size}\r\n                >\r\n                {!this.state.startDragNdrop ? \r\n                    <Media\r\n                        src= {this.state.content ? url + this.state.content : null }\r\n                        drawContent = {this.state.drawContent}\r\n                        width = {this.state.width} \r\n                        height = {this.state.height}\r\n                        zIndex = {this.state.content}\r\n                        allowfullscreen\r\n                    ></Media> : null\r\n                }\r\n                </WrapperMedia>\r\n            )\r\n        } else if (this.props.mode === 'production'){\r\n            return (\r\n                <ProductionStyle\r\n                    ref = {this.refMediaComponent}\r\n                    indexZ = {this.state.startDragNdrop}\r\n                    size = {this.state.size}\r\n                    coordX = {this.state.posMedia ? this.state.posMedia.x : null}\r\n                    coordY = {this.state.posMedia ? this.state.posMedia.y : null}\r\n                    mode = {this.props.mode}\r\n                >\r\n                {!this.state.startDragNdrop ? \r\n                    <Media\r\n                        src= {this.state.content ? url + this.state.content : null }\r\n                        drawContent = {this.state.drawContent}\r\n                        width = {this.state.width} \r\n                        height = {this.state.height}\r\n                        zIndex = {this.state.content}\r\n                        mode = {this.props.mode}\r\n                        allowfullscreen\r\n                    ></Media> : null\r\n                }\r\n                </ProductionStyle>\r\n            )\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        controllerStream.on(`EventSetContentMedia${this.state.id}`, this.setContent);\r\n        controllerStream.on(`EventSaveWidth${this.state.targetSection}`, this.saveSize);\r\n        controllerStream.on(`EventSetWidth${this.state.id}`, this.setWidth);\r\n        controllerStream.on(`EventSetHeight${this.state.id}`, this.setHeight); \r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        controllerStream.off(`EventSaveWidth${this.state.targetSection}`,this.saveSize);\r\n        controllerStream.off(`EventSetContentMedia${this.state.id}`, this.setContent);\r\n        controllerStream.off(`EventSetWidth${this.state.id}`, this.setWidth);\r\n        controllerStream.off(`EventSetHeight${this.state.id}`, this.setHeight); \r\n    }\r\n}\r\n\r\nexport default MediaComponent;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport eventEmitter,{controllerStream} from '../../../EventEmitter';\r\nimport styled from 'styled-components';\r\n\r\n\r\nconst WrapperImg = styled.div.attrs(props => {\r\n    if (props.mode !== 'production')\r\n    return ({\r\n        style: {\r\n            zIndex: props.indexZ ? '9999' : null,\r\n            transform: `rotateZ(${props.rotate}deg) scale(${props.scale})`,\r\n            left: props.coordX ? props.coordX : '45%',\r\n            top:  props.coordY ? props.coordY : '0',\r\n            transition: `transform  0.3s linear`,\r\n        }\r\n    })\r\n})`\r\n    width: ${props => props.size ? props.size.w + '%' : '30%'};\r\n    height: ${props => props.size ? props.size.h + '%' : '50%'};\r\n    position: absolute;\r\n`;\r\n\r\nconst ImageStyle = styled.img`\r\n    width: 100%;\r\n    height: 100%;\r\n    opacity: ${props => props.opacity};\r\n    border-radius: ${props => props.borderRadius}px;\r\n    position: absolute;\r\n`;\r\n\r\nconst ProductionStyle = styled(WrapperImg)`\r\n    left: ${props => props.coordX ? props.coordX : '50%'};\r\n    top:  ${props => props.coordY};\r\n    transform: rotate(${props => props.rotate}deg) scale(${props => props.scale});\r\n`;\r\n\r\nclass Image extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        id: PropTypes.oneOfType([\r\n            PropTypes.string,\r\n            PropTypes.number\r\n        ]).isRequired,\r\n        targetSection: PropTypes.string.isRequired,\r\n        sizeParentBox: PropTypes.object,\r\n    }\r\n\r\n    state = {\r\n        id: this.props.id,\r\n        istrumentsActive: false,\r\n        getSizeBool: false,\r\n        countSection: 0,\r\n        opacity: this.props.opacity || 1,\r\n        transformValue: this.props.rotate || 0,\r\n        scaleValue: this.props.scale || 1,\r\n        sectionNumber: 0,\r\n        borderRadius: this.props.borderRadius || 0,\r\n        sizeParentBox: this.props.sizeParentBox,\r\n        targetSection: this.props.targetSection,\r\n        path: this.props.image ? this.props.image : this.props.path,\r\n        size: this.props.size ? this.props.size : {w: 30, h: 50},\r\n        shiftCoords: null,\r\n        posImage: this.props.coords.x ? {x: this.props.coords.x, y: this.props.coords.y} : null,\r\n        startDragNdrop: false,\r\n    }\r\n\r\n    openImageInstruments = event => {\r\n\r\n        const componentsPatternImage = {\r\n            id: this.state.id,\r\n            targetSection: this.state.targetSection,\r\n            size: {...this.state.size},\r\n            type: 'image',\r\n            rotate: this.state.transformValue,\r\n            scale: this.state.scaleValue,\r\n            borderRadius: this.state.borderRadius,\r\n            opacity: this.state.opacity,\r\n            zIndex: null,\r\n            image: this.state.path,\r\n            coords: {...this.state.posImage}, // x, y\r\n        }\r\n\r\n        eventEmitter.emit(`EventInstrumentPanel`,{\r\n            componentStats: componentsPatternImage,\r\n            targetSection: this.state.targetSection,\r\n            id: this.state.id,\r\n            sizeTextValue: this.state.size\r\n        });\r\n        this.setState({...this.state, istrumentsActive: true});\r\n        event.stopPropagation();\r\n    };\r\n\r\n    saveCoords = event => {\r\n        if (event.nativeEvent.which !== 1) return false;\r\n        const element = this.refImage.getBoundingClientRect();\r\n\r\n        const cords = {\r\n            left: element.left,\r\n            top: element.top,\r\n            width: element.right - element.left,\r\n            height: element.bottom - element.top\r\n        }\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            shiftCoords: {x: event.clientX - cords.left, y: event.clientY - cords.top},\r\n            startDragNdrop: !this.state.startDragNdrop ? true : false\r\n        });\r\n\r\n        event.stopPropagation();\r\n    };\r\n\r\n    checkPivotPosition = (coordX, coordY) => {\r\n\r\n        const element = this.refImage.getBoundingClientRect();\r\n        const borderTopLeft = 0;\r\n        const borderDown = 800 - element.height;\r\n        const borderRight = this.props.sizeParentBox.width - element.width;\r\n\r\n        if (coordY < borderTopLeft) coordY = borderTopLeft;\r\n        if (coordY > borderDown) coordY = borderDown;\r\n        if (coordX < borderTopLeft) coordX = borderTopLeft;\r\n        if (coordX > borderRight) coordX = borderRight;\r\n\r\n        return {x: coordX, y: coordY};\r\n    }\r\n\r\n    rotateEvent = eventItem => {\r\n        const angle = eventItem.angle;\r\n        this.setState({\r\n            ...this.state,\r\n            transformValue: angle,\r\n        });\r\n    }\r\n\r\n    scaleEvent = eventItem => {\r\n        const scale = eventItem.scale;\r\n        this.setState({\r\n            ...this.state,\r\n            scaleValue: scale,\r\n        });\r\n    }\r\n\r\n    move = (x,y) => this.setState({...this.state, posImage: {x: x, y: y}});\r\n\r\n    moveText = event => {\r\n\r\n        if (this.state.startDragNdrop && this.state.istrumentsActive){\r\n            const element = this.refImage.getBoundingClientRect();\r\n            let xItem = event.clientX - (this.props.sizeParentBox.left  * this.state.sectionNumber);\r\n            let yItem = event.clientY - (this.props.sizeParentBox.top * this.state.sectionNumber);\r\n            let factorCoord = this.diffAngle(parseInt(this.state.transformValue),element.height,element.width);\r\n\r\n            let coordX = xItem - this.state.shiftCoords.x + factorCoord.xFacotr;\r\n            let coordY = yItem - 61 - this.state.shiftCoords.y + factorCoord.yFactor;\r\n\r\n            let coords = this.checkPivotPosition(coordX,coordY);\r\n\r\n            let convertToPercentX = coords.x * 100 / this.state.sizeParentBox.width;\r\n            let convertToPercentY = coords.y * 100 / this.state.sizeParentBox.height;\r\n\r\n            this.move(convertToPercentX.toFixed(2) + '%',\r\n                      convertToPercentY.toFixed(2) + '%');\r\n    }\r\n        event.stopPropagation();\r\n    };\r\n\r\n\r\n    diffAngle = (transform, height, width) => {\r\n\r\n        let powHeight = height**2;\r\n        let powWidth =  width**2;\r\n\r\n        let pythagoras = Math.sqrt(powHeight + powWidth) / 2;\r\n        let _angle = Math.atan(height / width);\r\n        let angle = Math.atan(width / height);\r\n\r\n        let _biasFactor = 1;\r\n        let biasFactor = 1;\r\n\r\n        if (transform < 0 || transform > 180)\r\n            _biasFactor = - 1;\r\n        if (transform > 90 && transform < 270)\r\n            biasFactor= -1;\r\n\r\n        transform = transform * (Math.PI/180);\r\n\r\n        let sinX = Math.sin(biasFactor * angle + _biasFactor * transform);\r\n        let sinY = Math.sin(biasFactor* _angle + _biasFactor * transform);\r\n\r\n        let xFacotr = pythagoras*(-Math.sin(angle)+sinX);\r\n        let yFactor = pythagoras*(-Math.sin(_angle)+sinY);\r\n\r\n        return {xFacotr, yFactor}\r\n    };\r\n\r\n    stopDragNdrop = event => {\r\n        if (this.state.startDragNdrop) {\r\n            this.setState({...this.state, startDragNdrop: false})\r\n            controllerStream.emit(`EventUpdatePosition${this.state.id}`, this.state.posImage);\r\n        }\r\n        event.stopPropagation();\r\n    };\r\n\r\n    setCurrentImage = event => {\r\n        const {urlFull} = event;\r\n        this.setState({...this.state, path: urlFull});\r\n    };\r\n\r\n    setWidth = eventItem => {\r\n        const {width} = eventItem;\r\n        this.setState({...this.state, \r\n            size: {\r\n                ...this.state.size,\r\n                w: width,\r\n            }\r\n        });\r\n    }\r\n\r\n    setHeight = eventItem => {\r\n        const {height} = eventItem;\r\n        this.setState({...this.state, \r\n            size: {\r\n                ...this.state.size,\r\n                h: height,\r\n            }\r\n        });\r\n    }\r\n\r\n    saveSize = event => {\r\n        const {size} = event;\r\n        if (!this.state.getSizeBool){\r\n        this.setState({\r\n            ...this.state,\r\n            getSizeBool: true,\r\n            countSection: event.countSection,\r\n            sectionNumber: event.sectionNumber,\r\n            sizeParentBox: {width: size.width, height: size.height}});\r\n        } else controllerStream.off(`EventSaveWidth${this.state.targetSection}`,this.saveSize);\r\n    }\r\n\r\n    changeSizeImage = eventItem => {\r\n        this.setState({...this.state, size: eventItem.size});\r\n    };\r\n\r\n    setBorderRadius = eventItem => {\r\n\r\n    let radius = eventItem.borderRadius > 200 ? 200 : eventItem.borderRadius;\r\n    radius = eventItem.borderDown < 0 ? 0 : eventItem.borderRadius;\r\n        this.setState({\r\n            ...this.state,\r\n            borderRadius: radius\r\n        });\r\n    };\r\n\r\n    setOpacity = eventItem => {\r\n        let opacity = eventItem.opacity > 1 ? 1 : eventItem.opacity;\r\n        opacity = eventItem.opacity < 0 ? 0 : eventItem.opacity;\r\n            this.setState({\r\n                ...this.state,\r\n                opacity: opacity\r\n            });\r\n    }\r\n\r\n    stopDrag = event => {\r\n        event.preventDefault();\r\n    }\r\n \r\n    refImage = null;\r\n    refImageComponent = node => this.refImage = node;\r\n\r\n    render(){\r\n\r\n        if (this.props.mode === 'dev'){\r\n            return (\r\n                <WrapperImg\r\n                ref = {this.refImageComponent}\r\n                size = {this.state.size}\r\n                rotate = {this.state.transformValue}\r\n                scale = {this.state.scaleValue}\r\n                onClick = {this.openImageInstruments}\r\n                onMouseDown = {this.saveCoords}\r\n                onMouseMove= {this.moveText}\r\n                onMouseLeave = {this.stopDragNdrop}\r\n                onMouseUp = {this.stopDragNdrop}\r\n                onDragStart = {this.stopDrag}\r\n                coordX = {this.state.posImage ? this.state.posImage.x : null}\r\n                coordY = {this.state.posImage ? this.state.posImage.y : null}\r\n                indexZ = {this.state.startDragNdrop}\r\n                data-imagecomponentwrapper\r\n                >\r\n                    <ImageStyle\r\n                        data-imagecomponent\r\n                        borderRadius = {this.state.borderRadius}\r\n                        onDragStart = {this.stopDrag}\r\n                        opacity = {this.state.opacity}\r\n                        src = {this.state.path}\r\n                        alt = 'img'\r\n                    />\r\n                </WrapperImg>\r\n            )\r\n        } else if (this.props.mode === 'production'){\r\n            return (\r\n                <ProductionStyle\r\n                ref = {this.refImageComponent}\r\n                size = {this.state.size}\r\n                rotate = {this.state.transformValue}\r\n                scale = {this.state.scaleValue}\r\n                mode = {this.props.mode}\r\n                coordX = {this.state.posImage ? this.state.posImage.x : null}\r\n                coordY = {this.state.posImage ? this.state.posImage.y : null}\r\n                indexZ = {this.state.startDragNdrop}\r\n                >\r\n                    <ImageStyle\r\n                        borderRadius = {this.state.borderRadius}\r\n                        opacity = {this.state.opacity}\r\n                        crossOrigin = \"anonymous\"\r\n                        src = {this.state.path}\r\n                        alt = 'img'\r\n                    />\r\n                </ProductionStyle>\r\n            )\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        controllerStream.on(`EventSetCurrentImage${this.state.id}`, this.setCurrentImage);\r\n        controllerStream.on(`EventChangeSize${this.state.id}`, this.changeSizeImage);\r\n        controllerStream.on(`EventSetOpacity${this.state.id}`, this.setOpacity);\r\n        controllerStream.on(`EventSetBorderRadius${this.state.id}`,this.setBorderRadius);\r\n        controllerStream.on(`EventSetWidth${this.state.id}`, this.setWidth);\r\n        controllerStream.on(`EventSetHeight${this.state.id}`, this.setHeight); \r\n        controllerStream.on(`EventResize${this.state.id}`,this.rotateEvent);\r\n        controllerStream.on(`EventScale${this.state.id}`,this.scaleEvent);\r\n        controllerStream.on(`EventSaveWidth${this.state.targetSection}`, this.saveSize);\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n       \r\n        controllerStream.off(`EventChangeSize${this.state.id}`, this.changeSizeImage);\r\n        controllerStream.off(`EventSetOpacity${this.state.id}`, this.setOpacity);\r\n        controllerStream.off(`EventSetBorderRadius${this.state.id}`,this.setBorderRadius);\r\n        controllerStream.off(`EventSetCurrentImage${this.state.id}`, this.setCurrentImage);\r\n        controllerStream.off(`EventSetWidth${this.state.id}`, this.setWidth);\r\n        controllerStream.off(`EventSetHeight${this.state.id}`, this.setHeight); \r\n        controllerStream.off(`EventResize${this.state.id}`,this.rotateEvent);\r\n        controllerStream.off(`EventScale${this.state.id}`,this.scaleEvent);\r\n        controllerStream.off(`EventSaveWidth${this.state.targetSection}`,this.saveSize);\r\n    }\r\n}\r\n\r\nexport default Image;","\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport eventEmitter,{controllerStream} from '../../../EventEmitter';\r\nimport Events from 'events';\r\nimport styled from 'styled-components';\r\n\r\nimport './components.scss';\r\n\r\n\r\n\r\nconst WrapperText = styled.div.attrs(props => {\r\n    if (props.mode !== 'production')\r\n    return ({\r\n        style: {\r\n            zIndex: props.indexZ ? '9999' : null,\r\n            transform: `rotateZ(${props.rotate}deg) scale(${props.scale})`,\r\n            left: props.coordX ? props.coordX : '50%',\r\n            top:  props.coordY,\r\n            transition: `transform  0.3s linear`,\r\n        }\r\n    })\r\n})`\r\n    position: absolute;\r\n    font-size: ${props => props.size ? props.size : '120px'};\r\n    color: ${props => props.textColor};\r\n    text-align: center;\r\n    margin: 0;\r\n    word-break: break-all;\r\n`;\r\n\r\nconst TextStyle = styled.p`\r\n    width: 100%;\r\n    height: 100%;\r\n    font-family: ${props => props.font};\r\n    text-align: center;\r\n    margin: 0;\r\n    user-select: none;\r\n`;\r\n\r\n\r\nconst ProductionStyle = styled(WrapperText)`\r\n    left: ${props => props.coordX ? props.coordX : '50%'};\r\n    top:  ${props => props.coordY};\r\n    transform: rotate(${props => props.rotate}deg) scale(${props => props.scale});\r\n`;\r\n\r\n\r\nclass TextComponent extends React.PureComponent {\r\n\r\n    resizeStream = new Events();\r\n\r\n    static propTypes = {\r\n        id: PropTypes.oneOfType([\r\n            PropTypes.string,\r\n            PropTypes.number\r\n        ]).isRequired,\r\n        targetSection: PropTypes.string.isRequired,\r\n        sizeParentBox: PropTypes.object,\r\n        mode: PropTypes.string.isRequired,\r\n    }\r\n\r\n    state = {\r\n        id: this.props.id,\r\n        istrumentsActive: false,\r\n        isHaveSize: false,\r\n        parent: this.props.sizeParentBox,\r\n        targetSection: this.props.targetSection,\r\n        colorText: this.props.color,\r\n        sizeText: this.props.fontSize || this.props.size,\r\n        shiftCoords: null,\r\n        position: this.props.coords,\r\n        transformValue: this.props.rotate || 0,\r\n        scaleValue: this.props.scale || 1,\r\n        font: this.props.font ? this.props.font : 'Arial',\r\n        startDragNdrop: false,\r\n        contentText: this.props.content ? this.props.content : null,\r\n        countSection: 0,\r\n        sectionNumber: 0,\r\n        getSizeBool: false,\r\n    }\r\n\r\n    openTitleInstruments = event => {\r\n         const componentsPatternText = {\r\n            id: this.state.id,\r\n            targetSection: this.state.targetSection,\r\n            type: 'text',\r\n            rotate: this.state.transformValue,\r\n            scale: this.state.scaleValue,\r\n            font: this.state.font,\r\n            color: this.state.colorText,\r\n            fontSize: this.state.sizeText || 120,\r\n            content: this.state.contentText,\r\n            coords: {...this.state.position}, // x, y\r\n        };\r\n        eventEmitter.emit(`EventInstrumentPanel`,{\r\n                type: 'text',\r\n                targetSection: this.state.targetSection,\r\n                id: this.state.id,\r\n                componentStats: componentsPatternText,\r\n                sizeTextValue: this.state.sizeText\r\n        });\r\n        this.setState({...this.state, istrumentsActive: true});\r\n        event.stopPropagation();\r\n    }\r\n\r\n    changeColorText = colorRGB => {\r\n        if (typeof colorRGB === 'string')\r\n            this.setState({\r\n                ...this.state,\r\n                colorText: colorRGB\r\n            });\r\n    };\r\n\r\n    changeSizeText = eventSize => {\r\n        this.setState({...this.state, sizeText: eventSize.size});\r\n    };\r\n\r\n    saveSize = event => {\r\n        const {size} = event;\r\n        if (!this.state.getSizeBool){\r\n        this.setState({\r\n            ...this.state,\r\n            getSizeBool: true,\r\n            countSection: event.countSection,\r\n            sectionNumber: event.sectionNumber,\r\n            parent: {width: size.width, height: size.height}});\r\n        } else controllerStream.off(`EventSaveWidth${this.state.targetSection}`,this.saveSize);\r\n    }\r\n\r\n    changeContentText = eventContent => {\r\n        let booldContent = eventContent.content || eventContent.content === '';\r\n        if (booldContent)\r\n            this.setState({\r\n                ...this.state,\r\n                contentText: eventContent.content\r\n            });\r\n    };\r\n\r\n    saveCoords = event => {\r\n        const element = this.refText.getBoundingClientRect();\r\n        const cords = {\r\n            left: element.left,\r\n            top: element.top,\r\n            width: element.right - element.left,\r\n            height: element.bottom - element.top\r\n        }\r\n\r\n        const resizeStart = event.target.classList[0] === 'resizeDoted'\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            shiftCoords: {x: event.clientX - cords.left, y: event.clientY - cords.top},\r\n            startDragNdrop: !this.state.startDragNdrop ? true : false,\r\n            resizeStart: resizeStart,\r\n        });\r\n\r\n        event.stopPropagation();\r\n    };\r\n\r\n    setFont = eventItem => {\r\n        this.setState({\r\n            ...this.state,\r\n            font: eventItem.font\r\n        });\r\n    };\r\n\r\n    checkPivotPosition = (coordX, coordY) => {\r\n        const element = this.refText.getBoundingClientRect();\r\n        const borderTopLeft = 0;\r\n        const borderDown = 800 - element.height;\r\n        const borderRight = this.props.sizeParentBox.width - element.width;\r\n\r\n        if (coordY < borderTopLeft) coordY = borderTopLeft;\r\n        if (coordY > borderDown) coordY = borderDown;\r\n        if (coordX < borderTopLeft) coordX = borderTopLeft;\r\n        if (coordX > borderRight) coordX = borderRight;\r\n\r\n        return {x: coordX, y: coordY};\r\n    }\r\n\r\n    move = (x,y) => this.setState({...this.state, position: {x: x, y: y}});\r\n\r\n    moveText = event => {\r\n        if (this.state.startDragNdrop && this.state.istrumentsActive){\r\n            const element = this.refText.getBoundingClientRect();\r\n            let sectionNum = this.state.sectionNumber === 0 ? 1 : this.state.sectionNumber;\r\n            let xItem = event.clientX - (this.props.sizeParentBox.left  * sectionNum);\r\n            let yItem = event.clientY - (this.props.sizeParentBox.top * sectionNum);\r\n            let factorCoord = this.diffAngle(parseInt(this.state.transformValue),element.height,element.width);\r\n\r\n            let coordX = xItem - this.state.shiftCoords.x + factorCoord.xFacotr;\r\n            let coordY = yItem - this.state.shiftCoords.y + factorCoord.yFactor;\r\n\r\n            let coords = this.checkPivotPosition(coordX,coordY);\r\n\r\n            let convertToPercentX = coords.x * 100 / this.state.parent.width;\r\n            let convertToPercentY = coords.y * 100 / this.state.parent.height;\r\n\r\n            this.move(convertToPercentX.toFixed(2) + '%',\r\n                      convertToPercentY.toFixed(2) + '%');\r\n        }\r\n        event.stopPropagation();\r\n    };\r\n\r\n\r\n    rotateEvent = eventItem => {\r\n        const angle = eventItem.angle;\r\n        this.setState({\r\n            ...this.state,\r\n            transformValue: angle,\r\n        });\r\n    }\r\n\r\n    scaleEvent = eventItem => {\r\n        const scale = eventItem.scale;\r\n        this.setState({\r\n            ...this.state,\r\n            scaleValue: scale,\r\n        });\r\n    }\r\n\r\n    diffAngle = (transform, height, width) => {\r\n\r\n        let powHeight = height**2;\r\n        let powWidth =  width**2;\r\n\r\n        let pythagoras = Math.sqrt(powHeight + powWidth) / 2;\r\n        let _angle = Math.atan(height / width);\r\n        let angle = Math.atan(width / height);\r\n\r\n        let _biasFactor = 1;\r\n        let biasFactor = 1;\r\n\r\n        if (transform < 0 || transform > 180)\r\n            _biasFactor = - 1;\r\n        if (transform > 90 && transform < 270)\r\n            biasFactor= -1;\r\n\r\n        transform = transform * (Math.PI/180);\r\n\r\n        let sinX = Math.sin(biasFactor * angle + _biasFactor * transform);\r\n        let sinY = Math.sin(biasFactor* _angle + _biasFactor * transform);\r\n\r\n        const xFacotr = pythagoras * (-Math.sin(angle) + sinX);\r\n        const yFactor = pythagoras * (-Math.sin(_angle) + sinY);\r\n\r\n        return {xFacotr, yFactor}\r\n    };\r\n\r\n\r\n    stopDragNdrop = event => {\r\n\r\n        if (this.state.startDragNdrop)\r\n            this.setState({...this.state, startDragNdrop: false},\r\n            () => controllerStream.emit(`EventUpdatePosition${this.state.id}`, this.state.position));\r\n        event.stopPropagation();\r\n    };\r\n\r\n    \r\n    stopDrag = event => {\r\n        event.preventDefault();\r\n    }\r\n\r\n    refText = null;\r\n    refTextComponent = node => this.refText = node;\r\n\r\n\r\n    render(){\r\n        if (this.props.mode === 'dev'){\r\n            return (\r\n                <WrapperText\r\n                    ref  = {this.refTextComponent}\r\n                    onClick={this.openTitleInstruments}\r\n                    textColor = {this.state.colorText ? this.state.colorText : 'red'}\r\n                    size = {this.state.sizeText ? this.state.sizeText + 'px' : '120px'}\r\n                    onMouseDown = {this.saveCoords}\r\n                    onMouseMove= {this.moveText}\r\n                    onMouseLeave = {this.stopDragNdrop}\r\n                    onMouseUp = {this.stopDragNdrop}\r\n                    rotate = {this.state.transformValue}\r\n                    onDragStart = {this.stopDrag}\r\n                    scale = {this.state.scaleValue}\r\n                    coordX = {this.state.position ? this.state.position.x : null}\r\n                    coordY = {this.state.position ? this.state.position.y : null}\r\n                    indexZ = {this.state.startDragNdrop}\r\n                    data-textcomponent\r\n                >\r\n                    <TextStyle font = {this.state.font}>{this.state.contentText}</TextStyle>\r\n                </WrapperText>\r\n            ) \r\n        } else if (this.props.mode === 'production'){\r\n            return (\r\n                <ProductionStyle\r\n                    ref  = {this.refTextComponent}\r\n                    mode = {this.props.mode}\r\n                    scale = {this.state.scaleValue}\r\n                    rotate = {this.state.transformValue}\r\n                    textColor = {this.state.colorText ? this.state.colorText : 'red'}\r\n                    size = {this.state.sizeText ? this.state.sizeText + 'px' : '120px'}\r\n                    coordX = {this.state.position ? this.state.position.x : null}\r\n                    coordY = {this.state.position ? this.state.position.y : null}\r\n                    indexZ = {this.state.startDragNdrop}\r\n                >\r\n                    <TextStyle font = {this.state.font}>{this.state.contentText}</TextStyle>\r\n                </ProductionStyle>\r\n            )\r\n        }\r\n\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        controllerStream.on(`EventChangeColorText${this.state.id}`, this.changeColorText);\r\n        controllerStream.on(`EventSetFont${this.state.id}`, this.setFont);\r\n        controllerStream.on(`EventChangeSize${this.state.id}`, this.changeSizeText);\r\n        controllerStream.on(`EventChangeContentText${this.state.id}`, this.changeContentText);\r\n        controllerStream.on(`EventSaveWidth${this.state.targetSection}`,this.saveSize);\r\n        controllerStream.on(`EventResize${this.state.id}`,this.rotateEvent);\r\n        controllerStream.on(`EventScale${this.state.id}`,this.scaleEvent);\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        controllerStream.off(`EventChangeColorText${this.state.id}`, this.changeColorText);\r\n        controllerStream.off(`EventSetFont${this.state.id}`, this.setFont);\r\n        controllerStream.off(`EventChangeSize${this.state.id}`, this.changeSizeText);\r\n        controllerStream.off(`EventChangeContentText${this.state.id}`, this.changeContentText);\r\n        controllerStream.off(`EventSaveWidth${this.state.targetSection}`,this.saveSize);\r\n        controllerStream.off(`EventResize${this.state.id}`,this.rotateEvent);\r\n        controllerStream.on(`EventScale${this.state.id}`,this.scaleEvent);\r\n    }\r\n}\r\n\r\nexport default TextComponent;","import React from 'react';\r\n\r\nimport Input from './buildComponents/components/Input';\r\nimport Media from './buildComponents/components/Media';\r\nimport Image from './buildComponents/components/Image';\r\nimport TextComponent from './buildComponents/components/Text';\r\nimport BackgroundComponent from './buildComponents/components/Background';\r\n\r\nconst builderHOC = item => Component => {\r\n        /** Builder editable components */\r\n        if (item.type === 'background') Component = BackgroundComponent;\r\n        else if (item.type === 'input') Component = Input;\r\n        else if (item.type === 'media') Component = Media;\r\n        else if (item.type === 'image') Component = Image;\r\n        else if (item.type === 'text') Component = TextComponent;\r\n\r\n        return <Component key = { `${item.type}${item.id}`} {...item.props} />\r\n};\r\n\r\nexport default builderHOC;","import React,{Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\n/** Redux actions */\r\nimport {loadCurrentProjectAction, exitProjectAction} from '../../redux/actions';\r\n/* ------- Child components ------- */\r\nimport Section from '../../components/buildComponents/section';\r\nimport builderHOC from '../../components/builderHOC';\r\nimport Loader from '../../components/loading/Loader';\r\nimport Header from '../../components/header/Header';\r\n/* HOC */\r\nimport withFirebase from '../../components/withFirebase';\r\nimport './production.scss';\r\n\r\nclass Production extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        firebase: PropTypes.object,\r\n    }\r\n\r\n    state = {\r\n        idProject: parseInt(this.props.match.params.param), /** @Id project */\r\n        mode: 'production', /** @workMode */\r\n        projectEmpty: false, /** @Bool detected project undefiend */\r\n        isLoadComponents: true, /** @Bool load all necessary components  */\r\n        componentsProdJSX: [] /** @Array with JSX */\r\n    }\r\n\r\n    makeProduction = (array) => {\r\n        /* build components */\r\n        let {componentsProdJSX} = this.state;\r\n        let _components = [];\r\n\r\n        array.forEach(item => {\r\n\r\n            const itemHash = {\r\n                props: {\r\n                    ...item,\r\n                    mode: 'production',\r\n                },\r\n                type: item.type,\r\n                id: item.id,\r\n            }\r\n            const patternJSX = {\r\n                id: item.id,\r\n                targetSection: item.targetSection,\r\n                component: builderHOC(itemHash)(Fragment)\r\n            };\r\n                _components.push(patternJSX);\r\n        });\r\n            this.setState({\r\n                ...this.state,\r\n                isLoadComponents: false,\r\n                componentsProdJSX: [...componentsProdJSX, ..._components],\r\n            });\r\n    };\r\n\r\n    prodRef = null;\r\n    mainProductionRef  = node => node ?\r\n    this.prodRef = {data: node.getBoundingClientRect(), node: node} : node;\r\n\r\n    render(){\r\n\r\n        const {userData} = this.props;\r\n        const {currentProjectsData} = userData;\r\n        const section = currentProjectsData.sectionsProject;\r\n\r\n        if (this.state.projectEmpty) return <Redirect to = '/Cabinet' />\r\n\r\n        if (userData.active && currentProjectsData.loadProject){\r\n            return (\r\n                <Fragment>\r\n                    <Header key = 'Header' title = \"Constructor\" idUser = {userData.idUser} />\r\n                    <div\r\n                        ref = {this.mainProductionRef}\r\n                        className = 'Production'\r\n                        key = 'Production'\r\n                        >\r\n                        {!this.state.isLoadComponents ?\r\n                            section.length &&\r\n                                <Section \r\n                                    key = 'section'\r\n                                    mode = {this.state.mode}\r\n                                    currentProjectsData = {currentProjectsData}\r\n                                    componentsProdJSX = {this.state.componentsProdJSX}\r\n                                    section = {section}\r\n                                />\r\n                            : null\r\n                        }\r\n                    </div>\r\n                </Fragment>\r\n            )\r\n        } else if (!this.props.firebase.getCurrentUser()) return <Redirect to = '/' />\r\n        else return <Loader  key = 'Loader' path = '/img/loading.gif' type = 'production' />\r\n    }\r\n\r\n    componentDidUpdate = () => {\r\n        let {userData} = this.props;\r\n        let {currentProjectsData} = userData;\r\n\r\n        if (userData.active && !currentProjectsData.loadProject) {\r\n            /** load current project of user session active and load project - false */\r\n            const current =  userData.projects.find(item => item.id === this.state.idProject)\r\n            if (current)\r\n            this.props.dispatch(loadCurrentProjectAction({\r\n                id: current.id,\r\n                typeProject: current.type,\r\n                sectionsProject: [...current.sectionsProject],\r\n                components: [...current.components]\r\n            })) /* else redirect */\r\n            else this.setState({...this.state, projectEmpty: true});\r\n        }\r\n\r\n        if (this.state.isLoadComponents && currentProjectsData.loadProject)\r\n            /* if all components load build our JSX */\r\n            this.makeProduction(currentProjectsData.components);\r\n\r\n    }\r\n\r\n\r\n    componentDidMount = () => {\r\n        let {userData} = this.props;\r\n        let {currentProjectsData} = userData;\r\n\r\n        if (userData.active && !currentProjectsData.loadProject) {\r\n            /** if user active and project load - false */\r\n            const current =  userData.projects.find(item => item.id === this.state.idProject)\r\n            this.props.dispatch(loadCurrentProjectAction({\r\n                id: current.id,\r\n                sectionsProject: [...current.sectionsProject],\r\n                typeProject: current.type,\r\n                components: [...current.components]\r\n            })); /** else render loader */\r\n        };\r\n\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        let {userData} = this.props;\r\n        if (userData.active)  this.props.dispatch(exitProjectAction(true));\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        userData: {\r\n            active: state.cabinet.active,\r\n            idUser: state.cabinet.idUser,\r\n            projects: [...state.cabinet.projects],\r\n           currentProjectsData: {...state.builder}\r\n        },\r\n    }\r\n};\r\n\r\n  export default connect(mapStateToProps)(withFirebase(Production));","import React,{Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\n\r\n\r\nimport withFirebase from '../../components/withFirebase';\r\nimport Header from '../../components/header/Header';\r\nimport Loader from '../../components/loading/Loader';\r\n\r\nimport './about.scss';\r\n\r\nclass About extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        config: PropTypes.object.isRequired, /** @Config app */\r\n        firebase: PropTypes.object.isRequired, /** @firebase class for use firebase functions */\r\n        history: PropTypes.object, /** @Router HTML5 history */\r\n        location: PropTypes.object, /** @Router */\r\n        match: PropTypes.object, /** @Router */\r\n    }\r\n\r\n    state = {\r\n        config: this.props.config\r\n    };\r\n\r\n    render(){\r\n\r\n        let user = this.props.firebase.getCurrentUser();\r\n        if (user && this.props.idUser) {\r\n            const { config } = this.state;\r\n            return (\r\n                <Fragment>\r\n                    <Header title = {config.title} idUser = {user.uid} />\r\n                    <section className = 'About'>\r\n                        <div className = 'container'>\r\n                            <div className = 'col-12'>\r\n                                <div className = 'About__information'>\r\n                                <img alt = 'img'\r\n                                    className = 'information__logoAbout' \r\n                                    src = {process.env.PUBLIC_URL + '/img/about.jpg'}\r\n                                />\r\n                                    <p className ='developer'><span>Developer:</span>\r\n                                                            {config.about.developer}\r\n                                    </p>\r\n                                    <p className = 'year'><span>Year:</span> {config.about.year}</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </section>\r\n                </Fragment>\r\n            )\r\n        } else if (!user) return <Redirect to = { '/'} />\r\n        else return <Loader path = '/img/loading.gif' type = 'About' />\r\n\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n      idUser: state.cabinet.idUser,\r\n    }\r\n  };\r\n\r\nexport default connect(mapStateToProps)(withFirebase(About));","import {errorAction, loadUpdateCurrentProject} from '../actions';\r\n\r\nconst updateMiddleware = (item) => async (dispatch,getState, {firebase}) => {\r\n    /** Save new updates for projects */\r\n    let newProjects = item.projects.map(project => {\r\n        if (project.id === item.idProject) {\r\n            project.components = [...item.components]\r\n            project.sectionsProject = [...item.sectionsProject]\r\n        }\r\n        return project;\r\n    });\r\n    await firebase.db.collection(\"users\").doc(item.uid).update({\r\n        'projects': JSON.parse(JSON.stringify(newProjects))\r\n    })\r\n    .then(response => {\r\n        /** find and save updates */\r\n        let project = item.projects.find(itemdb => itemdb.id === item.idProject);\r\n        dispatch(loadUpdateCurrentProject({\r\n            components: [...project.components],\r\n            idProject: item.idProject,\r\n            sectionsProject: item.sectionsProject,\r\n        }))\r\n    })\r\n    .catch(error => dispatch(errorAction(error.message)));\r\n};\r\n\r\nexport default updateMiddleware;","import React from 'react';\r\nimport eventEmitter from '../EventEmitter';\r\nimport {animateScroll as scroll, scroller } from \"react-scroll\";\r\n\r\n\r\nconst withScroll = Component => {\r\n    return class ScrollMove extends React.PureComponent {\r\n\r\n        state = {\r\n            mode: 'default',\r\n            scrollConfig: {\r\n                duration: 1000,\r\n                delay: 50,\r\n                smooth: true,\r\n                offset: -60\r\n            },\r\n            position: 0,\r\n            positionCount: null\r\n\r\n        }\r\n\r\n        setStates = event => {\r\n            /** Count all positions */\r\n            this.setState({...this.state,positionCount: event});\r\n        }\r\n\r\n        blockMove = event => {\r\n            /** block for move */\r\n            this.setState({...this.state, mode: event})\r\n        }\r\n\r\n        moveLocation = event => {\r\n            /** Scrolling */\r\n            if (this.state.mode === 'default'){\r\n                const count = this.state.positionCount;\r\n                const moveDown = this.state.position < count && event.deltaY > 0;\r\n                const moveUp = event.deltaY < 0 && this.state.position > 0;\r\n                eventEmitter.emit('EventClosePanel',{close: false});\r\n\r\n                if (moveDown)\r\n                    this.setState({ position: this.state.position + 1},\r\n                        () => scroller.scrollTo(`element${this.state.position}`,this.state.scrollConfig));\r\n                    else if (moveUp){\r\n                        this.state.position === 1 &&\r\n                            this.setState({position: this.state.position - 1}, () => scroll.scrollToTop());\r\n                        this.state.position !== 1 &&\r\n                            this.setState({position: this.state.position - 1},\r\n                                () => scroller.scrollTo(`element${this.state.position}`,this.state.scrollConfig));\r\n                    }\r\n            }\r\n\r\n        }\r\n\r\n\r\n        render(){\r\n            return (\r\n                <React.Fragment>\r\n                        <div key = 'moveScroll' onWheel = {this.moveLocation} onTouchStart = {() => false}\r\n                        >\r\n                            {<Component {...this.props} />}\r\n                        </div>\r\n                </React.Fragment>\r\n            )\r\n        }\r\n\r\n        componentDidMount = () => {\r\n            eventEmitter.on('EventBlockScroll', this.blockMove);\r\n            eventEmitter.on('EventSetState', this.setStates);\r\n        }\r\n\r\n        componentWillUnmount = () => {\r\n            eventEmitter.off('EventBlockScroll', this.blockMove);\r\n            eventEmitter.off('EventSetState', this.setStates);\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport default withScroll;","import React,{useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Viewer.scss';\r\n\r\nfunction Viewer(props){\r\n\r\n    let [mode] = useState(props.mode);\r\n    let [path] = useState(props.path);\r\n\r\n    const closeViewer = event => {\r\n        props.eventStreamBuild.emit(\"EventView\", { action: false, target: null});\r\n        event.stopPropagation();\r\n    }\r\n\r\n    return (\r\n        \r\n        <div onClick = {closeViewer} className = 'Viewer'>\r\n            {(mode === 'image' || mode === 'background') ? <img src = {path} alt = 'fullImage' /> \r\n            : \r\n            <iframe \r\n            src= {`https://www.youtube.com/embed/${props.iframe}`}\r\n            title = 'youtube'\r\n            frameBorder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" \r\n            allowFullScreen>\r\n            </iframe>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nViewer.propTypes = {\r\n    eventStreamBuild: PropTypes.object.isRequired, // events stream\r\n    mode: PropTypes.string, // use mode\r\n    path: PropTypes.string // path to data component\r\n}\r\n\r\nexport default Viewer;","import React,{Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {SketchPicker} from 'react-color';\r\n\r\n\r\nconst InputInstruments = props => {\r\n\r\n    let {colorPickerActive} = props.instrumentPanel;\r\n    let {content} = props.componentStats;\r\n    let {fontSize} = props.componentStats;\r\n    let {coords} = props.componentStats;\r\n    let {size} = props.componentStats;\r\n\r\n    let _content = content !== '' ? 'Input' : '';\r\n\r\n    return (\r\n        <Fragment>\r\n            <p className = 'titleInstument'>Position: </p>\r\n            <span className = 'textCoordsPanel'>\r\n            {coords.x ?\r\n                coords.x + ' / ' + coords.y : ' drop for active'}\r\n            </span>\r\n            <p className = 'titleInstument'>Color: </p>\r\n            <div className = 'controllersText'>\r\n                <input \r\n                    onClick = {props.cbSetColor}\r\n                    className = 'button_switch color_switch'\r\n                    type = 'button'\r\n                    value = 'color pick'\r\n                />\r\n            </div>\r\n                { colorPickerActive ?\r\n                    <div className ='wrapperColorPicker'>\r\n                        <SketchPicker\r\n                        onChangeComplete={props.cbHandleChangeComplete}\r\n                        color = {props.color ? props.color : 'white'}\r\n                        />\r\n                    </div>\r\n                    : null\r\n                }\r\n            <p className = 'titleInstument'>Size (%):</p>\r\n            <div className = 'controllersText'>\r\n                <input\r\n                    className = 'button_switch'\r\n                    onChange = {props.cbSetWidth}\r\n                    type=\"number\"\r\n                    min = '10' max = '200'\r\n                    value = {size.w ? size.w : 100}\r\n                />\r\n                <input \r\n                    className = 'button_switch'\r\n                    onChange = {props.cbSetHeight}\r\n                    type=\"number\"\r\n                    min = '10' max = '200'\r\n                    value = {size.h ? size.h : 50}\r\n                />\r\n            </div>\r\n            <p className = 'titleInstument'>Text size: </p>\r\n            <input \r\n                className = 'button_switch'\r\n                onChange = {props.cbSetSize}\r\n                type=\"number\"\r\n                min = '10' max = '200'\r\n                value = {fontSize ? fontSize : 21}\r\n            />\r\n            <p className = 'titleInstument'>Border radius: </p>\r\n            <input\r\n                onChange = {props.cbSetBorderRadius}\r\n                className = 'button_switch radius'\r\n                type=\"number\"\r\n                value = {props.componentStats.borderRadius ?\r\n                            props.componentStats.borderRadius : 10\r\n                        }\r\n                min = '10' max = '200'\r\n            />\r\n\r\n            <p className = 'titleInstument'>Type input: </p>\r\n            <select \r\n            value = {props.componentStats.typeInput} \r\n            onChange = {props.cbSetType}\r\n            className = 'button_switch button_switch_type'>\r\n                <option>button</option>\r\n                <option>text</option>\r\n                <option>password</option>\r\n            </select>\r\n            <p className = 'titleInstument'>Content: </p>\r\n            <input\r\n            className = 'button_switch'\r\n            onChange = {props.cbSetContent}\r\n            maxLength = '100'\r\n            type = 'text'\r\n            value = {content ? content : _content}\r\n        />\r\n            <input \r\n                onClick = {props.cbDelete}\r\n                className = 'instrumentPanel__deleteComponentButton'\r\n                type=\"button\"\r\n                value = 'delete'\r\n            />\r\n        </Fragment>\r\n    )\r\n};\r\n\r\nInputInstruments.propTypes = {\r\n    componentStats: PropTypes.object.isRequired, // object with current component data\r\n    cbSetColor: PropTypes.func.isRequired, // callback set color\r\n    cbHandleChangeComplete: PropTypes.func.isRequired, // callback state color picker\r\n    cbSetWidth: PropTypes.func.isRequired, // callback set width\r\n    cbSetHeight: PropTypes.func.isRequired, // callback set height\r\n    cbSetSize: PropTypes.func.isRequired, // callback set size\r\n    cbSetBorderRadius: PropTypes.func.isRequired, // callback set border-radius\r\n    cbSetContent: PropTypes.func.isRequired, // callback set content input\r\n    cbDelete: PropTypes.func.isRequired, // callback delete\r\n}\r\n\r\nexport default InputInstruments;","import React,{Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst MediaInstruments = props => {\r\n\r\n    let {size} = props.componentStats;\r\n    let {coords} = props.componentStats;\r\n\r\n    return (\r\n        <Fragment>\r\n            <p className = 'titleInstument'>Position: </p>\r\n            <span className = 'textCoordsPanel'>\r\n            {coords.x ?\r\n                coords.x + ' / ' + coords.y : ' drop for active'}\r\n            </span>\r\n            <p className = 'titleInstument'>Size (%):</p>\r\n            <div className = 'controllersText media'>\r\n                <input\r\n                    className = 'button_switch'\r\n                    onChange = {props.cbSetWidth}\r\n                    type=\"number\"\r\n                    min = '10' max = '100'\r\n                    value = {size.w ? size.w : 30}\r\n                />\r\n                <input \r\n                    className = 'button_switch'\r\n                    onChange = {props.cbSetHeight}\r\n                    type=\"number\"\r\n                    min = '10' max = '100'\r\n                    value = {size.h ? size.h : 50}\r\n                />\r\n            </div>\r\n            <p className = 'titleInstument'>Content: </p>\r\n            <input \r\n                onClick = {props.cbSearch}\r\n                className = 'ImageSearchButton'\r\n                type=\"button\"\r\n                value = 'search media'\r\n            />\r\n            <input \r\n                onClick = {props.cbDelete}\r\n                className = 'instrumentPanel__deleteComponentButton'\r\n                type=\"button\"\r\n                value = 'delete'\r\n            />\r\n        </Fragment>\r\n    )\r\n};\r\n\r\nMediaInstruments.propTypes = {\r\n    componentStats: PropTypes.object.isRequired, // object with current component data\r\n    cbSearch: PropTypes.func.isRequired, // callback search\r\n    cbSetWidth: PropTypes.func.isRequired, // callback set width\r\n    cbSetHeight: PropTypes.func.isRequired, // callback set height\r\n    cbDelete: PropTypes.func.isRequired, // callback delete\r\n}\r\n\r\nexport default MediaInstruments;","import React, {Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ImageInstruments = props => {\r\n\r\n    let {coords} = props.componentStats;\r\n    let {size} = props.componentStats;\r\n    let {rotate} = props.componentStats;\r\n    let {scale} = props.componentStats;\r\n    let fileRef = React.createRef();\r\n    return (\r\n        <Fragment>\r\n        <p className = 'titleInstument'>Position: </p>\r\n        <span className = 'textCoordsPanel'>\r\n        {coords.x ?\r\n            coords.x + ' / ' + coords.y : ' drop for active'}\r\n        </span>\r\n        <p className = 'titleInstument'>Size (%):</p>\r\n        <div className = 'controllersText'>\r\n            <input\r\n                className = 'button_switch size'\r\n                onChange = {props.cbSetWidth}\r\n                type=\"number\"\r\n                min = '10' max = '100'\r\n                value = {size.w ? size.w : 30}\r\n            />\r\n            <input \r\n                className = 'button_switch size'\r\n                onChange = {props.cbSetHeight}\r\n                type=\"number\"\r\n                min = '10' max = '100'\r\n                value = {size.h ? size.h : 30}\r\n            />\r\n        </div>\r\n        <p className = 'titleInstument'>Rotate/Scale:</p>\r\n        <div className = 'controllersText'>\r\n            <input\r\n            className = 'button_switch rotate'\r\n            onChange = {props.cbRotate}\r\n            type=\"number\"\r\n            min = '0' max = '360'\r\n            value = {rotate ? rotate : 0}\r\n            />\r\n            <input\r\n            className = 'button_switch scale'\r\n            onChange = {props.cbScale}\r\n            type=\"number\"\r\n            step = '0.1'\r\n            min = '0' max = '2'\r\n            value = {scale ? scale : 1}\r\n            />\r\n        </div>\r\n        <p className = 'titleInstument'>Border radius: </p>\r\n            <input\r\n                onChange = {props.cbSetBorderRadius}\r\n                className = 'button_switch radius'\r\n                type=\"number\"\r\n                value = {props.componentStats.borderRadius ?\r\n                            props.componentStats.borderRadius : 10\r\n                        }\r\n                min = '10' max = '200'\r\n            />\r\n            <p className = 'titleInstument titleInstrument__opacity'>Opacity: </p>\r\n            <input \r\n                onChange = {props.cbSetOpacity}\r\n                className = 'ImageSearchButton'\r\n                type=\"number\"\r\n                value = {props.componentStats.opacity ?\r\n                    props.componentStats.opacity : 1\r\n                }\r\n                step = '0.1'\r\n                min = '0' max = '1'\r\n            />\r\n            <p className = 'titleInstument titleInstrument__opacity'>Loader: </p>\r\n            <div className = 'controllersText'>\r\n                <div className = 'fileLoader'>\r\n                    <input \r\n                        onClick = {props.cbSearch}\r\n                        className = 'ImageSearchButton file'\r\n                        type=\"button\"\r\n                        value = 'search image'\r\n                    />\r\n                    <input\r\n                        ref = {fileRef}\r\n                        className = 'fileInput'\r\n                        onChange = {props.cbLoadFile}\r\n                        accept=\"image/*\"\r\n                        type=\"file\"\r\n                    />\r\n                    <input\r\n                        className = 'ImageSearchButton file'\r\n                        type = 'button'\r\n                        value = 'loading file'\r\n                    />\r\n\r\n                </div>\r\n            </div>\r\n            <input \r\n                onClick = {props.cbDelete}\r\n                className = 'instrumentPanel__deleteComponentButton'\r\n                type=\"button\"\r\n                value = 'delete'\r\n            />\r\n        </Fragment>\r\n    )\r\n\r\n}\r\n\r\nImageInstruments.propTypes = {\r\n    componentStats: PropTypes.object.isRequired, // object with current component data\r\n    cbSetWidth: PropTypes.func.isRequired, // callback set width\r\n    cbSetHeight: PropTypes.func.isRequired, // callback set height\r\n    cbSetBorderRadius: PropTypes.func.isRequired, // callback set border-radius\r\n    cbSetOpacity: PropTypes.func.isRequired, // callback set opacity\r\n    cbLoadFile: PropTypes.func.isRequired, // callback load file\r\n    cbSearch: PropTypes.func.isRequired, // callback search\r\n    cbDelete: PropTypes.func.isRequired, // callback delete\r\n}\r\n\r\nexport default ImageInstruments;","import React, {Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {SketchPicker} from 'react-color';\r\n\r\nconst BackgroundInstruments = props => {\r\n    let  {targetSection} = props.componentStats;\r\n    return (\r\n        <Fragment>\r\n        <p className = 'titleInstument'>Color: </p>\r\n        <input\r\n            onClick = {props.cbSetColor}\r\n            className = 'button_switch Color'\r\n            type = 'button'\r\n            value = 'color pick'\r\n        />\r\n            { props.colorPickerActive ?\r\n                <SketchPicker\r\n                    onChangeComplete={props.cbHandleChangeComplete}\r\n                    color = {props.color ? props.color : 'white'}\r\n                />\r\n                : null\r\n            }\r\n            <input \r\n                onClick = {props.cbSearch}\r\n                className = 'ImageSearchButton'\r\n                type = 'button'\r\n                value = 'background-image'\r\n            />\r\n            <input\r\n                disabled = {targetSection === 'Header'}\r\n                onClick = {props.cbDelete}\r\n                className = 'instrumentPanel__deleteComponentButton'\r\n                type=\"button\"\r\n                value = 'delete'\r\n            />\r\n        </Fragment>\r\n    )\r\n\r\n}\r\n\r\nBackgroundInstruments.propTypes = {\r\n    componentStats: PropTypes.object.isRequired, // object with current component data\r\n    cbSetColor: PropTypes.func.isRequired, // callback set color\r\n    cbHandleChangeComplete: PropTypes.func.isRequired, // callback picker state change\r\n    cbSearch: PropTypes.func.isRequired, // callback search\r\n}\r\n\r\nexport default BackgroundInstruments;","import React,{Fragment} from 'react';\r\nimport {SketchPicker} from 'react-color';\r\n\r\nconst TextInstruments = props => {\r\n\r\n\r\n        let {colorPickerActive} = props.instrumentPanel;\r\n        let {content} = props.componentStats;\r\n        let {fontSize} = props.componentStats;\r\n        let {coords} = props.componentStats;\r\n        let {rotate} = props.componentStats;\r\n        let {scale} = props.componentStats;\r\n        let _content = content !== '' ? 'Title' : '';\r\n        return (\r\n            <Fragment>\r\n            <p className = 'titleInstument'>Position: </p>\r\n            <span className = 'textCoordsPanel'>\r\n            {coords.x ?\r\n                coords.x + ' / ' + coords.y : ' drop for active'}\r\n            </span>\r\n            <p className = 'titleInstument'>Rotate/Scale:</p>\r\n            <div className = 'controllersText'>\r\n                <input\r\n                className = 'button_switch rotate'\r\n                onChange = {props.cbRotate}\r\n                type=\"number\"\r\n                min = '0' max = '360'\r\n                value = {rotate ? rotate : 0}\r\n                />\r\n                <input\r\n                className = 'button_switch scale'\r\n                onChange = {props.cbScale}\r\n                type=\"number\"\r\n                step = '0.1'\r\n                min = '0' max = '2'\r\n                value = {scale ? scale : 1}\r\n                />\r\n            </div>\r\n            <p className = 'titleInstument'>Color: </p>\r\n            <input \r\n                onClick = {props.cbSetColor}\r\n                className = 'button_switch color'\r\n                type = 'button'\r\n                value = 'color pick'\r\n            />\r\n            <p className = 'titleInstument'>Text size: </p>\r\n            <input \r\n                className = 'button_switch size'\r\n                onChange = {props.cbSetSize}\r\n                type=\"number\"\r\n                min = '10' max = '200'\r\n                value = {fontSize ? fontSize : 120}\r\n            />\r\n                { colorPickerActive ?\r\n                    <div className ='wrapperColorPicker text'>\r\n                        <SketchPicker\r\n                            onChangeComplete={props.cbHandleChangeComplete}\r\n                            color = {props.color ? props.color : 'red'}\r\n                        />\r\n                    </div>\r\n                    : null\r\n                }\r\n                <p className = 'titleInstument'>Font: </p>\r\n                <select \r\n                    value = {props.componentStats.font} \r\n                    onChange = {props.cbSetFont}\r\n                    className = 'button_switch font'\r\n                >\r\n                <option>Arial</option>\r\n                <option>Times</option>\r\n                <option>Georgia</option>\r\n                <option>Impact</option>\r\n                <option>Tahoma</option>\r\n                <option>Verdana</option>\r\n                <option>Comic</option>\r\n                </select>\r\n            <p className = 'titleInstument'>Content: </p>\r\n            <input\r\n                className = 'button_switch content'\r\n                onChange = {props.cbSetContent}\r\n                maxLength = '100'\r\n                type = 'text'\r\n                value = {content ? content : _content}\r\n            />\r\n            <input \r\n                onClick = {props.cbDelete}\r\n                className = 'instrumentPanel__deleteComponentButton'\r\n                type=\"button\"\r\n                value = 'delete'\r\n            />\r\n            </Fragment>\r\n        )\r\n}\r\n\r\nexport default TextInstruments;","import React from 'react';\r\nimport eventEmitter,{controllerStream} from '../../EventEmitter';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport InputInstruments from './InputTools/InputInstruments';\r\nimport MediaInstruments from './MediaTools/MediaInstruments';\r\nimport ImageInstruments from './ImageTools/ImageInstruments';\r\nimport BackgroundInstruments from './BackgroundTools/BackgroundInstruments';\r\nimport TextInstruments from './TextTools/TextInstruments';\r\nimport Icon from '../Icon/icon';\r\n\r\nimport './instrumentsPanel.scss';\r\n\r\n\r\n\r\nclass InstrumentsPanel extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        instrumentPanel:  PropTypes.object.isRequired, /** @Settings for panel and data about component */\r\n        editComponentName: PropTypes.string, /** @Name editable component */\r\n        eventStreamBuild: PropTypes.object.isRequired // stream events\r\n    };\r\n\r\n    state = {\r\n        instrumentPanel: {...this.props.instrumentPanel},\r\n        componentStats: this.props.componentStats,\r\n        images: null,\r\n    };\r\n\r\n\r\n    closePanel = event => {\r\n        this.props.eventStreamBuild.emit('EventClosePanel', {close: false});\r\n    };\r\n\r\n    setSize = event => {\r\n        let {id} = this.state.componentStats;\r\n        let size = event.target.value > 200 ? 200 : event.target.value;\r\n\r\n        if (this.state.componentStats.type !== 'input')\r\n        this.setState({\r\n            ...this.state, \r\n            instrumentPanel: {...this.state.instrumentPanel},\r\n            componentStats: {...this.state.componentStats,fontSize: size}\r\n        }, () => controllerStream.emit(`EventChangeSize${id}`, {\r\n                targetSection: this.state.editComponentName, size: size \r\n        }));\r\n        else this.setState({\r\n                ...this.state, \r\n                instrumentPanel: {...this.state.instrumentPanel},\r\n                componentStats: {...this.state.componentStats,fontSize: size}\r\n            }, () => controllerStream.emit(`EventChangeSizeText${id}`, {size: size}\r\n            ));\r\n    };\r\n\r\n    setFont = event => {\r\n        let {id} = this.state.componentStats;\r\n        let fontName = event.target.value;\r\n        this.setState({\r\n            ...this.state, \r\n            instrumentPanel: {...this.state.instrumentPanel},\r\n            componentStats: {...this.state.componentStats,font: fontName}\r\n        },\r\n            () => controllerStream.emit(`EventSetFont${id}`, {\r\n                targetSection: this.state.editComponentName, font: fontName\r\n            })\r\n        );\r\n    }\r\n\r\n    rotate = event => {\r\n        let {id} = this.state.componentStats;\r\n        let angle = event.target.value;\r\n        this.setState({\r\n            ...this.state, \r\n            instrumentPanel: {...this.state.instrumentPanel},\r\n            componentStats: {...this.state.componentStats, rotate: angle}\r\n        },\r\n        () => controllerStream.emit(`EventResize${id}`,{angle: angle}));\r\n        event.stopPropagation();\r\n    }\r\n\r\n    scale = event => {\r\n        let {id} = this.state.componentStats;\r\n        let scale = event.target.value;\r\n        this.setState({\r\n            ...this.state, \r\n            instrumentPanel: {...this.state.instrumentPanel},\r\n            componentStats: {...this.state.componentStats, scale: scale}\r\n        },\r\n        () => controllerStream.emit(`EventScale${id}`,{scale: scale}));\r\n        event.stopPropagation();\r\n    }\r\n\r\n    setIframeContent = eventItem => {\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            componentStats:{\r\n                ...this.state.componentStats,\r\n                content: eventItem.iframe\r\n            }\r\n        });\r\n    }\r\n\r\n    setContent = event => {\r\n        let {id} = this.state.componentStats;\r\n        let contentValue = event.target.value;\r\n        this.setState({\r\n            ...this.state, \r\n            instrumentPanel: {...this.state.instrumentPanel},\r\n            componentStats: {...this.state.componentStats,content: contentValue}\r\n        },\r\n            () => controllerStream.emit(`EventChangeContentText${id}`,{\r\n                targetSection: this.state.editComponentName, content: contentValue\r\n            })\r\n        );\r\n        if (event) event.stopPropagation();\r\n    };\r\n\r\n    setWidth = event => {\r\n        const {id} = this.state.componentStats;\r\n        const width = event.target.value;\r\n        this.setState({\r\n            ...this.state,\r\n            componentStats: {...this.state.componentStats,\r\n                size: {\r\n                    ...this.state.componentStats.size,\r\n                    w: width\r\n                }}\r\n        },\r\n            () => controllerStream.emit(`EventSetWidth${id}`,{width: width}));\r\n\r\n        if (event) event.stopPropagation();\r\n    };\r\n\r\n    setHeight = event => {\r\n        const {id} = this.state.componentStats;\r\n        const height = event.target.value;\r\n        this.setState({\r\n            ...this.state,\r\n            componentStats: {...this.state.componentStats,\r\n                size: {\r\n                    ...this.state.componentStats.size,\r\n                    h: height\r\n                }}\r\n        },\r\n            () => controllerStream.emit(`EventSetHeight${id}`,{height: height}));\r\n\r\n        if (event) event.stopPropagation();\r\n    }\r\n\r\n    updatePosition = eventItem => {\r\n        if (!eventItem) return;\r\n        this.setState({\r\n            ...this.state, \r\n            componentStats: {\r\n                ...this.state.componentStats,\r\n                coords: {\r\n                    ...this.state.componentStats.coords,\r\n                    x: eventItem.x,\r\n                    y: eventItem.y\r\n                }\r\n            }\r\n        });\r\n    };\r\n\r\n    setColor = event => {\r\n        this.setState({...this.state,\r\n            instrumentPanel:{\r\n                ...this.state.instrumentPanel,\r\n                colorPickerActive: this.state.instrumentPanel.colorPickerActive ? false : true\r\n            }\r\n        });\r\n        if (event) event.stopPropagation();\r\n    };\r\n\r\n    setType = event => {\r\n\r\n        let {id} = this.state.componentStats;\r\n        let typeInput = event.target.value;\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            componentStats: {\r\n                ...this.state.componentStats,\r\n                typeInput: typeInput\r\n            }\r\n        },\r\n         () => controllerStream.emit(`EventSetType${id}`, typeInput));\r\n        if (event) event.stopPropagation();\r\n    }\r\n\r\n    setOpacity = event => {\r\n        let {id} = this.state.componentStats;\r\n        let opacity = event.target.value;\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            componentStats: {...this.state.componentStats,opacity: opacity}\r\n        },\r\n         () => controllerStream.emit(`EventSetOpacity${id}`, {opacity: opacity}));\r\n    };\r\n\r\n    setBorderRadius = event => {\r\n        let {id} = this.state.componentStats;\r\n        let radius = event.target.value;\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            componentStats: {...this.state.componentStats,borderRadius: radius}\r\n        },\r\n         () => controllerStream.emit(`EventSetBorderRadius${id}`, {borderRadius: radius}));\r\n    };\r\n\r\n    updateBimageStats = eventItem => {\r\n        const {images} = eventItem;\r\n        if (eventItem.mode !== 'image')\r\n        this.setState({\r\n            ...this.state,\r\n            componentStats:{\r\n                ...this.state.componentStats,\r\n                backgroundImage: images.urlFull\r\n            }\r\n        });\r\n        else {\r\n            this.setState({\r\n                ...this.state,\r\n                componentStats:{\r\n                    ...this.state.componentStats,\r\n                    image: images.urlFull\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    handleChangeComplete = event => {\r\n\r\n        const {rgb} = event;\r\n        let colorRGB = `rgb(${rgb.r},${rgb.g},${rgb.b},${rgb.a})`;\r\n\r\n        let {id} = this.state.componentStats;\r\n        if (this.state.componentStats.type === 'background'){\r\n            this.setState({\r\n                ...this.state,\r\n                componentStats: {...this.state.componentStats,color: colorRGB}\r\n            }, () => controllerStream.emit(`EventChangeColorBackground${id}`,\r\n                        {colorRGB: this.state.componentStats.color}\r\n                    ));\r\n        }\r\n\r\n        else if (this.state.componentStats.type === 'text') {\r\n            this.setState({\r\n                ...this.state,\r\n                componentStats: {...this.state.componentStats,color: colorRGB}\r\n            },\r\n            () => controllerStream.emit(`EventChangeColorText${id}`, colorRGB));\r\n        }\r\n\r\n        else if (this.state.componentStats.type === 'input') {\r\n            this.setState({\r\n                ...this.state,\r\n                componentStats: {...this.state.componentStats,color: colorRGB}\r\n            },\r\n            () => controllerStream.emit(`EventChangecolor${id}`, colorRGB));\r\n        }\r\n\r\n    };\r\n\r\n    redirectSaveChanges = event => {\r\n        this.props.eventStreamBuild.emit(\"EventSaveChangesComponent\", {\r\n            ...this.state.componentStats,\r\n            id: this.state.componentStats.id,\r\n            type: this.state.componentStats.type,\r\n            ms: 0\r\n        });\r\n        if (event) event.stopPropagation();\r\n    }\r\n\r\n    saveChanges = event => {\r\n\r\n        this.props.eventStreamBuild.emit(\"EventSaveChangesComponent\", {\r\n                ...this.state.componentStats,\r\n                id: this.state.componentStats.id,\r\n                type: this.state.componentStats.type,\r\n                ms: 1500,\r\n            });\r\n\r\n        eventEmitter.emit('EventRedirectConfirm', true);\r\n        if (event) event.stopPropagation();\r\n    }\r\n\r\n    deleteComponent = event => {\r\n        this.props.eventStreamBuild.emit('EventDeleteComponent', {\r\n            id: this.state.componentStats.id,\r\n            targetSection: this.state.componentStats.targetSection,\r\n            type: this.state.componentStats.type\r\n        });\r\n    };\r\n\r\n    search = event => {\r\n\r\n        let {id} = this.state.componentStats;\r\n        this.props.eventStreamBuild.emit('EventModalSearchOn',{\r\n            idComponent: id,\r\n            mode: this.state.componentStats.type\r\n        });\r\n\r\n        event.stopPropagation();\r\n    };\r\n\r\n    loadFile = event => {\r\n        let {id} = this.state.componentStats;\r\n        try {\r\n            let image = event.target.files[0];\r\n            let reader = new FileReader();\r\n            if (image.type[0] !== 'i') throw new Error('Invalid file');\r\n            reader.readAsDataURL(image);\r\n            reader.onload = (e) => {\r\n                controllerStream.emit(`EventSetCurrentImage${id}`,{ urlFull: reader.result });\r\n                this.updateBimageStats({images: { urlFull: reader.result }, mode: 'image'});\r\n                e.stopPropagation();\r\n            }\r\n            reader.onerror = () => {\r\n                console.error(reader.error);\r\n            }\r\n        } catch (error) {\r\n            console.error(error.message);\r\n        }\r\n\r\n        event.stopPropagation();\r\n    }\r\n\r\n    makePanelInstruments = (type) => {\r\n            switch (type){\r\n                case 'text':\r\n                   return(\r\n                    <TextInstruments\r\n                        instrumentPanel = {{...this.state.instrumentPanel}}\r\n                        componentStats = {{...this.state.componentStats}}\r\n                        cbSetColor = {this.setColor}\r\n                        cbSetSize = {this.setSize}\r\n                        cbHandleChangeComplete = {this.handleChangeComplete}\r\n                        cbSetContent = {this.setContent}\r\n                        cbSetFont = {this.setFont}\r\n                        cbSetOpacity = {this.setOpacity}\r\n                        color = {this.state.componentStats.color}\r\n                        cbDelete = {this.deleteComponent}\r\n                        cbRotate = {this.rotate}\r\n                        cbScale = {this.scale}\r\n                    />\r\n                   )\r\n                case 'background':\r\n                    return (\r\n                        <BackgroundInstruments\r\n                            colorPickerActive = {this.state.instrumentPanel.colorPickerActive}\r\n                            componentStats = {{...this.state.componentStats}}\r\n                            cbSetColor = {this.setColor}\r\n                            color = {this.state.componentStats.color}\r\n                            cbHandleChangeComplete = {this.handleChangeComplete}\r\n                            cbSearch = {this.search}\r\n                            cbDelete = {this.deleteComponent}\r\n                        />\r\n                    )\r\n                case 'image':\r\n                        return (\r\n                            <ImageInstruments\r\n                                instrumentPanel = {{...this.state.instrumentPanel}}\r\n                                componentStats = {{...this.state.componentStats}}\r\n                                cbSearch = {this.search}\r\n                                cbSetSize = {this.setSize}\r\n                                cbSetBorderRadius = {this.setBorderRadius}\r\n                                cbSetOpacity = {this.setOpacity}\r\n                                cbSetWidth = {this.setWidth}\r\n                                cbSetHeight = {this.setHeight}\r\n                                cbLoadFile = {this.loadFile}\r\n                                cbDelete = {this.deleteComponent}\r\n                                cbRotate = {this.rotate}\r\n                                cbScale = {this.scale}\r\n                            />\r\n                        )\r\n                case 'media':\r\n                        return (\r\n                            <MediaInstruments\r\n                                instrumentPanel = {{...this.state.instrumentPanel}}\r\n                                componentStats = {{...this.state.componentStats}}\r\n                                cbSearch = {this.search}\r\n                                cbSetWidth = {this.setWidth}\r\n                                cbSetHeight = {this.setHeight}\r\n                                cbDelete = {this.deleteComponent}\r\n                            />\r\n                            )\r\n                case 'input':\r\n                        return (\r\n                            <InputInstruments\r\n                                instrumentPanel = {{...this.state.instrumentPanel}}\r\n                                componentStats = {{...this.state.componentStats}}\r\n                                cbSetColor = {this.setColor}\r\n                                cbSetBorderRadius = {this.setBorderRadius}\r\n                                cbHandleChangeComplete = {this.handleChangeComplete}\r\n                                cbSetSize = {this.setSize}\r\n                                cbSetWidth = {this.setWidth}\r\n                                cbSetHeight = {this.setHeight}\r\n                                color = {this.state.componentStats.color}\r\n                                cbSetContent = {this.setContent}\r\n                                cbSetType = {this.setType}\r\n                                cbDelete = {this.deleteComponent}\r\n                            />\r\n                        )\r\n                default: return <p className = 'warningInstruments'>No found element</p>\r\n            }\r\n    };\r\n\r\n    render(){\r\n        let { instrumentActive } = this.state.instrumentPanel;\r\n        return (\r\n\r\n                <div  className = 'instumentsPanel'>\r\n                    <button\r\n                        onClick = {this.closePanel}\r\n                        className = 'closeInstrumentsPanel'\r\n                    >\r\n                        <Icon path = '/img/close.svg' />\r\n                    </button>\r\n                    <h3>Instruments</h3>\r\n                    {\r\n                        instrumentActive ? \r\n                        <p className = 'TextComponent'>{this.state.componentStats.type}</p>\r\n                        : null\r\n                    }\r\n                    {\r\n                        instrumentActive ?\r\n                        <div className = 'instuments'>\r\n                            {this.makePanelInstruments(this.state.componentStats.type)}\r\n                        </div>\r\n                        : null\r\n                    }\r\n                </div>\r\n        )\r\n    };\r\n\r\n    componentDidUpdate = (oldProps, oldState) => {\r\n        if (oldState.componentStats !== this.state.componentStats)\r\n        this.saveChanges();\r\n    };\r\n\r\n    componentDidMount = event => {\r\n        eventEmitter.on('EventRedirectSaveChanges', this.redirectSaveChanges);\r\n        eventEmitter.on(\"EventSetBImageInstumentPanel\", this.updateBimageStats);\r\n        eventEmitter.on(`EventSetIframe`, this.setIframeContent);\r\n        controllerStream.on(`EventUpdatePosition${this.state.componentStats.id}`, this.updatePosition);\r\n    };\r\n\r\n    componentWillUnmount = event => {\r\n        if (this.timer) clearTimeout(this.timer);\r\n        eventEmitter.off('EventRedirectSaveChanges', this.redirectSaveChanges);\r\n        eventEmitter.off(\"EventSetBImageInstumentPanel\", this.updateBimageStats);\r\n        eventEmitter.off(`EventSetIframe`, this.setIframeContent);\r\n        controllerStream.off(`EventUpdatePosition${this.state.componentStats.id}`, this.updatePosition);\r\n    };\r\n};\r\n\r\nexport default InstrumentsPanel;","import React,{Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Viewer from '../imageViewer/Viewer';\r\nimport InstrumentsPanel from '../../components/instrumentsPanel/InstrumentsPanel';\r\nimport ModalWindow from '../../components/modalWindow/ModalWindow';\r\nimport {CSSTransition} from 'react-transition-group';\r\n\r\nclass AdditionalTools extends React.PureComponent{\r\n\r\n    static propTypes = {\r\n        eventStreamBuild: PropTypes.object.isRequired, // events stream\r\n    }\r\n\r\n    state = {\r\n        modal: {\r\n            modalSearch: false, /** @bool active modal search image/media */\r\n            modalSearchMode: null, /** @String work mode of search modal */\r\n        },\r\n        modalViewer: {action: false, image: null, mode: null }, /** @Object data with viewer data */\r\n        instrumentPanel: { /** @Object with data controll instrument panel */\r\n            colorPickerActive: false,\r\n            instrumentActive: false,\r\n        },\r\n        componentStats: {}, /** @Object with data about components */\r\n        editComponentName:  this.props.editComponentName, /** @String | @null name current edit component */\r\n    }\r\n\r\n    modalSearchOn = itemEvent => {\r\n        this.setState({\r\n            ...this.state,\r\n            modal:{\r\n                ...this.state.modal,\r\n                modalSearch: !this.state.modal.modalSearch,\r\n                modalSearchMode: itemEvent.mode || null\r\n            }\r\n        });\r\n    }\r\n\r\n    ViewerSwitch = itemEvent => {\r\n        /* set settings for viewer */\r\n        this.setState({\r\n            ...this.state,\r\n            modalViewer: {\r\n                ...this.state.modalViewer,\r\n                action: itemEvent.action,\r\n                target: itemEvent.target,\r\n                mode: itemEvent.mode,\r\n                iframe: itemEvent.iframe\r\n            }\r\n        });\r\n    };\r\n\r\n    openInstrument = itemEvent => {\r\n        /* build instrument panel component */\r\n           const idEqual = this.state.componentStats.id === itemEvent.componentStats.id;\r\n           if (!idEqual || !this.state.instrumentPanel.instrumentActive)\r\n           this.setState({\r\n               ...this.state,\r\n               editComponentName: itemEvent.targetSection,\r\n               componentStats: {\r\n                   ...this.state.componentStats,\r\n                   ...itemEvent.componentStats\r\n               },\r\n               instrumentPanel: {\r\n                   ...this.state.instrumentPanel,\r\n                   instrumentActive: true,\r\n               }\r\n           });\r\n   }\r\n\r\n   closePanel = itemEvent => {\r\n        /* unmount unstrument panel component */\r\n       this.setState({\r\n           ...this.state,\r\n           instrumentPanel: {\r\n               ...this.state.instrumentPanel,\r\n               colorPickerActive: false,\r\n               instrumentActive: itemEvent.close\r\n           }\r\n       });\r\n   };\r\n\r\n    render(){\r\n        const props = this.props;\r\n        if (this.state.instrumentPanel.instrumentActive){\r\n            return (\r\n                <Fragment key = 'AdditionalBuild'>\r\n                    <CSSTransition\r\n                        in={this.state.modalViewer.action}\r\n                        timeout={300}\r\n                        classNames=\"modalAnimation\"\r\n                        unmountOnExit\r\n                        appear\r\n                    >\r\n                        <Viewer\r\n                            key = 'ImageViewer'\r\n                            eventStreamBuild = {props.eventStreamBuild}\r\n                            mode = {this.state.modalViewer.mode}\r\n                            path = {this.state.modalViewer.target}\r\n                            iframe = {this.state.modalViewer.iframe}\r\n                        />\r\n                    </CSSTransition>\r\n                    <CSSTransition\r\n                        in={this.state.modal.modalSearch}\r\n                        timeout={300}\r\n                        classNames=\"modalAnimation\"\r\n                        unmountOnExit\r\n                        appear\r\n                    >\r\n                            <ModalWindow\r\n                                eventStreamBuild = {props.eventStreamBuild}\r\n                                idComponent = {this.state.componentStats.id}\r\n                                modalSearchMode = {this.state.modal.modalSearchMode}\r\n                                key = 'ModalWindow' workMode = 'Search'\r\n                            />\r\n                    </CSSTransition>\r\n                        <InstrumentsPanel\r\n                            key = {`InstrumentsPanel${this.state.componentStats.id}`}\r\n                            eventStreamBuild = {props.eventStreamBuild}\r\n                            editComponentName = {this.state.editComponentName}\r\n                            componentStats = {this.state.componentStats}\r\n                            instrumentPanel = {this.state.instrumentPanel}\r\n                        />\r\n                </Fragment>\r\n            )\r\n        } else return <Fragment></Fragment>;\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.props.eventStreamBuild.on('EventModalSearchOn', this.modalSearchOn);\r\n        this.props.eventStreamBuild.on('EventView', this.ViewerSwitch);\r\n        this.props.eventStreamBuild.on('EventClosePanel', this.closePanel);\r\n        this.props.eventEmitter.on('EventInstrumentPanel', this.openInstrument);\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        this.props.eventStreamBuild.off('EventModalSearchOn', this.modalSearchOn);\r\n        this.props.eventEmitter.off('EventInstrumentPanel', this.openInstrument);\r\n        this.props.eventStreamBuild.off('EventView', this.ViewerSwitch);\r\n        this.props.eventStreamBuild.off('EventClosePanel', this.closePanel);\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport default AdditionalTools;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Input from '../buildComponents/components/Input';\r\nimport Media from '../buildComponents/components/Media';\r\nimport Image from '../buildComponents/components/Image';\r\nimport TextComponent from '../buildComponents/components/Text';\r\nimport BackgroundComponent from '../buildComponents/components/Background';\r\n\r\nimport './buildMenu.scss';\r\n\r\nclass BuildMenu extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        mode: PropTypes.string.isRequired, /** @String work mode component */\r\n        editComponentName: PropTypes.string,\r\n        eventStreamBuild: PropTypes.object, /** @Events stream build */\r\n        countSection: PropTypes.number, /** @Number for new section id */\r\n        countComponents: PropTypes.number, /** @Number last project */\r\n        sizeParentBox: PropTypes.object /** @Object with width and height parent(bg) */\r\n    }\r\n\r\n\r\n    state = {\r\n        mode: this.props.mode,\r\n        sizeParentBox: {...this.props.sizeParentBox},\r\n        title: 'Title'\r\n    }\r\n\r\n    addText = event => {\r\n        let id = Math.random().toFixed(3);\r\n\r\n        const componentsPatternText = {\r\n            type: 'text',\r\n            font: 'Arial',\r\n            color: null,\r\n            rotate: 0,\r\n            scale: 1,\r\n            opacity: 1,\r\n            fontSize: null,\r\n            content: 'Title',\r\n            coords: {x: null, y: null}, // x, y\r\n            id: id,\r\n            targetSection: this.props.editComponentName,\r\n        };\r\n        this.props.eventStreamBuild.emit('EventBuildComponents',{\r\n            componentsPattern: componentsPatternText,\r\n            type: componentsPatternText.type,\r\n            component: <TextComponent\r\n                            key = {`text${id}`}\r\n                            mode = 'dev'\r\n                            {...componentsPatternText}\r\n                            sizeParentBox = {{...this.props.sizeParentBox}}\r\n                            id = {id}\r\n                        >Title</TextComponent>\r\n        });\r\n        event.stopPropagation();\r\n    }\r\n\r\n    addBackground = event => {\r\n        let id = Math.random().toFixed(3);\r\n\r\n        const componentsPatternBackground = {\r\n            id: id,\r\n            type: 'background',\r\n            backgroundColor: null,\r\n            backgroundImage: null,\r\n            targetSection: this.state.editComponentName,\r\n        };\r\n\r\n        this.props.eventStreamBuild.emit('EventBuildComponents',{\r\n            componentsPattern: componentsPatternBackground,\r\n            type: componentsPatternBackground.type,\r\n            component: <BackgroundComponent\r\n                            targetSection = {this.props.editComponentName}\r\n                            {...componentsPatternBackground}\r\n                            key = {`bg${id}`}\r\n                            id = {id}\r\n                        />\r\n        });\r\n\r\n        event.stopPropagation();\r\n    }\r\n\r\n    addImage = event => {\r\n        let id = Math.random().toFixed(3);\r\n\r\n        const componentsPatternImage = {\r\n            borderRadius: 0,\r\n            type: 'image',\r\n            size: {w: 30, h: 50},\r\n            opacity: 1,\r\n            rotate: 0,\r\n            zIndex: null,\r\n            image: '/img/photoPattern.svg',\r\n            coords: {x: null, y: null}, // x, y\r\n            id: id,\r\n            targetSection: this.props.editComponentName,\r\n        };\r\n        this.props.eventStreamBuild.emit('EventBuildComponents',{\r\n            componentsPattern: componentsPatternImage,\r\n            type: componentsPatternImage.type,\r\n            component: <Image\r\n                            key = {`image${id}`}\r\n                            sizeParentBox = {this.props.sizeParentBox}\r\n                            id = {id}\r\n                            mode = 'dev'\r\n                            path = {'/img/photoPattern.svg'}\r\n                            {...componentsPatternImage}\r\n                            type = 'image' />\r\n        });\r\n        event.stopPropagation();\r\n    }\r\n\r\n    addMedia = event => {\r\n        let id = Math.random().toFixed(3);\r\n\r\n        const  componentsPatternMedia = {\r\n            type: 'media',\r\n            size: {w: null, h: null},\r\n            content: null,\r\n            coords: {x: null, y: null}, // x, y\r\n            id: id,\r\n            targetSection: this.props.editComponentName,\r\n        };\r\n\r\n        this.props.eventStreamBuild.emit('EventBuildComponents', {\r\n            componentsPattern: componentsPatternMedia,\r\n            type: componentsPatternMedia.type,\r\n            component: <Media\r\n                            key = {`media${id}`}\r\n                            targetSection = {this.props.editComponentName}\r\n                            sizeParentBox = {this.props.sizeParentBox}\r\n                            content = {null}\r\n                            id = {id}\r\n                            path = {'/img/photoPattern.mp4'}\r\n                            {...componentsPatternMedia}\r\n                            type = 'media'\r\n                            mode = 'dev'\r\n                        />\r\n        });\r\n        event.stopPropagation();\r\n    }\r\n\r\n    addInput = event => {\r\n        let id = Math.random().toFixed(3);\r\n\r\n        const  componentsPatternInput = {\r\n            type: 'input',\r\n            size: {w: null, h: null},\r\n            typeInput: 'button',\r\n            color: null,\r\n            fontSize: null,\r\n            borderRadius: null,\r\n            content: null,\r\n            coords: {x: null, y: null}, // x, y\r\n            id: id,\r\n            targetSection: this.props.editComponentName,\r\n        };\r\n\r\n        this.props.eventStreamBuild.emit('EventBuildComponents', {\r\n            componentsPattern: componentsPatternInput,\r\n            type: componentsPatternInput.type,\r\n            component: <Input\r\n                            key = {`input${id}`}\r\n                            targetSection = {this.props.editComponentName}\r\n                            sizeParentBox = {this.props.sizeParentBox}\r\n                            id = {id}\r\n                            inputType = 'button'\r\n                            {...componentsPatternInput}\r\n                            type = 'input'\r\n                            mode = 'dev'\r\n                        />\r\n        });\r\n        event.stopPropagation();\r\n    }\r\n\r\n    addSection = event => {\r\n        let id = Math.random().toFixed(3);\r\n\r\n        const componentsPatternBackground = {\r\n            backgroundColor: null,\r\n            backgroundImage: null,\r\n            targetSection: `Section${id}`,\r\n            id: `Section${id}`,\r\n            type: 'background',\r\n        };\r\n        this.props.eventStreamBuild.emit('EventNewSection', {\r\n            componentsPattern: componentsPatternBackground,\r\n            component: <BackgroundComponent\r\n                            {...componentsPatternBackground}\r\n                            key = {`bg${id}`}\r\n                            id = {id}\r\n                            targetSection = {`Section${id}`}\r\n                            width = '100%'\r\n                            height = '800px'\r\n                            type = 'background'\r\n                            mode = 'dev'\r\n                        />\r\n        });\r\n        event.stopPropagation();\r\n    }\r\n\r\n    render(){\r\n\r\n        if (this.state.mode === 'build'){\r\n            return (\r\n                <div className = 'ComponentsMenu'>\r\n                    <button \r\n                        onClick = {this.addImage} \r\n                        className = 'ImageTool CompoentnsMenu_button' \r\n                    >\r\n                        <span>Image</span>\r\n                    </button>\r\n                    <button \r\n                        onClick = {this.addText} \r\n                        className = 'TextTool CompoentnsMenu_button' >\r\n                        <span>Text</span>\r\n                    </button>\r\n                    <button\r\n                        onClick = {this.addInput}\r\n                        disabled = {this.props.editComponentName !== 'Header' ? false : true}\r\n                        className = 'ButtonTool CompoentnsMenu_button' >\r\n                        <span>Button</span>\r\n                    </button>\r\n                    <button onClick = {this.addMedia}\r\n                        className = 'VideoTool CompoentnsMenu_button'\r\n                    >\r\n                        <span>Video</span>\r\n                    </button>\r\n                </div>\r\n            )\r\n        } else if (this.state.mode === 'section') {\r\n            return (\r\n                <div className = 'sectionMode'>\r\n                    <button\r\n                        onClick = {this.addSection}\r\n                        className = 'newSectionTool CompoentnsMenu_button'\r\n                    >\r\n                        <span>New section</span>\r\n                    </button>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default BuildMenu;","import React,{Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Icon from '../Icon/icon';\r\nimport BuildMenu from '../componentsBuildMenu/BuildMenu';\r\n\r\nimport './controllers.scss';\r\n\r\nclass Controllers extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        countComponents: PropTypes.number.isRequired, /** @number last project id */\r\n        sizeParentBox: PropTypes.object, /** @Object with width and height parent(bg) */\r\n        eventStreamBuild: PropTypes.object, /** @Events stream */\r\n        menuActive: PropTypes.bool, /** @Bool value active menu or unactive */\r\n    }\r\n\r\n    state = {\r\n        viewComponentMenu: false,\r\n        editComponentName: this.props.editComponentName,\r\n        shiftX: 0,\r\n        shiftY: 0,\r\n        coordsX: '50%',\r\n        coordsY: '0',\r\n        shadowDisplay: 'block'\r\n    }\r\n\r\n    componentMenu = event => {\r\n        this.setState({viewComponentMenu: this.state.viewComponentMenu ? false : true});\r\n        event.stopPropagation();\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <Fragment>\r\n            {\r\n                <div\r\n                ref = {this.refControll}\r\n                className = 'ControllersEditComponent'\r\n                >\r\n                    <Icon\r\n                        onClick = {this.componentMenu}\r\n                        className = 'ControllersEditComponent__addButton'\r\n                        path = '/img/addButton.png'\r\n                    />\r\n                    { this.state.viewComponentMenu ?\r\n                        <BuildMenu\r\n                            key = {`buildMenu ${this.state.editComponentName}`}\r\n                            mode = 'build'\r\n                            eventStreamBuild = {this.props.eventStreamBuild}\r\n                            editComponentName = {this.state.editComponentName}\r\n                            sizeParentBox = {this.props.sizeParentBox}\r\n                            countComponents = {this.props.countComponents}\r\n                        /> : null\r\n                    }\r\n                </div>\r\n            }\r\n            </Fragment>\r\n        )\r\n    }\r\n\r\n    componentDidUpdate = () => {\r\n        if (this.props.editComponentName !== this.state.editComponentName)\r\n            this.setState({\r\n                ...this.state,\r\n                editComponentName: this.props.editComponentName\r\n            })\r\n    }\r\n\r\n}\r\n\r\nexport default Controllers;","import React,{Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport RenderInBrowser from 'react-render-in-browser';\r\n/* ------- Events streams ------- */\r\nimport eventEmitter from '../../EventEmitter'; // common\r\nimport EventBuild from 'events'; // for builder controllers\r\n/* ------- For load project and exit from project ------- */\r\nimport {loadCurrentProjectAction, exitProjectAction} from '../../redux/actions';\r\n/* ------- Moddlewares ------- */\r\nimport {middlewareDeleteProjectComponent} from '../../redux/middleware/middlewareDelete';\r\nimport updateMiddleware from '../../redux/middleware/updateMiddleware';\r\n/* ------- HOC for het firebase controll object ------- */\r\nimport withScroll from '../../components/withScroll';\r\nimport withFirebase from '../../components/withFirebase';\r\n/* ------- Child components ------- */\r\nimport AdditionalTools from '../../components/additionalTools/additionalTools';\r\nimport builderHOC from '../../components/builderHOC';\r\nimport Controllers from '../../components/controllers/controllers';\r\nimport Loader from '../../components/loading/Loader';\r\nimport Header from '../../components/header/Header';\r\nimport Section from '../../components/buildComponents/section';\r\nimport BuildMenu from '../../components/componentsBuildMenu/BuildMenu';\r\n\r\nimport './build.scss';\r\n\r\nclass Build extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        firebase: PropTypes.object.isRequired, /** @firebase class for use firebase functions */\r\n        active: PropTypes.bool, /** @active - status firebase auth */\r\n        dispatch: PropTypes.func.isRequired, /** @dispatch - redux */\r\n        history: PropTypes.object, /** @Router HTML5 history */\r\n        location: PropTypes.object, /** @Router */\r\n        match: PropTypes.object.isRequired, /** @Router */\r\n        userData: PropTypes.object.isRequired, /** @UserData data about projects,user and current edit prject */\r\n    }\r\n\r\n    state = {\r\n            idProject: parseInt(this.props.match.params.param), /** @Id project */\r\n            editStart: false, /** @Bool start edit or no */\r\n            isChange: false, /** @Bool detected changes */\r\n            isLoadComponents: true, /** @Bool load all necessary components  */\r\n            projectEmpty: false, /** @Bool detected project undefiend */\r\n            componentJSX: [], /** @Array with JSX */\r\n            editComponentName:  null, /** @String | @null name current edit component */\r\n            menuActive: false, /** @bool active menu or no */\r\n            sizeParentBox: null, /** @Object size store */\r\n        }\r\n\r\n        eventEmitterBuild = new EventBuild(); // events stream for controllers\r\n        timer = null; // save timer\r\n\r\n    workModeEdit = itemEvent => {\r\n        /* set edit mode */\r\n        if (itemEvent.editStart)\r\n        this.setState({\r\n            ...this.state,\r\n            editStart: itemEvent.editStart,\r\n            editComponentName: itemEvent.targetSection,\r\n            menuActive: true,\r\n        });\r\n    }\r\n\r\n    deleteComponent = eventItem => {\r\n        /* delete component from DB and from JSX array */\r\n        if (eventItem.id === 'Header' && eventItem.type === 'background') return;\r\n        let {currentProjectsData} = this.props.userData;\r\n        let {componentJSX} = this.state;\r\n\r\n        const data = {\r\n            id: this.state.idProject,\r\n            uid: this.props.userData.idUser,\r\n            idComponent: eventItem.id,\r\n            sectionsProject: [...currentProjectsData.sectionsProject],\r\n            type: eventItem.type\r\n        }\r\n\r\n        this.props.dispatch(middlewareDeleteProjectComponent(data))\r\n        .then(id => {\r\n            if (id !== null){\r\n               const _componentJSX = componentJSX.filter(item => item.id !== id);\r\n            this.setState({\r\n                ...this.state,\r\n                componentJSX: _componentJSX\r\n            });\r\n        }\r\n        });\r\n    }\r\n\r\n    addComponentsFromBD = (array, sizeParentBox) => {\r\n        /* build JSX components from DB */\r\n        if (!sizeParentBox) sizeParentBox = this.state.sizeParentBox;\r\n        let {componentJSX} = this.state;\r\n        let componentsFromDB = [];\r\n\r\n        array.forEach(item => {\r\n            if (item.type !== 'background'){\r\n                const itemHash = {\r\n                    props: {\r\n                        ...item,\r\n                        sizeParentBox,\r\n                        mode: 'dev',\r\n                    },\r\n                    type: item.type,\r\n                    id: item.id,\r\n                }\r\n                const patternJSX = {\r\n                    id: item.id,\r\n                    targetSection: item.targetSection,\r\n                    component: builderHOC(itemHash)(Fragment)\r\n                };\r\n                componentsFromDB.push(patternJSX);\r\n            }\r\n        });\r\n            this.setState({\r\n                ...this.state,\r\n                isLoadComponents: false,\r\n                sizeParentBox: {...sizeParentBox},\r\n                componentJSX: [...componentJSX, ...componentsFromDB],\r\n            });\r\n    };\r\n\r\n    addComponent = itemEvent => {\r\n         /* create new component */\r\n        let {componentJSX} = this.state;\r\n        let {componentsPattern} = itemEvent;\r\n\r\n        const patternJSX = {\r\n            id: componentsPattern.id,\r\n            targetSection: componentsPattern.targetSection,\r\n            component: itemEvent.component\r\n        };\r\n            this.setState({\r\n                ...this.state,\r\n                componentJSX: [...componentJSX, patternJSX],\r\n            });\r\n    };\r\n\r\n    saveChangesComponent = itemEvent => {\r\n        /* save detected changes in DB and call confirm modal */\r\n        const {ms} = itemEvent;\r\n        if (this.timer) clearTimeout(this.timer);\r\n\r\n        this.timer = setTimeout(() => {\r\n            const {currentProjectsData} = this.props.userData;\r\n            const {userData} = this.props;\r\n            let findCurrentItem = false;\r\n            const _components = currentProjectsData.components.map(item => {\r\n                if (item.id === itemEvent.id) { findCurrentItem = true; return {...itemEvent}; }\r\n                return item;\r\n            });\r\n\r\n            if (!findCurrentItem) _components.push(itemEvent);\r\n\r\n            this.props.dispatch(updateMiddleware({\r\n                uid: userData.idUser,\r\n                projects: [...userData.projects],\r\n                components: _components,\r\n                sectionsProject: [...currentProjectsData.sectionsProject],\r\n                idProject: this.state.idProject\r\n            })).then(() =>\r\n                eventEmitter.emit('EventRedirectConfirm', {false: false, confirm: false}));\r\n        },ms);\r\n    };\r\n\r\n    mainComponent = null;\r\n    mainRefComponent = node => node ?\r\n        this.mainComponent = {data: node.getBoundingClientRect(), node: node} : node;\r\n\r\n    addNewSection = eventItem => {\r\n    /* create new project section */\r\n        const {userData} = this.props;\r\n        const {currentProjectsData} = userData;\r\n\r\n        this.props.dispatch(updateMiddleware({\r\n                uid: userData.idUser,\r\n                projects: [...userData.projects],\r\n                components: [...currentProjectsData.components,\r\n                            eventItem.componentsPattern],\r\n                sectionsProject: [\r\n                    ...currentProjectsData.sectionsProject,\r\n                    eventItem.componentsPattern.id\r\n                ],\r\n                idProject: this.state.idProject\r\n        })).then(() => {\r\n            this.setState({\r\n                ...this.state,\r\n                componentJSX:[\r\n                    ...this.state.componentJSX,\r\n                    eventItem.component\r\n                ]\r\n            }, () => {\r\n                eventEmitter.emit('EventSetState', currentProjectsData.sectionsProject.length);\r\n            });\r\n        });\r\n}\r\n\r\n    render(){\r\n\r\n        if (this.state.projectEmpty) return <Redirect to = '/Cabinet' />\r\n        \r\n        const {userData} = this.props;\r\n        const {currentProjectsData} = userData;\r\n        const section = currentProjectsData.sectionsProject;\r\n\r\n        if (userData.active && currentProjectsData.loadProject){\r\n            return (\r\n                <Fragment>\r\n                    <Header key = 'Header' title = \"Constructor\" idUser = {userData.idUser}  />\r\n                    <RenderInBrowser ie only>\r\n                        <h2 className = 'ie'>\r\n                            All the magic tricks in this app work best in Chrome/Firefox/Opera and other.\r\n                            <hr/>\r\n                            Internet explorer deprecated.\r\n                        </h2>\r\n                    </RenderInBrowser>\r\n                    <RenderInBrowser except ie>\r\n                        <div\r\n                            ref = {this.mainRefComponent} \r\n                            onMouseMove = {this.showAddSection} \r\n                            className = 'Build' \r\n                            key = 'Build'\r\n                        >\r\n                            { this.state.editStart &&\r\n                                <Controllers\r\n                                    key = 'controllers'\r\n                                    eventStreamBuild = {this.eventEmitterBuild}\r\n                                    editComponentName = {this.state.editComponentName}\r\n                                    countComponents = {currentProjectsData.components.length}\r\n                                    menuActive = {this.state.menuActive}\r\n                                    sizeParentBox = {this.state.sizeParentBox}\r\n                                />\r\n                            }\r\n                                <BuildMenu\r\n                                    key = 'buildMenu'\r\n                                    eventStreamBuild = {this.eventEmitterBuild}\r\n                                    countSection = {this.state.componentJSX.length * 5}\r\n                                    mode = \"section\"\r\n                                    className = 'menu'\r\n                                />\r\n                                <AdditionalTools key = 'tools'\r\n                                    eventStreamBuild = {this.eventEmitterBuild}\r\n                                    eventEmitter = {eventEmitter}\r\n                                    editComponentName = {this.state.editComponentName}\r\n                                />\r\n                            {section.length &&\r\n                                <Section mode = 'dev' key = 'section'\r\n                                    componentJSX = {this.state.componentJSX}\r\n                                    editComponentName = {this.state.editComponentName}\r\n                                    menuActive = {this.state.menuActive}\r\n                                    sizeParentBox = {this.state.sizeParentBox}\r\n                                    userData = {userData}\r\n                                />\r\n                            }\r\n                        </div>\r\n                    </RenderInBrowser>\r\n                </Fragment>\r\n            )\r\n        } else if (!this.props.firebase.getCurrentUser()) return <Redirect to = '/' />\r\n        else return <Loader  key = 'Loader' path = '/img/loading.gif' type = 'build' />\r\n    }\r\n\r\n    componentDidUpdate = (prevProps) => {\r\n\r\n        let {userData} = this.props;\r\n        let {currentProjectsData} = userData;\r\n        const isLoadComponents = this.state.isLoadComponents;\r\n        let sizeParentBox = null;\r\n\r\n        if (this.mainComponent && this.state.sizeParentBox === null)\r\n            sizeParentBox = {\r\n                width: this.mainComponent.data.width,\r\n                height: this.mainComponent.data.height,\r\n                top: this.mainComponent.data.top,\r\n                left: this.mainComponent.data.left,\r\n            }\r\n\r\n\r\n        if (userData.active && !currentProjectsData.loadProject) {\r\n            /** load current project of user session active and load project - false */\r\n            const current =  userData.projects.find(item => /* find current project */\r\n                                                    item.id === this.state.idProject)\r\n            if (current){ /* load data */\r\n                this.props.dispatch(loadCurrentProjectAction({\r\n                    id: current.id,\r\n                    typeProject: current.type,\r\n                    sectionsProject: [...current.sectionsProject],\r\n                    components: [...current.components]\r\n                }))\r\n                /* else redirect */\r\n            } else this.setState({...this.state, projectEmpty: true});\r\n        }\r\n        if (currentProjectsData.loadProject && isLoadComponents) {\r\n             /* if all components load build our JSX */\r\n            if (this.state.sizeParentBox === null && sizeParentBox !== null)\r\n                this.addComponentsFromBD([...currentProjectsData.components], sizeParentBox);\r\n            else this.addComponentsFromBD([...currentProjectsData.components]);\r\n            /** For scroll component */\r\n            eventEmitter.emit('EventSetState',currentProjectsData.sectionsProject.length-1);\r\n        }\r\n\r\n        // if delete section change count for scroller\r\n        const currentSection = currentProjectsData.sectionsProject.length;\r\n        const  prevSection = prevProps.userData.currentProjectsData.sectionsProject.length;\r\n        if (currentSection !== prevSection){\r\n        eventEmitter.emit('EventSetState', currentProjectsData.sectionsProject.length-1);\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        let {userData} = this.props;\r\n        let {currentProjectsData} = userData;\r\n        /**  If the session is already active, immediately load */\r\n        if (userData.active && !currentProjectsData.loadProject) {\r\n        /** load current project of user session active and load project - false */\r\n            const current =  userData.projects.find(item => item.id === this.state.idProject)\r\n            this.props.dispatch(loadCurrentProjectAction({\r\n                id: current.id,\r\n                sectionsProject: [...current.sectionsProject],\r\n                typeProject: current.type,\r\n                components: [...current.components]\r\n            }));\r\n\r\n            eventEmitter.on('EventModeEdit', this.workModeEdit);\r\n            this.eventEmitterBuild.on('EventBuildComponents', this.addComponent);\r\n            this.eventEmitterBuild.on('EventDeleteComponent', this.deleteComponent);\r\n            this.eventEmitterBuild.on('EventNewSection', this.addNewSection);\r\n            this.eventEmitterBuild.on('EventSaveChangesComponent', this.saveChangesComponent);\r\n        }; /** else redirect */\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n\r\n        let {userData} = this.props;\r\n        if (userData.active){\r\n            this.props.dispatch(exitProjectAction(true));\r\n            eventEmitter.off('EventModeEdit', this.workModeEdit);\r\n            this.eventEmitterBuild.off('EventBuildComponents', this.addComponent);\r\n            this.eventEmitterBuild.off('EventDeleteComponent', this.deleteComponent);\r\n            this.eventEmitterBuild.off('EventNewSection', this.addNewSection);\r\n            this.eventEmitterBuild.off('EventSaveChangesComponent', this.saveChangesComponent);\r\n        }\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        userData: {\r\n            active: state.cabinet.active,\r\n            idUser: state.cabinet.idUser,\r\n            projects: [...state.cabinet.projects],\r\n           currentProjectsData: {...state.builder}\r\n        },\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(withFirebase(withScroll(Build)));\r\n","import React from 'react';\r\n\r\n\r\nconst OpenPanel = props => {\r\n\r\n\r\n\r\n    return (\r\n        <div className = 'guide openPanelGuide'>\r\n            <h4 className = 'guide__title'>Open panel</h4>\r\n            <p className = 'guide_content'>\r\n                If you want to open the toolbar, you should double-click on the background.\r\n            </p>\r\n            <img src = {process.env.PUBLIC_URL + '/img/guideOpenPanel.gif'} alt = 'guide'></img>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OpenPanel;","import React from 'react';\r\n\r\n\r\nconst SearchGuide = props => {\r\n    return (\r\n        <div className = 'guide addComponents'>\r\n            <h4 className = 'guide__title'>Search guide</h4>\r\n            <p className = 'guide_content'>\r\n                On the toolbar, click on the \"Search\" button and\r\n                enter a keyword in the search field.\r\n            </p>\r\n            <img src = {process.env.PUBLIC_URL + '/img/search.gif'} alt = 'guide'></img>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchGuide;","import React from 'react';\r\n\r\n\r\nconst AddComponents = props => {\r\n    return (\r\n        <div className = 'guide addComponents'>\r\n            <h4 className = 'guide__title'>Add components</h4>\r\n            <p className = 'guide_content'>\r\n                Click on the button at the top of the screen\r\n                and select a component.\r\n            </p>\r\n            <img src = {process.env.PUBLIC_URL + '/img/add.gif'} alt = 'guide'></img>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddComponents;","import React from 'react';\r\n\r\n\r\nconst AddNewSection = props => {\r\n    return (\r\n        <div className = 'guide addComponents'>\r\n            <h4 className = 'guide__title'>Add components</h4>\r\n            <p className = 'guide_content'>\r\n                If you want to add a new section,\r\n                click on the button at the bottom of the page.\r\n            </p>\r\n            <img src = {process.env.PUBLIC_URL + '/img/newSection.gif'} alt = 'guide'></img>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddNewSection;","import React from 'react';\r\n\r\n\r\nconst CreateNewProject = props => {\r\n    return (\r\n        <div className = 'guide addComponents'>\r\n            <h4 className = 'guide__title'>Add components</h4>\r\n            <p className = 'guide_content'>\r\n                If you want to create a new project,\r\n                in your account (/ Cabinet) click on the button at the top of the page.\r\n            </p>\r\n            <img src = {process.env.PUBLIC_URL + '/img/newProject.gif'} alt = 'guide'></img>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CreateNewProject;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport OpenPanel from './Guides/OpenPanel';\r\nimport SearchGuide from './Guides/SearchGuide';\r\nimport AddComponents from './Guides/AddComponents';\r\nimport AddNewSection from './Guides/AddNewSection';\r\nimport CreateNewProject from './Guides/CreateNewProject';\r\nimport Icon from '../Icon/icon';\r\nimport './switchContainer.scss';\r\n\r\nclass SwitchContainer extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        mode: PropTypes.string,\r\n    }\r\n\r\n    state = {\r\n        mode: 'panel'\r\n    }\r\n\r\n    changeWorkMode = event => {\r\n        event.target === this.refOP &&\r\n        this.setState({\r\n            ...this.state,\r\n            mode: 'panel'\r\n        });\r\n        event.target === this.refSE &&\r\n        this.setState({\r\n            ...this.state,\r\n            mode: 'search'\r\n        });\r\n        event.target === this.refADD &&\r\n        this.setState({\r\n            ...this.state,\r\n            mode: 'add'\r\n        });\r\n        event.target === this.refSN &&\r\n        this.setState({\r\n            ...this.state,\r\n            mode: 'section'\r\n        });\r\n        event.target === this.refPR &&\r\n        this.setState({\r\n            ...this.state,\r\n            mode: 'project'\r\n        });\r\n        event.stopPropagation();\r\n    }\r\n\r\n    refOP = null;\r\n    refSE = null;\r\n    refADD = null;\r\n    refSN = null;\r\n    refPR = null\r\n\r\n    refOpenPanel  = node => this.refOP = node;\r\n    refSearch = node => this.refSE = node;\r\n    refAdd = node => this.refADD = node;\r\n    refSection = node => this.refSN = node;\r\n    refProject = node => this.refPR = node;\r\n\r\n    render(){\r\n        return(\r\n            <div className = 'switchContainer'>\r\n                <div className = 'col--17 col-sm-10 switchContainer__controllers'>\r\n                    <Icon className = 'switchContainer__menu' path = '/img/Menu_Burder.png' />\r\n                    <ul>\r\n                        <li>\r\n                            <input\r\n                                onClick = {this.changeWorkMode}\r\n                                className = {\r\n                                    this.state.mode !== 'panel' ?\r\n                                    'switch__button'\r\n                                    : 'switch__button activeButton'\r\n                                }\r\n                                type = 'button'\r\n                                ref = {this.refOpenPanel}\r\n                                value = 'Open panel for edit'\r\n                            />\r\n                        </li>\r\n                        <li>\r\n                            <input\r\n                                onClick = {this.changeWorkMode}\r\n                                className = {\r\n                                    this.state.mode !== 'search' ?\r\n                                    'switch__button'\r\n                                    : 'switch__button activeButton'\r\n                                }\r\n                                type = 'button'\r\n                                ref = {this.refSearch}\r\n                                value ='Search image/media'\r\n                            />\r\n                        </li>\r\n                        <li>\r\n                            <input\r\n                                onClick = {this.changeWorkMode}\r\n                                className = {\r\n                                    this.state.mode !== 'add' ?\r\n                                    'switch__button'\r\n                                    : 'switch__button activeButton'\r\n                                }\r\n                                type = 'button'\r\n                                ref = {this.refAdd}\r\n                                value ='Adding components'\r\n                            />\r\n                        </li>\r\n                        <li>\r\n                            <input\r\n                                onClick = {this.changeWorkMode}\r\n                                className = {\r\n                                    this.state.mode !== 'section' ?\r\n                                    'switch__button'\r\n                                    : 'switch__button activeButton'\r\n                                }\r\n                                type = 'button'\r\n                                ref = {this.refSection}\r\n                                value ='Adding new section'\r\n                            />\r\n                        </li>\r\n                        <li>\r\n                            <input\r\n                                onClick = {this.changeWorkMode}\r\n                                className = {\r\n                                    this.state.mode !== 'project' ?\r\n                                    'switch__button'\r\n                                    : 'switch__button activeButton'\r\n                                }\r\n                                type = 'button'\r\n                                ref = {this.refProject}\r\n                                value ='Create new project'\r\n                            />\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n                <div className = 'col--80--1 col-sm-12'>\r\n                    {this.state.mode === 'panel' &&\r\n                        <OpenPanel />\r\n                    }\r\n                    {this.state.mode === 'search' &&\r\n                        <SearchGuide />\r\n                    }\r\n                    {this.state.mode === 'add' &&\r\n                        <AddComponents />\r\n                    }\r\n                    {this.state.mode === 'section' &&\r\n                        <AddNewSection />\r\n                    }\r\n                    {this.state.mode === 'project' &&\r\n                        <CreateNewProject />\r\n                }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SwitchContainer;","import React,{Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\n\r\nimport SwitchContainer from '../../components/SwitchContainer/SwitchContainer';\r\nimport withFirebase from '../../components/withFirebase';\r\nimport Header from '../../components/header/Header';\r\nimport Loader from '../../components/loading/Loader';\r\n\r\nimport './guide.scss';\r\nclass Guide extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        config: PropTypes.object.isRequired, /** @Config app */\r\n        firebase: PropTypes.object.isRequired, /** @firebase class for use firebase functions */\r\n        history: PropTypes.object, /** @Router HTML5 history */\r\n        location: PropTypes.object, /** @Router */\r\n        match: PropTypes.object, /** @Router */\r\n    }\r\n\r\n    state = {\r\n        config: this.props.config\r\n    };\r\n\r\n    render(){\r\n\r\n        let user = this.props.firebase.getCurrentUser();\r\n        if (user && this.props.idUser) {\r\n            const { config } = this.state;\r\n            return (\r\n                <Fragment>\r\n                    <Header title = {config.title} idUser = {user.uid} />\r\n                    <section className = 'Guide'>\r\n                        <div className = 'container guide--flex'>\r\n                            <div className = 'Guide__about'>\r\n                                <h2>Documentation</h2>\r\n                                <p>Get started with {config.title}</p>\r\n                                <p className = 'Guide__about__rev'>\r\n                                    The Constructor guides are step-by-step walkthroughs\r\n                                    that help you get started using Constructor.\r\n                                </p>\r\n                            </div>\r\n                            <SwitchContainer />\r\n                        </div>\r\n                    </section>\r\n                </Fragment>\r\n            )\r\n        } else if (!user) return <Redirect to = { '/'} />\r\n        else return <Loader path = '/img/loading.gif' type = 'About' />\r\n\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n      idUser: state.cabinet.idUser,\r\n    }\r\n  };\r\n\r\nexport default connect(mapStateToProps)(withFirebase(Guide));","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {connect} from 'react-redux';\r\nimport {Route, Switch} from 'react-router-dom';\r\n/* ------- Moddlewares ------- */\r\nimport {middlewareLoadUserData} from './redux/middleware/loadUserMiddleware';\r\n/* ------- Child components ------- */\r\nimport withFirebase from './components/withFirebase';\r\nimport Loader from './components/loading/Loader';\r\nimport Index from './Pages/Index/Index';\r\nimport Cabinet from './Pages/Cabinet/Cabinet';\r\nimport Production from './Pages/Production/Production';\r\nimport About from './Pages/About/About';\r\nimport Build from './Pages/Build/Build';\r\nimport Guide from './Pages/Guide/Guide';\r\nimport ErrorPage from './components/ErrorCatch/ErrorPage';\r\nimport './root.scss';\r\n\r\nclass App extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        config: PropTypes.object.isRequired, /** @Config app */\r\n        firebase: PropTypes.object.isRequired, /** @firebase class for use firebase functions */\r\n        dispatch: PropTypes.func.isRequired, /** @dispatch - redux */\r\n    }\r\n\r\n    state = {\r\n        firebase: this.props.firebase,\r\n        firebaseLoadState: false,\r\n        config: this.props.config,\r\n    }\r\n\r\n    componentDidMount(){\r\n        /** Listening firebase answer after first load app */\r\n        this.props.firebase.auth.onAuthStateChanged((user) => {\r\n            if (!this.state.firebaseLoadState){\r\n                /** if user - true, loading data in store */\r\n                if (user) this.props.dispatch(middlewareLoadUserData(user.uid))\r\n                .then((res) =>  { /** show loader */\r\n                    this.setState({...this.state, firebaseLoadState: res});\r\n                }); /** if loading = redirect */\r\n                else  this.setState({...this.state, firebaseLoadState: true});\r\n            }\r\n        });\r\n    }\r\n\r\n    render(){\r\n        if (this.state.firebaseLoadState){\r\n            return (\r\n                <Switch>\r\n                        <Route\r\n                            path = {'/'} exact\r\n                            render = {(props) => <Index {...props} config = {this.state.config} />}\r\n                        />\r\n                        <Route \r\n                            path = '/Cabinet/' exact \r\n                            render = {(props) => <Cabinet {...props} config = {this.state.config} />}\r\n                        />\r\n                        <Route\r\n                            path = {'/Cabinet/About'}\r\n                            render = {(props) => <About {...props} config = {this.state.config} />}\r\n                        />\r\n                        <Route path = {'/Cabinet/Build/:param'} exact\r\n                            render = {(props) => <Build {...props} />}\r\n                        />\r\n                        <Route path = {'/Cabinet/Build/:param/Production'} exact component = {Production} />\r\n                        <Route path = {'/Cabinet/Guide'} exact \r\n                        render = {(props) => <Guide {...props} config = {this.state.config} />}\r\n                        />\r\n                        <Route path = {'*'} component = {Index} />\r\n                        <Route path = {'/crashPage'} component = {ErrorPage} />\r\n                </Switch>\r\n\r\n            )\r\n        } else return <Loader path = { '/img/loading.gif'} type = 'application' />\r\n    }\r\n}\r\n\r\nexport default connect()(withFirebase(App));","\n/** IE supports polyfills */\nimport 'core-js/es/map';\nimport 'core-js/es/set';\nimport 'core-js/es/symbol';\nimport 'core-js/es/array/includes';\nimport 'core-js/es/string/includes';\n/** --------------------- */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\nimport firebase from './Firebase/Firebase';\nimport ErrorBoundary from './components/ErrorCatch/ErrorBoundary';\nimport {HashRouter } from 'react-router-dom';\nimport {Provider} from 'react-redux';\nimport store from './redux/store';\nimport App from './App.jsx';\nimport 'normalize.css';\n\nimport firebaseContext from './Firebase/firebaseContext'; /** firebase contect API */\nimport config from './config.json'; /** app config file */\n\n\nReactDOM.render(\n        <HashRouter>\n            <ErrorBoundary>\n                <firebaseContext.Provider value = {firebase}>\n                    <Provider store = {store}>\n                        <App config = {config} />\n                    </Provider>\n                </firebaseContext.Provider>\n            </ErrorBoundary>\n        </HashRouter>,\n        document.getElementById('root')\n);\n\n\nserviceWorker.unregister();\n\n"],"sourceRoot":""}