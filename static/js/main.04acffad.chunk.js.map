{"version":3,"sources":["serviceWorker.js","EventEmitter.js","components/ErrorCatch/ErrorPage.jsx","components/ErrorCatch/ErrorBoundary.jsx","Firebase/firebaseConfig.js","Firebase/Firebase.js","redux/actions.js","redux/reducerBuilder.js","redux/reducerCabinet.js","redux/reducers.js","redux/store.js","redux/middleware/loadUserMiddleware.js","components/firebaseHOC.jsx","components/loading/Loader.jsx","components/Registration/Registration.jsx","Pages/Index/Index.jsx","redux/middleware/middlewareDelete.js","components/Icon/icon.jsx","components/header/Header.jsx","components/imageViewer/imageItem.jsx","components/modalWindow/ModalWindow.jsx","redux/middleware/createProjectMiddleware.js","components/List/Item.jsx","components/List/List.jsx","components/ProjectsSection/ProjectsSection.jsx","Pages/Cabinet/Cabinet.jsx","Pages/About/About.jsx","redux/middleware/updateMiddleware.js","components/imageViewer/imageViewer.jsx","components/instrumentsPanel/InstrumentsPanel.jsx","components/buildComponents/components/Background.jsx","components/buildComponents/components/Text.jsx","components/componentsBuildMenu/BuildMenu.jsx","components/controllers/controllers.jsx","components/buildComponents/header/headerBuild.jsx","Pages/Build/Build.jsx","App.jsx","index.js"],"names":["Boolean","window","location","hostname","match","stream","EventEmitter","ErrorPage","state","redirect","update","event","_this","setState","eventEmitter","emit","this","react_default","a","createElement","react_router","to","class","className","onClick","React","Component","ErrorBoundary","hasError","updateApplication","componentDidMount","on","componentWillUnmount","off","error","info","console","ErrorCatch_ErrorPage","props","children","log","PureComponent","firebaseConfig","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","interfaceFirebase","require","Firebase","Object","classCallCheck","firebase","auth","db","rules","setPersistence","Auth","Persistence","email","password","signInWithEmailAndPassword","createUserWithEmailAndPassword","signOut","currentUser","saveSession","exitProjectAction","type","exit","loadCurrentProjectAction","id","typeProject","component","loadUserAction","active","idUser","uid","projects","errorAction","initialState","loadProject","haveUpdateLoading","idProject","combineReducers","builder","arguments","length","undefined","action","objectSpread","toConsumableArray","cabinet","map","item","middleware","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","thunk","withExtraArgument","reduxCatch","getState","lastAction","dispatch","debug","store","createStore","middlewareLogin","_ref2","asyncToGenerator","regenerator_default","mark","_callee","_ref","wrap","_context","prev","next","login","then","response","collection","doc","user","get","docUser","data","catch","message","stop","_x","_x2","_x3","apply","middlewareLogOutUser","_ref6","_callee3","_ref5","_context3","_x7","_x8","_x9","withFirebase","assign","Loader","_useState","useState","path","slicedToArray","src","alt","emailRef","passwordRef","setRefEmail","node","setRefPassword","createUser","value","registration","set","autoComplete","ref","Index","title","registrationActive","regStatus","wrongEnter","statusRegistration","additionalUserInfo","isNewUser","showBox","authTo","emailImput","passwordImput","e","currentSelected","components_Registration_Registration","connect","middlewareDelete","filter","itemdb","Icon","_useState3","_useState5","draggable","iconPath","CabinetIcon","Header","redirectAbout","redirectA","redirectCabinet","redirectC","logOut","stopPropagation","pathname","add","icon","withRouter","ImageItem","urls","regular","urlRegular","full","urlFull","_useState7","isFull","selected","url","ModalWindow","workMode","images","buttonSearchDisabled","selectedItem","showUrl","imageBoxView","newProject","validateName","validateType","disabled","name","imageMenuActive","warning","lengthMax","lengthMin","inputSearch","inputSelect","searchBackground","search","inages","isFetch","concat","ok","json","Error","results","showMenuImage","showImage","target","setSelectedImage","idComponent","makeImageResultBox","items","i","imageItem","key","addNewProject","mode","selectOption","inputs","defineProperty","lengthInput","cancel","refSelect","refSearch","onChange","placeholder","react","middlewareCreateProject","list","lastProject","lastIndex","push","_useState4","canBuild","setCanBuild","_useState9","data-id","List","makeList","project","List_Item","ProjectsSection","components_List_List","Cabinet","deletItem","getCurrentUser","changeWorkMode","header_Header","modalWindow_ModalWindow","components_ProjectsSection_ProjectsSection","config","about","developer","year","updateMiddleware","newProjects","JSON","parse","stringify","find","ImageViewer","InstrumentsPanel","instrumentPanel","componentsStats","content","fontSize","color","backgroundImage","image","coords","left","top","updateSizeText","eventSize","closePanel","close","setSize","size","setContent","contentValue","updatePosition","eventItem","x","y","setColor","colorPickerActive","updateBimageStats","handleChangeComplete","rgb","colorRGB","r","g","b","saveChanges","searchImage","makePanelInstruments","min","max","lib","onChangeComplete","maxLength","defaultValue","componentDidUpdate","oldProps","oldState","targetBool","instrumentActive","Background","styled","div","_templateObject","backgroundColor","BackgroundComponent","count","setCount","boxComponent","createRef","background","_useState6","setBgColor","_useState8","setImage","changeColor","setBackgroundImage","useEffect","current","focus","boxInform","getBoundingClientRect","width","height","saveWidth","Title","h1","attrs","style","display","shadowDisplay","coordX","coordY","Text_templateObject","textColor","TextComponent","sizeParenBox","colorText","setColorText","sizeText","setSizeText","_useState10","contentText","setText","_useState11","_useState12","shiftCoords","setShiftCoords","_useState13","_useState14","dragNdrop","setDragNdrop","changeColorText","changeSizeText","changeContentText","eventContent","moveText","pageX","pageY","position","sizeTextValue","onMouseDown","rect","onDrag","onDragEnd","onWheel","shiftKey","deltaY","counter","BuildMenu","addText","countComponents","Text","addBackground","components_Background","ControllersBox","controllers_templateObject","Controllers","viewComponentMenu","shiftX","shiftY","coordsX","coordsY","componentMenu","saveCoords","controlBox","drag","refControll","menuActive","componentsBuildMenu_BuildMenu","HeaderBuild","changeMode","editStart","currentTarget","refBox","refBackground","build","componentJSX","readyBuild","controllers","mainWidth","mainBoxWidth","mainHeight","mainBoxHeight","Build","parseInt","params","param","editComponent","edit","changeEdit","modalSearch","modalImageViewer","modalSearchOn","imageViewerSwitch","workModeEdit","itemEvent","openInstrument","targetEqual","instumentActive","addHeaderComponent","saveChangesComponent","componentSaveInBase","currentProject","imageViewer_imageViewer","instrumentsPanel_InstrumentsPanel","header_headerBuild","prevProps","prevState","_this2","App","firebaseLoadState","onAuthStateChanged","_ref4","_callee2","_ref3","_context2","_x4","_x5","_x6","_this3","exact","render","Pages_Index_Index","Pages_About_About","ReactDOM","react_router_dom","ErrorCatch_ErrorBoundary","es","src_App","document","getElementById","navigator","serviceWorker","ready","unregister"],"mappings":"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","file":"static/js/main.04acffad.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log('This web app is being served cache-first by a service worker.');\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {EventEmitter} from 'events';\r\nconst stream = new EventEmitter();\r\nexport default stream;","import React from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\nimport eventEmitter from '../../EventEmitter';\r\n\r\nimport './errorPage.scss';\r\n\r\n\r\nclass ErrorPage extends React.Component {\r\n\r\n    state = {\r\n        redirect: false,\r\n    }\r\n\r\n    update = event => {\r\n       this.setState({redirect: true},\r\n        () => eventEmitter.emit('EventErrorCatchUpdate'));\r\n    }\r\n\r\n    render(){\r\n        if (this.state.redirect) return <Redirect to = '/' />\r\n        return (\r\n        <div class = 'container'>\r\n            <div class = 'flex-column'>\r\n                <h1>Application crash</h1>\r\n                <button className = 'button_updateApp' onClick = {this.update}>Update</button>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ErrorPage;","\r\n\r\nimport React from 'react';\r\nimport eventEmitter from '../../EventEmitter';\r\nimport ErrorPage from './ErrorPage';\r\nclass ErrorBoundary extends React.PureComponent {\r\n\r\n      state = { \r\n        hasError: false,\r\n      };\r\n\r\n    static getDerivedStateFromError(error) {\r\n        console.log(error);\r\n      // Обновить состояние с тем, чтобы следующий рендер показал запасной UI.\r\n      return { hasError: true};\r\n    }\r\n\r\n    updateApplication = event => {\r\n      this.setState({hasError: false});\r\n    };\r\n  \r\n    componentDidCatch(error, info) {\r\n      // Можно также сохранить информацию об ошибке в соответствующую службу журнала ошибок\r\n     console.error(error + \",\" + info);\r\n    }\r\n  \r\n    render() {\r\n      if (this.state.hasError) return <ErrorPage />\r\n      return this.props.children;\r\n    }\r\n\r\n    componentDidMount = () => {\r\n      eventEmitter.on('EventErrorCatchUpdate',this.updateApplication);\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n      eventEmitter.off('EventErrorCatchUpdate',this.updateApplication);\r\n    }\r\n  }\r\n\r\n  export default ErrorBoundary;","// setings in root folder / firebase.env\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n    databaseURL: process.env.REACT_APP_DATABASE_URL,\r\n    projectId: process.env.REACT_APP_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n    appId: process.env.REACT_APP_APPID\r\n};\r\n\r\nexport {firebaseConfig}","import * as firebase from 'firebase/app';\r\nimport {firebaseConfig} from './firebaseConfig';\r\n\r\nconst auth = require('firebase/auth');\r\nconst firestore = require('firebase/firestore');\r\n\r\nclass Firebase {\r\n\r\n        constructor(){\r\n                firebase.initializeApp(firebaseConfig);\r\n                this.auth = firebase.auth();\r\n                this.db = firebase.firestore();\r\n        }\r\n\r\n        saveSession(rules){\r\n                return this.auth.setPersistence(firebase.auth.Auth.Persistence[rules]);\r\n        }\r\n\r\n        login(email, password){\r\n                return this.auth.signInWithEmailAndPassword(email, password);\r\n        }\r\n\r\n        registration(email, password){\r\n                return this.auth.createUserWithEmailAndPassword(email, password)\r\n        }\r\n\r\n        signOut(){\r\n                return this.auth.signOut()\r\n        }\r\n\r\n        getCurrentUser() {\r\n                return this.auth.currentUser\r\n        }\r\n}\r\n\r\nlet interfaceFirebase = new Firebase();\r\ninterfaceFirebase.saveSession('SESSION');\r\n\r\nexport default interfaceFirebase;\r\n\r\nexport { auth, firestore };\r\n\r\n","const CREATE_PROJECT = 'CREATE_PROJECT';\r\nconst LOAD_UPDATE_PROJECT = \"LOAD_UPDATE_PROJECT\";\r\nconst LOAD_CURRENT = 'LOAD_CURRENT';\r\nconst LOG_OUT_CABINET = 'LOG_OUT_CABINET';\r\nconst LOAD_USER_CABINET = 'LOAD_USER_CABINET';\r\nconst ERROR_CABINET = 'ERROR_CABINET';\r\nconst EXIT_PROJECT = 'EXIT_PROJECT';\r\n\r\nconst createProjectAction = (state) => {\r\n    return {\r\n        type: CREATE_PROJECT,\r\n        projects: state,\r\n    }\r\n}\r\n\r\nconst exitProjectAction = (state) => {\r\n    return {\r\n        type: EXIT_PROJECT,\r\n        exit: state\r\n    }\r\n}\r\n\r\nconst loadCurrentProjectAction = (state) => {\r\n    return {\r\n        type: LOAD_CURRENT,\r\n        id: state.id,\r\n        typeProject: state.typeProject,\r\n        component: state.component\r\n    }\r\n}\r\n\r\nconst loadUpdateCurrentProject = (state) => {\r\n    return {\r\n        type: LOAD_UPDATE_PROJECT,\r\n        idProject: state.idProject,\r\n        component: state.component\r\n    }\r\n}\r\n\r\nconst loadUserAction = (state) => {\r\n    return {\r\n        type: LOAD_USER_CABINET,\r\n        active: true,\r\n        idUser: state.uid,\r\n        error: '',\r\n        projects: state.projects\r\n    }\r\n}\r\n\r\nconst logOutAction = (state) => {\r\n\r\n    return {\r\n        type: LOG_OUT_CABINET,\r\n        active: false,\r\n        idUser: null,\r\n        error: '',\r\n        projects: []\r\n    }\r\n}\r\n\r\nconst errorAction = (state) => {\r\n    return {\r\n        type: ERROR_CABINET,\r\n        error: state\r\n    }\r\n}\r\n\r\nexport {\r\n    CREATE_PROJECT, createProjectAction, /* cabinet */\r\n    LOAD_USER_CABINET, loadUserAction, /* cabinet */\r\n    LOG_OUT_CABINET, logOutAction, /* cabinet */\r\n    LOAD_CURRENT, loadCurrentProjectAction, /* builder */\r\n    LOAD_UPDATE_PROJECT, loadUpdateCurrentProject,\r\n    EXIT_PROJECT, exitProjectAction,\r\n    ERROR_CABINET, errorAction, /* both */\r\n}","import {LOAD_CURRENT,LOAD_UPDATE_PROJECT, EXIT_PROJECT} from './actions';\r\n\r\nconst initialState = {\r\n    loadProject: false,\r\n    haveUpdateLoading: true,\r\n    idProject: null,\r\n    typeProject: null,\r\n    component: []\r\n};\r\nexport default (state = initialState, action) => {\r\n    switch (action.type){\r\n\r\n        case LOAD_CURRENT: {\r\n            return {\r\n                ...state,\r\n                haveUpdateLoading: state.haveUpdateLoading ? false : true,\r\n                loadProject: true,\r\n                idProject: action.id,\r\n                typeProject: action.typeProject,\r\n                component: [...action.component]\r\n            }\r\n        }\r\n\r\n        case LOAD_UPDATE_PROJECT: {\r\n            return {\r\n                ...state,\r\n                haveUpdateLoading: false,\r\n                component: [...action.component]\r\n            }\r\n        }\r\n\r\n        case EXIT_PROJECT: {\r\n            if (action.exit)\r\n            return {\r\n                ...state,\r\n                haveUpdateLoading: true,\r\n                loadProject: false,\r\n                idProject: null,\r\n                typeProject: null,\r\n                component: []\r\n            }\r\n            else return state;\r\n        }\r\n        default: return state;\r\n    }\r\n};","import {LOAD_USER_CABINET, LOG_OUT_CABINET, ERROR_CABINET, CREATE_PROJECT, LOAD_UPDATE_PROJECT} from './actions';\r\n\r\nconst initialState = {\r\n    active: false,\r\n    idUser: null,\r\n    projects: [],\r\n    error: null,\r\n    //dateConnect: new Date(Date.now()).toLocaleString().replace(/\\s/ig,'').split(','),\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case LOAD_USER_CABINET: {\r\n\r\n            return {\r\n                ...state,\r\n                active: action.active,\r\n                idUser: action.idUser,\r\n                projects: [...action.projects]\r\n            }\r\n        }\r\n\r\n        case CREATE_PROJECT: {\r\n            return {\r\n                ...state,\r\n                projects: [...action.projects]\r\n            }\r\n        }\r\n\r\n        case LOAD_UPDATE_PROJECT: {\r\n            return {\r\n                ...state,\r\n                projects: state.projects.map(item => {\r\n                    if (item.id === action.idProject)\r\n                        item.component = [...action.component]\r\n                return item;\r\n                })\r\n            }\r\n        }\r\n\r\n        case LOG_OUT_CABINET: {\r\n            return {\r\n                ...state,\r\n                active: false,\r\n                idUser: null,\r\n                projects: []\r\n            }\r\n        }\r\n\r\n        case ERROR_CABINET: {\r\n            return {\r\n                ...state,\r\n                error: action.error\r\n            }\r\n        }\r\n        default: return state;\r\n    }\r\n}\r\n\r\n","import {combineReducers} from 'redux';\r\nimport reducerBuilder from './reducerBuilder';\r\nimport reducerCabinet from './reducerCabinet';\r\n\r\nexport default combineReducers({\r\n    builder: reducerBuilder,\r\n    cabinet: reducerCabinet,\r\n});","import {createStore, applyMiddleware, compose} from 'redux';\r\nimport firebase from  '../Firebase/Firebase';\r\nimport reduxCatch from 'redux-catch';\r\nimport thunk from 'redux-thunk';\r\nimport combineReducers from './reducers';\r\n\r\nconst composeEnhancers =\r\n  typeof window === 'object' &&\r\n  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?\r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\r\n    }) : compose;\r\n\r\n    function errorHandler(error, getState, lastAction, dispatch) {\r\n      console.error(error);\r\n      console.debug('current state', getState());\r\n      console.debug('last action was', lastAction);\r\n      // optionally dispatch an action due to the error using the dispatch parameter\r\n    }\r\n\r\nconst middleware = composeEnhancers(\r\n  applyMiddleware(thunk.withExtraArgument({firebase})),\r\n  applyMiddleware(reduxCatch(errorHandler))\r\n);\r\nconst store = createStore(combineReducers, middleware);\r\n\r\n\r\nexport default store;","import {loadUserAction, errorAction, logOutAction} from '../actions';\r\n\r\nconst middlewareLogin = (email,password) => async (dispatch,getState, {firebase}) => {\r\n        await firebase.login(email,password)\r\n        .then(response =>{\r\n            firebase.db.collection(\"users\").doc(response.user.uid).get()\r\n            .then(docUser => {\r\n                let user = docUser.data();\r\n                dispatch(loadUserAction({uid: docUser.id, projects: [...user.projects]}))\r\n            })\r\n        })\r\n        .catch((error) => {\r\n            console.error(error.message);\r\n            dispatch(errorAction(error.message));\r\n        });\r\n    }\r\n\r\nconst middlewareLoadUserData = (uid) => async (dispatch,getState, {firebase}) => {\r\n        await firebase.db.collection(\"users\").doc(uid).get()\r\n        .then(docUser => {\r\n            let user = docUser.data();\r\n            dispatch(loadUserAction({uid: uid, projects: [...user.projects]}))\r\n        })\r\n        .catch((error) => {\r\n            console.error(error.message);\r\n            dispatch(errorAction(error.message));\r\n        });\r\n    }\r\n\r\nconst middlewareLogOutUser = (uid) => async (dispatch,getState, {firebase}) => {\r\n    await firebase.signOut()\r\n    .then (response => {\r\n        dispatch(logOutAction());\r\n    })\r\n    .catch((error) => {\r\n        console.error(error.message);\r\n        dispatch(errorAction(error.message));\r\n    });\r\n}\r\nexport {\r\n    middlewareLogin,middlewareLoadUserData, middlewareLogOutUser\r\n}","import React from 'react';\r\nimport firebase from '../Firebase/Firebase';\r\n\r\nconst withFirebase = Component => props => (\r\n    <Component firebase = {firebase} {...props} />\r\n);\r\n\r\nexport default withFirebase;","import React,{useState} from 'react';\r\n\r\nexport default function(props) {\r\n    const [path] = useState(props.path);\r\n    return (\r\n            <div className = 'loaderBox'>\r\n                <img className = 'loader' src = {path} alt = 'loader'></img> \r\n                <p>Loading {props.type}</p>\r\n            </div>\r\n    )\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport eventEmitter from '../../EventEmitter';\r\nimport './registration.scss';\r\n\r\nimport withFirebase from '../../components/firebaseHOC';\r\n\r\n\r\nclass Registration extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        firebase: PropTypes.object.isRequired,\r\n    }\r\n\r\n    state = {\r\n        firebase: this.props.firebase,\r\n        error: null,\r\n    }\r\n\r\n    emailRef = null;\r\n    passwordRef = null;\r\n\r\n    setRefEmail = (node) => this.emailRef = node;\r\n    setRefPassword = (node) => this.passwordRef = node;\r\n\r\n    createUser = (event) => {\r\n\r\n        const email = this.emailRef.value;\r\n        const password = this.passwordRef.value;\r\n        const { firebase } = this.props;\r\n\r\n        firebase.registration(email, password)\r\n        .then(response => {\r\n            firebase.db.collection(\"users\").doc(response.user.uid).set({\r\n                'projects': [],\r\n                'email': email,\r\n            }).then(() => eventEmitter.emit('EventRegistrationCorrect', response))\r\n        })\r\n        .catch((error) => {\r\n        console.error(error.message);\r\n        this.setState({error: error.message});\r\n        });\r\n    };\r\n\r\n    render(){\r\n        let  { error } = this.state;\r\n\r\n        return (\r\n            <div className = 'RegistrationBox'>\r\n                <div  className = 'RegistrationForm'>\r\n                    <h3>Registration</h3>\r\n                    <form autoComplete = 'off' className = 'RegForm'>\r\n                        { error ?\r\n                            <p className = 'error'>{error}</p>\r\n                            : null\r\n                        }\r\n                        <span>E-mail</span>\r\n                        <input ref = {this.setRefEmail} type = 'text' />\r\n                        <span>Password</span>\r\n                        <input  autoComplete = \"off\" ref = {this.setRefPassword} type = 'password' />\r\n                        <input onClick = {this.createUser}\r\n                                className = 'loginButton'\r\n                                type = 'button'\r\n                                value = 'registration'\r\n                        />\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\nexport default withFirebase(Registration);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport eventEmitter from '../../EventEmitter';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nimport {middlewareLogin} from '../../redux/middleware/loadUserMiddleware';\r\n\r\nimport Loader from '../../components/loading/Loader';\r\nimport Registration from '../../components/Registration/Registration';\r\n\r\nimport {connect} from 'react-redux';\r\n\r\nimport './index.scss';\r\n\r\nclass Index extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        config: PropTypes.object,\r\n    }\r\n\r\n    state = {\r\n        title:  \"Constructor\",\r\n        registrationActive: false,\r\n        regStatus: false,\r\n        wrongEnter: false,\r\n        error: ''\r\n    }\r\n\r\n    statusRegistration = (event) => {\r\n        event.additionalUserInfo.isNewUser ?\r\n        this.setState({...this.state,\r\n                        regStatus: true,\r\n                        registrationActive: false,\r\n                        error: 'Account create!'\r\n                    })\r\n        : console.error('error registration');\r\n    }\r\n\r\n    showBox = (event) => {\r\n        this.setState ({\r\n            ...this.state,\r\n        registrationActive: this.state.registrationActive ? false : true\r\n        })\r\n    }\r\n\r\n    authTo = (event) => {\r\n            this.props.dispatch(middlewareLogin(this.emailImput.value, this.passwordImput.value));\r\n}\r\n    emailImput = null;\r\n    passwordImput = null;\r\n    emailRef = (node) => this.emailImput = node;\r\n    passwordRef = (node) => this.passwordImput = node;\r\n\r\n    render(){\r\n        if (this.props.active) return <Redirect to = { '/Cabinet'} />\r\n        else if (!this.props.active) {\r\n            let currentSelected = this.state.registrationActive;\r\n            return (\r\n                <div className = 'LoginPage flex-column'>\r\n                        <h1>{this.state.title}</h1>\r\n                        <div className = 'LoginBox'>\r\n                            <div className = 'LoginForm'>\r\n                                <h3>Connect form</h3>\r\n                                {\r\n                                    this.props.wrongEnter || this.state.regStatus ?\r\n                                    <p className = 'error'>{this.props.wrongEnter}</p>\r\n                                    : null\r\n                                }\r\n                                <p>E-mail</p>\r\n                                <input ref = {this.emailRef} type = 'text' />\r\n                                <p>Password</p>\r\n                                <input ref = {this.passwordRef} type = 'password' />\r\n                                <input \r\n                                    onClick = {this.authTo} \r\n                                    className = 'loginButton'\r\n                                    type = 'button'\r\n                                    value = 'enter' />\r\n                                <input\r\n                                    onClick = {this.showBox}\r\n                                    className = {currentSelected ? `loginButton selected`\r\n                                        : 'loginButton'}\r\n                                    type = 'button'\r\n                                    value = 'registration'\r\n                                    />\r\n                            </div>\r\n                        </div>\r\n                        {\r\n                            this.state.registrationActive ?\r\n                            <Registration auth = {this.props.auth} />\r\n                            : null\r\n                        }\r\n                </div>\r\n            )\r\n        } else  return <Loader path = '/img/loading.gif' type = 'session' />\r\n    }\r\n\r\n    componentDidMount = (e) => {\r\n        eventEmitter.on('EventRegistrationCorrect', this.statusRegistration);\r\n    }\r\n    componentWillUnmount = (e) => {\r\n        eventEmitter.off('EventRegistrationCorrect', this.statusRegistration);\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        active: state.cabinet.active, \r\n        wrongEnter: state.cabinet.error\r\n    }\r\n  }\r\n\r\nexport default connect(mapStateToProps)(Index);","\r\nimport {errorAction, loadUserAction} from '../actions';\r\n\r\nconst middlewareDelete = item => async (dispatch,getState, {firebase}) => {\r\n    await firebase.db.collection('users').doc(item.uid).get()\r\n    .then(user => user.data())\r\n    .then(data => {\r\n        return {id: data.id, projects: data.projects.filter(itemdb => itemdb.id !== item.id)};\r\n    })\r\n    .then(data => {\r\n        firebase.db.collection(\"users\").doc(item.uid).update({\r\n            \"projects\": data.projects\r\n        })\r\n        .then(response => {\r\n            dispatch(loadUserAction({uid: data.id, projects: data.projects}));\r\n        });\r\n    })\r\n    .catch((error) => {\r\n        console.error(error.message);\r\n        dispatch(errorAction(error.message));\r\n    });\r\n}\r\n\r\nexport default middlewareDelete;\r\n","import React, {useState} from 'react';\r\n\r\n\r\nfunction Icon(props){\r\n    const [path] = useState(props.path);\r\n    const [className] = useState(props.className ? props.className : null);\r\n    const [draggable] = useState(props.draggable ? true : false);\r\n\r\n    return (\r\n    <img\r\n        draggable = {draggable}\r\n        onClick = {props.onClick ? props.onClick : null}\r\n        className = {className}\r\n        title = {props.title ? props.title : null}\r\n        src = {process.env.PUBLIC_URL + path } alt = 'icon'>\r\n    </img>\r\n    )\r\n}\r\n\r\nexport default Icon;","import React from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport './header.scss';\r\n\r\nimport {middlewareLogOutUser} from '../../redux/middleware/loadUserMiddleware';\r\nimport {connect} from 'react-redux';\r\nimport {Redirect, withRouter} from 'react-router-dom';\r\n\r\nimport eventEmitter from '../../EventEmitter.js';\r\nimport Icon from '../Icon/icon';\r\n\r\n\r\nconst iconPath = require('../../config.json').CabinetIcon;\r\n\r\nclass Header extends React.Component {\r\n\r\n    static propTypes = {\r\n        title: PropTypes.string.isRequired,\r\n    };\r\n\r\n    state = {\r\n        title: this.props.title,\r\n        redirectAbout: {\r\n            path:  '/Cabinet/About',\r\n            redirectA: false,\r\n        },\r\n        redirectCabinet: {\r\n            path:  '/Cabinet',\r\n            redirectC: false,\r\n        }\r\n    };\r\n\r\n    logOut = event => {\r\n        this.props.dispatch(middlewareLogOutUser(this.props.idUser));\r\n        event.stopPropagation();\r\n    };\r\n\r\n    redirectAbout = event => {\r\n        if (this.props.location.pathname !== this.state.redirectAbout.path)\r\n           this.setState({\r\n               redirectAbout: {\r\n                   ...this.state.redirectAbout,\r\n                   redirectA: true\r\n               }\r\n           });\r\n        event.stopPropagation()\r\n    };\r\n\r\n    redirectCabinet = event => {\r\n        if (this.props.location.pathname !== this.state.redirectCabinet.path)\r\n        this.setState({\r\n            redirectCabinet: {\r\n                ...this.state.redirectCabinet,\r\n                redirectC: true\r\n            }\r\n        });\r\n        event.stopPropagation()\r\n    }\r\n\r\n    add = (e) => {\r\n        eventEmitter.emit('EventChangeWorkMode',{action: 'newProject'});\r\n    };\r\n\r\n    render(){\r\n\r\n        let {redirectA} = this.state.redirectAbout;\r\n        let {redirectC} = this.state.redirectCabinet;\r\n\r\n        if (redirectA) return <Redirect to = {this.state.redirectAbout.path} />\r\n        if(redirectC) return <Redirect to = {this.state.redirectCabinet.path} />\r\n\r\n        return (\r\n            <header>\r\n                <div className = 'container'>\r\n                    <div className = 'flex-row'>\r\n                            <div onClick = {this.redirectCabinet} className = 'header__CabinetInfo'>\r\n                                <Icon path = {iconPath} />\r\n                                <h3 className = 'tilteApp'>{this.state.title}</h3>\r\n                            </div>\r\n                            {this.props.location.pathname === '/Cabinet' ?\r\n                                <div onClick = {this.add} className = 'header__newProject__AddButton'>\r\n                                    <Icon path = '/img/plus.png' />\r\n                                </div>\r\n                                : null\r\n                            }\r\n                                <div  className = 'Navigator'>\r\n                                    <Icon onClick = {this.redirectAbout} title = 'about' path = '/img/about_logo.svg' />\r\n                                    <Icon onClick = {this.logOut} title = 'logOut' path = '/img/logOut.svg' />\r\n                                </div>\r\n                    </div>\r\n               </div>\r\n            </header>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect()(withRouter(Header));","import React, {useState} from 'react';\r\nimport eventEmitter from '../../EventEmitter';\r\n\r\nconst ImageItem = props => {\r\n\r\n    const [id] = useState(props.id);\r\n    const [urlRegular] = useState(props.urls.regular);\r\n    const [urlFull] = useState(props.urls.full);\r\n    const [isFull] = useState(props.isFull);\r\n\r\n    const showImageMenu = event => {\r\n       eventEmitter.emit(\"EventShowMenuImage\", {id: id, url: urlRegular, urlFull: urlFull});\r\n    }\r\n\r\n\r\n    return (\r\n        <div className = {props.selected ? 'ItemBox selected' : 'ItemBox'}>\r\n            <img\r\n                onClick = {showImageMenu}\r\n                src = {isFull ? urlFull : urlRegular}\r\n                alt = 'item'\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ImageItem;","import React,{Fragment} from 'react';\r\nimport isFetch from 'isomorphic-fetch';\r\nimport PropTypes from 'prop-types';\r\nimport eventEmitter from '../../EventEmitter.js';\r\n\r\nimport ImageItem from '../imageViewer/imageItem';\r\nimport Icon from '../Icon/icon';\r\n\r\nimport './modal.scss';\r\n\r\nclass ModalWindow extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        workMode: PropTypes.string.isRequired,\r\n        idComponent: PropTypes.string || PropTypes.number\r\n    }\r\n\r\n    state = {\r\n        workMode: this.props.workMode,\r\n        images: {\r\n            buttonSearchDisabled: false,\r\n            selectedItem: null, \r\n            showUrl: null, \r\n            images: null,\r\n            urlFull: null,\r\n            imageBoxView: false, \r\n            error: ''\r\n        },\r\n        newProject: {\r\n            validateName: false,\r\n            validateType: false,\r\n            disabled: true,\r\n            name: '',\r\n            type: 'empty'\r\n        },\r\n        imageMenuActive: false,\r\n        warning: {\r\n            lengthMax: 'Max length: 20 symbols',\r\n            lengthMin: 'Min length: 4 symbol',\r\n            type: 'Select type of webpage',\r\n        }\r\n    }\r\n\r\n    inputSearch = null;\r\n    inputSelect = null;\r\n\r\n    searchBackground = event => {\r\n\r\n        const api = 'https://api.unsplash.com/search/photos/?page=1&per_page=40&query=';\r\n        const search = this.inputSearch.value;\r\n\r\n        this.setState({...this.state, images: {...this.state.inages, buttonSearchDisabled: true}})\r\n\r\n        isFetch(`${api + search}&client_id=${process.env.REACT_APP_UNSPLASH_TOKEN}`)\r\n        .then(response => {\r\n            if (response.ok) return response.json();\r\n            else throw new Error('request invalid');\r\n        })\r\n        .then(response => {\r\n\r\n            let {results} = response;\r\n            if (results.length)\r\n            this.setState({\r\n                ...this.state,\r\n                images: {\r\n                    ...this.state.images,\r\n                    imageBoxView: true,\r\n                    error: '',\r\n                    images: [...results],\r\n                    buttonSearchDisabled: false\r\n                },\r\n            });\r\n            else throw new Error('Photos not found');\r\n        })\r\n        .catch(error => {\r\n            console.error(error.message);\r\n            this.setState({\r\n                ...this.state,\r\n                images: {...this.state.images, error: error.message},\r\n                imageBoxView: false,\r\n                buttonSearchDisabled: false\r\n            });\r\n        });\r\n    }\r\n\r\n    showMenuImage = event => {\r\n        this.setState({\r\n            ...this.state, \r\n            imageMenuActive: true,\r\n            images: {\r\n                ...this.state.images,\r\n                selectedItem: event.id, \r\n                showUrl: event.url,\r\n                urlFull: event.urlFull\r\n\r\n            }\r\n        });\r\n    }\r\n\r\n    showImage = event => {\r\n\r\n        const {showUrl} = this.state.images;\r\n        eventEmitter.emit(\"EventImageView\", {action: true, target: showUrl ? showUrl : null});\r\n        event.stopPropagation();\r\n    }\r\n\r\n    setSelectedImage = event => {\r\n\r\n        let images = {...this.state.images};\r\n        eventEmitter.emit(`EventSetBackgroundImage${this.props.idComponent}`,images);\r\n        eventEmitter.emit(`EventSetBImageInstumentPanel`,images);\r\n        event.stopPropagation();\r\n    };\r\n\r\n    makeImageResultBox = (items) => {\r\n        if (!items) return null;\r\n\r\n        return items.map((item,i) =>{\r\n           return <ImageItem \r\n                key = {`item${i}`} \r\n                id = {i}\r\n                selected = {this.state.images.selectedItem === i ? true : false} \r\n                isFull = {false}\r\n                urls = {{...item.urls}} \r\n            />\r\n        });\r\n    }\r\n\r\n    addNewProject = (event) => {\r\n        let mode = this.state[this.state.workMode];\r\n        if (mode.validateType &&  mode.validateName) {\r\n            eventEmitter.emit('EventAddProject',\r\n            {\r\n                title: this.state[this.state.workMode].name,\r\n                type: this.state[this.state.workMode].type\r\n            });\r\n\r\n            eventEmitter.emit('EventChangeWorkMode',{action: 'default'});\r\n        }\r\n    }\r\n\r\n    selectOption = (event) => {\r\n\r\n        let inputs = {...this.state[this.state.workMode]};\r\n        inputs.type = event.target.value;\r\n        inputs.validateType = inputs.type !== 'empty';\r\n        inputs.disabled = inputs.validateType && inputs.validateName ? false : true;\r\n        this.setState({\r\n            ...this.state,\r\n            [this.state.workMode]: inputs\r\n        });\r\n    }\r\n\r\n    validateName = (event) => {\r\n\r\n        let inputs = {...this.state[this.state.workMode]};\r\n        inputs.name = event.target.value;\r\n        let lengthInput = inputs.name.length;\r\n        inputs.validateName = lengthInput >= 4 && lengthInput < 20 ? true : false;\r\n        inputs.disabled = inputs.validateType && inputs.validateName ? false : true;\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            [this.state.workMode]: inputs\r\n        })\r\n    };\r\n\r\n    cancel = (event) => {\r\n\r\n        if (this.state.workMode === 'Search')\r\n            eventEmitter.emit(\"EventModalSearchOn\");\r\n        else  eventEmitter.emit('EventChangeWorkMode',{action: 'default'});\r\n    }\r\n\r\n    refSelect = (node) => this.inputSelect = node;\r\n    refSearch = node => this.inputSearch = node;\r\n\r\n    render(){\r\n\r\n        switch (this.state.workMode){\r\n            case 'newProject':\r\n                return (\r\n                    <div className = 'Modal'>\r\n                        <h3>Create new Project</h3>\r\n                        { this.state[this.state.workMode].name.length <= 3 ?\r\n                            <span className = 'warning'>{this.state.warning.lengthMin}</span> : null\r\n                        }\r\n                        { this.state[this.state.workMode].name.length >= 20 ?\r\n                            <span className = 'warning'>{this.state.warning.lengthMax}</span> : null\r\n                        }\r\n                        <input\r\n                            className = {this.state[this.state.workMode].validateName ? 'ready' : 'wrong'}\r\n                            value = {this.state[this.state.workMode].name}\r\n                            onChange = {this.validateName}\r\n                            type = 'text'\r\n                            placeholder = \"Project name\"\r\n                        />\r\n                        { !this.state[this.state.workMode].validateType ?\r\n                            <span className = 'warning'>{this.state.warning.type}</span> : null\r\n                        }\r\n                        <select onChange = {this.selectOption} >\r\n                            <option value = 'empty'>--------</option>\r\n                            <option value = 'landing'>Landing</option>\r\n                            <option value = 'portfolio'>Portfolio</option>\r\n                        </select>\r\n                        <input \r\n                            onClick = {this.addNewProject}\r\n                            className = 'acceptButton'\r\n                            disabled = {this.state[this.state.workMode].disabled}\r\n                            type = 'button'\r\n                            value = 'Submit'\r\n                        />\r\n                            <input onClick = {this.cancel} type ='button' value = 'Cancel' />\r\n                    </div>\r\n                )\r\n            case 'Search':\r\n                return (\r\n                    <Fragment>\r\n                        <div className = 'Modal Modal-search'>\r\n                            <h3>Search background image</h3>\r\n                            { this.state.images.error ?\r\n                                <span className = 'error'>{this.state.images.error}</span> : null\r\n                            }\r\n                            <input ref = {this.refSearch} type = 'text' placeholder = \"Photo name\" />\r\n                            <input \r\n                                disabled = {this.state.images.buttonSearchDisabled} \r\n                                className = 'acceptButton' \r\n                                type = 'button' \r\n                                value = 'Search'\r\n                                onClick = {this.searchBackground}\r\n                            />\r\n                            <input onClick = {this.cancel} type ='button' value = 'Cancel' />\r\n                            {\r\n                                this.state.images.imageBoxView ?\r\n                                <div className = 'searchResultBox'>\r\n                                    {this.makeImageResultBox([...this.state.images['images']])}\r\n                                </div>\r\n                                : null\r\n                            }\r\n                        </div>\r\n                        {  this.state.imageMenuActive ?\r\n                            <div className = 'ActionModalSearch'>\r\n                            <button onClick = {this.showImage} className = 'actionModalSearch__view'>\r\n                                <Icon path = '/img/view.png' />\r\n                            </button>\r\n                            <button onClick = {this.setSelectedImage} className = 'actionModalSearch__settings'>\r\n                                <Icon path = '/img/settings.png' />\r\n                            </button>\r\n                            </div>\r\n                            : null\r\n                        }\r\n                    </Fragment>\r\n                )\r\n            default: return <Fragment></Fragment>\r\n        }\r\n    }\r\n\r\n    componentDidMount = event => {\r\n        if (this.state.workMode === 'Search')\r\n            eventEmitter.on('EventShowMenuImage', this.showMenuImage);\r\n    }\r\n\r\n    componentWillUnmount = event => {\r\n        if (this.state.workMode === 'Search')\r\n            eventEmitter.off('EventShowMenuImage', this.showMenuImage);\r\n    }\r\n}\r\n\r\nexport default ModalWindow;\r\n\r\n","import {createProjectAction, errorAction} from '../actions';\r\n\r\n\r\nconst middlewareCreateProject = (uid, list, title, type) => async (dispatch,getState, {firebase}) => {\r\n    let lastProject = [...list];\r\n    const lastIndex = lastProject.length  ? lastProject[lastProject.length-1].id + 1 : 0;\r\n    lastProject.push({\"id\": lastIndex, \"title\": title, \"type\": type, component: []});\r\n\r\n    await firebase.db.collection(\"users\").doc(uid).update({\r\n        'projects': lastProject,\r\n    })\r\n    .then (() => dispatch(createProjectAction(lastProject)))\r\n    .catch(error => {\r\n        console.error(error.message);\r\n        dispatch(errorAction(error.message));\r\n    })\r\n};\r\n\r\nexport {\r\n    middlewareCreateProject\r\n}","import React, {useState} from 'react';\r\nimport eventEmitter from '../../EventEmitter';\r\nimport {withRouter, Redirect} from 'react-router-dom';\r\n\r\nfunction Item(props) {\r\n\r\n    const [path] = useState( `/Cabinet/Build/${props.id}`);\r\n\r\n    let [canBuild,setCanBuild] = useState(false);\r\n\r\n    const [id] = useState(props.id);\r\n    const [name] = useState(props.name);\r\n    const [type] = useState(props.type);\r\n\r\n\r\n    const build = event => {\r\n        if(props.location.pathname !== path)\r\n            setCanBuild(true);\r\n        event.stopPropagation();\r\n    };\r\n\r\n    const deleteItem = event => {\r\n        eventEmitter.emit('EventDeleteItem',{id: props.id, name: props.name, type: props.type});\r\n        event.stopPropagation();\r\n    };\r\n\r\n    if (canBuild) return <Redirect to = {path} />\r\n    else return (\r\n            <div className = 'item' data-id = {id}>\r\n                <p className = 'ProjectName'>{name}</p>\r\n                <p className = 'ProjectType'>{type}</p>\r\n                <div className = 'projectController'>\r\n                <input onClick = {build} className = 'projectControllerButton_enter' type = 'button' value = 'enter build' />\r\n                <input onClick = {deleteItem} className = 'projectControllerButton_delete' type = 'button' value = 'delete' />\r\n                </div>\r\n            </div>\r\n        )\r\n}\r\n\r\nexport default withRouter(Item);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport {middlewareCreateProject} from '../../redux/middleware/createProjectMiddleware';\r\n\r\nimport './list.scss';\r\n\r\nimport Item from './Item';\r\nimport eventEmitter from '../../EventEmitter.js';\r\n\r\nclass List extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        children: PropTypes.shape({\r\n            projects: PropTypes.array.isRequired,\r\n           count: PropTypes.number.isRequired,\r\n        }),\r\n        list: PropTypes.array.isRequired,\r\n    }\r\n\r\n    state = {\r\n        redirect: false,\r\n    }\r\n\r\n    addNewProject = (item) => {\r\n        if (this.props.idUser) {\r\n            this.props.dispatch(middlewareCreateProject(this.props.idUser, this.props.list, item.title, item.type));\r\n        } else this.setState({...this.state, redirect: true});\r\n    }\r\n\r\n\r\n    makeList = (list) => {\r\n\r\n        return list.map (project => {\r\n\r\n            return(\r\n                <Item\r\n                    key = {project.id}\r\n                    id = {project.id}\r\n                    name = {project.title}\r\n                    type = {project.type}\r\n                />\r\n            )\r\n        });\r\n    }\r\n\r\n    render(){\r\n        if (this.state.redirect)\r\n            return <Redirect to = { '/'} />\r\n            else return (\r\n                    <div className = 'projectsList__list'>\r\n                        {this.makeList([...this.props.list])}\r\n                    </div>\r\n                )\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        eventEmitter.on('EventAddProject',this.addNewProject);\r\n    }\r\n\r\n      componentWillUnmount = () => {\r\n        eventEmitter.off('EventAddProject',this.addNewProject);\r\n      }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        idUser: state.cabinet.idUser,\r\n        list: [...state.cabinet.projects]\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(List);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nimport List from '../List/List.jsx';\r\n\r\nimport './ProjectsSection.scss';\r\n\r\nclass ProjectsSection extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        projects: PropTypes.array,\r\n    }\r\n\r\n    render(){\r\n        return (\r\n                <section className = 'projectsList'>\r\n                <div className = 'container'>\r\n                <div className = 'flex-column'>\r\n                        <div className = 'projectsList__about'>\r\n                            <h3>Your Projects</h3>\r\n                        </div>\r\n                        <List />\r\n                    </div>\r\n                </div>\r\n                </section>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default ProjectsSection;","import React,{Fragment} from 'react';\nimport PropTypes from 'prop-types';\nimport eventEmitter from '../../EventEmitter.js';\nimport {Redirect} from 'react-router-dom';\nimport withFirebase from '../../components/firebaseHOC';\n\nimport {middlewareLogOutUser} from '../../redux/middleware/loadUserMiddleware';\nimport middlewareDelete from '../../redux/middleware/middlewareDelete';\nimport Loader from '../../components/loading/Loader';\nimport {connect} from 'react-redux';\n\nimport Header from '../../components/header/Header';\nimport Modal from '../../components/modalWindow/ModalWindow';\nimport ProjectsSection from '../../components/ProjectsSection/ProjectsSection';\n\nimport './Cabinet.scss';\n\nconst title = require('../../config.json').title;\n\nclass Cabinet extends React.PureComponent {\n\n  static propTypes = {\n    firebase: PropTypes.object.isRequired\n  }\n\n  state = {\n    workMode: 'default',\n  }\n\n  logOut = event => {\n    this.props.dispatch(middlewareLogOutUser(this.props.idUser));\n  }\n\n  deletItem = event => {\n    this.props.dispatch(middlewareDelete({...event, uid: this.props.firebase.getCurrentUser().uid}));\n  }\n\n  changeWorkMode = event => {\n    this.setState ({\n      ...this.state,\n      workMode: event.action,\n    });\n  }\n\n  render(){\n    if (this.props.active){\n      return (\n        <Fragment>\n          <Header title = {title} idUser = {this.props.idUser} />\n          {(this.state.workMode === 'newProject') ? <Modal workMode = {this.state.workMode} /> : null}\n            <ProjectsSection />\n        </Fragment>\n      )\n    } else if (!this.props.firebase.getCurrentUser()) return <Redirect to = { '/'} />\n    else return <Loader path = '/img/loading.gif' type = 'Cabinet' />\n    }\n\n\n  componentDidMount = () => {\n    eventEmitter.on('EventDeleteItem', this.deletItem);\n    eventEmitter.on('EventChangeWorkMode', this.changeWorkMode);\n  }\n\n  componentWillUnmount = () => {\n    eventEmitter.off('EventDeleteItem', this.deletItem);\n    eventEmitter.off('EventChangeWorkMode', this.changeWorkMode);\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    idUser: state.cabinet.idUser,\n    projects: [...state.cabinet.projects],\n    active: state.cabinet.active\n  }\n}\n\n\n\nexport default connect(mapStateToProps)(withFirebase(Cabinet));\n","import React, {Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nimport withFirebase from '../../components/firebaseHOC';\r\nimport Header from '../../components/header/Header';\r\n\r\nimport './about.scss';\r\n\r\nclass About extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        config: PropTypes.object.isRequired,\r\n        firebase: PropTypes.object.isRequired,\r\n    }\r\n\r\n    state = {\r\n        config: this.props.config\r\n    };\r\n\r\n    render(){\r\n        if (this.props.firebase.getCurrentUser()) {\r\n            const { config } = this.state;\r\n            return (\r\n                <Fragment>\r\n                    <Header title = {config.title} />\r\n                    <section className = 'About'>\r\n                        <div className = 'container'>\r\n                            <div className = 'col-12'>\r\n                                <div className = 'information'>\r\n                                <img alt = 'img' className = 'logoAbout' src = {process.env.PUBLIC_URL + '/img/about.jpg'}/>\r\n                                    <p className ='developer'><span>Developer:</span> {config.about.developer}</p>\r\n                                    <p className = 'year'><span>Year:</span> {config.about.year}</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </section>\r\n                </Fragment>\r\n            )\r\n        } else return <Redirect to = { '/'} />\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default withFirebase(About);","import {errorAction, loadUpdateCurrentProject} from '../actions';\r\n\r\nconst updateMiddleware = (item) => async (dispatch,getState, {firebase}) => {\r\n    let newProjects = item.projects.map(project => {\r\n        if (project.id === item.idProject) { project.component = [...item.component] }\r\n        return project;\r\n    });\r\n    await firebase.db.collection(\"users\").doc(item.uid).update({\r\n        'projects': JSON.parse(JSON.stringify(newProjects))\r\n    })\r\n    .then(response => {\r\n        let project = item.projects.find(itemdb => itemdb.id === item.idProject);\r\n        dispatch(loadUpdateCurrentProject({component: [...project.component], idProject: item.idProject}))\r\n    })\r\n    .catch(error => dispatch(errorAction(error.message)));\r\n};\r\n\r\nexport default updateMiddleware;","import React,{useState} from 'react';\r\nimport eventEmitter from '../../EventEmitter';\r\n\r\nimport './imageViewer.scss';\r\n\r\nfunction ImageViewer(props){\r\n\r\n    let [path] = useState(props.path);\r\n\r\n    const closeViewer = event => {\r\n        eventEmitter.emit(\"EventImageView\", { action: false, target: null});\r\n        event.stopPropagation();\r\n    }\r\n\r\n    return (\r\n        <div onClick = {closeViewer} className = 'ImageViewer'>\r\n            <img src = {path} alt = 'fullImage' />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ImageViewer;","import React, {Fragment} from 'react';\r\nimport eventEmitter from '../../EventEmitter';\r\nimport PropTypes from 'prop-types';\r\nimport { SketchPicker } from 'react-color';\r\nimport './instrumentsPanel.scss';\r\n\r\nimport Icon from '../Icon/icon';\r\n\r\nclass InstrumentsPanel extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        instrumentPanel:  PropTypes.object.isRequired,\r\n        editComponent: PropTypes.object.isRequired\r\n    };\r\n\r\n    state = {\r\n        instrumentPanel: {...this.props.instrumentPanel},\r\n        componentsStats: {\r\n            content: null,\r\n            fontSize: null,\r\n            color: null,\r\n            backgroundImage: null,\r\n            image: null,\r\n            coords: {left: null, top: null} // x, y\r\n        },\r\n        images: null,\r\n    };\r\n\r\n    updateSizeText = eventSize => {\r\n        this.setState({\r\n            ...this.state, \r\n            instrumentPanel: {...this.state.instrumentPanel},\r\n            componentsStats: {...this.state.componentsStats, fontSize: eventSize}\r\n        });\r\n    };\r\n\r\n    closePanel = event => {\r\n        eventEmitter.emit('EventClosePanel', {close: false});\r\n    };\r\n\r\n    setSize = event => {\r\n        // let {fontSize} = this.state.componentsStats;\r\n        let {idComponent} = this.state.instrumentPanel;\r\n        let size = event.target.value > 200 ? 200 : event.target.value;\r\n        this.setState({\r\n            ...this.state, \r\n            instrumentPanel: {...this.state.instrumentPanel},\r\n            componentsStats: {...this.state.componentsStats,fontSize: size}\r\n        },\r\n            () => eventEmitter.emit(`EventChangeSizeText${idComponent}`, {size: size })\r\n        );\r\n\r\n        event.stopPropagation();\r\n    };\r\n\r\n    setContent = event => {\r\n        let {idComponent} = this.state.instrumentPanel;\r\n        let contentValue = event.target.value;\r\n        this.setState({\r\n            ...this.state, \r\n            instrumentPanel: {...this.state.instrumentPanel},\r\n            componentsStats: {...this.state.componentsStats,content: contentValue}\r\n        },\r\n        () => eventEmitter.emit(`EventChangeContentText${idComponent}`,{content: contentValue}));\r\n        event.stopPropagation();\r\n    };\r\n\r\n    updatePosition = eventItem => {\r\n\r\n        this.setState({\r\n            ...this.state, \r\n            componentsStats: {\r\n                ...this.state.componentsStats,\r\n                coords: {\r\n                    ...this.state.componentsStats.coords,\r\n                    left: eventItem.x,\r\n                    top: eventItem.y\r\n                }\r\n            }\r\n        });\r\n    };\r\n\r\n    setColor = event => {\r\n        this.setState({...this.state,\r\n            instrumentPanel:{\r\n                ...this.state.instrumentPanel,\r\n                colorPickerActive: this.state.instrumentPanel.colorPickerActive ? false : true\r\n            }\r\n        });\r\n        event.stopPropagation();\r\n    };\r\n\r\n    updateBimageStats = eventItem => {\r\n        const {urlFull} = eventItem;\r\n        this.setState({\r\n            ...this.state,\r\n            componentsStats:{\r\n                ...this.state.componentsStats,\r\n                backgroundImage: urlFull\r\n            }\r\n        });\r\n    };\r\n\r\n    handleChangeComplete = event => {\r\n\r\n        const {rgb} = event;\r\n        let colorRGB = `rgb(${rgb.r},${rgb.g},${rgb.b},${rgb.a})`;\r\n\r\n        let {idComponent} = this.state.instrumentPanel;\r\n        if (this.state.instrumentPanel.target === 'background'){\r\n            this.setState({\r\n                ...this.state,\r\n                componentsStats: {...this.state.componentsStats,color: colorRGB}\r\n            }, () => eventEmitter.emit(`EventChangeColorBackground${idComponent}`, colorRGB));\r\n        }\r\n\r\n        else if (this.state.instrumentPanel.target === 'text') {\r\n            this.setState({\r\n                ...this.state,\r\n                componentsStats: {...this.state.componentsStats,color: colorRGB}\r\n            },\r\n            () => eventEmitter.emit(`EventChangeColorText${idComponent}`, colorRGB));\r\n        }\r\n\r\n    };\r\n\r\n    saveChanges = event => {\r\n        eventEmitter.emit(\"EventSaveChangesComponent\", {\r\n            ...this.state.componentsStats,\r\n            type: this.state.instrumentPanel.target\r\n        });\r\n\r\n        event.stopPropagation();\r\n    }\r\n\r\n    searchImage = event => {\r\n\r\n        let {idComponent} = this.state.instrumentPanel;\r\n        eventEmitter.emit('EventModalSearchOn', {idComponent: idComponent});\r\n\r\n        event.stopPropagation();\r\n    };\r\n\r\n    makePanelInstruments = (type) => {\r\n\r\n        let {colorPickerActive} = this.state.instrumentPanel;\r\n        let {fontSize} = this.state.componentsStats;\r\n            switch (type){\r\n                case 'text':\r\n                    return (\r\n                        <Fragment>\r\n                        <p className = 'titleInstument'>Color: </p>\r\n                        <input onClick = {this.setColor} className = 'button_switchColor' type = 'button' value = 'color pick' />\r\n                        <p className = 'titleInstument'>Text size: </p>\r\n                        <input \r\n                            onChange = {this.setSize} \r\n                            type=\"number\"\r\n                            min = '10' max = '200'\r\n                            value = {fontSize ? fontSize : 120 }\r\n                        />\r\n                            { colorPickerActive ?\r\n                                <SketchPicker\r\n                                onChangeComplete={this.handleChangeComplete}\r\n                                />\r\n                                : null\r\n                            }\r\n                        <p className = 'titleInstument'>Content: </p>\r\n                        <input onChange = {this.setContent} maxLength = '20' type = 'text' defaultValue = 'Title' />\r\n                        <input onClick = {this.saveChanges} className = 'saveButtonInstument' type = 'button' value = 'save changes' />\r\n                        </Fragment>\r\n                )\r\n                case 'background': \r\n                    return (\r\n                        <Fragment>\r\n                        <p className = 'titleInstument'>Color: </p>\r\n                        <input onClick = {this.setColor} className = 'button_switchColor' type = 'button' value = 'color pick' />\r\n                            { colorPickerActive ?\r\n                                <SketchPicker\r\n                                onChangeComplete={this.handleChangeComplete}\r\n                                />\r\n                                : null\r\n                            }\r\n                            <input onClick = {this.searchImage} className = 'ImageSearchButton' type = 'button' value = 'background-image' />\r\n                            <input onClick = {this.saveChanges} className = 'saveButtonInstument' type = 'button' value = 'save changes' />\r\n                        </Fragment>\r\n                    )\r\n                default: return <p className = 'warningInstruments'>Select elements for accses edit instruments</p>\r\n            }\r\n    };\r\n\r\n    componentDidUpdate = (oldProps, oldState) => {\r\n        let targetBool = oldState.instrumentPanel.target !== this.props.instrumentPanel.target;\r\n        let idBool = oldState.instrumentPanel.idComponent !== this.props.instrumentPanel.idComponent;\r\n        if (idBool || targetBool)\r\n            this.setState({\r\n                ...this.state,\r\n                instrumentPanel: {...this.props.instrumentPanel, colorPickerActive: false},\r\n                componentsStats: {\r\n                    content: null, fontSize: null, color: null,\r\n                    backgroundImage: null, image: null,\r\n                    coords: {left: null, top: null} // x, y\r\n                },\r\n            })\r\n    };\r\n\r\n    componentDidMount = event => {\r\n        eventEmitter.on(\"EventUpdateSizeText\", this.updateSizeText);\r\n        eventEmitter.on(\"EventSetBImageInstumentPanel\", this.updateBimageStats);\r\n        eventEmitter.on(\"EventUpdatePosition\", this.updatePosition);\r\n    };\r\n\r\n    componentWillUnmount = event => {\r\n        eventEmitter.off(\"EventUpdateSizeText\", this.updateSizeText);\r\n        eventEmitter.off(\"EventUpdatePosition\", this.updatePosition);\r\n    };\r\n\r\n    render(){\r\n        let { instrumentActive } = this.state.instrumentPanel;\r\n        return (\r\n            <Fragment>\r\n                <div  className = 'instumentsPanel'>\r\n                <button onClick = {this.closePanel} className = 'closeInstrumentsPanel'><Icon path = '/img/close.svg' /></button>\r\n                    <h3>Instruments</h3>\r\n                    {\r\n                        instrumentActive ? \r\n                        <p className = 'TextComponent'>{this.state.instrumentPanel.target}</p>\r\n                        : null\r\n                    }\r\n                    {\r\n                        instrumentActive ?\r\n                        <div  className= 'instuments'>{this.makePanelInstruments(this.state.instrumentPanel.target)}</div>\r\n                        : null\r\n                    }\r\n                </div>\r\n            </Fragment>\r\n        )\r\n    };\r\n};\r\n\r\nexport default InstrumentsPanel;","import React, {useEffect, useState} from 'react';\r\nimport eventEmitter from '../../../EventEmitter';\r\nimport styled from 'styled-components';\r\n\r\n\r\nconst Background = styled.div`\r\n    position: relative;\r\n    width: 100%;\r\n    height: 95vh;\r\n    background-size: cover;\r\n    background-color: ${props => props.backgroundColor};\r\n    background-image: url(${props => props.backgroundImage});\r\n`;\r\n\r\nconst BackgroundComponent = props => {\r\n\r\n    const [id] = useState(props.id);\r\n\r\n    const [count, setCount] = useState(0);\r\n    let boxComponent = React.createRef();\r\n\r\n    let [backgroundColor, setBgColor] = useState(props.background);\r\n    let [backgroundImage, setImage] = useState(props.backgroundImage ? props.backgroundImage : null);\r\n\r\n    const saveWidth = event => {\r\n        setCount(count + 1);\r\n        boxComponent.current.focus();\r\n        let boxInform =  boxComponent.current.getBoundingClientRect();\r\n        eventEmitter.emit('EventSaveWidth', {width: boxInform.width, height: boxInform.height});\r\n    }\r\n\r\n    const openBgInstruments = event => {\r\n        eventEmitter.emit('EventInstrumentPanel',{\r\n            target: 'background',\r\n            id: id,\r\n        });\r\n        event.stopPropagation();\r\n    }\r\n\r\n    const changeColor = color => {\r\n        setBgColor(color);\r\n    }\r\n\r\n    const setBackgroundImage = event => {\r\n        const {urlFull} = event;\r\n        setImage(urlFull);\r\n    };\r\n\r\n    const didUpdate = () => {\r\n        if (count === 0 ) saveWidth();\r\n        eventEmitter.on(`EventChangeColorBackground${id}`, changeColor);\r\n        eventEmitter.on(`EventSetBackgroundImage${id}`, setBackgroundImage);\r\n        return () => {\r\n            eventEmitter.off(`EventChangeColorBackground${id}`, changeColor);\r\n            eventEmitter.off(`EventSetBackgroundImage${id}`, setBackgroundImage);\r\n        }\r\n    }\r\n\r\n    useEffect(didUpdate);\r\n    return (\r\n        <Background\r\n            ref  = {boxComponent}\r\n            onClick={openBgInstruments}\r\n            backgroundColor = {backgroundColor}\r\n            backgroundImage = {backgroundImage}\r\n        >\r\n            {props.children}\r\n        </Background>\r\n    )\r\n}\r\n\r\nexport default BackgroundComponent;","\r\nimport React, {useEffect, useState} from 'react';\r\nimport eventEmitter from '../../../EventEmitter';\r\nimport styled from 'styled-components';\r\n\r\n\r\nconst Title = styled.h1.attrs(props => ({\r\n    style: {\r\n        display: props.shadowDisplay ? 'none' : 'block',\r\n        left: props.coordX ? props.coordX : '50%',\r\n        top:  props.coordY,\r\n}}))`\r\n    position: absolute;\r\n    transform: translate(-50%);\r\n    font-size: ${props => props.size};\r\n    color: ${props => props.textColor};\r\n    text-align: center;\r\n    margin: 0;\r\n`;\r\n\r\n// left: ${props => props.coordX ? props.coordX : '50%'};\r\n// top:  ${props => props.coordY};\r\n\r\nconst TextComponent = props =>  {\r\n\r\n    const [id] = useState(props.id);\r\n\r\n    const [sizeParenBox] = useState({...props.sizeParenBox});\r\n\r\n    let [colorText, setColorText] = useState(props.color);\r\n    let [sizeText, setSizeText] = useState(props.size ? props.size : 120);\r\n    let [contentText, setText] = useState(props.children);\r\n    const [shiftCoords, setShiftCoords] = useState(null)\r\n    const [dragNdrop, setDragNdrop] = useState(null);\r\n\r\n    const openTitleInstruments = event => {\r\n\r\n        eventEmitter.emit(`EventInstrumentPanel`,{\r\n            target: 'text',\r\n            id: id,\r\n            sizeTextValue: sizeText\r\n        });\r\n        event.stopPropagation();\r\n    }\r\n\r\n    const changeColorText = color => {\r\n        setColorText(color);\r\n    }\r\n\r\n    const changeSizeText = eventSize => {\r\n        const {size} = eventSize;\r\n        setSizeText(size);\r\n    }\r\n\r\n    const changeContentText = eventContent => {\r\n        const {content} = eventContent;\r\n        setText(content);\r\n    }\r\n\r\n\r\n    const didUpdate = event => {\r\n        eventEmitter.on(`EventChangeColorText${id}`, changeColorText);\r\n        eventEmitter.on(`EventChangeSizeText${id}`, changeSizeText);\r\n        eventEmitter.on(`EventChangeContentText${id}`, changeContentText);\r\n        return () => {\r\n            eventEmitter.off(`EventChangeColorText${id}`, changeColorText);\r\n            eventEmitter.off(`EventChangeSizeText${id}`, changeSizeText);\r\n            eventEmitter.off(`EventChangeContentText${id}`, changeContentText);\r\n        }\r\n    }\r\n\r\n    const saveCoords = event => {\r\n\r\n        let rect = event.target.getBoundingClientRect();\r\n        let left = rect.left;\r\n        let top = rect.top;\r\n        let width = rect.width;\r\n        let height = rect.height;\r\n        setShiftCoords({x: event.pageX - left - width/2, y: event.pageY - top + height/2.8});\r\n\r\n        event.stopPropagation();\r\n    }\r\n\r\n    const moveText = event => {\r\n\r\n        let coordX = event.pageX - shiftCoords.x;\r\n        let coordY = event.pageY - shiftCoords.y;\r\n\r\n        coordX = coordX <= 130 ? 130 : coordX;\r\n        coordY = coordY <= 0 ? 0 : coordY;\r\n\r\n        let convertToPercentX = (coordX * 100) / sizeParenBox.width;\r\n        let convertToPercentY = (coordY * 100) / sizeParenBox.height;\r\n\r\n        const position = {\r\n            x: convertToPercentX + '%', \r\n            y: convertToPercentY + '%', \r\n            shadowDisplay: event.type === 'drag' ? true : false\r\n        };\r\n        setDragNdrop(position);\r\n        \r\n        if (event.type === 'dragend') \r\n            eventEmitter.emit('EventUpdatePosition', position);\r\n        event.stopPropagation();\r\n    }\r\n\r\n    const weelResizeText = event => {\r\n\r\n        if (event.shiftKey && event.deltaY === -100) {\r\n            let counter = sizeText + 1;\r\n            counter = counter > 200 ? 200 : counter;\r\n            setSizeText(counter);\r\n            eventEmitter.emit('EventUpdateSizeText', counter);\r\n        }\r\n\r\n        if (event.shiftKey && event.deltaY === 100) {\r\n            let counter = sizeText - 1;\r\n             counter = counter <= 10 ? 10 : counter;\r\n             setSizeText(counter);\r\n             eventEmitter.emit('EventUpdateSizeText', counter);\r\n            }\r\n        event.stopPropagation();\r\n    }\r\n    useEffect(didUpdate);\r\n\r\n    return (\r\n        <Title\r\n            onClick={openTitleInstruments}\r\n            textColor = {colorText ? colorText : 'red'}\r\n            size = {sizeText ? sizeText + 'px' : '120px'}\r\n            draggable = {true}\r\n            onMouseDown = {saveCoords}\r\n            onDrag   = {moveText}\r\n            onDragEnd = {moveText}\r\n            onWheel = {weelResizeText}\r\n            coordX = {dragNdrop ? dragNdrop.x : null}\r\n            coordY = {dragNdrop ? dragNdrop.y : null}\r\n            shadowDisplay = {dragNdrop ? dragNdrop.shadowDisplay : false}\r\n        >\r\n            {contentText}\r\n        </Title>\r\n    )\r\n}\r\n\r\nexport default TextComponent;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport TextComponent from '../buildComponents/components/Text';\r\nimport BackgroundComponent from '../buildComponents/components/Background';\r\n\r\nimport eventEmitter from '../../EventEmitter';\r\n\r\nimport './buildMenu.scss';\r\n\r\nclass BuildMenu extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        component: PropTypes.object\r\n    }\r\n\r\n    state = {\r\n        component: {...this.props.component},\r\n        sizeParenBox: {...this.props.sizeParenBox},\r\n        title: 'Title'\r\n    }\r\n\r\n    addText = event => {\r\n        let id = this.props.countComponents;\r\n        let component = [<TextComponent sizeParenBox = {{...this.props.sizeParenBox}} id = {id} key = {`text${id}`}>{this.state.title}</TextComponent>];\r\n        eventEmitter.emit('EventBuildHeaderComponents',{target: 'Header', type: 'text', component: component});\r\n        event.stopPropagation();\r\n    }\r\n\r\n    addBackground = event => {\r\n        let id = this.props.countComponents;\r\n        let background = [<BackgroundComponent id = {id} key = {`bg${id}`}/>];\r\n        eventEmitter.emit('EventBuildHeaderComponents',{target: 'Header', type: 'background', component: background});\r\n\r\n        event.stopPropagation();\r\n    }\r\n\r\n    render(){\r\n\r\n        return (\r\n            <div className = 'ComponentsMenu'>\r\n                <button onClick = {this.addBackground} className = 'ImageTool CompoentnsMenu_button' ><span>Image</span></button>\r\n                <button onClick = {this.addText} className = 'TextTool CompoentnsMenu_button' ><span>Text</span></button>\r\n                <button \r\n                    disabled = {this.state.component.name !== 'Header' ? false : true}\r\n                    className = 'ButtonTool CompoentnsMenu_button' >\r\n                    <span>Button</span>\r\n                </button>\r\n                <button className = 'VideoTool CompoentnsMenu_button' ><span>Video</span></button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default BuildMenu;","import React,{Fragment} from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Icon from '../Icon/icon';\r\nimport BuildMenu from '../componentsBuildMenu/BuildMenu';\r\n\r\n\r\nconst ControllersBox = styled.div\r\n    .attrs(props =>({\r\n        style: {\r\n                left: props.coordX,\r\n                top: props.coordY,\r\n        }\r\n    })) `\r\n    position: absolute;\r\n    display: ${props => props.shadowDisplay}\r\n    `;\r\n\r\nclass Controllers extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        menuActive: PropTypes.bool,\r\n    }\r\n\r\n    state = {\r\n        viewComponentMenu: false,\r\n        shiftX: 0,\r\n        shiftY: 0,\r\n        coordsX: '50%',\r\n        coordsY: '0',\r\n        shadowDisplay: 'block'\r\n    }\r\n\r\n    componentMenu = (event) => {\r\n        this.setState({viewComponentMenu: this.state.viewComponentMenu ? false : true});\r\n        event.stopPropagation();\r\n    }\r\n\r\n    saveCoords = event => {\r\n        let left = this.controlBox.getBoundingClientRect().left;\r\n        let top = this.controlBox.getBoundingClientRect().top;\r\n        this.setState({...this.state, shiftX: event.pageX - left, \r\n        shiftY: event.pageY - top + 55 });\r\n\r\n        event.stopPropagation();\r\n    }\r\n\r\n    drag = event => {\r\n        if (!this.state.viewComponentMenu)\r\n            this.setState({\r\n                ...this.state,\r\n                coordsX: event.pageX - this.state.shiftX + 'px', \r\n                coordsY: event.pageY - this.state.shiftY + 'px',\r\n                shadowDisplay: event.type === 'drag' ? 'none' : 'block'\r\n            });\r\n        event.stopPropagation();\r\n    }\r\n\r\n    controlBox = null;\r\n    refControll = (node) => this.controlBox = node;\r\n\r\n\r\n    render(){\r\n\r\n        return (\r\n            <Fragment>\r\n            { this.props.menuActive ?\r\n                <ControllersBox\r\n                ref = {this.refControll}\r\n                className = 'ControllersEditComponent'\r\n                coordX = {this.state.coordsX}\r\n                coordY = {this.state.coordsY}\r\n                draggable = {!this.state.viewComponentMenu}\r\n                onMouseDown = {this.saveCoords}\r\n                onClick = {this.componentMenu}\r\n                onDrag   = {this.drag}\r\n                onDragEnd = {this.drag}\r\n                shadowDisplay = {this.state.shadowDisplay}\r\n                >\r\n                    <Icon\r\n                        draggable = {true}\r\n                        onClick = {this.componentMenu}\r\n                        className = 'addButton'\r\n                        path = '/img/addButton.png'\r\n                    />\r\n                    {this.state.viewComponentMenu ? \r\n                        <BuildMenu\r\n                            sizeParenBox = {this.props.sizeParenBox}\r\n                            countComponents = {this.props.countComponents}\r\n                            component = {{...this.props.component}}\r\n                        /> : null\r\n                    }\r\n                </ControllersBox>\r\n                : null\r\n            }\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Controllers;","import React, {Fragment} from 'react';\r\nimport eventEmitter from '../../../EventEmitter';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nimport BackgroundComponent from '../../buildComponents/components/Background';\r\nimport Controllers from '../../controllers/controllers';\r\n\r\n\r\nimport './headerBuild.scss';\r\n\r\nclass HeaderBuild extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        id: PropTypes.number.isRequired,\r\n    }\r\n\r\n    state = {\r\n        idProject: this.props.id,\r\n        component: {...this.props.children},\r\n        sizeParenBox: null,\r\n    }\r\n\r\n    saveWidth = eventItem => {\r\n        this.setState({sizeParenBox: {...eventItem}});\r\n    };\r\n\r\n\r\n    changeMode = (event) => {\r\n        if (!this.props.editStart) {\r\n            let rect = event.currentTarget.getBoundingClientRect();\r\n            const width = rect.width;\r\n            const height = rect.height;\r\n        eventEmitter.emit('EventModeEdit', {...this.state, width: width, height: height});\r\n        }\r\n    }\r\n\r\n    refBox = null;\r\n    refBackground = node => this.refBox = node;\r\n\r\n    render() {\r\n\r\n        return (\r\n            <Fragment>\r\n                <div onClick = {this.changeMode} className = 'Header'>\r\n                    <BackgroundComponent id = 'MainBackgroundHeader' background = 'grey'>\r\n                    {  this.props.children.build.componentJSX && this.props.children.build.type === 'text'  ?\r\n                            this.props.children.build.componentJSX : null\r\n                    }\r\n                    </BackgroundComponent>\r\n                    {!this.props.editStart ? <p className = 'warningEdit'>Click for start edit</p> : null}\r\n                    {!this.state.readyBuild ? \r\n                        <Controllers\r\n                            countComponents = {this.props.countComponents}\r\n                            menuActive = {this.props.menuActive}\r\n                            component = {{...this.state.component}}\r\n                            sizeParenBox = {this.state.sizeParenBox}\r\n                            mainWidth = {this.props.children.mainBoxWidth}\r\n                            mainHeight = {this.props.children.mainBoxHeight}\r\n\r\n                        />\r\n                        : null}\r\n                </div>\r\n            </Fragment>\r\n        )\r\n    }\r\n\r\n    componentDidMount = event => {\r\n        eventEmitter.on('EventSaveWidth', this.saveWidth);\r\n    }\r\n\r\n    componentWillUnmount = event => {\r\n        eventEmitter.off('EventSaveWidth', this.saveWidth);\r\n    }\r\n}\r\nexport default HeaderBuild;","import React,{Fragment} from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport {Redirect} from 'react-router-dom';\r\nimport eventEmitter from '../../EventEmitter';\r\n\r\nimport {loadCurrentProjectAction, exitProjectAction} from '../../redux/actions';\r\nimport updateMiddleware from '../../redux/middleware/updateMiddleware';\r\nimport withFirebase from '../../components/firebaseHOC';\r\nimport {connect} from 'react-redux';\r\n\r\nimport ImageViewer from '../../components/imageViewer/imageViewer';\r\nimport Loader from '../../components/loading/Loader';\r\nimport Header from '../../components/header/Header';\r\nimport InstrumentsPanel from '../../components/instrumentsPanel/InstrumentsPanel';\r\nimport ModalWindow from '../../components/modalWindow/ModalWindow';\r\nimport HeaderBuild from '../../components/buildComponents/header/headerBuild';\r\n\r\nimport './build.scss';\r\n\r\n\r\nclass Build extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        param: PropTypes.string,\r\n        match: PropTypes.shape({\r\n            params: PropTypes.shape({\r\n                param: PropTypes.string.isRequired\r\n            }).isRequired\r\n        }).isRequired\r\n    }\r\n\r\n    state = {\r\n            idProject: parseInt(this.props.match.params.param),\r\n            editComponent: {\r\n                name: null,\r\n                build: {\r\n                    name: null,\r\n                    target: null,\r\n                    type: null,\r\n                    mainBoxWidth: null,\r\n                    mainBoxHeight: null,\r\n                    component: [],\r\n                    componentJSX: []\r\n                },\r\n                edit: false\r\n            },\r\n            changeEdit: false,\r\n            instrumentPanel: {\r\n                colorPickerActive: false,\r\n                instrumentActive: false,\r\n                target: '',\r\n                idComponent: null,\r\n            },\r\n            menuActive: false,\r\n            editStart: false,\r\n            modalSearch: false,\r\n            modalImageViewer: {action: false, image: null },\r\n        }\r\n\r\n    modalSearchOn = event => {\r\n        this.setState({...this.state, modalSearch: this.state.modalSearch ? false : true});\r\n    }\r\n\r\n    imageViewerSwitch = event => {\r\n        this.setState({\r\n            ...this.state,\r\n            modalImageViewer: {\r\n                ...this.state.modalImageViewer, \r\n                action: event.action, \r\n                target: event.target\r\n            }\r\n        });\r\n    };\r\n\r\n    workModeEdit = itemEvent => {\r\n        if (!this.state.editStart || this.state.changeEdit)\r\n        this.setState({\r\n            ...this.state,\r\n            idProject: itemEvent.idProject,\r\n            editComponent: {\r\n                ...itemEvent.component,\r\n                mainBoxWidth: itemEvent.width,\r\n                mainBoxHeight: itemEvent.height\r\n            },\r\n            menuActive: true,\r\n            editStart: true\r\n        });\r\n\r\n    }\r\n\r\n    openInstrument = itemEvent => {\r\n        let targetEqual = this.state.instrumentPanel.target !== itemEvent.target;\r\n        let {instumentActive} = this.state.instrumentPanel;\r\n        if (targetEqual && this.state.editStart && !instumentActive)\r\n        this.setState({\r\n            ...this.state,\r\n            instrumentPanel: {\r\n                ...this.state.instrumentPanel,\r\n                instrumentActive: true,\r\n                sizeTextValue: itemEvent.sizeTextValue,\r\n                idComponent: itemEvent.id,\r\n                target: itemEvent.target\r\n            }\r\n        })\r\n    }\r\n\r\n    closePanel = event => {\r\n        this.setState({\r\n            ...this.state,\r\n            instrumentPanel: {\r\n                ...this.state.instrumentPanel,\r\n                colorPickerActive: false,\r\n                instrumentActive: event.close\r\n            }\r\n        });\r\n    };\r\n\r\n    addHeaderComponent = itemEvent => {\r\n\r\n        let {componentJSX} = this.state.editComponent.build;\r\n        this.setState({\r\n            ...this.state,\r\n            editComponent: {\r\n                ...this.state.editComponent,\r\n                build: {\r\n                    ...this.state.editComponent.build,\r\n                    target: itemEvent.target,\r\n                    type: itemEvent.type,\r\n                    componentJSX: [...componentJSX, ...itemEvent.component]},\r\n            },\r\n        });\r\n    };\r\n\r\n    saveChangesComponent = itemEvent => {\r\n        let componentSaveInBase = {...itemEvent, name: this.state.editComponent.name};\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            editComponent: {\r\n                ...this.state.editComponent,\r\n                build: {\r\n                    ...this.state.editComponent.build,\r\n                    component: [...this.state.editComponent.build.component, componentSaveInBase]\r\n                }\r\n            }\r\n        }, () => (\r\n        this.props.dispatch(updateMiddleware({\r\n            uid: this.props.idUser,\r\n            projects: [...this.props.currentProject],\r\n            component: [...this.state.editComponent.build.component],\r\n            idProject: this.state.idProject}))\r\n        ));\r\n    };\r\n\r\n\r\n    render(){\r\n        let instrumentActive = this.state.instrumentPanel.instrumentActive;\r\n        if (this.props.active && this.props.loadProject){\r\n            return (\r\n                    <Fragment key = 'build'>\r\n                    {   this.state.modalImageViewer.action ?\r\n                        <ImageViewer key = 'ImageViewer' path = {this.state.modalImageViewer.target} /> : null\r\n                    }\r\n                    {this.state.modalSearch ?\r\n                        <ModalWindow\r\n                            idComponent = {this.state.instrumentPanel.idComponent}\r\n                            key = 'ModalWindow' workMode = 'Search' /> : null\r\n                    }\r\n                    { instrumentActive ?\r\n                        <InstrumentsPanel\r\n                            key = 'InstrumentsPanel'\r\n                            editComponent =  {{...this.state.editComponent}}\r\n                            instrumentPanel = {{...this.state.instrumentPanel}}\r\n                        />\r\n                        : null\r\n                    }\r\n                        <Header key = 'Header' title = \"Constructor\"  />\r\n                        <HeaderBuild\r\n                                key = 'HeaderBuild'\r\n                                editStart = {this.state.editStart}\r\n                                countComponents = {this.state.editComponent.build.componentJSX.length}\r\n                                menuActive = {this.state.menuActive}\r\n                                id = {this.state.idProject}\r\n                        >\r\n                            {{...this.state.editComponent, name: 'Header'}}\r\n                        </HeaderBuild>\r\n                    </Fragment>\r\n            )\r\n        } else if (!this.props.firebase.getCurrentUser()) return <Redirect to = { '/'} />\r\n        else return <Loader  key = 'Loader' path = '/img/loading.gif' type = 'build' />\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevProps.loadProject === this.props.loadProject && this.props.haveUpdateLoading) {\r\n            let current =  this.props.currentProject.find(item => item.id === this.state.idProject)\r\n            this.props.dispatch(loadCurrentProjectAction({\r\n                id: current.id,\r\n                typeProject: current.type,\r\n                component: [...current.component]\r\n            }))\r\n        }\r\n    }\r\n    \r\n\r\n    componentDidMount = () => {\r\n        if (this.props.active && !this.props.loadProject && this.props.haveUpdateLoading) {\r\n            let current =  this.props.currentProject.find(item => item.id === this.state.idProject)\r\n            this.props.dispatch(loadCurrentProjectAction({\r\n                id: current.id,\r\n                typeProject: current.type,\r\n                component: [...current.component]\r\n            }))\r\n        };\r\n        eventEmitter.on('EventBuildHeaderComponents', this.addHeaderComponent);\r\n        eventEmitter.on('EventSaveChangesComponent', this.saveChangesComponent);\r\n        eventEmitter.on('EventClosePanel', this.closePanel);\r\n        eventEmitter.on('EventModalSearchOn', this.modalSearchOn);\r\n        eventEmitter.on('EventInstrumentPanel', this.openInstrument);\r\n        eventEmitter.on('EventImageView', this.imageViewerSwitch);\r\n        eventEmitter.on('EventModeEdit', this.workModeEdit);\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        if (this.props.active)  this.props.dispatch(exitProjectAction(true));\r\n        eventEmitter.off('EventBuildHeaderComponents', this.addHeaderComponent);\r\n        eventEmitter.off('EventSaveChangesComponent', this.saveChangesComponent);\r\n        eventEmitter.off('EventModalSearchOn', this.modalSearchOn);\r\n        eventEmitter.off('EventClosePanel', this.closePanel);\r\n        eventEmitter.off('EventInstrumentPanel', this.openInstrument);\r\n        eventEmitter.off('EventImageView', this.imageViewerSwitch);\r\n        eventEmitter.off('EventModeEdit', this.workModeEdit);\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        ...state.builder,\r\n        active: state.cabinet.active,\r\n        idUser: state.cabinet.idUser,\r\n        currentProject: state.cabinet.projects\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(withFirebase(Build));","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport {Route, Switch} from 'react-router-dom';\r\n\r\nimport {middlewareLoadUserData} from './redux/middleware/loadUserMiddleware';\r\nimport {connect} from 'react-redux';\r\nimport withFirebase from './components/firebaseHOC';\r\nimport Loader from './components/loading/Loader';\r\n\r\nimport Index from './Pages/Index/Index';\r\nimport Cabinet from './Pages/Cabinet/Cabinet';\r\nimport About from './Pages/About/About';\r\nimport Build from './Pages/Build/Build';\r\nimport ErrorPage from './components/ErrorCatch/ErrorPage';\r\n\r\n// require('es6-promise').polyfill();\r\n\r\nclass App extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        config: PropTypes.object.isRequired,\r\n        firebase: PropTypes.object.isRequired,\r\n    }\r\n\r\n    state = {\r\n        firebase: this.props.firebase,\r\n        firebaseLoadState: false,\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.props.firebase.auth.onAuthStateChanged((user) => {\r\n            if (!this.state.firebaseLoadState)\r\n                if (user) this.props.dispatch(middlewareLoadUserData(user.uid));\r\n\r\n                this.setState({...this.state, firebaseLoadState: true});\r\n        });\r\n    };\r\n\r\n    render(){\r\n        if (this.state.firebaseLoadState){\r\n        return (\r\n                <Switch>\r\n                    <Route\r\n                        path = {'/'} exact\r\n                        render = {(props) => <Index {...props} />}\r\n                    />\r\n                    <Route path = '/Cabinet/' exact component = {Cabinet}/>\r\n                    <Route\r\n                        path = {'/Cabinet/About'}\r\n                        render = {(props) => <About {...props} config = {this.props.config} />}\r\n                    />\r\n                    <Route path = {'/Cabinet/Build/:param'} component = {Build}/>\r\n                    <Route path = {'*'} component = {Index} />\r\n                    <Route path = {'/crashPage'} component = {ErrorPage} />\r\n                </Switch>\r\n\r\n        )\r\n        } else return <Loader path = { '/img/loading.gif'} type = 'application' />\r\n    }\r\n}\r\n\r\n// const mapStateToProps = (state) => {\r\n//     return {\r\n//       active: state.cabinet.active\r\n//     }\r\n//   }\r\n\r\nexport default connect()(withFirebase(App));","\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\n\nimport ErrorBoundary from './components/ErrorCatch/ErrorBoundary';\nimport {HashRouter } from 'react-router-dom';\nimport {Provider} from 'react-redux';\nimport store from './redux/store';\nimport App from './App.jsx';\nimport 'normalize.css';\n\n\nconst config = require('./config.json');\n\nReactDOM.render(\n        <HashRouter>\n            <ErrorBoundary>\n                <Provider store = {store}>\n                    <App config = {config} />\n                </Provider>\n            </ErrorBoundary>\n        </HashRouter >,\n        document.getElementById('root')\n);\n\nserviceWorker.unregister();\n\n"],"sourceRoot":""}