{"version":3,"sources":["serviceWorker.js","Firebase/firebaseConfig.js","Firebase/Firebase.js","EventEmitter.js","components/ErrorCatch/ErrorPage.jsx","components/ErrorCatch/ErrorBoundary.jsx","redux/actions.js","redux/reducerBuilder.js","redux/reducerCabinet.js","redux/reducers.js","redux/store.js","redux/middleware/loadUserMiddleware.js","Firebase/firebaseContext.js","components/firebaseHOC.jsx","components/loading/Loader.jsx","components/Registration/Registration.jsx","Pages/Index/Index.jsx","redux/middleware/middlewareDelete.js","components/Icon/icon.jsx","components/confirmBox/Confirm.jsx","components/header/Header.jsx","components/imageViewer/imageItem.jsx","components/modalWindow/ModalWindow.jsx","redux/middleware/createProjectMiddleware.js","components/List/Item.jsx","components/List/List.jsx","components/ProjectsSection/ProjectsSection.jsx","Pages/Cabinet/Cabinet.jsx","Pages/Production/Production.jsx","Pages/About/About.jsx","redux/middleware/updateMiddleware.js","components/imageViewer/imageViewer.jsx","components/instrumentsPanel/MediaTools/MediaInstruments.jsx","components/instrumentsPanel/ImageTools/ImageInstruments.jsx","components/instrumentsPanel/BackgroundTools/BackgroundInstruments.jsx","components/instrumentsPanel/TextTools/TextInstruments.jsx","components/instrumentsPanel/InstrumentsPanel.jsx","components/additionalTools/additionalTools.jsx","components/buildComponents/components/Input.jsx","components/buildComponents/components/Media.jsx","components/buildComponents/components/Image.jsx","components/buildComponents/components/Text.jsx","components/buildComponents/components/Background.jsx","components/componentsBuilder/BuilderComponents.jsx","components/componentsBuildMenu/BuildMenu.jsx","components/controllers/controllers.jsx","components/buildComponents/MainBackground/MainBackground.jsx","components/buildComponents/section.jsx","Pages/Build/Build.jsx","App.jsx","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","firebaseConfig","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firebaseInterface","require","Firebase","Object","classCallCheck","this","firebase","auth","db","rules","setPersistence","Auth","Persistence","email","password","signInWithEmailAndPassword","createUserWithEmailAndPassword","signOut","currentUser","stream","EventEmitter","ErrorPage","redirect","update","event","_this","setState","eventEmitter","emit","react_default","a","createElement","react_router","to","class","className","onClick","React","Component","ErrorBoundary","hasError","updateApplication","componentDidMount","on","componentWillUnmount","off","info","ErrorCatch_ErrorPage","props","children","PureComponent","exitProjectAction","type","exit","loadCurrentProjectAction","id","typeProject","sectionTitleProject","components","loadUserAction","active","idUser","uid","projects","errorAction","initialState","loadProject","idProject","combineReducers","builder","arguments","length","undefined","action","objectSpread","toConsumableArray","cabinet","map","item","middleware","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","thunk","withExtraArgument","store","createStore","middlewareLogin","_ref2","asyncToGenerator","regenerator_default","mark","_callee","dispatch","getState","_ref","wrap","_context","prev","next","login","response","collection","doc","user","get","docUser","data","message","stop","_x","_x2","_x3","apply","middlewareLogOutUser","_ref6","_callee3","_ref5","_context3","_x7","_x8","_x9","firebaseContext","createContext","withFirebase","Firebase_firebaseContext","Consumer","assign","Loader","_useState","useState","path","slicedToArray","src","alt","emailRef","passwordRef","setRefEmail","node","setRefPassword","createUser","value","Error","set","autoComplete","ref","Index","title","registrationActive","regStatus","wrongEnter","emailImput","passwordImput","statusRegistration","additionalUserInfo","isNewUser","showBox","stopPropagation","authTo","e","components_Registration_Registration","connect","middlewareDelete","filter","itemdb","Icon","_useState3","_useState5","draggable","Confirm","cbSaveChanges","cbCancelSave","iconPath","CabinetIcon","Header","isChange","redirectConfirm","redirectAbout","redirectA","redirectCabinet","redirectC","confirm","confirmSaveDetectChanges","logOut","pathname","add","componentWillMount","_this2","Fragment","components_confirmBox_Confirm","icon","withRouter","ImageItem","urls","regular","urlRegular","full","urlFull","_useState7","isFull","selected","url","polyfill","ModalWindow","workMode","images","buttonSearchDisabled","selectedItem","showUrl","imageBoxView","newProject","validateName","validateType","disabled","name","imageMenuActive","warning","lengthMax","lengthMin","inputSearch","inputSelect","searchBackground","api","concat","search","inages","isFetch","ok","json","results","showMenuImage","showImage","target","setSelectedImage","modalSearchMode","idComponent","mode","makeImageResultBox","items","i","imageItem","key","addNewProject","selectOption","inputs","defineProperty","lengthInput","cancel","refSelect","refSearch","onChange","placeholder","react","middlewareCreateProject","list","lastProject","lastIndex","header","push","backgroundImage","color","min","max","Math","floor","random","targetSection","_useState4","canBuild","setCanBuild","_useState9","data-id","List","makeList","project","List_Item","ProjectsSection","components_List_List","Cabinet","deletItem","getCurrentUser","changeWorkMode","header_Header","modalWindow_ModalWindow","components_ProjectsSection_ProjectsSection","Production","about","developer","year","updateMiddleware","newProjects","JSON","parse","stringify","find","ImageViewer","MediaInstruments","componentStats","content","fontSize","coords","x","y","cbSetSize","cbSearchImage","ImageInstruments","size","cbSetWidth","w","cbSetHeight","h","cbSetBorderRadius","borderRadius","cbSetOpacity","opacity","step","BackgroundInstruments","componentsStats","hasOwnProperty","cbSetColor","colorPickerActive","lib","onChangeComplete","cbHandleChangeComplete","TextInstruments","instrumentPanel","_content","font","cbSetFont","cbSetContent","maxLength","InstrumentsPanel","timer","updateSize","eventSize","closePanel","close","setSize","editComponentName","setFont","fontName","setContent","contentValue","setWidth","width","setHeight","height","updatePosition","eventItem","setColor","setOpacity","setBorderRadius","radius","updateBimageStats","image","handleChangeComplete","rgb","colorRGB","r","g","b","redirectSaveChanges","saveChanges","clearTimeout","setTimeout","searchImage","makePanelInstruments","TextTools_TextInstruments","BackgroundTools_BackgroundInstruments","ImageTools_ImageInstruments","MediaTools_MediaInstruments","componentDidUpdate","oldProps","oldState","instrumentActive","AdditionalTools","modalImageViewer","imageViewer_imageViewer","modalSearch","instrumentsPanel_InstrumentsPanel","mainBuilderData","InputComponent","styled","input","attrs","style","zIndex","indexZ","left","coordX","top","coordY","_templateObject","Input","istrumentsActive","getSizeBool","sizeParentBox","shiftCoords","posImage","startDragNdrop","openImageInstruments","componentsPatternImage","sizeTextValue","saveCoords","nativeEvent","which","element","refInput","getBoundingClientRect","cords","right","bottom","clientX","clientY","checkPivotPosition","borderDown","borderRight","delta","trans","transT","move","moveText","xItem","yItem","convertToPercentX","convertToPercentY","toFixed","stopDragNdrop","setCurrentImage","weelResizeText","shiftKey","deltaY","counter","saveSize","refInputComponent","onMouseDown","onMouseMove","onMouseLeave","onMouseUp","onDragStart","onWheel","data-imagecomponentwrapper","WrapperMedia","div","display","justifyContent","alignItems","Media_templateObject","Media","iframe","_templateObject2","MediaComponent","posMedia","drawContent","openMediaInstruments","componentsPatternMedia","refMedia","moveMedia","refMediaComponent","link","allowfullscreen","WrapperImg","Image_templateObject","ImageStyle","img","Image_templateObject2","Image","refImage","changeSizeImage","refImageComponent","data-imagecomponent","WrapperText","Text_templateObject","textColor","TextStyle","p","Text_templateObject2","TextComponent","isHaveSize","parent","colorText","sizeText","position","contentText","sectionNumber","openTitleInstruments","componentsPatternText","posText","changeColorText","changeSizeText","changeContentText","eventContent","refText","refTextComponent","data-textcomponent","Background","Background_templateObject","backgroundColor","BackgroundComponent","boxComponent","createRef","background","_useState6","setBgColor","_useState8","setImage","_useState11","changeColor","setBackgroundImage","saveScroll","useEffect","current","focus","boxInform","saveDataParent","onDoubleClick","componentsPatternBackground","data-name","BuilderComponents","Text","components_Background","components_Image","components_Media","components_Input","BuildMenu","componentsPatternInput","addText","component","addBackground","addImage","addMedia","addInput","inputType","addSection","Controllers","viewComponentMenu","shiftX","shiftY","coordsX","coordsY","shadowDisplay","componentMenu","refControll","componentsBuildMenu_BuildMenu","countComponents","MainBackground","editRedy","changeMode","editStart","refSection","refSectionFunc","currentProjectsData","componentJSX","data-class","Section","userData","buildComponents_MainBackground_MainBackground","menuActive","Build","parseInt","params","param","isLoadComponents","projectEmpty","scrollConfig","duration","delay","smooth","offset","modalSearchOn","itemEvent","modeHave","imageViewerSwitch","workModeEdit","openInstrument","addComponentsFromBD","array","componentsFromDB","forEach","mainComponent","componentsBuilder_BuilderComponents","patternJSX","addComponent","componentsPatternStatus","saveChangesComponent","findCurrentItem","_components","mainRefComponent","addNewSection","moveLocation","scrollTop","count","moveDown","moveUp","scroller","scrollTo","scroll","scrollToTop","section","showAddSection","controllers","countSection","additionalTools","buildComponents_section","App","firebaseLoadState","onAuthStateChanged","_ref4","_callee2","_ref3","_context2","_x4","_x5","_x6","_this3","exact","render","Pages_Index_Index","Pages_About_About","saveSession","ReactDOM","react_router_dom","ErrorCatch_ErrorBoundary","Provider","es","src_App","document","getElementById","URL","href","origin","addEventListener","fetch","contentType","headers","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"yoBAYMA,EAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DAmCN,SAASC,EAAgBC,EAAOC,GAC9BC,UAAUC,cACPC,SAASJ,GACTK,KAAK,SAAAC,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBG,QACfT,UAAUC,cAAcS,YAI1BC,QAAQC,IACN,iHAKEb,GAAUA,EAAOc,UACnBd,EAAOc,SAAST,KAMlBO,QAAQC,IAAI,sCAGRb,GAAUA,EAAOe,WACnBf,EAAOe,UAAUV,UAO5BW,MAAM,SAAAC,GACLL,QAAQK,MAAM,4CAA6CA,+BClFlDC,EAVQ,CACnBC,OAAQC,0CACRC,WAAYD,oCACZE,YAAaF,2CACbG,UAAWH,oBACXI,cAAeJ,GACfK,kBAAmBL,eACnBM,MAAON,uCCkCIO,GAvCFC,EAAQ,KACHA,EAAQ,KAoCF,eAhCpB,SAAAC,EAAYX,GAAgBY,OAAAC,EAAA,EAAAD,CAAAE,KAAAH,GACxBI,gBAAuBf,GACvBc,KAAKE,KAAOD,SACZD,KAAKG,GAAKF,sEAGFG,GACR,OAAOJ,KAAKE,KAAKG,eAAeJ,OAAcK,KAAKC,YAAYH,kCAG7DI,EAAOC,GACT,IACI,OAAOT,KAAKE,KAAKQ,2BAA2BF,EAAOC,GACrD,MAAOxB,GAEL,OADAL,QAAQK,MAAMA,GACP,2CAIFuB,EAAOC,GAChB,OAAOT,KAAKE,KAAKS,+BAA+BH,EAAOC,qCAIvD,OAAOT,KAAKE,KAAKU,mDAIjB,OAAOZ,KAAKE,KAAKW,qBAID,CAAa3B,yBCrCtB4B,EADA,WAAIC,sBC6BJC,qNAtBXtC,MAAQ,CACJuC,UAAU,KAGdC,OAAS,SAAAC,GACNC,EAAKC,SAAS,CAACJ,UAAU,GACxB,kBAAMK,EAAaC,KAAK,oGAIxB,OAAIvB,KAAKtB,MAAMuC,SAAiBO,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAUC,GAAK,MAE/CJ,EAAAC,EAAAC,cAAA,OAAKG,MAAQ,aACTL,EAAAC,EAAAC,cAAA,OAAKG,MAAQ,eACTL,EAAAC,EAAAC,cAAA,+BACAF,EAAAC,EAAAC,cAAA,UAAQI,UAAY,mBAAmBC,QAAW/B,KAAKkB,QAAvD,mBAjBQc,IAAMC,YCiCbC,6MAjCXxD,MAAQ,CACNyD,UAAU,KASdC,kBAAoB,SAAAjB,GAClBC,EAAKC,SAAS,CAACc,UAAU,OAa3BE,kBAAoB,WAClBf,EAAagB,GAAG,wBAAwBlB,EAAKgB,sBAG/CG,qBAAuB,WACrBjB,EAAakB,IAAI,wBAAwBpB,EAAKgB,qGAf9BnD,EAAOwD,GAExB7D,QAAQK,MAAMA,EAAQ,IAAMwD,oCAI3B,OAAIzC,KAAKtB,MAAMyD,SAAiBX,EAAAC,EAAAC,cAACgB,EAAD,MACzB1C,KAAK2C,MAAMC,4DAjBY3D,GAG9B,OAFEL,QAAQC,IAAII,GAEP,CAAEkD,UAAU,UATGH,IAAMa,8DCU5BC,EAAoB,SAACpE,GACvB,MAAO,CACHqE,KAXa,eAYbC,KAAMtE,IAIRuE,EAA2B,SAACvE,GAC9B,MAAO,CACHqE,KAtBa,eAuBbG,GAAIxE,EAAMwE,GACVC,YAAazE,EAAMyE,YACnBC,oBAAqB1E,EAAM0E,oBAC3BC,WAAY3E,EAAM2E,aAapBC,EAAiB,SAAC5E,GACpB,MAAO,CACHqE,KAvCkB,oBAwClBQ,QAAQ,EACRC,OAAQ9E,EAAM+E,IACdxE,MAAO,GACPyE,SAAUhF,EAAMgF,WAelBC,EAAc,SAACjF,GACjB,MAAO,CACHqE,KA3Dc,gBA4Dd9D,MAAOP,IC/DTkF,EAAe,CACjBC,aAAa,EACbC,UAAW,KACXX,YAAa,KACbE,WAAY,GACZD,oBAAqB,ICLnBQ,EAAe,CACjBL,QAAQ,EACRC,OAAQ,KACRE,SAAU,GACVzE,MAAO,MCFI8E,cAAgB,CAC3BC,QFKW,WAAkC,IAAjCtF,EAAiCuF,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAzBL,EAAcQ,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC7C,OAAQC,EAAOrB,MAEX,IDXa,eCYT,OAAOjD,OAAAuE,EAAA,EAAAvE,CAAA,GACApB,EADP,CAEImF,aAAa,EACbC,UAAWM,EAAOlB,GAClBC,YAAaiB,EAAOjB,YACpBE,WAAWvD,OAAAwE,EAAA,EAAAxE,CAAKsE,EAAOf,YACvBD,oBAAoBtD,OAAAwE,EAAA,EAAAxE,CAAKsE,EAAOhB,uBAIxC,IDvBoB,sBCwBhB,OAAOtD,OAAAuE,EAAA,EAAAvE,CAAA,GACApB,EADP,CAEI2E,WAAWvD,OAAAwE,EAAA,EAAAxE,CAAKsE,EAAOf,YACvBD,oBAAoBtD,OAAAwE,EAAA,EAAAxE,CAAKsE,EAAOhB,uBAIxC,ID1Ba,eC2BT,OAAIgB,EAAOpB,KACJlD,OAAAuE,EAAA,EAAAvE,CAAA,GACApB,EADP,CAEImF,aAAa,EACbC,UAAW,KACXX,YAAa,KACbE,WAAY,KAEJ3E,EAEhB,QAAS,OAAOA,IErCpB6F,QDGW,WAAkC,IAAjC7F,EAAiCuF,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAzBL,EAAcQ,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC7C,OAAOC,EAAOrB,MACV,IFPkB,oBESd,OAAOjD,OAAAuE,EAAA,EAAAvE,CAAA,GACApB,EADP,CAEI6E,OAAQa,EAAOb,OACfC,OAAQY,EAAOZ,OACfE,SAAS5D,OAAAwE,EAAA,EAAAxE,CAAKsE,EAAOV,YAI7B,IFrBe,iBEsBX,OAAO5D,OAAAuE,EAAA,EAAAvE,CAAA,GACApB,EADP,CAEIgF,SAAS5D,OAAAwE,EAAA,EAAAxE,CAAKsE,EAAOV,YAI7B,IF3BoB,sBE4BhB,OAAO5D,OAAAuE,EAAA,EAAAvE,CAAA,GACApB,EADP,CAEIgF,SAAUhF,EAAMgF,SAASc,IAAI,SAAAC,GAG7B,OAFQA,EAAKvB,KAAOkB,EAAON,YACnBW,EAAKpB,WAALvD,OAAAwE,EAAA,EAAAxE,CAAsBsE,EAAOf,aAC9BoB,MAKf,IFpCgB,kBEqCZ,OAAO3E,OAAAuE,EAAA,EAAAvE,CAAA,GACApB,EADP,CAEI6E,QAAQ,EACRC,OAAQ,KACRE,SAAU,KAIlB,IF3Cc,gBE4CV,OAAO5D,OAAAuE,EAAA,EAAAvE,CAAA,GACApB,EADP,CAEIO,MAAOmF,EAAOnF,QAGtB,QAAS,OAAOP,ME3ClBgG,GALc,kBAAXhH,QACPA,OAAOiH,qCACLjH,OAAOiH,qCAAqC,IACvCC,KAGPC,YAAgBC,IAAMC,kBAAkB,CAAC9E,eAG5B+E,EADDC,YAAYlB,EAAiBW,4BCZrCQ,EAAkB,SAAC1E,EAAMC,GAAP,sBAAA0E,EAAArF,OAAAsF,EAAA,EAAAtF,CAAAuF,EAAA5D,EAAA6D,KAAoB,SAAAC,EAAOC,EAASC,EAAhBC,GAAA,IAAAzF,EAAA,OAAAoF,EAAA5D,EAAAkE,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAA2B7F,EAA3ByF,EAA2BzF,SAA3B2F,EAAAE,KAAA,EAC9B7F,EAAS8F,MAAMvF,EAAMC,GAC1BrC,KAAK,SAAA4H,GACF/F,EAASE,GAAG8F,WAAW,SAASC,IAAIF,EAASG,KAAK1C,KAAK2C,MACtDhI,KAAK,SAAAiI,GACF,IAAIF,EAAOE,EAAQC,OACnBd,EAASlC,EAAe,CAACG,IAAK4C,EAAQnD,GAAIQ,SAAS5D,OAAAwE,EAAA,EAAAxE,CAAKqG,EAAKzC,iBAGpE1E,MAAM,SAACC,GACJL,QAAQK,MAAMA,EAAMsH,SACpBf,EAAS7B,EAAY1E,EAAMsH,YAXK,wBAAAX,EAAAY,SAAAjB,MAApB,gBAAAkB,EAAAC,EAAAC,GAAA,OAAAxB,EAAAyB,MAAA5G,KAAAiE,YAAA,IA2BlB4C,EAAuB,SAACpD,GAAD,sBAAAqD,EAAAhH,OAAAsF,EAAA,EAAAtF,CAAAuF,EAAA5D,EAAA6D,KAAS,SAAAyB,EAAOvB,EAASC,EAAhBuB,GAAA,IAAA/G,EAAA,OAAAoF,EAAA5D,EAAAkE,KAAA,SAAAsB,GAAA,cAAAA,EAAApB,KAAAoB,EAAAnB,MAAA,cAA2B7F,EAA3B+G,EAA2B/G,SAA3BgH,EAAAnB,KAAA,EAC5B7F,EAASW,UACdxC,KAAM,SAAA4H,GACHR,ELqBG,CACHzC,KAnDgB,kBAoDhBQ,QAAQ,EACRC,OAAQ,KACRvE,MAAO,GACPyE,SAAU,OKxBb1E,MAAM,SAACC,GACJL,QAAQK,MAAMA,EAAMsH,SACpBf,EAAS7B,EAAY1E,EAAMsH,YAPG,wBAAAU,EAAAT,SAAAO,MAAT,gBAAAG,EAAAC,EAAAC,GAAA,OAAAN,EAAAF,MAAA5G,KAAAiE,YAAA,IC1BdoD,EADSrF,IAAMsF,cAAcrH,GCW7BsH,EATM,SAAAtF,GAAS,OAAI,SAAAU,GAC1B,OACInB,EAAAC,EAAAC,cAAC8F,EAAgBC,SAAjB,KACK,SAAAxH,GAAQ,OAAIuB,EAAAC,EAAAC,cAACO,EAADnC,OAAA4H,OAAA,GAAe/E,EAAf,CAAsB1C,SAAYA,iBCLhD0H,EAAA,SAAShF,GAAO,IAAAiF,EACZC,mBAASlF,EAAMmF,KAAOnF,EAAMmF,KAAO,oBAA3CA,EADoBhI,OAAAiI,EAAA,EAAAjI,CAAA8H,EAAA,MAE3B,OACQpG,EAAAC,EAAAC,cAAA,OAAKI,UAAY,aACbN,EAAAC,EAAAC,cAAA,OAAKI,UAAY,SAASkG,IAAOF,EAAMG,IAAM,WAC7CzG,EAAAC,EAAAC,cAAA,oBAAYiB,EAAMI,QCmEnBwE,uNA5DX7I,MAAQ,CACJuB,SAAUmB,EAAKuB,MAAM1C,SACrBhB,MAAO,QAGXiJ,SAAW,OACXC,YAAc,OAEdC,YAAc,SAACC,GAAD,OAAUjH,EAAK8G,SAAWG,KACxCC,eAAiB,SAACD,GAAD,OAAUjH,EAAK+G,YAAcE,KAE9CE,WAAa,SAAApH,GAET,IAAMX,EAAQY,EAAK8G,SAAW9G,EAAK8G,SAASM,MAAQ,KAC9C/H,EAAWW,EAAK+G,YAAc/G,EAAK+G,YAAYK,MAAQ,KACrDvI,EAAamB,EAAKuB,MAAlB1C,SAER,IAAIQ,IAAYD,EAaV,OAAOY,EAAKC,SAAS,CAACpC,MAAO,sBAZnCgB,EAAS5B,aAAamC,EAAOC,GAC5BrC,KAAK,SAAA4H,GACF,IAAKA,EAAU,MAAM,IAAIyC,MAAM,sBAC/BxI,EAASE,GAAG8F,WAAW,SAASC,IAAIF,EAASG,KAAK1C,KAAKiF,IAAI,CACvDhF,SAAY,GACZlD,MAASA,IACVpC,KAAK,kBAAMkD,EAAaC,KAAK,2BAA4ByE,OAE/DhH,MAAM,SAACC,GACRL,QAAQK,MAAMA,EAAMsH,SACpBnF,EAAKC,SAAS,CAACpC,MAAOA,EAAMsH,qFAKxB,IACGtH,EAAUe,KAAKtB,MAAfO,MACP,OACIuC,EAAAC,EAAAC,cAAA,OAAKI,UAAY,mBACbN,EAAAC,EAAAC,cAAA,OAAMI,UAAY,oBACdN,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAA,QAAMiH,aAAe,MAAM7G,UAAY,WACjC7C,EACEuC,EAAAC,EAAAC,cAAA,KAAGI,UAAY,SAAS7C,GACtB,KAENuC,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,SAAOkH,IAAO5I,KAAKoI,YAAarF,KAAO,SACvCvB,EAAAC,EAAAC,cAAA,wBACAF,EAAAC,EAAAC,cAAA,SAAOI,UAAY,WAAW6G,aAAe,MAAMC,IAAO5I,KAAKsI,eAAgBvF,KAAO,aACtFvB,EAAAC,EAAAC,cAAA,SAAOK,QAAW/B,KAAKuI,WACfzG,UAAY,cACZiB,KAAO,SACPyF,MAAQ,2BAzDbxG,IAAMa,iBCM3BgG,qNAYFnK,MAAQ,CACJoK,MAAQ,cACRC,oBAAoB,EACpBC,WAAW,EACXC,YAAY,EACZhK,MAAO,MAGXiK,WAAa,OACbC,cAAgB,OAEhBC,mBAAqB,SAAAjI,GACjBA,EAAMkI,mBAAmBC,UACrBlI,EAAKC,SAALvB,OAAAuE,EAAA,EAAAvE,CAAA,GACOsB,EAAK1C,MADZ,CAEIsK,WAAW,EACXD,oBAAoB,EACpB9J,MAAO,qBAEbL,QAAQK,MAAM,yBAGpBsK,QAAU,SAAApI,GACNC,EAAKC,SAALvB,OAAAuE,EAAA,EAAAvE,CAAA,GACOsB,EAAK1C,MADZ,CAEAqK,oBAAoB3H,EAAK1C,MAAMqK,sBAE/B5H,EAAMqI,qBAGVC,OAAS,SAAAtI,GACGC,EAAK8H,YAAc9H,EAAK+H,eAC5B/H,EAAKuB,MAAM6C,SAASN,EAAgB9D,EAAK8H,WAAWV,MAAOpH,EAAK+H,cAAcX,QAC9ErH,EAAMqI,qBAGdtB,SAAW,SAAAG,GAAI,OAAIjH,EAAK8H,WAAab,KACrCF,YAAc,SAAAE,GAAI,OAAIjH,EAAK+H,cAAgBd,KA6C3ChG,kBAAoB,SAACqH,GACjBpI,EAAagB,GAAG,2BAA4BlB,EAAKgI,uBAErD7G,qBAAuB,SAACmH,GACpBpI,EAAakB,IAAI,2BAA4BpB,EAAKgI,6FA7ClD,OAAIpJ,KAAK2C,MAAMY,OAAe/B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAUC,GAAO,aACrC5B,KAAK2C,MAAMY,OAqCN/B,EAAAC,EAAAC,cAACiG,EAAD,CAAQG,KAAO,mBAAmB/E,KAAO,YAnChDvB,EAAAC,EAAAC,cAAA,OAAKI,UAAY,yBACTN,EAAAC,EAAAC,cAAA,UAAK1B,KAAKtB,MAAMoK,OAChBtH,EAAAC,EAAAC,cAAA,OAAKI,UAAY,YACbN,EAAAC,EAAAC,cAAA,OAAKI,UAAY,aACbN,EAAAC,EAAAC,cAAA,0BAEI1B,KAAK2C,MAAMsG,YAAcjJ,KAAKtB,MAAMsK,UACpCxH,EAAAC,EAAAC,cAAA,KAAGI,UAAY,SAAS9B,KAAK2C,MAAMsG,YACjC,KAENzH,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAA,SAAOkH,IAAO5I,KAAKkI,SAAUnF,KAAO,SACpCvB,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,SAAOkH,IAAO5I,KAAKmI,YAAapF,KAAO,aACvCvB,EAAAC,EAAAC,cAAA,SACIK,QAAW/B,KAAKyJ,OAChB3H,UAAY,yBACZiB,KAAO,SACPyF,MAAQ,UACZhH,EAAAC,EAAAC,cAAA,SACIK,QAAW/B,KAAKuJ,QAChBzH,UAAa9B,KAAKtB,MAAMqK,mBAAX,oCAC6B,2BAC1ChG,KAAO,SACPyF,MAAQ,mBAKhBxI,KAAKtB,MAAMqK,mBACXvH,EAAAC,EAAAC,cAACiI,EAAD,MACE,aAvFV3H,IAAMa,gBA6GX+G,cAPS,SAAClL,GACrB,MAAO,CACH6E,OAAQ7E,EAAM6F,QAAQhB,OACtB0F,WAAYvK,EAAM6F,QAAQtF,QAInB2K,CAAyBf,GCpGzBgB,EApBU,SAAApF,GAAI,sBAAAU,EAAArF,OAAAsF,EAAA,EAAAtF,CAAAuF,EAAA5D,EAAA6D,KAAI,SAAAC,EAAOC,EAASC,EAAhBC,GAAA,IAAAzF,EAAA,OAAAoF,EAAA5D,EAAAkE,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAA2B7F,EAA3ByF,EAA2BzF,SAA3B2F,EAAAE,KAAA,EACvB7F,EAASE,GAAG8F,WAAW,SAASC,IAAIzB,EAAKhB,KAAK2C,MACnDhI,KAAK,SAAA+H,GAAI,OAAIA,EAAKG,SAClBlI,KAAK,SAAAkI,GACF,MAAO,CAACpD,GAAIoD,EAAKpD,GAAIQ,SAAU4C,EAAK5C,SAASoG,OAAO,SAAAC,GAAM,OAAIA,EAAO7G,KAAOuB,EAAKvB,QAEpF9E,KAAK,SAAAkI,GACFrG,EAASE,GAAG8F,WAAW,SAASC,IAAIzB,EAAKhB,KAAKvC,OAAO,CACjDwC,SAAY4C,EAAK5C,WAEpBtF,KAAK,SAAA4H,GACFR,EAASlC,EAAe,CAACG,IAAK6C,EAAKpD,GAAIQ,SAAU4C,EAAK5C,gBAG7D1E,MAAM,SAACC,GACJL,QAAQK,MAAMA,EAAMsH,SACpBf,EAAS7B,EAAY1E,EAAMsH,YAhBF,wBAAAX,EAAAY,SAAAjB,MAAJ,gBAAAkB,EAAAC,EAAAC,GAAA,OAAAxB,EAAAyB,MAAA5G,KAAAiE,YAAA,WCgBd+F,MAhBf,SAAcrH,GAAM,IAAAiF,EACDC,mBAASlF,EAAMmF,MAAvBA,EADShI,OAAAiI,EAAA,EAAAjI,CAAA8H,EAAA,MAAAqC,EAEIpC,mBAASlF,EAAMb,UAAYa,EAAMb,UAAY,MAA1DA,EAFShC,OAAAiI,EAAA,EAAAjI,CAAAmK,EAAA,MAAAC,EAGIrC,qBAASlF,EAAMwH,WAA5BA,EAHSrK,OAAAiI,EAAA,EAAAjI,CAAAoK,EAAA,MAKhB,OACA1I,EAAAC,EAAAC,cAAA,OACIyI,UAAaA,EACbpI,QAAWY,EAAMZ,QAAUY,EAAMZ,QAAU,KAC3CD,UAAaA,EACbgH,MAASnG,EAAMmG,MAAQnG,EAAMmG,MAAQ,KACrCd,IAAO5I,eAAyB0I,EAAOG,IAAM,UCatCmC,UAvBC,SAAAzH,GAEZ,OACInB,EAAAC,EAAAC,cAAA,OAAKI,UAAY,kBACbN,EAAAC,EAAAC,cAAA,OAAKI,UAAY,eACbN,EAAAC,EAAAC,cAAA,oCACAF,EAAAC,EAAAC,cAAA,SACII,UAAY,aACZC,QAAWY,EAAM0H,cACjBtH,KAAO,SACPyF,MAAQ,iBAEZhH,EAAAC,EAAAC,cAAA,SACII,UAAY,eACZC,QAAWY,EAAM2H,aACjBvH,KAAO,SACPyF,MAAQ,eCPtB+B,EAAW3K,EAAQ,KAAqB4K,YAExCC,6MAUF/L,MAAQ,CACJoK,MAAO1H,EAAKuB,MAAMmG,MAClB4B,UAAU,EACVC,iBAAiB,EACjBC,cAAe,CACX9C,KAAO,iBACP+C,WAAW,GAEfC,gBAAiB,CACbhD,KAAO,WACPiD,WAAW,MAInBC,QAAU,SAAA7J,GACNC,EAAKC,SAAS,CAACqJ,SAAUvJ,OAG7B8J,yBAA2B,SAAA9J,GACvBG,EAAaC,KAAK,4BAClBH,EAAKC,SAAS,CACVsJ,iBAAiB,EACjBG,gBAAgBhL,OAAAuE,EAAA,EAAAvE,CAAA,GACTsB,EAAK1C,MAAMoM,gBADH,CAEXC,WAAW,SAKvBG,OAAS,SAAA/J,GACDC,EAAKuB,MAAMa,QACXpC,EAAKuB,MAAM6C,SAASqB,EAAqBzF,EAAKuB,MAAMa,SACxDrC,EAAMqI,qBAGVoB,cAAgB,SAAAzJ,GACGC,EAAKuB,MAAMhF,SAASwN,WAAa/J,EAAK1C,MAAMkM,cAAc9C,OAC1D1G,EAAK1C,MAAMgM,SACvBtJ,EAAKC,SAAS,CACTsJ,iBAAiB,EACjBC,cAAc9K,OAAAuE,EAAA,EAAAvE,CAAA,GACRsB,EAAK1C,MAAMkM,cADJ,CAEVC,WAAW,MAGdzJ,EAAKC,SAAS,CAACsJ,iBAAiB,IACxCxJ,EAAMqI,qBAGVsB,gBAAkB,SAAA3J,GACA,eAAVA,GACeC,EAAKuB,MAAMhF,SAASwN,WAAa/J,EAAK1C,MAAMoM,gBAAgBhD,OAC5D1G,EAAK1C,MAAMgM,SAC1BtJ,EAAKC,SAAS,CACVsJ,iBAAiB,EACjBG,gBAAgBhL,OAAAuE,EAAA,EAAAvE,CAAA,GACTsB,EAAK1C,MAAMoM,gBADH,CAEXC,WAAW,MAGd3J,EAAKC,SAAS,CAACsJ,iBAAiB,IACrCxJ,EAAMqI,mBAEHpI,EAAKC,SAAS,CACjBsJ,iBAAiB,EACjBG,gBAAgBhL,OAAAuE,EAAA,EAAAvE,CAAA,GACTsB,EAAK1C,MAAMoM,gBADH,CAEXC,WAAW,SAKvBK,IAAM,SAAAjK,GACFG,EAAaC,KAAK,sBAAsB,CAAC6C,OAAQ,eACjDjD,EAAMqI,qBAgDV6B,mBAAqB,WACjB/J,EAAagB,GAAG,uBAAwBlB,EAAK4J,YAGjDzI,qBAAuB,WACnBjB,EAAakB,IAAI,uBAAwBpB,EAAK4J,kFAlD1C,IAAAM,EAAAtL,KACC6K,EAAa7K,KAAKtB,MAAMkM,cAAxBC,UACAE,EAAa/K,KAAKtB,MAAMoM,gBAAxBC,UAEL,OAAIF,EAAkBrJ,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAUC,GAAM5B,KAAKtB,MAAMkM,cAAc9C,OAC5DiD,EAAkBvJ,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAUC,GAAM5B,KAAKtB,MAAMoM,gBAAgBhD,OAG5DtG,EAAAC,EAAAC,cAACF,EAAAC,EAAM8J,SAAP,KACCvL,KAAKtB,MAAMgM,UAAY1K,KAAKtB,MAAMiM,gBAC/BnJ,EAAAC,EAAAC,cAAC8J,EAAD,CACInB,cAAiBrK,KAAKiL,yBACtBX,aAAgB,kBAAMgB,EAAKR,gBAAgB,iBAC1C,KACLtJ,EAAAC,EAAAC,cAAA,cACIF,EAAAC,EAAAC,cAAA,OAAKI,UAAY,aACbN,EAAAC,EAAAC,cAAA,OAAKI,UAAY,YACTN,EAAAC,EAAAC,cAAA,OAAKK,QAAW/B,KAAK8K,gBAAiBhJ,UAAY,uBAC9CN,EAAAC,EAAAC,cAAC+J,EAAD,CAAM3J,UAAW,WAAWgG,KAAQyC,IACpC/I,EAAAC,EAAAC,cAAA,MAAII,UAAY,YAAY9B,KAAKtB,MAAMoK,QAET,aAAjC9I,KAAK2C,MAAMhF,SAASwN,SACjB3J,EAAAC,EAAAC,cAAA,OAAKK,QAAW/B,KAAKoL,IAAKtJ,UAAY,iCAClCN,EAAAC,EAAAC,cAAC+J,EAAD,CAAM3J,UAAY,UAAUgG,KAAO,mBAErC,KAEFtG,EAAAC,EAAAC,cAAA,OAAMI,UAAY,aACdN,EAAAC,EAAAC,cAAC+J,EAAD,CAAM3J,UAAY,QAAQC,QAAW/B,KAAK4K,cACtC9B,MAAQ,QACRhB,KAAO,wBAEXtG,EAAAC,EAAAC,cAAC+J,EAAD,CAAM3J,UAAY,eACdC,QAAW/B,KAAKkL,OAChBpC,MAAQ,SACRhB,KAAO,gCA1H9B9F,IAAMC,WA6IZ2H,gBAAU8B,YAAWjB,kCCjIrBkB,GAxBG,SAAAhJ,GAAS,IAAAiF,EAEVC,mBAASlF,EAAMO,IAArBA,EAFgBpD,OAAAiI,EAAA,EAAAjI,CAAA8H,EAAA,MAAAqC,EAGFpC,mBAASlF,EAAMiJ,KAAKC,SAAlCC,EAHgBhM,OAAAiI,EAAA,EAAAjI,CAAAmK,EAAA,MAAAC,EAILrC,mBAASlF,EAAMiJ,KAAKG,MAA/BC,EAJgBlM,OAAAiI,EAAA,EAAAjI,CAAAoK,EAAA,MAAA+B,EAKNpE,mBAASlF,EAAMuJ,QAAzBA,EALgBpM,OAAAiI,EAAA,EAAAjI,CAAAmM,EAAA,MAYvB,OACIzK,EAAAC,EAAAC,cAAA,OAAKI,UAAaa,EAAMwJ,SAAW,mBAAqB,WACpD3K,EAAAC,EAAAC,cAAA,OACII,UAAY,YACZC,QATU,SAAAZ,GACnBG,EAAaC,KAAK,qBAAsB,CAAC2B,GAAIA,EAAIkJ,IAAKN,EAAYE,QAASA,KASlEhE,IAAOkE,EAASF,EAAUF,EAC1B7D,IAAM,kBCVtBrI,EAAQ,KAAeyM,eAgTRC,8MAvSX5N,MAAQ,CACJ6N,SAAUnL,EAAKuB,MAAM4J,SACrBC,OAAQ,CACJC,sBAAsB,EACtBC,aAAc,KACdC,QAAS,KACTH,OAAQ,KACRR,QAAS,KACTY,cAAc,EACd3N,MAAO,IAEX4N,WAAY,CACRC,cAAc,EACdC,cAAc,EACdC,UAAU,EACVC,KAAM,GACNlK,KAAM,SAEVmK,iBAAiB,EACjBC,QAAS,CACLC,UAAW,yBACXC,UAAW,uBACXtK,KAAM,6BAIduK,YAAc,OACdC,YAAc,OAEdC,iBAAmB,SAAArM,GACf,IACMsM,EAAG,4BAAAC,OADI,4CAEPC,EAASvM,EAAKkM,YAAY9E,MAEhCpH,EAAKC,SAALvB,OAAAuE,EAAA,EAAAvE,CAAA,GAAkBsB,EAAK1C,MAAvB,CAA8B8N,OAAO1M,OAAAuE,EAAA,EAAAvE,CAAA,GAAKsB,EAAK1C,MAAMkP,OAAjB,CAAyBnB,sBAAsB,OAEnFoB,KAAO,GAAAH,OAAID,EAAME,EAAV,eAAAD,OAA8BtO,qEACpChB,KAAK,SAAA4H,GACF,GAAIA,EAAS8H,GAAI,OAAO9H,EAAS+H,OAC5B,MAAM,IAAItF,MAAM,qBAExBrK,KAAK,SAAA4H,GAAY,IAETgI,EAAWhI,EAAXgI,QACL,IAAIA,EAAQ9J,OAWP,MAAM,IAAIuE,MAAM,oBAVrBrH,EAAKC,SAALvB,OAAAuE,EAAA,EAAAvE,CAAA,GACOsB,EAAK1C,MADZ,CAEI8N,OAAO1M,OAAAuE,EAAA,EAAAvE,CAAA,GACAsB,EAAK1C,MAAM8N,OADZ,CAEFI,cAAc,EACd3N,MAAO,GACPuN,OAAO1M,OAAAwE,EAAA,EAAAxE,CAAKkO,GACZvB,sBAAsB,SAKjCzN,MAAM,SAAAC,GACHL,QAAQK,MAAMA,EAAMsH,SACpBnF,EAAKC,SAALvB,OAAAuE,EAAA,EAAAvE,CAAA,GACOsB,EAAK1C,MADZ,CAEI8N,OAAO1M,OAAAuE,EAAA,EAAAvE,CAAA,GAAKsB,EAAK1C,MAAM8N,OAAjB,CAAyBvN,MAAOA,EAAMsH,UAC5CqG,cAAc,EACdH,sBAAsB,UAKlCwB,cAAgB,SAAA9M,GACZC,EAAKC,SAALvB,OAAAuE,EAAA,EAAAvE,CAAA,GACOsB,EAAK1C,MADZ,CAEIwO,iBAAiB,EACjBV,OAAO1M,OAAAuE,EAAA,EAAAvE,CAAA,GACAsB,EAAK1C,MAAM8N,OADZ,CAEFE,aAAcvL,EAAM+B,GACpByJ,QAASxL,EAAMiL,IACfJ,QAAS7K,EAAM6K,gBAM3BkC,UAAY,SAAA/M,GAAS,IAEVwL,EAAWvL,EAAK1C,MAAM8N,OAAtBG,QACPrL,EAAaC,KAAK,iBAAkB,CAAC6C,QAAQ,EAAM+J,OAAQxB,GAAoB,OAC/ExL,EAAMqI,qBAGV4E,iBAAmB,SAAAjN,GAEf,IAAIqL,EAAM1M,OAAAuE,EAAA,EAAAvE,CAAA,GAAOsB,EAAK1C,MAAM8N,QACO,UAA/BpL,EAAKuB,MAAM0L,iBACX/M,EAAaC,KAAb,0BAAAmM,OAA4CtM,EAAKuB,MAAM2L,aAAc9B,GACrElL,EAAaC,KAAb,+BAAiD,CAACiL,OAAQA,EAAQ+B,KAAMnN,EAAKuB,MAAM0L,oBAEnF/M,EAAaC,KAAb,uBAAAmM,OAAyCtM,EAAKuB,MAAM2L,aAAe9B,GACnElL,EAAaC,KAAb,+BAAkD,CAACiL,OAAQA,EAAS+B,KAAMnN,EAAKuB,MAAM0L,mBAGzFlN,EAAMqI,qBAGVgF,mBAAqB,SAACC,GAClB,OAAKA,EACEA,EAAMjK,IAAI,SAACC,EAAKiK,GACpB,OAAOlN,EAAAC,EAAAC,cAACiN,GAAD,CACFC,IAAG,OAAAlB,OAAWgB,GACdxL,GAAMwL,EACNvC,SAAY/K,EAAK1C,MAAM8N,OAAOE,eAAiBgC,EAC/CxC,QAAU,EACVN,KAAI9L,OAAAuE,EAAA,EAAAvE,CAAA,GAAQ2E,EAAKmH,UAPN,QAYvBiD,cAAgB,SAAA1N,GACZ,IAAIoN,EAAOnN,EAAK1C,MAAM0C,EAAK1C,MAAM6N,UAC7BgC,EAAKxB,cAAiBwB,EAAKzB,eAC3BxL,EAAaC,KAAK,kBAClB,CACIuH,MAAO1H,EAAK1C,MAAM0C,EAAK1C,MAAM6N,UAAUU,KACvClK,KAAM3B,EAAK1C,MAAM0C,EAAK1C,MAAM6N,UAAUxJ,OAG1CzB,EAAaC,KAAK,sBAAsB,CAAC6C,OAAQ,gBAIzD0K,aAAe,SAAA3N,GAEX,IAAI4N,EAAMjP,OAAAuE,EAAA,EAAAvE,CAAA,GAAOsB,EAAK1C,MAAM0C,EAAK1C,MAAM6N,WACvCwC,EAAOhM,KAAO5B,EAAMgN,OAAO3F,MAC3BuG,EAAOhC,aAA+B,UAAhBgC,EAAOhM,KAC7BgM,EAAO/B,UAAW+B,EAAOhC,eAAgBgC,EAAOjC,aAChD1L,EAAKC,SAALvB,OAAAuE,EAAA,EAAAvE,CAAA,GACOsB,EAAK1C,MADZoB,OAAAkP,GAAA,EAAAlP,CAAA,GAEKsB,EAAK1C,MAAM6N,SAAWwC,QAI/BjC,aAAe,SAAA3L,GAEX,IAAI4N,EAAMjP,OAAAuE,EAAA,EAAAvE,CAAA,GAAOsB,EAAK1C,MAAM0C,EAAK1C,MAAM6N,WACvCwC,EAAO9B,KAAO9L,EAAMgN,OAAO3F,MAC3B,IAAIyG,EAAcF,EAAO9B,KAAK/I,OAC9B6K,EAAOjC,aAAemC,GAAe,GAAKA,EAAc,GACxDF,EAAO/B,UAAW+B,EAAOhC,eAAgBgC,EAAOjC,aAEhD1L,EAAKC,SAALvB,OAAAuE,EAAA,EAAAvE,CAAA,GACOsB,EAAK1C,MADZoB,OAAAkP,GAAA,EAAAlP,CAAA,GAEKsB,EAAK1C,MAAM6N,SAAWwC,QAI/BG,OAAS,SAAA/N,GAEuB,WAAxBC,EAAK1C,MAAM6N,SACXjL,EAAaC,KAAK,qBAAsB,CAAC6C,OAAQ,UAAWmK,KAAM,OAChEjN,EAAaC,KAAK,sBAAsB,CAAC6C,OAAQ,eAG3D+K,UAAY,SAAC9G,GAAD,OAAUjH,EAAKmM,YAAclF,KACzC+G,UAAY,SAAA/G,GAAI,OAAIjH,EAAKkM,YAAcjF,KAyHvChG,kBAAoB,SAAAlB,GACY,WAAxBC,EAAK1C,MAAM6N,UACXjL,EAAagB,GAAG,qBAAsBlB,EAAK6M,kBAGnD1L,qBAAuB,SAAApB,GACS,WAAxBC,EAAK1C,MAAM6N,UACXjL,EAAakB,IAAI,qBAAsBpB,EAAK6M,wFA7HhD,OAAQjO,KAAKtB,MAAM6N,UACf,IAAK,aACD,OACI/K,EAAAC,EAAAC,cAAA,OAAKI,UAAY,SACbN,EAAAC,EAAAC,cAAA,gCACE1B,KAAKtB,MAAMsB,KAAKtB,MAAM6N,UAAUU,KAAK/I,QAAU,EAC7C1C,EAAAC,EAAAC,cAAA,QAAMI,UAAY,WAAW9B,KAAKtB,MAAMyO,QAAQE,WAAoB,KAEtErN,KAAKtB,MAAMsB,KAAKtB,MAAM6N,UAAUU,KAAK/I,QAAU,GAC7C1C,EAAAC,EAAAC,cAAA,QAAMI,UAAY,WAAW9B,KAAKtB,MAAMyO,QAAQC,WAAoB,KAExE5L,EAAAC,EAAAC,cAAA,SACII,UAAa9B,KAAKtB,MAAMsB,KAAKtB,MAAM6N,UAAUO,aAAe,QAAU,QACtEtE,MAASxI,KAAKtB,MAAMsB,KAAKtB,MAAM6N,UAAUU,KACzCoC,SAAYrP,KAAK8M,aACjB/J,KAAO,OACPuM,YAAc,iBAEftP,KAAKtB,MAAMsB,KAAKtB,MAAM6N,UAAUQ,aACgC,KAA/DvL,EAAAC,EAAAC,cAAA,QAAMI,UAAY,WAAW9B,KAAKtB,MAAMyO,QAAQpK,MAEpDvB,EAAAC,EAAAC,cAAA,UAAQ2N,SAAYrP,KAAK8O,cACrBtN,EAAAC,EAAAC,cAAA,UAAQ8G,MAAQ,SAAhB,YACAhH,EAAAC,EAAAC,cAAA,UAAQ8G,MAAQ,WAAhB,WACAhH,EAAAC,EAAAC,cAAA,UAAQ8G,MAAQ,aAAhB,cAEJhH,EAAAC,EAAAC,cAAA,SACIK,QAAW/B,KAAK6O,cAChB/M,UAAY,eACZkL,SAAYhN,KAAKtB,MAAMsB,KAAKtB,MAAM6N,UAAUS,SAC5CjK,KAAO,SACPyF,MAAQ,WAERhH,EAAAC,EAAAC,cAAA,SAAOK,QAAW/B,KAAKkP,OAAQnM,KAAM,SAASyF,MAAQ,YAGtE,IAAK,SAED,OADA5J,QAAQC,IAAImB,KAAK2C,OAEbnB,EAAAC,EAAAC,cAAC6N,EAAA,SAAD,KACI/N,EAAAC,EAAAC,cAAA,OAAKI,UAAY,sBACbN,EAAAC,EAAAC,cAAA,oBAAAgM,OAA8C,UAA/B1N,KAAK2C,MAAM0L,gBAA8B,mBAAqB,UAC3ErO,KAAKtB,MAAM8N,OAAOvN,MAChBuC,EAAAC,EAAAC,cAAA,QAAMI,UAAY,SAAS9B,KAAKtB,MAAM8N,OAAOvN,OAAgB,KAEjEuC,EAAAC,EAAAC,cAAA,SAAOkH,IAAO5I,KAAKoP,UAAWrM,KAAO,OAAOuM,YAAc,eAC1D9N,EAAAC,EAAAC,cAAA,SACIsL,SAAYhN,KAAKtB,MAAM8N,OAAOC,qBAC9B3K,UAAY,eACZiB,KAAO,SACPyF,MAAQ,SACRzG,QAAW/B,KAAKwN,mBAEpBhM,EAAAC,EAAAC,cAAA,SAAOK,QAAW/B,KAAKkP,OAAQnM,KAAM,SAASyF,MAAQ,WAElDxI,KAAKtB,MAAM8N,OAAOI,aAClBpL,EAAAC,EAAAC,cAAA,OAAKI,UAAY,mBACZ9B,KAAKwO,mBAAL1O,OAAAwE,EAAA,EAAAxE,CAA4BE,KAAKtB,MAAM8N,OAAX,UAE/B,MAGPxM,KAAKtB,MAAMwO,gBACV1L,EAAAC,EAAAC,cAAA,OAAKI,UAAY,qBACjBN,EAAAC,EAAAC,cAAA,UAAQK,QAAW/B,KAAKkO,UAAWpM,UAAY,2BAC3CN,EAAAC,EAAAC,cAAC+J,EAAD,CAAM3D,KAAO,mBAEjBtG,EAAAC,EAAAC,cAAA,UAAQK,QAAW/B,KAAKoO,iBAAkBtM,UAAY,+BAClDN,EAAAC,EAAAC,cAAC+J,EAAD,CAAM3D,KAAO,wBAGf,MAKd,IAAK,cACD,OACItG,EAAAC,EAAAC,cAAC6N,EAAA,SAAD,KACI/N,EAAAC,EAAAC,cAAA,OAAKI,UAAY,sBACbN,EAAAC,EAAAC,cAAA,qCACE1B,KAAKtB,MAAM8N,OAAOvN,MAChBuC,EAAAC,EAAAC,cAAA,QAAMI,UAAY,SAAS9B,KAAKtB,MAAM8N,OAAOvN,OAAgB,KAEjEuC,EAAAC,EAAAC,cAAA,SAAOkH,IAAO5I,KAAKoP,UAAWrM,KAAO,OAAOuM,YAAc,eAC1D9N,EAAAC,EAAAC,cAAA,SACIsL,SAAYhN,KAAKtB,MAAM8N,OAAOC,qBAC9B3K,UAAY,eACZiB,KAAO,SACPyF,MAAQ,SACRzG,QAAW/B,KAAKwN,mBAEpBhM,EAAAC,EAAAC,cAAA,SAAOK,QAAW/B,KAAKkP,OAAQnM,KAAM,SAASyF,MAAQ,WAElDxI,KAAKtB,MAAM8N,OAAOI,aAClBpL,EAAAC,EAAAC,cAAA,OAAKI,UAAY,mBACZ9B,KAAKwO,mBAAL1O,OAAAwE,EAAA,EAAAxE,CAA4BE,KAAKtB,MAAM8N,OAAX,UAE/B,MAGPxM,KAAKtB,MAAMwO,gBACV1L,EAAAC,EAAAC,cAAA,OAAKI,UAAY,qBACjBN,EAAAC,EAAAC,cAAA,UAAQK,QAAW/B,KAAKkO,UAAWpM,UAAY,2BAC3CN,EAAAC,EAAAC,cAAC+J,EAAD,CAAM3D,KAAO,mBAEjBtG,EAAAC,EAAAC,cAAA,UAAQK,QAAW/B,KAAKoO,iBAAkBtM,UAAY,+BAClDN,EAAAC,EAAAC,cAAC+J,EAAD,CAAM3D,KAAO,wBAGf,MAItB,QAAS,OAAOtG,EAAAC,EAAAC,cAAC6N,EAAA,SAAD,cA/RFvN,IAAMa,eCLhC,IAAM2M,GAA0B,SAAC/L,EAAKgM,EAAM3G,EAAO/F,GAAnB,sBAAAoC,EAAArF,OAAAsF,EAAA,EAAAtF,CAAAuF,EAAA5D,EAAA6D,KAA4B,SAAAC,EAAOC,EAASC,EAAhBC,GAAA,IAAAzF,EAAAyP,EAAAC,EAAAvM,EAAAwM,EAAA,OAAAvK,EAAA5D,EAAAkE,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAA2B7F,EAA3ByF,EAA2BzF,SAC/EyP,EADoD5P,OAAAwE,EAAA,EAAAxE,CAClC2P,GAChBE,EAAYD,EAAYxL,OAAUwL,EAAYA,EAAYxL,OAAO,GAAGhB,GAAK,EAAI,GAC7EE,EAAsB,IACkByM,KAAK,UAE7CD,EAAS,CACXE,gBAAiB,KACjBC,MAAO,KACP7M,GAAE,uBAAAwK,QAdMsC,EAc0B,EAdtBC,EAcwB,IAbxC,GAAAvC,OAAUwC,KAAKC,MAAMH,EAAME,KAAKE,UAAYH,EAAID,OAc5CK,cAAe,SACftN,KAAM,cAGV2M,EAAYG,KAAK,CACb3M,GAAIyM,EACJ7G,MAAOA,EACP/F,KAAMA,EACNM,WAAY,CAACuM,GACbxM,oBAAmB,GAAAsK,OAAMtK,KAnB2BwC,EAAAE,KAAA,EAsBlD7F,EAASE,GAAG8F,WAAW,SAASC,IAAIzC,GAAKvC,OAAO,CAClDwC,SAAYgM,IAEftR,KAAM,kBAAMoH,EjBxBN,CACHzC,KAVe,iBAWfW,SiBsBsCgM,MACzC1Q,MAAM,SAAAC,GACHL,QAAQK,MAAMA,EAAMsH,SACpBf,EAAS7B,EAAY1E,EAAMsH,YA5ByB,wBAAAX,EAAAY,OAL5D,IAAgBwJ,EAAIC,GAKwC1K,MAA5B,gBAAAkB,EAAAC,EAAAC,GAAA,OAAAxB,EAAAyB,MAAA5G,KAAAiE,YAAA,WCkDjByH,mBAtDf,SAAc/I,GAAO,IAAAiF,EAEFC,mBAAQ,kBAAA6F,OAAoB/K,EAAMO,KAA1C4E,EAFUhI,OAAAiI,EAAA,EAAAjI,CAAA8H,EAAA,MAAAqC,EAIYpC,oBAAS,GAJrByI,EAAAxQ,OAAAiI,EAAA,EAAAjI,CAAAmK,EAAA,GAIZsG,EAJYD,EAAA,GAIHE,EAJGF,EAAA,GAAApG,EAMJrC,mBAASlF,EAAMO,IAArBA,EANUpD,OAAAiI,EAAA,EAAAjI,CAAAoK,EAAA,MAAA+B,EAOFpE,mBAASlF,EAAMsK,MAAvBA,EAPUnN,OAAAiI,EAAA,EAAAjI,CAAAmM,EAAA,MAAAwE,EAQF5I,mBAASlF,EAAMI,MAAvBA,EARUjD,OAAAiI,EAAA,EAAAjI,CAAA2Q,EAAA,MA8BjB,OAAIF,EAAiB/O,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAUC,GAAMkG,IAE7BtG,EAAAC,EAAAC,cAAA,OAAKI,UAAY,OAAO4O,UAAWxN,GAC/B1B,EAAAC,EAAAC,cAAA,KAAGI,UAAY,eAAemL,GAC9BzL,EAAAC,EAAAC,cAAA,KAAGI,UAAY,eAAeiB,GAC9BvB,EAAAC,EAAAC,cAAA,OAAKI,UAAY,qBACbN,EAAAC,EAAAC,cAAA,SACIK,QA1BN,SAAAZ,GACPwB,EAAMhF,SAASwN,WAAarD,GAC3B0I,GAAY,GAChBrP,EAAMqI,mBAwBU1H,UAAY,gCACZiB,KAAO,SACPyF,MAAQ,gBACZhH,EAAAC,EAAAC,cAAA,SAAOK,QAxBJ,SAAAZ,GACfG,EAAaC,KAAK,kBAAkB,CAChC2B,GAAIP,EAAMO,GACV+J,KAAMtK,EAAMsK,KACZlK,KAAMJ,EAAMI,OAEhB5B,EAAMqI,mBAmBU1H,UAAY,iCACZiB,KAAO,SACPyF,MAAQ,YAEhBhH,EAAAC,EAAAC,cAAA,SAAOK,QApBG,SAAAZ,GAClBA,EAAMqI,mBAoBM1H,UAAY,mBACZiB,KAAO,SACPyF,MAAQ,iBC1CtBmI,8MAQFjS,MAAQ,CACJuC,UAAU,KAGd4N,cAAgB,SAACpK,GACTrD,EAAKuB,MAAMa,OACXpC,EAAKuB,MAAM6C,SAASgK,GACZpO,EAAKuB,MAAMa,OACXpC,EAAKuB,MAAM8M,KACXhL,EAAKqE,MACLrE,EAAK1B,OAEV3B,EAAKC,SAALvB,OAAAuE,EAAA,EAAAvE,CAAA,GAAkBsB,EAAK1C,MAAvB,CAA8BuC,UAAU,QAInD2P,SAAW,SAACnB,GAER,OAAOA,EAAKjL,IAAK,SAAAqM,GAEb,OACIrP,EAAAC,EAAAC,cAACoP,GAAD,CACIlC,IAAOiC,EAAQ3N,GACfA,GAAM2N,EAAQ3N,GACd+J,KAAQ4D,EAAQ/H,MAChB/F,KAAQ8N,EAAQ9N,YAgBhCV,kBAAoB,WAChBf,EAAagB,GAAG,kBAAkBlB,EAAKyN,kBAGzCtM,qBAAuB,WACrBjB,EAAakB,IAAI,kBAAkBpB,EAAKyN,wFAdxC,OAAI7O,KAAKtB,MAAMuC,SACJO,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAUC,GAAO,MAEhBJ,EAAAC,EAAAC,cAAA,OAAKI,UAAY,sBACZ9B,KAAK4Q,SAAL9Q,OAAAwE,EAAA,EAAAxE,CAAkBE,KAAK2C,MAAM8M,eA5CnCzN,IAAMa,eAkEV+G,eAPS,SAAClL,GACrB,MAAO,CACH8E,OAAQ9E,EAAM6F,QAAQf,OACtBiM,KAAK3P,OAAAwE,EAAA,EAAAxE,CAAKpB,EAAM6F,QAAQb,YAIjBkG,CAAyB+G,ICtDzBI,WAjBS,SAAApO,GAEhB,OACQnB,EAAAC,EAAAC,cAAA,WAASI,UAAY,gBACjBN,EAAAC,EAAAC,cAAA,OAAKI,UAAY,aACbN,EAAAC,EAAAC,cAAA,OAAKI,UAAY,eACbN,EAAAC,EAAAC,cAAA,OAAKI,UAAY,uBACbN,EAAAC,EAAAC,cAAA,4BAEHiP,GAAOnP,EAAAC,EAAAC,cAACsP,GAAD,MAAW,UCEzClI,WAAQlJ,EAAQ,KAAqBkJ,OAErCmI,8MAaJvS,MAAQ,CACN6N,SAAU,aAGZrB,OAAS,WACP9J,EAAKuB,MAAM6C,SAASqB,EAAqBzF,EAAKuB,MAAMa,YAGtD0N,UAAY,SAAA/P,GACVC,EAAKuB,MAAM6C,SAASqE,EAAiB/J,OAAAuE,EAAA,EAAAvE,CAAA,GAAIqB,EAAL,CAAYsC,IAAKrC,EAAKuB,MAAM1C,SAASkR,iBAAiB1N,WAG5F2N,eAAiB,SAAAjQ,GACfC,EAAKC,SAALvB,OAAAuE,EAAA,EAAAvE,CAAA,GACKsB,EAAK1C,MADV,CAEE6N,SAAUpL,EAAMiD,aAqBpB/B,kBAAoB,WAClBf,EAAagB,GAAG,kBAAmBlB,EAAK8P,WACxC5P,EAAagB,GAAG,sBAAuBlB,EAAKgQ,mBAG9C7O,qBAAuB,WACrBjB,EAAakB,IAAI,kBAAmBpB,EAAK8P,WACzC5P,EAAakB,IAAI,sBAAuBpB,EAAKgQ,yFAtB7C,OAAIpR,KAAK2C,MAAMY,OAEX/B,EAAAC,EAAAC,cAAC6N,EAAA,SAAD,KACE/N,EAAAC,EAAAC,cAAC2P,EAAD,CAAQvI,MAASA,GAAOtF,OAAUxD,KAAK2C,MAAMa,SAC7ChC,EAAAC,EAAAC,cAAA,OAAKI,UAAY,WACW,eAAxB9B,KAAKtB,MAAM6N,SAA6B/K,EAAAC,EAAAC,cAAC4P,GAAD,CAAO/E,SAAYvM,KAAKtB,MAAM6N,WAAe,KACrF/K,EAAAC,EAAAC,cAAC6P,GAAD,QAIEvR,KAAK2C,MAAM1C,SAASkR,iBACpB3P,EAAAC,EAAAC,cAACiG,EAAD,CAAQG,KAAO,mBAAmB/E,KAAO,YADIvB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAUC,GAAO,aA5CxDI,IAAMa,eAoEb+G,eARS,SAAClL,GACvB,MAAO,CACL8E,OAAQ9E,EAAM6F,QAAQf,OACtBE,SAAS5D,OAAAwE,EAAA,EAAAxE,CAAKpB,EAAM6F,QAAQb,UAC5BH,OAAQ7E,EAAM6F,QAAQhB,SAIXqG,CAAyBrC,EAAa0J,KChF/CO,oLAOE,OACAhQ,EAAAC,EAAAC,cAAA,gCARiBM,IAAMa,eAqBd+G,eARO,SAAClL,GACrB,MAAO,CACL8E,OAAQ9E,EAAM6F,QAAQf,OACtBE,SAAS5D,OAAAwE,EAAA,EAAAxE,CAAKpB,EAAM6F,QAAQb,UAC5BH,OAAQ7E,EAAM6F,QAAQhB,SAIXqG,CAAyBrC,EAAaiK,KCoBxCjK,wNA7BX7I,MAAQ,CACJV,OAAQoD,EAAKuB,MAAM3E,gFAInB,GAAIgC,KAAK2C,MAAM1C,SAASkR,iBAAkB,KAC9BnT,EAAWgC,KAAKtB,MAAhBV,OACR,OACIwD,EAAAC,EAAAC,cAAC6N,EAAA,SAAD,KACI/N,EAAAC,EAAAC,cAAC2P,EAAD,CAAQvI,MAAS9K,EAAO8K,QACxBtH,EAAAC,EAAAC,cAAA,WAASI,UAAY,SACjBN,EAAAC,EAAAC,cAAA,OAAKI,UAAY,aACbN,EAAAC,EAAAC,cAAA,OAAKI,UAAY,UACbN,EAAAC,EAAAC,cAAA,OAAKI,UAAY,eACjBN,EAAAC,EAAAC,cAAA,OAAKuG,IAAM,MAAMnG,UAAY,YAAYkG,IAAO5I,+BAC5CoC,EAAAC,EAAAC,cAAA,KAAGI,UAAW,aAAYN,EAAAC,EAAAC,cAAA,0BAA1B,IAAmD1D,EAAOyT,MAAMC,WAChElQ,EAAAC,EAAAC,cAAA,KAAGI,UAAY,QAAON,EAAAC,EAAAC,cAAA,qBAAtB,IAA0C1D,EAAOyT,MAAME,WAO5E,OAAOnQ,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAUC,GAAO,aAjCnBI,IAAMa,0BCcX+O,GAtBU,SAACnN,GAAD,sBAAAU,EAAArF,OAAAsF,EAAA,EAAAtF,CAAAuF,EAAA5D,EAAA6D,KAAU,SAAAC,EAAOC,EAASC,EAAhBC,GAAA,IAAAzF,EAAA4R,EAAA,OAAAxM,EAAA5D,EAAAkE,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAA2B7F,EAA3ByF,EAA2BzF,SACtD4R,EAAcpN,EAAKf,SAASc,IAAI,SAAAqM,GAKhC,OAJIA,EAAQ3N,KAAOuB,EAAKX,YACpB+M,EAAQxN,WAARvD,OAAAwE,EAAA,EAAAxE,CAAyB2E,EAAKpB,YAC9BwN,EAAQzN,oBAARtD,OAAAwE,EAAA,EAAAxE,CAAkC2E,EAAKrB,sBAEpCyN,IANoBjL,EAAAE,KAAA,EAQzB7F,EAASE,GAAG8F,WAAW,SAASC,IAAIzB,EAAKhB,KAAKvC,OAAO,CACvDwC,SAAYoO,KAAKC,MAAMD,KAAKE,UAAUH,MAEzCzT,KAAK,SAAA4H,GACF,IxBmB0BtH,EwBnBtBmS,EAAUpM,EAAKf,SAASuO,KAAK,SAAAlI,GAAM,OAAIA,EAAO7G,KAAOuB,EAAKX,YAC9D0B,ExBmBG,CACHzC,KAjCoB,sBAkCpBe,WAH0BpF,EwBlBQ,CAC9B2E,WAAWvD,OAAAwE,EAAA,EAAAxE,CAAK+Q,EAAQxN,YACxBS,UAAWW,EAAKX,UAChBV,oBAAqBqB,EAAKrB,sBxBkBbU,UACjBV,oBAAqB1E,EAAM0E,oBAC3BC,WAAY3E,EAAM2E,ewBjBrBrE,MAAM,SAAAC,GAAK,OAAIuG,EAAS7B,EAAY1E,EAAMsH,YAnBZ,wBAAAX,EAAAY,SAAAjB,MAAV,gBAAAkB,EAAAC,EAAAC,GAAA,OAAAxB,EAAAyB,MAAA5G,KAAAiE,YAAA,WCoBViO,OAhBf,SAAqBvP,GAAM,IAAAiF,EAEVC,mBAASlF,EAAMmF,MAAvBA,EAFkBhI,OAAAiI,EAAA,EAAAjI,CAAA8H,EAAA,MASvB,OACIpG,EAAAC,EAAAC,cAAA,OAAKK,QANW,SAAAZ,GAChBG,EAAaC,KAAK,iBAAkB,CAAE6C,QAAQ,EAAO+J,OAAQ,OAC7DhN,EAAMqI,mBAIuB1H,UAAY,eACrCN,EAAAC,EAAAC,cAAA,OAAKsG,IAAOF,EAAMG,IAAM,gBCiBrBkK,WA/BU,SAAAxP,GAELA,EAAMyP,eAAjBC,QAFyB,IAGzBC,EAAY3P,EAAMyP,eAAlBE,SACAC,EAAU5P,EAAMyP,eAAhBG,OAEL,OACI/Q,EAAAC,EAAAC,cAAC6N,EAAA,SAAD,KACI/N,EAAAC,EAAAC,cAAA,KAAGI,UAAY,kBAAf,cACAN,EAAAC,EAAAC,cAAA,QAAMI,UAAY,mBACjByQ,EAAOC,EACJD,EAAOC,EAAI,MAAQD,EAAOE,EAAI,oBAElCjR,EAAAC,EAAAC,cAAA,KAAGI,UAAY,kBAAf,UACAN,EAAAC,EAAAC,cAAA,SACI2N,SAAY1M,EAAM+P,UAClB3P,KAAK,SACLiN,IAAM,KAAKC,IAAM,MACjBzH,MAAS8J,GAAsB,MAEnC9Q,EAAAC,EAAAC,cAAA,KAAGI,UAAY,kBAAf,aACAN,EAAAC,EAAAC,cAAA,SACIK,QAAWY,EAAMgQ,cACjB7Q,UAAY,oBACZiB,KAAK,SACLyF,MAAQ,oBCgCToK,GAzDU,SAAAjQ,GAAS,IAEzB4P,EAAU5P,EAAMyP,eAAhBG,OACAM,EAAQlQ,EAAMyP,eAAdS,KACL,OACIrR,EAAAC,EAAAC,cAAC6N,EAAA,SAAD,KACA/N,EAAAC,EAAAC,cAAA,KAAGI,UAAY,kBAAf,cACAN,EAAAC,EAAAC,cAAA,QAAMI,UAAY,mBACjByQ,EAAOC,EACJD,EAAOC,EAAI,MAAQD,EAAOE,EAAI,oBAElCjR,EAAAC,EAAAC,cAAA,KAAGI,UAAY,kBAAf,cACAN,EAAAC,EAAAC,cAAA,SACI2N,SAAY1M,EAAMmQ,WAClB/P,KAAK,SACLiN,IAAM,KAAKC,IAAM,MACjBzH,MAASqK,EAAKE,EAAIF,EAAKE,EAAI,KAE/BvR,EAAAC,EAAAC,cAAA,KAAGI,UAAY,kBAAf,eACAN,EAAAC,EAAAC,cAAA,SACI2N,SAAY1M,EAAMqQ,YAClBjQ,KAAK,SACLiN,IAAM,KAAKC,IAAM,MACjBzH,MAASqK,EAAKI,EAAIJ,EAAKI,EAAI,KAE/BzR,EAAAC,EAAAC,cAAA,KAAGI,UAAY,kBAAf,mBACIN,EAAAC,EAAAC,cAAA,SACI2N,SAAY1M,EAAMuQ,kBAClBpR,UAAY,uBACZiB,KAAK,SACLyF,MAAS7F,EAAMyP,eAAee,aAClBxQ,EAAMyP,eAAee,aAAe,GAEhDnD,IAAM,KAAKC,IAAM,QAErBzO,EAAAC,EAAAC,cAAA,KAAGI,UAAY,2CAAf,aACAN,EAAAC,EAAAC,cAAA,SACI2N,SAAY1M,EAAMyQ,aAClBtR,UAAY,oBACZiB,KAAK,SACLyF,MAAS7F,EAAMyP,eAAeiB,QAC1B1Q,EAAMyP,eAAeiB,QAAU,EAEnCC,KAAO,MACPtD,IAAM,IAAIC,IAAM,MAEpBzO,EAAAC,EAAAC,cAAA,SACAK,QAAWY,EAAMgQ,cACjB7Q,UAAY,oBACZiB,KAAK,SACLyF,MAAQ,4BCdL+K,GAnCe,SAAA5Q,GAAS,IAE5B6Q,EAAmB3L,mBAASlF,EAAMyP,gBAAlCoB,gBACHzD,EAAQ,KAKZ,MAJ+B,kBAApByD,GACPA,EAAgBC,eAAe,WAC/B1D,EAAQyD,EAAgBzD,OAGxBvO,EAAAC,EAAAC,cAAC6N,EAAA,SAAD,KACA/N,EAAAC,EAAAC,cAAA,KAAGI,UAAY,kBAAf,WACAN,EAAAC,EAAAC,cAAA,SACIK,QAAWY,EAAM+Q,WACjB5R,UAAY,sBACZiB,KAAO,SACPyF,MAAQ,eAEN7F,EAAMgR,kBACJnS,EAAAC,EAAAC,cAACkS,GAAA,aAAD,CACIC,iBAAkBlR,EAAMmR,uBACxB/D,MAASA,GAAgB,QAE3B,KAENvO,EAAAC,EAAAC,cAAA,SACIK,QAAWY,EAAMgQ,cACjB7Q,UAAY,oBACZiB,KAAO,SACPyF,MAAQ,uBC8BTuL,GA1DS,SAAApR,GAAS,IAEpBgR,EAAqBhR,EAAMqR,gBAA3BL,kBACAtB,EAAW1P,EAAMyP,eAAjBC,QACAC,EAAY3P,EAAMyP,eAAlBE,SACAC,EAAU5P,EAAMyP,eAAhBG,OACAxC,EAASpN,EAAMyP,eAAfrC,MACDkE,EAAuB,KAAZ5B,EAAiB,QAAU,GAE1C,OACI7Q,EAAAC,EAAAC,cAAC6N,EAAA,SAAD,KACA/N,EAAAC,EAAAC,cAAA,KAAGI,UAAY,kBAAf,cACAN,EAAAC,EAAAC,cAAA,QAAMI,UAAY,mBACjByQ,EAAOC,EACJD,EAAOC,EAAI,MAAQD,EAAOE,EAAI,oBAElCjR,EAAAC,EAAAC,cAAA,KAAGI,UAAY,kBAAf,WACAN,EAAAC,EAAAC,cAAA,SACIK,QAAWY,EAAM+Q,WACjB5R,UAAY,gBACZiB,KAAO,SACPyF,MAAQ,eAEZhH,EAAAC,EAAAC,cAAA,KAAGI,UAAY,kBAAf,eACAN,EAAAC,EAAAC,cAAA,SACI2N,SAAY1M,EAAM+P,UAClB3P,KAAK,SACLiN,IAAM,KAAKC,IAAM,MACjBzH,MAAS8J,GAAsB,MAE7BqB,EACEnS,EAAAC,EAAAC,cAACkS,GAAA,aAAD,CACAC,iBAAkBlR,EAAMmR,uBACxB/D,MAASA,GAAe,QAEtB,KAENvO,EAAAC,EAAAC,cAAA,KAAGI,UAAY,kBAAf,UACAN,EAAAC,EAAAC,cAAA,UAAQ8G,MAAS7F,EAAMyP,eAAe8B,KAAM7E,SAAY1M,EAAMwR,WAC9D3S,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,wBACAF,EAAAC,EAAAC,cAAA,wBACAF,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,wBAEJF,EAAAC,EAAAC,cAAA,KAAGI,UAAY,kBAAf,aACAN,EAAAC,EAAAC,cAAA,SACI2N,SAAY1M,EAAMyR,aAClBC,UAAY,MACZtR,KAAO,OACPyF,MAAS6J,GAAoB4B,MCgS9BK,8MAnUX5V,MAAQ,CACJsV,gBAAgBlU,OAAAuE,EAAA,EAAAvE,CAAA,GAAKsB,EAAKuB,MAAMqR,iBAChC5B,eAAgBhR,EAAKuB,MAAMyP,eAC3B5F,OAAQ,QAGZ+H,MAAQ,OAERC,WAAa,SAAAC,GACTrT,EAAKC,SAALvB,OAAAuE,EAAA,EAAAvE,CAAA,GACOsB,EAAK1C,MADZ,CAEIsV,gBAAgBlU,OAAAuE,EAAA,EAAAvE,CAAA,GAAKsB,EAAK1C,MAAMsV,iBAChC5B,eAAetS,OAAAuE,EAAA,EAAAvE,CAAA,GACRsB,EAAK1C,MAAM0T,eADJ,CAEVE,SAAUmC,UAKtBC,WAAa,SAAAvT,GACTG,EAAaC,KAAK,kBAAmB,CAACoT,OAAO,OAGjDC,QAAU,SAAAzT,GAAS,IACV+B,EAAM9B,EAAK1C,MAAM0T,eAAjBlP,GACD2P,EAAO1R,EAAMgN,OAAO3F,MAAQ,IAAM,IAAMrH,EAAMgN,OAAO3F,MACzDpH,EAAKC,SAALvB,OAAAuE,EAAA,EAAAvE,CAAA,GACOsB,EAAK1C,MADZ,CAEIsV,gBAAgBlU,OAAAuE,EAAA,EAAAvE,CAAA,GAAKsB,EAAK1C,MAAMsV,iBAChC5B,eAAetS,OAAAuE,EAAA,EAAAvE,CAAA,GAAKsB,EAAK1C,MAAM0T,eAAjB,CAAgCE,SAAUO,MAExD,kBAAMvR,EAAaC,KAAb,kBAAAmM,OAAoCxK,GAAM,CAC5CmN,cAAejP,EAAK1C,MAAMmW,kBAAmBhC,KAAMA,SAK/DiC,QAAU,SAAA3T,GAAS,IACV+B,EAAM9B,EAAK1C,MAAM0T,eAAjBlP,GACD6R,EAAW5T,EAAMgN,OAAO3F,MAC5BpH,EAAKC,SAALvB,OAAAuE,EAAA,EAAAvE,CAAA,GACOsB,EAAK1C,MADZ,CAEIsV,gBAAgBlU,OAAAuE,EAAA,EAAAvE,CAAA,GAAKsB,EAAK1C,MAAMsV,iBAChC5B,eAAetS,OAAAuE,EAAA,EAAAvE,CAAA,GAAKsB,EAAK1C,MAAM0T,eAAjB,CAAgC8B,KAAMa,MAEpD,kBAAMzT,EAAaC,KAAb,eAAAmM,OAAiCxK,GAAM,CACzCmN,cAAejP,EAAK1C,MAAMmW,kBAAmBX,KAAMa,SAK/DC,WAAa,SAAA7T,GAAS,IACb+B,EAAM9B,EAAK1C,MAAM0T,eAAjBlP,GACD+R,EAAe9T,EAAMgN,OAAO3F,MAChCpH,EAAKC,SAALvB,OAAAuE,EAAA,EAAAvE,CAAA,GACOsB,EAAK1C,MADZ,CAEIsV,gBAAgBlU,OAAAuE,EAAA,EAAAvE,CAAA,GAAKsB,EAAK1C,MAAMsV,iBAChC5B,eAAetS,OAAAuE,EAAA,EAAAvE,CAAA,GAAKsB,EAAK1C,MAAM0T,eAAjB,CAAgCC,QAAS4C,MAEvD,kBAAM3T,EAAaC,KAAb,yBAAAmM,OAA2CxK,GAAK,CAClDmN,cAAejP,EAAK1C,MAAMmW,kBAAmBxC,QAAS4C,MAG1D9T,GAAOA,EAAMqI,qBAGrB0L,SAAW,SAAA/T,GAAS,IACT+B,EAAM9B,EAAK1C,MAAM0T,eAAjBlP,GACDiS,EAAQhU,EAAMgN,OAAO3F,MAC3BpH,EAAKC,SAALvB,OAAAuE,EAAA,EAAAvE,CAAA,GACOsB,EAAK1C,MADZ,CAEI0T,eAAetS,OAAAuE,EAAA,EAAAvE,CAAA,GAAKsB,EAAK1C,MAAM0T,eAAjB,CACVS,KAAK/S,OAAAuE,EAAA,EAAAvE,CAAA,GACEsB,EAAK1C,MAAM0T,eAAeS,KAD7B,CAEAE,EAAGoC,QAGX,kBAAM7T,EAAaC,KAAb,gBAAAmM,OAAkCxK,GAAK,CAACiS,MAAOA,MAErDhU,GAAOA,EAAMqI,qBAGrB4L,UAAY,SAAAjU,GAAS,IACV+B,EAAM9B,EAAK1C,MAAM0T,eAAjBlP,GACDmS,EAASlU,EAAMgN,OAAO3F,MAC5BpH,EAAKC,SAALvB,OAAAuE,EAAA,EAAAvE,CAAA,GACOsB,EAAK1C,MADZ,CAEI0T,eAAetS,OAAAuE,EAAA,EAAAvE,CAAA,GAAKsB,EAAK1C,MAAM0T,eAAjB,CACVS,KAAK/S,OAAAuE,EAAA,EAAAvE,CAAA,GACEsB,EAAK1C,MAAM0T,eAAeS,KAD7B,CAEAI,EAAGoC,QAGX,kBAAM/T,EAAaC,KAAb,iBAAAmM,OAAmCxK,GAAK,CAACmS,OAAQA,MAEvDlU,GAAOA,EAAMqI,qBAGrB8L,eAAiB,SAAAC,GACRA,GACLnU,EAAKC,SAALvB,OAAAuE,EAAA,EAAAvE,CAAA,GACOsB,EAAK1C,MADZ,CAEI0T,eAAetS,OAAAuE,EAAA,EAAAvE,CAAA,GACRsB,EAAK1C,MAAM0T,eADJ,CAEVG,OAAOzS,OAAAuE,EAAA,EAAAvE,CAAA,GACAsB,EAAK1C,MAAM0T,eAAeG,OAD3B,CAEFC,EAAG+C,EAAU/C,EACbC,EAAG8C,EAAU9C,YAM7B+C,SAAW,SAAArU,GACPC,EAAKC,SAALvB,OAAAuE,EAAA,EAAAvE,CAAA,GAAkBsB,EAAK1C,MAAvB,CACIsV,gBAAgBlU,OAAAuE,EAAA,EAAAvE,CAAA,GACTsB,EAAK1C,MAAMsV,gBADH,CAEXL,mBAAmBvS,EAAK1C,MAAMsV,gBAAgBL,uBAGlDxS,GAAOA,EAAMqI,qBAGrBiM,WAAa,SAAAtU,GAAS,IACb+B,EAAM9B,EAAK1C,MAAM0T,eAAjBlP,GACDmQ,EAAUlS,EAAMgN,OAAO3F,MAE3BpH,EAAKC,SAALvB,OAAAuE,EAAA,EAAAvE,CAAA,GACOsB,EAAK1C,MADZ,CAEI0T,eAAetS,OAAAuE,EAAA,EAAAvE,CAAA,GAAKsB,EAAK1C,MAAM0T,eAAjB,CAAgCiB,QAASA,MAE1D,kBAAM/R,EAAaC,KAAb,kBAAAmM,OAAoCxK,GAAM,CAACmQ,QAASA,SAG/DqC,gBAAkB,SAAAvU,GAAS,IAClB+B,EAAM9B,EAAK1C,MAAM0T,eAAjBlP,GACDyS,EAASxU,EAAMgN,OAAO3F,MAE1BpH,EAAKC,SAALvB,OAAAuE,EAAA,EAAAvE,CAAA,GACOsB,EAAK1C,MADZ,CAEI0T,eAAetS,OAAAuE,EAAA,EAAAvE,CAAA,GAAKsB,EAAK1C,MAAM0T,eAAjB,CAAgCe,aAAcwC,MAE/D,kBAAMrU,EAAaC,KAAb,uBAAAmM,OAAyCxK,GAAM,CAACiQ,aAAcwC,SAGzEC,kBAAoB,SAAAL,GAAa,IACtB/I,EAAU+I,EAAV/I,OACgB,UAAnB+I,EAAUhH,KACdnN,EAAKC,SAALvB,OAAAuE,EAAA,EAAAvE,CAAA,GACOsB,EAAK1C,MADZ,CAEI0T,eAAetS,OAAAuE,EAAA,EAAAvE,CAAA,GACRsB,EAAK1C,MAAM0T,eADJ,CAEVtC,gBAAiBtD,EAAOR,aAI5B5K,EAAKC,SAALvB,OAAAuE,EAAA,EAAAvE,CAAA,GACOsB,EAAK1C,MADZ,CAEI0T,eAAetS,OAAAuE,EAAA,EAAAvE,CAAA,GACRsB,EAAK1C,MAAM0T,eADJ,CAEVyD,MAAOrJ,EAAOR,gBAM9B8J,qBAAuB,SAAA3U,GAAS,IAErB4U,EAAO5U,EAAP4U,IACHC,EAAQ,OAAAtI,OAAUqI,EAAIE,EAAd,KAAAvI,OAAmBqI,EAAIG,EAAvB,KAAAxI,OAA4BqI,EAAII,EAAhC,KAAAzI,OAAqCqI,EAAItU,EAAzC,KAEPyB,EAAM9B,EAAK1C,MAAM0T,eAAjBlP,GACkC,eAAnC9B,EAAK1C,MAAM0T,eAAerP,KAC1B3B,EAAKC,SAALvB,OAAAuE,EAAA,EAAAvE,CAAA,GACOsB,EAAK1C,MADZ,CAEI0T,eAAetS,OAAAuE,EAAA,EAAAvE,CAAA,GAAKsB,EAAK1C,MAAM0T,eAAjB,CAAgCrC,MAAOiG,MACtD,kBAAM1U,EAAaC,KAAb,6BAAAmM,OAA+CxK,GAC5C,CAAC8S,SAAU5U,EAAK1C,MAAM0T,eAAerC,UAIT,SAAnC3O,EAAK1C,MAAM0T,eAAerP,MAC/B3B,EAAKC,SAALvB,OAAAuE,EAAA,EAAAvE,CAAA,GACOsB,EAAK1C,MADZ,CAEI0T,eAAetS,OAAAuE,EAAA,EAAAvE,CAAA,GAAKsB,EAAK1C,MAAM0T,eAAjB,CAAgCrC,MAAOiG,MAEzD,kBAAM1U,EAAaC,KAAb,uBAAAmM,OAAyCxK,GAAM8S,QAK7DI,oBAAsB,SAAAjV,GAClBG,EAAaC,KAAK,4BAAlBzB,OAAAuE,EAAA,EAAAvE,CAAA,GACOsB,EAAK1C,MAAM0T,eADlB,CAEIlP,GAAI9B,EAAK1C,MAAM0T,eAAelP,GAC9BH,KAAM3B,EAAK1C,MAAM0T,eAAerP,QAEhC5B,GAAOA,EAAMqI,qBAGrB6M,YAAc,SAAAlV,GACNC,EAAKmT,OAAO+B,aAAalV,EAAKmT,OAClCnT,EAAKmT,MAAQgC,WAAW,WACpBjV,EAAaC,KAAK,4BAAlBzB,OAAAuE,EAAA,EAAAvE,CAAA,GACOsB,EAAK1C,MAAM0T,eADlB,CAEIlP,GAAI9B,EAAK1C,MAAM0T,eAAelP,GAC9BH,KAAM3B,EAAK1C,MAAM0T,eAAerP,QAEpCzB,EAAaC,KAAK,wBAAwB,IAC3C,KACHD,EAAaC,KAAK,wBAAwB,GACtCJ,GAAOA,EAAMqI,qBAGrBgN,YAAc,SAAArV,GAAS,IAEd+B,EAAM9B,EAAK1C,MAAM0T,eAAjBlP,GACL5B,EAAaC,KAAK,qBAAsB,CAAC+M,YAAapL,EAAIqL,KAAMnN,EAAK1C,MAAM0T,eAAerP,OAE1F5B,EAAMqI,qBAGViN,qBAAuB,SAAC1T,GAChB,OAAQA,GACJ,IAAK,OACF,OACCvB,EAAAC,EAAAC,cAACgV,GAAD,CACI1C,gBAAelU,OAAAuE,EAAA,EAAAvE,CAAA,GAAQsB,EAAK1C,MAAMsV,iBAClC5B,eAActS,OAAAuE,EAAA,EAAAvE,CAAA,GAAQsB,EAAK1C,MAAM0T,gBACjCsB,WAActS,EAAKoU,SACnB9C,UAAatR,EAAKwT,QAClBd,uBAA0B1S,EAAK0U,qBAC/B1B,aAAgBhT,EAAK4T,WACrBb,UAAa/S,EAAK0T,QAClB1B,aAAgBhS,EAAKqU,aAG7B,IAAK,aACD,OACIjU,EAAAC,EAAAC,cAACiV,GAAD,CACIhD,kBAAqBvS,EAAK1C,MAAMsV,gBAAgBL,kBAChDvB,eAActS,OAAAuE,EAAA,EAAAvE,CAAA,GAAQsB,EAAK1C,MAAM0T,gBACjCsB,WAActS,EAAKoU,SACnB1B,uBAA0B1S,EAAK0U,qBAC/BnD,cAAiBvR,EAAKoV,cAGlC,IAAK,QACG,OACIhV,EAAAC,EAAAC,cAACkV,GAAD,CACI5C,gBAAelU,OAAAuE,EAAA,EAAAvE,CAAA,GAAQsB,EAAK1C,MAAMsV,iBAClC5B,eAActS,OAAAuE,EAAA,EAAAvE,CAAA,GAAQsB,EAAK1C,MAAM0T,gBACjCO,cAAiBvR,EAAKoV,YACtB9D,UAAatR,EAAKwT,QAClB1B,kBAAqB9R,EAAKsU,gBAC1BtC,aAAgBhS,EAAKqU,WACrB3C,WAAc1R,EAAK8T,SACnBlC,YAAe5R,EAAKgU,YAGpC,IAAK,QACG,OACI5T,EAAAC,EAAAC,cAACmV,GAAD,CACI7C,gBAAelU,OAAAuE,EAAA,EAAAvE,CAAA,GAAQsB,EAAK1C,MAAMsV,iBAClC5B,eAActS,OAAAuE,EAAA,EAAAvE,CAAA,GAAQsB,EAAK1C,MAAM0T,gBACjCO,cAAiBvR,EAAKoV,cAGtC,QAAS,OAAOhV,EAAAC,EAAAC,cAAA,KAAGI,UAAY,sBAAf,wBAiC5BgV,mBAAqB,SAACC,EAAUC,GACxBA,EAAS5E,iBAAmBhR,EAAK1C,MAAM0T,gBAC3ChR,EAAKiV,iBAGThU,kBAAoB,SAAAlB,GAChBG,EAAagB,GAAG,2BAA4BlB,EAAKgV,qBACjD9U,EAAagB,GAAb,kBAAAoL,OAAkCtM,EAAK1C,MAAM0T,eAAelP,IAAM9B,EAAKoT,YACvElT,EAAagB,GAAG,+BAAgClB,EAAKwU,mBACrDtU,EAAagB,GAAb,sBAAAoL,OAAsCtM,EAAK1C,MAAM0T,eAAelP,IAAM9B,EAAKkU,mBAG/E/S,qBAAuB,SAAApB,GACfC,EAAKmT,OAAO+B,aAAalV,EAAKmT,OAClCjT,EAAakB,IAAI,2BAA4BpB,EAAKgV,qBAClD9U,EAAakB,IAAb,kBAAAkL,OAAmCtM,EAAK1C,MAAM0T,eAAelP,IAAM9B,EAAKoT,YACxElT,EAAakB,IAAI,+BAAgCpB,EAAKwU,mBACtDtU,EAAakB,IAAb,sBAAAkL,OAAuCtM,EAAK1C,MAAM0T,eAAelP,IAAM9B,EAAKkU,yFA9CxE,IACE2B,EAAqBjX,KAAKtB,MAAMsV,gBAAhCiD,iBACN,OACIzV,EAAAC,EAAAC,cAAC6N,EAAA,SAAD,KACI/N,EAAAC,EAAAC,cAAA,OAAMI,UAAY,mBACdN,EAAAC,EAAAC,cAAA,UACIK,QAAW/B,KAAK0U,WAChB5S,UAAY,yBAEZN,EAAAC,EAAAC,cAAC+J,EAAD,CAAM3D,KAAO,oBAEjBtG,EAAAC,EAAAC,cAAA,yBAEIuV,EACAzV,EAAAC,EAAAC,cAAA,KAAGI,UAAY,iBAAiB9B,KAAKtB,MAAM0T,eAAerP,MACxD,KAGFkU,EACAzV,EAAAC,EAAAC,cAAA,OAAKI,UAAY,cACZ9B,KAAKyW,qBAAqBzW,KAAKtB,MAAM0T,eAAerP,OAEvD,cA7SKf,IAAMa,eCgBtBqU,GAxBS,SAAAvU,GACpB,OACInB,EAAAC,EAAAC,cAAC6N,EAAA,SAAD,CAAUX,IAAM,mBACRjM,EAAMwU,iBAAiB/S,QACnB5C,EAAAC,EAAAC,cAAC0V,GAAD,CAAaxI,IAAM,cAAc9G,KAAQnF,EAAMwU,iBAAiBhJ,SAEpExL,EAAM0U,aACF7V,EAAAC,EAAAC,cAAC4P,GAAD,CACIhD,YAAe3L,EAAMyP,eAAelP,GACpCmL,gBAAmB1L,EAAM0L,gBACzBO,IAAM,cAAcrC,SAAW,WAGvC/K,EAAAC,EAAAC,cAAC4V,GAAD,CACI1I,IAAG,mBAAAlB,OAAuB/K,EAAMyP,eAAelP,IAC/C2R,kBAAqBlS,EAAMkS,kBAC3BzC,eAActS,OAAAuE,EAAA,EAAAvE,CAAA,GAAQ6C,EAAMyP,gBAC5BmF,gBAAoB5U,EAAM4U,gBAC1BvD,gBAAmBrR,EAAMqR,uMCjB7C,IAAMwD,GAAiBC,KAAOC,MAAMC,MAAM,SAAAhV,GAAK,MAAK,CAChDiV,MAAO,CACHC,OAAQlV,EAAMmV,OAAS,OAAS,KAChCC,KAAMpV,EAAMqV,OAASrV,EAAMqV,OAAS,MACpCC,IAAMtV,EAAMuV,OAASvV,EAAMuV,OAAS,QAJrBT,CAAHU,KAMP,SAAAxV,GAAK,OAAIA,EAAMkQ,KAAOlQ,EAAMkQ,KAAO,IAAM,MACxC,SAAAlQ,GAAK,OAAIA,EAAMkQ,KAAOlQ,EAAMkQ,KAAO,GAAK,IAAO,OAiM9CuF,8MAhLX1Z,MAAQ,CACJwE,GAAI9B,EAAKuB,MAAMO,GACfmV,kBAAkB,EAClBC,aAAa,EACbC,cAAenX,EAAKuB,MAAM4V,cAC1BlI,cAAejP,EAAKuB,MAAM0N,cAC1BvI,KAAM1G,EAAKuB,MAAMmF,KACjB+K,KAAMzR,EAAKuB,MAAMkQ,KAAOzR,EAAKuB,MAAMkQ,KAAO,KAC1C2F,YAAa,KACbC,SAAUrX,EAAKuB,MAAM4P,OAAOC,EAAI,CAACA,EAAGpR,EAAKuB,MAAM4P,OAAOC,EAAGC,EAAGrR,EAAKuB,MAAM4P,OAAOE,GAAK,KACnFiG,gBAAgB,KAGpBC,qBAAuB,SAAAxX,GAEnB,IAAMyX,EAAyB,CAC3B1V,GAAI9B,EAAK1C,MAAMwE,GACfmN,cAAejP,EAAK1C,MAAM2R,cAC1BtN,KAAM,QACNoQ,aAAc,KACdE,QAAS,EACTwE,OAAQ,KACRhC,MAAOzU,EAAK1C,MAAMoJ,KAClByK,OAAOzS,OAAAuE,EAAA,EAAAvE,CAAA,GAAKsB,EAAK1C,MAAM+Z,WAG3BnX,EAAaC,KAAb,uBAAyC,CACrC6Q,eAAgBwG,EAChBvI,cAAejP,EAAK1C,MAAM2R,cAC1BnN,GAAI9B,EAAK1C,MAAMwE,GACf2V,cAAezX,EAAK1C,MAAMmU,OAE9BzR,EAAKC,SAALvB,OAAAuE,EAAA,EAAAvE,CAAA,GAAkBsB,EAAK1C,MAAvB,CAA8B2Z,kBAAkB,KAChDlX,EAAMqI,qBAGVsP,WAAa,SAAA3X,GACT,GAAgC,IAA5BA,EAAM4X,YAAYC,MAAa,OAAO,EAC1C,IAAMC,EAAU7X,EAAK8X,SAASC,wBAExBC,EACIH,EAAQlB,KADZqB,EAEGH,EAAQhB,IACNgB,EAAQI,MAAQJ,EAAQlB,KACvBkB,EAAQK,OAASL,EAAQhB,IAGrC7W,EAAKC,SAALvB,OAAAuE,EAAA,EAAAvE,CAAA,GACOsB,EAAK1C,MADZ,CAEI8Z,YAAa,CAAChG,EAAGrR,EAAMoY,QAAUH,EAAY3G,EAAGtR,EAAMqY,QAAUJ,GAChEV,gBAAiBtX,EAAK1C,MAAMga,kBAGhCvX,EAAMqI,qBAGViQ,mBAAqB,SAACzB,EAAQE,GAE1B,IAAMe,EAAU7X,EAAK8X,SAASC,wBAExBO,EAAa,IAAMT,EAAQ5D,OAC3BsE,EAAcvY,EAAKuB,MAAM4V,cAAcpD,MAAQ8D,EAAQ9D,MAO7D,OALI+C,EAJkB,IAIMA,EAJN,GAKlBA,EAASwB,IAAYxB,EAASwB,GAC9B1B,EANkB,IAMMA,EANN,GAOlBA,EAAS2B,IAAa3B,EAAS2B,GAE5B,CAACnH,EAAGwF,EAAQvF,EAAGyF,MAG1B0B,MAAQ,SAACC,EAAMC,GACX,MAAO,CACHtH,EAAG,EACHC,EAAG,MAGXsH,KAAO,SAACvH,EAAEC,GAAH,OAASrR,EAAKC,SAALvB,OAAAuE,EAAA,EAAAvE,CAAA,GAAkBsB,EAAK1C,MAAvB,CAA8B+Z,SAAU,CAACjG,EAAGA,EAAGC,EAAGA,SAElEuH,SAAW,SAAA7Y,GAEP,GAAIC,EAAK1C,MAAMga,gBAAkBtX,EAAK1C,MAAM2Z,iBAAiB,CAEzD,IAAI4B,EAAQ9Y,EAAMoY,QAAUnY,EAAKuB,MAAM4V,cAAcR,KACjDmC,EAAQ/Y,EAAMqY,QAAUpY,EAAKuB,MAAM4V,cAAcN,IAEjDD,EAASiC,EAAQ7Y,EAAK1C,MAAM8Z,YAAYhG,EAAIpR,EAAKwY,QAAQpH,EACzD0F,EAASgC,EAAQ9Y,EAAK1C,MAAM8Z,YAAY/F,EAAIrR,EAAKwY,QAAQnH,EAEzDF,EAASnR,EAAKqY,mBAAmBzB,EAAOE,GAExCiC,EAA+B,IAAX5H,EAAOC,EAAUpR,EAAK1C,MAAM6Z,cAAcpD,MAC9DiF,EAA+B,IAAX7H,EAAOE,EAAUrR,EAAK1C,MAAM6Z,cAAclD,OAElEjU,EAAK2Y,KAAKI,EAAkBE,QAAQ,GAAK,IAC/BD,EAAkBC,QAAQ,GAAK,KAE7ClZ,EAAMqI,qBAGV8Q,cAAgB,SAAAnZ,GACRC,EAAK1C,MAAMga,iBACXtX,EAAKC,SAALvB,OAAAuE,EAAA,EAAAvE,CAAA,GAAkBsB,EAAK1C,MAAvB,CAA8Bga,gBAAgB,KAC9CpX,EAAaC,KAAb,sBAAAmM,OAAwCtM,EAAK1C,MAAMwE,IAAM9B,EAAK1C,MAAM+Z,WAExEtX,EAAMqI,qBAGV+Q,gBAAkB,SAAApZ,GAAS,IAChB6K,EAAW7K,EAAX6K,QACP5K,EAAKC,SAALvB,OAAAuE,EAAA,EAAAvE,CAAA,GAAkBsB,EAAK1C,MAAvB,CAA8BoJ,KAAMkE,QAGxCwO,eAAiB,SAAArZ,GAEb,GAAIA,EAAMsZ,WAA8B,MAAlBtZ,EAAMuZ,OAAiB,CACzC,IAAIC,EAAUvZ,EAAK1C,MAAMmU,KAAO,EAChC8H,EAAUA,EAAU,IAAM,IAAMA,EAChCvZ,EAAKC,SAALvB,OAAAuE,EAAA,EAAAvE,CAAA,GAAkBsB,EAAK1C,MAAvB,CAA6BmU,KAAM8H,KACnCrZ,EAAaC,KAAK,kBAAmBoZ,GAGzC,GAAIxZ,EAAMsZ,UAA6B,MAAjBtZ,EAAMuZ,OAAgB,CACxC,IAAIC,EAAUvZ,EAAK1C,MAAMmU,KAAO,EAC/B8H,EAAUA,GAAW,EAAI,EAAIA,EAC7BvZ,EAAKC,SAALvB,OAAAuE,EAAA,EAAAvE,CAAA,GAAkBsB,EAAK1C,MAAvB,CAA6BmU,KAAM8H,KACnCrZ,EAAaC,KAAK,kBAAmBoZ,GAE1CxZ,EAAMqI,qBAEVoR,SAAW,SAAAzZ,GACP,GAAKC,EAAK1C,MAAM4Z,YAMbhX,EAAakB,IAAb,iBAAAkL,OAAkCtM,EAAK1C,MAAM2R,eAAgBjP,EAAKwZ,cANzC,KACjB/H,EAAQ1R,EAAR0R,KACXzR,EAAKC,SAALvB,OAAAuE,EAAA,EAAAvE,CAAA,GACOsB,EAAK1C,MADZ,CACmB4Z,aAAa,EAC5BC,cAAe,CAACpD,MAAOtC,EAAKsC,MAAOE,OAAQxC,EAAKwC,eAKxD6D,SAAW,OACX2B,kBAAoB,SAAAxS,GAAI,OAAIjH,EAAK8X,SAAW7Q,KAwB5ChG,kBAAoB,WAChBf,EAAagB,GAAb,uBAAAoL,OAAuCtM,EAAK1C,MAAMwE,IAAM9B,EAAKmZ,iBAC7DjZ,EAAagB,GAAb,iBAAAoL,OAAiCtM,EAAK1C,MAAM2R,eAAiBjP,EAAKwZ,aAGtErY,qBAAuB,WACnBjB,EAAakB,IAAb,iBAAAkL,OAAkCtM,EAAK1C,MAAM2R,eAAgBjP,EAAKwZ,UAClEtZ,EAAakB,IAAb,uBAAAkL,OAAwCtM,EAAK1C,MAAMwE,IAAM9B,EAAKmZ,0FA5B1D,OACI/Y,EAAAC,EAAAC,cAAC8V,GAAD,CACIzU,KAAO,SACPyF,MAAQ,QACRI,IAAO5I,KAAK6a,kBACZhI,KAAQ7S,KAAKtB,MAAMmU,KACnB9Q,QAAW/B,KAAK2Y,qBAChBmC,YAAe9a,KAAK8Y,WACpBiC,YAAc/a,KAAKga,SACnBgB,aAAgBhb,KAAKsa,cACrBW,UAAajb,KAAKsa,cAClBY,YAAelb,KAAKwG,KACpB2U,QAAWnb,KAAKwa,eAChBxC,OAAUhY,KAAKtB,MAAM+Z,SAAWzY,KAAKtB,MAAM+Z,SAASjG,EAAI,KACxD0F,OAAUlY,KAAKtB,MAAM+Z,SAAWzY,KAAKtB,MAAM+Z,SAAShG,EAAI,KACxDqF,OAAU9X,KAAKtB,MAAMga,eACrB0C,8BAAA,WA3KApZ,IAAMa,wYCd1B,IAAMwY,GAAe5D,KAAO6D,IAAI3D,MAAM,SAAAhV,GAAK,MAAK,CAC5CiV,MAAO,CACHC,OAAQlV,EAAMmV,OAAS,OAAS,KAChCC,KAAMpV,EAAMqV,OAASrV,EAAMqV,OAAS,MACpCC,IAAMtV,EAAMuV,OAASvV,EAAMuV,OAAS,KACpCqD,QAAS,OACTC,eAAgB,SAChBC,WAAY,YAPChE,CAAHiE,MAiBZC,GAAQlE,KAAOmE,OAAVC,KAGI,SAAAlZ,GAAK,OAAIA,EAAMkV,OAASlV,EAAMkV,OAAS,OAgNvCiE,8MAhMXpd,MAAQ,CACJ2R,cAAejP,EAAKuB,MAAM0N,cAC1BnN,GAAK9B,EAAKuB,MAAMO,GAChBqV,cAAenX,EAAKuB,MAAM4V,cAC1BlG,QAASjR,EAAKuB,MAAMmF,MAAQ1G,EAAKuB,MAAM0P,QACvCmG,YAAa,KACb3F,KAAMzR,EAAKuB,MAAMkQ,KAAOzR,EAAKuB,MAAMkQ,KAAO,GAC1CkJ,SAAU3a,EAAKuB,MAAM4P,OAAOC,EAAI,CAACA,EAAGpR,EAAKuB,MAAM4P,OAAOC,EAAGC,EAAGrR,EAAKuB,MAAM4P,OAAOE,GAAK,KACnFiG,gBAAgB,EAChBL,kBAAkB,EAClB2D,aAAa,KAGjBC,qBAAuB,SAAA9a,GAEnB,IAAM+a,EAAyB,CAC3BhZ,GAAI9B,EAAK1C,MAAMwE,GACfmN,cAAejP,EAAK1C,MAAM2R,cAC1BtN,KAAM,QACN8U,OAAQ,KACRhC,MAAOzU,EAAK1C,MAAMoJ,KAClByK,OAAOzS,OAAAuE,EAAA,EAAAvE,CAAA,GAAKsB,EAAK1C,MAAMqd,WAG3Bza,EAAaC,KAAK,uBAAuB,CACrC6Q,eAAgB8J,EAChB7L,cAAejP,EAAK1C,MAAM2R,cAC1BnN,GAAI9B,EAAK1C,MAAMwE,GACf2V,cAAezX,EAAK1C,MAAMmU,OAE9BzR,EAAKC,SAALvB,OAAAuE,EAAA,EAAAvE,CAAA,GAAkBsB,EAAK1C,MAAvB,CAA8B2Z,kBAAkB,KAChDlX,EAAMqI,qBAGVsP,WAAa,SAAA3X,GACT,GAAgC,IAA5BA,EAAM4X,YAAYC,MAAa,OAAO,EAC1C,IAAMC,EAAU7X,EAAK+a,SAAShD,wBAExBC,EACIH,EAAQlB,KADZqB,EAEGH,EAAQhB,IACNgB,EAAQI,MAAQJ,EAAQlB,KACvBkB,EAAQK,OAASL,EAAQhB,IAGrC7W,EAAKC,SAALvB,OAAAuE,EAAA,EAAAvE,CAAA,GACOsB,EAAK1C,MADZ,CAEI8Z,YAAa,CAAChG,EAAGrR,EAAMoY,QAAUH,EAAY3G,EAAGtR,EAAMqY,QAAUJ,GAChEV,gBAAiBtX,EAAK1C,MAAMga,kBAGhCvX,EAAMqI,qBAGViQ,mBAAqB,SAACzB,EAAQE,GAE1B,IAAMe,EAAU7X,EAAK+a,SAAShD,wBAExBO,EAAa,IAAMT,EAAQ5D,OAC3BsE,EAAcvY,EAAKuB,MAAM4V,cAAcpD,MAAQ8D,EAAQ9D,MAO7D,OALI+C,EAJkB,IAIMA,EAJN,GAKlBA,EAASwB,IAAYxB,EAASwB,GAC9B1B,EANkB,IAMMA,EANN,GAOlBA,EAAS2B,IAAa3B,EAAS2B,GAE5B,CAACnH,EAAGwF,EAAQvF,EAAGyF,MAG1B0B,MAAQ,SAACC,EAAMC,GACX,MAAO,CACHtH,EAAG,EACHC,EAAG,MAGXsH,KAAO,SAACvH,EAAEC,GAAH,OAASrR,EAAKC,SAALvB,OAAAuE,EAAA,EAAAvE,CAAA,GAAkBsB,EAAK1C,MAAvB,CAA8Bqd,SAAU,CAACvJ,EAAGA,EAAGC,EAAGA,SAElE2J,UAAY,SAAAjb,GAER,GAAIC,EAAK1C,MAAMga,gBAAkBtX,EAAK1C,MAAM2Z,iBAAiB,CAEzD,IAAI4B,EAAQ9Y,EAAMoY,QAAUnY,EAAKuB,MAAM4V,cAAcR,KACjDmC,EAAQ/Y,EAAMqY,QAAUpY,EAAKuB,MAAM4V,cAAcN,IAEjDD,EAASiC,EAAQ7Y,EAAK1C,MAAM8Z,YAAYhG,EAAIpR,EAAKwY,QAAQpH,EACzD0F,EAASgC,EAAQ9Y,EAAK1C,MAAM8Z,YAAY/F,EAAIrR,EAAKwY,QAAQnH,EAEzDF,EAASnR,EAAKqY,mBAAmBzB,EAAOE,GAExCiC,EAA+B,IAAX5H,EAAOC,EAAUpR,EAAK1C,MAAM6Z,cAAcpD,MAC9DiF,EAA+B,IAAX7H,EAAOE,EAAUrR,EAAK1C,MAAM6Z,cAAclD,OAElEjU,EAAK2Y,KAAKI,EAAkBE,QAAQ,GAAK,IAC/BD,EAAkBC,QAAQ,GAAK,KAE7ClZ,EAAMqI,qBAGV8Q,cAAgB,SAAAnZ,GACRC,EAAK1C,MAAMga,iBACXtX,EAAKC,SAALvB,OAAAuE,EAAA,EAAAvE,CAAA,GAAkBsB,EAAK1C,MAAvB,CAA8Bga,gBAAgB,KAC9CpX,EAAaC,KAAb,sBAAAmM,OAAwCtM,EAAK1C,MAAMwE,IAAM9B,EAAK1C,MAAMqd,WAExE5a,EAAMqI,qBAGVwL,WAAa,SAAA7T,GAAS,IACX6K,EAAW7K,EAAX6K,QACP5K,EAAKC,SAALvB,OAAAuE,EAAA,EAAAvE,CAAA,GAAkBsB,EAAK1C,MAAvB,CAA8BoJ,KAAMkE,QAGxCwO,eAAiB,SAAArZ,GAEb,GAAIA,EAAMsZ,WAA8B,MAAlBtZ,EAAMuZ,OAAiB,CACzC,IAAIC,EAAUvZ,EAAK1C,MAAMmU,KAAO,EAChC8H,EAAUA,EAAU,IAAM,IAAMA,EAChCvZ,EAAKC,SAALvB,OAAAuE,EAAA,EAAAvE,CAAA,GAAkBsB,EAAK1C,MAAvB,CAA6BmU,KAAM8H,KACnCrZ,EAAaC,KAAK,kBAAmBoZ,GAGzC,GAAIxZ,EAAMsZ,UAA6B,MAAjBtZ,EAAMuZ,OAAgB,CACxC,IAAIC,EAAUvZ,EAAK1C,MAAMmU,KAAO,EAC/B8H,EAAUA,GAAW,EAAI,EAAIA,EAC7BvZ,EAAKC,SAALvB,OAAAuE,EAAA,EAAAvE,CAAA,GAAkBsB,EAAK1C,MAAvB,CAA6BmU,KAAM8H,KACnCrZ,EAAaC,KAAK,kBAAmBoZ,GAE1CxZ,EAAMqI,qBAEVoR,SAAW,SAAAzZ,GACP,IAAKC,EAAK1C,MAAM4Z,YAAY,KACjBzF,EAAQ1R,EAAR0R,KACXzR,EAAKC,SAALvB,OAAAuE,EAAA,EAAAvE,CAAA,GACOsB,EAAK1C,MADZ,CACmB4Z,aAAa,EAC5BC,cAAe,CAACpD,MAAOtC,EAAKsC,MAAOE,OAAQxC,EAAKwC,eAKxD8G,SAAW,OACXE,kBAAoB,SAAAhU,GAAI,OAAIjH,EAAK+a,SAAW9T,KAmC5ChG,kBAAoB,WAChBf,EAAagB,GAAb,uBAAAoL,OAAuCtM,EAAK1C,MAAMwE,IAAM9B,EAAK4T,YAC7D1T,EAAagB,GAAb,iBAAAoL,OAAiCtM,EAAK1C,MAAM2R,eAAiBjP,EAAKwZ,aAGtErY,qBAAuB,WACnBjB,EAAakB,IAAb,iBAAAkL,OAAkCtM,EAAK1C,MAAM2R,eAAgBjP,EAAKwZ,UAClEtZ,EAAakB,IAAb,uBAAAkL,OAAwCtM,EAAK1C,MAAMwE,IAAM9B,EAAK4T,qFAvC9D,IAAIsH,EAAO,4CAEX,OADA1d,QAAQC,IAAIyd,GAER9a,EAAAC,EAAAC,cAAC2Z,GAAD,CACIzS,IAAO5I,KAAKqc,kBACZta,QAAS/B,KAAKic,qBACdnB,YAAe9a,KAAK8Y,WACpBiC,YAAc/a,KAAKoc,UACnBpB,aAAgBhb,KAAKsa,cACrBW,UAAajb,KAAKsa,cAClBY,YAAelb,KAAKwG,KACpB2U,QAAWnb,KAAKwa,eAChB1C,OAAU9X,KAAKtB,MAAMga,eACrBV,OAAUhY,KAAKtB,MAAMqd,SAAW/b,KAAKtB,MAAMqd,SAASvJ,EAAI,KACxD0F,OAAUlY,KAAKtB,MAAMqd,SAAW/b,KAAKtB,MAAMqd,SAAStJ,EAAI,MAE1DzS,KAAKtB,MAAMga,eAUE,KATXlX,EAAAC,EAAAC,cAACia,GAAD,CACI3T,IAAOhI,KAAKtB,MAAMga,eAAwB,KAAP4D,EACnCN,YAAehc,KAAKtB,MAAMsd,YAC1B7G,MAASnV,KAAKtB,MAAMyW,MACpBE,OAAUrV,KAAKtB,MAAM2W,OACrBwC,OAAU,IACV0E,iBAAe,GAEdvc,KAAK2C,MAAMC,kBApLHZ,IAAMa,sWCtBnC,IAAM2Z,GAAa/E,KAAO6D,IAAI3D,MAAM,SAAAhV,GAAK,MAAK,CAC1CiV,MAAO,CACHC,OAAQlV,EAAMmV,OAAS,OAAS,KAChCC,KAAMpV,EAAMqV,OAASrV,EAAMqV,OAAS,MACpCC,IAAMtV,EAAMuV,OAASvV,EAAMuV,OAAS,QAJzBT,CAAHgF,KAMH,SAAA9Z,GAAK,OAAIA,EAAMkQ,KAAOlQ,EAAMkQ,KAAKE,EAAI,IAAM,OAC1C,SAAApQ,GAAK,OAAIA,EAAMkQ,KAAOlQ,EAAMkQ,KAAKI,EAAI,IAAM,QAInDyJ,GAAajF,KAAOkF,IAAVC,KAGD,SAAAja,GAAK,OAAIA,EAAM0Q,SACT,SAAA1Q,GAAK,OAAIA,EAAMwQ,eAiQrB0J,8MAjPXne,MAAQ,CACJwE,GAAI9B,EAAKuB,MAAMO,GACfmV,kBAAkB,EAClBC,aAAa,EACbjF,QAASjS,EAAKuB,MAAM0Q,SAAW,EAC/BF,aAAc/R,EAAKuB,MAAMwQ,cAAgB,EACzCoF,cAAenX,EAAKuB,MAAM4V,cAC1BlI,cAAejP,EAAKuB,MAAM0N,cAC1BvI,KAAM1G,EAAKuB,MAAMmF,KACjB+K,KAAMzR,EAAKuB,MAAMkQ,KAAOzR,EAAKuB,MAAMkQ,KAAO,CAACE,EAAG,GAAIE,EAAG,IACrDuF,YAAa,KACbC,SAAUrX,EAAKuB,MAAM4P,OAAOC,EAAI,CAACA,EAAGpR,EAAKuB,MAAM4P,OAAOC,EAAGC,EAAGrR,EAAKuB,MAAM4P,OAAOE,GAAK,KACnFiG,gBAAgB,KAGpBC,qBAAuB,SAAAxX,GAEnB,IAAMyX,EAAyB,CAC3B1V,GAAI9B,EAAK1C,MAAMwE,GACfmN,cAAejP,EAAK1C,MAAM2R,cAC1BwC,KAAK/S,OAAAuE,EAAA,EAAAvE,CAAA,GAAKsB,EAAK1C,MAAMmU,MACrB9P,KAAM,QACNoQ,aAAc/R,EAAK1C,MAAMyU,aACzBE,QAASjS,EAAK1C,MAAM2U,QACpBwE,OAAQ,KACRhC,MAAOzU,EAAK1C,MAAMoJ,KAClByK,OAAOzS,OAAAuE,EAAA,EAAAvE,CAAA,GAAKsB,EAAK1C,MAAM+Z,WAG3BnX,EAAaC,KAAb,uBAAyC,CACrC6Q,eAAgBwG,EAChBvI,cAAejP,EAAK1C,MAAM2R,cAC1BnN,GAAI9B,EAAK1C,MAAMwE,GACf2V,cAAezX,EAAK1C,MAAMmU,OAE9BzR,EAAKC,SAALvB,OAAAuE,EAAA,EAAAvE,CAAA,GAAkBsB,EAAK1C,MAAvB,CAA8B2Z,kBAAkB,KAChDlX,EAAMqI,qBAGVsP,WAAa,SAAA3X,GACT,GAAgC,IAA5BA,EAAM4X,YAAYC,MAAa,OAAO,EAC1C,IAAMC,EAAU7X,EAAK0b,SAAS3D,wBAExBC,EACIH,EAAQlB,KADZqB,EAEGH,EAAQhB,IACNgB,EAAQI,MAAQJ,EAAQlB,KACvBkB,EAAQK,OAASL,EAAQhB,IAGrC7W,EAAKC,SAALvB,OAAAuE,EAAA,EAAAvE,CAAA,GACOsB,EAAK1C,MADZ,CAEI8Z,YAAa,CAAChG,EAAGrR,EAAMoY,QAAUH,EAAY3G,EAAGtR,EAAMqY,QAAUJ,GAChEV,gBAAiBtX,EAAK1C,MAAMga,kBAGhCvX,EAAMqI,qBAGViQ,mBAAqB,SAACzB,EAAQE,GAE1B,IAAMe,EAAU7X,EAAK0b,SAAS3D,wBAExBO,EAAa,IAAMT,EAAQ5D,OAC3BsE,EAAcvY,EAAKuB,MAAM4V,cAAcpD,MAAQ8D,EAAQ9D,MAO7D,OALI+C,EAJkB,IAIMA,EAJN,GAKlBA,EAASwB,IAAYxB,EAASwB,GAC9B1B,EANkB,IAMMA,EANN,GAOlBA,EAAS2B,IAAa3B,EAAS2B,GAE5B,CAACnH,EAAGwF,EAAQvF,EAAGyF,MAG1B0B,MAAQ,SAACC,EAAMC,GACX,MAAO,CACHtH,EAAG,EACHC,EAAG,MAGXsH,KAAO,SAACvH,EAAEC,GAAH,OAASrR,EAAKC,SAALvB,OAAAuE,EAAA,EAAAvE,CAAA,GAAkBsB,EAAK1C,MAAvB,CAA8B+Z,SAAU,CAACjG,EAAGA,EAAGC,EAAGA,SAElEuH,SAAW,SAAA7Y,GAEP,GAAIC,EAAK1C,MAAMga,gBAAkBtX,EAAK1C,MAAM2Z,iBAAiB,CAEzD,IAAI4B,EAAQ9Y,EAAMoY,QAAUnY,EAAKuB,MAAM4V,cAAcR,KACjDmC,EAAQ/Y,EAAMqY,QAAUpY,EAAKuB,MAAM4V,cAAcN,IAEjDD,EAASiC,EAAQ7Y,EAAK1C,MAAM8Z,YAAYhG,EAAIpR,EAAKwY,QAAQpH,EACzD0F,EAASgC,EAAQ9Y,EAAK1C,MAAM8Z,YAAY/F,EAAIrR,EAAKwY,QAAQnH,EAEzDF,EAASnR,EAAKqY,mBAAmBzB,EAAOE,GAExCiC,EAA+B,IAAX5H,EAAOC,EAAUpR,EAAK1C,MAAM6Z,cAAcpD,MAC9DiF,EAA+B,IAAX7H,EAAOE,EAAUrR,EAAK1C,MAAM6Z,cAAclD,OAElEjU,EAAK2Y,KAAKI,EAAkBE,QAAQ,GAAK,IAC/BD,EAAkBC,QAAQ,GAAK,KAE7ClZ,EAAMqI,qBAGV8Q,cAAgB,SAAAnZ,GACRC,EAAK1C,MAAMga,iBACXtX,EAAKC,SAALvB,OAAAuE,EAAA,EAAAvE,CAAA,GAAkBsB,EAAK1C,MAAvB,CAA8Bga,gBAAgB,KAC9CpX,EAAaC,KAAb,sBAAAmM,OAAwCtM,EAAK1C,MAAMwE,IAAM9B,EAAK1C,MAAM+Z,WAExEtX,EAAMqI,qBAGV+Q,gBAAkB,SAAApZ,GAAS,IAChB6K,EAAW7K,EAAX6K,QACP5K,EAAKC,SAALvB,OAAAuE,EAAA,EAAAvE,CAAA,GAAkBsB,EAAK1C,MAAvB,CAA8BoJ,KAAMkE,QAGxCkJ,SAAW,SAAAK,GAAa,IACbJ,EAASI,EAATJ,MACP/T,EAAKC,SAALvB,OAAAuE,EAAA,EAAAvE,CAAA,GAAkBsB,EAAK1C,MAAvB,CACImU,KAAK/S,OAAAuE,EAAA,EAAAvE,CAAA,GACEsB,EAAK1C,MAAMmU,KADd,CAEAE,EAAGoC,UAKfC,UAAY,SAAAG,GAAa,IACdF,EAAUE,EAAVF,OACPjU,EAAKC,SAALvB,OAAAuE,EAAA,EAAAvE,CAAA,GAAkBsB,EAAK1C,MAAvB,CACImU,KAAK/S,OAAAuE,EAAA,EAAAvE,CAAA,GACEsB,EAAK1C,MAAMmU,KADd,CAEAI,EAAGoC,UAKfmF,eAAiB,SAAArZ,GAEb,GAAIA,EAAMsZ,WAA8B,MAAlBtZ,EAAMuZ,OAAiB,CACzC,IAAIC,EAAUvZ,EAAK1C,MAAMmU,KAAO,EAChC8H,EAAUA,EAAU,IAAM,IAAMA,EAChCvZ,EAAKC,SAALvB,OAAAuE,EAAA,EAAAvE,CAAA,GAAkBsB,EAAK1C,MAAvB,CAA6BmU,KAAM8H,KACnCrZ,EAAaC,KAAb,kBAAAmM,OAAoCtM,EAAK1C,MAAMwE,IAAMyX,GAGzD,GAAIxZ,EAAMsZ,UAA6B,MAAjBtZ,EAAMuZ,OAAgB,CACxC,IAAIC,EAAUvZ,EAAK1C,MAAMmU,KAAO,EAC/B8H,EAAUA,GAAW,EAAI,EAAIA,EAC7BvZ,EAAKC,SAALvB,OAAAuE,EAAA,EAAAvE,CAAA,GAAkBsB,EAAK1C,MAAvB,CAA6BmU,KAAM8H,KACnCrZ,EAAaC,KAAb,kBAAAmM,OAAoCtM,EAAK1C,MAAMwE,IAAMyX,GAE1DxZ,EAAMqI,qBAGVoR,SAAW,SAAAzZ,GACP,GAAKC,EAAK1C,MAAM4Z,YAMbhX,EAAakB,IAAb,iBAAAkL,OAAkCtM,EAAK1C,MAAM2R,eAAgBjP,EAAKwZ,cANzC,KACjB/H,EAAQ1R,EAAR0R,KACXzR,EAAKC,SAALvB,OAAAuE,EAAA,EAAAvE,CAAA,GACOsB,EAAK1C,MADZ,CACmB4Z,aAAa,EAC5BC,cAAe,CAACpD,MAAOtC,EAAKsC,MAAOE,OAAQxC,EAAKwC,eAKxD0H,gBAAkB,SAAAxH,GACd3W,QAAQC,IAAI0W,GACZnU,EAAKC,SAALvB,OAAAuE,EAAA,EAAAvE,CAAA,GAAkBsB,EAAK1C,MAAvB,CAA8BmU,KAAM0C,EAAU1C,WAGlD6C,gBAAkB,SAAAH,GAElB,IAAII,EAASJ,EAAUpC,aAAe,KAAYoC,EAAUpC,aAC5DwC,EAASJ,EAAUmE,WAAa,EAAI,EAAInE,EAAUpC,aAC9C/R,EAAKC,SAALvB,OAAAuE,EAAA,EAAAvE,CAAA,GACOsB,EAAK1C,MADZ,CAEIyU,aAAcwC,QAItBF,WAAa,SAAAF,GACT,IAAIlC,EAAUkC,EAAUlC,QAAU,GAAQkC,EAAUlC,QACpDA,EAAUkC,EAAUlC,QAAU,EAAI,EAAIkC,EAAUlC,QAC5CjS,EAAKC,SAALvB,OAAAuE,EAAA,EAAAvE,CAAA,GACOsB,EAAK1C,MADZ,CAEI2U,QAASA,QAIrByJ,SAAW,OACXE,kBAAoB,SAAA3U,GAAI,OAAIjH,EAAK0b,SAAWzU,KA+B5ChG,kBAAoB,WAChBf,EAAagB,GAAb,uBAAAoL,OAAuCtM,EAAK1C,MAAMwE,IAAM9B,EAAKmZ,iBAC7DjZ,EAAagB,GAAb,kBAAAoL,OAAkCtM,EAAK1C,MAAMwE,IAAM9B,EAAK2b,iBACxDzb,EAAagB,GAAb,kBAAAoL,OAAkCtM,EAAK1C,MAAMwE,IAAM9B,EAAKqU,YACxDnU,EAAagB,GAAb,uBAAAoL,OAAuCtM,EAAK1C,MAAMwE,IAAK9B,EAAKsU,iBAC5DpU,EAAagB,GAAb,iBAAAoL,OAAiCtM,EAAK1C,MAAM2R,eAAiBjP,EAAKwZ,UAClEtZ,EAAagB,GAAb,gBAAAoL,OAAgCtM,EAAK1C,MAAMwE,IAAM9B,EAAK8T,UACtD5T,EAAagB,GAAb,iBAAAoL,OAAiCtM,EAAK1C,MAAMwE,IAAM9B,EAAKgU,cAG3D7S,qBAAuB,WACnBjB,EAAakB,IAAb,iBAAAkL,OAAkCtM,EAAK1C,MAAM2R,eAAgBjP,EAAKwZ,UAClEtZ,EAAakB,IAAb,kBAAAkL,OAAmCtM,EAAK1C,MAAMwE,IAAM9B,EAAK2b,iBACzDzb,EAAakB,IAAb,kBAAAkL,OAAmCtM,EAAK1C,MAAMwE,IAAM9B,EAAKqU,YACzDnU,EAAakB,IAAb,uBAAAkL,OAAwCtM,EAAK1C,MAAMwE,IAAK9B,EAAKsU,iBAC7DpU,EAAakB,IAAb,uBAAAkL,OAAwCtM,EAAK1C,MAAMwE,IAAM9B,EAAKmZ,iBAC9DjZ,EAAakB,IAAb,gBAAAkL,OAAiCtM,EAAK1C,MAAMwE,IAAM9B,EAAK8T,UACvD5T,EAAakB,IAAb,iBAAAkL,OAAkCtM,EAAK1C,MAAMwE,IAAM9B,EAAKgU,oFA5CpD,OADJxW,QAAQC,IAAImB,KAAKtB,OAET8C,EAAAC,EAAAC,cAAC8a,GAAD,CACA5T,IAAO5I,KAAKgd,kBACZnK,KAAQ7S,KAAKtB,MAAMmU,KACnB9Q,QAAW/B,KAAK2Y,qBAChBmC,YAAe9a,KAAK8Y,WACpBiC,YAAc/a,KAAKga,SACnBgB,aAAgBhb,KAAKsa,cACrBW,UAAajb,KAAKsa,cAClBY,YAAelb,KAAKwG,KACpB2U,QAAWnb,KAAKwa,eAChBxC,OAAUhY,KAAKtB,MAAM+Z,SAAWzY,KAAKtB,MAAM+Z,SAASjG,EAAI,KACxD0F,OAAUlY,KAAKtB,MAAM+Z,SAAWzY,KAAKtB,MAAM+Z,SAAShG,EAAI,KACxDqF,OAAU9X,KAAKtB,MAAMga,eACrB0C,8BAAA,GAEI5Z,EAAAC,EAAAC,cAACgb,GAAD,CACIO,uBAAA,EACA9J,aAAgBnT,KAAKtB,MAAMyU,aAC3BE,QAAWrT,KAAKtB,MAAM2U,QACtBrL,IAAOhI,KAAKtB,MAAMoJ,KAClBG,IAAM,gBAjOVjG,IAAMa,ueCnB1B,IAAMqa,GAAczF,KAAO6D,IAAI3D,MAAM,SAAAhV,GAAK,MAAK,CAC3CiV,MAAO,CACHC,OAAQlV,EAAMmV,OAAS,OAAS,KAChCC,KAAMpV,EAAMqV,OAASrV,EAAMqV,OAAS,MACpCC,IAAMtV,EAAMuV,UAJAT,CAAH0F,KAOA,SAAAxa,GAAK,OAAIA,EAAMkQ,MACnB,SAAAlQ,GAAK,OAAIA,EAAMya,YAMtBC,GAAY5F,KAAO6F,EAAVC,KAGI,SAAA5a,GAAK,OAAIA,EAAMuR,OAwOnBsJ,8MApNX9e,MAAQ,CACJwE,GAAI9B,EAAKuB,MAAMO,GACfmV,kBAAkB,EAClBoF,YAAY,EACZC,OAAQtc,EAAKuB,MAAM4V,cACnBlI,cAAejP,EAAKuB,MAAM0N,cAC1BsN,UAAWvc,EAAKuB,MAAMoN,MACtB6N,SAAUxc,EAAKuB,MAAM2P,UAAYlR,EAAKuB,MAAMkQ,KAC5C2F,YAAa,KACbqF,SAAUzc,EAAKuB,MAAM4P,OACrB2B,KAAM9S,EAAKuB,MAAMuR,KAAO9S,EAAKuB,MAAMuR,KAAO,QAC1CwE,gBAAgB,EAChBoF,YAAa1c,EAAKuB,MAAMC,SAAWxB,EAAKuB,MAAMC,SAAW,KACzDmb,cAAe,EACfzF,aAAa,KAGjB0F,qBAAuB,SAAA7c,GAElB,IAAM8c,EAAwB,CAC3B/a,GAAI9B,EAAK1C,MAAMwE,GACfmN,cAAejP,EAAK1C,MAAM2R,cAC1BtN,KAAM,OACNmR,KAAM9S,EAAK1C,MAAMwV,KACjBnE,MAAO3O,EAAK1C,MAAMif,UAClBrL,SAAUlR,EAAK1C,MAAMkf,SACrBvL,QAASjR,EAAK1C,MAAMof,YACpBvL,OAAOzS,OAAAuE,EAAA,EAAAvE,CAAA,GAAKsB,EAAK1C,MAAMwf,UAE3B5c,EAAaC,KAAb,uBAAyC,CACjCwB,KAAM,OACNsN,cAAejP,EAAK1C,MAAM2R,cAC1BnN,GAAI9B,EAAK1C,MAAMwE,GACfkP,eAAgB6L,EAChBpF,cAAezX,EAAK1C,MAAMkf,WAElCxc,EAAKC,SAALvB,OAAAuE,EAAA,EAAAvE,CAAA,GAAkBsB,EAAK1C,MAAvB,CAA8B2Z,kBAAkB,KAChDlX,EAAMqI,qBAGV2U,gBAAkB,SAAAnI,GACU,kBAAbA,GACP5U,EAAKC,SAALvB,OAAAuE,EAAA,EAAAvE,CAAA,GACOsB,EAAK1C,MADZ,CAEIif,UAAW3H,QAIvBoI,eAAiB,SAAA3J,GACbrT,EAAKC,SAALvB,OAAAuE,EAAA,EAAAvE,CAAA,GAAkBsB,EAAK1C,MAAvB,CAA8Bkf,SAAUnJ,EAAU5B,WAEtD+H,SAAW,SAAAzZ,GAAS,IACT0R,EAAQ1R,EAAR0R,KACFzR,EAAK1C,MAAM4Z,YAMThX,EAAakB,IAAb,iBAAAkL,OAAkCtM,EAAK1C,MAAM2R,eAAgBjP,EAAKwZ,UALzExZ,EAAKC,SAALvB,OAAAuE,EAAA,EAAAvE,CAAA,GACOsB,EAAK1C,MADZ,CAEI4Z,aAAa,EACbyF,cAAe5c,EAAM4c,cAAgB,EACrCL,OAAQ,CAACvI,MAAOtC,EAAKsC,MAAOE,OAAQxC,EAAKwC,cAIjDgJ,kBAAoB,SAAAC,IACGA,EAAajM,SAAoC,KAAzBiM,EAAajM,UAEpDjR,EAAKC,SAALvB,OAAAuE,EAAA,EAAAvE,CAAA,GACOsB,EAAK1C,MADZ,CAEIof,YAAaQ,EAAajM,cAItCyG,WAAa,SAAA3X,GACT,GAAgC,IAA5BA,EAAM4X,YAAYC,MAAa,OAAO,EAC1C,IAAMC,EAAU7X,EAAKmd,QAAQpF,wBAEvBC,EACIH,EAAQlB,KADZqB,EAEGH,EAAQhB,IACNgB,EAAQI,MAAQJ,EAAQlB,KACvBkB,EAAQK,OAASL,EAAQhB,IAGrC7W,EAAKC,SAALvB,OAAAuE,EAAA,EAAAvE,CAAA,GACOsB,EAAK1C,MADZ,CAEI8Z,YAAa,CAAChG,EAAGrR,EAAMoY,QAAUH,EAAY3G,EAAGtR,EAAMqY,QAAUJ,GAChEV,gBAAiBtX,EAAK1C,MAAMga,kBAGhCvX,EAAMqI,qBAGVsL,QAAU,SAAAS,GACNnU,EAAKC,SAALvB,OAAAuE,EAAA,EAAAvE,CAAA,GACOsB,EAAK1C,MADZ,CAEIwV,KAAMqB,EAAUrB,WAIxBuF,mBAAqB,SAACzB,EAAQE,GAE1B,IAAMe,EAAU7X,EAAKmd,QAAQpF,wBAEvBO,EAAa,IAAMT,EAAQ5D,OAC3BsE,EAAcvY,EAAKuB,MAAM4V,cAAcpD,MAAQ8D,EAAQ9D,MAO7D,OALI+C,EAJkB,IAIMA,EAJN,GAKlBA,EAASwB,IAAYxB,EAASwB,GAC9B1B,EANkB,IAMMA,EANN,GAOlBA,EAAS2B,IAAa3B,EAAS2B,GAE5B,CAACnH,EAAGwF,EAAQvF,EAAGyF,MAG1B0B,MAAQ,SAACC,EAAMC,GACX,MAAO,CACHtH,EAAG,EACHC,EAAG,MAGXsH,KAAO,SAACvH,EAAEC,GAAH,OAASrR,EAAKC,SAALvB,OAAAuE,EAAA,EAAAvE,CAAA,GAAkBsB,EAAK1C,MAAvB,CAA8Bmf,SAAU,CAACrL,EAAGA,EAAGC,EAAGA,SAElEuH,SAAW,SAAA7Y,GAEP,GAAIC,EAAK1C,MAAMga,gBAAkBtX,EAAK1C,MAAM2Z,iBAAiB,CAEzD,IAAI4B,EAAQ9Y,EAAMoY,QAAUnY,EAAKuB,MAAM4V,cAAcR,KACjDmC,EAAQ/Y,EAAMqY,QAAWpY,EAAKuB,MAAM4V,cAAcN,IAElDD,EAASiC,EAAQ7Y,EAAK1C,MAAM8Z,YAAYhG,EAAIpR,EAAKwY,QAAQpH,EACzD0F,EAASgC,EAAQ9Y,EAAK1C,MAAM8Z,YAAY/F,EAAIrR,EAAKwY,QAAQnH,EAEzDF,EAASnR,EAAKqY,mBAAmBzB,EAAOE,GAExCiC,EAA+B,IAAX5H,EAAOC,EAAUpR,EAAK1C,MAAMgf,OAAOvI,MACvDiF,EAA+B,IAAX7H,EAAOE,EAAUrR,EAAK1C,MAAMgf,OAAOrI,OAE3DjU,EAAK2Y,KAAKI,EAAkBE,QAAQ,GAAK,IAC/BD,EAAkBC,QAAQ,GAAK,KAE7ClZ,EAAMqI,qBAGV8Q,cAAgB,SAAAnZ,GACRC,EAAK1C,MAAMga,iBACXtX,EAAKC,SAALvB,OAAAuE,EAAA,EAAAvE,CAAA,GAAkBsB,EAAK1C,MAAvB,CAA8Bga,gBAAgB,KAC9CpX,EAAaC,KAAb,sBAAAmM,OAAwCtM,EAAK1C,MAAMwE,IAAM9B,EAAK1C,MAAMmf,WAExE1c,EAAMqI,qBAGVgR,eAAiB,SAAArZ,GAEb,GAAIA,EAAMsZ,WAA8B,MAAlBtZ,EAAMuZ,OAAiB,CACzC,IAAIC,EAAUvZ,EAAK1C,MAAMkf,SAAW,EACpCjD,EAAUA,EAAU,IAAM,IAAMA,EAChCvZ,EAAKC,SAALvB,OAAAuE,EAAA,EAAAvE,CAAA,GAAkBsB,EAAK1C,MAAvB,CAA6Bkf,SAAUjD,KACvCrZ,EAAaC,KAAb,kBAAAmM,OAAoCtM,EAAK1C,MAAMwE,IAAMyX,GAGzD,GAAIxZ,EAAMsZ,UAA6B,MAAjBtZ,EAAMuZ,OAAgB,CACxC,IAAIC,EAAUvZ,EAAK1C,MAAMkf,SAAW,EACnCjD,EAAUA,GAAW,GAAK,GAAKA,EAC/BvZ,EAAKC,SAALvB,OAAAuE,EAAA,EAAAvE,CAAA,GAAkBsB,EAAK1C,MAAvB,CAA6Bkf,SAAUjD,KACvCrZ,EAAaC,KAAb,kBAAAmM,OAAoCtM,EAAK1C,MAAMwE,IAAMyX,GAE1DxZ,EAAMqI,qBAGV+U,QAAU,OACVC,iBAAmB,SAAAnW,GAAI,OAAIjH,EAAKmd,QAAUlW,KA0B1ChG,kBAAoB,WAChBf,EAAagB,GAAb,uBAAAoL,OAAuCtM,EAAK1C,MAAMwE,IAAM9B,EAAK+c,iBAC7D7c,EAAagB,GAAb,eAAAoL,OAA+BtM,EAAK1C,MAAMwE,IAAM9B,EAAK0T,SACrDxT,EAAagB,GAAb,kBAAAoL,OAAkCtM,EAAK1C,MAAMwE,IAAM9B,EAAKgd,gBACxD9c,EAAagB,GAAb,yBAAAoL,OAAyCtM,EAAK1C,MAAMwE,IAAM9B,EAAKid,mBAC/D/c,EAAagB,GAAb,iBAAAoL,OAAiCtM,EAAK1C,MAAM2R,eAAgBjP,EAAKwZ,aAGrErY,qBAAuB,WACnBjB,EAAakB,IAAb,uBAAAkL,OAAwCtM,EAAK1C,MAAMwE,IAAM9B,EAAK+c,iBAC9D7c,EAAakB,IAAb,eAAAkL,OAAgCtM,EAAK1C,MAAMwE,IAAM9B,EAAK0T,SACtDxT,EAAakB,IAAb,kBAAAkL,OAAmCtM,EAAK1C,MAAMwE,IAAM9B,EAAKgd,gBACzD9c,EAAakB,IAAb,yBAAAkL,OAA0CtM,EAAK1C,MAAMwE,IAAM9B,EAAKid,mBAChE/c,EAAakB,IAAb,iBAAAkL,OAAkCtM,EAAK1C,MAAM2R,eAAgBjP,EAAKwZ,mFAnClE,OACIpZ,EAAAC,EAAAC,cAACwb,GAAD,CACItU,IAAQ5I,KAAKwe,iBACbzc,QAAS/B,KAAKge,qBACdZ,UAAapd,KAAKtB,MAAMif,UAAY3d,KAAKtB,MAAMif,UAAY,MAC3D9K,KAAQ7S,KAAKtB,MAAMkf,SAAW5d,KAAKtB,MAAMkf,SAAW,KAAO,QAC3D9C,YAAe9a,KAAK8Y,WACpBiC,YAAc/a,KAAKga,SACnBgB,aAAgBhb,KAAKsa,cACrBW,UAAajb,KAAKsa,cAClBa,QAAWnb,KAAKwa,eAChBxC,OAAUhY,KAAKtB,MAAMmf,SAAW7d,KAAKtB,MAAMmf,SAASrL,EAAI,KACxD0F,OAAUlY,KAAKtB,MAAMmf,SAAW7d,KAAKtB,MAAMmf,SAASpL,EAAI,KACxDqF,OAAU9X,KAAKtB,MAAMga,eACrB+F,sBAAA,GAEAjd,EAAAC,EAAAC,cAAC2b,GAAD,CAAWnJ,KAAQlU,KAAKtB,MAAMwV,MAAOlU,KAAKtB,MAAMof,qBAzMpC9b,IAAMa,+OC3BlC,IAAM6b,GAAajH,KAAO6D,IAAVqD,KAEH,SAAAhc,GAAK,OAAIA,EAAMwS,OACd,SAAAxS,GAAK,OAAIA,EAAM0S,QAEL,SAAA1S,GAAK,OAAIA,EAAMic,iBACX,SAAAjc,GAAK,OAAIA,EAAMmN,kBAmF5B+O,GAhFa,SAAAlc,GAAS,IAAAiF,EAEpBC,mBAASlF,EAAMO,IAArBA,EAF0BpD,OAAAiI,EAAA,EAAAjI,CAAA8H,EAAA,MAAAqC,EAGTpC,mBAASlF,EAAM0N,eAAhCA,EAH0BvQ,OAAAiI,EAAA,EAAAjI,CAAAmK,EAAA,MAI7B6U,EAAe9c,IAAM+c,YAJQ7U,EAMGrC,mBAASlF,EAAMqc,YAAcrc,EAAMoN,OANtCkP,EAAAnf,OAAAiI,EAAA,EAAAjI,CAAAoK,EAAA,GAM5B0U,EAN4BK,EAAA,GAMXC,EANWD,EAAA,GAAAhT,EAOCpE,mBAASlF,EAAMmN,gBAAkBnN,EAAMmN,gBAAkB,MAP1DqP,EAAArf,OAAAiI,EAAA,EAAAjI,CAAAmM,EAAA,GAO5B6D,EAP4BqP,EAAA,GAOXC,EAPWD,EAAA,GAAA1O,EASnB5I,mBAASlF,EAAMwS,MAAQxS,EAAMwS,MAAQ,QAA9CA,EAT4BrV,OAAAiI,EAAA,EAAAjI,CAAA2Q,EAAA,MAAA4O,EAUlBxX,mBAASlF,EAAM0S,OAAS1S,EAAM0S,OAAS,QAAjDA,EAV4BvV,OAAAiI,EAAA,EAAAjI,CAAAuf,EAAA,MAuC3BC,EAAc,SAAA/J,GAChB2J,EAAW3J,EAAUS,WAGnBuJ,EAAqB,SAAApe,GAAS,IACzB6K,EAAW7K,EAAX6K,QACPoT,EAASpT,IAGPwT,EAAa,SAAAjK,GACf3W,QAAQC,IAAI0W,IAgBhB,OADAkK,oBAZkB,WAKd,OA7CmB,WACnBX,EAAaY,QAAQC,QACrB,IAAIC,EAAad,EAAaY,QAAQvG,wBACtC7X,EAAaC,KAAb,iBAAAmM,OAAmC2C,GAAgB,CAC/C0N,cAAepb,EAAMob,cACrBlL,KAAM,CAACsC,MAAOyK,EAAUzK,MAAOE,OAAQuK,EAAUvK,UAoCrDwK,GACAve,EAAagB,GAAb,6BAAAoL,OAA6CxK,GAAMoc,GACnDhe,EAAagB,GAAb,gBAAAoL,OAAgCxK,GAAMsc,GACtCle,EAAagB,GAAb,0BAAAoL,OAA0CxK,GAAMqc,GACzC,WACHje,EAAakB,IAAb,6BAAAkL,OAA8CxK,GAAMoc,GACpDhe,EAAakB,IAAb,gBAAAkL,OAAiCxK,GAAMsc,GACvCle,EAAakB,IAAb,0BAAAkL,OAA2CxK,GAAMqc,MAMrD/d,EAAAC,EAAAC,cAACgd,GAAD,CACI9V,IAAQkW,EACRgB,cA/CkB,SAAA3e,GAEtB,IAAM4e,EAA8B,CAChC7c,GAAIA,EACJmN,cAAeA,EACftN,KAAM,aACNgN,MAAO6O,EACP9O,gBAAiBA,GAErBxO,EAAaC,KAAK,uBAAuB,CACrC6Q,eAAgB2N,EAChB1P,cAAeA,EACftN,KAAM,aACNG,GAAIA,IAER/B,EAAMqI,mBAiCFwW,YAAa3P,EACbuO,gBAAmBA,GAAoCjc,EAAMqc,WAC7DlP,gBAAmBA,GAAoCnN,EAAMmN,gBAC7DqF,MAASA,EACTE,OAAUA,GAET1S,EAAMC,WCnBJqd,GA9DW,SAAAtd,GAEtB,MAAmB,SAAfA,EAAMI,KACCvB,EAAAC,EAAAC,cAACwe,GAAD,CACKtR,IAAG,OAAAlB,OAAW/K,EAAMO,IACpBmN,cAAiB1N,EAAM0N,cACvBkI,cAAazY,OAAAuE,EAAA,EAAAvE,CAAA,GAAQ6C,EAAM4V,eAC3BrV,GAAMP,EAAMO,GACZ2P,KAAQlQ,EAAMkQ,KAAOlQ,EAAMkQ,KAAOlQ,EAAM2P,SACxCvC,MAASpN,EAAMoN,MACfsD,QAAW1Q,EAAM0Q,QACjBd,OAAMzS,OAAAuE,EAAA,EAAAvE,CAAA,GAAQ6C,EAAM4P,QACpB2B,KAAQvR,EAAMuR,MAEbvR,EAAM0P,SAGJ,eAAf1P,EAAMI,KACCvB,EAAAC,EAAAC,cAACye,GAAD,CACK9P,cAAiB1N,EAAM0N,cACvBN,MAASpN,EAAMoN,MACfoF,MAASxS,EAAMwS,MACfE,OAAU1S,EAAM0S,OAChBxC,KAAQlQ,EAAMkQ,KACd3P,GAAMP,EAAMO,GACZ0L,IAAG,KAAAlB,OAAS/K,EAAMO,MAGf,UAAfP,EAAMI,KACCvB,EAAAC,EAAAC,cAAC0e,GAAD,CACK/P,cAAiB1N,EAAM0N,cACvB8C,aAAgBxQ,EAAMwQ,cAAgB,EACtCE,QAAW1Q,EAAM0Q,QACjBR,KAAQlQ,EAAMkQ,KAAOlQ,EAAMkQ,KAAO,CAACE,EAAG,GAAIE,EAAG,IAC7CnL,KAAQnF,EAAMmF,KAAOnF,EAAMmF,KAAOnF,EAAMkT,MACxCtD,OAAMzS,OAAAuE,EAAA,EAAAvE,CAAA,GAAQ6C,EAAM4P,QACpBgG,cAAazY,OAAAuE,EAAA,EAAAvE,CAAA,GAAQ6C,EAAM4V,eAC3BrV,GAAMP,EAAMO,GACZ0L,IAAG,QAAAlB,OAAY/K,EAAMO,MAGlB,UAAfP,EAAMI,KACCvB,EAAAC,EAAAC,cAAC2e,GAAD,CACKzR,IAAG,QAAAlB,OAAY/K,EAAMO,IACrBA,GAAMP,EAAMO,GACZmN,cAAiB1N,EAAM0N,cACvBkI,cAAazY,OAAAuE,EAAA,EAAAvE,CAAA,GAAQ6C,EAAM4V,eAC3BzQ,KAAQnF,EAAMmF,KAAOnF,EAAMmF,KAAOnF,EAAM0P,QACxCE,OAAMzS,OAAAuE,EAAA,EAAAvE,CAAA,GAAQ6C,EAAM4P,UAEb,UAAf5P,EAAMI,KACCvB,EAAAC,EAAAC,cAAC4e,GAAD,CACKjQ,cAAiB1N,EAAM0N,cACvBwC,KAAQlQ,EAAMkQ,KAAOlQ,EAAMkQ,KAAOlQ,EAAM2P,SACxCxK,KAAQnF,EAAMmF,KAAOnF,EAAMmF,KAAOnF,EAAMkT,MACxCtD,OAAMzS,OAAAuE,EAAA,EAAAvE,CAAA,GAAQ6C,EAAM4P,QACpBgG,cAAazY,OAAAuE,EAAA,EAAAvE,CAAA,GAAQ6C,EAAM4V,eAC3BrV,GAAMP,EAAMO,GACZ0L,IAAG,QAAAlB,OAAY/K,EAAMO,WARrC,GCiMOqd,sNApOX7hB,MAAQ,CACJ6P,KAAMnN,EAAKuB,MAAM4L,KACjBwR,4BAA6B,CACzB7c,GAAI,KACJmN,cAAe,KACftN,KAAM,aACNgN,MAAO,KACPD,gBAAiB,MAErBmO,sBAAuB,CACnB/a,GAAI,KACJmN,cAAe,KACftN,KAAM,OACNmR,KAAM,QACNnE,MAAO,KACPsD,QAAS,EACTf,SAAU,KACVD,QAAS,KACTE,OAAQ,CAACC,EAAG,KAAMC,EAAG,OAEzBmG,uBAAwB,CACpB1V,GAAI,KACJ2P,KAAM,CAACE,EAAG,GAAIE,EAAG,IACjB5C,cAAe,KACf8C,aAAc,EACdpQ,KAAM,QACNsQ,QAAS,EACTwE,OAAQ,KACRhC,MAAO,wBACPtD,OAAQ,CAACC,EAAG,KAAMC,EAAG,OAEzByJ,uBAAwB,CACpBhZ,GAAI,KACJmN,cAAe,KACftN,KAAM,QACN8P,KAAM,KACNR,QAAS,KACTE,OAAQ,CAACC,EAAG,KAAMC,EAAG,OAEzB+N,uBAAwB,CACpBtd,GAAI,KACJmN,cAAe,KACftN,KAAM,QACN8P,KAAM,KACNR,QAAS,KACTE,OAAQ,CAACC,EAAG,KAAMC,EAAG,OAEzB8F,cAAczY,OAAAuE,EAAA,EAAAvE,CAAA,GAAKsB,EAAKuB,MAAM4V,eAC9BzP,MAAO,WAGX2X,QAAU,SAAAtf,GACN,IAAI+B,EAAKgN,KAAKE,SAASiK,QAAQ,GAEzB4D,EAAqBne,OAAAuE,EAAA,EAAAvE,CAAA,GACpBsB,EAAK1C,MAAMuf,sBADS,CAEvB/a,GAAIA,EACJmN,cAAejP,EAAKuB,MAAMkS,oBAE9BvT,EAAaC,KAAK,uBAAuB,CACrC0c,wBACAlb,KAAM3B,EAAK1C,MAAMuf,sBAAsBlb,KACvC2d,UAAWlf,EAAAC,EAAAC,cAACwe,GAADpgB,OAAA4H,OAAA,CACPkH,IAAG,OAAAlB,OAAWxK,IACV+a,EAFG,CAGP1F,cAAazY,OAAAuE,EAAA,EAAAvE,CAAA,GAAQsB,EAAKuB,MAAM4V,eAChCrV,GAAMA,IAJC,WAOf/B,EAAMqI,qBAGVmX,cAAgB,SAAAxf,GACZ,IAAI+B,EAAKgN,KAAKE,SAASiK,QAAQ,GAEzB0F,EAA2BjgB,OAAAuE,EAAA,EAAAvE,CAAA,GAC1BsB,EAAK1C,MAAMqhB,4BADe,CAE7B1P,cAAejP,EAAK1C,MAAMmW,oBAG9BvT,EAAaC,KAAK,uBAAuB,CACrCwe,8BACAhd,KAAM3B,EAAK1C,MAAMqhB,4BAA4Bhd,KAC7C2d,UAAWlf,EAAAC,EAAAC,cAACye,GAADrgB,OAAA4H,OAAA,CACK2I,cAAiBjP,EAAKuB,MAAMkS,mBACxBkL,EAFT,CAGKnR,IAAG,KAAAlB,OAASxK,GACZA,GAAMA,OAI1B/B,EAAMqI,qBAGVoX,SAAW,SAAAzf,GACP,IAAI+B,EAAKgN,KAAKE,SAASiK,QAAQ,GACzBzB,EAAsB9Y,OAAAuE,EAAA,EAAAvE,CAAA,GACrBsB,EAAK1C,MAAMka,uBADU,CAExB1V,GAAIA,EACJmN,cAAejP,EAAKuB,MAAMkS,oBAE9BvT,EAAaC,KAAK,uBAAuB,CACrCqX,yBACA7V,KAAM3B,EAAK1C,MAAMka,uBAAuB7V,KACxC2d,UAAWlf,EAAAC,EAAAC,cAAC0e,GAADtgB,OAAA4H,OAAA,CACKkH,IAAG,QAAAlB,OAAYxK,GACfqV,cAAiBnX,EAAKuB,MAAM4V,cAC5BrV,GAAMA,EACN4E,KAAQ,yBACJ8Q,EALT,CAMK7V,KAAO,aAE3B5B,EAAMqI,qBAGVqX,SAAW,SAAA1f,GACP,IAAI+B,EAAKgN,KAAKE,SAASiK,QAAQ,GACxB6B,EAAsBpc,OAAAuE,EAAA,EAAAvE,CAAA,GACtBsB,EAAK1C,MAAMwd,uBADW,CAEzBhZ,GAAIA,EACJmN,cAAejP,EAAKuB,MAAMkS,oBAG9BvT,EAAaC,KAAK,uBAAwB,CACtC2a,yBACAnZ,KAAMmZ,EAAuBnZ,KAC7B2d,UAAWlf,EAAAC,EAAAC,cAAC2e,GAADvgB,OAAA4H,OAAA,CACKkH,IAAG,QAAAlB,OAAYxK,GACfmN,cAAiBjP,EAAKuB,MAAMkS,kBAC5B0D,cAAiBnX,EAAKuB,MAAM4V,cAC5BrV,GAAMA,EACN4E,KAAQ,yBACJoU,EANT,CAOKnZ,KAAO,aAG3B5B,EAAMqI,qBAGVsX,SAAW,SAAA3f,GACP,IAAI+B,EAAKgN,KAAKE,SAASiK,QAAQ,GACxBmG,EAAsB1gB,OAAAuE,EAAA,EAAAvE,CAAA,GACtBsB,EAAK1C,MAAM8hB,uBADW,CAEzBtd,GAAIA,EACJmN,cAAejP,EAAKuB,MAAMkS,oBAG9BvT,EAAaC,KAAK,uBAAwB,CACtCif,yBACAzd,KAAMyd,EAAuBzd,KAC7B2d,UAAWlf,EAAAC,EAAAC,cAAC4e,GAADxgB,OAAA4H,OAAA,CACKkH,IAAG,QAAAlB,OAAYxK,GACfmN,cAAiBjP,EAAKuB,MAAMkS,kBAC5B0D,cAAiBnX,EAAKuB,MAAM4V,cAC5BrV,GAAMA,EACN6d,UAAY,UACRP,EANT,CAOKzd,KAAO,aAG3B5B,EAAMqI,qBAGVwX,WAAa,SAAA7f,GACT,IAAI+B,EAAKgN,KAAKE,SAASiK,QAAQ,GACzB0F,EAA2BjgB,OAAAuE,EAAA,EAAAvE,CAAA,GAC1BsB,EAAK1C,MAAMqhB,4BADe,CAE7B1P,cAAa,UAAA3C,OAAYxK,GACzBA,GAAE,UAAAwK,OAAYxK,GACdH,KAAM,eAEVzB,EAAaC,KAAK,kBAAmB,CACjCwe,8BACAW,UAAWlf,EAAAC,EAAAC,cAACye,GAADrgB,OAAA4H,OAAA,GACSqY,EADT,CAEKnR,IAAG,KAAAlB,OAASxK,GACZA,GAAMA,EACNiS,MAAQ,OACRE,OAAS,QACTtS,KAAO,kBAG3B5B,EAAMqI,2FAIN,MAAwB,UAApBxJ,KAAKtB,MAAM6P,KAEP/M,EAAAC,EAAAC,cAAA,OAAKI,UAAY,kBACbN,EAAAC,EAAAC,cAAA,UACIK,QAAW/B,KAAK4gB,SAChB9e,UAAY,mCAEZN,EAAAC,EAAAC,cAAA,sBAEJF,EAAAC,EAAAC,cAAA,UACIK,QAAW/B,KAAKygB,QAChB3e,UAAY,kCACZN,EAAAC,EAAAC,cAAA,qBAEJF,EAAAC,EAAAC,cAAA,UACIK,QAAW/B,KAAK8gB,SAChB9T,SAA6C,WAAjChN,KAAK2C,MAAMkS,kBACvB/S,UAAY,oCACZN,EAAAC,EAAAC,cAAA,uBAEJF,EAAAC,EAAAC,cAAA,UAAQK,QAAW/B,KAAK6gB,SACpB/e,UAAY,mCAEZN,EAAAC,EAAAC,cAAA,uBAIe,YAApB1B,KAAKtB,MAAM6P,KAEd/M,EAAAC,EAAAC,cAAA,OAAKI,UAAY,eACbN,EAAAC,EAAAC,cAAA,UACIK,QAAW/B,KAAKghB,WAChBlf,UAAY,wCAEZN,EAAAC,EAAAC,cAAA,kCAPT,SAhOSM,IAAMa,gBCyDfoe,8MAtDXviB,MAAQ,CACJwiB,mBAAmB,EACnBrM,kBAAmBzT,EAAKuB,MAAMkS,kBAC9BsM,OAAQ,EACRC,OAAQ,EACRC,QAAS,MACTC,QAAS,IACTC,cAAe,WAGnBC,cAAgB,SAAArgB,GACZC,EAAKC,SAAS,CAAC6f,mBAAmB9f,EAAK1C,MAAMwiB,oBAC7C/f,EAAMqI,qBAgCVsN,mBAAqB,WACb1V,EAAKuB,MAAMkS,oBAAsBzT,EAAK1C,MAAMmW,mBAC5CzT,EAAKC,SAALvB,OAAAuE,EAAA,EAAAvE,CAAA,GACOsB,EAAK1C,MADZ,CAEImW,kBAAmBzT,EAAKuB,MAAMkS,8FAhCtC,OACIrT,EAAAC,EAAAC,cAAC6N,EAAA,SAAD,KAEI/N,EAAAC,EAAAC,cAAA,OACAkH,IAAO5I,KAAKyhB,YACZ3f,UAAY,2BACZC,QAAW/B,KAAKwhB,eAEZhgB,EAAAC,EAAAC,cAAC+J,EAAD,CACI1J,QAAW/B,KAAKwhB,cAChB1f,UAAY,YACZgG,KAAO,uBAET9H,KAAKtB,MAAMwiB,kBACT1f,EAAAC,EAAAC,cAACggB,GAAD,CACI9S,IAAG,aAAAlB,OAAiB1N,KAAKtB,MAAMmW,mBAC/BtG,KAAO,QACPsG,kBAAqB7U,KAAKtB,MAAMmW,kBAChC0D,cAAiBvY,KAAK2C,MAAM4V,cAC5BoJ,gBAAmB3hB,KAAK2C,MAAMgf,kBAC7B,cA5CH3f,IAAMa,eCsDjB+e,sNA3CXljB,MAAQ,CACJ2R,cAAejP,EAAKuB,MAAMO,GAC1B2e,UAAU,EACVnB,UAAW,KACX9d,SAAU,QAGdkf,WAAa,WACJ1gB,EAAK1C,MAAMqjB,WAAa3gB,EAAK1C,MAAMoF,YAAc1C,EAAKuB,MAAMkS,mBAC7DzT,EAAKC,SAALvB,OAAAuE,EAAA,EAAAvE,CAAA,GACOsB,EAAK1C,MADZ,CAEIqjB,WAAW,IACZ,kBACHzgB,EAAaC,KAAK,gBAAlBzB,OAAAuE,EAAA,EAAAvE,CAAA,GACOsB,EAAK1C,MADZ,CAEIqjB,WAAW,EACX1R,cAAejP,EAAK1C,MAAM2R,sBAKtC2R,WAAa,OACbC,eAAiB,SAAA5Z,GAAI,OAAIA,EAAOjH,EAAK4gB,WAAa,CAAC1b,KAAM+B,EAAK8Q,wBAAyB9Q,KAAMA,GAAQA,2EAE5F,IAAAiD,EAAAtL,KACD2C,EAAQ3C,KAAK2C,MAAMuf,oBAAoB7e,WAAW4O,KAAK,SAAAxN,GAAI,OAAIA,EAAK4L,gBAAkB/E,EAAK3I,MAAMO,MAAO,KACxGN,EAAW5C,KAAK2C,MAAM4U,gBAAgB4K,aAAarY,OAAO,SAAArF,GAAI,OAAIA,EAAK4L,gBAAkB/E,EAAK3I,MAAMO,KAExG,OAAIP,EAEAnB,EAAAC,EAAAC,cAAC6N,EAAA,SAAD,KACI/N,EAAAC,EAAAC,cAAA,WAASI,UAAS,UAAA4L,OAAc1N,KAAK2C,MAAMob,eAAiBnV,IAAK5I,KAAKiiB,eACtEG,aAAa,WAAWrgB,QAAW/B,KAAK8hB,YACpCtgB,EAAAC,EAAAC,cAACye,GAADrgB,OAAA4H,OAAA,GAAyB/E,EAAzB,CAAgCob,cAAiB/d,KAAK2C,MAAMob,gBACvDnb,EAAS4B,IAAI,SAAAC,GAAI,OAAIA,EAAKic,aAAc,OAE3C1gB,KAAKtB,MAAMqjB,WAAavgB,EAAAC,EAAAC,cAAA,OAAKI,UAAY,eAAcN,EAAAC,EAAAC,cAAA,oCAIzDF,EAAAC,EAAAC,cAACiG,EAAD,aAjDS3F,IAAMa,gBCiBpBwf,GAvBC,SAAA1f,GAAS,IAEduf,EAAuBvf,EAAM2f,SAA7BJ,oBAEC,OADQA,EAAoB9e,oBACboB,IAAI,SAACC,EAAKiK,GACrB,OACQlN,EAAAC,EAAAC,cAAC6gB,GAAD,CACI3T,IAAOnK,EACP8S,gBAAezX,OAAAuE,EAAA,EAAAvE,CAAA,GAAQ6C,EAAM4U,iBAC7B2K,oBAAmBpiB,OAAAuE,EAAA,EAAAvE,CAAA,GAAQoiB,GAC3BrN,kBAAqBlS,EAAMkS,kBAC3B8M,gBAAmBhf,EAAM4U,gBAAgB4K,aAAaje,OACtDse,WAAc7f,EAAM6f,WACpBjK,cAAiB5V,EAAM4V,cACvBrV,GAAMuB,EACNsZ,cAAiBrP,GAEhB,CAAC2B,cAAe1N,EAAMkS,uBCK7C4N,sNAYF/jB,MAAQ,CACAoF,UAAW4e,SAASthB,EAAKuB,MAAM9E,MAAM8kB,OAAOC,OAC5Cb,WAAW,EACXlE,SAAU,EACVgF,kBAAkB,EAClBC,cAAc,EACd1Q,eAAgB,GAChBmF,gBAAiB,CACblU,WAAY,GACZ8e,aAAc,IAElBnO,gBAAiB,CACbL,mBAAmB,EACnBsD,kBAAkB,GAEtB8L,aAAc,CACVC,SAAU,IACVC,MAAO,GACPC,QAAQ,EACRC,QAAS,IAEbtO,kBAAoB,KACpB2N,YAAY,EACZnL,aAAa,EACbhJ,gBAAiB,KACjB8I,iBAAkB,CAAC/S,QAAQ,EAAOyR,MAAO,MACzC0C,cAAe,QAGvB6K,cAAgB,SAAAC,GACZ,IAAMC,EAAWD,EAAU5P,eAAe,QAC1CrS,EAAKC,SAALvB,OAAAuE,EAAA,EAAAvE,CAAA,GACOsB,EAAK1C,MADZ,CAEI2Y,aAAcjW,EAAK1C,MAAM2Y,YACzBhJ,gBAAiBiV,EAAWD,EAAU9U,KAAO,WAIrDgV,kBAAoB,SAAAF,GAChBjiB,EAAKC,SAALvB,OAAAuE,EAAA,EAAAvE,CAAA,GACOsB,EAAK1C,MADZ,CAEIyY,iBAAiBrX,OAAAuE,EAAA,EAAAvE,CAAA,GACVsB,EAAK1C,MAAMyY,iBADF,CAEZ/S,OAAQif,EAAUjf,OAClB+J,OAAQkV,EAAUlV,eAK9BqV,aAAe,SAAAH,GAEPA,EAAUtB,WACd3gB,EAAKC,SAALvB,OAAAuE,EAAA,EAAAvE,CAAA,GACOsB,EAAK1C,MADZ,CAEIqjB,UAAWsB,EAAUtB,UACrBlN,kBAAmBwO,EAAUhT,cAC7BkH,gBAAgBzX,OAAAuE,EAAA,EAAAvE,CAAA,GACTsB,EAAK1C,MAAM6Y,iBAElBiL,YAAY,QAKpBiB,eAAiB,SAAAJ,GACOjiB,EAAK1C,MAAM0T,eAAelP,KAAOmgB,EAAUjR,eAAelP,IAE1E9B,EAAKC,SAALvB,OAAAuE,EAAA,EAAAvE,CAAA,GACOsB,EAAK1C,MADZ,CAEImW,kBAAmBwO,EAAUhT,cAC7B+B,eAAetS,OAAAuE,EAAA,EAAAvE,CAAA,GACRsB,EAAK1C,MAAM0T,eACXiR,EAAUjR,gBAEjB4B,gBAAgBlU,OAAAuE,EAAA,EAAAvE,CAAA,GACTsB,EAAK1C,MAAMsV,gBADH,CAEXiD,kBAAkB,UAKlCvC,WAAa,SAAA2O,GAETjiB,EAAKC,SAALvB,OAAAuE,EAAA,EAAAvE,CAAA,GACOsB,EAAK1C,MADZ,CAEIsV,gBAAgBlU,OAAAuE,EAAA,EAAAvE,CAAA,GACTsB,EAAK1C,MAAMsV,gBADH,CAEXL,mBAAmB,EACnBsD,iBAAkBoM,EAAU1O,cAKxC+O,oBAAsB,SAAAC,GAAS,IAEtBxB,EAAgB/gB,EAAK1C,MAAM6Y,gBAA3B4K,aACDyB,EAAmB,GACnBvgB,EAAUvD,OAAAwE,EAAA,EAAAxE,CAAOsB,EAAK1C,MAAM6Y,gBAAgBlU,YAChDsgB,EAAME,QAAQ,SAAApf,GACV,GAAkB,eAAdA,EAAK1B,KAAsB,CAC3B,IAAIwV,EAAgB,CAChBpD,MAAO/T,EAAK0iB,cAAcxd,KAAK6O,MAC/BE,OAAQjU,EAAK0iB,cAAcxd,KAAK+O,OAChC4C,IAAK7W,EAAK0iB,cAAcxd,KAAK2R,IAC7BF,KAAM3W,EAAK0iB,cAAcxd,KAAKyR,MAE9B2I,EACAlf,EAAAC,EAAAC,cAACqiB,GAADjkB,OAAA4H,OAAA,CAEI6Q,cAAazY,OAAAuE,EAAA,EAAAvE,CAAA,GAAQyY,IACjB9T,EAHR,CAIImK,IAAG,GAAAlB,OAAOjJ,EAAK1B,MAAZ2K,OAAmBjJ,EAAKvB,OAG7B8gB,EAAa,CACf9gB,GAAIuB,EAAKvB,GACTmN,cAAe5L,EAAK4L,cACpBqQ,UAAWA,GAEfkD,EAAiB/T,KAAKmU,GACtB3gB,EAAWwM,KAAKpL,QAEfpB,EAAWwM,KAAKpL,KAErBrD,EAAKC,SAALvB,OAAAuE,EAAA,EAAAvE,CAAA,GACOsB,EAAK1C,MADZ,CAEImkB,kBAAkB,EAClBtL,gBAAgBzX,OAAAuE,EAAA,EAAAvE,CAAA,GACTsB,EAAK1C,MAAM6Y,gBADH,CAEXlU,WAAU,GAAAqK,OAAA5N,OAAAwE,EAAA,EAAAxE,CAAMsB,EAAK1C,MAAM6Y,gBAAgBlU,YAAjCvD,OAAAwE,EAAA,EAAAxE,CACKuD,IACf8e,aAAY,GAAAzU,OAAA5N,OAAAwE,EAAA,EAAAxE,CAAMqiB,GAAiByB,WAKnDK,aAAe,SAAAZ,GAAa,IACnBlB,EAAgB/gB,EAAK1C,MAAM6Y,gBAA3B4K,aACD+B,EAA0B,KAEP,SAAnBb,EAAUtgB,KACVmhB,EAA0Bb,EAAUpF,sBACZ,eAAnBoF,EAAUtgB,KACfmhB,EAA0Bb,EAAUtD,4BACZ,UAAnBsD,EAAUtgB,KACfmhB,EAA0Bb,EAAUzK,uBACZ,UAAnByK,EAAUtgB,KACfmhB,EAA0Bb,EAAUnH,uBACZ,UAAnBmH,EAAUtgB,OACfmhB,EAA0Bb,EAAU7C,wBAExC,IAAMwD,EAAa,CACf9gB,GAAIghB,EAAwBhhB,GAC5BmN,cAAe6T,EAAwB7T,cACvCqQ,UAAW2C,EAAU3C,WAErBtf,EAAKC,SAALvB,OAAAuE,EAAA,EAAAvE,CAAA,GACOsB,EAAK1C,MADZ,CAEI6Y,gBAAgBzX,OAAAuE,EAAA,EAAAvE,CAAA,GACTsB,EAAK1C,MAAM6Y,gBADH,CAEXlU,WAAU,GAAAqK,OAAA5N,OAAAwE,EAAA,EAAAxE,CAAMsB,EAAK1C,MAAM6Y,gBAAgBlU,YAAjC,CACM6gB,IAChB/B,aAAY,GAAAzU,OAAA5N,OAAAwE,EAAA,EAAAxE,CAAMqiB,GAAN,CAAoB6B,YAKhDG,qBAAuB,SAAAd,GAAa,IAEzBf,EAAYlhB,EAAKuB,MAAjB2f,SACH8B,GAAkB,EAChBC,EAAcjjB,EAAK1C,MAAM6Y,gBAAgBlU,WAAWmB,IAAI,SAAAC,GAC1D,OAAIA,EAAKvB,KAAOmgB,EAAUngB,IAAMkhB,GAAkB,EAAatkB,OAAAuE,EAAA,EAAAvE,CAAA,GAAIujB,IAC5D5e,IAGN2f,GAAiBC,EAAYxU,KAAKwT,GAEvCjiB,EAAKC,SAALvB,OAAAuE,EAAA,EAAAvE,CAAA,GACOsB,EAAK1C,MADZ,CAEI6Y,gBAAgBzX,OAAAuE,EAAA,EAAAvE,CAAA,GACTsB,EAAK1C,MAAM6Y,gBADH,CAEX7M,UAAU,EACVrH,WAAYghB,MAEjB,WAAM,IACAnC,EAAsB9gB,EAAKuB,MAAM2f,SAAjCJ,oBACT,OACA9gB,EAAKuB,MAAM6C,SAASoM,GAAiB,CACjCnO,IAAK6e,EAAS9e,OACdE,SAAS5D,OAAAwE,EAAA,EAAAxE,CAAKwiB,EAAS5e,UACvBL,WAAWvD,OAAAwE,EAAA,EAAAxE,CAAKsB,EAAK1C,MAAM6Y,gBAAgBlU,YAC3CD,oBAAoBtD,OAAAwE,EAAA,EAAAxE,CAAKoiB,EAAoB9e,qBAC7CU,UAAW1C,EAAK1C,MAAMoF,kBAI9BggB,cAAgB,OAChBQ,iBAAmB,SAAAjc,GAAI,OAAIA,EACvBjH,EAAK0iB,cAAgB,CAACxd,KAAM+B,EAAK8Q,wBAAyB9Q,KAAMA,GAAQA,KAE5Ekc,cAAgB,SAAAhP,GAAa,IAElB+M,EAAYlhB,EAAKuB,MAAjB2f,SAEXlhB,EAAKC,SAALvB,OAAAuE,EAAA,EAAAvE,CAAA,GACOsB,EAAK1C,MADZ,CAEI6Y,gBAAgBzX,OAAAuE,EAAA,EAAAvE,CAAA,GACTsB,EAAK1C,MAAM6Y,gBADH,CAEXlU,WAAU,GAAAqK,OAAA5N,OAAAwE,EAAA,EAAAxE,CACHsB,EAAK1C,MAAM6Y,gBAAgBlU,YADxB,CAENkS,EAAUwK,8BAEdoC,aAAY,GAAAzU,OAAA5N,OAAAwE,EAAA,EAAAxE,CACLsB,EAAK1C,MAAM6Y,gBAAgB4K,cADtB,CAER5M,EAAUmL,gBAItB,kBACItf,EAAKuB,MAAM6C,SAASoM,GAAiB,CAC7BnO,IAAK6e,EAAS9e,OACdE,SAAS5D,OAAAwE,EAAA,EAAAxE,CAAKwiB,EAAS5e,UACvBL,WAAWvD,OAAAwE,EAAA,EAAAxE,CAAKsB,EAAK1C,MAAM6Y,gBAAgBlU,YAC3CD,oBAAmB,GAAAsK,OAAA5N,OAAAwE,EAAA,EAAAxE,CACZsB,EAAKuB,MAAM2f,SAASJ,oBAAoB9e,qBAD5B,CAEfmS,EAAUwK,4BAA4B7c,KAE1CY,UAAW1C,EAAK1C,MAAMoF,kBAKlC0gB,aAAe,SAAArjB,GAEX,GADAvC,QAAQC,IAAIuC,EAAK0iB,cAAczb,KAAKoc,YAC/BrjB,EAAK1C,MAAM2Y,YAAY,KAElBqN,EADwBtjB,EAAKuB,MAAM2f,SAASJ,oBAA3C9e,oBAC2Bc,OAAO,EACnCygB,EAAWvjB,EAAK1C,MAAMmf,SAAW6G,GAASvjB,EAAMuZ,OAAS,EACzDkK,EAASzjB,EAAMuZ,OAAS,GAAKtZ,EAAK1C,MAAMmf,SAAW,EAErDtF,EAAgB,CAChBpD,MAAO/T,EAAK0iB,cAAcxd,KAAK6O,MAC/BE,OAAQjU,EAAK0iB,cAAcxd,KAAK+O,OAChC4C,IAAK7W,EAAK0iB,cAAcxd,KAAK2R,IAC7BF,KAAM3W,EAAK0iB,cAAcxd,KAAKyR,MAG9B4M,EACAvjB,EAAKC,SAALvB,OAAAuE,EAAA,EAAAvE,CAAA,GACOsB,EAAK1C,MADZ,CAEImf,SAAUzc,EAAK1C,MAAMmf,SAAW,EAChCtF,cAAeA,IAChB,kBAAMsM,YAASC,SAAT,UAAApX,OAA4BtM,EAAK1C,MAAMmf,UAAWzc,EAAK1C,MAAMqkB,gBAC9D6B,IACoB,IAAxBxjB,EAAK1C,MAAMmf,SACXzc,EAAKC,SAALvB,OAAAuE,EAAA,EAAAvE,CAAA,GACOsB,EAAK1C,MADZ,CAEImf,SAAUzc,EAAK1C,MAAMmf,SAAW,EAChCtF,cAAeA,IAChB,kBAAMwM,iBAAOC,gBAEhB5jB,EAAKC,SAALvB,OAAAuE,EAAA,EAAAvE,CAAA,GACOsB,EAAK1C,MADZ,CAEImf,SAAUzc,EAAK1C,MAAMmf,SAAW,EAChCtF,cAAeA,IAChB,kBAAMsM,YAASC,SAAT,UAAApX,OAA4BtM,EAAK1C,MAAMmf,UAAWzc,EAAK1C,MAAMqkB,qBAmDtFjM,mBAAqB,WAAM,IAClBwL,EAAYlhB,EAAKuB,MAAjB2f,SACAJ,EAAuBI,EAAvBJ,oBACCW,EAAmBzhB,EAAK1C,MAAMmkB,iBAEhCtK,EAAgB,KAUpB,GATInX,EAAK0iB,eAA8C,OAA7B1iB,EAAK1C,MAAM6Z,gBACjCA,EAAgB,CACZpD,MAAO/T,EAAK0iB,cAAcxd,KAAK6O,MAC/BE,OAAQjU,EAAK0iB,cAAcxd,KAAK+O,OAChC4C,IAAK7W,EAAK0iB,cAAcxd,KAAK2R,IAC7BF,KAAM3W,EAAK0iB,cAAcxd,KAAKyR,OAIlCuK,EAAS/e,SAAW2e,EAAoBre,YAAa,CACrD,IAAM6b,EAAW4C,EAAS5e,SAASuO,KAAK,SAAAxN,GAAI,OAAIA,EAAKvB,KAAO9B,EAAK1C,MAAMoF,YACvE4b,EACAte,EAAKuB,MAAM6C,SAASvC,EAAyB,CACzCC,GAAIwc,EAAQxc,GACZC,YAAauc,EAAQ3c,KACrBK,oBAAoBtD,OAAAwE,EAAA,EAAAxE,CAAK4f,EAAQtc,qBACjCC,WAAWvD,OAAAwE,EAAA,EAAAxE,CAAK4f,EAAQrc,eACtBjC,EAAKC,SAALvB,OAAAuE,EAAA,EAAAvE,CAAA,GAAkBsB,EAAK1C,MAAvB,CAA8BokB,cAAc,EAAMvK,cAAeA,KAEvE2J,EAAoBre,aAAegf,IACF,OAA7BzhB,EAAK1C,MAAM6Z,eAA4C,OAAlBA,EACzCnX,EAAKC,SAALvB,OAAAuE,EAAA,EAAAvE,CAAA,GACOsB,EAAK1C,MADZ,CAEI6Z,cAAeA,IAChB,kBAAMnX,EAAKsiB,oBAAL5jB,OAAAwE,EAAA,EAAAxE,CAA6BoiB,EAAoB7e,eACrDjC,EAAKsiB,oBAAL5jB,OAAAwE,EAAA,EAAAxE,CAA6BoiB,EAAoB7e,iBAI9DhB,kBAAoB,WAAM,IACjBigB,EAAYlhB,EAAKuB,MAAjB2f,SACAJ,EAAuBI,EAAvBJ,oBAEL,GAAII,EAAS/e,SAAW2e,EAAoBre,YAAa,CAErD,IAAM6b,EAAW4C,EAAS5e,SAASuO,KAAK,SAAAxN,GAAI,OAAIA,EAAKvB,KAAO9B,EAAK1C,MAAMoF,YACvE1C,EAAKuB,MAAM6C,SAASvC,EAAyB,CACzCC,GAAIwc,EAAQxc,GACZE,oBAAoBtD,OAAAwE,EAAA,EAAAxE,CAAK4f,EAAQtc,qBACjCD,YAAauc,EAAQ3c,KACrBM,WAAWvD,OAAAwE,EAAA,EAAAxE,CAAK4f,EAAQrc,eAIhC/B,EAAagB,GAAG,uBAAwBlB,EAAK6iB,cAC7C3iB,EAAagB,GAAG,kBAAmBlB,EAAKmjB,eACxCjjB,EAAagB,GAAG,4BAA6BlB,EAAK+iB,sBAClD7iB,EAAagB,GAAG,kBAAmBlB,EAAKsT,YACxCpT,EAAagB,GAAG,qBAAsBlB,EAAKgiB,eAC3C9hB,EAAagB,GAAG,uBAAwBlB,EAAKqiB,gBAC7CniB,EAAagB,GAAG,iBAAkBlB,EAAKmiB,mBACvCjiB,EAAagB,GAAG,gBAAiBlB,EAAKoiB,iBAG1CjhB,qBAAuB,WAEFnB,EAAKuB,MAAjB2f,SACQ/e,QAASnC,EAAKuB,MAAM6C,SAAS1C,GAAkB,IAE5DxB,EAAakB,IAAI,uBAAwBpB,EAAK6iB,cAC9C3iB,EAAakB,IAAI,kBAAmBpB,EAAKmjB,eACzCjjB,EAAakB,IAAI,4BAA6BpB,EAAK+iB,sBACnD7iB,EAAakB,IAAI,qBAAsBpB,EAAKgiB,eAC5C9hB,EAAakB,IAAI,kBAAmBpB,EAAKsT,YACzCpT,EAAakB,IAAI,uBAAwBpB,EAAKqiB,gBAC9CniB,EAAakB,IAAI,iBAAkBpB,EAAKmiB,mBACxCjiB,EAAakB,IAAI,gBAAiBpB,EAAKoiB,uFAnHvC,GAAIxjB,KAAKtB,MAAMokB,aAAc,OAAOthB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAUC,GAAK,aAD/C,IAGGqV,EAAoBjX,KAAKtB,MAAMsV,gBAA/BiD,iBACAqL,EAAYtiB,KAAK2C,MAAjB2f,SACAJ,EAAuBI,EAAvBJ,oBACD+C,EAAU/C,EAAoB9e,oBAEpC,OAAIkf,EAAS/e,QAAU2e,EAAoBre,YAGnCrC,EAAAC,EAAAC,cAAC6N,EAAA,SAAD,KACI/N,EAAAC,EAAAC,cAAC2P,EAAD,CAAQzC,IAAM,SAAS9F,MAAQ,gBAC/BtH,EAAAC,EAAAC,cAAA,OACIkH,IAAO5I,KAAKskB,iBACZnJ,QAAWnb,KAAKwkB,aAChBzJ,YAAe/a,KAAKklB,eACpBpjB,UAAY,QACZ8M,IAAM,SAEJ5O,KAAKtB,MAAMqjB,WACbvgB,EAAAC,EAAAC,cAACyjB,GAAD,CACIvW,IAAM,cACNiG,kBAAqB7U,KAAKtB,MAAMmW,kBAChC8M,gBAAmB3hB,KAAKtB,MAAM6Y,gBAAgBlU,WAAWa,OACzDse,WAAcxiB,KAAKtB,MAAM8jB,WACzBjK,cAAiBvY,KAAKtB,MAAM6Z,gBAG5B/W,EAAAC,EAAAC,cAACggB,GAAD,CACI9S,IAAM,YACNwW,aAAiE,EAAjDplB,KAAKtB,MAAM6Y,gBAAgB4K,aAAaje,OACxDqK,KAAO,UACPzM,UAAY,SAEnBmV,GAAoBzV,EAAAC,EAAAC,cAAC2jB,GAADvlB,OAAA4H,OAAA,CAAiBkH,IAAM,SAAY5O,KAAKtB,QAC5DumB,EAAQ/gB,QAAU1C,EAAAC,EAAAC,cAAC4jB,GAADxlB,OAAA4H,OAAA,CAASkH,IAAM,WAAc5O,KAAKtB,MAAlC,CAAyC4jB,SAAYA,OAI5EtiB,KAAK2C,MAAM1C,SAASkR,iBACpB3P,EAAAC,EAAAC,cAACiG,EAAD,CAASiH,IAAM,SAAS9G,KAAO,mBAAmB/E,KAAO,UADZvB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAUC,GAAK,aArU5DI,IAAMa,gBAiaX+G,eAXS,SAAClL,GACrB,MAAO,CACH4jB,SAAU,CACN/e,OAAQ7E,EAAM6F,QAAQhB,OACtBC,OAAQ9E,EAAM6F,QAAQf,OACtBE,SAAS5D,OAAAwE,EAAA,EAAAxE,CAAKpB,EAAM6F,QAAQb,UAC7Bwe,oBAAoBpiB,OAAAuE,EAAA,EAAAvE,CAAA,GAAKpB,EAAMsF,YAK3B4F,CAAyBrC,EAAakb,KCva/C8C,8MAQF7mB,MAAQ,CACJuB,SAAUmB,EAAKuB,MAAM1C,SACrBulB,mBAAmB,sFAGJ,IAAAla,EAAAtL,KAEfA,KAAK2C,MAAM1C,SAASC,KAAKulB,mBAAmB,SAACtf,GtCjBtB,IAAC1C,EsCmBf6H,EAAK5M,MAAM8mB,oBACRrf,GAAMmF,EAAK3I,MAAM6C,UtCpBL/B,EsCoBqC0C,EAAK1C,ItCpB3C,eAAAiiB,EAAA5lB,OAAAsF,EAAA,EAAAtF,CAAAuF,EAAA5D,EAAA6D,KAAS,SAAAqgB,EAAOngB,EAASC,EAAhBmgB,GAAA,IAAA3lB,EAAA,OAAAoF,EAAA5D,EAAAkE,KAAA,SAAAkgB,GAAA,cAAAA,EAAAhgB,KAAAggB,EAAA/f,MAAA,cAA2B7F,EAA3B2lB,EAA2B3lB,SAA3B4lB,EAAA/f,KAAA,EAC1B7F,EAASE,GAAG8F,WAAW,SAASC,IAAIzC,GAAK2C,MAC9ChI,KAAK,SAAAiI,GACF,IAAIF,EAAOE,EAAQC,OACnBd,EAASlC,EAAe,CAACG,IAAKA,EAAKC,SAAS5D,OAAAwE,EAAA,EAAAxE,CAAKqG,EAAKzC,eAEzD1E,MAAM,SAACC,GACJL,QAAQK,MAAMA,EAAMsH,SACpBf,EAAS7B,EAAY1E,EAAMsH,YARC,wBAAAsf,EAAArf,SAAAmf,MAAT,gBAAAG,EAAAC,EAAAC,GAAA,OAAAN,EAAA9e,MAAA5G,KAAAiE,YAAA,KsCqBfqH,EAAKjK,SAALvB,OAAAuE,EAAA,EAAAvE,CAAA,GAAkBwL,EAAK5M,MAAvB,CAA8B8mB,mBAAmB,yCAKrD,IAAAS,EAAAjmB,KACJ,OAAIA,KAAKtB,MAAM8mB,kBAEXhkB,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACIH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACImG,KAAQ,IAAKoe,OAAK,EAClBC,OAAU,SAACxjB,GAAD,OAAWnB,EAAAC,EAAAC,cAAC0kB,EAAUzjB,MAEpCnB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOmG,KAAO,YAAYoe,OAAK,EAACxF,UAAazP,KAC7CzP,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACImG,KAAQ,iBACRqe,OAAU,SAACxjB,GAAD,OAAWnB,EAAAC,EAAAC,cAAC2kB,GAADvmB,OAAA4H,OAAA,GAAW/E,EAAX,CAAkB3E,OAAUioB,EAAKtjB,MAAM3E,aAEhEwD,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOmG,KAAQ,wBAAyB4Y,UAAa+B,KACrDjhB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOmG,KAAQ,6BAA8B4Y,UAAalP,KAC1DhQ,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOmG,KAAQ,IAAK4Y,UAAa7X,IACjCrH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOmG,KAAQ,aAAc4Y,UAAa1f,MAKxCQ,EAAAC,EAAAC,cAACiG,EAAD,CAAQG,KAAS,mBAAoB/E,KAAO,uBA9ChDf,IAAMa,eAkDT+G,iBAAUrC,EAAage,YCpDtCtlB,EAASqmB,YAAY,WACrB,IAAMtoB,GAAS4B,EAAQ,KAEvB2mB,IAASJ,OACD3kB,EAAAC,EAAAC,cAAC8kB,EAAA,EAAD,KACIhlB,EAAAC,EAAAC,cAAC+kB,EAAD,KACIjlB,EAAAC,EAAAC,cAAC8F,EAAgBkf,SAAjB,CAA0Ble,MAASvI,GAC/BuB,EAAAC,EAAAC,cAACilB,EAAA,EAAD,CAAU3hB,MAASA,GACfxD,EAAAC,EAAAC,cAACklB,GAAD,CAAK5oB,OAAUA,SAK/B6oB,SAASC,eAAe,SlDRzB,SAAkB9oB,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAI8oB,IAAI3nB,eAAwB1B,OAAOC,SAASqpB,MACpDC,SAAWvpB,OAAOC,SAASspB,OAIvC,OAGFvpB,OAAOwpB,iBAAiB,OAAQ,WAC9B,IAAMnpB,EAAK,GAAA2P,OAAMtO,eAAN,sBAEP5B,GA6DV,SAAiCO,EAAOC,GAEtCmpB,MAAMppB,GACHK,KAAK,SAAA4H,GAEJ,IAAMohB,EAAcphB,EAASqhB,QAAQjhB,IAAI,gBAEnB,MAApBJ,EAASshB,QACO,MAAfF,IAA8D,IAAvCA,EAAYG,QAAQ,cAG5CtpB,UAAUC,cAAcspB,MAAMppB,KAAK,SAAAC,GACjCA,EAAaopB,aAAarpB,KAAK,WAC7BV,OAAOC,SAAS+pB,aAKpB5pB,EAAgBC,EAAOC,KAG1BgB,MAAM,WACLJ,QAAQC,IACN,mEAlFA8oB,CAAwB5pB,EAAOC,GAI/BC,UAAUC,cAAcspB,MAAMppB,KAAK,WACjCQ,QAAQC,IAAI,oEAIdf,EAAgBC,EAAOC,MkDd/BE","file":"static/js/main.1e6350db.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log('This web app is being served cache-first by a service worker.');\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","// setings in root folder / firebase.env\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n    databaseURL: process.env.REACT_APP_DATABASE_URL,\r\n    projectId: process.env.REACT_APP_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n    appId: process.env.REACT_APP_APPID\r\n};\r\n\r\nexport default firebaseConfig;","import * as firebase from 'firebase/app';\r\nimport firebaseConfig from './firebaseConfig';\r\n\r\nconst auth = require('firebase/auth');\r\nconst firestore = require('firebase/firestore');\r\n\r\nclass Firebase {\r\n\r\n    constructor(firebaseConfig){\r\n        firebase.initializeApp(firebaseConfig);\r\n        this.auth = firebase.auth();\r\n        this.db = firebase.firestore();\r\n    }\r\n\r\n    saveSession(rules){\r\n        return this.auth.setPersistence(firebase.auth.Auth.Persistence[rules]);\r\n    }\r\n\r\n    login(email, password){\r\n        try {\r\n            return this.auth.signInWithEmailAndPassword(email, password);\r\n        } catch (error) {\r\n            console.error(error);\r\n            return null;\r\n        }\r\n    }\r\n\r\n    registration(email, password){\r\n        return this.auth.createUserWithEmailAndPassword(email, password)\r\n    }\r\n\r\n    signOut(){\r\n        return this.auth.signOut()\r\n    }\r\n\r\n    getCurrentUser() {\r\n        return this.auth.currentUser\r\n    }\r\n}\r\n\r\nlet firebaseInterface = new Firebase(firebaseConfig);\r\n\r\nexport default firebaseInterface;\r\n\r\nexport { auth, firestore };\r\n\r\n","import {EventEmitter} from 'events';\r\n\r\nconst stream = new EventEmitter();\r\nexport default stream;","import React from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\nimport eventEmitter from '../../EventEmitter';\r\n\r\nimport './errorPage.scss';\r\n\r\n\r\nclass ErrorPage extends React.Component {\r\n\r\n    state = {\r\n        redirect: false,\r\n    }\r\n\r\n    update = event => {\r\n       this.setState({redirect: true},\r\n        () => eventEmitter.emit('EventErrorCatchUpdate'));\r\n    }\r\n\r\n    render(){\r\n        if (this.state.redirect) return <Redirect to = '/' />\r\n        return (\r\n        <div class = 'container'>\r\n            <div class = 'flex-column'>\r\n                <h1>Application crash</h1>\r\n                <button className = 'button_updateApp' onClick = {this.update}>Update</button>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ErrorPage;","\r\nimport React from 'react';\r\nimport eventEmitter from '../../EventEmitter';\r\nimport ErrorPage from './ErrorPage';\r\n\r\nclass ErrorBoundary extends React.PureComponent {\r\n\r\n      state = { \r\n        hasError: false,\r\n      };\r\n\r\n    static getDerivedStateFromError(error) {\r\n        console.log(error);\r\n      // Обновить состояние с тем, чтобы следующий рендер показал запасной UI.\r\n      return { hasError: true};\r\n    }\r\n\r\n    updateApplication = event => {\r\n      this.setState({hasError: false});\r\n    };\r\n  \r\n    componentDidCatch(error, info) {\r\n      // Можно также сохранить информацию об ошибке в соответствующую службу журнала ошибок\r\n     console.error(error + \",\" + info);\r\n    }\r\n  \r\n    render() {\r\n      if (this.state.hasError) return <ErrorPage />\r\n      return this.props.children;\r\n    }\r\n\r\n    componentDidMount = () => {\r\n      eventEmitter.on('EventErrorCatchUpdate',this.updateApplication);\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n      eventEmitter.off('EventErrorCatchUpdate',this.updateApplication);\r\n    }\r\n  }\r\n\r\n  export default ErrorBoundary;","const CREATE_PROJECT = 'CREATE_PROJECT';\r\nconst LOAD_UPDATE_PROJECT = \"LOAD_UPDATE_PROJECT\";\r\nconst LOAD_CURRENT = 'LOAD_CURRENT';\r\nconst LOG_OUT_CABINET = 'LOG_OUT_CABINET';\r\nconst LOAD_USER_CABINET = 'LOAD_USER_CABINET';\r\nconst ERROR_CABINET = 'ERROR_CABINET';\r\nconst EXIT_PROJECT = 'EXIT_PROJECT';\r\n\r\nconst createProjectAction = (state) => {\r\n    return {\r\n        type: CREATE_PROJECT,\r\n        projects: state,\r\n    }\r\n}\r\n\r\nconst exitProjectAction = (state) => {\r\n    return {\r\n        type: EXIT_PROJECT,\r\n        exit: state\r\n    }\r\n}\r\n\r\nconst loadCurrentProjectAction = (state) => {\r\n    return {\r\n        type: LOAD_CURRENT,\r\n        id: state.id,\r\n        typeProject: state.typeProject,\r\n        sectionTitleProject: state.sectionTitleProject,\r\n        components: state.components\r\n    }\r\n}\r\n\r\nconst loadUpdateCurrentProject = (state) => {\r\n    return {\r\n        type: LOAD_UPDATE_PROJECT,\r\n        idProject: state.idProject,\r\n        sectionTitleProject: state.sectionTitleProject,\r\n        components: state.components\r\n    }\r\n}\r\n\r\nconst loadUserAction = (state) => {\r\n    return {\r\n        type: LOAD_USER_CABINET,\r\n        active: true,\r\n        idUser: state.uid,\r\n        error: '',\r\n        projects: state.projects\r\n    }\r\n}\r\n\r\nconst logOutAction = (state) => {\r\n\r\n    return {\r\n        type: LOG_OUT_CABINET,\r\n        active: false,\r\n        idUser: null,\r\n        error: '',\r\n        projects: []\r\n    }\r\n}\r\n\r\nconst errorAction = (state) => {\r\n    return {\r\n        type: ERROR_CABINET,\r\n        error: state\r\n    }\r\n}\r\n\r\nexport {\r\n    CREATE_PROJECT, createProjectAction, /* cabinet */\r\n    LOAD_USER_CABINET, loadUserAction, /* cabinet */\r\n    LOG_OUT_CABINET, logOutAction, /* cabinet */\r\n    LOAD_CURRENT, loadCurrentProjectAction, /* builder */\r\n    LOAD_UPDATE_PROJECT, loadUpdateCurrentProject,\r\n    EXIT_PROJECT, exitProjectAction,\r\n    ERROR_CABINET, errorAction, /* both */\r\n}","import {LOAD_CURRENT,LOAD_UPDATE_PROJECT, EXIT_PROJECT} from './actions';\r\n\r\nconst initialState = {\r\n    loadProject: false,\r\n    idProject: null,\r\n    typeProject: null,\r\n    components: [],\r\n    sectionTitleProject: [],\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n    switch (action.type){\r\n\r\n        case LOAD_CURRENT: {\r\n            return {\r\n                ...state,\r\n                loadProject: true,\r\n                idProject: action.id,\r\n                typeProject: action.typeProject,\r\n                components: [...action.components],\r\n                sectionTitleProject: [...action.sectionTitleProject]\r\n            }\r\n        }\r\n\r\n        case LOAD_UPDATE_PROJECT: {\r\n            return {\r\n                ...state,\r\n                components: [...action.components],\r\n                sectionTitleProject: [...action.sectionTitleProject]\r\n            }\r\n        }\r\n\r\n        case EXIT_PROJECT: {\r\n            if (action.exit)\r\n            return {\r\n                ...state,\r\n                loadProject: false,\r\n                idProject: null,\r\n                typeProject: null,\r\n                components: []\r\n            }\r\n            else return state;\r\n        }\r\n        default: return state;\r\n    }\r\n};","import {LOAD_USER_CABINET, LOG_OUT_CABINET, ERROR_CABINET, CREATE_PROJECT, LOAD_UPDATE_PROJECT} from './actions';\r\n\r\nconst initialState = {\r\n    active: false,\r\n    idUser: null,\r\n    projects: [],\r\n    error: null,\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case LOAD_USER_CABINET: {\r\n\r\n            return {\r\n                ...state,\r\n                active: action.active,\r\n                idUser: action.idUser,\r\n                projects: [...action.projects]\r\n            }\r\n        }\r\n\r\n        case CREATE_PROJECT: {\r\n            return {\r\n                ...state,\r\n                projects: [...action.projects]\r\n            }\r\n        }\r\n\r\n        case LOAD_UPDATE_PROJECT: {\r\n            return {\r\n                ...state,\r\n                projects: state.projects.map(item => {\r\n                    if (item.id === action.idProject)\r\n                        item.components = [...action.components]\r\n                return item;\r\n                })\r\n            }\r\n        }\r\n\r\n        case LOG_OUT_CABINET: {\r\n            return {\r\n                ...state,\r\n                active: false,\r\n                idUser: null,\r\n                projects: []\r\n            }\r\n        }\r\n\r\n        case ERROR_CABINET: {\r\n            return {\r\n                ...state,\r\n                error: action.error\r\n            }\r\n        }\r\n        default: return state;\r\n    }\r\n}\r\n\r\n","import {combineReducers} from 'redux';\r\nimport reducerBuilder from './reducerBuilder';\r\nimport reducerCabinet from './reducerCabinet';\r\n\r\nexport default combineReducers({\r\n    builder: reducerBuilder,\r\n    cabinet: reducerCabinet,\r\n});","import {createStore, applyMiddleware, compose} from 'redux';\r\nimport firebase from  '../Firebase/Firebase';\r\nimport thunk from 'redux-thunk';\r\nimport combineReducers from './reducers';\r\n\r\nconst composeEnhancers =\r\n  typeof window === 'object' &&\r\n  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?\r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\r\n    }) : compose;\r\n\r\nconst middleware = composeEnhancers(\r\n  applyMiddleware(thunk.withExtraArgument({firebase})));\r\n\r\nconst store = createStore(combineReducers, middleware);\r\nexport default store;","import {loadUserAction, errorAction, logOutAction} from '../actions';\r\n\r\nconst middlewareLogin = (email,password) => async (dispatch,getState, {firebase}) => {\r\n        await firebase.login(email,password)\r\n        .then(response =>{\r\n            firebase.db.collection(\"users\").doc(response.user.uid).get()\r\n            .then(docUser => {\r\n                let user = docUser.data();\r\n                dispatch(loadUserAction({uid: docUser.id, projects: [...user.projects]}))\r\n            })\r\n        })\r\n        .catch((error) => {\r\n            console.error(error.message);\r\n            dispatch(errorAction(error.message));\r\n        });\r\n    }\r\n\r\nconst middlewareLoadUserData = (uid) => async (dispatch,getState, {firebase}) => {\r\n        await firebase.db.collection(\"users\").doc(uid).get()\r\n        .then(docUser => {\r\n            let user = docUser.data();\r\n            dispatch(loadUserAction({uid: uid, projects: [...user.projects]}))\r\n        })\r\n        .catch((error) => {\r\n            console.error(error.message);\r\n            dispatch(errorAction(error.message));\r\n        });\r\n    }\r\n\r\nconst middlewareLogOutUser = (uid) => async (dispatch,getState, {firebase}) => {\r\n    await firebase.signOut()\r\n    .then (response => {\r\n        dispatch(logOutAction());\r\n    })\r\n    .catch((error) => {\r\n        console.error(error.message);\r\n        dispatch(errorAction(error.message));\r\n    });\r\n}\r\nexport {\r\n    middlewareLogin,middlewareLoadUserData, middlewareLogOutUser\r\n}","import React from 'react';\r\nimport firebase from './Firebase';\r\nconst firebaseContext = React.createContext(firebase);\r\nexport default firebaseContext;","import React from 'react';\r\nimport firebaseContext from '../Firebase/firebaseContext';\r\n\r\n\r\nconst withFirebase = Component => props => {\r\n        return (\r\n            <firebaseContext.Consumer>\r\n                {firebase => <Component {...props} firebase = {firebase} /> }\r\n            </firebaseContext.Consumer>\r\n        )\r\n};\r\n\r\n\r\nexport default withFirebase;","import React,{useState} from 'react';\r\n\r\nexport default function(props) {\r\n    const [path] = useState(props.path ? props.path : '/img/loading.gif');\r\n    return (\r\n            <div className = 'loaderBox'>\r\n                <img className = 'loader' src = {path} alt = 'loader'></img> \r\n                <p>Loading {props.type}</p>\r\n            </div>\r\n    )\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport eventEmitter from '../../EventEmitter';\r\nimport './registration.scss';\r\n\r\nimport withFirebase from '../../components/firebaseHOC';\r\n\r\n\r\nclass Registration extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        firebase: PropTypes.object.isRequired, /** @firebase class for use firebase functions */\r\n    }\r\n\r\n    state = {\r\n        firebase: this.props.firebase,\r\n        error: null,\r\n    }\r\n\r\n    emailRef = null;\r\n    passwordRef = null;\r\n\r\n    setRefEmail = (node) => this.emailRef = node;\r\n    setRefPassword = (node) => this.passwordRef = node;\r\n\r\n    createUser = event => {\r\n\r\n        const email = this.emailRef ? this.emailRef.value : null;\r\n        const password = this.passwordRef ? this.passwordRef.value : null;\r\n        const { firebase } = this.props;\r\n\r\n        if (password && email)\r\n        firebase.registration(email, password)\r\n        .then(response => {\r\n            if (!response) throw new Error('Ivaid registration')\r\n            firebase.db.collection(\"users\").doc(response.user.uid).set({\r\n                'projects': [],\r\n                'email': email,\r\n            }).then(() => eventEmitter.emit('EventRegistrationCorrect', response))\r\n        })\r\n        .catch((error) => {\r\n        console.error(error.message);\r\n        this.setState({error: error.message});\r\n        });\r\n        else  return this.setState({error: 'invalid user data'});\r\n    };\r\n\r\n    render(){\r\n        let  { error } = this.state;\r\n        return (\r\n            <div className = 'RegistrationBox'>\r\n                <div  className = 'RegistrationForm'>\r\n                    <h3>Registration</h3>\r\n                    <form autoComplete = 'off' className = 'RegForm'>\r\n                        { error ?\r\n                            <p className = 'error'>{error}</p>\r\n                            : null\r\n                        }\r\n                        <span>E-mail</span>\r\n                        <input ref = {this.setRefEmail} type = 'text' />\r\n                        <span>Password</span>\r\n                        <input className = 'password' autoComplete = \"off\" ref = {this.setRefPassword} type = 'password' />\r\n                        <input onClick = {this.createUser}\r\n                                className = 'loginButton'\r\n                                type = 'button'\r\n                                value = 'registration'\r\n                        />\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\nexport default withFirebase(Registration);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport eventEmitter from '../../EventEmitter';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nimport {middlewareLogin} from '../../redux/middleware/loadUserMiddleware';\r\n\r\nimport Loader from '../../components/loading/Loader';\r\nimport Registration from '../../components/Registration/Registration';\r\n\r\nimport {connect} from 'react-redux';\r\n\r\nimport './index.scss';\r\n\r\nclass Index extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        active: PropTypes.bool, /** @active - status firebase auth */\r\n        dispatch: PropTypes.func.isRequired, /** @dispatch - redux */\r\n        history: PropTypes.object.isRequired, /** @Router HTML5 history */\r\n        location: PropTypes.object.isRequired, /** @Router */\r\n        match: PropTypes.object.isRequired, /** @Router */\r\n        wrongEnter: PropTypes.string, /** @Error about invalid enter */\r\n        config: PropTypes.object, /** @config - app settings */\r\n    }\r\n\r\n    state = {\r\n        title:  \"Constructor\",\r\n        registrationActive: false,\r\n        regStatus: false,\r\n        wrongEnter: false,\r\n        error: ''\r\n    }\r\n\r\n    emailImput = null;\r\n    passwordImput = null;\r\n\r\n    statusRegistration = event => {\r\n        event.additionalUserInfo.isNewUser ?\r\n            this.setState({\r\n                ...this.state,\r\n                regStatus: true,\r\n                registrationActive: false,\r\n                error: 'Account create!'\r\n            })\r\n        : console.error('error registration');\r\n    }\r\n\r\n    showBox = event => {\r\n        this.setState ({\r\n            ...this.state,\r\n        registrationActive: this.state.registrationActive ? false : true\r\n        });\r\n        event.stopPropagation();\r\n    }\r\n\r\n    authTo = event => {\r\n            if (this.emailImput && this.passwordImput)\r\n            this.props.dispatch(middlewareLogin(this.emailImput.value, this.passwordImput.value));\r\n            event.stopPropagation();\r\n    }\r\n\r\n    emailRef = node => this.emailImput = node;\r\n    passwordRef = node => this.passwordImput = node;\r\n\r\n    render(){\r\n\r\n        if (this.props.active) return <Redirect to = { '/Cabinet'} />\r\n        else if (!this.props.active) {\r\n            return (\r\n                <div className = 'LoginPage flex-column'>\r\n                        <h1>{this.state.title}</h1>\r\n                        <div className = 'LoginBox'>\r\n                            <div className = 'LoginForm'>\r\n                                <h3>Connect form</h3>\r\n                                {\r\n                                    this.props.wrongEnter || this.state.regStatus ?\r\n                                    <p className = 'error'>{this.props.wrongEnter}</p>\r\n                                    : null\r\n                                }\r\n                                <p>E-mail</p>\r\n                                <input ref = {this.emailRef} type = 'text' />\r\n                                <p>Password</p>\r\n                                <input ref = {this.passwordRef} type = 'password' />\r\n                                <input \r\n                                    onClick = {this.authTo} \r\n                                    className = 'loginButton enterInput'\r\n                                    type = 'button'\r\n                                    value = 'enter' />\r\n                                <input\r\n                                    onClick = {this.showBox}\r\n                                    className = {this.state.registrationActive ?\r\n                                        `loginButton registration selected` : 'loginButton registration'}\r\n                                    type = 'button'\r\n                                    value = 'registration'\r\n                                    />\r\n                            </div>\r\n                        </div>\r\n                        {\r\n                            this.state.registrationActive ?\r\n                            <Registration />\r\n                            : null\r\n                        }\r\n                </div>\r\n            )\r\n        } else  return <Loader path = '/img/loading.gif' type = 'session' />\r\n    }\r\n\r\n    componentDidMount = (e) => {\r\n        eventEmitter.on('EventRegistrationCorrect', this.statusRegistration);\r\n    }\r\n    componentWillUnmount = (e) => {\r\n        eventEmitter.off('EventRegistrationCorrect', this.statusRegistration);\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        active: state.cabinet.active, \r\n        wrongEnter: state.cabinet.error\r\n    }\r\n  }\r\n\r\nexport default connect(mapStateToProps)(Index);","\r\nimport {errorAction, loadUserAction} from '../actions';\r\n\r\nconst middlewareDelete = item => async (dispatch,getState, {firebase}) => {\r\n    await firebase.db.collection('users').doc(item.uid).get()\r\n    .then(user => user.data())\r\n    .then(data => {\r\n        return {id: data.id, projects: data.projects.filter(itemdb => itemdb.id !== item.id)};\r\n    })\r\n    .then(data => {\r\n        firebase.db.collection(\"users\").doc(item.uid).update({\r\n            \"projects\": data.projects\r\n        })\r\n        .then(response => {\r\n            dispatch(loadUserAction({uid: data.id, projects: data.projects}));\r\n        });\r\n    })\r\n    .catch((error) => {\r\n        console.error(error.message);\r\n        dispatch(errorAction(error.message));\r\n    });\r\n}\r\n\r\nexport default middlewareDelete;\r\n","import React, {useState} from 'react';\r\n\r\n\r\nfunction Icon(props){\r\n    const [path] = useState(props.path);\r\n    const [className] = useState(props.className ? props.className : null);\r\n    const [draggable] = useState(props.draggable ? true : false);\r\n\r\n    return (\r\n    <img\r\n        draggable = {draggable}\r\n        onClick = {props.onClick ? props.onClick : null}\r\n        className = {className}\r\n        title = {props.title ? props.title : null}\r\n        src = {process.env.PUBLIC_URL + path } alt = 'icon'>\r\n    </img>\r\n    )\r\n}\r\n\r\nexport default Icon;","import React from 'react';\r\n\r\nimport './Confirm.scss';\r\n\r\nconst Confirm = props => {\r\n\r\n    return (\r\n        <div className = 'wrapperConfirm'>\r\n            <div className = 'confirmSave'>\r\n                <span>Detected new changes</span>\r\n                <input\r\n                    className = 'saveCofirm'\r\n                    onClick = {props.cbSaveChanges}\r\n                    type = 'button'\r\n                    value = 'Save changes'\r\n                />\r\n                <input\r\n                    className = 'cancelCofirm'\r\n                    onClick = {props.cbCancelSave}\r\n                    type = 'button'\r\n                    value = 'Cancel'\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Confirm;","import React from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport './header.scss';\r\n\r\nimport {middlewareLogOutUser} from '../../redux/middleware/loadUserMiddleware';\r\nimport {connect} from 'react-redux';\r\nimport {Redirect, withRouter} from 'react-router-dom';\r\n\r\nimport eventEmitter from '../../EventEmitter.js';\r\nimport Icon from '../Icon/icon';\r\nimport Confirm from '../confirmBox/Confirm';\r\n\r\nconst iconPath = require('../../config.json').CabinetIcon;\r\n\r\nclass Header extends React.Component {\r\n\r\n    static propTypes = {\r\n        title: PropTypes.string.isRequired, /** @Config title app */\r\n        dispatch: PropTypes.func.isRequired, /** @dispatch redux */\r\n        history: PropTypes.object.isRequired, /** @Router HTML5 history */\r\n        location: PropTypes.object.isRequired, /** @Router */\r\n        match: PropTypes.object.isRequired, /** @Router */\r\n    };\r\n\r\n    state = {\r\n        title: this.props.title,\r\n        isChange: false,\r\n        redirectConfirm: false,\r\n        redirectAbout: {\r\n            path:  '/Cabinet/About',\r\n            redirectA: false,\r\n        },\r\n        redirectCabinet: {\r\n            path:  '/Cabinet',\r\n            redirectC: false,\r\n        }\r\n    };\r\n\r\n    confirm = event => {\r\n        this.setState({isChange: event});\r\n    }\r\n\r\n    confirmSaveDetectChanges = event => {\r\n        eventEmitter.emit('EventRedirectSaveChanges');\r\n        this.setState({\r\n            redirectConfirm: false,\r\n            redirectCabinet: {\r\n                ...this.state.redirectCabinet,\r\n                redirectC: true\r\n            }\r\n        });\r\n    };\r\n\r\n    logOut = event => {\r\n        if (this.props.idUser)\r\n            this.props.dispatch(middlewareLogOutUser(this.props.idUser));\r\n        event.stopPropagation();\r\n    };\r\n\r\n    redirectAbout = event => {\r\n        const isPath = this.props.location.pathname !== this.state.redirectAbout.path;\r\n        if (isPath && !this.state.isChange)\r\n           this.setState({\r\n                redirectConfirm: false,\r\n                redirectAbout: {\r\n                   ...this.state.redirectAbout,\r\n                   redirectA: true\r\n               }\r\n           });\r\n           else this.setState({redirectConfirm: true});\r\n        event.stopPropagation()\r\n    };\r\n\r\n    redirectCabinet = event => {\r\n        if (event !== 'cancelMode'){\r\n            const isPath = this.props.location.pathname !== this.state.redirectCabinet.path;\r\n            if (isPath && !this.state.isChange)\r\n            this.setState({\r\n                redirectConfirm: false,\r\n                redirectCabinet: {\r\n                    ...this.state.redirectCabinet,\r\n                    redirectC: true\r\n                }\r\n            });\r\n            else this.setState({redirectConfirm: true});\r\n            event.stopPropagation();\r\n\r\n        } else this.setState({\r\n            redirectConfirm: false,\r\n            redirectCabinet: {\r\n                ...this.state.redirectCabinet,\r\n                redirectC: true\r\n            }\r\n        });\r\n    }\r\n\r\n    add = event => {\r\n        eventEmitter.emit('EventChangeWorkMode',{action: 'newProject'});\r\n        event.stopPropagation()\r\n    };\r\n\r\n    render(){\r\n        let {redirectA} = this.state.redirectAbout;\r\n        let {redirectC} = this.state.redirectCabinet;\r\n\r\n        if (redirectA) return <Redirect to = {this.state.redirectAbout.path} />\r\n        if(redirectC) return <Redirect to = {this.state.redirectCabinet.path} />\r\n\r\n        return (\r\n            <React.Fragment>\r\n            {this.state.isChange && this.state.redirectConfirm ? \r\n                <Confirm \r\n                    cbSaveChanges = {this.confirmSaveDetectChanges}\r\n                    cbCancelSave = {() => this.redirectCabinet('cancelMode')}\r\n                /> : null}\r\n                <header>\r\n                    <div className = 'container'>\r\n                        <div className = 'flex-row'>\r\n                                <div onClick = {this.redirectCabinet} className = 'header__CabinetInfo'>\r\n                                    <Icon className ='mainIcon' path = {iconPath} />\r\n                                    <h3 className = 'tilteApp'>{this.state.title}</h3>\r\n                                </div>\r\n                                {this.props.location.pathname === '/Cabinet' ?\r\n                                    <div onClick = {this.add} className = 'header__newProject__AddButton'>\r\n                                        <Icon className = 'Cabinet' path = '/img/plus.png' />\r\n                                    </div>\r\n                                    : null\r\n                                }\r\n                                    <div  className = 'Navigator'>\r\n                                        <Icon className = 'about' onClick = {this.redirectAbout}\r\n                                            title = 'about'\r\n                                            path = '/img/about_logo.svg'\r\n                                        />\r\n                                        <Icon className = 'logoutButton'\r\n                                            onClick = {this.logOut}\r\n                                            title = 'logOut'\r\n                                            path = '/img/logOut.svg'\r\n                                        />\r\n                                    </div>\r\n                        </div>\r\n                </div>\r\n                </header>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n    componentWillMount = () => {\r\n        eventEmitter.on('EventRedirectConfirm', this.confirm);\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        eventEmitter.off('EventRedirectConfirm', this.confirm);\r\n    }\r\n}\r\n\r\nexport default connect()(withRouter(Header));","import React, {useState} from 'react';\r\nimport eventEmitter from '../../EventEmitter';\r\n\r\nconst ImageItem = props => {\r\n\r\n    const [id] = useState(props.id);\r\n    const [urlRegular] = useState(props.urls.regular);\r\n    const [urlFull] = useState(props.urls.full);\r\n    const [isFull] = useState(props.isFull);\r\n\r\n    const showImageMenu = event => {\r\n       eventEmitter.emit(\"EventShowMenuImage\", {id: id, url: urlRegular, urlFull: urlFull});\r\n    }\r\n\r\n\r\n    return (\r\n        <div className = {props.selected ? 'ItemBox selected' : 'ItemBox'}>\r\n            <img\r\n                className = 'ImageItem'\r\n                onClick = {showImageMenu}\r\n                src = {isFull ? urlFull : urlRegular}\r\n                alt = 'item'\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ImageItem;","import React,{Fragment} from 'react';\r\n\r\nimport isFetch from 'isomorphic-fetch';\r\nimport PropTypes from 'prop-types';\r\nimport eventEmitter from '../../EventEmitter.js';\r\n\r\nimport ImageItem from '../imageViewer/imageItem';\r\nimport Icon from '../Icon/icon';\r\n\r\nimport './modal.scss';\r\n\r\nrequire('es6-promise').polyfill();\r\n\r\nclass ModalWindow extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        workMode: PropTypes.string.isRequired, /** @Mode for modal */\r\n        // idComponent: PropTypes.string || PropTypes.number /** @Id current user project */\r\n    }\r\n\r\n    state = {\r\n        workMode: this.props.workMode,\r\n        images: {\r\n            buttonSearchDisabled: false,\r\n            selectedItem: null, \r\n            showUrl: null, \r\n            images: null,\r\n            urlFull: null,\r\n            imageBoxView: false, \r\n            error: ''\r\n        },\r\n        newProject: {\r\n            validateName: false,\r\n            validateType: false,\r\n            disabled: true,\r\n            name: '',\r\n            type: 'empty'\r\n        },\r\n        imageMenuActive: false,\r\n        warning: {\r\n            lengthMax: 'Max length: 20 symbols',\r\n            lengthMin: 'Min length: 4 symbol',\r\n            type: 'Select type of webpage',\r\n        }\r\n    }\r\n\r\n    inputSearch = null;\r\n    inputSelect = null;\r\n\r\n    searchBackground = event => {\r\n        const mode = 'search/photos/?page=1&per_page=40&query=';\r\n        const api = `https://api.unsplash.com/${mode}`;\r\n        const search = this.inputSearch.value;\r\n\r\n        this.setState({...this.state, images: {...this.state.inages, buttonSearchDisabled: true}})\r\n\r\n        isFetch(`${api + search}&client_id=${process.env.REACT_APP_UNSPLASH_TOKEN}`)\r\n        .then(response => {\r\n            if (response.ok) return response.json();\r\n            else throw new Error('request invalid');\r\n        })\r\n        .then(response => {\r\n\r\n            let {results} = response;\r\n            if (results.length)\r\n            this.setState({\r\n                ...this.state,\r\n                images: {\r\n                    ...this.state.images,\r\n                    imageBoxView: true,\r\n                    error: '',\r\n                    images: [...results],\r\n                    buttonSearchDisabled: false\r\n                },\r\n            });\r\n            else throw new Error('Photos not found');\r\n        })\r\n        .catch(error => {\r\n            console.error(error.message);\r\n            this.setState({\r\n                ...this.state,\r\n                images: {...this.state.images, error: error.message},\r\n                imageBoxView: false,\r\n                buttonSearchDisabled: false\r\n            });\r\n        });\r\n    }\r\n\r\n    showMenuImage = event => {\r\n        this.setState({\r\n            ...this.state, \r\n            imageMenuActive: true,\r\n            images: {\r\n                ...this.state.images,\r\n                selectedItem: event.id, \r\n                showUrl: event.url,\r\n                urlFull: event.urlFull\r\n\r\n            }\r\n        });\r\n    }\r\n\r\n    showImage = event => {\r\n\r\n        const {showUrl} = this.state.images;\r\n        eventEmitter.emit(\"EventImageView\", {action: true, target: showUrl ? showUrl : null});\r\n        event.stopPropagation();\r\n    }\r\n\r\n    setSelectedImage = event => {\r\n\r\n        let images = {...this.state.images};\r\n        if (this.props.modalSearchMode !== 'image'){\r\n            eventEmitter.emit(`EventSetBackgroundImage${this.props.idComponent}`,images);\r\n            eventEmitter.emit(`EventSetBImageInstumentPanel`,{images: images, mode: this.props.modalSearchMode});\r\n        } else {\r\n            eventEmitter.emit(`EventSetCurrentImage${this.props.idComponent}`, images);\r\n            eventEmitter.emit(`EventSetBImageInstumentPanel`, {images: images,  mode: this.props.modalSearchMode });\r\n        }\r\n        \r\n        event.stopPropagation();\r\n    };\r\n\r\n    makeImageResultBox = (items) => {\r\n        if (!items) return null;\r\n        return items.map((item,i) =>{\r\n           return <ImageItem \r\n                key = {`item${i}`} \r\n                id = {i}\r\n                selected = {this.state.images.selectedItem === i ? true : false} \r\n                isFull = {false}\r\n                urls = {{...item.urls}} \r\n            />\r\n        });\r\n    }\r\n\r\n    addNewProject = event => {\r\n        let mode = this.state[this.state.workMode];\r\n        if (mode.validateType &&  mode.validateName) {\r\n            eventEmitter.emit('EventAddProject',\r\n            {\r\n                title: this.state[this.state.workMode].name,\r\n                type: this.state[this.state.workMode].type\r\n            });\r\n\r\n            eventEmitter.emit('EventChangeWorkMode',{action: 'default'});\r\n        }\r\n    }\r\n\r\n    selectOption = event => {\r\n\r\n        let inputs = {...this.state[this.state.workMode]};\r\n        inputs.type = event.target.value;\r\n        inputs.validateType = inputs.type !== 'empty';\r\n        inputs.disabled = inputs.validateType && inputs.validateName ? false : true;\r\n        this.setState({\r\n            ...this.state,\r\n            [this.state.workMode]: inputs\r\n        });\r\n    }\r\n\r\n    validateName = event => {\r\n\r\n        let inputs = {...this.state[this.state.workMode]};\r\n        inputs.name = event.target.value;\r\n        let lengthInput = inputs.name.length;\r\n        inputs.validateName = lengthInput >= 4 && lengthInput < 20 ? true : false;\r\n        inputs.disabled = inputs.validateType && inputs.validateName ? false : true;\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            [this.state.workMode]: inputs\r\n        })\r\n    };\r\n\r\n    cancel = event => {\r\n\r\n        if (this.state.workMode === 'Search')\r\n            eventEmitter.emit(\"EventModalSearchOn\", {action: 'offline', mode: null});\r\n        else  eventEmitter.emit('EventChangeWorkMode',{action: 'default'});\r\n    }\r\n\r\n    refSelect = (node) => this.inputSelect = node;\r\n    refSearch = node => this.inputSearch = node;\r\n\r\n    render(){\r\n        switch (this.state.workMode){\r\n            case 'newProject':\r\n                return (\r\n                    <div className = 'Modal'>\r\n                        <h3>Create new Project</h3>\r\n                        { this.state[this.state.workMode].name.length <= 3 ?\r\n                            <span className = 'warning'>{this.state.warning.lengthMin}</span> : null\r\n                        }\r\n                        { this.state[this.state.workMode].name.length >= 20 ?\r\n                            <span className = 'warning'>{this.state.warning.lengthMax}</span> : null\r\n                        }\r\n                        <input\r\n                            className = {this.state[this.state.workMode].validateName ? 'ready' : 'wrong'}\r\n                            value = {this.state[this.state.workMode].name}\r\n                            onChange = {this.validateName}\r\n                            type = 'text'\r\n                            placeholder = \"Project name\"\r\n                        />\r\n                        { !this.state[this.state.workMode].validateType ?\r\n                            <span className = 'warning'>{this.state.warning.type}</span> : null\r\n                        }\r\n                        <select onChange = {this.selectOption} >\r\n                            <option value = 'empty'>--------</option>\r\n                            <option value = 'landing'>Landing</option>\r\n                            <option value = 'portfolio'>Portfolio</option>\r\n                        </select>\r\n                        <input \r\n                            onClick = {this.addNewProject}\r\n                            className = 'acceptButton'\r\n                            disabled = {this.state[this.state.workMode].disabled}\r\n                            type = 'button'\r\n                            value = 'Submit'\r\n                        />\r\n                            <input onClick = {this.cancel} type ='button' value = 'Cancel' />\r\n                    </div>\r\n                )\r\n            case 'Search':\r\n                console.log(this.props);\r\n                return (\r\n                    <Fragment>\r\n                        <div className = 'Modal Modal-search'>\r\n                            <h3>{`Search ${this.props.modalSearchMode !== 'image' ? 'background image' : 'image'}`}</h3>\r\n                            { this.state.images.error ?\r\n                                <span className = 'error'>{this.state.images.error}</span> : null\r\n                            }\r\n                            <input ref = {this.refSearch} type = 'text' placeholder = \"Photo name\" />\r\n                            <input \r\n                                disabled = {this.state.images.buttonSearchDisabled} \r\n                                className = 'acceptButton' \r\n                                type = 'button' \r\n                                value = 'Search'\r\n                                onClick = {this.searchBackground}\r\n                            />\r\n                            <input onClick = {this.cancel} type ='button' value = 'Cancel' />\r\n                            {\r\n                                this.state.images.imageBoxView ?\r\n                                <div className = 'searchResultBox'>\r\n                                    {this.makeImageResultBox([...this.state.images['images']])}\r\n                                </div>\r\n                                : null\r\n                            }\r\n                        </div>\r\n                        {  this.state.imageMenuActive ?\r\n                            <div className = 'ActionModalSearch'>\r\n                            <button onClick = {this.showImage} className = 'actionModalSearch__view'>\r\n                                <Icon path = '/img/view.png' />\r\n                            </button>\r\n                            <button onClick = {this.setSelectedImage} className = 'actionModalSearch__settings'>\r\n                                <Icon path = '/img/settings.png' />\r\n                            </button>\r\n                            </div>\r\n                            : null\r\n                        }\r\n                    </Fragment>\r\n                )\r\n\r\n                case 'SearchImage':\r\n                    return (\r\n                        <Fragment>\r\n                            <div className = 'Modal Modal-search'>\r\n                                <h3>Search background image</h3>\r\n                                { this.state.images.error ?\r\n                                    <span className = 'error'>{this.state.images.error}</span> : null\r\n                                }\r\n                                <input ref = {this.refSearch} type = 'text' placeholder = \"Photo name\" />\r\n                                <input \r\n                                    disabled = {this.state.images.buttonSearchDisabled} \r\n                                    className = 'acceptButton' \r\n                                    type = 'button' \r\n                                    value = 'Search'\r\n                                    onClick = {this.searchBackground}\r\n                                />\r\n                                <input onClick = {this.cancel} type ='button' value = 'Cancel' />\r\n                                {\r\n                                    this.state.images.imageBoxView ?\r\n                                    <div className = 'searchResultBox'>\r\n                                        {this.makeImageResultBox([...this.state.images['images']])}\r\n                                    </div>\r\n                                    : null\r\n                                }\r\n                            </div>\r\n                            {  this.state.imageMenuActive ?\r\n                                <div className = 'ActionModalSearch'>\r\n                                <button onClick = {this.showImage} className = 'actionModalSearch__view'>\r\n                                    <Icon path = '/img/view.png' />\r\n                                </button>\r\n                                <button onClick = {this.setSelectedImage} className = 'actionModalSearch__settings'>\r\n                                    <Icon path = '/img/settings.png' />\r\n                                </button>\r\n                                </div>\r\n                                : null\r\n                            }\r\n                        </Fragment>\r\n                    )\r\n            default: return <Fragment></Fragment>\r\n        }\r\n    }\r\n\r\n    componentDidMount = event => {\r\n        if (this.state.workMode === 'Search')\r\n            eventEmitter.on('EventShowMenuImage', this.showMenuImage);\r\n    }\r\n\r\n    componentWillUnmount = event => {\r\n        if (this.state.workMode === 'Search')\r\n            eventEmitter.off('EventShowMenuImage', this.showMenuImage);\r\n    }\r\n}\r\n\r\nexport default ModalWindow;\r\n\r\n","import {createProjectAction, errorAction} from '../actions';\r\n\r\n\r\nfunction random(min,max){\r\n    return `${Math.floor(min + Math.random() * (max-min))}`\r\n}\r\n\r\n\r\nconst middlewareCreateProject = (uid, list, title, type) => async (dispatch,getState, {firebase}) => {\r\n    let lastProject = [...list];\r\n    const lastIndex = lastProject.length  ? lastProject[lastProject.length-1].id + 1 : 0;\r\n    const sectionTitleProject = [];\r\n    if (type === 'portfolio') sectionTitleProject.push(\"Header\");\r\n    else sectionTitleProject.push(\"Header\");\r\n    const header = {\r\n        backgroundImage: null,\r\n        color: null,\r\n        id: `MainBackgroundHeader${random(0,10000)}`,\r\n        targetSection: \"Header\",\r\n        type: \"background\"\r\n    }\r\n\r\n    lastProject.push({\r\n        id: lastIndex,\r\n        title: title,\r\n        type: type,\r\n        components: [header],\r\n        sectionTitleProject: [...sectionTitleProject],\r\n    });\r\n\r\n    await firebase.db.collection(\"users\").doc(uid).update({\r\n        'projects': lastProject,\r\n    })\r\n    .then (() => dispatch(createProjectAction(lastProject)))\r\n    .catch(error => {\r\n        console.error(error.message);\r\n        dispatch(errorAction(error.message));\r\n    })\r\n};\r\n\r\nexport {\r\n    middlewareCreateProject\r\n}","import React, {useState} from 'react';\r\nimport eventEmitter from '../../EventEmitter';\r\nimport {withRouter, Redirect} from 'react-router-dom';\r\n\r\nfunction Item(props) {\r\n\r\n    const [path] = useState( `/Cabinet/Build/${props.id}`);\r\n\r\n    let [canBuild,setCanBuild] = useState(false);\r\n\r\n    const [id] = useState(props.id);\r\n    const [name] = useState(props.name);\r\n    const [type] = useState(props.type);\r\n\r\n\r\n    const build = event => {\r\n        if(props.location.pathname !== path)\r\n            setCanBuild(true);\r\n        event.stopPropagation();\r\n    };\r\n\r\n    const deleteItem = event => {\r\n        eventEmitter.emit('EventDeleteItem',{\r\n            id: props.id,\r\n            name: props.name,\r\n            type: props.type\r\n        });\r\n        event.stopPropagation();\r\n    };\r\n\r\n    const showProduction =event => {\r\n        event.stopPropagation();\r\n    }\r\n\r\n    if (canBuild) return <Redirect to = {path} />\r\n    else return (\r\n            <div className = 'item' data-id = {id}>\r\n                <p className = 'ProjectName'>{name}</p>\r\n                <p className = 'ProjectType'>{type}</p>\r\n                <div className = 'projectController'>\r\n                    <input \r\n                        onClick = {build} \r\n                        className = 'projectControllerButton_enter' \r\n                        type = 'button' \r\n                        value = 'enter build' />\r\n                    <input onClick = {deleteItem} \r\n                        className = 'projectControllerButton_delete' \r\n                        type = 'button' \r\n                        value = 'delete' />\r\n                </div>\r\n                <input onClick = {showProduction} \r\n                    className = 'productionButton' \r\n                    type = 'button' \r\n                    value = 'Show demo' />\r\n            </div>\r\n        )\r\n}\r\n\r\nexport default withRouter(Item);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport {middlewareCreateProject} from '../../redux/middleware/createProjectMiddleware';\r\n\r\nimport './list.scss';\r\n\r\nimport Item from './Item';\r\nimport eventEmitter from '../../EventEmitter.js';\r\n\r\nclass List extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        dispatch: PropTypes.func.isRequired, /** @dispatch redux */\r\n        idUser: PropTypes.string.isRequired, /** @UID current user */\r\n        list: PropTypes.array.isRequired, /** @List user projects */\r\n    }\r\n\r\n    state = {\r\n        redirect: false,\r\n    }\r\n\r\n    addNewProject = (item) => {\r\n        if (this.props.idUser) {\r\n            this.props.dispatch(middlewareCreateProject(\r\n                    this.props.idUser,\r\n                    this.props.list,\r\n                    item.title,\r\n                    item.type\r\n                ));\r\n        } else this.setState({...this.state, redirect: true});\r\n    }\r\n\r\n\r\n    makeList = (list) => {\r\n\r\n        return list.map (project => {\r\n\r\n            return(\r\n                <Item\r\n                    key = {project.id}\r\n                    id = {project.id}\r\n                    name = {project.title}\r\n                    type = {project.type}\r\n                />\r\n            )\r\n        });\r\n    }\r\n\r\n    render(){\r\n        if (this.state.redirect)\r\n            return <Redirect to = { '/'} />\r\n            else return (\r\n                    <div className = 'projectsList__list'>\r\n                        {this.makeList([...this.props.list])}\r\n                    </div>\r\n                )\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        eventEmitter.on('EventAddProject',this.addNewProject);\r\n    }\r\n\r\n      componentWillUnmount = () => {\r\n        eventEmitter.off('EventAddProject',this.addNewProject);\r\n      }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        idUser: state.cabinet.idUser,\r\n        list: [...state.cabinet.projects]\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(List);","import React from 'react';\r\n\r\nimport List from '../List/List.jsx';\r\n\r\nimport './ProjectsSection.scss';\r\n\r\nconst ProjectsSection = props => {\r\n\r\n        return (\r\n                <section className = 'projectsList'>\r\n                    <div className = 'container'>\r\n                        <div className = 'flex-column'>\r\n                            <div className = 'projectsList__about'>\r\n                                <h3>Your Projects</h3>\r\n                            </div>\r\n                            {List ? <List /> : null}\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n        )\r\n\r\n}\r\n\r\nexport default ProjectsSection;","import React,{Fragment} from 'react';\nimport PropTypes from 'prop-types';\nimport eventEmitter from '../../EventEmitter.js';\nimport {Redirect} from 'react-router-dom';\nimport withFirebase from '../../components/firebaseHOC';\n\nimport {middlewareLogOutUser} from '../../redux/middleware/loadUserMiddleware';\nimport middlewareDelete from '../../redux/middleware/middlewareDelete';\nimport Loader from '../../components/loading/Loader';\nimport {connect} from 'react-redux';\n\nimport Header from '../../components/header/Header';\nimport Modal from '../../components/modalWindow/ModalWindow';\nimport ProjectsSection from '../../components/ProjectsSection/ProjectsSection';\n\nimport './Cabinet.scss';\n\nconst title = require('../../config.json').title;\n\nclass Cabinet extends React.PureComponent {\n\n  static propTypes = {\n    firebase: PropTypes.object.isRequired, /** @firebase class for use firebase functions */\n    active: PropTypes.bool, /** @active - status firebase auth */\n    dispatch: PropTypes.func.isRequired, /** @dispatch - redux */\n    history: PropTypes.object.isRequired, /** @Router HTML5 history */\n    location: PropTypes.object.isRequired, /** @Router */\n    match: PropTypes.object.isRequired, /** @Router */\n    idUser: PropTypes.string, /** @Session user id from redux */\n    projects: PropTypes.arrayOf(PropTypes.object).isRequired /** @Projects array with user projects from redux */\n  }\n\n  state = {\n    workMode: 'default',\n  }\n\n  logOut = () => {\n    this.props.dispatch(middlewareLogOutUser(this.props.idUser));\n  }\n\n  deletItem = event => {\n    this.props.dispatch(middlewareDelete({...event, uid: this.props.firebase.getCurrentUser().uid}));\n  };\n\n  changeWorkMode = event => {\n    this.setState ({\n      ...this.state,\n      workMode: event.action,\n    });\n  };\n\n  render(){\n\n    if (this.props.active){\n      return (\n        <Fragment>\n          <Header title = {title} idUser = {this.props.idUser} />\n          <div className = 'Cabinet'>\n            {(this.state.workMode === 'newProject') ? <Modal workMode = {this.state.workMode} /> : null}\n              <ProjectsSection />\n            </div>\n        </Fragment>\n      )\n    } else if (!this.props.firebase.getCurrentUser()) return <Redirect to = { '/'} />\n    else return <Loader path = '/img/loading.gif' type = 'Cabinet' />\n  }\n\n\n  componentDidMount = () => {\n    eventEmitter.on('EventDeleteItem', this.deletItem);\n    eventEmitter.on('EventChangeWorkMode', this.changeWorkMode);\n  };\n\n  componentWillUnmount = () => {\n    eventEmitter.off('EventDeleteItem', this.deletItem);\n    eventEmitter.off('EventChangeWorkMode', this.changeWorkMode);\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    idUser: state.cabinet.idUser,\n    projects: [...state.cabinet.projects],\n    active: state.cabinet.active\n  }\n};\n\nexport default connect(mapStateToProps)(withFirebase(Cabinet));\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n// import eventEmitter from '../../EventEmitter.js';\r\n// import {Redirect} from 'react-router-dom';\r\nimport withFirebase from '../../components/firebaseHOC';\r\nimport {connect} from 'react-redux';\r\n\r\nclass Production extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        firebase: PropTypes.object,\r\n    }\r\n\r\n    render(){\r\n        return (\r\n        <div>PRODUCTION</div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n      idUser: state.cabinet.idUser,\r\n      projects: [...state.cabinet.projects],\r\n      active: state.cabinet.active\r\n    }\r\n  };\r\n\r\n  export default connect(mapStateToProps)(withFirebase(Production));","import React, {Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nimport withFirebase from '../../components/firebaseHOC';\r\nimport Header from '../../components/header/Header';\r\n\r\nimport './about.scss';\r\n\r\nclass About extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        config: PropTypes.object.isRequired, /** @Config app */\r\n        firebase: PropTypes.object.isRequired, /** @firebase class for use firebase functions */\r\n        history: PropTypes.object, /** @Router HTML5 history */\r\n        location: PropTypes.object, /** @Router */\r\n        match: PropTypes.object, /** @Router */\r\n    }\r\n\r\n    state = {\r\n        config: this.props.config\r\n    };\r\n\r\n    render(){\r\n        if (this.props.firebase.getCurrentUser()) {\r\n            const { config } = this.state;\r\n            return (\r\n                <Fragment>\r\n                    <Header title = {config.title} />\r\n                    <section className = 'About'>\r\n                        <div className = 'container'>\r\n                            <div className = 'col-12'>\r\n                                <div className = 'information'>\r\n                                <img alt = 'img' className = 'logoAbout' src = {process.env.PUBLIC_URL + '/img/about.jpg'}/>\r\n                                    <p className ='developer'><span>Developer:</span> {config.about.developer}</p>\r\n                                    <p className = 'year'><span>Year:</span> {config.about.year}</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </section>\r\n                </Fragment>\r\n            )\r\n        } else return <Redirect to = { '/'} />\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default withFirebase(About);","import {errorAction, loadUpdateCurrentProject} from '../actions';\r\nconst updateMiddleware = (item) => async (dispatch,getState, {firebase}) => {\r\n    let newProjects = item.projects.map(project => {\r\n        if (project.id === item.idProject) {\r\n            project.components = [...item.components]\r\n            project.sectionTitleProject = [...item.sectionTitleProject]\r\n        }\r\n        return project;\r\n    });\r\n    await firebase.db.collection(\"users\").doc(item.uid).update({\r\n        'projects': JSON.parse(JSON.stringify(newProjects))\r\n    })\r\n    .then(response => {\r\n        let project = item.projects.find(itemdb => itemdb.id === item.idProject);\r\n        dispatch(loadUpdateCurrentProject({\r\n            components: [...project.components],\r\n            idProject: item.idProject,\r\n            sectionTitleProject: item.sectionTitleProject,\r\n        }))\r\n    })\r\n    .catch(error => dispatch(errorAction(error.message)));\r\n};\r\n\r\nexport default updateMiddleware;","import React,{useState} from 'react';\r\nimport eventEmitter from '../../EventEmitter';\r\n\r\nimport './imageViewer.scss';\r\n\r\nfunction ImageViewer(props){\r\n\r\n    let [path] = useState(props.path);\r\n\r\n    const closeViewer = event => {\r\n        eventEmitter.emit(\"EventImageView\", { action: false, target: null});\r\n        event.stopPropagation();\r\n    }\r\n\r\n    return (\r\n        <div onClick = {closeViewer} className = 'ImageViewer'>\r\n            <img src = {path} alt = 'fullImage' />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ImageViewer;","import React,{Fragment} from 'react';\r\n\r\nconst MediaInstruments = props => {\r\n\r\n    let {content} = props.componentStats;\r\n    let {fontSize} = props.componentStats;\r\n    let {coords} = props.componentStats;\r\n\r\n    return (\r\n        <Fragment>\r\n            <p className = 'titleInstument'>Position: </p>\r\n            <span className = 'textCoordsPanel'>\r\n            {coords.x ?\r\n                coords.x + ' / ' + coords.y : ' drop for active'}\r\n            </span>\r\n            <p className = 'titleInstument'>Size: </p>\r\n            <input \r\n                onChange = {props.cbSetSize}\r\n                type=\"number\"\r\n                min = '10' max = '200'\r\n                value = {fontSize ? fontSize : 120}\r\n            />\r\n            <p className = 'titleInstument'>Content: </p>\r\n            <input \r\n                onClick = {props.cbSearchImage}\r\n                className = 'ImageSearchButton'\r\n                type=\"button\"\r\n                value = 'search media'\r\n            />\r\n        </Fragment>\r\n    )\r\n};\r\n\r\nexport default MediaInstruments;","import React, {Fragment} from 'react';\r\n\r\nconst ImageInstruments = props => {\r\n\r\n    let {coords} = props.componentStats;\r\n    let {size} = props.componentStats;\r\n    return (\r\n        <Fragment>\r\n        <p className = 'titleInstument'>Position: </p>\r\n        <span className = 'textCoordsPanel'>\r\n        {coords.x ?\r\n            coords.x + ' / ' + coords.y : ' drop for active'}\r\n        </span>\r\n        <p className = 'titleInstument'>Width (%):</p>\r\n        <input \r\n            onChange = {props.cbSetWidth}\r\n            type=\"number\"\r\n            min = '10' max = '100'\r\n            value = {size.w ? size.w : 30}\r\n        />\r\n        <p className = 'titleInstument'>Height (%):</p>\r\n        <input \r\n            onChange = {props.cbSetHeight}\r\n            type=\"number\"\r\n            min = '10' max = '100'\r\n            value = {size.h ? size.h : 30}\r\n        />\r\n        <p className = 'titleInstument'>Border radius: </p>\r\n            <input\r\n                onChange = {props.cbSetBorderRadius}\r\n                className = 'button_switch radius'\r\n                type=\"number\"\r\n                value = {props.componentStats.borderRadius ?\r\n                            props.componentStats.borderRadius : 10\r\n                        }\r\n                min = '10' max = '200'\r\n            />\r\n            <p className = 'titleInstument titleInstrument__opacity'>Opacity: </p>\r\n            <input \r\n                onChange = {props.cbSetOpacity}\r\n                className = 'ImageSearchButton'\r\n                type=\"number\"\r\n                value = {props.componentStats.opacity ?\r\n                    props.componentStats.opacity : 1\r\n                }\r\n                step = '0.1'\r\n                min = '0' max = '1'\r\n            />\r\n            <input \r\n            onClick = {props.cbSearchImage}\r\n            className = 'ImageSearchButton'\r\n            type=\"button\"\r\n            value = 'search image'\r\n        />\r\n        </Fragment>\r\n    )\r\n\r\n}\r\n\r\nexport default ImageInstruments;","import React, {Fragment,useState} from 'react';\r\nimport {SketchPicker} from 'react-color';\r\n\r\nconst BackgroundInstruments = props => {\r\n\r\n    const {componentsStats} = useState(props.componentStats);\r\n    let color = null;\r\n    if (typeof componentsStats === 'object' &&\r\n        componentsStats.hasOwnProperty('color'))\r\n        color = componentsStats.color;\r\n\r\n    return (\r\n        <Fragment>\r\n        <p className = 'titleInstument'>Color: </p>\r\n        <input\r\n            onClick = {props.cbSetColor}\r\n            className = 'button_switch Color'\r\n            type = 'button'\r\n            value = 'color pick'\r\n        />\r\n            { props.colorPickerActive ?\r\n                <SketchPicker\r\n                    onChangeComplete={props.cbHandleChangeComplete}\r\n                    color = {color ? color : 'red'}\r\n                />\r\n                : null\r\n            }\r\n            <input \r\n                onClick = {props.cbSearchImage}\r\n                className = 'ImageSearchButton'\r\n                type = 'button'\r\n                value = 'background-image'\r\n            />\r\n        </Fragment>\r\n    )\r\n\r\n}\r\n\r\nexport default BackgroundInstruments;","import React,{Fragment} from 'react';\r\nimport {SketchPicker} from 'react-color';\r\n\r\nconst TextInstruments = props => {\r\n\r\n        let {colorPickerActive} = props.instrumentPanel;\r\n        let {content} = props.componentStats;\r\n        let {fontSize} = props.componentStats;\r\n        let {coords} = props.componentStats;\r\n        let {color} = props.componentStats;\r\n        let _content = content !== '' ? 'Title' : '';\r\n\r\n        return (\r\n            <Fragment>\r\n            <p className = 'titleInstument'>Position: </p>\r\n            <span className = 'textCoordsPanel'>\r\n            {coords.x ?\r\n                coords.x + ' / ' + coords.y : ' drop for active'}\r\n            </span>\r\n            <p className = 'titleInstument'>Color: </p>\r\n            <input \r\n                onClick = {props.cbSetColor}\r\n                className = 'button_switch'\r\n                type = 'button'\r\n                value = 'color pick'\r\n            />\r\n            <p className = 'titleInstument'>Text size: </p>\r\n            <input \r\n                onChange = {props.cbSetSize}\r\n                type=\"number\"\r\n                min = '10' max = '200'\r\n                value = {fontSize ? fontSize : 120}\r\n            />\r\n                { colorPickerActive ?\r\n                    <SketchPicker\r\n                    onChangeComplete={props.cbHandleChangeComplete}\r\n                    color = {color ? color: 'red'}\r\n                    />\r\n                    : null\r\n                }\r\n                <p className = 'titleInstument'>Font: </p>\r\n                <select value = {props.componentStats.font} onChange = {props.cbSetFont}>\r\n                <option>Arial</option>\r\n                <option>Times</option>\r\n                <option>Georgia</option>\r\n                <option>Impact</option>\r\n                <option>Tahoma</option>\r\n                <option>Verdana</option>\r\n                <option>Comic</option>\r\n                </select>\r\n            <p className = 'titleInstument'>Content: </p>\r\n            <input\r\n                onChange = {props.cbSetContent}\r\n                maxLength = '100'\r\n                type = 'text'\r\n                value = {content ? content : _content}\r\n            />\r\n            </Fragment>\r\n        )\r\n}\r\n\r\nexport default TextInstruments;","import React, {Fragment} from 'react';\r\nimport eventEmitter from '../../EventEmitter';\r\nimport PropTypes from 'prop-types';\r\nimport './instrumentsPanel.scss';\r\n\r\nimport MediaInstruments from './MediaTools/MediaInstruments';\r\nimport ImageInstruments from './ImageTools/ImageInstruments';\r\nimport BackgroundInstruments from './BackgroundTools/BackgroundInstruments';\r\nimport TextInstruments from './TextTools/TextInstruments';\r\n\r\n\r\nimport Icon from '../Icon/icon';\r\n\r\nclass InstrumentsPanel extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        instrumentPanel:  PropTypes.object.isRequired, /** @Settings for panel and data about component */\r\n        editComponentName: PropTypes.string /** @Name editable component */\r\n    };\r\n\r\n    state = {\r\n        instrumentPanel: {...this.props.instrumentPanel},\r\n        componentStats: this.props.componentStats,\r\n        images: null,\r\n    };\r\n\r\n    timer = null;\r\n\r\n    updateSize = eventSize => {\r\n        this.setState({\r\n            ...this.state,\r\n            instrumentPanel: {...this.state.instrumentPanel},\r\n            componentStats: {\r\n                ...this.state.componentStats,\r\n                fontSize: eventSize\r\n            }\r\n        });\r\n    };\r\n\r\n    closePanel = event => {\r\n        eventEmitter.emit('EventClosePanel', {close: false});\r\n    };\r\n\r\n    setSize = event => {\r\n        let {id} = this.state.componentStats;\r\n        let size = event.target.value > 200 ? 200 : event.target.value;\r\n        this.setState({\r\n            ...this.state, \r\n            instrumentPanel: {...this.state.instrumentPanel},\r\n            componentStats: {...this.state.componentStats,fontSize: size}\r\n        },\r\n            () => eventEmitter.emit(`EventChangeSize${id}`, {\r\n                targetSection: this.state.editComponentName, size: size \r\n            })\r\n        );\r\n    };\r\n\r\n    setFont = event => {\r\n        let {id} = this.state.componentStats;\r\n        let fontName = event.target.value;\r\n        this.setState({\r\n            ...this.state, \r\n            instrumentPanel: {...this.state.instrumentPanel},\r\n            componentStats: {...this.state.componentStats,font: fontName}\r\n        },\r\n            () => eventEmitter.emit(`EventSetFont${id}`, {\r\n                targetSection: this.state.editComponentName, font: fontName\r\n            })\r\n        );\r\n    }\r\n\r\n    setContent = event => {\r\n        let {id} = this.state.componentStats;\r\n        let contentValue = event.target.value;\r\n        this.setState({\r\n            ...this.state, \r\n            instrumentPanel: {...this.state.instrumentPanel},\r\n            componentStats: {...this.state.componentStats,content: contentValue}\r\n        },\r\n            () => eventEmitter.emit(`EventChangeContentText${id}`,{\r\n                targetSection: this.state.editComponentName, content: contentValue\r\n            })\r\n        );\r\n        if (event) event.stopPropagation();\r\n    };\r\n\r\n    setWidth = event => {\r\n        const {id} = this.state.componentStats;\r\n        const width = event.target.value;\r\n        this.setState({\r\n            ...this.state,\r\n            componentStats: {...this.state.componentStats,\r\n                size: {\r\n                    ...this.state.componentStats.size,\r\n                    w: width\r\n                }}\r\n        },\r\n            () => eventEmitter.emit(`EventSetWidth${id}`,{width: width}));\r\n\r\n        if (event) event.stopPropagation();\r\n    };\r\n\r\n    setHeight = event => {\r\n        const {id} = this.state.componentStats;\r\n        const height = event.target.value;\r\n        this.setState({\r\n            ...this.state,\r\n            componentStats: {...this.state.componentStats,\r\n                size: {\r\n                    ...this.state.componentStats.size,\r\n                    h: height\r\n                }}\r\n        },\r\n            () => eventEmitter.emit(`EventSetHeight${id}`,{height: height}));\r\n\r\n        if (event) event.stopPropagation();\r\n    }\r\n\r\n    updatePosition = eventItem => {\r\n        if (!eventItem) return;\r\n        this.setState({\r\n            ...this.state, \r\n            componentStats: {\r\n                ...this.state.componentStats,\r\n                coords: {\r\n                    ...this.state.componentStats.coords,\r\n                    x: eventItem.x,\r\n                    y: eventItem.y\r\n                }\r\n            }\r\n        });\r\n    };\r\n\r\n    setColor = event => {\r\n        this.setState({...this.state,\r\n            instrumentPanel:{\r\n                ...this.state.instrumentPanel,\r\n                colorPickerActive: this.state.instrumentPanel.colorPickerActive ? false : true\r\n            }\r\n        });\r\n        if (event) event.stopPropagation();\r\n    };\r\n\r\n    setOpacity = event => {\r\n        let {id} = this.state.componentStats;\r\n        let opacity = event.target.value;\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            componentStats: {...this.state.componentStats,opacity: opacity}\r\n        },\r\n         () => eventEmitter.emit(`EventSetOpacity${id}`, {opacity: opacity}));\r\n    };\r\n\r\n    setBorderRadius = event => {\r\n        let {id} = this.state.componentStats;\r\n        let radius = event.target.value;\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            componentStats: {...this.state.componentStats,borderRadius: radius}\r\n        },\r\n         () => eventEmitter.emit(`EventSetBorderRadius${id}`, {borderRadius: radius}));\r\n    };\r\n\r\n    updateBimageStats = eventItem => {\r\n        const {images} = eventItem;\r\n        if (eventItem.mode !== 'image')\r\n        this.setState({\r\n            ...this.state,\r\n            componentStats:{\r\n                ...this.state.componentStats,\r\n                backgroundImage: images.urlFull\r\n            }\r\n        });\r\n        else {\r\n            this.setState({\r\n                ...this.state,\r\n                componentStats:{\r\n                    ...this.state.componentStats,\r\n                    image: images.urlFull\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    handleChangeComplete = event => {\r\n\r\n        const {rgb} = event;\r\n        let colorRGB = `rgb(${rgb.r},${rgb.g},${rgb.b},${rgb.a})`;\r\n\r\n        let {id} = this.state.componentStats;\r\n        if (this.state.componentStats.type === 'background'){\r\n            this.setState({\r\n                ...this.state,\r\n                componentStats: {...this.state.componentStats,color: colorRGB}\r\n            }, () => eventEmitter.emit(`EventChangeColorBackground${id}`,\r\n                        {colorRGB: this.state.componentStats.color}\r\n                    ));\r\n        }\r\n\r\n        else if (this.state.componentStats.type === 'text') {\r\n            this.setState({\r\n                ...this.state,\r\n                componentStats: {...this.state.componentStats,color: colorRGB}\r\n            },\r\n            () => eventEmitter.emit(`EventChangeColorText${id}`, colorRGB));\r\n        }\r\n\r\n    };\r\n\r\n    redirectSaveChanges = event => {\r\n        eventEmitter.emit(\"EventSaveChangesComponent\", {\r\n            ...this.state.componentStats,\r\n            id: this.state.componentStats.id,\r\n            type: this.state.componentStats.type,\r\n        });\r\n        if (event) event.stopPropagation();\r\n    }\r\n\r\n    saveChanges = event => {\r\n        if (this.timer) clearTimeout(this.timer);\r\n        this.timer = setTimeout(() => {\r\n            eventEmitter.emit(\"EventSaveChangesComponent\", {\r\n                ...this.state.componentStats,\r\n                id: this.state.componentStats.id,\r\n                type: this.state.componentStats.type,\r\n            });\r\n            eventEmitter.emit('EventRedirectConfirm', false);\r\n        }, 2000);\r\n        eventEmitter.emit('EventRedirectConfirm', true);\r\n        if (event) event.stopPropagation();\r\n    }\r\n\r\n    searchImage = event => {\r\n\r\n        let {id} = this.state.componentStats;\r\n        eventEmitter.emit('EventModalSearchOn', {idComponent: id, mode: this.state.componentStats.type});\r\n\r\n        event.stopPropagation();\r\n    };\r\n\r\n    makePanelInstruments = (type) => {\r\n            switch (type){\r\n                case 'text':\r\n                   return(\r\n                    <TextInstruments\r\n                        instrumentPanel = {{...this.state.instrumentPanel}}\r\n                        componentStats = {{...this.state.componentStats}}\r\n                        cbSetColor = {this.setColor}\r\n                        cbSetSize = {this.setSize}\r\n                        cbHandleChangeComplete = {this.handleChangeComplete}\r\n                        cbSetContent = {this.setContent}\r\n                        cbSetFont = {this.setFont}\r\n                        cbSetOpacity = {this.setOpacity}\r\n                    />\r\n                   )\r\n                case 'background':\r\n                    return (\r\n                        <BackgroundInstruments\r\n                            colorPickerActive = {this.state.instrumentPanel.colorPickerActive}\r\n                            componentStats = {{...this.state.componentStats}}\r\n                            cbSetColor = {this.setColor}\r\n                            cbHandleChangeComplete = {this.handleChangeComplete}\r\n                            cbSearchImage = {this.searchImage}\r\n                        />\r\n                    )\r\n                case 'image':\r\n                        return (\r\n                            <ImageInstruments\r\n                                instrumentPanel = {{...this.state.instrumentPanel}}\r\n                                componentStats = {{...this.state.componentStats}}\r\n                                cbSearchImage = {this.searchImage}\r\n                                cbSetSize = {this.setSize}\r\n                                cbSetBorderRadius = {this.setBorderRadius}\r\n                                cbSetOpacity = {this.setOpacity}\r\n                                cbSetWidth = {this.setWidth}\r\n                                cbSetHeight = {this.setHeight}\r\n                            />\r\n                        )\r\n                case 'media':\r\n                        return (\r\n                            <MediaInstruments\r\n                                instrumentPanel = {{...this.state.instrumentPanel}}\r\n                                componentStats = {{...this.state.componentStats}}\r\n                                cbSearchImage = {this.searchImage}\r\n                            />\r\n                            )\r\n                default: return <p className = 'warningInstruments'>No found element</p>\r\n            }\r\n    };\r\n\r\n    render(){\r\n        let { instrumentActive } = this.state.instrumentPanel;\r\n        return (\r\n            <Fragment>\r\n                <div  className = 'instumentsPanel'>\r\n                    <button\r\n                        onClick = {this.closePanel}\r\n                        className = 'closeInstrumentsPanel'\r\n                    >\r\n                        <Icon path = '/img/close.svg' />\r\n                    </button>\r\n                    <h3>Instruments</h3>\r\n                    {\r\n                        instrumentActive ? \r\n                        <p className = 'TextComponent'>{this.state.componentStats.type}</p>\r\n                        : null\r\n                    }\r\n                    {\r\n                        instrumentActive ?\r\n                        <div className = 'instuments'>\r\n                            {this.makePanelInstruments(this.state.componentStats.type)}\r\n                        </div>\r\n                        : null\r\n                    }\r\n                </div>\r\n            </Fragment>\r\n        )\r\n    };\r\n\r\n    componentDidUpdate = (oldProps, oldState) => {\r\n        if (oldState.componentStats !== this.state.componentStats)\r\n        this.saveChanges();\r\n    };\r\n\r\n    componentDidMount = event => {\r\n        eventEmitter.on('EventRedirectSaveChanges', this.redirectSaveChanges);\r\n        eventEmitter.on(`EventupdateSize${this.state.componentStats.id}`, this.updateSize);\r\n        eventEmitter.on(\"EventSetBImageInstumentPanel\", this.updateBimageStats);\r\n        eventEmitter.on(`EventUpdatePosition${this.state.componentStats.id}`, this.updatePosition);\r\n    };\r\n\r\n    componentWillUnmount = event => {\r\n        if (this.timer) clearTimeout(this.timer);\r\n        eventEmitter.off('EventRedirectSaveChanges', this.redirectSaveChanges);\r\n        eventEmitter.off(`EventupdateSize${this.state.componentStats.id}`, this.updateSize);\r\n        eventEmitter.off(\"EventSetBImageInstumentPanel\", this.updateBimageStats);\r\n        eventEmitter.off(`EventUpdatePosition${this.state.componentStats.id}`, this.updatePosition);\r\n    };\r\n};\r\n\r\n\r\nexport default InstrumentsPanel;","import React,{Fragment} from 'react';\r\nimport ImageViewer from '../../components/imageViewer/imageViewer';\r\nimport InstrumentsPanel from '../../components/instrumentsPanel/InstrumentsPanel';\r\nimport ModalWindow from '../../components/modalWindow/ModalWindow';\r\n\r\nconst AdditionalTools = props => {\r\n    return (\r\n        <Fragment key = 'AdditionalBuild'>\r\n            {   props.modalImageViewer.action &&\r\n                    <ImageViewer key = 'ImageViewer' path = {props.modalImageViewer.target} />\r\n            }\r\n            {   props.modalSearch &&\r\n                    <ModalWindow\r\n                        idComponent = {props.componentStats.id}\r\n                        modalSearchMode = {props.modalSearchMode}\r\n                        key = 'ModalWindow' workMode = 'Search' \r\n                    />\r\n            }\r\n                <InstrumentsPanel\r\n                    key = {`InstrumentsPanel${props.componentStats.id}`}\r\n                    editComponentName = {props.editComponentName}\r\n                    componentStats = {{...props.componentStats}}\r\n                    mainBuilderData =  {props.mainBuilderData}\r\n                    instrumentPanel = {props.instrumentPanel}\r\n                />\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default AdditionalTools;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport eventEmitter from '../../../EventEmitter';\r\nimport styled from 'styled-components';\r\n\r\n\r\nconst InputComponent = styled.input.attrs(props => ({\r\n    style: {\r\n        zIndex: props.indexZ ? '9999' : null,\r\n        left: props.coordX ? props.coordX : '45%',\r\n        top:  props.coordY ? props.coordY : '0%',\r\n}}))`\r\n    width: ${props => props.size ? props.size + '%' : null};\r\n    height: ${props => props.size ? props.size + 20 + '%' :  null};\r\n    position: absolute;\r\n    pointer-events: none;\r\n`;\r\n\r\n\r\nclass Input extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        id: PropTypes.oneOfType([\r\n            PropTypes.string,\r\n            PropTypes.number\r\n        ]).isRequired,\r\n        targetSection: PropTypes.string.isRequired,\r\n        sizeParentBox: PropTypes.object.isRequired,\r\n    }\r\n\r\n    state = {\r\n        id: this.props.id,\r\n        istrumentsActive: false,\r\n        getSizeBool: false,\r\n        sizeParentBox: this.props.sizeParentBox,\r\n        targetSection: this.props.targetSection,\r\n        path: this.props.path,\r\n        size: this.props.size ? this.props.size : null,\r\n        shiftCoords: null,\r\n        posImage: this.props.coords.x ? {x: this.props.coords.x, y: this.props.coords.y} : null,\r\n        startDragNdrop: false,\r\n    }\r\n\r\n    openImageInstruments = event => {\r\n\r\n        const componentsPatternImage = {\r\n            id: this.state.id,\r\n            targetSection: this.state.targetSection,\r\n            type: 'image',\r\n            borderRadius: null,\r\n            opacity: 1,\r\n            zIndex: null,\r\n            image: this.state.path,\r\n            coords: {...this.state.posImage}, // x, y\r\n        }\r\n\r\n        eventEmitter.emit(`EventInstrumentPanel`,{\r\n            componentStats: componentsPatternImage,\r\n            targetSection: this.state.targetSection,\r\n            id: this.state.id,\r\n            sizeTextValue: this.state.size\r\n        });\r\n        this.setState({...this.state, istrumentsActive: true});\r\n        event.stopPropagation();\r\n    };\r\n\r\n    saveCoords = event => {\r\n        if (event.nativeEvent.which !== 1) return false;\r\n        const element = this.refInput.getBoundingClientRect();\r\n\r\n        const cords = {\r\n            left: element.left,\r\n            top: element.top,\r\n            width: element.right - element.left,\r\n            height: element.bottom - element.top\r\n        }\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            shiftCoords: {x: event.clientX - cords.left, y: event.clientY - cords.top},\r\n            startDragNdrop: !this.state.startDragNdrop ? true : false\r\n        });\r\n\r\n        event.stopPropagation();\r\n    };\r\n\r\n    checkPivotPosition = (coordX, coordY) => {\r\n\r\n        const element = this.refInput.getBoundingClientRect();\r\n        const borderTopLeft = 0;\r\n        const borderDown = 800 - element.height;\r\n        const borderRight = this.props.sizeParentBox.width - element.width;\r\n\r\n        if (coordY < borderTopLeft) coordY = borderTopLeft;\r\n        if (coordY > borderDown) coordY = borderDown;\r\n        if (coordX < borderTopLeft) coordX = borderTopLeft;\r\n        if (coordX > borderRight) coordX = borderRight;\r\n\r\n        return {x: coordX, y: coordY};\r\n    }\r\n\r\n    delta = (trans,transT) => {\r\n        return {\r\n            x: 0,\r\n            y: 0,\r\n        }\r\n    }\r\n    move = (x,y) => this.setState({...this.state, posImage: {x: x, y: y}});\r\n\r\n    moveText = event => {\r\n\r\n        if (this.state.startDragNdrop && this.state.istrumentsActive){\r\n\r\n            let xItem = event.clientX - this.props.sizeParentBox.left;\r\n            let yItem = event.clientY - this.props.sizeParentBox.top;\r\n\r\n            let coordX = xItem - this.state.shiftCoords.x + this.delta().x;\r\n            let coordY = yItem - this.state.shiftCoords.y + this.delta().y;\r\n\r\n            let coords = this.checkPivotPosition(coordX,coordY);\r\n\r\n            let convertToPercentX = coords.x * 100 / this.state.sizeParentBox.width;\r\n            let convertToPercentY = coords.y * 100 / this.state.sizeParentBox.height;\r\n\r\n            this.move(convertToPercentX.toFixed(2) + '%',\r\n                      convertToPercentY.toFixed(2) + '%');\r\n    }\r\n        event.stopPropagation();\r\n    };\r\n\r\n    stopDragNdrop = event => {\r\n        if (this.state.startDragNdrop) {\r\n            this.setState({...this.state, startDragNdrop: false})\r\n            eventEmitter.emit(`EventUpdatePosition${this.state.id}`, this.state.posImage);\r\n        }\r\n        event.stopPropagation();\r\n    };\r\n\r\n    setCurrentImage = event => {\r\n        const {urlFull} = event;\r\n        this.setState({...this.state, path: urlFull});\r\n    };\r\n\r\n    weelResizeText = event => {\r\n\r\n        if (event.shiftKey && event.deltaY === -100) {\r\n            let counter = this.state.size + 1;\r\n            counter = counter > 100 ? 100 : counter;\r\n            this.setState({...this.state,size: counter});\r\n            eventEmitter.emit('EventupdateSize', counter);\r\n        }\r\n\r\n        if (event.shiftKey && event.deltaY === 100) {\r\n            let counter = this.state.size - 1;\r\n             counter = counter <= 0 ? 0 : counter;\r\n             this.setState({...this.state,size: counter});\r\n             eventEmitter.emit('EventupdateSize', counter);\r\n            }\r\n        event.stopPropagation();\r\n    };\r\n    saveSize = event => {\r\n        if (!this.state.getSizeBool){\r\n            const {size} = event;\r\n        this.setState({\r\n            ...this.state, getSizeBool: true,\r\n            sizeParentBox: {width: size.width, height: size.height}\r\n        });\r\n    } else eventEmitter.off(`EventSaveWidth${this.state.targetSection}`,this.saveSize);\r\n    };\r\n\r\n    refInput = null;\r\n    refInputComponent = node => this.refInput = node;\r\n\r\n    render(){\r\n            return (\r\n                <InputComponent\r\n                    type = 'button'\r\n                    value = 'Input'\r\n                    ref = {this.refInputComponent}\r\n                    size = {this.state.size}\r\n                    onClick = {this.openImageInstruments}\r\n                    onMouseDown = {this.saveCoords}\r\n                    onMouseMove= {this.moveText}\r\n                    onMouseLeave = {this.stopDragNdrop}\r\n                    onMouseUp = {this.stopDragNdrop}\r\n                    onDragStart = {this.stop}\r\n                    onWheel = {this.weelResizeText}\r\n                    coordX = {this.state.posImage ? this.state.posImage.x : null}\r\n                    coordY = {this.state.posImage ? this.state.posImage.y : null}\r\n                    indexZ = {this.state.startDragNdrop}\r\n                    data-imagecomponentwrapper\r\n                />\r\n            )\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        eventEmitter.on(`EventSetCurrentImage${this.state.id}`, this.setCurrentImage);\r\n        eventEmitter.on(`EventSaveWidth${this.state.targetSection}`, this.saveSize);\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        eventEmitter.off(`EventSaveWidth${this.state.targetSection}`,this.saveSize);\r\n        eventEmitter.off(`EventSetCurrentImage${this.state.id}`, this.setCurrentImage);\r\n    }\r\n}\r\n\r\nexport default Input;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport eventEmitter from '../../../EventEmitter';\r\nimport styled from 'styled-components';\r\n\r\nconst WrapperMedia = styled.div.attrs(props => ({\r\n    style: {\r\n        zIndex: props.indexZ ? '9999' : null,\r\n        left: props.coordX ? props.coordX : '45%',\r\n        top:  props.coordY ? props.coordY : '0%',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n}}))`\r\n    width: 30%;\r\n    height: 50%;\r\n    position: absolute;\r\n    background: url(/img/media.svg);\r\n    border: 1px solid red;\r\n    padding: 40px;\r\n    box-sizing: border-box;\r\n`;\r\nconst Media = styled.iframe`\r\n    width: 90%;\r\n    height: 90%;\r\n    z-index: ${props => props.zIndex ? props.zIndex : '-1'};\r\n`;\r\n\r\nclass MediaComponent extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        id: PropTypes.oneOfType([\r\n            PropTypes.string,\r\n            PropTypes.number\r\n        ]).isRequired,\r\n        targetSection: PropTypes.string.isRequired,\r\n        sizeParentBox: PropTypes.object.isRequired,\r\n        content: PropTypes.string,\r\n        children: PropTypes.object,\r\n    }\r\n\r\n    state = {\r\n        targetSection: this.props.targetSection,\r\n        id : this.props.id,\r\n        sizeParentBox: this.props.sizeParentBox,\r\n        content: this.props.path || this.props.content,\r\n        shiftCoords: null,\r\n        size: this.props.size ? this.props.size : 30,\r\n        posMedia: this.props.coords.x ? {x: this.props.coords.x, y: this.props.coords.y} : null,\r\n        startDragNdrop: false,\r\n        istrumentsActive: false,\r\n        drawContent: false,\r\n    }\r\n\r\n    openMediaInstruments = event => {\r\n\r\n        const componentsPatternMedia = {\r\n            id: this.state.id,\r\n            targetSection: this.state.targetSection,\r\n            type: 'media',\r\n            zIndex: null,\r\n            image: this.state.path,\r\n            coords: {...this.state.posMedia}, // x, y\r\n        }\r\n\r\n        eventEmitter.emit('EventInstrumentPanel',{\r\n            componentStats: componentsPatternMedia,\r\n            targetSection: this.state.targetSection,\r\n            id: this.state.id,\r\n            sizeTextValue: this.state.size\r\n        });\r\n        this.setState({...this.state, istrumentsActive: true});\r\n        event.stopPropagation();\r\n    }\r\n\r\n    saveCoords = event => {\r\n        if (event.nativeEvent.which !== 1) return false;\r\n        const element = this.refMedia.getBoundingClientRect();\r\n\r\n        const cords = {\r\n            left: element.left,\r\n            top: element.top,\r\n            width: element.right - element.left,\r\n            height: element.bottom - element.top\r\n        }\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            shiftCoords: {x: event.clientX - cords.left, y: event.clientY - cords.top},\r\n            startDragNdrop: !this.state.startDragNdrop ? true : false\r\n        });\r\n\r\n        event.stopPropagation();\r\n    };\r\n\r\n    checkPivotPosition = (coordX, coordY) => {\r\n\r\n        const element = this.refMedia.getBoundingClientRect();\r\n        const borderTopLeft = 0;\r\n        const borderDown = 800 - element.height;\r\n        const borderRight = this.props.sizeParentBox.width - element.width;\r\n\r\n        if (coordY < borderTopLeft) coordY = borderTopLeft;\r\n        if (coordY > borderDown) coordY = borderDown;\r\n        if (coordX < borderTopLeft) coordX = borderTopLeft;\r\n        if (coordX > borderRight) coordX = borderRight;\r\n\r\n        return {x: coordX, y: coordY};\r\n    }\r\n\r\n    delta = (trans,transT) => {\r\n        return {\r\n            x: 0,\r\n            y: 0,\r\n        }\r\n    }\r\n    move = (x,y) => this.setState({...this.state, posMedia: {x: x, y: y}});\r\n\r\n    moveMedia = event => {\r\n\r\n        if (this.state.startDragNdrop && this.state.istrumentsActive){\r\n\r\n            let xItem = event.clientX - this.props.sizeParentBox.left;\r\n            let yItem = event.clientY - this.props.sizeParentBox.top;\r\n\r\n            let coordX = xItem - this.state.shiftCoords.x + this.delta().x;\r\n            let coordY = yItem - this.state.shiftCoords.y + this.delta().y;\r\n\r\n            let coords = this.checkPivotPosition(coordX,coordY);\r\n\r\n            let convertToPercentX = coords.x * 100 / this.state.sizeParentBox.width;\r\n            let convertToPercentY = coords.y * 100 / this.state.sizeParentBox.height;\r\n\r\n            this.move(convertToPercentX.toFixed(2) + '%',\r\n                      convertToPercentY.toFixed(2) + '%');\r\n    }\r\n        event.stopPropagation();\r\n    };\r\n\r\n    stopDragNdrop = event => {\r\n        if (this.state.startDragNdrop) {\r\n            this.setState({...this.state, startDragNdrop: false})\r\n            eventEmitter.emit(`EventUpdatePosition${this.state.id}`, this.state.posMedia);\r\n        }\r\n        event.stopPropagation();\r\n    };\r\n\r\n    setContent = event => {\r\n        const {urlFull} = event;\r\n        this.setState({...this.state, path: urlFull});\r\n    };\r\n\r\n    weelResizeText = event => {\r\n\r\n        if (event.shiftKey && event.deltaY === -100) {\r\n            let counter = this.state.size + 1;\r\n            counter = counter > 100 ? 100 : counter;\r\n            this.setState({...this.state,size: counter});\r\n            eventEmitter.emit('EventupdateSize', counter);\r\n        }\r\n\r\n        if (event.shiftKey && event.deltaY === 100) {\r\n            let counter = this.state.size - 1;\r\n             counter = counter <= 0 ? 0 : counter;\r\n             this.setState({...this.state,size: counter});\r\n             eventEmitter.emit('EventupdateSize', counter);\r\n            }\r\n        event.stopPropagation();\r\n    };\r\n    saveSize = event => {\r\n        if (!this.state.getSizeBool){\r\n            const {size} = event;\r\n        this.setState({\r\n            ...this.state, getSizeBool: true,\r\n            sizeParentBox: {width: size.width, height: size.height}\r\n        });\r\n    }\r\n    };\r\n\r\n    refMedia = null;\r\n    refMediaComponent = node => this.refMedia = node;\r\n\r\n    render(){\r\n        let link = \"https://www.youtube.com/embed/B0b59jgudto\";\r\n        console.log(link);\r\n        return (\r\n            <WrapperMedia\r\n                ref = {this.refMediaComponent}\r\n                onClick={this.openMediaInstruments}\r\n                onMouseDown = {this.saveCoords}\r\n                onMouseMove= {this.moveMedia}\r\n                onMouseLeave = {this.stopDragNdrop}\r\n                onMouseUp = {this.stopDragNdrop}\r\n                onDragStart = {this.stop}\r\n                onWheel = {this.weelResizeText}\r\n                indexZ = {this.state.startDragNdrop}\r\n                coordX = {this.state.posMedia ? this.state.posMedia.x : null}\r\n                coordY = {this.state.posMedia ? this.state.posMedia.y : null}\r\n            >\r\n            {!this.state.startDragNdrop ? \r\n                <Media\r\n                    src= {!this.state.startDragNdrop ? link : null }\r\n                    drawContent = {this.state.drawContent}\r\n                    width = {this.state.width} \r\n                    height = {this.state.height}\r\n                    zIndex = {'0'}\r\n                    allowfullscreen\r\n                >\r\n                    {this.props.children}\r\n                </Media> : null\r\n            }\r\n            </WrapperMedia>\r\n        )\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        eventEmitter.on(`EventSetContentMedia${this.state.id}`, this.setContent);\r\n        eventEmitter.on(`EventSaveWidth${this.state.targetSection}`, this.saveSize);\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        eventEmitter.off(`EventSaveWidth${this.state.targetSection}`,this.saveSize);\r\n        eventEmitter.off(`EventSetContentMedia${this.state.id}`, this.setContent);\r\n    }\r\n}\r\n\r\n\r\n// <iframe width=\"560\" height=\"315\" \r\n// src=\"https://www.youtube.com/embed/7KoHDwvSOwc\" \r\n// frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" \r\n// allowfullscreen>\r\n// </iframe>\r\n\r\nexport default MediaComponent;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport eventEmitter from '../../../EventEmitter';\r\nimport styled from 'styled-components';\r\n\r\n\r\nconst WrapperImg = styled.div.attrs(props => ({\r\n    style: {\r\n        zIndex: props.indexZ ? '9999' : null,\r\n        left: props.coordX ? props.coordX : '45%',\r\n        top:  props.coordY ? props.coordY : '0%',\r\n}}))`\r\n    width: ${props => props.size ? props.size.w + '%' : '30%'};\r\n    height: ${props => props.size ? props.size.h + '%' : '50%'};\r\n    position: absolute;\r\n`;\r\n\r\nconst ImageStyle = styled.img`\r\n    width: 100%;\r\n    height: 100%;\r\n    opacity: ${props => props.opacity};\r\n    border-radius: ${props => props.borderRadius}px;\r\n    pointer-events: none;\r\n    position: absolute;\r\n`;\r\n\r\nclass Image extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        id: PropTypes.oneOfType([\r\n            PropTypes.string,\r\n            PropTypes.number\r\n        ]).isRequired,\r\n        targetSection: PropTypes.string.isRequired,\r\n        sizeParentBox: PropTypes.object.isRequired,\r\n    }\r\n\r\n    state = {\r\n        id: this.props.id,\r\n        istrumentsActive: false,\r\n        getSizeBool: false,\r\n        opacity: this.props.opacity || 1,\r\n        borderRadius: this.props.borderRadius || 0,\r\n        sizeParentBox: this.props.sizeParentBox,\r\n        targetSection: this.props.targetSection,\r\n        path: this.props.path,\r\n        size: this.props.size ? this.props.size : {w: 30, h: 50},\r\n        shiftCoords: null,\r\n        posImage: this.props.coords.x ? {x: this.props.coords.x, y: this.props.coords.y} : null,\r\n        startDragNdrop: false,\r\n    }\r\n\r\n    openImageInstruments = event => {\r\n\r\n        const componentsPatternImage = {\r\n            id: this.state.id,\r\n            targetSection: this.state.targetSection,\r\n            size: {...this.state.size},\r\n            type: 'image',\r\n            borderRadius: this.state.borderRadius,\r\n            opacity: this.state.opacity,\r\n            zIndex: null,\r\n            image: this.state.path,\r\n            coords: {...this.state.posImage}, // x, y\r\n        }\r\n\r\n        eventEmitter.emit(`EventInstrumentPanel`,{\r\n            componentStats: componentsPatternImage,\r\n            targetSection: this.state.targetSection,\r\n            id: this.state.id,\r\n            sizeTextValue: this.state.size\r\n        });\r\n        this.setState({...this.state, istrumentsActive: true});\r\n        event.stopPropagation();\r\n    };\r\n\r\n    saveCoords = event => {\r\n        if (event.nativeEvent.which !== 1) return false;\r\n        const element = this.refImage.getBoundingClientRect();\r\n\r\n        const cords = {\r\n            left: element.left,\r\n            top: element.top,\r\n            width: element.right - element.left,\r\n            height: element.bottom - element.top\r\n        }\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            shiftCoords: {x: event.clientX - cords.left, y: event.clientY - cords.top},\r\n            startDragNdrop: !this.state.startDragNdrop ? true : false\r\n        });\r\n\r\n        event.stopPropagation();\r\n    };\r\n\r\n    checkPivotPosition = (coordX, coordY) => {\r\n\r\n        const element = this.refImage.getBoundingClientRect();\r\n        const borderTopLeft = 0;\r\n        const borderDown = 800 - element.height;\r\n        const borderRight = this.props.sizeParentBox.width - element.width;\r\n\r\n        if (coordY < borderTopLeft) coordY = borderTopLeft;\r\n        if (coordY > borderDown) coordY = borderDown;\r\n        if (coordX < borderTopLeft) coordX = borderTopLeft;\r\n        if (coordX > borderRight) coordX = borderRight;\r\n\r\n        return {x: coordX, y: coordY};\r\n    }\r\n\r\n    delta = (trans,transT) => {\r\n        return {\r\n            x: 0,\r\n            y: 0,\r\n        }\r\n    }\r\n    move = (x,y) => this.setState({...this.state, posImage: {x: x, y: y}});\r\n\r\n    moveText = event => {\r\n\r\n        if (this.state.startDragNdrop && this.state.istrumentsActive){\r\n\r\n            let xItem = event.clientX - this.props.sizeParentBox.left;\r\n            let yItem = event.clientY - this.props.sizeParentBox.top;\r\n\r\n            let coordX = xItem - this.state.shiftCoords.x + this.delta().x;\r\n            let coordY = yItem - this.state.shiftCoords.y + this.delta().y;\r\n\r\n            let coords = this.checkPivotPosition(coordX,coordY);\r\n\r\n            let convertToPercentX = coords.x * 100 / this.state.sizeParentBox.width;\r\n            let convertToPercentY = coords.y * 100 / this.state.sizeParentBox.height;\r\n\r\n            this.move(convertToPercentX.toFixed(2) + '%',\r\n                      convertToPercentY.toFixed(2) + '%');\r\n    }\r\n        event.stopPropagation();\r\n    };\r\n\r\n    stopDragNdrop = event => {\r\n        if (this.state.startDragNdrop) {\r\n            this.setState({...this.state, startDragNdrop: false})\r\n            eventEmitter.emit(`EventUpdatePosition${this.state.id}`, this.state.posImage);\r\n        }\r\n        event.stopPropagation();\r\n    };\r\n\r\n    setCurrentImage = event => {\r\n        const {urlFull} = event;\r\n        this.setState({...this.state, path: urlFull});\r\n    };\r\n\r\n    setWidth = eventItem => {\r\n        const {width} = eventItem;\r\n        this.setState({...this.state, \r\n            size: {\r\n                ...this.state.size,\r\n                w: width,\r\n            }\r\n        });\r\n    }\r\n\r\n    setHeight = eventItem => {\r\n        const {height} = eventItem;\r\n        this.setState({...this.state, \r\n            size: {\r\n                ...this.state.size,\r\n                h: height,\r\n            }\r\n        });\r\n    }\r\n\r\n    weelResizeText = event => {\r\n\r\n        if (event.shiftKey && event.deltaY === -100) {\r\n            let counter = this.state.size + 1;\r\n            counter = counter > 100 ? 100 : counter;\r\n            this.setState({...this.state,size: counter});\r\n            eventEmitter.emit(`EventupdateSize${this.state.id}`, counter);\r\n        }\r\n\r\n        if (event.shiftKey && event.deltaY === 100) {\r\n            let counter = this.state.size - 1;\r\n             counter = counter <= 0 ? 0 : counter;\r\n             this.setState({...this.state,size: counter});\r\n             eventEmitter.emit(`EventupdateSize${this.state.id}`, counter);\r\n            }\r\n        event.stopPropagation();\r\n    };\r\n\r\n    saveSize = event => {\r\n        if (!this.state.getSizeBool){\r\n            const {size} = event;\r\n        this.setState({\r\n            ...this.state, getSizeBool: true,\r\n            sizeParentBox: {width: size.width, height: size.height}\r\n        });\r\n    } else eventEmitter.off(`EventSaveWidth${this.state.targetSection}`,this.saveSize);\r\n    };\r\n\r\n    changeSizeImage = eventItem => {\r\n        console.log(eventItem);\r\n        this.setState({...this.state, size: eventItem.size});\r\n    };\r\n\r\n    setBorderRadius = eventItem => {\r\n\r\n    let radius = eventItem.borderRadius > 200 ? 200 : eventItem.borderRadius;\r\n    radius = eventItem.borderDown < 0 ? 0 : eventItem.borderRadius;\r\n        this.setState({\r\n            ...this.state,\r\n            borderRadius: radius\r\n        });\r\n    };\r\n\r\n    setOpacity = eventItem => {\r\n        let opacity = eventItem.opacity > 1 ? 1 : eventItem.opacity;\r\n        opacity = eventItem.opacity < 0 ? 0 : eventItem.opacity;\r\n            this.setState({\r\n                ...this.state,\r\n                opacity: opacity\r\n            });\r\n    }\r\n \r\n    refImage = null;\r\n    refImageComponent = node => this.refImage = node;\r\n\r\n    render(){\r\n        console.log(this.state);\r\n            return (\r\n                <WrapperImg\r\n                ref = {this.refImageComponent}\r\n                size = {this.state.size}\r\n                onClick = {this.openImageInstruments}\r\n                onMouseDown = {this.saveCoords}\r\n                onMouseMove= {this.moveText}\r\n                onMouseLeave = {this.stopDragNdrop}\r\n                onMouseUp = {this.stopDragNdrop}\r\n                onDragStart = {this.stop}\r\n                onWheel = {this.weelResizeText}\r\n                coordX = {this.state.posImage ? this.state.posImage.x : null}\r\n                coordY = {this.state.posImage ? this.state.posImage.y : null}\r\n                indexZ = {this.state.startDragNdrop}\r\n                data-imagecomponentwrapper\r\n                >\r\n                    <ImageStyle\r\n                        data-imagecomponent\r\n                        borderRadius = {this.state.borderRadius}\r\n                        opacity = {this.state.opacity}\r\n                        src = {this.state.path}\r\n                        alt = 'img'\r\n                    />\r\n                </WrapperImg>\r\n            )\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        eventEmitter.on(`EventSetCurrentImage${this.state.id}`, this.setCurrentImage);\r\n        eventEmitter.on(`EventChangeSize${this.state.id}`, this.changeSizeImage);\r\n        eventEmitter.on(`EventSetOpacity${this.state.id}`, this.setOpacity);\r\n        eventEmitter.on(`EventSetBorderRadius${this.state.id}`,this.setBorderRadius);\r\n        eventEmitter.on(`EventSaveWidth${this.state.targetSection}`, this.saveSize);\r\n        eventEmitter.on(`EventSetWidth${this.state.id}`, this.setWidth);\r\n        eventEmitter.on(`EventSetHeight${this.state.id}`, this.setHeight);\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        eventEmitter.off(`EventSaveWidth${this.state.targetSection}`,this.saveSize);\r\n        eventEmitter.off(`EventChangeSize${this.state.id}`, this.changeSizeImage);\r\n        eventEmitter.off(`EventSetOpacity${this.state.id}`, this.setOpacity);\r\n        eventEmitter.off(`EventSetBorderRadius${this.state.id}`,this.setBorderRadius);\r\n        eventEmitter.off(`EventSetCurrentImage${this.state.id}`, this.setCurrentImage);\r\n        eventEmitter.off(`EventSetWidth${this.state.id}`, this.setWidth);\r\n        eventEmitter.off(`EventSetHeight${this.state.id}`, this.setHeight);\r\n    }\r\n}\r\n\r\nexport default Image;","\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport eventEmitter from '../../../EventEmitter';\r\nimport styled from 'styled-components';\r\nimport './components.scss';\r\n\r\nconst WrapperText = styled.div.attrs(props => ({\r\n    style: {\r\n        zIndex: props.indexZ ? '9999' : null,\r\n        left: props.coordX ? props.coordX : '50%',\r\n        top:  props.coordY,\r\n}}))`\r\n    position: absolute;\r\n    font-size: ${props => props.size};\r\n    color: ${props => props.textColor};\r\n    text-align: center;\r\n    margin: 0;\r\n    word-break: break-all;\r\n`;\r\n\r\nconst TextStyle = styled.p`\r\n    width: 100%;\r\n    height: 100%;\r\n    font-family: ${props => props.font};\r\n    text-align: center;\r\n    margin: 0;\r\n    -moz-user-select: none;\r\n    -khtml-user-select: none;\r\n    user-select: none;\r\n`;\r\n\r\nclass TextComponent extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        id: PropTypes.oneOfType([\r\n            PropTypes.string,\r\n            PropTypes.number\r\n        ]).isRequired,\r\n        targetSection: PropTypes.string.isRequired,\r\n        sizeParentBox: PropTypes.object.isRequired,\r\n        children: PropTypes.string,\r\n    }\r\n\r\n    state = {\r\n        id: this.props.id,\r\n        istrumentsActive: false,\r\n        isHaveSize: false,\r\n        parent: this.props.sizeParentBox,\r\n        targetSection: this.props.targetSection,\r\n        colorText: this.props.color,\r\n        sizeText: this.props.fontSize || this.props.size,\r\n        shiftCoords: null,\r\n        position: this.props.coords,\r\n        font: this.props.font ? this.props.font : 'Arial',\r\n        startDragNdrop: false,\r\n        contentText: this.props.children ? this.props.children : null,\r\n        sectionNumber: 0,\r\n        getSizeBool: false\r\n    }\r\n\r\n    openTitleInstruments = event => {\r\n\r\n         const componentsPatternText = {\r\n            id: this.state.id,\r\n            targetSection: this.state.targetSection,\r\n            type: 'text',\r\n            font: this.state.font,\r\n            color: this.state.colorText,\r\n            fontSize: this.state.sizeText,\r\n            content: this.state.contentText,\r\n            coords: {...this.state.posText}, // x, y\r\n        };\r\n        eventEmitter.emit(`EventInstrumentPanel`,{\r\n                type: 'text',\r\n                targetSection: this.state.targetSection,\r\n                id: this.state.id,\r\n                componentStats: componentsPatternText,\r\n                sizeTextValue: this.state.sizeText\r\n        });\r\n        this.setState({...this.state, istrumentsActive: true});\r\n        event.stopPropagation();\r\n    }\r\n\r\n    changeColorText = colorRGB => {\r\n        if (typeof colorRGB === 'string')\r\n            this.setState({\r\n                ...this.state,\r\n                colorText: colorRGB\r\n            });\r\n    };\r\n\r\n    changeSizeText = eventSize => {\r\n        this.setState({...this.state, sizeText: eventSize.size});\r\n    };\r\n    saveSize = event => {\r\n        const {size} = event;\r\n        if (!this.state.getSizeBool){\r\n        this.setState({\r\n            ...this.state,\r\n            getSizeBool: true,\r\n            sectionNumber: event.sectionNumber + 1,\r\n            parent: {width: size.width, height: size.height}});\r\n        } else eventEmitter.off(`EventSaveWidth${this.state.targetSection}`,this.saveSize);\r\n    }\r\n\r\n    changeContentText = eventContent => {\r\n        let booldContent = eventContent.content || eventContent.content === '';\r\n        if (booldContent)\r\n            this.setState({\r\n                ...this.state,\r\n                contentText: eventContent.content\r\n            });\r\n    };\r\n\r\n    saveCoords = event => {\r\n        if (event.nativeEvent.which !== 1) return false;\r\n        const element = this.refText.getBoundingClientRect();\r\n\r\n        const cords = {\r\n            left: element.left,\r\n            top: element.top,\r\n            width: element.right - element.left,\r\n            height: element.bottom - element.top\r\n        }\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            shiftCoords: {x: event.clientX - cords.left, y: event.clientY - cords.top},\r\n            startDragNdrop: !this.state.startDragNdrop ? true : false\r\n        });\r\n\r\n        event.stopPropagation();\r\n    };\r\n\r\n    setFont = eventItem => {\r\n        this.setState({\r\n            ...this.state,\r\n            font: eventItem.font\r\n        });\r\n    };\r\n\r\n    checkPivotPosition = (coordX, coordY) => {\r\n\r\n        const element = this.refText.getBoundingClientRect();\r\n        const borderTopLeft = 0;\r\n        const borderDown = 800 - element.height;\r\n        const borderRight = this.props.sizeParentBox.width - element.width;\r\n\r\n        if (coordY < borderTopLeft) coordY = borderTopLeft;\r\n        if (coordY > borderDown) coordY = borderDown;\r\n        if (coordX < borderTopLeft) coordX = borderTopLeft;\r\n        if (coordX > borderRight) coordX = borderRight;\r\n\r\n        return {x: coordX, y: coordY};\r\n    }\r\n\r\n    delta = (trans,transT) => {\r\n        return {\r\n            x: 0,\r\n            y: 0,\r\n        }\r\n    }\r\n    move = (x,y) => this.setState({...this.state, position: {x: x, y: y}});\r\n\r\n    moveText = event => {\r\n\r\n        if (this.state.startDragNdrop && this.state.istrumentsActive){\r\n\r\n            let xItem = event.clientX - this.props.sizeParentBox.left;\r\n            let yItem = event.clientY - (this.props.sizeParentBox.top);\r\n\r\n            let coordX = xItem - this.state.shiftCoords.x + this.delta().x;\r\n            let coordY = yItem - this.state.shiftCoords.y + this.delta().y;\r\n\r\n            let coords = this.checkPivotPosition(coordX,coordY);\r\n\r\n            let convertToPercentX = coords.x * 100 / this.state.parent.width;\r\n            let convertToPercentY = coords.y * 100 / this.state.parent.height;\r\n\r\n            this.move(convertToPercentX.toFixed(2) + '%',\r\n                      convertToPercentY.toFixed(2) + '%');\r\n    }\r\n        event.stopPropagation();\r\n    };\r\n\r\n    stopDragNdrop = event => {\r\n        if (this.state.startDragNdrop) {\r\n            this.setState({...this.state, startDragNdrop: false})\r\n            eventEmitter.emit(`EventUpdatePosition${this.state.id}`, this.state.position);\r\n        }\r\n        event.stopPropagation();\r\n    };\r\n\r\n    weelResizeText = event => {\r\n\r\n        if (event.shiftKey && event.deltaY === -100) {\r\n            let counter = this.state.sizeText + 1;\r\n            counter = counter > 200 ? 200 : counter;\r\n            this.setState({...this.state,sizeText: counter});\r\n            eventEmitter.emit(`EventupdateSize${this.state.id}`, counter);\r\n        }\r\n\r\n        if (event.shiftKey && event.deltaY === 100) {\r\n            let counter = this.state.sizeText - 1;\r\n             counter = counter <= 10 ? 10 : counter;\r\n             this.setState({...this.state,sizeText: counter});\r\n             eventEmitter.emit(`EventupdateSize${this.state.id}`, counter);\r\n            }\r\n        event.stopPropagation();\r\n    };\r\n\r\n    refText = null;\r\n    refTextComponent = node => this.refText = node;\r\n\r\n\r\n    render(){\r\n        return (\r\n            <WrapperText\r\n                ref  = {this.refTextComponent}\r\n                onClick={this.openTitleInstruments}\r\n                textColor = {this.state.colorText ? this.state.colorText : 'red'}\r\n                size = {this.state.sizeText ? this.state.sizeText + 'px' : '120px'}\r\n                onMouseDown = {this.saveCoords}\r\n                onMouseMove= {this.moveText}\r\n                onMouseLeave = {this.stopDragNdrop}\r\n                onMouseUp = {this.stopDragNdrop}\r\n                onWheel = {this.weelResizeText}\r\n                coordX = {this.state.position ? this.state.position.x : null}\r\n                coordY = {this.state.position ? this.state.position.y : null}\r\n                indexZ = {this.state.startDragNdrop}\r\n                data-textcomponent\r\n            >\r\n                <TextStyle font = {this.state.font}>{this.state.contentText}</TextStyle>\r\n            </WrapperText>\r\n        )\r\n\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        eventEmitter.on(`EventChangeColorText${this.state.id}`, this.changeColorText);\r\n        eventEmitter.on(`EventSetFont${this.state.id}`, this.setFont);\r\n        eventEmitter.on(`EventChangeSize${this.state.id}`, this.changeSizeText);\r\n        eventEmitter.on(`EventChangeContentText${this.state.id}`, this.changeContentText);\r\n        eventEmitter.on(`EventSaveWidth${this.state.targetSection}`,this.saveSize);\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        eventEmitter.off(`EventChangeColorText${this.state.id}`, this.changeColorText);\r\n        eventEmitter.off(`EventSetFont${this.state.id}`, this.setFont);\r\n        eventEmitter.off(`EventChangeSize${this.state.id}`, this.changeSizeText);\r\n        eventEmitter.off(`EventChangeContentText${this.state.id}`, this.changeContentText);\r\n        eventEmitter.off(`EventSaveWidth${this.state.targetSection}`,this.saveSize);\r\n    }\r\n}\r\n\r\nexport default TextComponent;","import React, {useEffect, useState} from 'react';\r\nimport eventEmitter from '../../../EventEmitter';\r\nimport styled from 'styled-components';\r\n\r\n\r\nconst Background = styled.div`\r\n    position: relative;\r\n    width: ${props => props.width};\r\n    height: ${props => props.height};\r\n    background-size: cover;\r\n    background-color: ${props => props.backgroundColor};\r\n    background-image: url(${props => props.backgroundImage});\r\n`;\r\n\r\nconst BackgroundComponent = props => {\r\n\r\n    const [id] = useState(props.id);\r\n    const [targetSection] = useState(props.targetSection);\r\n    let boxComponent = React.createRef();\r\n\r\n    let [backgroundColor, setBgColor] = useState(props.background || props.color);\r\n    let [backgroundImage, setImage] = useState(props.backgroundImage ? props.backgroundImage : null);\r\n\r\n    let [width] = useState(props.width ? props.width : '100%');\r\n    let [height] = useState(props.height ? props.height : '100%');\r\n\r\n    const saveDataParent = () => {\r\n        boxComponent.current.focus();\r\n        let boxInform =  boxComponent.current.getBoundingClientRect();\r\n        eventEmitter.emit(`EventSaveWidth${targetSection}`,{\r\n            sectionNumber: props.sectionNumber,\r\n            size: {width: boxInform.width, height: boxInform.height}\r\n        });\r\n    }\r\n\r\n    const openBgInstruments = event => {\r\n\r\n        const componentsPatternBackground = {\r\n            id: id,\r\n            targetSection: targetSection,\r\n            type: 'background',\r\n            color: backgroundColor,\r\n            backgroundImage: backgroundImage,\r\n        }\r\n        eventEmitter.emit('EventInstrumentPanel',{\r\n            componentStats: componentsPatternBackground,\r\n            targetSection: targetSection,\r\n            type: 'background',\r\n            id: id,\r\n        });\r\n        event.stopPropagation();\r\n    }\r\n\r\n    const changeColor = eventItem => {\r\n        setBgColor(eventItem.colorRGB);\r\n    }\r\n\r\n    const setBackgroundImage = event => {\r\n        const {urlFull} = event;\r\n        setImage(urlFull);\r\n    };\r\n\r\n    const saveScroll = eventItem => {\r\n        console.log(eventItem);\r\n    }\r\n\r\n    const didUpdate = () => {\r\n        saveDataParent();\r\n        eventEmitter.on(`EventChangeColorBackground${id}`, changeColor);\r\n        eventEmitter.on(`EventSaveSize${id}`, saveScroll);\r\n        eventEmitter.on(`EventSetBackgroundImage${id}`, setBackgroundImage);\r\n        return () => {\r\n            eventEmitter.off(`EventChangeColorBackground${id}`, changeColor);\r\n            eventEmitter.off(`EventSaveSize${id}`, saveScroll);\r\n            eventEmitter.off(`EventSetBackgroundImage${id}`, setBackgroundImage);\r\n        }\r\n    }\r\n\r\n    useEffect(didUpdate);\r\n    return (\r\n        <Background\r\n            ref  = {boxComponent}\r\n            onDoubleClick={openBgInstruments}\r\n            data-name = {targetSection}\r\n            backgroundColor = {backgroundColor ? backgroundColor : props.background}\r\n            backgroundImage = {backgroundImage ? backgroundImage : props.backgroundImage}\r\n            width = {width}\r\n            height = {height}\r\n        >\r\n            {props.children}\r\n        </Background>\r\n    )\r\n}\r\n\r\nexport default BackgroundComponent;","import React from 'react';\r\n\r\nimport Input from '../buildComponents/components/Input';\r\nimport Media from '../buildComponents/components/Media';\r\nimport Image from '../buildComponents/components/Image';\r\nimport TextComponent from '../buildComponents/components/Text';\r\nimport BackgroundComponent from '../buildComponents/components/Background';\r\n\r\nconst BuilderComponents = props => {\r\n\r\n    if (props.type === 'text')\r\n        return <TextComponent\r\n                    key = {`text${props.id}`}\r\n                    targetSection = {props.targetSection}\r\n                    sizeParentBox = {{...props.sizeParentBox}}\r\n                    id = {props.id}\r\n                    size = {props.size ? props.size : props.fontSize}\r\n                    color = {props.color}\r\n                    opacity = {props.opacity}\r\n                    coords = {{...props.coords}}\r\n                    font = {props.font}\r\n                >\r\n                    {props.content}\r\n                </TextComponent>\r\n\r\n    if (props.type === 'background')\r\n        return <BackgroundComponent\r\n                    targetSection = {props.targetSection}\r\n                    color = {props.color}\r\n                    width = {props.width}\r\n                    height = {props.height}\r\n                    size = {props.size}\r\n                    id = {props.id}\r\n                    key = {`bg${props.id}`}\r\n                />;\r\n\r\n    if (props.type === 'image'){\r\n        return <Image\r\n                    targetSection = {props.targetSection}\r\n                    borderRadius = {props.borderRadius || 0}\r\n                    opacity = {props.opacity}\r\n                    size = {props.size ? props.size : {w: 30, h: 50}}\r\n                    path = {props.path ? props.path : props.image}\r\n                    coords = {{...props.coords}}\r\n                    sizeParentBox = {{...props.sizeParentBox}}\r\n                    id = {props.id}\r\n                    key = {`image${props.id}`}\r\n                />\r\n    }\r\n    if (props.type === 'media')\r\n        return <Media\r\n                    key = {`media${props.id}`}\r\n                    id = {props.id}\r\n                    targetSection = {props.targetSection}\r\n                    sizeParentBox = {{...props.sizeParentBox}}\r\n                    path = {props.path ? props.path : props.content}\r\n                    coords = {{...props.coords}}\r\n                />\r\n        if (props.type === 'input')\r\n            return <Input\r\n                        targetSection = {props.targetSection}\r\n                        size = {props.size ? props.size : props.fontSize}\r\n                        path = {props.path ? props.path : props.image}\r\n                        coords = {{...props.coords}}\r\n                        sizeParentBox = {{...props.sizeParentBox}}\r\n                        id = {props.id}\r\n                        key = {`input${props.id}`}\r\n                    />\r\n};\r\n\r\nexport default BuilderComponents;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Input from '../buildComponents/components/Input';\r\nimport Media from '../buildComponents/components/Media';\r\nimport Image from '../buildComponents/components/Image';\r\nimport TextComponent from '../buildComponents/components/Text';\r\nimport BackgroundComponent from '../buildComponents/components/Background';\r\n\r\nimport eventEmitter from '../../EventEmitter';\r\nimport './buildMenu.scss';\r\n\r\nclass BuildMenu extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        mode: PropTypes.string.isRequired, /** @String work mode component */\r\n        editComponentName: PropTypes.string,\r\n        countSection: PropTypes.number, /** @Number for new section id */\r\n        countComponents: PropTypes.number, /** @Number last project */\r\n        sizeParentBox: PropTypes.object /** @Object with width and height parent(bg) */\r\n    }\r\n\r\n\r\n    state = {\r\n        mode: this.props.mode,\r\n        componentsPatternBackground: {\r\n            id: null,\r\n            targetSection: null,\r\n            type: 'background',\r\n            color: null,\r\n            backgroundImage: null,\r\n        },\r\n        componentsPatternText: {\r\n            id: null,\r\n            targetSection: null,\r\n            type: 'text',\r\n            font: 'Arial',\r\n            color: null,\r\n            opacity: 1,\r\n            fontSize: null,\r\n            content: null,\r\n            coords: {x: null, y: null}, // x, y\r\n        },\r\n        componentsPatternImage: {\r\n            id: null,\r\n            size: {w: 30, h: 50},\r\n            targetSection: null,\r\n            borderRadius: 0,\r\n            type: 'image',\r\n            opacity: 1,\r\n            zIndex: null,\r\n            image: '/img/photoPattern.svg',\r\n            coords: {x: null, y: null}, // x, y\r\n        },\r\n        componentsPatternMedia: {\r\n            id: null,\r\n            targetSection: null,\r\n            type: 'media',\r\n            size: null,\r\n            content: null,\r\n            coords: {x: null, y: null}, // x, y\r\n        },\r\n        componentsPatternInput: {\r\n            id: null,\r\n            targetSection: null,\r\n            type: 'input',\r\n            size: null,\r\n            content: null,\r\n            coords: {x: null, y: null}, // x, y\r\n        },\r\n        sizeParentBox: {...this.props.sizeParentBox},\r\n        title: 'Title'\r\n    }\r\n\r\n    addText = event => {\r\n        let id = Math.random().toFixed(3);\r\n\r\n        const componentsPatternText = {\r\n            ...this.state.componentsPatternText,\r\n            id: id,\r\n            targetSection: this.props.editComponentName,\r\n        };\r\n        eventEmitter.emit('EventBuildComponents',{\r\n            componentsPatternText,\r\n            type: this.state.componentsPatternText.type,\r\n            component: <TextComponent\r\n                key = {`text${id}`}\r\n                {...componentsPatternText}\r\n                sizeParentBox = {{...this.props.sizeParentBox}}\r\n                id = {id}\r\n            >Title</TextComponent>\r\n        });\r\n        event.stopPropagation();\r\n    }\r\n\r\n    addBackground = event => {\r\n        let id = Math.random().toFixed(3);\r\n\r\n        const componentsPatternBackground = {\r\n            ...this.state.componentsPatternBackground,\r\n            targetSection: this.state.editComponentName,\r\n        };\r\n\r\n        eventEmitter.emit('EventBuildComponents',{\r\n            componentsPatternBackground,\r\n            type: this.state.componentsPatternBackground.type,\r\n            component: <BackgroundComponent\r\n                            targetSection = {this.props.editComponentName}\r\n                            {...componentsPatternBackground}\r\n                            key = {`bg${id}`}\r\n                            id = {id}\r\n                        />\r\n        });\r\n\r\n        event.stopPropagation();\r\n    }\r\n\r\n    addImage = event => {\r\n        let id = Math.random().toFixed(3);\r\n        const componentsPatternImage = {\r\n            ...this.state.componentsPatternImage,\r\n            id: id,\r\n            targetSection: this.props.editComponentName,\r\n        };\r\n        eventEmitter.emit('EventBuildComponents',{\r\n            componentsPatternImage,\r\n            type: this.state.componentsPatternImage.type,\r\n            component: <Image\r\n                            key = {`image${id}`}\r\n                            sizeParentBox = {this.props.sizeParentBox}\r\n                            id = {id}\r\n                            path = {'/img/photoPattern.svg'}\r\n                            {...componentsPatternImage}\r\n                            type = 'image' />\r\n        });\r\n        event.stopPropagation();\r\n    }\r\n\r\n    addMedia = event => {\r\n        let id = Math.random().toFixed(3);\r\n        const  componentsPatternMedia = {\r\n            ...this.state.componentsPatternMedia,\r\n            id: id,\r\n            targetSection: this.props.editComponentName,\r\n        };\r\n\r\n        eventEmitter.emit('EventBuildComponents', {\r\n            componentsPatternMedia,\r\n            type: componentsPatternMedia.type,\r\n            component: <Media\r\n                            key = {`media${id}`}\r\n                            targetSection = {this.props.editComponentName}\r\n                            sizeParentBox = {this.props.sizeParentBox}\r\n                            id = {id}\r\n                            path = {'/img/photoPattern.mp4'}\r\n                            {...componentsPatternMedia}\r\n                            type = 'media' \r\n                        />\r\n        });\r\n        event.stopPropagation();\r\n    }\r\n\r\n    addInput = event => {\r\n        let id = Math.random().toFixed(3);\r\n        const  componentsPatternInput = {\r\n            ...this.state.componentsPatternInput,\r\n            id: id,\r\n            targetSection: this.props.editComponentName,\r\n        };\r\n\r\n        eventEmitter.emit('EventBuildComponents', {\r\n            componentsPatternInput,\r\n            type: componentsPatternInput.type,\r\n            component: <Input\r\n                            key = {`input${id}`}\r\n                            targetSection = {this.props.editComponentName}\r\n                            sizeParentBox = {this.props.sizeParentBox}\r\n                            id = {id}\r\n                            inputType = 'button'\r\n                            {...componentsPatternInput}\r\n                            type = 'input' \r\n                        />\r\n        });\r\n        event.stopPropagation();\r\n    }\r\n\r\n    addSection = event => {\r\n        let id = Math.random().toFixed(3);\r\n        const componentsPatternBackground = {\r\n            ...this.state.componentsPatternBackground,\r\n            targetSection: `Section${id}`,\r\n            id: `Section${id}`,\r\n            type: 'background',\r\n        };\r\n        eventEmitter.emit('EventNewSection', {\r\n            componentsPatternBackground,\r\n            component: <BackgroundComponent\r\n                            {...componentsPatternBackground}\r\n                            key = {`bg${id}`}\r\n                            id = {id}\r\n                            width = '100%'\r\n                            height = '800px'\r\n                            type = 'background'\r\n                        />\r\n        });\r\n        event.stopPropagation();\r\n    }\r\n\r\n    render(){\r\n        if (this.state.mode === 'build'){\r\n            return (\r\n                <div className = 'ComponentsMenu'>\r\n                    <button \r\n                        onClick = {this.addImage} \r\n                        className = 'ImageTool CompoentnsMenu_button' \r\n                    >\r\n                        <span>Image</span>\r\n                    </button>\r\n                    <button \r\n                        onClick = {this.addText} \r\n                        className = 'TextTool CompoentnsMenu_button' >\r\n                        <span>Text</span>\r\n                    </button>\r\n                    <button\r\n                        onClick = {this.addInput}\r\n                        disabled = {this.props.editComponentName !== 'Header' ? false : true}\r\n                        className = 'ButtonTool CompoentnsMenu_button' >\r\n                        <span>Button</span>\r\n                    </button>\r\n                    <button onClick = {this.addMedia}\r\n                        className = 'VideoTool CompoentnsMenu_button'\r\n                    >\r\n                        <span>Video</span>\r\n                    </button>\r\n                </div>\r\n            )\r\n        } else if (this.state.mode === 'section') {\r\n            return (\r\n                <div className = 'sectionMode'>\r\n                    <button\r\n                        onClick = {this.addSection}\r\n                        className = 'newSectionTool CompoentnsMenu_button'\r\n                    >\r\n                        <span>New section</span>\r\n                    </button>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default BuildMenu;","import React,{Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Icon from '../Icon/icon';\r\nimport BuildMenu from '../componentsBuildMenu/BuildMenu';\r\n\r\n\r\nclass Controllers extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        countComponents: PropTypes.number.isRequired, /** @number last project id */\r\n        sizeParentBox: PropTypes.object, /** @Object with width and height parent(bg) */\r\n        menuActive: PropTypes.bool, /** @Bool value active menu or unactive */\r\n    }\r\n\r\n    state = {\r\n        viewComponentMenu: false,\r\n        editComponentName: this.props.editComponentName,\r\n        shiftX: 0,\r\n        shiftY: 0,\r\n        coordsX: '50%',\r\n        coordsY: '0',\r\n        shadowDisplay: 'block'\r\n    }\r\n\r\n    componentMenu = event => {\r\n        this.setState({viewComponentMenu: this.state.viewComponentMenu ? false : true});\r\n        event.stopPropagation();\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <Fragment>\r\n            {\r\n                <div\r\n                ref = {this.refControll}\r\n                className = 'ControllersEditComponent'\r\n                onClick = {this.componentMenu}\r\n                >\r\n                    <Icon\r\n                        onClick = {this.componentMenu}\r\n                        className = 'addButton'\r\n                        path = '/img/addButton.png'\r\n                    />\r\n                    { this.state.viewComponentMenu ?\r\n                        <BuildMenu\r\n                            key = {`buildMenu ${this.state.editComponentName}`}\r\n                            mode = 'build'\r\n                            editComponentName = {this.state.editComponentName}\r\n                            sizeParentBox = {this.props.sizeParentBox}\r\n                            countComponents = {this.props.countComponents}\r\n                        /> : null\r\n                    }\r\n                </div>\r\n            }\r\n            </Fragment>\r\n        )\r\n    }\r\n\r\n    componentDidUpdate = () => {\r\n        if (this.props.editComponentName !== this.state.editComponentName)\r\n            this.setState({\r\n                ...this.state,\r\n                editComponentName: this.props.editComponentName\r\n            })\r\n    }\r\n\r\n}\r\n\r\nexport default Controllers;","import React, {Fragment} from 'react';\r\nimport eventEmitter from '../../../EventEmitter';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport BackgroundComponent from '../components/Background';\r\nimport Loader from '../../loading/Loader';\r\n\r\nimport './MainBackground.scss';\r\n\r\nclass MainBackground extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        children: PropTypes.object.isRequired, /** @Object with name */\r\n        countComponents: PropTypes.number.isRequired, /** @Number last project */\r\n        menuActive: PropTypes.bool.isRequired, /** @Bool active menu or unactive */\r\n        id: PropTypes.string.isRequired, /** @id current project */\r\n    };\r\n\r\n    state = {\r\n        targetSection: this.props.id,\r\n        editRedy: false,\r\n        component: null,\r\n        children: null,\r\n    };\r\n\r\n    changeMode = () => {\r\n        if (!this.state.editStart || this.state.idProject !== this.props.editComponentName) {\r\n            this.setState({\r\n                ...this.state,\r\n                editStart: true\r\n            }, () =>\r\n            eventEmitter.emit('EventModeEdit', {\r\n                ...this.state,\r\n                editStart: true,\r\n                targetSection: this.state.targetSection,\r\n            }));\r\n        }\r\n    };\r\n\r\n    refSection = null;\r\n    refSectionFunc = node => node ? this.refSection = {data: node.getBoundingClientRect(), node: node} : node;\r\n\r\n    render() {\r\n        let props = this.props.currentProjectsData.components.find(item => item.targetSection === this.props.id) || null;\r\n        let children = this.props.mainBuilderData.componentJSX.filter(item => item.targetSection === this.props.id)\r\n        \r\n        if (props)\r\n        return (\r\n            <Fragment>\r\n                <section className = {`element${this.props.sectionNumber}`} ref={this.refSectionFunc}\r\n                data-class = 'editable' onClick = {this.changeMode}>\r\n                    <BackgroundComponent {...props} sectionNumber = {this.props.sectionNumber} >\r\n                        {children.map(item => item.component) || null}\r\n                    </BackgroundComponent>\r\n                    {!this.state.editStart && <div className = 'warningEdit'><p>Click for start edit</p></div>}\r\n                </section>\r\n            </Fragment>\r\n        );\r\n        else return <Loader />;\r\n    }\r\n}\r\nexport default MainBackground;","import React from 'react';\r\nimport MainBackground from './MainBackground/MainBackground';\r\n\r\nconst Section = props => {\r\n\r\n    const {currentProjectsData} = props.userData;\r\n    const section = currentProjectsData.sectionTitleProject;\r\n            return section.map((item,i) => {\r\n                return (\r\n                        <MainBackground\r\n                            key = {item}\r\n                            mainBuilderData = {{...props.mainBuilderData}}\r\n                            currentProjectsData = {{...currentProjectsData}}\r\n                            editComponentName = {props.editComponentName}\r\n                            countComponents = {props.mainBuilderData.componentJSX.length}\r\n                            menuActive = {props.menuActive}\r\n                            sizeParentBox = {props.sizeParentBox}\r\n                            id = {item}\r\n                            sectionNumber = {i}\r\n                        >\r\n                            {{targetSection: props.editComponentName}}\r\n                        </MainBackground>\r\n                );\r\n            });\r\n}\r\n\r\nexport default Section;","import React,{Fragment} from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport {Redirect} from 'react-router-dom';\r\nimport eventEmitter from '../../EventEmitter';\r\n\r\n\r\nimport {animateScroll as scroll, scroller } from \"react-scroll\";\r\n\r\nimport {loadCurrentProjectAction, exitProjectAction} from '../../redux/actions';\r\nimport updateMiddleware from '../../redux/middleware/updateMiddleware';\r\nimport withFirebase from '../../components/firebaseHOC';\r\nimport {connect} from 'react-redux';\r\n\r\nimport AdditionalTools from '../../components/additionalTools/additionalTools';\r\nimport BuilderComponents from '../../components/componentsBuilder/BuilderComponents';\r\nimport Controllers from '../../components/controllers/controllers';\r\nimport Loader from '../../components/loading/Loader';\r\nimport Header from '../../components/header/Header';\r\nimport Section from '../../components/buildComponents/section';\r\nimport BuildMenu from '../../components/componentsBuildMenu/BuildMenu';\r\n\r\nimport './build.scss';\r\n\r\n\r\nclass Build extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        firebase: PropTypes.object.isRequired, /** @firebase class for use firebase functions */\r\n        active: PropTypes.bool, /** @active - status firebase auth */\r\n        dispatch: PropTypes.func.isRequired, /** @dispatch - redux */\r\n        history: PropTypes.object, /** @Router HTML5 history */\r\n        location: PropTypes.object, /** @Router */\r\n        match: PropTypes.object.isRequired, /** @Router */\r\n        userData: PropTypes.object.isRequired, /** @UserData data about projects,user and current edit prject */\r\n    }\r\n\r\n    state = {\r\n            idProject: parseInt(this.props.match.params.param),\r\n            editStart: false,\r\n            position: 0,\r\n            isLoadComponents: true,\r\n            projectEmpty: false,\r\n            componentStats: {},\r\n            mainBuilderData: {\r\n                components: [],\r\n                componentJSX: []\r\n            },\r\n            instrumentPanel: {\r\n                colorPickerActive: false,\r\n                instrumentActive: false,\r\n            },\r\n            scrollConfig: {\r\n                duration: 1000,\r\n                delay: 50,\r\n                smooth: true,\r\n                offset: -80, // Scrolls to element -80 pixels down the page\r\n            },\r\n            editComponentName:  null,\r\n            menuActive: false,\r\n            modalSearch: false,\r\n            modalSearchMode: null,\r\n            modalImageViewer: {action: false, image: null },\r\n            sizeParentBox: null,\r\n        }\r\n\r\n    modalSearchOn = itemEvent => {\r\n        const modeHave = itemEvent.hasOwnProperty('mode');\r\n        this.setState({\r\n            ...this.state, \r\n            modalSearch: !this.state.modalSearch,\r\n            modalSearchMode: modeHave ? itemEvent.mode : null\r\n        });\r\n    }\r\n\r\n    imageViewerSwitch = itemEvent => {\r\n        this.setState({\r\n            ...this.state,\r\n            modalImageViewer: {\r\n                ...this.state.modalImageViewer,\r\n                action: itemEvent.action,\r\n                target: itemEvent.target\r\n            }\r\n        });\r\n    };\r\n\r\n    workModeEdit = itemEvent => {\r\n\r\n        if (itemEvent.editStart)\r\n        this.setState({\r\n            ...this.state,\r\n            editStart: itemEvent.editStart,\r\n            editComponentName: itemEvent.targetSection,\r\n            mainBuilderData: {\r\n                ...this.state.mainBuilderData,\r\n            },\r\n            menuActive: true,\r\n        });\r\n\r\n    }\r\n\r\n    openInstrument = itemEvent => {\r\n            const idEqual = this.state.componentStats.id === itemEvent.componentStats.id;\r\n            if (!idEqual)\r\n            this.setState({\r\n                ...this.state,\r\n                editComponentName: itemEvent.targetSection,\r\n                componentStats: {\r\n                    ...this.state.componentStats,\r\n                    ...itemEvent.componentStats\r\n                },\r\n                instrumentPanel: {\r\n                    ...this.state.instrumentPanel,\r\n                    instrumentActive: true,\r\n                }\r\n            });\r\n    }\r\n\r\n    closePanel = itemEvent => {\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            instrumentPanel: {\r\n                ...this.state.instrumentPanel,\r\n                colorPickerActive: false,\r\n                instrumentActive: itemEvent.close\r\n            }\r\n        });\r\n    };\r\n\r\n    addComponentsFromBD = array => {\r\n\r\n        let {componentJSX} = this.state.mainBuilderData;\r\n        let componentsFromDB = [];\r\n        let components = [...this.state.mainBuilderData.components];\r\n        array.forEach(item => {\r\n            if (item.type !== 'background'){\r\n                let sizeParentBox = {\r\n                    width: this.mainComponent.data.width,\r\n                    height: this.mainComponent.data.height,\r\n                    top: this.mainComponent.data.top,\r\n                    left: this.mainComponent.data.left,\r\n                }\r\n                let component =\r\n                    <BuilderComponents\r\n\r\n                        sizeParentBox = {{...sizeParentBox}}\r\n                        {...item}\r\n                        key = {`${item.type}${item.id}`}\r\n                    />;\r\n\r\n                const patternJSX = {\r\n                    id: item.id,\r\n                    targetSection: item.targetSection,\r\n                    component: component\r\n                };\r\n                componentsFromDB.push(patternJSX);\r\n                components.push(item);\r\n            }\r\n            else components.push(item);\r\n        });\r\n            this.setState({\r\n                ...this.state,\r\n                isLoadComponents: false,\r\n                mainBuilderData: {\r\n                    ...this.state.mainBuilderData,\r\n                    components: [...this.state.mainBuilderData.components,\r\n                                ...components],\r\n                    componentJSX: [...componentJSX, ...componentsFromDB],\r\n                },\r\n            });\r\n    };\r\n\r\n    addComponent = itemEvent => {\r\n        let {componentJSX} = this.state.mainBuilderData;\r\n        let componentsPatternStatus = null;\r\n\r\n        if (itemEvent.type === 'text') \r\n            componentsPatternStatus = itemEvent.componentsPatternText;\r\n        else if (itemEvent.type === 'background')\r\n            componentsPatternStatus = itemEvent.componentsPatternBackground;\r\n        else if (itemEvent.type === 'image')\r\n            componentsPatternStatus = itemEvent.componentsPatternImage;\r\n        else if (itemEvent.type === 'media')\r\n            componentsPatternStatus = itemEvent.componentsPatternMedia;\r\n        else if (itemEvent.type === 'input')\r\n            componentsPatternStatus = itemEvent.componentsPatternInput;\r\n\r\n        const patternJSX = {\r\n            id: componentsPatternStatus.id,\r\n            targetSection: componentsPatternStatus.targetSection,\r\n            component: itemEvent.component\r\n        };\r\n            this.setState({\r\n                ...this.state,\r\n                mainBuilderData: {\r\n                    ...this.state.mainBuilderData,\r\n                    components: [...this.state.mainBuilderData.components,\r\n                                    componentsPatternStatus],\r\n                    componentJSX: [...componentJSX, patternJSX],\r\n                },\r\n            });\r\n    };\r\n\r\n    saveChangesComponent = itemEvent => {\r\n\r\n        const {userData} = this.props;\r\n        let findCurrentItem = false;\r\n        const _components = this.state.mainBuilderData.components.map(item => {\r\n            if (item.id === itemEvent.id) { findCurrentItem = true; return {...itemEvent}; }\r\n            return item;\r\n        });\r\n\r\n        if (!findCurrentItem) _components.push(itemEvent);\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            mainBuilderData: {\r\n                ...this.state.mainBuilderData,\r\n                isChange: false,\r\n                components: _components\r\n            }\r\n        }, () => {\r\n            let {currentProjectsData} =this.props.userData;\r\n        return    (\r\n        this.props.dispatch(updateMiddleware({\r\n            uid: userData.idUser,\r\n            projects: [...userData.projects],\r\n            components: [...this.state.mainBuilderData.components],\r\n            sectionTitleProject: [...currentProjectsData.sectionTitleProject],\r\n            idProject: this.state.idProject}))\r\n        )});\r\n    };\r\n\r\n    mainComponent = null;\r\n    mainRefComponent = node => node ?\r\n        this.mainComponent = {data: node.getBoundingClientRect(), node: node} : node;\r\n\r\n    addNewSection = eventItem => {\r\n\r\n        const {userData} = this.props;\r\n\r\n    this.setState({\r\n        ...this.state,\r\n        mainBuilderData:{\r\n            ...this.state.mainBuilderData,\r\n            components:[\r\n                ...this.state.mainBuilderData.components,\r\n                eventItem.componentsPatternBackground\r\n            ],\r\n            componentJSX:[\r\n                ...this.state.mainBuilderData.componentJSX,\r\n                eventItem.component\r\n            ]\r\n        }\r\n    },\r\n    () => (\r\n        this.props.dispatch(updateMiddleware({\r\n                uid: userData.idUser,\r\n                projects: [...userData.projects],\r\n                components: [...this.state.mainBuilderData.components],\r\n                sectionTitleProject: [\r\n                    ...this.props.userData.currentProjectsData.sectionTitleProject,\r\n                    eventItem.componentsPatternBackground.id\r\n                ],\r\n                idProject: this.state.idProject\r\n        }))\r\n    ));\r\n}\r\n\r\n    moveLocation = event => {\r\n        console.log(this.mainComponent.node.scrollTop);\r\n        if (!this.state.modalSearch){ \r\n            const {sectionTitleProject} = this.props.userData.currentProjectsData;\r\n            const count = sectionTitleProject.length-1;\r\n            const moveDown = this.state.position < count && event.deltaY > 0;\r\n            const moveUp = event.deltaY < 0 && this.state.position > 0;\r\n\r\n            let sizeParentBox = {\r\n                width: this.mainComponent.data.width,\r\n                height: this.mainComponent.data.height,\r\n                top: this.mainComponent.data.top,\r\n                left: this.mainComponent.data.left,\r\n            }\r\n\r\n            if (moveDown){\r\n                this.setState({\r\n                    ...this.state,\r\n                    position: this.state.position + 1,\r\n                    sizeParentBox: sizeParentBox\r\n                }, () => scroller.scrollTo(`element${this.state.position}`,this.state.scrollConfig));\r\n            }  else if (moveUp){\r\n                if (this.state.position === 1){\r\n                    this.setState({\r\n                        ...this.state,\r\n                        position: this.state.position - 1,\r\n                        sizeParentBox: sizeParentBox\r\n                    }, () => scroll.scrollToTop());\r\n                } else {\r\n                    this.setState({\r\n                        ...this.state,\r\n                        position: this.state.position - 1,\r\n                        sizeParentBox: sizeParentBox\r\n                    }, () => scroller.scrollTo(`element${this.state.position}`,this.state.scrollConfig));\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    render(){\r\n        if (this.state.projectEmpty) return <Redirect to = '/Cabinet' />\r\n\r\n        const {instrumentActive} = this.state.instrumentPanel;\r\n        const {userData} = this.props;\r\n        const {currentProjectsData} = userData;\r\n        const section = currentProjectsData.sectionTitleProject;\r\n\r\n        if (userData.active && currentProjectsData.loadProject){\r\n\r\n            return (\r\n                <Fragment>\r\n                    <Header key = 'Header' title = \"Constructor\"  />\r\n                    <div\r\n                        ref = {this.mainRefComponent} \r\n                        onWheel = {this.moveLocation}\r\n                        onMouseMove = {this.showAddSection} \r\n                        className = 'Build' \r\n                        key = 'Build'\r\n                    >\r\n                        { this.state.editStart &&\r\n                        <Controllers\r\n                            key = 'controllers'\r\n                            editComponentName = {this.state.editComponentName}\r\n                            countComponents = {this.state.mainBuilderData.components.length}\r\n                            menuActive = {this.state.menuActive}\r\n                            sizeParentBox = {this.state.sizeParentBox}\r\n                        />\r\n                        }\r\n                            <BuildMenu\r\n                                key = 'buildMenu'\r\n                                countSection = {this.state.mainBuilderData.componentJSX.length * 5}\r\n                                mode = \"section\"\r\n                                className = 'menu'\r\n                            />\r\n                        {instrumentActive && <AdditionalTools key = 'tools' {...this.state} />}\r\n                        {section.length && <Section key = 'section' {...this.state} userData = {userData} />}\r\n                    </div>\r\n                </Fragment>\r\n            )\r\n        } else if (!this.props.firebase.getCurrentUser()) return <Redirect to = '/' />\r\n        else return <Loader  key = 'Loader' path = '/img/loading.gif' type = 'build' />\r\n    }\r\n\r\n    componentDidUpdate = () => {\r\n        let {userData} = this.props;\r\n        let {currentProjectsData} = userData;\r\n        const isLoadComponents = this.state.isLoadComponents;\r\n\r\n        let sizeParentBox = null;\r\n        if (this.mainComponent && this.state.sizeParentBox === null){\r\n            sizeParentBox = {\r\n                width: this.mainComponent.data.width,\r\n                height: this.mainComponent.data.height,\r\n                top: this.mainComponent.data.top,\r\n                left: this.mainComponent.data.left,\r\n            }\r\n        }\r\n\r\n        if (userData.active && !currentProjectsData.loadProject) {\r\n            const current =  userData.projects.find(item => item.id === this.state.idProject)\r\n            current ?\r\n            this.props.dispatch(loadCurrentProjectAction({\r\n                id: current.id,\r\n                typeProject: current.type,\r\n                sectionTitleProject: [...current.sectionTitleProject],\r\n                components: [...current.components]\r\n            })) : this.setState({...this.state, projectEmpty: true, sizeParentBox: sizeParentBox});\r\n        }\r\n        if (currentProjectsData.loadProject && isLoadComponents) {\r\n            if (this.state.sizeParentBox === null && sizeParentBox !== null)\r\n            this.setState({\r\n                ...this.state,\r\n                sizeParentBox: sizeParentBox\r\n            }, () => this.addComponentsFromBD([...currentProjectsData.components]));\r\n            else this.addComponentsFromBD([...currentProjectsData.components]);\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        let {userData} = this.props;\r\n        let {currentProjectsData} = userData;\r\n\r\n        if (userData.active && !currentProjectsData.loadProject) {\r\n\r\n            const current =  userData.projects.find(item => item.id === this.state.idProject)\r\n            this.props.dispatch(loadCurrentProjectAction({\r\n                id: current.id,\r\n                sectionTitleProject: [...current.sectionTitleProject],\r\n                typeProject: current.type,\r\n                components: [...current.components]\r\n            }));\r\n        };\r\n\r\n        eventEmitter.on('EventBuildComponents', this.addComponent);\r\n        eventEmitter.on('EventNewSection', this.addNewSection);\r\n        eventEmitter.on('EventSaveChangesComponent', this.saveChangesComponent);\r\n        eventEmitter.on('EventClosePanel', this.closePanel);\r\n        eventEmitter.on('EventModalSearchOn', this.modalSearchOn);\r\n        eventEmitter.on('EventInstrumentPanel', this.openInstrument);\r\n        eventEmitter.on('EventImageView', this.imageViewerSwitch);\r\n        eventEmitter.on('EventModeEdit', this.workModeEdit);\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n    \r\n        let {userData} = this.props;\r\n        if (userData.active)  this.props.dispatch(exitProjectAction(true));\r\n\r\n        eventEmitter.off('EventBuildComponents', this.addComponent);\r\n        eventEmitter.off('EventNewSection', this.addNewSection);\r\n        eventEmitter.off('EventSaveChangesComponent', this.saveChangesComponent);\r\n        eventEmitter.off('EventModalSearchOn', this.modalSearchOn);\r\n        eventEmitter.off('EventClosePanel', this.closePanel);\r\n        eventEmitter.off('EventInstrumentPanel', this.openInstrument);\r\n        eventEmitter.off('EventImageView', this.imageViewerSwitch);\r\n        eventEmitter.off('EventModeEdit', this.workModeEdit);\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        userData: {\r\n            active: state.cabinet.active,\r\n            idUser: state.cabinet.idUser,\r\n            projects: [...state.cabinet.projects],\r\n           currentProjectsData: {...state.builder}\r\n        },\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(withFirebase(Build));\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport {Route, Switch} from 'react-router-dom';\r\n\r\nimport {middlewareLoadUserData} from './redux/middleware/loadUserMiddleware';\r\nimport {connect} from 'react-redux';\r\nimport withFirebase from './components/firebaseHOC';\r\nimport Loader from './components/loading/Loader';\r\n\r\nimport Index from './Pages/Index/Index';\r\nimport Cabinet from './Pages/Cabinet/Cabinet';\r\nimport Production from './Pages/Production/Production';\r\nimport About from './Pages/About/About';\r\nimport Build from './Pages/Build/Build';\r\nimport ErrorPage from './components/ErrorCatch/ErrorPage';\r\n\r\n// require('es6-promise').polyfill();\r\n\r\nclass App extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        config: PropTypes.object.isRequired, /** @Config app */\r\n        firebase: PropTypes.object.isRequired, /** @firebase class for use firebase functions */\r\n        dispatch: PropTypes.func.isRequired, /** @dispatch - redux */\r\n    }\r\n\r\n    state = {\r\n        firebase: this.props.firebase,\r\n        firebaseLoadState: false,\r\n    }\r\n\r\n    componentDidMount(){\r\n\r\n        this.props.firebase.auth.onAuthStateChanged((user) => {\r\n\r\n            if (!this.state.firebaseLoadState){\r\n                if (user) this.props.dispatch(middlewareLoadUserData(user.uid));\r\n                this.setState({...this.state, firebaseLoadState: true});\r\n            }\r\n        });\r\n    }\r\n\r\n    render(){\r\n        if (this.state.firebaseLoadState){\r\n        return (\r\n            <div>\r\n                <Switch>\r\n                    <Route\r\n                        path = {'/'} exact\r\n                        render = {(props) => <Index {...props} />}\r\n                    />\r\n                    <Route path = '/Cabinet/' exact component = {Cabinet}/>\r\n                    <Route\r\n                        path = {'/Cabinet/About'}\r\n                        render = {(props) => <About {...props} config = {this.props.config} />}\r\n                    />\r\n                    <Route path = {'/Cabinet/Build/:param'} component = {Build}/>\r\n                    <Route path = {'/Cabinet/Production/:param'} component = {Production} />\r\n                    <Route path = {'*'} component = {Index} />\r\n                    <Route path = {'/crashPage'} component = {ErrorPage} />\r\n                </Switch>\r\n                </div>\r\n\r\n        )\r\n        } else return <Loader path = { '/img/loading.gif'} type = 'application' />\r\n    }\r\n}\r\n\r\nexport default connect()(withFirebase(App));","\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\n\nimport firebase from './Firebase/Firebase';\nimport ErrorBoundary from './components/ErrorCatch/ErrorBoundary';\nimport {HashRouter } from 'react-router-dom';\nimport {Provider} from 'react-redux';\nimport store from './redux/store';\nimport App from './App.jsx';\nimport 'normalize.css';\n\nimport firebaseContext from './Firebase/firebaseContext';\n\n\n\nfirebase.saveSession('SESSION');\nconst config = require('./config.json');\n\nReactDOM.render(\n        <HashRouter>\n            <ErrorBoundary>\n                <firebaseContext.Provider value = {firebase}>\n                    <Provider store = {store}>\n                        <App config = {config} />\n                    </Provider>\n                </firebaseContext.Provider>\n            </ErrorBoundary>\n        </HashRouter>,\n        document.getElementById('root')\n);\n\nserviceWorker.register();\n\n"],"sourceRoot":""}