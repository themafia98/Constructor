{"version":3,"sources":["EventEmitter.js","components/Icon/icon.jsx","components/header/Header.jsx","components/modalWindow/ModalWindow.jsx","components/List/Item.jsx","components/List/List.jsx","components/ProjectsSection/ProjectsSection.jsx","Pages/Main.jsx","Pages/About.jsx","Router.jsx","redux/reducerRoot.js","redux/reducers.js","redux/actions.js","index.js"],"names":["stream","EventEmitter","Icon","props","_useState","useState","process","path","Object","slicedToArray","react_default","a","createElement","title","src","alt","iconPath","require","mainIcon","Header","state","redirect","e","_this","history","push","add","console","log","eventStream","emit","action","className","icon","this","children","onClick","React","Component","withRouter","ModalWindow","workMode","newProject","validate","name","type","warning","lengthMax","lengthMin","inputSelect","addNewProject","event","mode","selectOption","inputs","objectSpread","target","value","setState","defineProperty","validateName","lengthInput","length","refSelect","node","onChange","placeholder","react","PureComponent","Item","id","data-id","projects","List","list","toConsumableArray","listCount","addHTML","item","lastProject","lastIndex","makeList","map","project","List_Item","key","componentWillMount","on","componentWillUnmount","off","ProjectsSection","components_List_List","App","changeWorkMode","header_Header","react_router_dom","to","modalWindow_ModalWindow","components_ProjectsSection_ProjectsSection","connect","config","About","about","developer","year","Router","react_router","exact","component","Main","initialState","test","combineReducers","root","arguments","undefined","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","es","src_Router","document","getElementById"],"mappings":"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","file":"static/js/main.63da4a22.chunk.js","sourcesContent":["import {EventEmitter} from 'events';\r\nconst stream = new EventEmitter();\r\nexport default stream;","import React, {useState} from 'react';\r\n\r\nfunction Icon(props){\r\n    const [path] = useState(process.env.PUBLIC_URL);\r\n    return (\r\n    <img\r\n        title = {props.title ? props.title : null}\r\n        src = {path + props.path} alt = 'icon'>\r\n    </img>\r\n    )\r\n}\r\n\r\nexport default Icon;","import React from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport './header.scss';\r\n\r\nimport {withRouter} from 'react-router-dom';\r\n\r\nimport eventStream from '../../EventEmitter.js';\r\nimport Icon from '../Icon/icon';\r\n\r\n\r\nconst iconPath = require('../../config.json').mainIcon;\r\n\r\nclass Header extends React.Component {\r\n\r\n    static propTypes = {\r\n        children: PropTypes.object.isRequired, // jsx\r\n    }\r\n\r\n    state = {\r\n\r\n    }\r\n\r\n    redirect = (e) => {\r\n        this.props.history.push('/About');\r\n    }\r\n\r\n    add = (e) => {\r\n        console.log('add');\r\n        eventStream.emit('EventChangeWorkMode',{action: 'newProject'});\r\n    }\r\n\r\n    render(){\r\n\r\n        return (\r\n            <header>\r\n                <div className = 'container'>\r\n                    <div className = 'flex-row'>\r\n                    <div className = 'col-12'>\r\n                            <div className = 'header__mainInfo'>\r\n                                <Icon path = {iconPath} />\r\n                                    {this.props.children}\r\n                            </div>\r\n                                <div onClick = {this.add} className = 'header__newProject__AddButton'>\r\n                                    <Icon path = '/img/plus.png' />\r\n                                </div>\r\n                                <div onClick = {this.redirect} className = 'Navigator'>\r\n                                    <Icon title = 'about' path = '/img/about_logo.svg' />\r\n                                </div>\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n            </header>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(Header);","import React,{Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport eventStream from '../../EventEmitter.js';\r\n\r\nimport './modal.scss';\r\n\r\nclass ModalWindow extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        mode: PropTypes.string\r\n    }\r\n\r\n    state = {\r\n        workMode: this.props.workMode,\r\n\r\n        newProject: {\r\n            validate: false,\r\n            name: '',\r\n            type: 'empty'\r\n        },\r\n        warning: {\r\n            lengthMax: 'Max length: 20 symbols',\r\n            lengthMin: 'Min length: 3 symbol',\r\n            type: 'Select type of webpage',\r\n        }\r\n    }\r\n\r\n    inputSelect = null;\r\n\r\n    addNewProject = (event) => {\r\n        let mode = this.state[this.state.workMode];\r\n        if (mode.validate &&  mode.type !== 'empty') {\r\n            eventStream.emit('EventAddHTML', \r\n            {\r\n                title: this.state[this.state.workMode].name,\r\n                type: this.state[this.state.workMode].type\r\n            });\r\n\r\n            eventStream.emit('EventChangeWorkMode',{action: 'default'});\r\n        }\r\n    }\r\n\r\n    selectOption = (event) => {\r\n\r\n        let inputs = {...this.state[this.state.workMode]};\r\n        inputs.type = event.target.value;\r\n        this.setState({\r\n            ...this.state,\r\n            [this.state.workMode]: inputs\r\n        })\r\n    }\r\n\r\n    validateName = (event) => {\r\n\r\n        let inputs = {...this.state[this.state.workMode]};\r\n        inputs.name = event.target.value;\r\n        let lengthInput = inputs.name.length;\r\n        inputs.validate = lengthInput > 0 && lengthInput < 20 ? true : false\r\n        console.log(inputs);\r\n        this.setState({\r\n            ...this.state,\r\n            [this.state.workMode]: inputs\r\n        })\r\n    };\r\n\r\n    refSelect = (node) => this.inputSelect = node;\r\n\r\n    render(){\r\n\r\n        switch (this.state.workMode){\r\n\r\n            case 'newProject': {\r\n                return (\r\n                        <div className = 'Modal'>\r\n                            <h3>Create new Project</h3>\r\n                            {\r\n                                this.state[this.state.workMode].name.length <= 0 ?\r\n                                <span className = 'warning'>{this.state.warning.lengthMin}</span> : null\r\n                            }\r\n                            {\r\n                                this.state[this.state.workMode].name.length >= 20 ?\r\n                                <span className = 'warning'>{this.state.warning.lengthMax}</span> : null\r\n                            }\r\n                            <input\r\n                                className = {this.state[this.state.workMode].validate ? 'ready' : 'wrong'}\r\n                                value = {this.state[this.state.workMode].name}\r\n                                onChange = {this.validateName}\r\n                                type = 'text'\r\n                                placeholder = \"Project name\"\r\n                            />\r\n                            {\r\n                                this.state[this.state.workMode].type === 'empty' ?\r\n                                <span className = 'warning'>{this.state.warning.type}</span> : null\r\n                            }\r\n                            <select onChange = {this.selectOption} >\r\n                                <option value = 'empty'>--------</option>\r\n                                <option value = 'landing'>Landing</option>\r\n                                <option value = 'portfolio'>Portfolio</option>\r\n                            </select>\r\n                            <input \r\n                                onClick = {this.addNewProject}\r\n                                className = 'acceptButton'\r\n                                type = 'button'\r\n                                value = 'Submit'\r\n                            />\r\n                        </div>\r\n                )\r\n            }\r\n            default: {\r\n                return (\r\n                    <Fragment></Fragment>\r\n                )\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default ModalWindow;","import React, {useState} from 'react';\r\n\r\nfunction Item(props) {\r\n    const [id] = useState(props.id);\r\n    return (\r\n        <div className = 'item' data-id = {id}>{props.name}</div>\r\n    )\r\n}\r\n\r\nexport default Item;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './list.scss';\r\n\r\nimport Item from './Item';\r\nimport eventStream from '../../EventEmitter.js';\r\nconst projects = require('../../projects.json').projects;\r\n\r\nclass List extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        children: PropTypes.shape({\r\n            projects: PropTypes.array.isRequired,\r\n           count: PropTypes.number.isRequired,\r\n        })\r\n    }\r\n\r\n    state = {\r\n        list: [...projects],\r\n        listCount: projects.length\r\n\r\n    }\r\n    \r\n    addHTML = (item) => {\r\n\r\n        let lastProject = [...this.state.list];\r\n        const lastIndex = lastProject[lastProject.length-1].id + 1;\r\n        lastProject.push({\"id\": lastIndex, \"title\": item.title});\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            list: lastProject,\r\n            listCount: lastProject.length\r\n        });\r\n    }\r\n\r\n    makeList = (list) => {\r\n\r\n        return list.map (project => {\r\n\r\n            return <Item key = {project.id} id = {project.id} name = {project.title} />\r\n        });\r\n    }\r\n\r\n    render(){\r\n        console.log('render');\r\n        return (\r\n            <div className = 'projectsList__list'>\r\n                {this.makeList([...this.state.list])}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    componentWillMount = () => {\r\n        eventStream.on('EventAddHTML', this.addHTML);\r\n      }\r\n    \r\n      componentWillUnmount = () => {\r\n        eventStream.off('EventAddHTML', this.addHTML);\r\n      }\r\n}\r\n\r\nexport default List;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nimport List from '../List/List.jsx';\r\n\r\nimport './ProjectsSection.scss';\r\n\r\nclass ProjectsSection extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        projects: PropTypes.array,\r\n    }\r\n\r\n    render(){\r\n\r\n        return (\r\n                <section className = 'projectsList'>\r\n                <div className = 'container'>\r\n                <div className = 'flex-column'>\r\n                        <div className = 'projectsList__about'>\r\n                            <h3>Your Projects</h3>\r\n                        </div>\r\n                        <List />\r\n                    </div>\r\n                </div>\r\n                </section>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default ProjectsSection;","import React,{Fragment} from 'react';\nimport {NavLink} from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport {connect} from 'react-redux';\n\nimport eventStream from '../EventEmitter.js';\n\nimport Header from '../components/header/Header';\nimport Modal from '../components/modalWindow/ModalWindow';\nimport ProjectsSection from '../components/ProjectsSection/ProjectsSection';\n\nimport './main.scss';\n\nconst title = require('../config.json').title;\n\nclass App extends React.Component {\n\n  static propTypes = {\n    title: PropTypes.string,\n    mode: PropTypes.string,\n  }\n\n  state = {\n    workMode: 'default',\n  }\n\n  changeWorkMode = (event) => {\n    console.log(event.action);\n    this.setState ({\n      ...this.state,\n      workMode: event.action\n    });\n  }\n\n  render(){\n\n    return (\n      <Fragment>\n        <Header><NavLink to = '/'><h3>{title}</h3></NavLink></Header>\n        {(this.state.workMode === 'newProject') ? <Modal workMode = {this.state.workMode} /> : null}\n          <ProjectsSection />\n      </Fragment>\n    )\n  }\n\n  componentDidMount(){\n    eventStream.on('EventChangeWorkMode', this.changeWorkMode);\n  }\n\n  componentWillUnmount(){\n    eventStream.off('EventChangeWorkMode', this.changeWorkMode);\n  }\n}\n\nexport default connect()(App);\n","import React, {Fragment} from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport Header from '../components/header/Header';\r\n\r\n\r\nconst config = require('../config.json');\r\n\r\nclass About extends React.Component {\r\n\r\n    render(){\r\n\r\n        return (\r\n            <Fragment>\r\n                <Header><NavLink to = '/'><h3>{config.title}</h3></NavLink></Header>\r\n                <section className = 'About'>\r\n                    <div className = 'container'>\r\n                        <div className = 'col-12'>\r\n                            <p>Developer: {config.about.developer}</p>\r\n                            <p>Year: {config.about.year}</p>\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default About;","import React from 'react';\r\nimport {Route, Switch} from 'react-router-dom';\r\nimport Main from './Pages/Main';\r\nimport About from './Pages/About';\r\n\r\nclass Router extends React.Component {\r\n\r\n    render(){\r\n        return (\r\n            <Switch>\r\n                <Route path = '/' exact component = {Main}/>\r\n                <Route path = '/About' component = {About}/>\r\n            </Switch>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Router;","import {ROOT_INIT} from './actions';\r\nconst initialState = {\r\n    test: 0,\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n\r\n    switch (action.type){\r\n\r\n        case ROOT_INIT: {\r\n            return {\r\n                ...state,\r\n                test: state.test + 1,\r\n            }\r\n        }\r\n        default: return state;\r\n    }\r\n};","import {combineReducers} from 'redux';\r\nimport reducerRoot from './reducerRoot';\r\n\r\nexport default combineReducers({\r\n    root: reducerRoot,\r\n});","const ROOT_INIT = 'ROOT_INIT';\r\n\r\n\r\nconst testRedux = function(){\r\n    return {\r\n        type: ROOT_INIT,\r\n    }\r\n}\r\n\r\n\r\nexport {\r\n    ROOT_INIT, testRedux\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport {BrowserRouter} from 'react-router-dom';\nimport Router from './Router';\n\nimport {createStore} from 'redux';\nimport {Provider} from 'react-redux';\nimport combineReducers from './redux/reducers';\n\nimport 'normalize.css';\n\nconst store = createStore(combineReducers, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\n\nReactDOM.render(\n    <Provider store = {store}>\n        <BrowserRouter>\n                <Router />\n        </BrowserRouter>\n    </Provider>\n    , document.getElementById('root')\n    );\n\n"],"sourceRoot":""}