{"version":3,"sources":["serviceWorker.js","Firebase/firebaseConfig.js","Firebase/Firebase.js","EventEmitter.js","components/ErrorCatch/ErrorPage.jsx","components/ErrorCatch/ErrorBoundary.jsx","redux/actions.js","redux/reducerBuilder.js","redux/reducerCabinet.js","redux/reducers.js","redux/store.js","redux/middleware/loadUserMiddleware.js","components/firebaseHOC.jsx","components/loading/Loader.jsx","components/Registration/Registration.jsx","Pages/Index/Index.jsx","redux/middleware/middlewareDelete.js","components/Icon/icon.jsx","components/header/Header.jsx","components/imageViewer/imageItem.jsx","components/modalWindow/ModalWindow.jsx","redux/middleware/createProjectMiddleware.js","components/List/Item.jsx","components/List/List.jsx","components/ProjectsSection/ProjectsSection.jsx","Pages/Cabinet/Cabinet.jsx","Pages/About/About.jsx","redux/middleware/updateMiddleware.js","components/buildComponents/components/Text.jsx","components/buildComponents/components/Background.jsx","components/componentsBuilder/BuilderComponents.jsx","components/imageViewer/imageViewer.jsx","components/instrumentsPanel/BackgroundTools/BackgroundInstruments.jsx","components/instrumentsPanel/TextTools/TextInstruments.jsx","components/confirmBox/Confirm.jsx","components/instrumentsPanel/InstrumentsPanel.jsx","components/componentsBuildMenu/BuildMenu.jsx","components/controllers/controllers.jsx","components/buildComponents/MainBackground/MainBackground.jsx","Pages/Build/Build.jsx","App.jsx","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","firebaseConfig","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firebaseInterface","require","Firebase","Object","classCallCheck","this","firebase","auth","db","rules","setPersistence","Auth","Persistence","email","password","signInWithEmailAndPassword","createUserWithEmailAndPassword","signOut","currentUser","stream","EventEmitter","ErrorPage","redirect","update","event","_this","setState","eventEmitter","emit","react_default","a","createElement","react_router","to","class","className","onClick","React","Component","ErrorBoundary","hasError","updateApplication","componentDidMount","on","componentWillUnmount","off","info","ErrorCatch_ErrorPage","props","children","PureComponent","exitProjectAction","type","exit","loadCurrentProjectAction","id","typeProject","sectionTitleProject","components","loadUserAction","active","idUser","uid","projects","errorAction","initialState","loadProject","idProject","combineReducers","builder","arguments","length","undefined","action","objectSpread","toConsumableArray","cabinet","map","item","middleware","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","thunk","withExtraArgument","reduxCatch","getState","lastAction","dispatch","debug","store","createStore","middlewareLogin","_ref2","asyncToGenerator","regenerator_default","mark","_callee","_ref","wrap","_context","prev","next","login","response","collection","doc","user","get","docUser","data","message","stop","_x","_x2","_x3","apply","middlewareLogOutUser","_ref6","_callee3","_ref5","_context3","_x7","_x8","_x9","withFirebase","assign","Loader","_useState","useState","path","slicedToArray","src","alt","emailRef","passwordRef","setRefEmail","node","setRefPassword","createUser","value","Error","set","autoComplete","ref","Index","title","registrationActive","regStatus","wrongEnter","emailImput","passwordImput","statusRegistration","additionalUserInfo","isNewUser","stopPropagation","showBox","authTo","e","components_Registration_Registration","connect","middlewareDelete","filter","itemdb","Icon","_useState3","_useState5","draggable","iconPath","CabinetIcon","Header","redirectAbout","redirectA","redirectCabinet","redirectC","logOut","pathname","add","icon","withRouter","ImageItem","urls","regular","urlRegular","full","urlFull","_useState7","isFull","selected","url","ModalWindow","workMode","images","buttonSearchDisabled","selectedItem","showUrl","imageBoxView","newProject","validateName","validateType","disabled","name","imageMenuActive","warning","lengthMax","lengthMin","inputSearch","inputSelect","searchBackground","api","concat","search","inages","isFetch","ok","json","results","showMenuImage","showImage","target","setSelectedImage","idComponent","makeImageResultBox","items","i","imageItem","key","addNewProject","mode","selectOption","inputs","defineProperty","lengthInput","cancel","refSelect","refSearch","onChange","placeholder","react","middlewareCreateProject","list","lastProject","lastIndex","push","_useState4","canBuild","setCanBuild","_useState9","data-id","List","makeList","project","List_Item","ProjectsSection","components_List_List","Cabinet","deletItem","getCurrentUser","changeWorkMode","header_Header","modalWindow_ModalWindow","components_ProjectsSection_ProjectsSection","about","developer","year","updateMiddleware","newProjects","JSON","parse","stringify","find","Title","styled","h1","attrs","style","display","shadowDisplay","left","coordX","top","coordY","_templateObject","size","textColor","TextComponent","sizeParenBox","color","_useState6","colorText","setColorText","_useState8","sizeText","setSizeText","content","_useState10","contentText","setText","_useState11","_useState12","shiftCoords","setShiftCoords","_useState13","coords","x","y","_useState14","dragNdrop","setDragNdrop","openTitleInstruments","sizeTextValue","changeColorText","changeSizeText","eventSize","changeContentText","eventContent","moveText","pageX","pageY","convertToPercentX","width","convertToPercentY","height","position","toFixed","useEffect","onMouseDown","rect","getBoundingClientRect","onDragStart","onDrag","onDragEnd","onWheel","shiftKey","deltaY","counter","Background","div","Background_templateObject","backgroundColor","backgroundImage","BackgroundComponent","count","setCount","boxComponent","createRef","background","setBgColor","setImage","changeColor","setBackgroundImage","current","focus","boxInform","saveWidth","BuilderComponents","Text","components_Background","ImageViewer","BackgroundInstruments","stats","componentsStats","colorPickerActive","instrumentPanel","cbSetColor","lib","onChangeComplete","cbHandleChangeComplete","cbSearchImage","cbSaveChanges","TextInstruments","fontSize","cbSetSize","min","max","cbSetContent","maxLength","defaultValue","Confirm","cbCancelSave","InstrumentsPanel","isChange","confirmActive","mainBuilderData","updateSizeText","closePanel","close","setSize","setContent","contentValue","updatePosition","eventItem","setColor","updateBimageStats","handleChangeComplete","rgb","colorRGB","r","g","b","saveChanges","searchImage","makePanelInstruments","TextTools_TextInstruments","BackgroundTools_BackgroundInstruments","cancelSave","componentDidUpdate","oldProps","oldState","targetBool","instrumentActive","components_confirmBox_Confirm","BuildMenu","editComponentName","componentsPatternStatus","image","addText","countComponents","component","componentsBuilder_BuilderComponents","addBackground","addSection","countSection","ControllersBox","controllers_templateObject","Controllers","viewComponentMenu","shiftX","shiftY","coordsX","coordsY","componentMenu","saveCoords","controlBox","drag","refControll","menuActive","componentsBuildMenu_BuildMenu","HeaderBuild","changeMode","editStart","currentTarget","refBox","refBackground","bg","componentJSX","readyBuild","controllers","Build","parseInt","params","param","sectionTitleProjectAction","showSectionAddMenu","mainBoxWidth","mainBoxHeight","buildGetComponents","sectionsJSX","modalSearch","modalImageViewer","modalSearchOn","itemEvent","imageViewerSwitch","workModeEdit","openInstrument","targetEqual","idEqual","instumentActive","addComponentsFromBD","array","componentsFromDB","forEach","addComponent","dataBaseData","saveChangesComponent","userData","findCurrentItem","_components","section","currentProjectsData","MainBackground_MainBackground","buildAdditional","imageViewer_imageViewer","instrumentsPanel_InstrumentsPanel","showAddSection","mainComponent","mainRefComponent","addNewSection","onMouseMove","prevProps","_this2","isIncludeComponent","isIncludeComponentJSX","isIclude","App","firebaseLoadState","onAuthStateChanged","_ref4","_callee2","_ref3","_context2","_x4","_x5","_x6","_this3","exact","render","Pages_Index_Index","Pages_About_About","saveSession","ReactDOM","react_router_dom","ErrorCatch_ErrorBoundary","es","src_App","document","getElementById","URL","href","origin","addEventListener","fetch","contentType","headers","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.651ee7ed.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log('This web app is being served cache-first by a service worker.');\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","// setings in root folder / firebase.env\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n    databaseURL: process.env.REACT_APP_DATABASE_URL,\r\n    projectId: process.env.REACT_APP_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n    appId: process.env.REACT_APP_APPID\r\n};\r\n\r\nexport default firebaseConfig;","import * as firebase from 'firebase/app';\r\nimport firebaseConfig from './firebaseConfig';\r\n\r\nconst auth = require('firebase/auth');\r\nconst firestore = require('firebase/firestore');\r\n\r\nclass Firebase {\r\n\r\n    constructor(firebaseConfig){\r\n        firebase.initializeApp(firebaseConfig);\r\n        this.auth = firebase.auth();\r\n        this.db = firebase.firestore();\r\n    }\r\n\r\n    saveSession(rules){\r\n        return this.auth.setPersistence(firebase.auth.Auth.Persistence[rules]);\r\n    }\r\n\r\n    login(email, password){\r\n        try {\r\n            return this.auth.signInWithEmailAndPassword(email, password);\r\n        } catch (error) {\r\n            console.error(error);\r\n            return null;\r\n        }\r\n    }\r\n\r\n    registration(email, password){\r\n        return this.auth.createUserWithEmailAndPassword(email, password)\r\n    }\r\n\r\n    signOut(){\r\n        return this.auth.signOut()\r\n    }\r\n\r\n    getCurrentUser() {\r\n        return this.auth.currentUser\r\n    }\r\n}\r\n\r\nlet firebaseInterface = new Firebase(firebaseConfig);\r\n\r\nexport default firebaseInterface;\r\n\r\nexport { auth, firestore };\r\n\r\n","import {EventEmitter} from 'events';\r\n\r\nconst stream = new EventEmitter();\r\nexport default stream;","import React from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\nimport eventEmitter from '../../EventEmitter';\r\n\r\nimport './errorPage.scss';\r\n\r\n\r\nclass ErrorPage extends React.Component {\r\n\r\n    state = {\r\n        redirect: false,\r\n    }\r\n\r\n    update = event => {\r\n       this.setState({redirect: true},\r\n        () => eventEmitter.emit('EventErrorCatchUpdate'));\r\n    }\r\n\r\n    render(){\r\n        if (this.state.redirect) return <Redirect to = '/' />\r\n        return (\r\n        <div class = 'container'>\r\n            <div class = 'flex-column'>\r\n                <h1>Application crash</h1>\r\n                <button className = 'button_updateApp' onClick = {this.update}>Update</button>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ErrorPage;","\r\nimport React from 'react';\r\nimport eventEmitter from '../../EventEmitter';\r\nimport ErrorPage from './ErrorPage';\r\n\r\nclass ErrorBoundary extends React.PureComponent {\r\n\r\n      state = { \r\n        hasError: false,\r\n      };\r\n\r\n    static getDerivedStateFromError(error) {\r\n        console.log(error);\r\n      // Обновить состояние с тем, чтобы следующий рендер показал запасной UI.\r\n      return { hasError: true};\r\n    }\r\n\r\n    updateApplication = event => {\r\n      this.setState({hasError: false});\r\n    };\r\n  \r\n    componentDidCatch(error, info) {\r\n      // Можно также сохранить информацию об ошибке в соответствующую службу журнала ошибок\r\n     console.error(error + \",\" + info);\r\n    }\r\n  \r\n    render() {\r\n      if (this.state.hasError) return <ErrorPage />\r\n      return this.props.children;\r\n    }\r\n\r\n    componentDidMount = () => {\r\n      eventEmitter.on('EventErrorCatchUpdate',this.updateApplication);\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n      eventEmitter.off('EventErrorCatchUpdate',this.updateApplication);\r\n    }\r\n  }\r\n\r\n  export default ErrorBoundary;","const CREATE_PROJECT = 'CREATE_PROJECT';\r\nconst LOAD_UPDATE_PROJECT = \"LOAD_UPDATE_PROJECT\";\r\nconst LOAD_CURRENT = 'LOAD_CURRENT';\r\nconst LOG_OUT_CABINET = 'LOG_OUT_CABINET';\r\nconst LOAD_USER_CABINET = 'LOAD_USER_CABINET';\r\nconst ERROR_CABINET = 'ERROR_CABINET';\r\nconst EXIT_PROJECT = 'EXIT_PROJECT';\r\n\r\nconst createProjectAction = (state) => {\r\n    return {\r\n        type: CREATE_PROJECT,\r\n        projects: state,\r\n    }\r\n}\r\n\r\nconst exitProjectAction = (state) => {\r\n    return {\r\n        type: EXIT_PROJECT,\r\n        exit: state\r\n    }\r\n}\r\n\r\nconst loadCurrentProjectAction = (state) => {\r\n    return {\r\n        type: LOAD_CURRENT,\r\n        id: state.id,\r\n        typeProject: state.typeProject,\r\n        sectionTitleProject: state.sectionTitleProject,\r\n        components: state.components\r\n    }\r\n}\r\n\r\nconst loadUpdateCurrentProject = (state) => {\r\n    console.log(state);\r\n    return {\r\n        type: LOAD_UPDATE_PROJECT,\r\n        idProject: state.idProject,\r\n        sectionTitleProject: state.sectionTitleProject,\r\n        components: state.components\r\n    }\r\n}\r\n\r\nconst loadUserAction = (state) => {\r\n    return {\r\n        type: LOAD_USER_CABINET,\r\n        active: true,\r\n        idUser: state.uid,\r\n        error: '',\r\n        projects: state.projects\r\n    }\r\n}\r\n\r\nconst logOutAction = (state) => {\r\n\r\n    return {\r\n        type: LOG_OUT_CABINET,\r\n        active: false,\r\n        idUser: null,\r\n        error: '',\r\n        projects: []\r\n    }\r\n}\r\n\r\nconst errorAction = (state) => {\r\n    return {\r\n        type: ERROR_CABINET,\r\n        error: state\r\n    }\r\n}\r\n\r\nexport {\r\n    CREATE_PROJECT, createProjectAction, /* cabinet */\r\n    LOAD_USER_CABINET, loadUserAction, /* cabinet */\r\n    LOG_OUT_CABINET, logOutAction, /* cabinet */\r\n    LOAD_CURRENT, loadCurrentProjectAction, /* builder */\r\n    LOAD_UPDATE_PROJECT, loadUpdateCurrentProject,\r\n    EXIT_PROJECT, exitProjectAction,\r\n    ERROR_CABINET, errorAction, /* both */\r\n}","import {LOAD_CURRENT,LOAD_UPDATE_PROJECT, EXIT_PROJECT} from './actions';\r\n\r\nconst initialState = {\r\n    loadProject: false,\r\n    idProject: null,\r\n    typeProject: null,\r\n    components: [],\r\n    sectionTitleProject: [],\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n    switch (action.type){\r\n\r\n        case LOAD_CURRENT: {\r\n            return {\r\n                ...state,\r\n                loadProject: true,\r\n                idProject: action.id,\r\n                typeProject: action.typeProject,\r\n                components: [...action.components],\r\n                sectionTitleProject: [...action.sectionTitleProject]\r\n            }\r\n        }\r\n\r\n        case LOAD_UPDATE_PROJECT: {\r\n            return {\r\n                ...state,\r\n                components: [...action.components],\r\n            }\r\n        }\r\n\r\n        case EXIT_PROJECT: {\r\n            if (action.exit)\r\n            return {\r\n                ...state,\r\n                loadProject: false,\r\n                idProject: null,\r\n                typeProject: null,\r\n                components: []\r\n            }\r\n            else return state;\r\n        }\r\n        default: return state;\r\n    }\r\n};","import {LOAD_USER_CABINET, LOG_OUT_CABINET, ERROR_CABINET, CREATE_PROJECT, LOAD_UPDATE_PROJECT} from './actions';\r\n\r\nconst initialState = {\r\n    active: false,\r\n    idUser: null,\r\n    projects: [],\r\n    error: null,\r\n    //dateConnect: new Date(Date.now()).toLocaleString().replace(/\\s/ig,'').split(','),\r\n};\r\nconsole.log('reduer');\r\nexport default (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case LOAD_USER_CABINET: {\r\n\r\n            return {\r\n                ...state,\r\n                active: action.active,\r\n                idUser: action.idUser,\r\n                projects: [...action.projects]\r\n            }\r\n        }\r\n\r\n        case CREATE_PROJECT: {\r\n            return {\r\n                ...state,\r\n                projects: [...action.projects]\r\n            }\r\n        }\r\n\r\n        case LOAD_UPDATE_PROJECT: {\r\n            return {\r\n                ...state,\r\n                projects: state.projects.map(item => {\r\n                    if (item.id === action.idProject)\r\n                        item.components = [...action.components]\r\n                return item;\r\n                })\r\n            }\r\n        }\r\n\r\n        case LOG_OUT_CABINET: {\r\n            return {\r\n                ...state,\r\n                active: false,\r\n                idUser: null,\r\n                projects: []\r\n            }\r\n        }\r\n\r\n        case ERROR_CABINET: {\r\n            return {\r\n                ...state,\r\n                error: action.error\r\n            }\r\n        }\r\n        default: return state;\r\n    }\r\n}\r\n\r\n","import {combineReducers} from 'redux';\r\nimport reducerBuilder from './reducerBuilder';\r\nimport reducerCabinet from './reducerCabinet';\r\n\r\nexport default combineReducers({\r\n    builder: reducerBuilder,\r\n    cabinet: reducerCabinet,\r\n});","import {createStore, applyMiddleware, compose} from 'redux';\r\nimport firebase from  '../Firebase/Firebase';\r\nimport reduxCatch from 'redux-catch';\r\nimport thunk from 'redux-thunk';\r\nimport combineReducers from './reducers';\r\n\r\nconst composeEnhancers =\r\n  typeof window === 'object' &&\r\n  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?\r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\r\n    }) : compose;\r\n\r\n    function errorHandler(error, getState, lastAction, dispatch) {\r\n      console.error(error);\r\n      console.debug('current state', getState());\r\n      console.debug('last action was', lastAction);\r\n      // optionally dispatch an action due to the error using the dispatch parameter\r\n    }\r\n\r\nconst middleware = composeEnhancers(\r\n  applyMiddleware(thunk.withExtraArgument({firebase})),\r\n  applyMiddleware(reduxCatch(errorHandler))\r\n);\r\nconst store = createStore(combineReducers, middleware);\r\n\r\n\r\nexport default store;","import {loadUserAction, errorAction, logOutAction} from '../actions';\r\n\r\nconst middlewareLogin = (email,password) => async (dispatch,getState, {firebase}) => {\r\n        await firebase.login(email,password)\r\n        .then(response =>{\r\n            firebase.db.collection(\"users\").doc(response.user.uid).get()\r\n            .then(docUser => {\r\n                let user = docUser.data();\r\n                dispatch(loadUserAction({uid: docUser.id, projects: [...user.projects]}))\r\n            })\r\n        })\r\n        .catch((error) => {\r\n            console.error(error.message);\r\n            dispatch(errorAction(error.message));\r\n        });\r\n    }\r\n\r\nconst middlewareLoadUserData = (uid) => async (dispatch,getState, {firebase}) => {\r\n        await firebase.db.collection(\"users\").doc(uid).get()\r\n        .then(docUser => {\r\n            let user = docUser.data();\r\n            dispatch(loadUserAction({uid: uid, projects: [...user.projects]}))\r\n        })\r\n        .catch((error) => {\r\n            console.error(error.message);\r\n            dispatch(errorAction(error.message));\r\n        });\r\n    }\r\n\r\nconst middlewareLogOutUser = (uid) => async (dispatch,getState, {firebase}) => {\r\n    await firebase.signOut()\r\n    .then (response => {\r\n        dispatch(logOutAction());\r\n    })\r\n    .catch((error) => {\r\n        console.error(error.message);\r\n        dispatch(errorAction(error.message));\r\n    });\r\n}\r\nexport {\r\n    middlewareLogin,middlewareLoadUserData, middlewareLogOutUser\r\n}","import React from 'react';\r\nimport firebase from '../Firebase/Firebase';\r\n\r\nconst withFirebase = Component => props => (\r\n    <Component firebase = {firebase} {...props} />\r\n);\r\n\r\nexport default withFirebase;","import React,{useState} from 'react';\r\n\r\nexport default function(props) {\r\n    const [path] = useState(props.path);\r\n    return (\r\n            <div className = 'loaderBox'>\r\n                <img className = 'loader' src = {path} alt = 'loader'></img> \r\n                <p>Loading {props.type}</p>\r\n            </div>\r\n    )\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport eventEmitter from '../../EventEmitter';\r\nimport './registration.scss';\r\n\r\nimport withFirebase from '../../components/firebaseHOC';\r\n\r\n\r\nclass Registration extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        firebase: PropTypes.object.isRequired, /** @firebase class for use firebase functions */\r\n    }\r\n\r\n    state = {\r\n        firebase: this.props.firebase,\r\n        error: null,\r\n    }\r\n\r\n    emailRef = null;\r\n    passwordRef = null;\r\n\r\n    setRefEmail = (node) => this.emailRef = node;\r\n    setRefPassword = (node) => this.passwordRef = node;\r\n\r\n    createUser = event => {\r\n\r\n        const email = this.emailRef ? this.emailRef.value : null;\r\n        const password = this.passwordRef ? this.passwordRef.value : null;\r\n        const { firebase } = this.props;\r\n\r\n        if (password && email)\r\n        firebase.registration(email, password)\r\n        .then(response => {\r\n            if (!response) throw new Error('Ivaid registration')\r\n            firebase.db.collection(\"users\").doc(response.user.uid).set({\r\n                'projects': [],\r\n                'email': email,\r\n            }).then(() => eventEmitter.emit('EventRegistrationCorrect', response))\r\n        })\r\n        .catch((error) => {\r\n        console.error(error.message);\r\n        this.setState({error: error.message});\r\n        });\r\n        else  return this.setState({error: 'invalid user data'});\r\n    };\r\n\r\n    render(){\r\n        let  { error } = this.state;\r\n        return (\r\n            <div className = 'RegistrationBox'>\r\n                <div  className = 'RegistrationForm'>\r\n                    <h3>Registration</h3>\r\n                    <form autoComplete = 'off' className = 'RegForm'>\r\n                        { error ?\r\n                            <p className = 'error'>{error}</p>\r\n                            : null\r\n                        }\r\n                        <span>E-mail</span>\r\n                        <input ref = {this.setRefEmail} type = 'text' />\r\n                        <span>Password</span>\r\n                        <input className = 'password' autoComplete = \"off\" ref = {this.setRefPassword} type = 'password' />\r\n                        <input onClick = {this.createUser}\r\n                                className = 'loginButton'\r\n                                type = 'button'\r\n                                value = 'registration'\r\n                        />\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\nexport default withFirebase(Registration);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport eventEmitter from '../../EventEmitter';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nimport {middlewareLogin} from '../../redux/middleware/loadUserMiddleware';\r\n\r\nimport Loader from '../../components/loading/Loader';\r\nimport Registration from '../../components/Registration/Registration';\r\n\r\nimport {connect} from 'react-redux';\r\n\r\nimport './index.scss';\r\n\r\nclass Index extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        active: PropTypes.bool, /** @active - status firebase auth */\r\n        dispatch: PropTypes.func.isRequired, /** @dispatch - redux */\r\n        history: PropTypes.object.isRequired, /** @Router HTML5 history */\r\n        location: PropTypes.object.isRequired, /** @Router */\r\n        match: PropTypes.object.isRequired, /** @Router */\r\n        wrongEnter: PropTypes.string, /** @Error about invalid enter */\r\n        config: PropTypes.object, /** @config - app settings */\r\n    }\r\n\r\n    state = {\r\n        title:  \"Constructor\",\r\n        registrationActive: false,\r\n        regStatus: false,\r\n        wrongEnter: false,\r\n        error: ''\r\n    }\r\n\r\n    emailImput = null;\r\n    passwordImput = null;\r\n\r\n    statusRegistration = event => {\r\n        event.additionalUserInfo.isNewUser ?\r\n            this.setState({\r\n                ...this.state,\r\n                regStatus: true,\r\n                registrationActive: false,\r\n                error: 'Account create!'\r\n            })\r\n        : console.error('error registration');\r\n        event.stopPropagation();\r\n    }\r\n\r\n    showBox = event => {\r\n        this.setState ({\r\n            ...this.state,\r\n        registrationActive: this.state.registrationActive ? false : true\r\n        });\r\n        event.stopPropagation();\r\n    }\r\n\r\n    authTo = event => {\r\n            if (this.emailImput && this.passwordImput)\r\n            this.props.dispatch(middlewareLogin(this.emailImput.value, this.passwordImput.value));\r\n            event.stopPropagation();\r\n    }\r\n\r\n    emailRef = node => this.emailImput = node;\r\n    passwordRef = node => this.passwordImput = node;\r\n\r\n    render(){\r\n\r\n        if (this.props.active) return <Redirect to = { '/Cabinet'} />\r\n        else if (!this.props.active) {\r\n            return (\r\n                <div className = 'LoginPage flex-column'>\r\n                        <h1>{this.state.title}</h1>\r\n                        <div className = 'LoginBox'>\r\n                            <div className = 'LoginForm'>\r\n                                <h3>Connect form</h3>\r\n                                {\r\n                                    this.props.wrongEnter || this.state.regStatus ?\r\n                                    <p className = 'error'>{this.props.wrongEnter}</p>\r\n                                    : null\r\n                                }\r\n                                <p>E-mail</p>\r\n                                <input ref = {this.emailRef} type = 'text' />\r\n                                <p>Password</p>\r\n                                <input ref = {this.passwordRef} type = 'password' />\r\n                                <input \r\n                                    onClick = {this.authTo} \r\n                                    className = 'loginButton enterInput'\r\n                                    type = 'button'\r\n                                    value = 'enter' />\r\n                                <input\r\n                                    onClick = {this.showBox}\r\n                                    className = {this.state.registrationActive ?\r\n                                        `loginButton registration selected` : 'loginButton registration'}\r\n                                    type = 'button'\r\n                                    value = 'registration'\r\n                                    />\r\n                            </div>\r\n                        </div>\r\n                        {\r\n                            this.state.registrationActive ?\r\n                            <Registration />\r\n                            : null\r\n                        }\r\n                </div>\r\n            )\r\n        } else  return <Loader path = '/img/loading.gif' type = 'session' />\r\n    }\r\n\r\n    componentDidMount = (e) => {\r\n        eventEmitter.on('EventRegistrationCorrect', this.statusRegistration);\r\n    }\r\n    componentWillUnmount = (e) => {\r\n        eventEmitter.off('EventRegistrationCorrect', this.statusRegistration);\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        active: state.cabinet.active, \r\n        wrongEnter: state.cabinet.error\r\n    }\r\n  }\r\n\r\nexport default connect(mapStateToProps)(Index);","\r\nimport {errorAction, loadUserAction} from '../actions';\r\n\r\nconst middlewareDelete = item => async (dispatch,getState, {firebase}) => {\r\n    await firebase.db.collection('users').doc(item.uid).get()\r\n    .then(user => user.data())\r\n    .then(data => {\r\n        return {id: data.id, projects: data.projects.filter(itemdb => itemdb.id !== item.id)};\r\n    })\r\n    .then(data => {\r\n        firebase.db.collection(\"users\").doc(item.uid).update({\r\n            \"projects\": data.projects\r\n        })\r\n        .then(response => {\r\n            dispatch(loadUserAction({uid: data.id, projects: data.projects}));\r\n        });\r\n    })\r\n    .catch((error) => {\r\n        console.error(error.message);\r\n        dispatch(errorAction(error.message));\r\n    });\r\n}\r\n\r\nexport default middlewareDelete;\r\n","import React, {useState} from 'react';\r\n\r\n\r\nfunction Icon(props){\r\n    const [path] = useState(props.path);\r\n    const [className] = useState(props.className ? props.className : null);\r\n    const [draggable] = useState(props.draggable ? true : false);\r\n\r\n    return (\r\n    <img\r\n        draggable = {draggable}\r\n        onClick = {props.onClick ? props.onClick : null}\r\n        className = {className}\r\n        title = {props.title ? props.title : null}\r\n        src = {process.env.PUBLIC_URL + path } alt = 'icon'>\r\n    </img>\r\n    )\r\n}\r\n\r\nexport default Icon;","import React from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport './header.scss';\r\n\r\nimport {middlewareLogOutUser} from '../../redux/middleware/loadUserMiddleware';\r\nimport {connect} from 'react-redux';\r\nimport {Redirect, withRouter} from 'react-router-dom';\r\n\r\nimport eventEmitter from '../../EventEmitter.js';\r\nimport Icon from '../Icon/icon';\r\n\r\n\r\nconst iconPath = require('../../config.json').CabinetIcon;\r\n\r\nclass Header extends React.Component {\r\n\r\n    static propTypes = {\r\n        title: PropTypes.string.isRequired, /** @Config title app */\r\n        dispatch: PropTypes.func.isRequired, /** @dispatch redux */\r\n        history: PropTypes.object.isRequired, /** @Router HTML5 history */\r\n        location: PropTypes.object.isRequired, /** @Router */\r\n        match: PropTypes.object.isRequired, /** @Router */\r\n    };\r\n\r\n    state = {\r\n        title: this.props.title,\r\n        redirectAbout: {\r\n            path:  '/Cabinet/About',\r\n            redirectA: false,\r\n        },\r\n        redirectCabinet: {\r\n            path:  '/Cabinet',\r\n            redirectC: false,\r\n        }\r\n    };\r\n\r\n    logOut = event => {\r\n        if (this.props.idUser)\r\n            this.props.dispatch(middlewareLogOutUser(this.props.idUser));\r\n        event.stopPropagation();\r\n    };\r\n\r\n    redirectAbout = event => {\r\n        if (this.props.location.pathname !== this.state.redirectAbout.path)\r\n           this.setState({\r\n               redirectAbout: {\r\n                   ...this.state.redirectAbout,\r\n                   redirectA: true\r\n               }\r\n           });\r\n        event.stopPropagation()\r\n    };\r\n\r\n    redirectCabinet = event => {\r\n        if (this.props.location.pathname !== this.state.redirectCabinet.path)\r\n        this.setState({\r\n            redirectCabinet: {\r\n                ...this.state.redirectCabinet,\r\n                redirectC: true\r\n            }\r\n        });\r\n        event.stopPropagation()\r\n    }\r\n\r\n    add = (e) => {\r\n        eventEmitter.emit('EventChangeWorkMode',{action: 'newProject'});\r\n    };\r\n\r\n    render(){\r\n        let {redirectA} = this.state.redirectAbout;\r\n        let {redirectC} = this.state.redirectCabinet;\r\n\r\n        if (redirectA) return <Redirect to = {this.state.redirectAbout.path} />\r\n        if(redirectC) return <Redirect to = {this.state.redirectCabinet.path} />\r\n\r\n        return (\r\n            <header>\r\n                <div className = 'container'>\r\n                    <div className = 'flex-row'>\r\n                            <div onClick = {this.redirectCabinet} className = 'header__CabinetInfo'>\r\n                                <Icon className ='mainIcon' path = {iconPath} />\r\n                                <h3 className = 'tilteApp'>{this.state.title}</h3>\r\n                            </div>\r\n                            {this.props.location.pathname === '/Cabinet' ?\r\n                                <div onClick = {this.add} className = 'header__newProject__AddButton'>\r\n                                    <Icon className = 'Cabinet' path = '/img/plus.png' />\r\n                                </div>\r\n                                : null\r\n                            }\r\n                                <div  className = 'Navigator'>\r\n                                    <Icon className = 'about' onClick = {this.redirectAbout} title = 'about' path = '/img/about_logo.svg' />\r\n                                    <Icon className = 'logoutButton' onClick = {this.logOut} title = 'logOut' path = '/img/logOut.svg' />\r\n                                </div>\r\n                    </div>\r\n               </div>\r\n            </header>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect()(withRouter(Header));","import React, {useState} from 'react';\r\nimport eventEmitter from '../../EventEmitter';\r\n\r\nconst ImageItem = props => {\r\n\r\n    const [id] = useState(props.id);\r\n    const [urlRegular] = useState(props.urls.regular);\r\n    const [urlFull] = useState(props.urls.full);\r\n    const [isFull] = useState(props.isFull);\r\n\r\n    const showImageMenu = event => {\r\n       eventEmitter.emit(\"EventShowMenuImage\", {id: id, url: urlRegular, urlFull: urlFull});\r\n    }\r\n\r\n\r\n    return (\r\n        <div className = {props.selected ? 'ItemBox selected' : 'ItemBox'}>\r\n            <img\r\n                className = 'ImageItem'\r\n                onClick = {showImageMenu}\r\n                src = {isFull ? urlFull : urlRegular}\r\n                alt = 'item'\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ImageItem;","import React,{Fragment} from 'react';\r\nimport isFetch from 'isomorphic-fetch';\r\nimport PropTypes from 'prop-types';\r\nimport eventEmitter from '../../EventEmitter.js';\r\n\r\nimport ImageItem from '../imageViewer/imageItem';\r\nimport Icon from '../Icon/icon';\r\n\r\nimport './modal.scss';\r\n\r\nclass ModalWindow extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        workMode: PropTypes.string.isRequired, /** @Mode for modal */\r\n        idComponent: PropTypes.string || PropTypes.number /** @Id current user project */\r\n    }\r\n\r\n    state = {\r\n        workMode: this.props.workMode,\r\n        images: {\r\n            buttonSearchDisabled: false,\r\n            selectedItem: null, \r\n            showUrl: null, \r\n            images: null,\r\n            urlFull: null,\r\n            imageBoxView: false, \r\n            error: ''\r\n        },\r\n        newProject: {\r\n            validateName: false,\r\n            validateType: false,\r\n            disabled: true,\r\n            name: '',\r\n            type: 'empty'\r\n        },\r\n        imageMenuActive: false,\r\n        warning: {\r\n            lengthMax: 'Max length: 20 symbols',\r\n            lengthMin: 'Min length: 4 symbol',\r\n            type: 'Select type of webpage',\r\n        }\r\n    }\r\n\r\n    inputSearch = null;\r\n    inputSelect = null;\r\n\r\n    searchBackground = event => {\r\n        const mode = 'search/photos/?page=1&per_page=40&query=';\r\n        const api = `https://api.unsplash.com/${mode}`;\r\n        const search = this.inputSearch.value;\r\n\r\n        this.setState({...this.state, images: {...this.state.inages, buttonSearchDisabled: true}})\r\n\r\n        isFetch(`${api + search}&client_id=${process.env.REACT_APP_UNSPLASH_TOKEN}`)\r\n        .then(response => {\r\n            if (response.ok) return response.json();\r\n            else throw new Error('request invalid');\r\n        })\r\n        .then(response => {\r\n\r\n            let {results} = response;\r\n            if (results.length)\r\n            this.setState({\r\n                ...this.state,\r\n                images: {\r\n                    ...this.state.images,\r\n                    imageBoxView: true,\r\n                    error: '',\r\n                    images: [...results],\r\n                    buttonSearchDisabled: false\r\n                },\r\n            });\r\n            else throw new Error('Photos not found');\r\n        })\r\n        .catch(error => {\r\n            console.error(error.message);\r\n            this.setState({\r\n                ...this.state,\r\n                images: {...this.state.images, error: error.message},\r\n                imageBoxView: false,\r\n                buttonSearchDisabled: false\r\n            });\r\n        });\r\n    }\r\n\r\n    showMenuImage = event => {\r\n        this.setState({\r\n            ...this.state, \r\n            imageMenuActive: true,\r\n            images: {\r\n                ...this.state.images,\r\n                selectedItem: event.id, \r\n                showUrl: event.url,\r\n                urlFull: event.urlFull\r\n\r\n            }\r\n        });\r\n    }\r\n\r\n    showImage = event => {\r\n\r\n        const {showUrl} = this.state.images;\r\n        eventEmitter.emit(\"EventImageView\", {action: true, target: showUrl ? showUrl : null});\r\n        event.stopPropagation();\r\n    }\r\n\r\n    setSelectedImage = event => {\r\n\r\n        let images = {...this.state.images};\r\n        eventEmitter.emit(`EventSetBackgroundImage${this.props.idComponent}`,images);\r\n        eventEmitter.emit(`EventSetBImageInstumentPanel`,images);\r\n        event.stopPropagation();\r\n    };\r\n\r\n    makeImageResultBox = (items) => {\r\n        if (!items) return null;\r\n\r\n        return items.map((item,i) =>{\r\n           return <ImageItem \r\n                key = {`item${i}`} \r\n                id = {i}\r\n                selected = {this.state.images.selectedItem === i ? true : false} \r\n                isFull = {false}\r\n                urls = {{...item.urls}} \r\n            />\r\n        });\r\n    }\r\n\r\n    addNewProject = event => {\r\n        let mode = this.state[this.state.workMode];\r\n        if (mode.validateType &&  mode.validateName) {\r\n            eventEmitter.emit('EventAddProject',\r\n            {\r\n                title: this.state[this.state.workMode].name,\r\n                type: this.state[this.state.workMode].type\r\n            });\r\n\r\n            eventEmitter.emit('EventChangeWorkMode',{action: 'default'});\r\n        }\r\n    }\r\n\r\n    selectOption = event => {\r\n\r\n        let inputs = {...this.state[this.state.workMode]};\r\n        inputs.type = event.target.value;\r\n        inputs.validateType = inputs.type !== 'empty';\r\n        inputs.disabled = inputs.validateType && inputs.validateName ? false : true;\r\n        this.setState({\r\n            ...this.state,\r\n            [this.state.workMode]: inputs\r\n        });\r\n    }\r\n\r\n    validateName = event => {\r\n\r\n        let inputs = {...this.state[this.state.workMode]};\r\n        inputs.name = event.target.value;\r\n        let lengthInput = inputs.name.length;\r\n        inputs.validateName = lengthInput >= 4 && lengthInput < 20 ? true : false;\r\n        inputs.disabled = inputs.validateType && inputs.validateName ? false : true;\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            [this.state.workMode]: inputs\r\n        })\r\n    };\r\n\r\n    cancel = event => {\r\n\r\n        if (this.state.workMode === 'Search')\r\n            eventEmitter.emit(\"EventModalSearchOn\");\r\n        else  eventEmitter.emit('EventChangeWorkMode',{action: 'default'});\r\n    }\r\n\r\n    refSelect = (node) => this.inputSelect = node;\r\n    refSearch = node => this.inputSearch = node;\r\n\r\n    render(){\r\n        switch (this.state.workMode){\r\n            case 'newProject':\r\n                return (\r\n                    <div className = 'Modal'>\r\n                        <h3>Create new Project</h3>\r\n                        { this.state[this.state.workMode].name.length <= 3 ?\r\n                            <span className = 'warning'>{this.state.warning.lengthMin}</span> : null\r\n                        }\r\n                        { this.state[this.state.workMode].name.length >= 20 ?\r\n                            <span className = 'warning'>{this.state.warning.lengthMax}</span> : null\r\n                        }\r\n                        <input\r\n                            className = {this.state[this.state.workMode].validateName ? 'ready' : 'wrong'}\r\n                            value = {this.state[this.state.workMode].name}\r\n                            onChange = {this.validateName}\r\n                            type = 'text'\r\n                            placeholder = \"Project name\"\r\n                        />\r\n                        { !this.state[this.state.workMode].validateType ?\r\n                            <span className = 'warning'>{this.state.warning.type}</span> : null\r\n                        }\r\n                        <select onChange = {this.selectOption} >\r\n                            <option value = 'empty'>--------</option>\r\n                            <option value = 'landing'>Landing</option>\r\n                            <option value = 'portfolio'>Portfolio</option>\r\n                        </select>\r\n                        <input \r\n                            onClick = {this.addNewProject}\r\n                            className = 'acceptButton'\r\n                            disabled = {this.state[this.state.workMode].disabled}\r\n                            type = 'button'\r\n                            value = 'Submit'\r\n                        />\r\n                            <input onClick = {this.cancel} type ='button' value = 'Cancel' />\r\n                    </div>\r\n                )\r\n            case 'Search':\r\n                return (\r\n                    <Fragment>\r\n                        <div className = 'Modal Modal-search'>\r\n                            <h3>Search background image</h3>\r\n                            { this.state.images.error ?\r\n                                <span className = 'error'>{this.state.images.error}</span> : null\r\n                            }\r\n                            <input ref = {this.refSearch} type = 'text' placeholder = \"Photo name\" />\r\n                            <input \r\n                                disabled = {this.state.images.buttonSearchDisabled} \r\n                                className = 'acceptButton' \r\n                                type = 'button' \r\n                                value = 'Search'\r\n                                onClick = {this.searchBackground}\r\n                            />\r\n                            <input onClick = {this.cancel} type ='button' value = 'Cancel' />\r\n                            {\r\n                                this.state.images.imageBoxView ?\r\n                                <div className = 'searchResultBox'>\r\n                                    {this.makeImageResultBox([...this.state.images['images']])}\r\n                                </div>\r\n                                : null\r\n                            }\r\n                        </div>\r\n                        {  this.state.imageMenuActive ?\r\n                            <div className = 'ActionModalSearch'>\r\n                            <button onClick = {this.showImage} className = 'actionModalSearch__view'>\r\n                                <Icon path = '/img/view.png' />\r\n                            </button>\r\n                            <button onClick = {this.setSelectedImage} className = 'actionModalSearch__settings'>\r\n                                <Icon path = '/img/settings.png' />\r\n                            </button>\r\n                            </div>\r\n                            : null\r\n                        }\r\n                    </Fragment>\r\n                )\r\n            default: return <Fragment></Fragment>\r\n        }\r\n    }\r\n\r\n    componentDidMount = event => {\r\n        if (this.state.workMode === 'Search')\r\n            eventEmitter.on('EventShowMenuImage', this.showMenuImage);\r\n    }\r\n\r\n    componentWillUnmount = event => {\r\n        if (this.state.workMode === 'Search')\r\n            eventEmitter.off('EventShowMenuImage', this.showMenuImage);\r\n    }\r\n}\r\n\r\nexport default ModalWindow;\r\n\r\n","import {createProjectAction, errorAction} from '../actions';\r\n\r\n\r\nconst middlewareCreateProject = (uid, list, title, type) => async (dispatch,getState, {firebase}) => {\r\n    let lastProject = [...list];\r\n    const lastIndex = lastProject.length  ? lastProject[lastProject.length-1].id + 1 : 0;\r\n    const sectionTitleProject = [];\r\n    if (type === 'portfolio') sectionTitleProject.push(\"Header\");\r\n    else sectionTitleProject.push(\"Header\");\r\n    lastProject.push({\r\n        id: lastIndex,\r\n        title: title,\r\n        type: type,\r\n        components: [],\r\n        sectionTitleProject: [...sectionTitleProject],\r\n    });\r\n\r\n    await firebase.db.collection(\"users\").doc(uid).update({\r\n        'projects': lastProject,\r\n    })\r\n    .then (() => dispatch(createProjectAction(lastProject)))\r\n    .catch(error => {\r\n        console.error(error.message);\r\n        dispatch(errorAction(error.message));\r\n    })\r\n};\r\n\r\nexport {\r\n    middlewareCreateProject\r\n}","import React, {useState} from 'react';\r\nimport eventEmitter from '../../EventEmitter';\r\nimport {withRouter, Redirect} from 'react-router-dom';\r\n\r\nfunction Item(props) {\r\n\r\n    const [path] = useState( `/Cabinet/Build/${props.id}`);\r\n\r\n    let [canBuild,setCanBuild] = useState(false);\r\n\r\n    const [id] = useState(props.id);\r\n    const [name] = useState(props.name);\r\n    const [type] = useState(props.type);\r\n\r\n\r\n    const build = event => {\r\n        if(props.location.pathname !== path)\r\n            setCanBuild(true);\r\n        event.stopPropagation();\r\n    };\r\n\r\n    const deleteItem = event => {\r\n        eventEmitter.emit('EventDeleteItem',{\r\n            id: props.id,\r\n            name: props.name,\r\n            type: props.type\r\n        });\r\n        event.stopPropagation();\r\n    };\r\n\r\n    const showProduction =event => {\r\n        event.stopPropagation();\r\n    }\r\n\r\n    if (canBuild) return <Redirect to = {path} />\r\n    else return (\r\n            <div className = 'item' data-id = {id}>\r\n                <p className = 'ProjectName'>{name}</p>\r\n                <p className = 'ProjectType'>{type}</p>\r\n                <div className = 'projectController'>\r\n                    <input \r\n                        onClick = {build} \r\n                        className = 'projectControllerButton_enter' \r\n                        type = 'button' \r\n                        value = 'enter build' />\r\n                    <input onClick = {deleteItem} \r\n                        className = 'projectControllerButton_delete' \r\n                        type = 'button' \r\n                        value = 'delete' />\r\n                </div>\r\n                <input onClick = {showProduction} \r\n                    className = 'productionButton' \r\n                    type = 'button' \r\n                    value = 'Show demo' />\r\n            </div>\r\n        )\r\n}\r\n\r\nexport default withRouter(Item);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport {middlewareCreateProject} from '../../redux/middleware/createProjectMiddleware';\r\n\r\nimport './list.scss';\r\n\r\nimport Item from './Item';\r\nimport eventEmitter from '../../EventEmitter.js';\r\n\r\nclass List extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        dispatch: PropTypes.func.isRequired, /** @dispatch redux */\r\n        idUser: PropTypes.string.isRequired, /** @UID current user */\r\n        list: PropTypes.array.isRequired, /** @List user projects */\r\n    }\r\n\r\n    state = {\r\n        redirect: false,\r\n    }\r\n\r\n    addNewProject = (item) => {\r\n        if (this.props.idUser) {\r\n            this.props.dispatch(middlewareCreateProject(this.props.idUser, this.props.list, item.title, item.type));\r\n        } else this.setState({...this.state, redirect: true});\r\n    }\r\n\r\n\r\n    makeList = (list) => {\r\n\r\n        return list.map (project => {\r\n\r\n            return(\r\n                <Item\r\n                    key = {project.id}\r\n                    id = {project.id}\r\n                    name = {project.title}\r\n                    type = {project.type}\r\n                />\r\n            )\r\n        });\r\n    }\r\n\r\n    render(){\r\n        if (this.state.redirect)\r\n            return <Redirect to = { '/'} />\r\n            else return (\r\n                    <div className = 'projectsList__list'>\r\n                        {this.makeList([...this.props.list])}\r\n                    </div>\r\n                )\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        eventEmitter.on('EventAddProject',this.addNewProject);\r\n    }\r\n\r\n      componentWillUnmount = () => {\r\n        eventEmitter.off('EventAddProject',this.addNewProject);\r\n      }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        idUser: state.cabinet.idUser,\r\n        list: [...state.cabinet.projects]\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(List);","import React from 'react';\r\n\r\nimport List from '../List/List.jsx';\r\n\r\nimport './ProjectsSection.scss';\r\n\r\nconst ProjectsSection = props => {\r\n\r\n        return (\r\n                <section className = 'projectsList'>\r\n                    <div className = 'container'>\r\n                        <div className = 'flex-column'>\r\n                            <div className = 'projectsList__about'>\r\n                                <h3>Your Projects</h3>\r\n                            </div>\r\n                            {List ? <List /> : null}\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n        )\r\n\r\n}\r\n\r\nexport default ProjectsSection;","import React,{Fragment} from 'react';\nimport PropTypes from 'prop-types';\nimport eventEmitter from '../../EventEmitter.js';\nimport {Redirect} from 'react-router-dom';\nimport withFirebase from '../../components/firebaseHOC';\n\nimport {middlewareLogOutUser} from '../../redux/middleware/loadUserMiddleware';\nimport middlewareDelete from '../../redux/middleware/middlewareDelete';\nimport Loader from '../../components/loading/Loader';\nimport {connect} from 'react-redux';\n\nimport Header from '../../components/header/Header';\nimport Modal from '../../components/modalWindow/ModalWindow';\nimport ProjectsSection from '../../components/ProjectsSection/ProjectsSection';\n\nimport './Cabinet.scss';\n\nconst title = require('../../config.json').title;\n\nclass Cabinet extends React.PureComponent {\n\n  static propTypes = {\n    firebase: PropTypes.object.isRequired, /** @firebase class for use firebase functions */\n    active: PropTypes.bool, /** @active - status firebase auth */\n    dispatch: PropTypes.func.isRequired, /** @dispatch - redux */\n    history: PropTypes.object.isRequired, /** @Router HTML5 history */\n    location: PropTypes.object.isRequired, /** @Router */\n    match: PropTypes.object.isRequired, /** @Router */\n    idUser: PropTypes.string, /** @Session user id from redux */\n    projects: PropTypes.arrayOf(PropTypes.object).isRequired /** @Projects array with user projects from redux */\n  }\n\n  state = {\n    workMode: 'default',\n  }\n\n  logOut = event => {\n    this.props.dispatch(middlewareLogOutUser(this.props.idUser));\n  }\n\n  deletItem = event => {\n    this.props.dispatch(middlewareDelete({...event, uid: this.props.firebase.getCurrentUser().uid}));\n  }\n\n  changeWorkMode = event => {\n    this.setState ({\n      ...this.state,\n      workMode: event.action,\n    });\n  }\n\n  render(){\n\n    if (this.props.active){\n      return (\n        <Fragment>\n          <Header title = {title} idUser = {this.props.idUser} />\n          {(this.state.workMode === 'newProject') ? <Modal workMode = {this.state.workMode} /> : null}\n            <ProjectsSection />\n        </Fragment>\n      )\n    } else if (!this.props.firebase.getCurrentUser()) return <Redirect to = { '/'} />\n    else return <Loader path = '/img/loading.gif' type = 'Cabinet' />\n  }\n\n\n  componentDidMount = () => {\n    eventEmitter.on('EventDeleteItem', this.deletItem);\n    eventEmitter.on('EventChangeWorkMode', this.changeWorkMode);\n  }\n\n  componentWillUnmount = () => {\n    eventEmitter.off('EventDeleteItem', this.deletItem);\n    eventEmitter.off('EventChangeWorkMode', this.changeWorkMode);\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    idUser: state.cabinet.idUser,\n    projects: [...state.cabinet.projects],\n    active: state.cabinet.active\n  }\n}\n\nexport default connect(mapStateToProps)(withFirebase(Cabinet));\n","import React, {Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nimport withFirebase from '../../components/firebaseHOC';\r\nimport Header from '../../components/header/Header';\r\n\r\nimport './about.scss';\r\n\r\nclass About extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        config: PropTypes.object.isRequired, /** @Config app */\r\n        firebase: PropTypes.object.isRequired, /** @firebase class for use firebase functions */\r\n        history: PropTypes.object, /** @Router HTML5 history */\r\n        location: PropTypes.object, /** @Router */\r\n        match: PropTypes.object, /** @Router */\r\n    }\r\n\r\n    state = {\r\n        config: this.props.config\r\n    };\r\n\r\n    render(){\r\n        if (this.props.firebase.getCurrentUser()) {\r\n            const { config } = this.state;\r\n            return (\r\n                <Fragment>\r\n                    <Header title = {config.title} />\r\n                    <section className = 'About'>\r\n                        <div className = 'container'>\r\n                            <div className = 'col-12'>\r\n                                <div className = 'information'>\r\n                                <img alt = 'img' className = 'logoAbout' src = {process.env.PUBLIC_URL + '/img/about.jpg'}/>\r\n                                    <p className ='developer'><span>Developer:</span> {config.about.developer}</p>\r\n                                    <p className = 'year'><span>Year:</span> {config.about.year}</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </section>\r\n                </Fragment>\r\n            )\r\n        } else return <Redirect to = { '/'} />\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default withFirebase(About);","import {errorAction, loadUpdateCurrentProject} from '../actions';\r\n\r\nconst updateMiddleware = (item) => async (dispatch,getState, {firebase}) => {\r\n    console.log('updatae');\r\n    let newProjects = item.projects.map(project => {\r\n        if (project.id === item.idProject) { project.components = [...item.components] }\r\n        return project;\r\n    });\r\n    await firebase.db.collection(\"users\").doc(item.uid).update({\r\n        'projects': JSON.parse(JSON.stringify(newProjects))\r\n    })\r\n    .then(response => {\r\n        let project = item.projects.find(itemdb => itemdb.id === item.idProject);\r\n        dispatch(loadUpdateCurrentProject({\r\n            components: [...project.components],\r\n            idProject: item.idProject,\r\n            sectionTitleProject: item.sectionTitleProject,\r\n        }))\r\n    })\r\n    .catch(error => dispatch(errorAction(error.message)));\r\n};\r\n\r\nexport default updateMiddleware;","\r\nimport React, {useEffect, useState} from 'react';\r\nimport eventEmitter from '../../../EventEmitter';\r\nimport styled from 'styled-components';\r\n\r\n\r\nconst Title = styled.h1.attrs(props => ({\r\n    style: {\r\n        display: props.shadowDisplay ? 'none' : 'block',\r\n        left: props.coordX ? props.coordX : '50%',\r\n        top:  props.coordY,\r\n}}))`\r\n    position: absolute;\r\n    transform: translate(-50%);\r\n    font-size: ${props => props.size};\r\n    color: ${props => props.textColor};\r\n    text-align: center;\r\n    margin: 0;\r\n`;\r\n\r\n// left: ${props => props.coordX ? props.coordX : '50%'};\r\n// top:  ${props => props.coordY};\r\n\r\nconst TextComponent = props =>  {\r\n    const [id] = useState(props.id);\r\n    const [sizeParenBox] = useState({...props.sizeParenBox});\r\n\r\n    let [colorText, setColorText] = useState(props.color);\r\n    let [sizeText, setSizeText] = useState(props.size ? props.size : 120);\r\n    let [contentText, setText] = useState(props.content ? props.content : props.children);\r\n    const [shiftCoords, setShiftCoords] = useState(null)\r\n    const [dragNdrop, setDragNdrop] = useState(props.coords.left ? {x: props.coords.left, y: props.coords.top} : null);\r\n\r\n    const openTitleInstruments = event => {\r\n\r\n        eventEmitter.emit(`EventInstrumentPanel`,{\r\n            target: 'text',\r\n            id: id,\r\n            sizeTextValue: sizeText\r\n        });\r\n        event.stopPropagation();\r\n    }\r\n\r\n    const changeColorText = color => {\r\n        setColorText(color);\r\n    }\r\n\r\n    const changeSizeText = eventSize => {\r\n        const {size} = eventSize;\r\n        setSizeText(size);\r\n    }\r\n\r\n    const changeContentText = eventContent => {\r\n        const {content} = eventContent;\r\n        setText(content);\r\n    }\r\n\r\n\r\n    const didUpdate = event => {\r\n        eventEmitter.on(`EventChangeColorText${id}`, changeColorText);\r\n        eventEmitter.on(`EventChangeSizeText${id}`, changeSizeText);\r\n        eventEmitter.on(`EventChangeContentText${id}`, changeContentText);\r\n        return () => {\r\n            eventEmitter.off(`EventChangeColorText${id}`, changeColorText);\r\n            eventEmitter.off(`EventChangeSizeText${id}`, changeSizeText);\r\n            eventEmitter.off(`EventChangeContentText${id}`, changeContentText);\r\n        }\r\n    }\r\n\r\n    const saveCoords = event => {\r\n\r\n        let rect = event.target.getBoundingClientRect();\r\n        let left = rect.left;\r\n        let top = rect.top;\r\n        let width = rect.width;\r\n        let height = rect.height;\r\n        setShiftCoords({x: event.pageX - left - width/2, y: event.pageY - top + height/2.8});\r\n\r\n        event.stopPropagation();\r\n    }\r\n\r\n    const moveText = event => {\r\n        let coordX = event.pageX - shiftCoords.x;\r\n        let coordY = event.pageY - shiftCoords.y;\r\n\r\n        coordX = coordX <= 130 ? 130 : coordX;\r\n        coordY = coordY <= 0 ? 0 : coordY;\r\n\r\n        let convertToPercentX = (coordX * 100) / sizeParenBox.width;\r\n        let convertToPercentY = (coordY * 100) / sizeParenBox.height;\r\n\r\n        const position = {\r\n            x: convertToPercentX.toFixed(1) + '%', \r\n            y: convertToPercentY.toFixed(1) + '%', \r\n            shadowDisplay: event.type === 'drag' ? true : false\r\n        };\r\n        setDragNdrop(position);\r\n        if (event.type === 'dragend') {\r\n            eventEmitter.emit('EventUpdatePosition', position);\r\n        }\r\n        event.stopPropagation();\r\n    }\r\n\r\n    const weelResizeText = event => {\r\n\r\n        if (event.shiftKey && event.deltaY === -100) {\r\n            let counter = sizeText + 1;\r\n            counter = counter > 200 ? 200 : counter;\r\n            setSizeText(counter);\r\n            eventEmitter.emit('EventUpdateSizeText', counter);\r\n        }\r\n\r\n        if (event.shiftKey && event.deltaY === 100) {\r\n            let counter = sizeText - 1;\r\n             counter = counter <= 10 ? 10 : counter;\r\n             setSizeText(counter);\r\n             eventEmitter.emit('EventUpdateSizeText', counter);\r\n            }\r\n        event.stopPropagation();\r\n    }\r\n    useEffect(didUpdate);\r\n\r\n    return (\r\n        <Title\r\n            onClick={openTitleInstruments}\r\n            textColor = {colorText ? colorText : 'red'}\r\n            size = {sizeText ? sizeText + 'px' : '120px'}\r\n            draggable = {true}\r\n            onMouseDown = {saveCoords}\r\n            onDragStart = {openTitleInstruments}\r\n            onDrag   = {moveText}\r\n            onDragEnd = {moveText}\r\n            onWheel = {weelResizeText}\r\n            coordX = {dragNdrop ? dragNdrop.x : null}\r\n            coordY = {dragNdrop ? dragNdrop.y : null}\r\n            shadowDisplay = {dragNdrop ? dragNdrop.shadowDisplay : false}\r\n        >\r\n            {contentText}\r\n        </Title>\r\n    )\r\n}\r\n\r\nexport default TextComponent;","import React, {useEffect, useState} from 'react';\r\nimport eventEmitter from '../../../EventEmitter';\r\nimport styled from 'styled-components';\r\n\r\n\r\nconst Background = styled.div`\r\n    position: relative;\r\n    width: 100%;\r\n    height: 95vh;\r\n    background-size: cover;\r\n    background-color: ${props => props.backgroundColor};\r\n    background-image: url(${props => props.backgroundImage});\r\n`;\r\n\r\nconst BackgroundComponent = props => {\r\n\r\n    const [id] = useState(props.id);\r\n\r\n    const [count, setCount] = useState(0);\r\n    let boxComponent = React.createRef();\r\n\r\n    let [backgroundColor, setBgColor] = useState(props.background);\r\n    let [backgroundImage, setImage] = useState(props.backgroundImage ? props.backgroundImage : null);\r\n\r\n    const saveWidth = event => {\r\n        setCount(count + 1);\r\n        boxComponent.current.focus();\r\n        let boxInform =  boxComponent.current.getBoundingClientRect();\r\n        eventEmitter.emit('EventSaveWidth', {width: boxInform.width, height: boxInform.height});\r\n    }\r\n\r\n    const openBgInstruments = event => {\r\n        eventEmitter.emit('EventInstrumentPanel',{\r\n            target: 'background',\r\n            id: id,\r\n        });\r\n        event.stopPropagation();\r\n    }\r\n\r\n    const changeColor = color => {\r\n        setBgColor(color);\r\n    }\r\n\r\n    const setBackgroundImage = event => {\r\n        const {urlFull} = event;\r\n        setImage(urlFull);\r\n    };\r\n\r\n    const didUpdate = () => {\r\n        if (count === 0 ) saveWidth();\r\n        eventEmitter.on(`EventChangeColorBackground${id}`, changeColor);\r\n        eventEmitter.on(`EventSetBackgroundImage${id}`, setBackgroundImage);\r\n        return () => {\r\n            eventEmitter.off(`EventChangeColorBackground${id}`, changeColor);\r\n            eventEmitter.off(`EventSetBackgroundImage${id}`, setBackgroundImage);\r\n        }\r\n    }\r\n\r\n    useEffect(didUpdate);\r\n    return (\r\n        <Background\r\n            ref  = {boxComponent}\r\n            onClick={openBgInstruments}\r\n            backgroundColor = {backgroundColor ? backgroundColor : props.background}\r\n            backgroundImage = {backgroundImage ? backgroundImage : props.backgroundImage}\r\n        >\r\n            {props.children}\r\n        </Background>\r\n    )\r\n}\r\n\r\nexport default BackgroundComponent;","import React,{useState} from 'react';\r\n\r\n\r\nimport TextComponent from '../buildComponents/components/Text';\r\nimport BackgroundComponent from '../buildComponents/components/Background';\r\n\r\nconst BuilderComponents = props => {\r\n\r\n    console.log('builder');\r\n    const [target] = useState(props.target);\r\n    let [id] = useState(props.id);\r\n    let [size] = useState(props.size);\r\n    let [color] = useState(props.color ? props.color : 'red');\r\n    let [content] = useState(props.content ? props.content : null);\r\n    let [type] = useState(props.type);\r\n\r\n    if (type === 'text'){\r\n        return <TextComponent\r\n                    sizeParenBox = {{...props.sizeParenBox}}\r\n                    id = {id}\r\n                    size = {size}\r\n                    color = {color}\r\n                    coords = {{...props.coords}}\r\n                    key = {`text${id}`}\r\n                    target = {target}\r\n                >\r\n                    {content}\r\n                </TextComponent>\r\n    }\r\n\r\n    if (type === 'background'){\r\n        return <BackgroundComponent \r\n                target = {target}\r\n                color = {color}\r\n                size = {size}\r\n                id = {id} \r\n                key = {`bg${id}`}/>;\r\n    }\r\n};\r\n\r\nexport default BuilderComponents;","import React,{useState} from 'react';\r\nimport eventEmitter from '../../EventEmitter';\r\n\r\nimport './imageViewer.scss';\r\n\r\nfunction ImageViewer(props){\r\n\r\n    let [path] = useState(props.path);\r\n\r\n    const closeViewer = event => {\r\n        eventEmitter.emit(\"EventImageView\", { action: false, target: null});\r\n        event.stopPropagation();\r\n    }\r\n\r\n    return (\r\n        <div onClick = {closeViewer} className = 'ImageViewer'>\r\n            <img src = {path} alt = 'fullImage' />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ImageViewer;","import React, {Fragment} from 'react';\r\nimport {SketchPicker} from 'react-color';\r\n\r\nconst BackgroundInstruments = props => {\r\n\r\n    const stats = props.componentsStats;\r\n    let {colorPickerActive} = props.instrumentPanel;\r\n\r\n    return (\r\n        <Fragment>\r\n        <p className = 'titleInstument'>Color: </p>\r\n        <input\r\n            onClick = {props.cbSetColor}\r\n            className = 'button_switchColor'\r\n            type = 'button'\r\n            value = 'color pick'\r\n        />\r\n            { colorPickerActive ?\r\n                <SketchPicker\r\n                    onChangeComplete={props.cbHandleChangeComplete}\r\n                    color = {stats.color ? stats.color : 'red'}\r\n                />\r\n                : null\r\n            }\r\n            <input \r\n                onClick = {props.cbSearchImage}\r\n                className = 'ImageSearchButton'\r\n                type = 'button'\r\n                value = 'background-image'\r\n            />\r\n            <input \r\n                onClick = {props.cbSaveChanges}\r\n                className = 'saveButtonInstument'\r\n                type = 'button'\r\n                value = 'save changes'\r\n            />\r\n        </Fragment>\r\n    )\r\n\r\n}\r\n\r\nexport default BackgroundInstruments;","import React,{Fragment} from 'react';\r\nimport {SketchPicker} from 'react-color';\r\n\r\nconst TextInstruments = props => {\r\n\r\n        const stats = props.componentsStats;\r\n        let {colorPickerActive} = props.instrumentPanel;\r\n        let {content} = stats;\r\n        let {fontSize} = stats;\r\n        let {coords} = stats;\r\n\r\n        return (\r\n            <Fragment>\r\n            <p className = 'titleInstument'>Position: </p>\r\n            <span className = 'textCoordsPanel'>\r\n            {coords.left ?\r\n                coords.left + ' / ' + coords.top : ' drop for active'}\r\n            </span>\r\n            <p className = 'titleInstument'>Color: </p>\r\n            <input \r\n                onClick = {props.cbSetColor}\r\n                className = 'button_switchColor'\r\n                type = 'button'\r\n                value = 'color pick'\r\n            />\r\n            <p className = 'titleInstument'>Text size: </p>\r\n            <input \r\n                onChange = {props.cbSetSize}\r\n                type=\"number\"\r\n                min = '10' max = '200'\r\n                value = {fontSize ? fontSize : 120 }\r\n            />\r\n                { colorPickerActive ?\r\n                    <SketchPicker\r\n                    onChangeComplete={props.cbHandleChangeComplete}\r\n                    color = {stats.color ? stats.color : 'red'}\r\n                    />\r\n                    : null\r\n                }\r\n            <p className = 'titleInstument'>Content: </p>\r\n            <input\r\n                onChange = {props.cbSetContent}\r\n                maxLength = '20'\r\n                type = 'text'\r\n                defaultValue = {content}\r\n            />\r\n            <input \r\n                onClick = {props.cbSaveChanges}\r\n                className = 'saveButtonInstument'\r\n                type = 'button'\r\n                value = 'save changes'\r\n            />\r\n            </Fragment>\r\n        )\r\n}\r\n\r\nexport default TextInstruments;","import React from 'react';\r\n\r\nimport './Confirm.scss';\r\n\r\nconst Confirm = props => {\r\n\r\n    return (\r\n        <div className = 'wrapperConfirm'>\r\n            <div className = 'confirmSave'>\r\n                <span>Detected new changes</span>\r\n                <input\r\n                    className = 'saveCofirm'\r\n                    onClick = {props.cbSaveChanges}\r\n                    type = 'button'\r\n                    value = 'Save changes'\r\n                />\r\n                <input\r\n                    className = 'cancelCofirm'\r\n                    onClick = {props.cbCancelSave}\r\n                    type = 'button'\r\n                    value = 'Cancel'\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Confirm;","import React, {Fragment} from 'react';\r\nimport eventEmitter from '../../EventEmitter';\r\nimport PropTypes from 'prop-types';\r\nimport './instrumentsPanel.scss';\r\n\r\nimport BackgroundInstruments from './BackgroundTools/BackgroundInstruments';\r\nimport TextInstruments from './TextTools/TextInstruments';\r\n\r\nimport Confirm from '../confirmBox/Confirm';\r\nimport Icon from '../Icon/icon';\r\n\r\nclass InstrumentsPanel extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        instrumentPanel:  PropTypes.object.isRequired, /** @Settings for panel and data about component */\r\n        editComponentName: PropTypes.string.isRequired /** @Name editable component */\r\n    };\r\n\r\n    state = {\r\n        isChange: false,\r\n        confirmActive: false,\r\n        instrumentPanel: {...this.props.instrumentPanel},\r\n        componentsStats: this.props.mainBuilderData.components.find(item =>\r\n                    {return item.id === this.props.instrumentPanel.idComponent }),\r\n        images: null,\r\n    };\r\n\r\n    updateSizeText = eventSize => {\r\n        this.setState({\r\n            ...this.state,\r\n            instrumentPanel: {...this.state.instrumentPanel},\r\n            componentsStats: {\r\n                ...this.state.componentsStats,\r\n                fontSize: eventSize\r\n            }\r\n        });\r\n    };\r\n\r\n    closePanel = event => {\r\n        if (!this.state.isChange)\r\n        eventEmitter.emit('EventClosePanel', {close: false});\r\n        else this.setState({...this.state, confirmActive: true});\r\n    };\r\n\r\n    setSize = event => {\r\n        let {idComponent} = this.state.instrumentPanel;\r\n        let size = event.target.value > 200 ? 200 : event.target.value;\r\n        this.setState({\r\n            ...this.state, \r\n            instrumentPanel: {...this.state.instrumentPanel},\r\n            componentsStats: {...this.state.componentsStats,fontSize: size}\r\n        },\r\n            () => eventEmitter.emit(`EventChangeSizeText${idComponent}`, {size: size })\r\n        );\r\n    };\r\n\r\n    setContent = event => {\r\n        let {idComponent} = this.state.instrumentPanel;\r\n        let contentValue = event.target.value;\r\n        this.setState({\r\n            ...this.state, \r\n            instrumentPanel: {...this.state.instrumentPanel},\r\n            componentsStats: {...this.state.componentsStats,content: contentValue}\r\n        },\r\n        () => eventEmitter.emit(`EventChangeContentText${idComponent}`,{content: contentValue}));\r\n    };\r\n\r\n    updatePosition = eventItem => {\r\n        this.setState({\r\n            ...this.state, \r\n            componentsStats: {\r\n                ...this.state.componentsStats,\r\n                coords: {\r\n                    ...this.state.componentsStats.coords,\r\n                    left: eventItem.x,\r\n                    top: eventItem.y\r\n                }\r\n            }\r\n        });\r\n    };\r\n\r\n    setColor = event => {\r\n        this.setState({...this.state,\r\n            instrumentPanel:{\r\n                ...this.state.instrumentPanel,\r\n                colorPickerActive: this.state.instrumentPanel.colorPickerActive ? false : true\r\n            }\r\n        });\r\n    };\r\n\r\n    updateBimageStats = eventItem => {\r\n        const {urlFull} = eventItem;\r\n        this.setState({\r\n            ...this.state,\r\n            componentsStats:{\r\n                ...this.state.componentsStats,\r\n                backgroundImage: urlFull\r\n            }\r\n        });\r\n    };\r\n\r\n    handleChangeComplete = event => {\r\n\r\n        const {rgb} = event;\r\n        let colorRGB = `rgb(${rgb.r},${rgb.g},${rgb.b},${rgb.a})`;\r\n\r\n        let {idComponent} = this.state.instrumentPanel;\r\n        if (this.state.instrumentPanel.target === 'background'){\r\n            this.setState({\r\n                ...this.state,\r\n                componentsStats: {...this.state.componentsStats,color: colorRGB}\r\n            }, () => eventEmitter.emit(`EventChangeColorBackground${idComponent}`, colorRGB));\r\n        }\r\n\r\n        else if (this.state.instrumentPanel.target === 'text') {\r\n            this.setState({\r\n                ...this.state,\r\n                componentsStats: {...this.state.componentsStats,color: colorRGB}\r\n            },\r\n            () => eventEmitter.emit(`EventChangeColorText${idComponent}`, colorRGB));\r\n        }\r\n\r\n    };\r\n\r\n    saveChanges = event => {\r\n\r\n        this.setState({...this.state, isChange: false, confirmActive: false}, () =>\r\n        eventEmitter.emit(\"EventSaveChangesComponent\", {\r\n            ...this.state.componentsStats,\r\n            id: this.state.instrumentPanel.idComponent,\r\n            type: this.state.instrumentPanel.target,\r\n        }));\r\n\r\n        event.stopPropagation();\r\n    }\r\n\r\n    searchImage = event => {\r\n\r\n        let {idComponent} = this.state.instrumentPanel;\r\n        eventEmitter.emit('EventModalSearchOn', {idComponent: idComponent});\r\n\r\n        event.stopPropagation();\r\n    };\r\n\r\n    makePanelInstruments = (type) => {\r\n            switch (type){\r\n                case 'text':\r\n                   return(\r\n                    <TextInstruments\r\n                        instrumentPanel = {{...this.state.instrumentPanel}}\r\n                        componentsStats = {{...this.state.componentsStats}}\r\n                        cbSetColor = {this.setColor}\r\n                        cbSetSize = {this.setSize}\r\n                        cbHandleChangeComplete = {this.handleChangeComplete}\r\n                        cbSetContent = {this.setContent}\r\n                        cbSaveChanges = {this.saveChanges}\r\n                    />\r\n                   )\r\n                case 'background':\r\n                    return (\r\n                        <BackgroundInstruments\r\n                            instrumentPanel = {{...this.state.instrumentPanel}}\r\n                            componentsStats = {{...this.state.componentsStats}}\r\n                            cbSetColor = {this.setColor}\r\n                            cbHandleChangeComplete = {this.handleChangeComplete}\r\n                            cbSearchImage = {this.searchImage}\r\n                            cbSaveChanges = {this.saveChanges}\r\n                        />\r\n                    )\r\n                default: return <p className = 'warningInstruments'>\r\n                                    Select elements for accses edit instruments\r\n                                </p>\r\n            }\r\n    };\r\n\r\n\r\n    cancelSave = event => {\r\n        this.setState({...this.state, isChange: false, confirmActive: false});\r\n        event.stopPropagation();\r\n    }\r\n\r\n\r\n    render(){\r\n        let { instrumentActive } = this.state.instrumentPanel;\r\n\r\n        return (\r\n            <Fragment>\r\n                { this.state.confirmActive ?\r\n                    <Confirm cbSaveChanges = {this.saveChanges} cbCancelSave = {this.cancelSave} /> : null\r\n                }\r\n                <div  className = 'instumentsPanel'>\r\n                    <button\r\n                        onClick = {this.closePanel}\r\n                        className = 'closeInstrumentsPanel'\r\n                    >\r\n                        <Icon path = '/img/close.svg' />\r\n                    </button>\r\n                    <h3>Instruments</h3>\r\n                    {\r\n                        instrumentActive ? \r\n                        <p className = 'TextComponent'>{this.state.instrumentPanel.target}</p>\r\n                        : null\r\n                    }\r\n                    {\r\n                        instrumentActive ?\r\n                        <div className = 'instuments'>\r\n                            {this.makePanelInstruments(this.state.instrumentPanel.target)}\r\n                        </div>\r\n                        : null\r\n                    }\r\n                </div>\r\n            </Fragment>\r\n        )\r\n    };\r\n\r\n    componentDidUpdate = (oldProps, oldState) => {\r\n\r\n        let targetBool = oldState.instrumentPanel.target !== this.props.instrumentPanel.target;\r\n        let idBool = oldState.instrumentPanel.idComponent !== this.props.instrumentPanel.idComponent;\r\n        if ((idBool || targetBool) && !this.state.isChange){\r\n            this.setState({\r\n                ...this.state,\r\n                instrumentPanel: {...this.props.instrumentPanel, colorPickerActive: false, isChange: false},\r\n                componentsStats: this.props.mainBuilderData.components.find(item =>\r\n                    {return item.id === this.props.instrumentPanel.idComponent }),\r\n            });\r\n        } else if (this.state.componentsStats !== oldState.componentsStats &&\r\n                !this.state.isChange) this.setState({...this.state, isChange: true});\r\n        else if (targetBool && this.state.isChange) this.setState({...this.state, confirmActive: true});\r\n    };\r\n\r\n    componentDidMount = event => {\r\n        eventEmitter.on(\"EventUpdateSizeText\", this.updateSizeText);\r\n        eventEmitter.on(\"EventSetBImageInstumentPanel\", this.updateBimageStats);\r\n        eventEmitter.on(\"EventUpdatePosition\", this.updatePosition);\r\n    };\r\n\r\n    componentWillUnmount = event => {\r\n        console.log('componentWillUnmount');\r\n        eventEmitter.off(\"EventUpdateSizeText\", this.updateSizeText);\r\n        eventEmitter.off(\"EventSetBImageInstumentPanel\", this.updateBimageStats);\r\n        eventEmitter.off(\"EventUpdatePosition\", this.updatePosition);\r\n    };\r\n};\r\n\r\nexport default InstrumentsPanel;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport BuilderComponents from '../componentsBuilder/BuilderComponents';\r\n\r\nimport eventEmitter from '../../EventEmitter';\r\nimport './buildMenu.scss';\r\n\r\nclass BuildMenu extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        mode: PropTypes.string.isRequired, /** @String work mode component */\r\n        countSection: PropTypes.number, /** @Number for new section id */\r\n        components: PropTypes.object, /** @Object with components data */\r\n        countComponents: PropTypes.number, /** @Number last project */\r\n        sizeParenBox: PropTypes.object /** @Object with width and height parent(bg) */\r\n    }\r\n\r\n    state = {\r\n        editComponentName: this.props.editComponentName,\r\n        mode: this.props.mode,\r\n        componentsPatternStatus: {\r\n            id: null,\r\n            name: null,\r\n            type: null,\r\n            content: null,\r\n            fontSize: null,\r\n            color: null,\r\n            backgroundImage: null,\r\n            image: null,\r\n            coords: {left: null, top: null}, // x, y\r\n        },\r\n        sizeParenBox: {...this.props.sizeParenBox},\r\n        title: 'Title'\r\n    }\r\n\r\n    addText = event => {\r\n        console.log('add');\r\n        let id = this.props.countComponents;\r\n        eventEmitter.emit('EventBuildComponents',{\r\n            componentsPatternStatus: {\r\n                ...this.state.componentsPatternStatus,\r\n                id: id,\r\n                name: this.state.editComponentName,\r\n                type: 'text',\r\n            },\r\n            component: <BuilderComponents\r\n                            target = {this.state.editComponentName}\r\n                            key = {`text${id}`}\r\n                            sizeParenBox = {this.props.sizeParenBox}\r\n                            content = \"Title\"\r\n                            id = {id}\r\n                            type = 'text' />\r\n        });\r\n        event.stopPropagation();\r\n    }\r\n\r\n    addBackground = event => {\r\n        let id = this.props.countComponents;\r\n        eventEmitter.emit('EventBuildComponents',{\r\n            componentsPatternStatus: {\r\n                ...this.state.componentsPatternStatus,\r\n                name: this.state.editComponentName,\r\n                type: 'background',\r\n            },\r\n            component: <BuilderComponents\r\n                            target = {this.state.editComponentName}\r\n                            key = {`bg${id}`}\r\n                            id = {id}\r\n                            type = 'background'\r\n                        />\r\n        });\r\n\r\n        event.stopPropagation();\r\n    }\r\n\r\n    addSection = event => {\r\n        let id = this.props.countSection + 1;\r\n        eventEmitter.emit('EventNewSection', {\r\n            componentsPatternStatus: {\r\n                ...this.state.componentsPatternStatus,\r\n                name:  `Section${id}`,\r\n                id: `Section${id}`,\r\n                type: 'background',\r\n            },\r\n           \r\n            type:'section',\r\n            component: <BuilderComponents\r\n            target = {this.state.editComponentName}\r\n            key = {`bg${id}`}\r\n            id = {id}\r\n            type = 'background'\r\n        />\r\n        });\r\n        event.stopPropagation();\r\n    }\r\n\r\n    render(){\r\n\r\n        if (this.state.mode === 'build'){\r\n            return (\r\n                <div className = 'ComponentsMenu'>\r\n                    <button \r\n                        onClick = {this.addBackground} \r\n                        className = 'ImageTool CompoentnsMenu_button' \r\n                    >\r\n                        <span>Image</span>\r\n                    </button>\r\n                    <button \r\n                        onClick = {this.addText} \r\n                        className = 'TextTool CompoentnsMenu_button' >\r\n                        <span>Text</span>\r\n                    </button>\r\n                    <button\r\n                        disabled = {this.state.editComponentName !== 'Header' ? false : true}\r\n                        className = 'ButtonTool CompoentnsMenu_button' >\r\n                        <span>Button</span>\r\n                    </button>\r\n                    <button\r\n                        className = 'VideoTool CompoentnsMenu_button'\r\n                    >\r\n                        <span>Video</span>\r\n                    </button>\r\n                </div>\r\n            )\r\n        } else if (this.state.mode === 'section') {\r\n            return (\r\n                <div className = 'sectionMode'>\r\n                    <button\r\n                        onClick = {this.addSection}\r\n                        className = 'newSectionTool CompoentnsMenu_button'\r\n                    >\r\n                        <span>New section</span>\r\n                    </button>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default BuildMenu;","import React,{Fragment} from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Icon from '../Icon/icon';\r\nimport BuildMenu from '../componentsBuildMenu/BuildMenu';\r\n\r\n\r\nconst ControllersBox = styled.div\r\n    .attrs(props =>({\r\n        style: {\r\n                left: props.coordX,\r\n                top: props.coordY,\r\n        }\r\n    })) `\r\n    position: absolute;\r\n    display: ${props => props.shadowDisplay}\r\n    `;\r\n\r\nclass Controllers extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        countComponents: PropTypes.number.isRequired, /** @number last project id */\r\n        sizeParenBox: PropTypes.object, /** @Object with width and height parent(bg) */\r\n        components: PropTypes.object.isRequired, /** @Object with componnents data */\r\n        menuActive: PropTypes.bool, /** @Bool value active menu or unactive */\r\n    }\r\n\r\n    state = {\r\n        viewComponentMenu: false,\r\n        shiftX: 0,\r\n        shiftY: 0,\r\n        coordsX: '50%',\r\n        coordsY: '0',\r\n        shadowDisplay: 'block'\r\n    }\r\n\r\n    componentMenu = event => {\r\n        this.setState({viewComponentMenu: this.state.viewComponentMenu ? false : true});\r\n        event.stopPropagation();\r\n    }\r\n\r\n    saveCoords = event => {\r\n        let left = this.controlBox.getBoundingClientRect().left;\r\n        let top = this.controlBox.getBoundingClientRect().top;\r\n        this.setState({...this.state, shiftX: event.pageX - left, \r\n        shiftY: event.pageY - top + 55 });\r\n\r\n        event.stopPropagation();\r\n    }\r\n\r\n    drag = event => {\r\n        if (!this.state.viewComponentMenu)\r\n            this.setState({\r\n                ...this.state,\r\n                coordsX: event.pageX - this.state.shiftX + 'px', \r\n                coordsY: event.pageY - this.state.shiftY + 'px',\r\n                shadowDisplay: event.type === 'drag' ? 'none' : 'block'\r\n            });\r\n        event.stopPropagation();\r\n    }\r\n\r\n    controlBox = null;\r\n    refControll = (node) => this.controlBox = node;\r\n\r\n\r\n    render(){\r\n        return (\r\n            <Fragment>\r\n            { this.props.menuActive ?\r\n                <ControllersBox\r\n                ref = {this.refControll}\r\n                className = 'ControllersEditComponent'\r\n                coordX = {this.state.coordsX}\r\n                coordY = {this.state.coordsY}\r\n                draggable = {!this.state.viewComponentMenu}\r\n                onMouseDown = {this.saveCoords}\r\n                onClick = {this.componentMenu}\r\n                onDrag   = {this.drag}\r\n                onDragEnd = {this.drag}\r\n                shadowDisplay = {this.state.shadowDisplay}\r\n                >\r\n                    <Icon\r\n                        draggable = {true}\r\n                        onClick = {this.componentMenu}\r\n                        className = 'addButton'\r\n                        path = '/img/addButton.png'\r\n                    />\r\n                    {this.state.viewComponentMenu ? \r\n                        <BuildMenu\r\n                            mode = 'build'\r\n                            editComponentName = {this.props.editComponentName}\r\n                            sizeParenBox = {this.props.sizeParenBox}\r\n                            countComponents = {this.props.countComponents}\r\n                            components = {{...this.props.components}}\r\n                        /> : null\r\n                    }\r\n                </ControllersBox>\r\n                : null\r\n            }\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Controllers;","import React, {Fragment} from 'react';\r\nimport eventEmitter from '../../../EventEmitter';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nimport BackgroundComponent from '../components/Background';\r\nimport Controllers from '../../controllers/controllers';\r\nimport './MainBackground.scss';\r\n\r\nclass HeaderBuild extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        children: PropTypes.object.isRequired, /** @Object with name */\r\n        countComponents: PropTypes.number.isRequired, /** @Number last project */\r\n        editStart: PropTypes.bool.isRequired, /** @Bool start edit mode */\r\n        menuActive: PropTypes.bool.isRequired, /** @Bool active menu or unactive */\r\n        id: PropTypes.number.isRequired, /** @id current project */\r\n    }\r\n\r\n    state = {\r\n        idProject: this.props.id,\r\n        components: {...this.props.children},\r\n    }\r\n\r\n    changeMode = event => {\r\n        console.log(event);\r\n        if (!this.props.editStart) {\r\n            let rect = event.currentTarget.getBoundingClientRect();\r\n            const width = rect.width;\r\n            const height = rect.height;\r\n            eventEmitter.emit('EventModeEdit', {\r\n                ...this.state,\r\n                target: 'Header',\r\n                width: width,\r\n                height: height\r\n            });\r\n        }\r\n    }\r\n\r\n    refBox = null;\r\n    refBackground = node => this.refBox = node;\r\n\r\n    render() {\r\n        let bg = this.props.mainBuilderData.components.find(item => item.id === \"MainBackgroundHeader\");\r\n        if (bg === undefined) bg = {};\r\n        return (\r\n            <Fragment>\r\n                <div onClick = {this.changeMode} className = 'Header'>\r\n                    <BackgroundComponent id = 'MainBackgroundHeader' {...bg}>\r\n                    {  this.props.mainBuilderData.componentJSX ?\r\n                            this.props.mainBuilderData.componentJSX : null\r\n                    }\r\n                    </BackgroundComponent>\r\n                    {!this.props.editStart ? <p className = 'warningEdit'>Click for start edit</p> : null}\r\n                    {!this.state.readyBuild ? \r\n                        <Controllers\r\n                            editComponentName = {this.props.editComponentName}\r\n                            countComponents = {this.props.countComponents}\r\n                            menuActive = {this.props.menuActive}\r\n                            components = {{...this.state.components}}\r\n                            sizeParenBox = {this.props.sizeParenBox}\r\n\r\n                        />\r\n                        : null}\r\n                </div>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\nexport default HeaderBuild;","import React,{Fragment} from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport {Redirect} from 'react-router-dom';\r\nimport eventEmitter from '../../EventEmitter';\r\n\r\nimport {loadCurrentProjectAction, exitProjectAction} from '../../redux/actions';\r\nimport updateMiddleware from '../../redux/middleware/updateMiddleware';\r\nimport withFirebase from '../../components/firebaseHOC';\r\nimport {connect} from 'react-redux';\r\n\r\nimport BuilderComponents from '../../components/componentsBuilder/BuilderComponents';\r\n\r\nimport ImageViewer from '../../components/imageViewer/imageViewer';\r\nimport Loader from '../../components/loading/Loader';\r\nimport Header from '../../components/header/Header';\r\nimport InstrumentsPanel from '../../components/instrumentsPanel/InstrumentsPanel';\r\nimport ModalWindow from '../../components/modalWindow/ModalWindow';\r\nimport MainBackground from '../../components/buildComponents/MainBackground/MainBackground';\r\n\r\nimport BuildMenu from '../../components/componentsBuildMenu/BuildMenu';\r\n\r\nimport './build.scss';\r\n\r\n\r\nclass Build extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        firebase: PropTypes.object.isRequired, /** @firebase class for use firebase functions */\r\n        active: PropTypes.bool, /** @active - status firebase auth */\r\n        dispatch: PropTypes.func.isRequired, /** @dispatch - redux */\r\n        history: PropTypes.object, /** @Router HTML5 history */\r\n        location: PropTypes.object, /** @Router */\r\n        match: PropTypes.object.isRequired, /** @Router */\r\n        userData: PropTypes.object.isRequired, /** @UserData data about projects,user and current edit prject */\r\n    }\r\n\r\n    state = {\r\n            idProject: parseInt(this.props.match.params.param),\r\n            sectionTitleProjectAction: true,\r\n            showSectionAddMenu: false,\r\n            mainBuilderData: {\r\n                mainBoxWidth: null,\r\n                mainBoxHeight: null,\r\n                buildGetComponents: false,\r\n                components: [],\r\n                sectionsJSX: [],\r\n                componentJSX: []\r\n            },\r\n            instrumentPanel: {\r\n                colorPickerActive: false,\r\n                instrumentActive: false,\r\n                target: '',\r\n                idComponent: null,\r\n            },\r\n            editComponentName:  null,\r\n            menuActive: false,\r\n            editStart: false,\r\n            modalSearch: false,\r\n            modalImageViewer: {action: false, image: null },\r\n        }\r\n\r\n    modalSearchOn = itemEvent => {\r\n        this.setState({...this.state, modalSearch: this.state.modalSearch ? false : true});\r\n    }\r\n\r\n    imageViewerSwitch = itemEvent => {\r\n        this.setState({\r\n            ...this.state,\r\n            modalImageViewer: {\r\n                ...this.state.modalImageViewer, \r\n                action: itemEvent.action, \r\n                target: itemEvent.target\r\n            }\r\n        });\r\n    };\r\n\r\n    workModeEdit = itemEvent => {\r\n        if (!this.state.editStart)\r\n        this.setState({\r\n            ...this.state,\r\n            idProject: itemEvent.idProject,\r\n            editComponentName: itemEvent.target,\r\n            mainBuilderData: {\r\n                ...this.state.mainBuilderData,\r\n                mainBoxWidth: itemEvent.width,\r\n                mainBoxHeight: itemEvent.height,\r\n            },\r\n            menuActive: true,\r\n            editStart: true\r\n        });\r\n\r\n    }\r\n\r\n    openInstrument = itemEvent => {\r\n        const targetEqual = this.state.instrumentPanel.target !== itemEvent.target;\r\n        const idEqual = this.state.instrumentPanel.idComponent !== itemEvent.id;\r\n        const instumentActive = this.state.instrumentPanel.instrumentActive;\r\n        if ((targetEqual || !instumentActive || idEqual) && this.state.editStart)\r\n        this.setState({\r\n            ...this.state,\r\n            instrumentPanel: {\r\n                ...this.state.instrumentPanel,\r\n                instrumentActive: true,\r\n                sizeTextValue: itemEvent.sizeTextValue,\r\n                idComponent: itemEvent.id,\r\n                target: itemEvent.target\r\n            }\r\n        })\r\n    }\r\n\r\n    closePanel = itemEvent => {\r\n        this.setState({\r\n            ...this.state,\r\n            instrumentPanel: {\r\n                ...this.state.instrumentPanel,\r\n                colorPickerActive: false,\r\n                instrumentActive: itemEvent.close\r\n            }\r\n        });\r\n    };\r\n\r\n    addComponentsFromBD = array => {\r\n\r\n        let componentsFromDB = [];\r\n        let components = [...this.state.mainBuilderData.components];\r\n        array.forEach(item => {\r\n            if (item.type !== 'background'){\r\n                let component =\r\n                    <BuilderComponents\r\n                        sizeParenBox = {{...this.state.sizeParenBox}}\r\n                        coords = {{...item.coords}}\r\n                        size = {item.fontSize}\r\n                        color = {item.color}\r\n                        id = {item.id}\r\n                        type = {item.type}\r\n                        key = {`${item.type}${item.id}`}\r\n                        content = {item.content ? item.content : 'Title'}\r\n                    />\r\n                componentsFromDB.push(component);\r\n                components.push(item);\r\n            }\r\n            else components.push(item);\r\n        });\r\n        this.addComponent({\r\n            components: components,\r\n            target: this.state.editComponentName,\r\n            dataBaseData: componentsFromDB, mode: 'DB'});\r\n    }\r\n\r\n    addComponent = itemEvent => {\r\n        console.log('add');\r\n        let {componentJSX} = this.state.mainBuilderData;\r\n        if (itemEvent.mode !== 'DB')\r\n            this.setState({\r\n                ...this.state,\r\n                mainBuilderData: {\r\n                    ...this.state.mainBuilderData,\r\n                    components: [...this.state.mainBuilderData.components,\r\n                                itemEvent.componentsPatternStatus],\r\n                    componentJSX: [...componentJSX, {...itemEvent.component}]\r\n                },\r\n            });\r\n        else {\r\n            this.setState({\r\n                ...this.state,\r\n                mainBuilderData: {\r\n                    ...this.state.mainBuilderData,\r\n                    components: [...this.state.mainBuilderData.components,\r\n                                ...itemEvent.components],\r\n                    componentJSX: [...componentJSX, ...itemEvent.dataBaseData]\r\n                },\r\n            });\r\n        }\r\n    };\r\n\r\n    saveChangesComponent = itemEvent => {\r\n\r\n        const {userData} = this.props;\r\n        let findCurrentItem = false;\r\n        const _components = this.state.mainBuilderData.components.map(item => {\r\n            if (item.id === itemEvent.id) { findCurrentItem = true; return {...itemEvent}; }\r\n            return item;\r\n        });\r\n\r\n        if (!findCurrentItem) _components.push(itemEvent);\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            mainBuilderData: {\r\n                ...this.state.mainBuilderData,\r\n                isChange: false,\r\n                components: _components\r\n            }\r\n        }, () => (\r\n        this.props.dispatch(updateMiddleware({\r\n            uid: userData.idUser,\r\n            projects: [...userData.projects],\r\n            components: [...this.state.mainBuilderData.components],\r\n            idProject: this.state.idProject}))\r\n        ));\r\n    };\r\n\r\n    saveWidth = eventItem => {\r\n        this.setState({sizeParenBox: {...eventItem}});\r\n    };\r\n\r\n    sectionTitleProject = section => {\r\n        const {userData} = this.props;\r\n        const {currentProjectsData} = userData;\r\n        return section.map(item => {\r\n            if (item === 'Header')\r\n            return (\r\n                <MainBackground\r\n                    key = 'HeaderBuild'\r\n                    mainBuilderData = {{...this.state.mainBuilderData}}\r\n                    currentProjectsData = {{...this.props.userData.currentProjectsData}}\r\n                    editStart = {this.state.editStart}\r\n                    editComponentName = {this.state.editComponentName}\r\n                    countComponents = {this.state.mainBuilderData.componentJSX.length}\r\n                    menuActive = {this.state.menuActive}\r\n                    sizeParenBox = {this.state.sizeParenBox}\r\n                    id = {currentProjectsData.idProject}\r\n                >\r\n                    {{name: this.state.editComponentName}}\r\n                </MainBackground>\r\n            );\r\n            else return item;\r\n        })\r\n    }\r\n\r\n    buildAdditional = () => {\r\n        const {instrumentActive} = this.state.instrumentPanel;\r\n        return (\r\n            <Fragment key = 'AdditionalBuild'>\r\n                {   this.state.modalImageViewer.action ?\r\n                    <ImageViewer key = 'ImageViewer' path = {this.state.modalImageViewer.target} />\r\n                    : null\r\n                }\r\n                {this.state.modalSearch ?\r\n                    <ModalWindow\r\n                        idComponent = {this.state.instrumentPanel.idComponent}\r\n                        key = 'ModalWindow' workMode = 'Search' /> : null\r\n                }\r\n                { instrumentActive ?\r\n                    <InstrumentsPanel\r\n                        key = 'InstrumentsPanel'\r\n                        editComponentName = {this.state.editComponentName}\r\n                        mainBuilderData =  {{...this.state.mainBuilderData}}\r\n                        instrumentPanel = {{...this.state.instrumentPanel}}\r\n                    />\r\n                    : null\r\n                }\r\n                {this.state.showSectionAddMenu ?\r\n                    <BuildMenu \r\n                        countSection = {this.state.mainBuilderData.sectionsJSX.length}\r\n                        mode = \"section\"\r\n                        className = 'menu'\r\n                    />\r\n                    : null\r\n                }\r\n            </Fragment>\r\n        )\r\n    }\r\n\r\n    showAddSection = event => {\r\n        if (event.pageY > 780 && !this.state.showSectionAddMenu){\r\n            this.setState({\r\n                ...this.state,\r\n                showSectionAddMenu: true,\r\n            });\r\n        } else if (event.pageY < 780 && this.state.showSectionAddMenu){\r\n            this.setState({\r\n                ...this.state,\r\n                showSectionAddMenu: false,\r\n            });\r\n        }\r\n        event.stopPropagation();\r\n    }\r\n    mainComponent = null;\r\n    mainRefComponent = node => this.mainComponent = node;\r\n\r\n    render(){\r\n        const {userData} = this.props;\r\n        const {currentProjectsData} = userData;\r\n\r\n        if (userData.active && currentProjectsData.loadProject){\r\n            return (\r\n                    <div ref = {this.mainRefComponent} onMouseMove = {this.showAddSection} className = 'Build' key = 'Build'>\r\n                        <Header key = 'Header' title = \"Constructor\"  />\r\n                        {this.buildAdditional()}\r\n                        {this.sectionTitleProject(currentProjectsData.sectionTitleProject)}\r\n                    </div>\r\n            )\r\n        } else if (!this.props.firebase.getCurrentUser()) return <Redirect to = { '/'} />\r\n        else return <Loader  key = 'Loader' path = '/img/loading.gif' type = 'build' />\r\n    }\r\n\r\n    addNewSection = eventItem => {\r\n        console.log(eventItem);\r\n        this.setState({\r\n            ...this.state,\r\n            mainBuilderData:{\r\n                ...this.state.mainBuilderData,\r\n                sectionsJSX: [\r\n                    ...this.state.mainBuilderData.sectionsJSX,\r\n                    eventItem.componentsPatternStatus.id\r\n                ],\r\n                components:[\r\n                    ...this.state.mainBuilderData.components,\r\n                    eventItem.componentsPatternStatus\r\n                ],\r\n                componentJSX:[\r\n                    ...this.state.mainBuilderData.componentJSX,\r\n                    eventItem.component\r\n                ]\r\n            }\r\n        })\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n\r\n        let {userData} = this.props;\r\n        let {currentProjectsData} = userData;\r\n        const isIncludeComponent = currentProjectsData.components.length;\r\n        const isIncludeComponentJSX = this.state.mainBuilderData.componentJSX.length;\r\n        const isIclude = isIncludeComponent && !isIncludeComponentJSX;\r\n\r\n        if (userData.active && !currentProjectsData.loadProject) {\r\n            const current =  userData.projects.find(item => item.id === this.state.idProject)\r\n            this.props.dispatch(loadCurrentProjectAction({\r\n                id: current.id,\r\n                typeProject: current.type,\r\n                sectionTitleProject: [...current.sectionTitleProject],\r\n                components: [...current.components]\r\n            }));\r\n        }\r\n        if (currentProjectsData.loadProject && isIclude && this.state.editStart)\r\n            this.addComponentsFromBD([...currentProjectsData.components]);\r\n    }\r\n\r\n    componentDidMount = () => {\r\n\r\n        let {userData} = this.props;\r\n        let {currentProjectsData} = userData;\r\n\r\n        if (userData.active && !currentProjectsData.loadProject) {\r\n            console.log('load prjoect');\r\n            const current =  userData.projects.find(item => item.id === this.state.idProject)\r\n            this.props.dispatch(loadCurrentProjectAction({\r\n                id: current.id,\r\n                sectionTitleProject: [...current.sectionTitleProject],\r\n                typeProject: current.type,\r\n                components: [...current.components]\r\n            }));\r\n        };\r\n\r\n        eventEmitter.on('EventBuildComponents', this.addComponent);\r\n        eventEmitter.on('EventNewSection', this.addNewSection);\r\n        eventEmitter.on('EventSaveChangesComponent', this.saveChangesComponent);\r\n        eventEmitter.on('EventSaveWidth', this.saveWidth);\r\n        eventEmitter.on('EventClosePanel', this.closePanel);\r\n        eventEmitter.on('EventModalSearchOn', this.modalSearchOn);\r\n        eventEmitter.on('EventInstrumentPanel', this.openInstrument);\r\n        eventEmitter.on('EventImageView', this.imageViewerSwitch);\r\n        eventEmitter.on('EventModeEdit', this.workModeEdit);\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n\r\n        let {userData} = this.props;\r\n        if (userData.active)  this.props.dispatch(exitProjectAction(true));\r\n\r\n        eventEmitter.off('EventBuildComponents', this.addComponent);\r\n        eventEmitter.off('EventNewSection', this.addNewSection);\r\n        eventEmitter.off('EventSaveChangesComponent', this.saveChangesComponent);\r\n        eventEmitter.off('EventSaveWidth', this.saveWidth);\r\n        eventEmitter.off('EventModalSearchOn', this.modalSearchOn);\r\n        eventEmitter.off('EventClosePanel', this.closePanel);\r\n        eventEmitter.off('EventInstrumentPanel', this.openInstrument);\r\n        eventEmitter.off('EventImageView', this.imageViewerSwitch);\r\n        eventEmitter.off('EventModeEdit', this.workModeEdit);\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        userData: {\r\n            active: state.cabinet.active,\r\n            idUser: state.cabinet.idUser,\r\n            projects: [...state.cabinet.projects],\r\n            currentProjectsData: {...state.builder}\r\n        },\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(withFirebase(Build));","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport {Route, Switch} from 'react-router-dom';\r\n\r\nimport {middlewareLoadUserData} from './redux/middleware/loadUserMiddleware';\r\nimport {connect} from 'react-redux';\r\nimport withFirebase from './components/firebaseHOC';\r\nimport Loader from './components/loading/Loader';\r\n\r\nimport Index from './Pages/Index/Index';\r\nimport Cabinet from './Pages/Cabinet/Cabinet';\r\nimport About from './Pages/About/About';\r\nimport Build from './Pages/Build/Build';\r\nimport ErrorPage from './components/ErrorCatch/ErrorPage';\r\n\r\n// require('es6-promise').polyfill();\r\n\r\nclass App extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        config: PropTypes.object.isRequired, /** @Config app */\r\n        firebase: PropTypes.object.isRequired, /** @firebase class for use firebase functions */\r\n        dispatch: PropTypes.func.isRequired, /** @dispatch - redux */\r\n    }\r\n\r\n    state = {\r\n        firebase: this.props.firebase,\r\n        firebaseLoadState: false,\r\n    }\r\n\r\n    componentDidMount(){\r\n\r\n        this.props.firebase.auth.onAuthStateChanged((user) => {\r\n\r\n            if (!this.state.firebaseLoadState){\r\n                if (user){console.log('load'); this.props.dispatch(middlewareLoadUserData(user.uid)); }\r\n                this.setState({...this.state, firebaseLoadState: true});\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    render(){\r\n        if (this.state.firebaseLoadState){\r\n            console.log('app');\r\n        return (\r\n                <Switch>\r\n                    <Route\r\n                        path = {'/'} exact\r\n                        render = {(props) => <Index {...props} />}\r\n                    />\r\n                    <Route path = '/Cabinet/' exact component = {Cabinet}/>\r\n                    <Route\r\n                        path = {'/Cabinet/About'}\r\n                        render = {(props) => <About {...props} config = {this.props.config} />}\r\n                    />\r\n                    <Route path = {'/Cabinet/Build/:param'} component = {Build}/>\r\n                    <Route path = {'*'} component = {Index} />\r\n                    <Route path = {'/crashPage'} component = {ErrorPage} />\r\n                </Switch>\r\n\r\n        )\r\n        } else return <Loader path = { '/img/loading.gif'} type = 'application' />\r\n    }\r\n}\r\n\r\n// const mapStateToProps = (state) => {\r\n//     return {\r\n//       active: state.cabinet.active\r\n//     }\r\n//   }\r\n\r\nexport default connect()(withFirebase(App));","\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\n\nimport firebase from './Firebase/Firebase';\nimport ErrorBoundary from './components/ErrorCatch/ErrorBoundary';\nimport {HashRouter } from 'react-router-dom';\nimport {Provider} from 'react-redux';\nimport store from './redux/store';\nimport App from './App.jsx';\nimport 'normalize.css';\n\n\nfirebase.saveSession('SESSION');\nconst config = require('./config.json');\n\nReactDOM.render(\n        <HashRouter>\n            <ErrorBoundary>\n                <Provider store = {store}>\n                    <App config = {config} />\n                </Provider>\n            </ErrorBoundary>\n        </HashRouter >,\n        document.getElementById('root')\n);\n\nserviceWorker.register();\n\n"],"sourceRoot":""}