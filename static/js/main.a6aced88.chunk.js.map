{"version":3,"sources":["serviceWorker.js","Firebase/firebaseConfig.js","Firebase/Firebase.js","EventEmitter.js","components/ErrorCatch/ErrorPage.jsx","components/ErrorCatch/ErrorBoundary.jsx","redux/actions.js","redux/reducerBuilder.js","redux/reducerCabinet.js","redux/reducers.js","redux/store.js","redux/middleware/loadUserMiddleware.js","Firebase/firebaseContext.js","components/withFirebase.jsx","components/loading/Loader.jsx","components/AnimationText/AnimationTitle.jsx","components/Registration/Registration.jsx","components/Icon/icon.jsx","Pages/Index/Index.jsx","redux/middleware/middlewareDelete.js","components/confirmBox/Confirm.jsx","components/header/Header.jsx","components/imageViewer/imageItem.jsx","components/modalWindow/createProject/createProject.jsx","components/modalWindow/Search/searchModal.jsx","components/modalWindow/ModalWindow.jsx","redux/middleware/createProjectMiddleware.js","components/List/Item.jsx","components/List/List.jsx","components/ProjectsSection/ProjectsSection.jsx","Pages/Cabinet/Cabinet.jsx","components/buildComponents/components/Background.jsx","components/buildComponents/MainBackground/MainBackground.jsx","components/buildComponents/section.jsx","components/buildComponents/components/Input.jsx","components/buildComponents/components/Media.jsx","components/buildComponents/components/Image.jsx","components/buildComponents/components/Text.jsx","components/builderHOC.jsx","Pages/Production/Production.jsx","Pages/About/About.jsx","redux/middleware/updateMiddleware.js","components/withScroll.jsx","components/imageViewer/Viewer.jsx","components/instrumentsPanel/InputTools/InputInstruments.jsx","components/instrumentsPanel/MediaTools/MediaInstruments.jsx","components/instrumentsPanel/ImageTools/ImageInstruments.jsx","components/instrumentsPanel/BackgroundTools/BackgroundInstruments.jsx","components/instrumentsPanel/TextTools/TextInstruments.jsx","components/instrumentsPanel/InstrumentsPanel.jsx","components/additionalTools/additionalTools.jsx","components/componentsBuildMenu/BuildMenu.jsx","components/controllers/controllers.jsx","Pages/Build/Build.jsx","components/SwitchContainer/Guides/OpenPanel.jsx","components/SwitchContainer/Guides/SearchGuide.jsx","components/SwitchContainer/Guides/AddComponents.jsx","components/SwitchContainer/Guides/AddNewSection.jsx","components/SwitchContainer/Guides/CreateNewProject.jsx","components/SwitchContainer/SwitchContainer.jsx","Pages/Guide/Guide.jsx","App.jsx","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","firebaseConfig","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firebaseInterface","require","firebase","initializeApp","this","auth","db","firestore","lowConnection","enablePersistence","rules","setPersistence","Auth","Persistence","email","password","signInWithEmailAndPassword","createUserWithEmailAndPassword","signOut","currentUser","saveSession","session","stream","EventEmitter","controllerStream","ErrorPage","redirect","update","event","setState","eventEmitter","emit","to","class","className","onClick","React","Component","ErrorBoundary","hasError","updateApplication","componentDidMount","on","componentWillUnmount","off","info","props","children","PureComponent","exitProjectAction","type","exit","loadCurrentProjectAction","id","typeProject","sectionsProject","components","loadUpdateCurrentProject","idProject","loadUserAction","active","idUser","uid","projects","errorAction","initialState","loadProject","combineReducers","builder","action","cabinet","map","item","middleware","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","thunk","withExtraArgument","store","createStore","middlewareLogin","dispatch","getState","a","isLogin","login","response","collection","doc","user","get","docUser","data","message","middlewareLogOutUser","firebaseContext","createContext","withFirebase","Consumer","useState","path","mode","src","alt","AnimationTitle","styled","h3","dir","AnimationText","tilteContent","content","split","currentTitle","positionTitle","directionAnimation","msAnimation","msTimeout","msPauseEnd","_isMounted","timerAnimation","animationTitle","timer","self","setTimeout","tick","counter","length","word","_title","slice","e","clearTimeout","data-titlebuild","emailRef","passwordRef","setRefEmail","node","setRefPassword","createUser","value","Error","set","indexStream","autoComplete","placeholder","ref","Icon","draggable","title","Index","Events","tryAuth","registrationActive","regStatus","wrongEnter","emailImput","passwordImput","statusRegistration","additionalUserInfo","isNewUser","showBox","stopPropagation","authTo","res","componentDidUpdate","TransitionGroup","component","CSSTransition","timeout","unmountOnExit","classNames","connect","middlewareDeleteProjectComponent","findProject","find","project","filter","idComponent","section","dataUpdate","middlewareDelete","itemdb","Confirm","cbSaveChanges","cbCancelSave","iconPath","CabinetIcon","Header","isChange","redirectConfirm","redirectAbout","redirectA","redirectCabinet","redirectC","redirectGuide","redirectG","confirm","false","confirmSaveDetectChanges","logOut","pathname","add","cabinetStream","componentDidlMount","Fragment","icon","faBook","withRouter","ImageItem","selected","urls","regular","urlRegular","full","urlFull","isFull","urlContent","url","iframe","CreateProject","disabled","validateName","name","validateType","nameLength","isNumber","warningLengthMin","warningLengthMax","warningNumber","onChange","cbValidateName","warningType","cbSelectOption","cbAddNewProject","cbCancel","loading","SearchModal","modalSearchMode","items","images","search","refSearch","cbSearch","refSearchFunc","prevProps","prevState","contentPrev","haveUpdate","isSelected","selectedItem","_items","cbMakeImageResultBox","dissabled","menuActive","cbShowImage","cbSetSelectedImage","ModalWindow","workMode","buttonSearchDisabled","showUrl","imageBoxView","newProject","imageMenuActive","warning","lengthMax","lengthMin","inputSearch","inputSelect","searchData","api","isFetch","ok","json","results","searchYouTubeAPI","RAITE","KEY","status","arrayItems","forEach","push","snippet","thumbnails","high","videoId","showMenuImage","showImage","eventStreamBuild","target","setSelectedImage","makeImageResultBox","i","key","addNewProject","selectOption","inputs","test","cancel","refSelect","loader","middlewareCreateProject","list","lastProject","lastIndex","header","backgroundImage","backgroundColor","min","Math","floor","random","targetSection","productionPath","canBuild","setCanBuild","canProd","setCanProd","data-id","List","makeList","ProjectsSection","Cabinet","modalActive","deletItem","getCurrentUser","changeWorkMode","in","appear","Background","div","width","height","BackgroundComponent","background","color","boxComponent","boxComponentRef","saveDataParent","boxInform","getBoundingClientRect","countSection","sectionNumber","size","openBgInstruments","componentsPatternBackground","componentStats","changeColor","eventItem","colorRGB","setBackgroundImage","onDoubleClick","data-name","MainBackground","editRedy","changeMode","editStart","editComponentName","refSection","refSectionFunc","currentProjectsData","componentJSX","needUpdate","countComponents","data-class","Section","userData","sizeParentBox","componentsProdJSX","InputComponent","input","attrs","style","zIndex","indexZ","left","coordX","top","coordY","w","h","fontSize","borderRadius","ProductionStyle","Input","istrumentsActive","getSizeBool","typeInput","shiftCoords","posInput","coords","x","y","startDragNdrop","openInputInstruments","componentsPatternImage","sizeTextValue","saveCoords","nativeEvent","which","element","refInput","cords","right","bottom","clientX","clientY","changeSize","eventSize","changeSizeText","setBorderRadius","radius","borderDown","changeContent","checkPivotPosition","borderRight","move","moveInput","num","xItem","yItem","convertToPercentX","convertToPercentY","toFixed","stopDragNdrop","saveSize","setWidth","setType","setHeight","refInputComponent","onMouseDown","onMouseMove","onMouseLeave","onMouseUp","onDragStart","stop","data-imagecomponentwrapper","WrapperMedia","display","justifyContent","alignItems","padding","Media","MediaComponent","posMedia","drawContent","openMediaInstruments","componentsPatternMedia","refMedia","moveMedia","setContent","refMediaComponent","allowfullscreen","WrapperImg","transform","rotate","scale","transition","ImageStyle","img","opacity","Image","transformValue","scaleValue","image","posImage","openImageInstruments","refImage","rotateEvent","angle","scaleEvent","moveText","factorCoord","diffAngle","parseInt","xFacotr","yFactor","powHeight","powWidth","pythagoras","sqrt","_angle","atan","_biasFactor","biasFactor","PI","sinX","sin","sinY","setCurrentImage","setOpacity","stopDrag","preventDefault","refImageComponent","data-imagecomponent","crossOrigin","WrapperText","textColor","TextStyle","p","font","TextComponent","resizeStream","isHaveSize","parent","colorText","sizeText","position","contentText","openTitleInstruments","componentsPatternText","changeColorText","changeContentText","eventContent","refText","resizeStart","classList","setFont","sectionNum","refTextComponent","data-textcomponent","builderHOC","Production","params","param","projectEmpty","isLoadComponents","makeProduction","array","_components","itemHash","patternJSX","prodRef","mainProductionRef","current","About","about","developer","year","updateMiddleware","newProjects","JSON","parse","stringify","withScroll","scrollConfig","duration","delay","smooth","offset","positionCount","setStates","blockMove","moveLocation","count","moveDown","deltaY","moveUp","close","scroller","scrollTo","scroll","scrollToTop","onWheel","onTouchStart","Viewer","frameBorder","allow","allowFullScreen","InputInstruments","colorPickerActive","instrumentPanel","_content","cbSetColor","onChangeComplete","cbHandleChangeComplete","cbSetWidth","max","cbSetHeight","cbSetSize","cbSetBorderRadius","cbSetType","cbSetContent","maxLength","cbDelete","MediaInstruments","ImageInstruments","fileRef","createRef","cbRotate","cbScale","step","cbSetOpacity","cbLoadFile","accept","BackgroundInstruments","TextInstruments","cbSetFont","InstrumentsPanel","closePanel","setSize","fontName","setIframeContent","contentValue","updatePosition","setColor","updateBimageStats","handleChangeComplete","rgb","r","g","b","redirectSaveChanges","ms","saveChanges","deleteComponent","loadFile","files","reader","FileReader","readAsDataURL","onload","result","onerror","makePanelInstruments","oldProps","oldState","instrumentActive","AdditionalTools","modal","modalSearch","modalViewer","modalSearchOn","itemEvent","ViewerSwitch","openInstrument","BuildMenu","addText","componentsPattern","Text","addBackground","addImage","addMedia","addInput","componentsPatternInput","inputType","addSection","Controllers","viewComponentMenu","shiftX","shiftY","coordsX","coordsY","shadowDisplay","componentMenu","refControll","Build","eventEmitterBuild","EventBuild","workModeEdit","_componentJSX","addComponentsFromBD","componentsFromDB","addComponent","saveChangesComponent","findCurrentItem","mainComponent","mainRefComponent","addNewSection","ie","only","except","showAddSection","OpenPanel","SearchGuide","AddComponents","AddNewSection","CreateNewProject","SwitchContainer","refOP","refSE","refADD","refSN","refPR","refOpenPanel","refAdd","refProject","Guide","App","firebaseLoadState","onAuthStateChanged","isError","exact","render","ReactDOM","Provider","document","getElementById","URL","href","origin","addEventListener","fetch","contentType","headers","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.a6aced88.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","// setings in root folder .env\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n    databaseURL: process.env.REACT_APP_DATABASE_URL,\r\n    projectId: process.env.REACT_APP_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n    appId: process.env.REACT_APP_APPID\r\n};\r\n\r\nexport default firebaseConfig;","import firebase from 'firebase/app';\r\nimport firebaseConfig from './firebaseConfig';\r\nimport config from '../config.json';\r\nconst auth = require('firebase/auth');\r\nconst firestore = require('firebase/firestore');\r\n\r\nclass Firebase {\r\n\r\n    constructor(firebaseConfig){\r\n        /** Init firebase */\r\n\r\n        firebase.initializeApp(firebaseConfig);\r\n        this.auth = firebase.auth();\r\n        this.db = firebase.firestore();\r\n\r\n        if (config.firebase.lowConnection === 'true' \r\n        && (process.env.NODE_ENV === 'dev' || process.env.NODE_ENV === 'production'))\r\n        this.db.enablePersistence() /** if user use low internet connection */\r\n    }\r\n\r\n    saveSession(rules){\r\n        /** Set forebase type session */\r\n        return this.auth.setPersistence(firebase.auth.Auth.Persistence[rules]);\r\n    }\r\n\r\n    login(email, password){\r\n        /** login firebase */\r\n        try {\r\n            return this.auth.signInWithEmailAndPassword(email, password);\r\n        } catch (error) {\r\n            console.error(error);\r\n            return null;\r\n        }\r\n    }\r\n\r\n    registration(email, password){\r\n        /** create new user */\r\n        return this.auth.createUserWithEmailAndPassword(email, password)\r\n    }\r\n\r\n    signOut(){\r\n        /** destroy session */\r\n        return this.auth.signOut()\r\n    }\r\n\r\n    getCurrentUser() {\r\n        /** get current user */\r\n            return this.auth.currentUser;\r\n    }\r\n}\r\nlet firebaseInterface = new Firebase(firebaseConfig);\r\n\r\nif (process.env.NODE_ENV === 'dev' || process.env.NODE_ENV === 'production')\r\nfirebaseInterface.saveSession(config.firebase.session);\r\n\r\nexport default firebaseInterface;\r\nexport { auth, firestore };\r\n\r\n","import {EventEmitter} from 'events';\r\n\r\nconst stream = new EventEmitter(); /** @Events head event stream */\r\nconst controllerStream = new EventEmitter(); /** @Events for controllers */\r\n\r\nexport {controllerStream};\r\nexport default stream;\r\n","import React from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\nimport eventEmitter from '../../EventEmitter';\r\n\r\nimport './errorPage.scss';\r\n\r\n\r\nclass ErrorPage extends React.Component {\r\n\r\n    state = {\r\n        redirect: false,\r\n    }\r\n\r\n    update = event => {\r\n       this.setState({redirect: true},\r\n        () => eventEmitter.emit('EventErrorCatchUpdate'));\r\n    }\r\n\r\n    render(){\r\n        if (this.state.redirect) return <Redirect to = '/' />\r\n        return (\r\n        <div class = 'container'>\r\n            <div class = 'flex-column ErrorPage'>\r\n                <h1>Application crash</h1>\r\n                <button className = 'ErrorPage__button_updateApp' onClick = {this.update}>Update</button>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ErrorPage;","\r\nimport React from 'react';\r\nimport eventEmitter from '../../EventEmitter';\r\nimport ErrorPage from './ErrorPage';\r\n\r\nclass ErrorBoundary extends React.PureComponent {\r\n\r\n      state = { \r\n        hasError: false,\r\n      };\r\n\r\n    static getDerivedStateFromError(error) {\r\n        console.log(error);\r\n      // Обновить состояние с тем, чтобы следующий рендер показал запасной UI.\r\n      return { hasError: true};\r\n    }\r\n\r\n    updateApplication = event => {\r\n      this.setState({hasError: false});\r\n    };\r\n  \r\n    componentDidCatch(error, info) {\r\n      // Можно также сохранить информацию об ошибке в соответствующую службу журнала ошибок\r\n     console.error(error + \",\" + info);\r\n    }\r\n  \r\n    render() {\r\n      if (this.state.hasError) return <ErrorPage />\r\n      return this.props.children;\r\n    }\r\n\r\n    componentDidMount = () => {\r\n      eventEmitter.on('EventErrorCatchUpdate',this.updateApplication);\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n      eventEmitter.off('EventErrorCatchUpdate',this.updateApplication);\r\n    }\r\n  }\r\n\r\n  export default ErrorBoundary;","const CREATE_PROJECT = 'CREATE_PROJECT';\r\nconst LOAD_UPDATE_PROJECT = \"LOAD_UPDATE_PROJECT\";\r\nconst LOAD_CURRENT = 'LOAD_CURRENT';\r\nconst LOG_OUT_CABINET = 'LOG_OUT_CABINET';\r\nconst LOAD_USER_CABINET = 'LOAD_USER_CABINET';\r\nconst ERROR_CABINET = 'ERROR_CABINET';\r\nconst EXIT_PROJECT = 'EXIT_PROJECT';\r\n\r\nconst createProjectAction = (state) => {\r\n    /** action for create project */\r\n    return {\r\n        type: CREATE_PROJECT,\r\n        projects: state,\r\n    }\r\n}\r\n\r\nconst exitProjectAction = (state) => {\r\n       /** action for exit from editable or prod project */\r\n    return {\r\n        type: EXIT_PROJECT,\r\n        exit: state\r\n    }\r\n}\r\n\r\nconst loadCurrentProjectAction = (state) => {\r\n    /** action for load current editable or prod project */\r\n    return {\r\n        type: LOAD_CURRENT,\r\n        id: state.id,\r\n        typeProject: state.typeProject,\r\n        sectionsProject: state.sectionsProject,\r\n        components: state.components\r\n    }\r\n}\r\n\r\nconst loadUpdateCurrentProject = (state) => {\r\n    /** action for update editable project */\r\n    return {\r\n        type: LOAD_UPDATE_PROJECT,\r\n        idProject: state.idProject,\r\n        sectionsProject: [...state.sectionsProject],\r\n        components: [...state.components]\r\n    }\r\n}\r\n\r\nconst loadUserAction = (state) => {\r\n    /** action for load user data */\r\n    return {\r\n        type: LOAD_USER_CABINET,\r\n        active: true,\r\n        idUser: state.uid,\r\n        error: '',\r\n        projects: state.projects\r\n    }\r\n}\r\n\r\nconst logOutAction = (state) => {\r\n    /** action for clear session */\r\n    return {\r\n        type: LOG_OUT_CABINET,\r\n        active: false,\r\n        idUser: null,\r\n        error: '',\r\n        projects: []\r\n    }\r\n}\r\n\r\nconst errorAction = (state) => {\r\n    /** action catch errors */\r\n    return {\r\n        type: ERROR_CABINET,\r\n        error: state\r\n    }\r\n}\r\n\r\nexport {\r\n    CREATE_PROJECT, createProjectAction, /* cabinet */\r\n    LOAD_USER_CABINET, loadUserAction, /* cabinet */\r\n    LOG_OUT_CABINET, logOutAction, /* cabinet */\r\n    LOAD_CURRENT, loadCurrentProjectAction, /* builder */\r\n    LOAD_UPDATE_PROJECT, loadUpdateCurrentProject,\r\n    EXIT_PROJECT, exitProjectAction,\r\n    ERROR_CABINET, errorAction, /* both */\r\n}","import {LOAD_CURRENT,LOAD_UPDATE_PROJECT, EXIT_PROJECT} from './actions';\r\n\r\nconst initialState = { /** @Builder reducer for build mode */\r\n    loadProject: false,\r\n    idProject: null,\r\n    typeProject: null,\r\n    components: [],\r\n    sectionsProject: [],\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n    switch (action.type){\r\n\r\n        case LOAD_CURRENT: {\r\n            /** load data */\r\n            return {\r\n                ...state,\r\n                loadProject: true,\r\n                idProject: action.id,\r\n                typeProject: action.typeProject,\r\n                components: [...action.components],\r\n                sectionsProject: [...action.sectionsProject]\r\n            }\r\n        }\r\n\r\n        case LOAD_UPDATE_PROJECT: {\r\n             /** load update for project */\r\n            return {\r\n                ...state,\r\n                components: [...action.components],\r\n                sectionsProject: [...action.sectionsProject]\r\n            }\r\n        }\r\n\r\n        case EXIT_PROJECT: {\r\n             /** if user exit from edit mode */\r\n            if (action.exit)\r\n            return {\r\n                ...state,\r\n                loadProject: false,\r\n                idProject: null,\r\n                typeProject: null,\r\n                components: []\r\n            }\r\n            else return state;\r\n        }\r\n        default: return state;\r\n    }\r\n};","import {    LOAD_USER_CABINET, LOG_OUT_CABINET,\r\n            ERROR_CABINET, CREATE_PROJECT,\r\n            LOAD_UPDATE_PROJECT\r\n        } from './actions';\r\n\r\nconst initialState = { /** Cabinet reducer (root) */\r\n    active: false,\r\n    idUser: null,\r\n    projects: [],\r\n    error: null,\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case LOAD_USER_CABINET: {\r\n            /** load user data if user auth - true */\r\n            return {\r\n                ...state,\r\n                active: action.active,\r\n                idUser: action.idUser,\r\n                projects: [...action.projects]\r\n            }\r\n        }\r\n\r\n        case CREATE_PROJECT: {\r\n             /** create new project */\r\n            return {\r\n                ...state,\r\n                projects: [...action.projects]\r\n            }\r\n        }\r\n\r\n        case LOAD_UPDATE_PROJECT: {\r\n              /** update project in cabinet */\r\n            return {\r\n                ...state,\r\n                projects: state.projects.map(item => {\r\n                    if (item.id === action.idProject)\r\n                        item.components = [...action.components]\r\n                return item;\r\n                })\r\n            }\r\n        }\r\n\r\n        case LOG_OUT_CABINET: {\r\n            /** clear session */\r\n            return {\r\n                ...state,\r\n                active: false,\r\n                idUser: null,\r\n                projects: []\r\n            }\r\n        }\r\n\r\n        case ERROR_CABINET: {\r\n            /** catch error in cabinet */\r\n            return {\r\n                ...state,\r\n                error: action.error\r\n            }\r\n        }\r\n        default: return state;\r\n    }\r\n}\r\n\r\n","import {combineReducers} from 'redux';\r\nimport reducerBuilder from './reducerBuilder';\r\nimport reducerCabinet from './reducerCabinet';\r\n\r\nexport default combineReducers({\r\n    builder: reducerBuilder,\r\n    cabinet: reducerCabinet,\r\n});","import {createStore, applyMiddleware, compose} from 'redux';\r\nimport firebase from  '../Firebase/Firebase';\r\nimport thunk from 'redux-thunk';\r\nimport combineReducers from './reducers';\r\n\r\n/** For devtools */\r\nconst composeEnhancers =\r\n  typeof window === 'object' &&\r\n  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?\r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\r\n    }) : compose;\r\n\r\nconst middleware = composeEnhancers( /** @Include moddleware */\r\n  applyMiddleware(thunk.withExtraArgument({firebase})));\r\n\r\nconst store = createStore(combineReducers, middleware);\r\nexport default store;","import {loadUserAction, errorAction, logOutAction} from '../actions';\r\n\r\nconst middlewareLogin = (email,password) => async (dispatch,getState, {firebase}) => {\r\n    /** Auth */\r\n    let isLogin = true;\r\n        await firebase.login(email,password)\r\n        .then(response =>{\r\n            firebase.db.collection(\"users\").doc(response.user.uid).get()\r\n            .then(docUser => {\r\n                let user = docUser.data();\r\n                /** Load user if auth - true */\r\n                dispatch(loadUserAction({uid: docUser.id, projects: [...user.projects]}))\r\n            })\r\n        })\r\n        .catch((error) => {\r\n            console.error(error.message);\r\n            dispatch(errorAction(error.message));\r\n        });\r\n        return isLogin;\r\n    }\r\n\r\nconst middlewareLoadUserData = (uid) => async (dispatch,getState, {firebase}) => {\r\n    /** Load user data */\r\n        let isError = null;\r\n        await firebase.db.collection(\"users\").doc(uid).get()\r\n        .then(docUser => {\r\n            let user = docUser.data();\r\n            /** load if user data found */\r\n            dispatch(loadUserAction({uid: uid, projects: [...user.projects]}))\r\n        })\r\n        .catch((error) => {\r\n            console.error(error.message);\r\n            dispatch(errorAction(error.message));\r\n            isError = true;\r\n        });\r\n\r\n        if (!isError) return true;\r\n        else return false;\r\n    }\r\n\r\nconst middlewareLogOutUser = (uid) => async (dispatch,getState, {firebase}) => {\r\n    /** disconnect from session */\r\n    await firebase.signOut()\r\n    .then (response => {\r\n        dispatch(logOutAction());\r\n    })\r\n    .catch((error) => {\r\n        console.error(error.message);\r\n        dispatch(errorAction(error.message));\r\n    });\r\n}\r\nexport {\r\n    middlewareLogin,middlewareLoadUserData, middlewareLogOutUser\r\n}","import React from 'react';\r\nimport firebase from './Firebase';\r\n/** @ContextAPI for firebase */\r\nconst firebaseContext = React.createContext(firebase);\r\nexport default firebaseContext;","import React from 'react';\r\nimport firebaseContext from '../Firebase/firebaseContext';\r\n\r\n\r\nconst withFirebase = Component => props => {\r\n\r\n    if (process.env.NODE_ENV === 'dev' || process.env.NODE_ENV === 'production')\r\n        return ( /** Context API */\r\n            <firebaseContext.Consumer>\r\n                {firebase => <Component {...props} firebase = {firebase} /> }\r\n            </firebaseContext.Consumer>\r\n        )\r\n    else return <Component {...props} />;\r\n};\r\n\r\n\r\nexport default withFirebase;","import React,{useState} from 'react';\r\nimport './Loader.scss';\r\nexport default function(props) {\r\n  \r\n    const [path] = useState(props.path ? process.env.PUBLIC_URL + props.path : process.env.PUBLIC_URL + `/img/loading.gif`);\r\n    const [mode] = useState(props.mode ? props.mode : false);\r\n    return (\r\n            <div className = {`loaderBox ${mode && 'specialMode'}`}>\r\n                <img className = 'loader' src = {path} alt = 'loader'></img> \r\n                {!mode && <p>{`Loading ${props.type}`}</p>}\r\n            </div>\r\n    )\r\n}","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst AnimationTitle = styled.h3`\r\n    user-select: none;\r\n    transition: .4s linear all;\r\n    color: ${props => props.dir === 'up' ? 'red' : 'blue'};\r\n`;\r\n\r\nclass AnimationText extends React.PureComponent {\r\n\r\n    state = {\r\n        tilteContent: this.props.content.split(''),\r\n        currentTitle: this.props.content[0],\r\n        positionTitle: 1,\r\n        directionAnimation: 'up',\r\n        msAnimation: this.props.msAnimation,\r\n        msTimeout: this.props.msAnimation,\r\n        msPauseEnd: this.props.msPauseEnd,\r\n    }\r\n\r\n    _isMounted = false;\r\n    timerAnimation = null;\r\n\r\n    animationTitle = timer => {\r\n        let self = this;\r\n        if (this._isMounted)\r\n        timer = setTimeout( function tick(){\r\n\r\n            if (self._isMounted) {\r\n                if (self.state.directionAnimation === 'up'){\r\n                    let counter = self.state.tilteContent.length;\r\n                    const word = counter > self.state.positionTitle ?\r\n                                self.state.tilteContent[self.state.positionTitle] :\r\n                                self.state.tilteContent[self.state.positionTitle-1];\r\n                    self.setState({\r\n                        ...self.state,\r\n                        currentTitle: self.state.currentTitle + word,\r\n                        positionTitle: self.state.positionTitle + 1,\r\n                        directionAnimation: self.state.positionTitle === counter ? 'down' : 'up',\r\n                        msAnimation: self.state.positionTitle === counter ?\r\n                            self.state.msPauseEnd : self.state.msTimeout\r\n                    });\r\n                }\r\n                if (self.state.directionAnimation === 'down'){\r\n                    let _title = self.state.currentTitle;\r\n                    const length = self.state.currentTitle.length;\r\n                    _title = _title.slice(0,length - 1);\r\n                    self.setState({\r\n                        ...self.state,\r\n                        currentTitle: _title,\r\n                        positionTitle: self.state.positionTitle - 1,\r\n                        directionAnimation: self.state.positionTitle === 2 ? 'up' : 'down',\r\n                        msAnimation: self.state.positionTitle === 2 ?\r\n                            self.state.msPauseEnd : self.state.msTimeout\r\n                    });\r\n                }\r\n            timer = setTimeout(tick, self.state.msAnimation);\r\n            }\r\n        }, this.state.msAnimation);\r\n\r\n    }\r\n\r\n\r\n    render(){\r\n        return (\r\n            <AnimationTitle data-titlebuild dir = {this.state.directionAnimation}>\r\n                {this.state.currentTitle}\r\n            </AnimationTitle>\r\n        )\r\n\r\n    }\r\n\r\n    componentDidMount = (e) => {\r\n        this._isMounted = true;\r\n        this.animationTitle(this.timerAnimation);\r\n    }\r\n\r\n    componentWillUnmount = (e) => {\r\n        this._isMounted = false;\r\n        if (this.timerAnimation) clearTimeout(this.timerAnimation);\r\n    }\r\n}\r\n\r\n\r\nexport default AnimationText;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './registration.scss';\r\n\r\nimport withFirebase from '../withFirebase';\r\n\r\n\r\nclass Registration extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        firebase: PropTypes.object.isRequired, /** @firebase class for use firebase functions */\r\n        indexStream: PropTypes.object.isRequired /** @Events stream object */\r\n    }\r\n\r\n    state = {\r\n        firebase: this.props.firebase,\r\n        error: null,\r\n    }\r\n\r\n    emailRef = null;\r\n    passwordRef = null;\r\n\r\n    setRefEmail = (node) => this.emailRef = node;\r\n    setRefPassword = (node) => this.passwordRef = node;\r\n\r\n    createUser = event => {\r\n        /** try to create new user */\r\n        const email = this.emailRef ? this.emailRef.value : null;\r\n        const password = this.passwordRef ? this.passwordRef.value : null;\r\n        const { firebase } = this.props;\r\n\r\n        if (password && email)\r\n        firebase.registration(email, password)\r\n        .then(response => {\r\n            if (!response) throw new Error('Ivaid registration')\r\n            /** if response - true update data user else throw error */\r\n            firebase.db.collection(\"users\").doc(response.user.uid).set({\r\n                'projects': [],\r\n                'email': email,\r\n            }).then(() => this.props.indexStream.emit('EventRegistrationCorrect', response));\r\n        })\r\n        .catch((error) => {\r\n        console.error(error.message);\r\n        this.setState({error: error.message});\r\n        });\r\n        else  return this.setState({error: 'invalid user data'});\r\n    };\r\n\r\n    render(){\r\n        let  { error } = this.state;\r\n        return (\r\n            <div className ='RegistrationBox'>\r\n                <div  className = 'RegistrationBox__RegistrationForm'>\r\n                    <h3>Registration</h3>\r\n                    <form autoComplete = 'off' className = 'RegistrationForm__RegForm'>\r\n                        { error ?\r\n                            <p className = 'error'>{error}</p>\r\n                            : null\r\n                        }\r\n                        <span>E-mail</span>\r\n                        <input placeholder=\"email\" ref = {this.setRefEmail} type = 'text' />\r\n                        <span>Password</span>\r\n                        <input \r\n                            className = 'password' \r\n                            autoComplete = \"off\" \r\n                            ref = {this.setRefPassword} \r\n                            type = 'password' \r\n                            placeholder=\"password\"\r\n                        />\r\n                        <input onClick = {this.createUser}\r\n                                className = 'RegForm__loginButton'\r\n                                type = 'button'\r\n                                value = 'registration'\r\n                        />\r\n                    </form>\r\n                </div>\r\n                </div>\r\n        )\r\n    }\r\n\r\n}\r\nexport default withFirebase(Registration);\r\n","import React, {useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './icon.scss';\r\n\r\nfunction Icon(props){\r\n    const [path] = useState(props.path);\r\n    const [className] = useState(props.className ? props.className : null);\r\n    const [draggable] = useState(props.draggable ? true : false);\r\n\r\n    return (\r\n    <img\r\n        draggable = {draggable}\r\n        onClick = {props.onClick ? props.onClick : null}\r\n        className = {className}\r\n        title = {props.title ? props.title : null}\r\n        src = {process.env.PUBLIC_URL + path } alt = 'icon'>\r\n    </img>\r\n    )\r\n}\r\n\r\nIcon.propTypes = {\r\n    path: PropTypes.string.isRequired, // icon path\r\n    className: PropTypes.string, // class\r\n    draggable: PropTypes.bool // draggable bool\r\n}\r\n\r\nexport default Icon;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Redirect} from 'react-router-dom';\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\r\nimport AnimationText from '../../components/AnimationText/AnimationTitle';\r\nimport Events from 'events';\r\nimport {middlewareLogin} from '../../redux/middleware/loadUserMiddleware';\r\n\r\nimport Loader from '../../components/loading/Loader';\r\nimport Registration from '../../components/Registration/Registration';\r\n\r\nimport {connect} from 'react-redux';\r\n\r\nimport './index.scss';\r\nimport Icon from '../../components/Icon/icon';\r\n\r\n\r\nclass Index extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        active: PropTypes.bool, /** @active - status firebase auth */\r\n        dispatch: PropTypes.func.isRequired, /** @dispatch - redux */\r\n        history: PropTypes.object.isRequired, /** @Router HTML5 history */\r\n        location: PropTypes.object.isRequired, /** @Router */\r\n        match: PropTypes.object.isRequired, /** @Router */\r\n        wrongEnter: PropTypes.string, /** @Error about invalid enter */\r\n        config: PropTypes.object, /** @config - app settings */\r\n    }\r\n\r\n    indexStream = new Events();\r\n\r\n    state = {\r\n        title:  this.props.config.title,\r\n        tryAuth: false,\r\n        registrationActive: false,\r\n        regStatus: false,\r\n        wrongEnter: false,\r\n        error: '',\r\n    }\r\n\r\n    emailImput = null;\r\n    passwordImput = null;\r\n\r\n    statusRegistration = event => {\r\n        /** Update registration status */\r\n        event.additionalUserInfo.isNewUser ?\r\n            this.setState({\r\n                ...this.state,\r\n                regStatus: true,\r\n                registrationActive: false,\r\n                error: 'Account create!'\r\n            })\r\n        : console.error('error registration');\r\n    }\r\n\r\n    showBox = event => {\r\n         /** Show registration box */\r\n        try {\r\n            this.setState ({\r\n                ...this.state,\r\n            registrationActive: this.state.registrationActive ? false : true\r\n            });\r\n        } catch (e) {\r\n        console.error('animation fail');\r\n        }\r\n        event.stopPropagation();\r\n    }\r\n\r\n    authTo = event => {\r\n          /** Auth user */\r\n            if (this.emailImput && this.passwordImput){\r\n                this.setState({\r\n                    ...this.state,\r\n                    tryAuth: true,\r\n                }, () => {\r\n                     this.props.dispatch(middlewareLogin(this.emailImput.value, this.passwordImput.value))\r\n                     .then((res) => this.setState({...this.state,  tryAuth: false}));\r\n                });\r\n            }\r\n            event.stopPropagation();\r\n    }\r\n\r\n    emailRef = node => this.emailImput = node;\r\n    passwordRef = node => this.passwordImput = node;\r\n\r\n    render(){\r\n        if (this.props.active) return <Redirect to = { '/Cabinet'} />\r\n        else if (!this.props.active) {\r\n            return (\r\n                    <div className = 'LoginPage flex-column'>\r\n                        <h1>{this.state.title}</h1>\r\n                        <div className = 'LoginPage__LoginBox'>\r\n                            <AnimationText\r\n                                content = 'Build your landing page!'\r\n                                msPauseEnd = {1000}\r\n                                msAnimation = {150}\r\n                            />\r\n                            <form className = 'LoginBox__LoginForm'>\r\n                                <h3>Connect form</h3>\r\n                                {this.state.tryAuth &&\r\n                                <Icon\r\n                                    className = 'LoginBox__LoginForm__loader'\r\n                                    path = '/img/loading.gif'\r\n                                />\r\n                                }\r\n                                {(this.props.wrongEnter || this.state.regStatus) && !this.state.tryAuth ?\r\n                                    <p className = 'error'>{this.props.wrongEnter}</p>\r\n                                    : null\r\n                                }\r\n                                    <p>E-mail</p>\r\n                                    <input \r\n                                        autoComplete = 'off'\r\n                                        placeholder=\"email\" \r\n                                        ref = {this.emailRef}\r\n                                        type = 'text' \r\n                                    />\r\n                                    <p>Password</p>\r\n                                    <input \r\n                                        ref = {this.passwordRef} \r\n                                        type = 'password' \r\n                                        autoComplete = 'off'\r\n                                        placeholder=\"password\"\r\n                                    />\r\n                                    <input \r\n                                        onClick = {this.authTo} \r\n                                        className = 'LoginForm__loginButton enterInput'\r\n                                        type = 'button'\r\n                                        value = 'enter' />\r\n                                    <input\r\n                                        onClick = {this.showBox}\r\n                                        className = {this.state.registrationActive ?\r\n                                            `LoginForm__loginButton registration selected` : \r\n                                            'LoginForm__loginButton registration'\r\n                                        }\r\n                                        type = 'button'\r\n                                        value = 'registration'\r\n                                    />\r\n                            </form>\r\n                        </div>\r\n                            <TransitionGroup component={null}>\r\n                                {this.state.registrationActive &&\r\n                                    <CSSTransition\r\n                                        timeout={300}\r\n                                        unmountOnExit\r\n                                        classNames=\"RegAnim\">\r\n                                        <Registration  indexStream = {this.indexStream} />\r\n                                    </CSSTransition>\r\n                                }\r\n                            </TransitionGroup>\r\n                    </div>\r\n            )\r\n        } else  return <Loader path = '/img/loading.gif' type = 'session' />\r\n    }\r\n\r\n    componentDidUpdate = () => {\r\n\r\n    }\r\n\r\n    componentDidMount = (e) => {\r\n        this.indexStream.on('EventRegistrationCorrect', this.statusRegistration);\r\n    }\r\n    componentWillUnmount = (e) => {\r\n        this.indexStream.off('EventRegistrationCorrect', this.statusRegistration);\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        active: state.cabinet.active, \r\n        wrongEnter: state.cabinet.error\r\n    }\r\n  }\r\n\r\nexport default connect(mapStateToProps)(Index);","\r\nimport {errorAction, loadUserAction, loadUpdateCurrentProject} from '../actions';\r\nconst middlewareDelete = item => async (dispatch,getState, {firebase}) => {\r\n    /** Delete some components from project */\r\n    await firebase.db.collection('users').doc(item.uid).get()\r\n    .then(user => user.data())\r\n    .then(data => {\r\n        return {id: item.uid, projects: data.projects.filter(itemdb => itemdb.id !== item.id)};\r\n    })\r\n    .then(data => {\r\n        /** Load update in database */\r\n        firebase.db.collection(\"users\").doc(item.uid).update({\r\n            \"projects\": data.projects\r\n        })\r\n        .then(response => {\r\n            /** update user data */\r\n            dispatch(loadUserAction({uid: item.uid, projects: data.projects}));\r\n        });\r\n    })\r\n    .catch((error) => {\r\n        console.error(error.message);\r\n        dispatch(errorAction(error.message));\r\n    });\r\n}\r\n\r\nconst middlewareDeleteProjectComponent = item => async (dispatch, getState, {firebase}) => {\r\n    /** Delete project */\r\n    await firebase.db.collection('users').doc(item.uid).get()\r\n    .then(user => user.data())\r\n    .then(data => {\r\n        const userProjects = [...data.projects];\r\n        const findProject = userProjects.find(project => item.id === project.id);\r\n        if (!findProject) throw new Error('No found project');\r\n        findProject.components = findProject.components.filter(component =>\r\n            component.id !== item.idComponent\r\n        );\r\n\r\n        if (item && item.type === 'background'){\r\n            findProject.sectionsProject = findProject.sectionsProject.filter(section => {\r\n                return section !== item.idComponent;\r\n            });\r\n        }\r\n        return {dataUpdate: data, findProject: findProject};\r\n    })\r\n    .then(data => {\r\n        let {dataUpdate} = data;\r\n        let {findProject} = data;\r\n        /** update data in database */\r\n        firebase.db.collection(\"users\").doc(item.uid).update({\r\n            \"projects\": dataUpdate.projects\r\n        })\r\n        .then(response => {\r\n            /** update user data */\r\n            dispatch(loadUpdateCurrentProject({\r\n                components: [...findProject.components],\r\n                idProject: item.id,\r\n                sectionsProject: [...findProject.sectionsProject],\r\n            }))\r\n        });\r\n    })\r\n    .catch(error => {\r\n        console.error(error.message);\r\n        dispatch(errorAction(error.message));\r\n        return null;\r\n    });\r\n\r\n    return item.idComponent;\r\n}\r\n\r\nexport {middlewareDeleteProjectComponent};\r\nexport default middlewareDelete;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './Confirm.scss';\r\n\r\nconst Confirm = props => {\r\n\r\n    return (\r\n        <div className = 'wrapperConfirm'>\r\n            <div className = 'confirmSave'>\r\n                <span>Detected new changes</span>\r\n                <input\r\n                    className = 'saveCofirm'\r\n                    onClick = {props.cbSaveChanges}\r\n                    type = 'button'\r\n                    value = 'Save changes'\r\n                />\r\n                <input\r\n                    className = 'cancelCofirm'\r\n                    onClick = {props.cbCancelSave}\r\n                    type = 'button'\r\n                    value = 'Cancel'\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nConfirm.propTypes = {\r\n    cbSaveChanges: PropTypes.func.isRequired, // callback\r\n    cbCancelSave: PropTypes.func.isRequired // callback\r\n}\r\n\r\nexport default Confirm;","import React from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport './header.scss';\r\n\r\nimport {middlewareLogOutUser} from '../../redux/middleware/loadUserMiddleware';\r\nimport {connect} from 'react-redux';\r\nimport {Redirect, withRouter} from 'react-router-dom';\r\n\r\nimport eventEmitter from '../../EventEmitter.js';\r\nimport Icon from '../Icon/icon';\r\nimport Confirm from '../confirmBox/Confirm';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faBook } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst iconPath = require('../../config.json').CabinetIcon;\r\n\r\nclass Header extends React.Component {\r\n\r\n    static propTypes = {\r\n        title: PropTypes.string.isRequired, /** @Config title app */\r\n        cabinetStream: PropTypes.object, /** @Events stream cabinet */\r\n        dispatch: PropTypes.func.isRequired, /** @dispatch redux */\r\n        history: PropTypes.object.isRequired, /** @Router HTML5 history */\r\n        location: PropTypes.object.isRequired, /** @Router */\r\n        match: PropTypes.object, /** @Router */\r\n    };\r\n\r\n    state = {\r\n        idUser: this.props.idUser,\r\n        title: this.props.title,\r\n        isChange: false,\r\n        redirectConfirm: false,\r\n        redirectAbout: {\r\n            path:  '/Cabinet/About',\r\n            redirectA: false,\r\n        },\r\n        redirectCabinet: {\r\n            path:  '/Cabinet',\r\n            redirectC: false,\r\n        },\r\n        redirectGuide: {\r\n            path:  '/Cabinet/Guide',\r\n            redirectG: false,\r\n        }\r\n    };\r\n\r\n    confirm = event => {\r\n        if (typeof event !== 'object')\r\n        this.setState({isChange: event});\r\n        else this.setState({isChange: event.false, redirectConfirm: event.confirm});\r\n    }\r\n\r\n    confirmSaveDetectChanges = event => {\r\n        eventEmitter.emit('EventRedirectSaveChanges');\r\n        this.setState({\r\n            redirectConfirm: false,\r\n            redirectCabinet: {\r\n                ...this.state.redirectCabinet,\r\n                redirectC: true\r\n            }\r\n        });\r\n    };\r\n\r\n    logOut = event => {\r\n        if (this.state.idUser)\r\n            this.props.dispatch(middlewareLogOutUser(this.props.idUser));\r\n        event.stopPropagation();\r\n    };\r\n\r\n    redirectAbout = event => {\r\n        const isPath = this.props.location.pathname !== this.state.redirectAbout.path;\r\n        if (isPath && !this.state.isChange)\r\n           this.setState({\r\n                redirectConfirm: false,\r\n                redirectAbout: {\r\n                   ...this.state.redirectAbout,\r\n                   redirectA: true\r\n               }\r\n           }); else if (!this.state.redirectConfirm) \r\n                this.setState({redirectConfirm: true});\r\n        event.stopPropagation()\r\n    };\r\n\r\n    redirectGuide = event => {\r\n        const isPath = this.props.location.pathname !== this.state.redirectGuide.path;\r\n        if (isPath && !this.state.isChange)\r\n           this.setState({\r\n                redirectConfirm: false,\r\n                redirectGuide: {\r\n                   ...this.state.redirectGuide,\r\n                   redirectG: true\r\n               }\r\n           }); else if (!this.state.redirectConfirm) \r\n                this.setState({redirectConfirm: true});\r\n        event.stopPropagation()\r\n    };\r\n\r\n    redirectCabinet = event => {\r\n        if (event !== 'cancelMode'){\r\n            const isPath = this.props.location.pathname !== this.state.redirectCabinet.path;\r\n            if (isPath && this.state.isChange === false)\r\n            this.setState({\r\n                redirectConfirm: false,\r\n                redirectCabinet: {\r\n                    ...this.state.redirectCabinet,\r\n                    redirectC: true\r\n                }\r\n            });\r\n            else if (!this.state.redirectConfirm) this.setState({redirectConfirm: true});\r\n            event.stopPropagation();\r\n\r\n        } else this.setState({\r\n            redirectConfirm: false,\r\n            redirectCabinet: {\r\n                ...this.state.redirectCabinet,\r\n                redirectC: true\r\n            }\r\n        });\r\n    }\r\n\r\n    add = event => {\r\n        this.props.cabinetStream.emit('EventChangeWorkMode',{active: true, action: 'newProject'});\r\n        event.stopPropagation()\r\n    };\r\n\r\n    render(){\r\n        let {redirectA} = this.state.redirectAbout;\r\n        let {redirectC} = this.state.redirectCabinet;\r\n        let {redirectG} = this.state.redirectGuide;\r\n\r\n        if (redirectA) return <Redirect to = {this.state.redirectAbout.path} />\r\n        if (redirectC) return <Redirect to = {this.state.redirectCabinet.path} />\r\n        if (redirectG) return <Redirect to = {this.state.redirectGuide.path} />\r\n\r\n        return (\r\n            <React.Fragment>\r\n            {this.state.isChange && this.state.redirectConfirm ?\r\n                <Confirm \r\n                    cbSaveChanges = {this.confirmSaveDetectChanges}\r\n                    cbCancelSave = {() => this.redirectCabinet('cancelMode')}\r\n                /> : null}\r\n                <header>\r\n                    <div className = 'container'>\r\n                        <div className = 'flex-row'>\r\n                                <div onClick = {this.redirectCabinet} className = 'header__CabinetInfo'>\r\n                                    <Icon className ='mainIcon' path = {iconPath} />\r\n                                    <h3 className = 'tilteApp'>{this.state.title}</h3>\r\n                                </div>\r\n                                {this.props.location.pathname === '/Cabinet' ?\r\n                                    <div onClick = {this.add} className = 'header__newProject__AddButton'>\r\n                                        <Icon className = 'Cabinet' path = '/img/plus.png' />\r\n                                    </div>\r\n                                    : null\r\n                                }\r\n                                    <div  className = 'Navigator'>\r\n                                    <FontAwesomeIcon \r\n                                        className=\" about fas fa-2x fa-book\"  \r\n                                        icon = {faBook} \r\n                                        onClick = {this.redirectGuide} \r\n                                        />\r\n                                        <Icon className = 'about' onClick = {this.redirectAbout}\r\n                                            title = 'about'\r\n                                            path = '/img/about_logo.svg'\r\n                                        />\r\n                                        <Icon className = 'logoutButton'\r\n                                            onClick = {this.logOut}\r\n                                            title = 'logOut'\r\n                                            path = '/img/logOut.svg'\r\n                                        />\r\n                                    </div>\r\n                        </div>\r\n                </div>\r\n                </header>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n    componentDidlMount = () => {\r\n        eventEmitter.on('EventRedirectConfirm', this.confirm);\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        eventEmitter.off('EventRedirectConfirm', this.confirm);\r\n    }\r\n}\r\n\r\nexport default connect()(withRouter(Header));","import React, {useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport eventEmitter from '../../EventEmitter';\r\n\r\nconst ImageItem = props => {\r\n\r\n    const {selected} = props;\r\n    const [id] = useState(props.id);\r\n    const [urlRegular] = useState(props.urls.regular);\r\n    const [urlFull] = useState(props.urls.full);\r\n    const [isFull] = useState(props.isFull);\r\n    const [urlContent] = useState(props.urlContent);\r\n    const showImageMenu = event => {\r\n\r\n       eventEmitter.emit(\"EventShowMenuImage\",{\r\n            id: id,\r\n            url: urlRegular,\r\n            urlFull: urlFull,\r\n            iframe: urlContent\r\n        });\r\n        event.stopPropagation();\r\n    }\r\n\r\n    return (\r\n        <div className = {selected ? 'ItemBox selected' : 'ItemBox'}>\r\n            <img\r\n                className = 'ImageItem'\r\n                onClick = {showImageMenu}\r\n                src = {isFull ? urlFull : urlRegular}\r\n                alt = 'item'\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nImageItem.propTypes = {\r\n    id: PropTypes.oneOfType([\r\n        PropTypes.string,\r\n        PropTypes.number,\r\n    ]),\r\n    urls: PropTypes.object, // data with image path\r\n    isFull: PropTypes.bool, // mode view\r\n    urlContent: PropTypes.string // content path\r\n}\r\n\r\nexport default ImageItem;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Loader from '../../loading/Loader';\r\n\r\nconst CreateProject = props => {\r\n\r\n    const content = props.content; /** Content */\r\n    const {disabled,validateName,name,validateType} = content;\r\n    const nameLength = name.length; /** Length */\r\n\r\n\r\n    let isNumber = nameLength >= 4 && nameLength <= 20;\r\n\r\n    return (\r\n    <div className = 'Modal Modal__create'>\r\n        <h3>Create new Project</h3>\r\n        { nameLength <= 3 ?\r\n            <span className = 'warning'>{props.warningLengthMin}</span> : null\r\n        }\r\n        { nameLength >= 20 ?\r\n            <span className = 'warning'>{props.warningLengthMax}</span> : null\r\n        }\r\n        {\r\n            isNumber && !validateName ?\r\n            <span className = 'warning'>{props.warningNumber}</span> : null\r\n        }\r\n        <input\r\n            className = {validateName ? 'ready' : 'wrong'}\r\n            value = {props.name}\r\n            onChange = {props.cbValidateName}\r\n            type = 'text'\r\n            placeholder = \"Project name\"\r\n        />\r\n        { !validateType ?\r\n            <span className = 'warning'>{props.warningType}</span> : null\r\n        }\r\n        <select className = 'projectSelect' onChange = {props.cbSelectOption} >\r\n            <option value = 'empty'>--------</option>\r\n            <option value = 'landing'>Landing</option>\r\n        </select>\r\n        <input \r\n            onClick = {props.cbAddNewProject}\r\n            className = 'acceptButton'\r\n            disabled = {disabled}\r\n            type = 'button'\r\n            value = 'Submit'\r\n        />\r\n        <input onClick = {props.cbCancel} type ='button' value = 'Cancel' />\r\n        {props.loading && <Loader mode = 'create' />}\r\n    </div>\r\n    )\r\n}\r\n\r\nCreateProject.propTypes = {\r\n    content: PropTypes.object, // type color className\r\n    warningType: PropTypes.string, // errors\r\n    warningLengthMax: PropTypes.string, // error max length\r\n    warningLengthMin: PropTypes.string, // error min length\r\n    cbValidateName: PropTypes.func.isRequired, // callback validate\r\n    cbAddNewProject: PropTypes.func.isRequired, // callback add new project\r\n}\r\n\r\nexport default CreateProject;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport eventEmitter from '../../../EventEmitter';\r\nimport Icon from '../../Icon/icon';\r\nimport Loader from '../../loading/Loader';\r\n\r\nclass  SearchModal extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        modalSearchMode: PropTypes.string.isRequired, // search mode\r\n        content: PropTypes.object, // with search data\r\n        cbCancel: PropTypes.func.isRequired, // callback cancel\r\n        cbShowImage: PropTypes.func.isRequired, // callback show image\r\n        cbSetSelectedImage: PropTypes.func.isRequired, // callback show image\r\n    }\r\n\r\n    state = {\r\n        mode: this.props.modalSearchMode,\r\n        items: this.props.images,\r\n    }\r\n\r\n    search = event => {\r\n        /** event search on */\r\n        const value = this.refSearch ? this.refSearch.value : null;\r\n        this.props.cbSearch(event,value, this.props.modalSearchMode);\r\n        event.stopPropagation();\r\n    }\r\n\r\n    refSearch = null;\r\n    refSearchFunc = node => this.refSearch = node;\r\n\r\n    render(){\r\n\r\n        let {content} = this.props;\r\n        return (\r\n            <React.Fragment>\r\n                <div className = 'Modal Modal-search'>\r\n                <h3>\r\n                {this.props.modalSearchMode ? \r\n                    `Search ${this.props.modalSearchMode}` : '' \r\n                }\r\n                </h3>\r\n                { this.props.error ?\r\n                    <span className = 'error'>{content.error}</span> : null\r\n                }\r\n                <div className = 'Modal-search__controllers'>\r\n                    <input ref = {this.refSearchFunc} type = 'text' />\r\n                        <input\r\n                            disabled = {content.dissabled}\r\n                            className = 'acceptButton'\r\n                            type = 'button'\r\n                            value = 'Search'\r\n                            onClick = {this.search}\r\n                        />\r\n                    <input onClick = {this.props.cbCancel} type ='button' value = 'Cancel' />\r\n                </div>\r\n                <div className = 'searchResultBox'>\r\n                    {this.state.items}\r\n                    {this.props.loading ? <Loader type = 'images' /> : null}\r\n                </div>\r\n                </div>\r\n                {  this.props.menuActive ?\r\n                    <div className = 'ActionModalSearch'>\r\n                    <button onClick = {this.props.cbShowImage} className = 'actionModalSearch__view'>\r\n                        <Icon path = '/img/view.png' />\r\n                    </button>\r\n                    <button onClick = {this.props.cbSetSelectedImage} className = 'actionModalSearch__settings'>\r\n                        <Icon path = '/img/settings.png' />\r\n                    </button>\r\n                    </div>\r\n                    : null\r\n                }\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n    componentDidUpdate = (prevProps,prevState) => {\r\n        let {content} = this.props;\r\n        let {content: contentPrev} = prevProps;\r\n        const haveUpdate = (contentPrev.images !== content.images && content.images);\r\n        const isSelected = contentPrev.selectedItem !== content.selectedItem;\r\n        /** update if selected */\r\n        if (haveUpdate || isSelected){\r\n            let _items = this.props.cbMakeImageResultBox(content.images);\r\n            this.setState({\r\n                ...this.state,\r\n                items: [..._items]\r\n            });\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        eventEmitter.emit('EventBlockScroll', 'window');\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        eventEmitter.emit('EventBlockScroll', 'default');\r\n    }\r\n}\r\n\r\nexport default SearchModal;","import React,{Fragment} from 'react';\r\n\r\nimport isFetch from 'isomorphic-fetch';\r\nimport PropTypes from 'prop-types';\r\nimport eventEmitter,{controllerStream} from '../../EventEmitter.js';\r\nimport ImageItem from '../imageViewer/imageItem';\r\n\r\nimport CreateProject from './createProject/createProject';\r\nimport SearchModal from './Search/searchModal';\r\nimport './modal.scss';\r\n\r\n\r\nclass ModalWindow extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        workMode: PropTypes.string.isRequired, /** @Mode for modal */\r\n        cabinetStream: PropTypes.object, /** @Events stream cabinet */\r\n        eventStreamBuild: PropTypes.object, /** @Events stream build */\r\n        idComponent: PropTypes.oneOfType([\r\n            PropTypes.string,\r\n            PropTypes.number\r\n        ]) /** @Id current user project */\r\n    }\r\n\r\n    state = {\r\n        workMode: this.props.workMode,\r\n        loading: false,\r\n        items: [],\r\n        images: {\r\n            loading: false,\r\n            buttonSearchDisabled: false,\r\n            selectedItem: null, \r\n            showUrl: null, \r\n            images: [],\r\n            urlFull: null,\r\n            imageBoxView: false, \r\n            iframe: null,\r\n            error: ''\r\n        },\r\n        newProject: {\r\n            validateName: false,\r\n            validateType: false,\r\n            disabled: true,\r\n            name: '',\r\n            type: 'empty'\r\n        },\r\n        imageMenuActive: false,\r\n        warning: {\r\n            lengthMax: 'Max length: 20 laters',\r\n            warningNumber: `Don't use numbers`,\r\n            lengthMin: 'Min length: 4 letters',\r\n            type: 'Select type of webpage',\r\n        }\r\n    }\r\n\r\n    inputSearch = null;\r\n    inputSelect = null;\r\n\r\n    searchData = (event,value, mode) => {\r\n        /** search images or media */\r\n        this.setState({...this.state, \r\n            images: {\r\n                ...this.state.images,\r\n                loading: true,\r\n                buttonSearchDisabled: true\r\n            }\r\n        });\r\n\r\n        let search = null;\r\n        if (value) search = value;\r\n        else search = this.inputSearch.value;\r\n\r\n        if (mode !== 'media'){\r\n        const modeAPI = 'search/photos/?page=1&per_page=40&query=';\r\n        const api = `https://api.unsplash.com/${modeAPI}`;\r\n \r\n        isFetch(`${api + search}&client_id=${process.env.REACT_APP_UNSPLASH_TOKEN}`)\r\n        .then(response => {\r\n            if (response.ok) return response.json();\r\n            else throw new Error('request invalid');\r\n        })\r\n        .then(response => {\r\n            let {results} = response;\r\n            if (results.length) /** save results */\r\n            this.setState({\r\n                ...this.state,\r\n                images: {\r\n                    ...this.state.images,\r\n                    loading: false,\r\n                    imageBoxView: true,\r\n                    error: '',\r\n                    images: [...results],\r\n                    buttonSearchDisabled: false\r\n                },\r\n            });\r\n            else throw new Error('Photos not found');\r\n        })\r\n        .catch(error => {\r\n            console.error(error.message);\r\n            this.setState({\r\n                ...this.state,\r\n                images: {\r\n                    ...this.state.images,\r\n                    buttonSearchDisabled: false,\r\n                    loading: false,\r\n                    error: error.message},\r\n                imageBoxView: false,\r\n            });\r\n        });\r\n        } else this.searchYouTubeAPI(search);\r\n    }\r\n\r\n\r\n    searchYouTubeAPI = (search) => {\r\n        /** search media */\r\n        const API = `https://www.googleapis.com/youtube/v3/search?part=snippet`;\r\n        const RAITE = `&maxResults=25&order=date&q=${search}`;\r\n        const KEY = `&key=${process.env.REACT_APP_YOUTUBE_SEARCH_TOKEN}`;\r\n        isFetch(API + RAITE + KEY)\r\n        .then(res => {\r\n            if (res.ok)\r\n            return res.json();\r\n            else throw new Error (`Error ${res.status}`);\r\n        })\r\n        .then(res => {\r\n            const arrayItems = [];\r\n            res.items.forEach(item => {\r\n                arrayItems.push({\r\n                    urls: { regular: item.snippet.thumbnails.high.url },\r\n                    videoId: item.id.videoId\r\n                })\r\n            });\r\n            return arrayItems;\r\n        })\r\n        .then(results => {\r\n            this.setState({ /** save results */\r\n                ...this.state,\r\n                images: {\r\n                    ...this.state.images,\r\n                    loading: false,\r\n                    imageBoxView: true,\r\n                    error: '',\r\n                    images: [...results],\r\n                    buttonSearchDisabled: false\r\n                },\r\n            });\r\n        })\r\n        .catch(error => console.error(error));\r\n    }\r\n\r\n    showMenuImage = event => {\r\n        /** tools for show or set content */\r\n        this.setState({\r\n            ...this.state, \r\n            imageMenuActive: true,\r\n            images: {\r\n                ...this.state.images,\r\n                selectedItem: event.id, \r\n                showUrl: event.url,\r\n                urlFull: event.urlFull,\r\n                iframe: event.iframe\r\n\r\n            }\r\n        });\r\n    }\r\n\r\n    showImage = event => {\r\n        /** on viewer */\r\n        const {showUrl, iframe} = this.state.images;\r\n\r\n        this.props.eventStreamBuild.emit(\"EventView\", {\r\n            action: true, \r\n            target: showUrl ? showUrl : null,\r\n            iframe: iframe,\r\n            mode: this.props.modalSearchMode\r\n        });\r\n        event.stopPropagation();\r\n    }\r\n\r\n    setSelectedImage = event => {\r\n        /** set current selected content */\r\n        let data = {...this.state.images};\r\n        if (this.props.modalSearchMode === 'background'){\r\n            controllerStream.emit(`EventSetBackgroundImage${this.props.idComponent}`,data);\r\n            eventEmitter.emit(`EventSetBImageInstumentPanel`,{images: data, mode: this.props.modalSearchMode});\r\n        } else if (this.props.modalSearchMode === 'image'){\r\n            controllerStream.emit(`EventSetCurrentImage${this.props.idComponent}`, data);\r\n            eventEmitter.emit(`EventSetBImageInstumentPanel`, {images: data,  mode: this.props.modalSearchMode });\r\n        } else if (this.props.modalSearchMode === 'media'){\r\n            controllerStream.emit(`EventSetContentMedia${this.props.idComponent}`,{\r\n                    iframe: data.iframe,\r\n                    mode: this.props.modalSearchMode\r\n                }\r\n            );\r\n            eventEmitter.emit(`EventSetIframe`, {iframe: data.iframe});\r\n        }\r\n\r\n        event.stopPropagation();\r\n    };\r\n\r\n    makeImageResultBox = (items) => {\r\n        /** make results */\r\n        if (!items) return null;\r\n        return items.map((item,i) =>{\r\n                return <ImageItem\r\n                            key = {`item${item.videoId}${i}`}\r\n                            id = {i}\r\n                            urlContent = {item.videoId ? item.videoId : null}\r\n                            selected = {this.state.images.selectedItem === i ? true : false} \r\n                            isFull = {false}\r\n                            urls = {item.urls}\r\n                        />\r\n        });\r\n\r\n    }\r\n\r\n    addNewProject = event => {\r\n        /** create new projects modal */\r\n        let mode = this.state[this.state.workMode];\r\n        if (mode.validateType &&  mode.validateName) {\r\n\r\n            this.setState({\r\n                ...this.state,\r\n                loading: true,\r\n            });\r\n            this.props.cabinetStream.emit('EventAddProject',\r\n            {\r\n                title: this.state[this.state.workMode].name,\r\n                type: this.state[this.state.workMode].type\r\n            });\r\n\r\n            this.props.cabinetStream.emit('EventChangeWorkMode',{action: 'default'});\r\n        }\r\n    }\r\n\r\n    selectOption = event => {\r\n        /** type project */\r\n        let inputs = {...this.state[this.state.workMode]};\r\n        inputs.type = event.target.value;\r\n        inputs.validateType = inputs.type !== 'empty';\r\n        inputs.disabled = inputs.validateType && inputs.validateName ? false : true;\r\n        this.setState({\r\n            ...this.state,\r\n            [this.state.workMode]: inputs\r\n        });\r\n    }\r\n\r\n    validateName = event => {\r\n        /** validate name project */\r\n        let inputs = {...this.state[this.state.workMode]};\r\n        inputs.name = event.target.value;\r\n        inputs.validateName = /^\\D{4,20}$/i.test(inputs.name);\r\n        inputs.disabled = inputs.validateType && inputs.validateName ? false : true;\r\n        this.setState({\r\n            ...this.state,\r\n            [this.state.workMode]: inputs\r\n        })\r\n    };\r\n\r\n    cancel = event => {\r\n        /** remove modal */\r\n        if (this.state.workMode === 'Search')\r\n        this.props.eventStreamBuild.emit(\"EventModalSearchOn\", {action: 'offline', mode: null});\r\n        else  this.props.cabinetStream.emit('EventChangeWorkMode',{active: false, action: 'default'});\r\n    }\r\n\r\n    refSelect = (node) => this.inputSelect = node;\r\n    refSearch = node => this.inputSearch = node;\r\n\r\n\r\n\r\n    render(){\r\n           switch (this.state.workMode){\r\n              \r\n            case 'newProject':\r\n                return (\r\n                        <CreateProject\r\n                                content = {this.state[this.state.workMode]}\r\n                                warningType = {this.state.warning.type}\r\n                                warningNumber = {this.state.warning.warningNumber}\r\n                                warningLengthMin = {this.state.warning.lengthMin}\r\n                                warningLengthMax = {this.state.warning.lengthMax}\r\n                                cbValidateName = {this.validateName}\r\n                                cbSelectOption = {this.selectOption}\r\n                                cbAddNewProject = {this.addNewProject}\r\n                                cbCancel = {this.cancel}\r\n                                loading = {this.state.loading}\r\n                        />\r\n                )\r\n            case 'Search':\r\n                    return (\r\n                            <div className = 'searchWrapper'> \r\n                                <SearchModal\r\n                                    content = {this.state.images}\r\n                                    cbCancel = {this.cancel}\r\n                                    menuActive = {this.state.imageMenuActive}\r\n                                    cbMakeImageResultBox = {this.makeImageResultBox}\r\n                                    cbShowImage = {this.showImage}\r\n                                    cbSetSelectedImage = {this.setSelectedImage}\r\n                                    modalSearchMode = {this.props.modalSearchMode}\r\n                                    cbSearch = {this.searchData}\r\n                                    loader = {this.state.loading}\r\n                                />\r\n                            </div>\r\n                    )\r\n\r\n            default: return <Fragment></Fragment>\r\n        }\r\n    }\r\n\r\n    componentDidMount = event => {\r\n        if (this.state.workMode === 'Search')\r\n            eventEmitter.on('EventShowMenuImage', this.showMenuImage);\r\n    }\r\n\r\n    componentWillUnmount = event => {\r\n        if (this.state.workMode === 'Search')\r\n            eventEmitter.off('EventShowMenuImage', this.showMenuImage);\r\n    }\r\n}\r\n\r\nexport default ModalWindow;\r\n\r\n","import {createProjectAction, errorAction} from '../actions';\r\n\r\n\r\nfunction random(min){ /** Generate keys */\r\n    return `${Math.floor(min + Math.random() * (10000-min))}`\r\n}\r\n\r\n\r\nconst middlewareCreateProject = (uid, list, title, type) => async (dispatch,getState, {firebase}) => {\r\n    /** Create new project */\r\n    let lastProject = [...list];\r\n    const lastIndex = lastProject.length  ? lastProject[lastProject.length-1].id + 1 : 0;\r\n    const sectionsProject = [];\r\n    if (type === 'portfolio') sectionsProject.push(\"Header\");\r\n    else sectionsProject.push(\"Header\");\r\n    const header = {\r\n        backgroundImage: null,\r\n        backgroundColor: null,\r\n        id: `MainBackgroundHeader${random(0)}`,\r\n        targetSection: \"Header\",\r\n        type: \"background\"\r\n    }\r\n\r\n    lastProject.push({\r\n        id: lastIndex,\r\n        title: title,\r\n        type: type,\r\n        components: [header],\r\n        sectionsProject: [...sectionsProject],\r\n    });\r\n    /** Load project in database */\r\n    await firebase.db.collection(\"users\").doc(uid).update({\r\n        'projects': lastProject,\r\n    })\r\n    .then (() => dispatch(createProjectAction(lastProject)))\r\n    .catch(error => {\r\n        console.error(error.message);\r\n        dispatch(errorAction(error.message));\r\n    })\r\n};\r\n\r\nexport {\r\n    middlewareCreateProject\r\n}","import React, {useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {withRouter, Redirect} from 'react-router-dom';\r\n\r\nfunction Item(props) {\r\n    /** Project item in cabinet */\r\n    const [path] = useState( `/Cabinet/Build/${props.id}`);\r\n    const [productionPath] = useState(`/Cabinet/Build/${props.id}/Production/`);\r\n\r\n    let [canBuild,setCanBuild] = useState(false);\r\n    let [canProd, setCanProd] = useState(false);\r\n\r\n    const [id] = useState(props.id);\r\n    const [name] = useState(props.name);\r\n    const [type] = useState(props.type);\r\n\r\n\r\n    const build = event => {\r\n        if(props.location.pathname !== path)\r\n            setCanBuild(true);\r\n        event.stopPropagation();\r\n    };\r\n\r\n    const showProduction = event => {\r\n        if(props.location.pathname !== path)\r\n        setCanProd(true);\r\n        event.stopPropagation();\r\n    };\r\n\r\n    const deleteItem = event => {\r\n        props.cabinetStream.emit('EventDeleteItem',{\r\n            id: props.id,\r\n            name: props.name,\r\n            type: props.type\r\n        });\r\n        event.stopPropagation();\r\n    };\r\n\r\n\r\n    if (canBuild) return <Redirect to = {path} />\r\n    else if (canProd) return <Redirect to = {productionPath} />\r\n    else return (\r\n            <div className = 'item' data-id = {id}>\r\n                <p className = 'ProjectName'>{name}</p>\r\n                <p className = 'ProjectType'>{type}</p>\r\n                <div className = 'projectController'>\r\n                    <input \r\n                        onClick = {build} \r\n                        className = 'projectControllerButton_enter' \r\n                        type = 'button' \r\n                        value = 'enter build' />\r\n                    <input onClick = {deleteItem} \r\n                        className = 'projectControllerButton_delete' \r\n                        type = 'button' \r\n                        value = 'delete' />\r\n                </div>\r\n                <input onClick = {showProduction} \r\n                    className = 'productionButton' \r\n                    type = 'button' \r\n                    value = 'Production' />\r\n            </div>\r\n        )\r\n}\r\n\r\nItem.propTypes = {\r\n    id: PropTypes.number.isRequired, // id item\r\n    name: PropTypes.string.isRequired, // item name\r\n    type: PropTypes.string.isRequired, // item type\r\n}\r\n\r\nexport default withRouter(Item);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport {middlewareCreateProject} from '../../redux/middleware/createProjectMiddleware';\r\n// import {CSSTransition, TransitionGroup} from 'react-transition-group';\r\nimport './list.scss';\r\n\r\nimport Item from './Item';\r\n\r\nclass List extends React.PureComponent {\r\n    /** List of projects items in cabinet */\r\n    static propTypes = {\r\n        dispatch: PropTypes.func.isRequired, /** @dispatch redux */\r\n        idUser: PropTypes.string.isRequired, /** @UID current user */\r\n        list: PropTypes.array.isRequired, /** @List user projects */\r\n    }\r\n\r\n    state = {\r\n        redirect: false,\r\n    }\r\n\r\n    addNewProject = (item) => {\r\n        if (this.props.idUser) {\r\n            this.props.dispatch(middlewareCreateProject(\r\n                    this.props.idUser,\r\n                    this.props.list,\r\n                    item.title,\r\n                    item.type\r\n                ));\r\n        } else this.setState({...this.state, redirect: true});\r\n    }\r\n\r\n\r\n    makeList = (list) => {\r\n\r\n        return list.map (project => {\r\n\r\n            return(\r\n                <Item\r\n                    key = {project.id}\r\n                    id = {project.id}\r\n                    name = {project.title}\r\n                    type = {project.type}\r\n                    cabinetStream = {this.props.cabinetStream}\r\n                />\r\n            )\r\n        });\r\n    }\r\n\r\n    render(){\r\n        if (this.state.redirect)\r\n            return <Redirect to = { '/'} />\r\n            else return (\r\n                    <div className = 'projectsList__list'>\r\n                        {this.makeList([...this.props.list])}\r\n                    </div>\r\n                )\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.props.cabinetStream.on('EventAddProject',this.addNewProject);\r\n    }\r\n\r\n      componentWillUnmount = () => {\r\n        this.props.cabinetStream.off('EventAddProject',this.addNewProject);\r\n      }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        idUser: state.cabinet.idUser,\r\n        list: [...state.cabinet.projects]\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(List);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport List from '../List/List.jsx';\r\nimport './ProjectsSection.scss';\r\n\r\nconst ProjectsSection = props => {\r\n        return (\r\n            <section className = 'projectsList'>\r\n                <div className = 'container'>\r\n                    <div className = 'flex-column'>\r\n                        <div className = 'projectsList__box'>\r\n                            <h3>Your Projects</h3>\r\n                        </div>\r\n                        <List cabinetStream = {props.cabinetStream} />\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        )\r\n\r\n}\r\n\r\nProjectsSection.propTypes = {\r\n    cabinetStream: PropTypes.object /** @Events stream */\r\n}\r\n\r\nexport default ProjectsSection;","import React,{Fragment} from 'react';\nimport PropTypes from 'prop-types';\nimport {connect} from 'react-redux';\nimport {Redirect} from 'react-router-dom';\nimport {CSSTransition} from 'react-transition-group';\n/* ------- Event stream ------- */\nimport Events from 'events';\n/* ------- HOC for het firebase controll object ------- */\nimport withFirebase from '../../components/withFirebase';\n/* ------- Moddlewares ------- */\nimport {middlewareLogOutUser} from '../../redux/middleware/loadUserMiddleware';\nimport middlewareDelete from '../../redux/middleware/middlewareDelete';\n/* ------- Child components ------- */\nimport Loader from '../../components/loading/Loader';\nimport Header from '../../components/header/Header';\nimport Modal from '../../components/modalWindow/ModalWindow';\nimport ProjectsSection from '../../components/ProjectsSection/ProjectsSection';\nimport './Cabinet.scss';\n\nclass Cabinet extends React.PureComponent {\n\n\tstatic propTypes = {\n\t\tfirebase: PropTypes.object.isRequired, /** @firebase class for use firebase functions */\n\t\tactive: PropTypes.bool, /** @active - status firebase auth */\n\t\tdispatch: PropTypes.func.isRequired, /** @dispatch - redux */\n\t\thistory: PropTypes.object.isRequired, /** @Router HTML5 history */\n\t\tlocation: PropTypes.object.isRequired, /** @Router */\n\t\tmatch: PropTypes.object.isRequired, /** @Router */\n\t\tidUser: PropTypes.string, /** @Session user id from redux */\n\t\tprojects: PropTypes.arrayOf(PropTypes.object).isRequired /** @Projects array with user projects from redux */\n\t}\n\n\tcabinetStream = new Events();\n\n\tstate = {\n\t\tmodalActive: false,\n\t\tworkMode: 'default',\n\t}\n\n\tlogOut = () => {\n\t\t/** destroy session */\n\t\tthis.props.dispatch(middlewareLogOutUser(this.props.idUser));\n\t}\n\n\tdeletItem = event => {\n\t\t/** destroy project */\n\t\tthis.props.dispatch(middlewareDelete({...event, uid: this.props.firebase.getCurrentUser().uid}));\n\t};\n\n\t\tchangeWorkMode = event => {\n\t\t/** workMode changes */\n\t\tthis.setState ({\n\t\t...this.state,\n\t\tmodalActive: event.active,\n\t\tworkMode: event.action\n\t\t});\n\t\t}\n\n\n\trender(){\n\t\tif (this.props.active){\n\t\treturn (\n\t\t<Fragment>\n\t\t\t\t<Header cabinetStream = {this.cabinetStream} \n\t\t\t\t\ttitle = {this.props.config.title} \n\t\t\t\t\tidUser = {this.props.idUser} \n\t\t\t\t/>\n\t\t\t\t<div className = 'Cabinet'>\n\t\t\t\t<CSSTransition\n\t\t\t\t\tin={this.state.modalActive}\n\t\t\t\t\ttimeout={300}\n\t\t\t\t\tclassNames=\"modalAnimation\"\n\t\t\t\t\tunmountOnExit\n\t\t\t\t\tappear\n\t\t\t\t>\n\t\t\t\t<Modal\n\t\t\t\t\tcabinetStream = {this.cabinetStream}\n\t\t\t\t\tworkMode = {this.state.workMode} \n\t\t\t\t/>\n\t\t\t\t</CSSTransition>\n\t\t\t\t<ProjectsSection cabinetStream = {this.cabinetStream} />\n\t\t\t\t</div>\n\t\t\t</Fragment>\n\t\t)\n\t\t} else if (!this.props.firebase.getCurrentUser()) return <Redirect to = { '/'} />\n\t\telse return <Loader path = '/img/loading.gif' type = 'Cabinet' />\n\t}\n\n\n\tcomponentDidMount = () => {\n\t\tthis.cabinetStream.on('EventDeleteItem', this.deletItem);\n\t\tthis.cabinetStream.on('EventChangeWorkMode', this.changeWorkMode);\n\t};\n\n\tcomponentWillUnmount = () => {\n\t\tthis.cabinetStream.off('EventDeleteItem', this.deletItem);\n\t\tthis.cabinetStream.off('EventChangeWorkMode', this.changeWorkMode);\n\t}\n}\n\n\tconst mapStateToProps = (state) => {\n\treturn {\n\t\tidUser: state.cabinet.idUser,\n\t\tprojects: [...state.cabinet.projects],\n\t\tactive: state.cabinet.active\n\t}\n\t};\n\n\texport default connect(mapStateToProps)(withFirebase(Cabinet));\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport eventEmitter,{controllerStream} from '../../../EventEmitter';\r\nimport styled from 'styled-components';\r\n\r\n\r\nconst Background = styled.div`\r\n    position: relative;\r\n    width: ${props => props.width || '100%'};\r\n    height: ${props => props.height || '100%'};\r\n    background-color: ${props => props.backgroundColor};\r\n    ${props => props.backgroundImage ? `background-image: url(${props.backgroundImage});` : null}\r\n    background-size: cover;\r\n`;\r\n\r\nclass BackgroundComponent extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        id: PropTypes.string.isRequired,\r\n        targetSection: PropTypes.string,\r\n        background: PropTypes.string,\r\n        backgroundImage: PropTypes.string,\r\n        width: PropTypes.string,\r\n        height: PropTypes.string,\r\n        sectionNumber: PropTypes.number,\r\n        mode: PropTypes.string.isRequired\r\n    };\r\n\r\n    state = {\r\n        id: this.props.id,\r\n        targetSection: this.props.targetSection,\r\n        backgroundColor: this.props.background || this.props.color,\r\n        backgroundImage: this.props.backgroundImage,\r\n        width: this.props.width,\r\n        height: this.props.height\r\n    };\r\n\r\n    boxComponent = null; // ref\r\n    boxComponentRef = node => this.boxComponent = node;\r\n\r\n    saveDataParent = () => {\r\n        /** \"memorize\" paren sizes  */\r\n        let boxInform =  this.boxComponent.getBoundingClientRect();\r\n        controllerStream.emit(`EventSaveWidth${this.state.targetSection}`,{\r\n            countSection: this.props.countSection,\r\n            sectionNumber: this.props.sectionNumber,\r\n            size: {width: boxInform.width, height: boxInform.height}\r\n        });\r\n    };\r\n\r\n    openBgInstruments = event => {\r\n        /** open panel instrument trigger */\r\n        const componentsPatternBackground = {\r\n            id: this.state.id,\r\n            targetSection: this.state.targetSection,\r\n            type: 'background',\r\n            backgroundColor: this.state.backgroundColor,\r\n            backgroundImage: this.state.backgroundImage,\r\n        }\r\n        eventEmitter.emit('EventInstrumentPanel',{\r\n            componentStats: componentsPatternBackground,\r\n            targetSection: this.state.targetSection,\r\n            type: 'background',\r\n            id: this.state.id,\r\n        });\r\n        event.stopPropagation();\r\n    };\r\n\r\n    changeColor = eventItem => {\r\n         /** change bg color */\r\n        this.setState({\r\n            ...this.state,\r\n            backgroundColor: eventItem.colorRGB\r\n        });\r\n    };\r\n\r\n    setBackgroundImage = event => {\r\n         /** change bg image */\r\n        const {urlFull} = event;\r\n        this.setState({\r\n            ...this.state,\r\n            backgroundImage: urlFull,\r\n        });\r\n    };\r\n\r\n    render(){\r\n            if (this.props.mode === 'dev'){\r\n        return (\r\n            <Background\r\n                key = {this.state.id}\r\n                ref  = {this.boxComponentRef}\r\n                onDoubleClick={this.openBgInstruments}\r\n                data-name = {this.state.targetSection}\r\n                backgroundColor = {this.state.backgroundColor}\r\n                backgroundImage = {this.state.backgroundImage}\r\n                width = {this.state.width}\r\n                height = {this.state.height}\r\n            >\r\n                {this.props.children}\r\n            </Background>\r\n        )\r\n    } else if (this.props.mode === 'production'){\r\n\r\n        return (\r\n            <Background\r\n                key = {this.state.id}\r\n                ref  = {this.boxComponentRef}\r\n                data-name = {this.state.targetSection}\r\n                backgroundColor = {this.state.backgroundColor}\r\n                backgroundImage = {this.state.backgroundImage}\r\n                width = {this.state.width}\r\n                height = {this.state.height}\r\n            >\r\n            {this.props.children}\r\n            </Background>\r\n        )\r\n    }\r\n\r\n    }\r\n\r\n    componentDidUpdate = () => {\r\n        this.saveDataParent();\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.saveDataParent();\r\n        controllerStream.on(`EventChangeColorBackground${this.state.id}`, this.changeColor);\r\n        controllerStream.on(`EventSetBackgroundImage${this.state.id}`, this.setBackgroundImage);\r\n    };\r\n\r\n    componentWillUnmount = () => {\r\n        controllerStream.off(`EventChangeColorBackground${this.state.id}`, this.changeColor);\r\n        controllerStream.off(`EventSetBackgroundImage${this.state.id}`, this.setBackgroundImage);\r\n    };\r\n};\r\n\r\n\r\n\r\nexport default BackgroundComponent;","import React, {Fragment} from 'react';\r\nimport eventEmitter from '../../../EventEmitter';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport BackgroundComponent from '../components/Background';\r\nimport Loader from '../../loading/Loader';\r\n\r\nimport './MainBackground.scss';\r\n\r\nclass MainBackground extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        countComponents: PropTypes.number.isRequired, /** @Number last project */\r\n        menuActive: PropTypes.bool, /** @Bool active menu or unactive */\r\n        id: PropTypes.string.isRequired, /** @id current project */\r\n    };\r\n\r\n    state = {\r\n        targetSection: this.props.id,\r\n        editRedy: false,\r\n        component: null,\r\n        children: null,\r\n    };\r\n\r\n    changeMode = () => {\r\n        if (!this.state.editStart || this.props.id !== this.props.editComponentName) {\r\n            this.setState({\r\n                ...this.state,\r\n                editStart: true\r\n            }, () =>\r\n            eventEmitter.emit('EventModeEdit', {\r\n                ...this.state,\r\n                editStart: true,\r\n                targetSection: this.state.targetSection,\r\n            }));\r\n        }\r\n    };\r\n\r\n    refSection = null;\r\n    refSectionFunc = node => node ? this.refSection = {data: node.getBoundingClientRect(), node: node} : node;\r\n\r\n    render() {\r\n\r\n        if (this.props.mode === 'dev' && this.state.component){\r\n            return (\r\n                <Fragment>\r\n                    <section\r\n                        key = {this.props.sectionNumber}\r\n                        className = {`element${this.props.sectionNumber}`} \r\n                        ref={this.refSectionFunc}\r\n                        data-class = 'editable' \r\n                        onClick = {this.changeMode}\r\n                    >\r\n                        <BackgroundComponent \r\n                            mode = {this.props.mode}\r\n                            sectionNumber = {this.props.sectionNumber}\r\n                            countSection = {this.props.countSection}\r\n                            {...this.state.component}\r\n                        >\r\n                            {this.state.children || null}\r\n                        </BackgroundComponent>\r\n                        {!this.state.editStart &&\r\n                            <div className = 'warningEdit'><p>Click for start edit</p></div>\r\n                        }\r\n                    </section>\r\n                </Fragment>\r\n            );\r\n        } else if (this.props.mode === 'production' && this.state.component){\r\n            return (\r\n                <Fragment>\r\n                    <section \r\n                        key = {this.props.sectionNumber}\r\n                        ref={this.refSectionFunc} \r\n                        data-class = 'production'\r\n                    >\r\n                        <BackgroundComponent\r\n                            key = {this.props.sectionNumber}\r\n                            mode = {this.props.mode}\r\n                            sectionNumber = {this.props.sectionNumber}\r\n                            {...this.state.component}\r\n                        >\r\n                        {this.state.children || null}\r\n                        </BackgroundComponent>\r\n                    </section>\r\n                </Fragment>\r\n            );\r\n        }\r\n        else return <Loader type = {`${this.props.mode} components`} />;\r\n    }\r\n\r\n\r\n    componentDidMount = () => {\r\n        if (!this.state.component){ /** create bg */\r\n            let component = this.props.currentProjectsData.components.find(item =>\r\n                                            item.targetSection === this.props.id);\r\n            const children = this.props.componentJSX.filter(item => \r\n                item.targetSection === this.props.id && item.id !== component.id)\r\n                            .map(item => item.component);\r\n           this.setState({\r\n               ...this.state,\r\n               component: component,\r\n               children: children,\r\n           });\r\n        }\r\n    }\r\n\r\n    componentDidUpdate = (prevProps) => {\r\n        const needUpdate = this.props.countComponents !== prevProps.countComponents;\r\n        if (!this.state.component){ /** if need create new section */\r\n            let component = this.props.currentProjectsData.components.find(item =>\r\n                                            item.targetSection === this.props.id);\r\n            const children = this.props.componentJSX.filter(item => item.targetSection === this.props.id)\r\n                            .map(item => item.component);\r\n           this.setState({\r\n               ...this.state,\r\n               component: component,\r\n               children: children,\r\n           });\r\n        }\r\n        if (needUpdate){\r\n            const children = this.props.componentJSX.filter(item => item.targetSection === this.props.id)\r\n            children && this.setState({...this.state,children: children.map(item => item.component) });\r\n        }\r\n    }\r\n}\r\nexport default MainBackground;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport MainBackground from './MainBackground/MainBackground';\r\n\r\n\r\nconst Section = props => {\r\n    if (props.mode === 'dev'){\r\n    const {currentProjectsData} = props.userData;\r\n    const section = currentProjectsData.sectionsProject;\r\n\r\n            return section.map((item,i) => {\r\n                return (\r\n                        <MainBackground\r\n                            key = {item}\r\n                            componentJSX = {props.componentJSX}\r\n                            currentProjectsData = {currentProjectsData}\r\n                            editComponentName = {props.editComponentName}\r\n                            countComponents = {props.componentJSX.length}\r\n                            menuActive = {props.menuActive}\r\n                            sizeParentBox = {props.sizeParentBox}\r\n                            id = {item}\r\n                            countSection = {currentProjectsData.sectionsProject.length}\r\n                            sectionNumber = {i}\r\n                            mode = {props.mode}\r\n                        />\r\n                );\r\n            });\r\n    } else if (props.mode === 'production'){\r\n       const {section} = props;\r\n       const {currentProjectsData} = props;\r\n        return section.map((item,i) => {\r\n            return (\r\n                    <MainBackground\r\n                        key = {item}\r\n                        componentJSX = {props.componentsProdJSX}\r\n                        currentProjectsData = {currentProjectsData}\r\n                        editComponentName = {props.editComponentName}\r\n                        countComponents = {props.componentsProdJSX.length}\r\n                        sizeParentBox = {props.sizeParentBox}\r\n                        id = {item}\r\n                        sectionNumber = {i}\r\n                        mode = {props.mode}\r\n                    />\r\n            );\r\n        });\r\n    }\r\n}\r\n\r\nSection.propTypes = {\r\n    componentJSX: PropTypes.array, /// array with jsx components\r\n    editComponentName: PropTypes.string, // name current edit component\r\n    menuActive: PropTypes.bool, // build menu\r\n    mode: PropTypes.string.isRequired, // curent mode\r\n    sizeParentBox: PropTypes.object, // data with size main component\r\n    userData: PropTypes.object // users data\r\n}\r\n\r\nexport default Section;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport eventEmitter,{controllerStream} from '../../../EventEmitter';\r\nimport styled from 'styled-components';\r\n\r\n\r\nconst InputComponent = styled.input.attrs(props => {\r\n    if (props.mode !== 'production')\r\n    return ({\r\n        style: {\r\n            zIndex: props.indexZ ? '9999' : null,\r\n            left: props.coordX ? props.coordX : '45%',\r\n            top:  props.coordY ? props.coordY : '0%',\r\n        }\r\n    })\r\n})`\r\n    width: ${props => props.size ? props.size.w + 'px' : null};\r\n    color: white;\r\n    height: ${props => props.size ? props.size.h + 'px' : null};\r\n    font-size: ${props => props.fontSize ? props.fontSize + 'px' : null};\r\n    position: absolute;\r\n    background-color: ${props => props.color || null};\r\n    border: ${props => `1px solid ${props.color}`};\r\n    border-radius: ${props => props.borderRadius ? props.borderRadius + 'px' : null};\r\n    white-space: normal;\r\n    font-weight: bold;\r\n    transition: .3s transform linear;\r\n\r\n    :active {\r\n        border: ${props =>`2px dotted ${props.color}`};\r\n        transform: scale(1.05);\r\n    }\r\n`;\r\n\r\nconst ProductionStyle = styled(InputComponent)`\r\n    left: ${props => props.coordX ? props.coordX : '45%'};\r\n    top:  ${props => props.coordY ? props.coordY : '0%'};\r\n`;\r\n\r\n\r\nclass Input extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        id: PropTypes.oneOfType([\r\n            PropTypes.string,\r\n            PropTypes.number\r\n        ]).isRequired,\r\n        targetSection: PropTypes.string,\r\n        sizeParentBox: PropTypes.object,\r\n    }\r\n\r\n    state = {\r\n        id: this.props.id,\r\n        istrumentsActive: false,\r\n        getSizeBool: false,\r\n        countSection: 0,\r\n        borderRadius: this.props.borderRadius,\r\n        sectionNumber: 0,\r\n        typeInput: this.props.typeInput || 'button',\r\n        sizeParentBox: this.props.sizeParentBox,\r\n        targetSection: this.props.targetSection,\r\n        size: this.props.size && this.props.size.w ? this.props.size : {w: '100', h:'50'},\r\n        fontSize: this.props.fontSize || 20,\r\n        color: this.props.color || null,\r\n        shiftCoords: null,\r\n        content: this.props.content || 'Input',\r\n        posInput: this.props.coords.x ? {x: this.props.coords.x, y: this.props.coords.y} : null,\r\n        startDragNdrop: false,\r\n    }\r\n\r\n    openInputInstruments = event => {\r\n\r\n        const componentsPatternImage = {\r\n            id: this.state.id,\r\n            targetSection: this.state.targetSection,\r\n            typeInput: this.state.typeInput,\r\n            type: 'input',\r\n            color: this.state.color,\r\n            borderRadius: this.state.borderRadius,\r\n            zIndex: null,\r\n            size: {...this.state.size},\r\n            fontSize: this.state.fontSize,\r\n            content: this.state.content,\r\n            coords: {...this.state.posInput}, // x, y\r\n        }\r\n\r\n        eventEmitter.emit(`EventInstrumentPanel`,{\r\n            componentStats: componentsPatternImage,\r\n            targetSection: this.state.targetSection,\r\n            id: this.state.id,\r\n            sizeTextValue: this.state.size\r\n        });\r\n        this.setState({...this.state, istrumentsActive: true});\r\n        event.stopPropagation();\r\n    };\r\n\r\n    saveCoords = event => {\r\n        if (event.nativeEvent.which !== 1) return false;\r\n        const element = this.refInput.getBoundingClientRect();\r\n\r\n        const cords = {\r\n            left: element.left,\r\n            top: element.top,\r\n            width: element.right - element.left,\r\n            height: element.bottom - element.top\r\n        }\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            shiftCoords: {x: event.clientX - cords.left, y: event.clientY - cords.top},\r\n            startDragNdrop: !this.state.startDragNdrop ? true : false\r\n        });\r\n\r\n        event.stopPropagation();\r\n    };\r\n\r\n    changeSize = eventSize => {\r\n        this.setState({...this.state, size: eventSize.size});\r\n    };\r\n\r\n    changeColor = colorRGB => {\r\n\r\n        if (typeof colorRGB === 'string')\r\n            this.setState({\r\n                ...this.state,\r\n                color: colorRGB\r\n            });\r\n    };\r\n\r\n    changeSizeText = eventSize => {\r\n        this.setState({...this.state, fontSize: eventSize.size});\r\n    };\r\n\r\n    setBorderRadius = eventItem => {\r\n        let radius = eventItem.borderRadius > 200 ? 200 : eventItem.borderRadius;\r\n        radius = eventItem.borderDown < 0 ? 0 : eventItem.borderRadius;\r\n            this.setState({\r\n                ...this.state,\r\n                borderRadius: radius\r\n            });\r\n    };\r\n\r\n    changeContent = eventItem => {\r\n        let booldContent = eventItem.content || eventItem.content === '';\r\n        if (booldContent)\r\n            this.setState({\r\n                ...this.state,\r\n                content: eventItem.content\r\n            });\r\n    }\r\n\r\n\r\n\r\n    checkPivotPosition = (coordX, coordY) => {\r\n\r\n        const element = this.refInput.getBoundingClientRect();\r\n        const borderTopLeft = 0;\r\n        const borderDown = 800 - element.height;\r\n        const borderRight = this.props.sizeParentBox.width - element.width;\r\n\r\n        if (coordY < borderTopLeft) coordY = borderTopLeft;\r\n        if (coordY > borderDown) coordY = borderDown;\r\n        if (coordX < borderTopLeft) coordX = borderTopLeft;\r\n        if (coordX > borderRight) coordX = borderRight;\r\n\r\n        return {x: coordX, y: coordY};\r\n    }\r\n\r\n\r\n    move = (x,y) => this.setState({...this.state, posInput: {x: x, y: y}});\r\n\r\n    moveInput = event => {\r\n\r\n        if (this.state.startDragNdrop && this.state.istrumentsActive){\r\n            let num = this.state.sectionNumber;\r\n            if (this.state.sectionNumber === 1 && this.state.countSection-1 === this.state.sectionNumber)  \r\n                num = this.state.sectionNumber + 1;\r\n            let xItem = event.clientX - (this.props.sizeParentBox.left  * num);\r\n            let yItem = event.clientY - (this.props.sizeParentBox.top * num);\r\n\r\n            let coordX = xItem - this.state.shiftCoords.x;\r\n            let coordY = yItem - this.state.shiftCoords.y;\r\n\r\n            let coords = this.checkPivotPosition(coordX,coordY);\r\n\r\n            let convertToPercentX = coords.x * 100 / this.state.sizeParentBox.width;\r\n            let convertToPercentY = coords.y * 100 / this.state.sizeParentBox.height;\r\n\r\n            this.move(convertToPercentX.toFixed(2) + '%',\r\n                      convertToPercentY.toFixed(2) + '%');\r\n    }\r\n        event.stopPropagation();\r\n    };\r\n\r\n    stopDragNdrop = event => {\r\n        if (this.state.startDragNdrop) {\r\n            this.setState({...this.state, startDragNdrop: false})\r\n            controllerStream.emit(`EventUpdatePosition${this.state.id}`, this.state.posInput);\r\n        }\r\n        event.stopPropagation();\r\n    };\r\n    //currentProjectsData.sectionsProject.length\r\n\r\n    saveSize = event => {\r\n        const {size} = event;\r\n        if (!this.state.getSizeBool){\r\n        this.setState({\r\n            ...this.state,\r\n            getSizeBool: true,\r\n            countSection: event.countSection,\r\n            sectionNumber: event.sectionNumber,\r\n            sizeParentBox: {width: size.width, height: size.height}});\r\n        } else controllerStream.off(`EventSaveWidth${this.state.targetSection}`,this.saveSize);\r\n    }\r\n\r\n    setWidth = eventItem => {\r\n        const {width} = eventItem;\r\n        this.setState({...this.state, \r\n            size: {\r\n                ...this.state.size,\r\n                w: width,\r\n            }\r\n        });\r\n    }\r\n\r\n    setType = eventItem => {\r\n        this.setState({\r\n            ...this.state, \r\n            typeInput: eventItem\r\n        });\r\n    }\r\n\r\n    setHeight = eventItem => {\r\n        const {height} = eventItem;\r\n        this.setState({...this.state, \r\n            size: {\r\n                ...this.state.size,\r\n                h: height,\r\n            }\r\n        });\r\n    }\r\n\r\n    refInput = null;\r\n    refInputComponent = node => this.refInput = node;\r\n\r\n    render(){\r\n\r\n        if (this.props.mode === 'dev'){\r\n            return (\r\n                <InputComponent\r\n                    type = {this.state.typeInput}\r\n                    value = {this.state.content}\r\n                    ref = {this.refInputComponent}\r\n                    size = {this.state.size}\r\n                    color = {this.state.color}\r\n                    borderRadius = {this.state.borderRadius}\r\n                    fontSize = {this.state.fontSize}\r\n                    onClick = {this.openInputInstruments}\r\n                    onMouseDown = {this.saveCoords}\r\n                    onMouseMove= {this.moveInput}\r\n                    onMouseLeave = {this.stopDragNdrop}\r\n                    onMouseUp = {this.stopDragNdrop}\r\n                    onDragStart = {this.stop}\r\n                    coordX = {this.state.posInput ? this.state.posInput.x : null}\r\n                    coordY = {this.state.posInput ? this.state.posInput.y : null}\r\n                    indexZ = {this.state.startDragNdrop}\r\n                    data-imagecomponentwrapper\r\n                />\r\n            )\r\n        } else if (this.props.mode === 'production'){\r\n\r\n            return (\r\n                <ProductionStyle\r\n                    type = {this.state.typeInput}\r\n                    value = {this.state.content}\r\n                    ref = {this.refInputComponent}\r\n                    size = {this.state.size}\r\n                    color = {this.state.color}\r\n                    fontSize = {this.state.fontSize}\r\n                    borderRadius = {this.state.borderRadius}\r\n                    coordX = {this.state.posInput ? this.state.posInput.x : null}\r\n                    coordY = {this.state.posInput ? this.state.posInput.y : null}\r\n                    indexZ = {this.state.startDragNdrop}\r\n                    mode = {this.props.mode}\r\n                />\r\n            )\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        controllerStream.on(`EventSaveWidth${this.state.targetSection}`, this.saveSize);\r\n        controllerStream.on(`EventSetBorderRadius${this.state.id}`, this.setBorderRadius);\r\n        controllerStream.on(`EventChangecolor${this.state.id}`, this.changeColor);\r\n        controllerStream.on(`EventChangeSize${this.state.id}`, this.changeSize);\r\n        controllerStream.on(`EventChangeSizeText${this.state.id}`, this.changeSizeText);\r\n        controllerStream.on(`EventChangeContentText${this.state.id}`, this.changeContent);\r\n        controllerStream.on(`EventSetWidth${this.state.id}`, this.setWidth);\r\n        controllerStream.on(`EventSetType${this.state.id}`, this.setType);\r\n        controllerStream.on(`EventSetHeight${this.state.id}`, this.setHeight);\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        controllerStream.off(`EventSaveWidth${this.state.targetSection}`,this.saveSize);\r\n        controllerStream.off(`EventSetBorderRadius${this.state.id}`, this.setBorderRadius);\r\n        controllerStream.off(`EventChangeSize${this.state.id}`, this.changeSize);\r\n        controllerStream.off(`EventChangeSizeText${this.state.id}`, this.changeSizeText);\r\n        controllerStream.off(`EventChangeContentText${this.state.id}`, this.changeContent);\r\n        controllerStream.off(`EventChangecolor${this.state.id}`, this.changeColor);\r\n        controllerStream.off(`EventSetWidth${this.state.id}`, this.setWidth);\r\n        controllerStream.off(`EventSetType${this.state.id}`, this.setType);\r\n        controllerStream.off(`EventSetHeight${this.state.id}`, this.setHeight);\r\n    }\r\n}\r\n\r\nexport default Input;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport eventEmitter,{controllerStream} from '../../../EventEmitter';\r\nimport styled from 'styled-components';\r\n\r\nconst WrapperMedia = styled.div.attrs(props => {\r\n    if (props.mode !== 'production')\r\n    return ({\r\n        style: {\r\n            zIndex: props.indexZ ? '9999' : null,\r\n            left: props.coordX ? props.coordX : '45%',\r\n            top:  props.coordY ? props.coordY : '0%',\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            padding: props.mode === 'dev' ? '40px' : null\r\n        }\r\n    })\r\n})`\r\n    width: ${props => props.size.w ? props.size.w + '%' : '30%'};\r\n    height: ${props => props.size.h ? props.size.h + '%' : '50%'};\r\n    position: absolute;\r\n    background: ${props => props.mode === 'dev' ? `url(${process.env.PUBLIC_URL}/img/media.svg)` : null};\r\n    background-size: cover;\r\n    border: ${props => props.mode === 'dev' ? `1px solid red` : null};\r\n    padding: 10px;\r\n`;\r\nconst Media = styled.iframe`\r\n    width: 100%;\r\n    height: 100%;\r\n    z-index: ${props => props.zIndex ? '0' : '-1'};\r\n`;\r\n\r\nconst ProductionStyle = styled(WrapperMedia)`\r\n    left: ${props => props.coordX ? props.coordX : '45%'};\r\n    top:  ${props => props.coordY ? props.coordY : '0%'};\r\n`;\r\n\r\nclass MediaComponent extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        id: PropTypes.oneOfType([\r\n            PropTypes.string,\r\n            PropTypes.number\r\n        ]).isRequired,\r\n        targetSection: PropTypes.string,\r\n        sizeParentBox: PropTypes.object,\r\n        content: PropTypes.string,\r\n    }\r\n\r\n    state = {\r\n        targetSection: this.props.targetSection,\r\n        id : this.props.id,\r\n        sizeParentBox: this.props.sizeParentBox,\r\n        shiftCoords: null,\r\n        countSection: 0,\r\n        size: this.props.size ? this.props.size : {w: null, h: null},\r\n        posMedia: this.props.coords.x ? {x: this.props.coords.x, y: this.props.coords.y} : null,\r\n        startDragNdrop: false,\r\n        istrumentsActive: false,\r\n        drawContent: false,\r\n        sectionNumber: this.props.sectionNumber,\r\n        content: this.props.content ? this.props.content : null\r\n    }\r\n\r\n    openMediaInstruments = event => {\r\n\r\n        const componentsPatternMedia = {\r\n            id: this.state.id,\r\n            size: this.state.size,\r\n            targetSection: this.state.targetSection,\r\n            type: 'media',\r\n            zIndex: null,\r\n            content: this.state.content,\r\n            coords: {...this.state.posMedia}, // x, y\r\n        }\r\n\r\n        eventEmitter.emit('EventInstrumentPanel',{\r\n            componentStats: componentsPatternMedia,\r\n            targetSection: this.state.targetSection,\r\n            id: this.state.id,\r\n            size: this.state.size,\r\n        });\r\n        this.setState({...this.state, istrumentsActive: true});\r\n        event.stopPropagation();\r\n    }\r\n\r\n    saveCoords = event => {\r\n        if (event.nativeEvent.which !== 1) return false;\r\n        const element = this.refMedia.getBoundingClientRect();\r\n        const cords = {\r\n            left: element.left,\r\n            top: element.top,\r\n            width: element.right - element.left,\r\n            height: element.bottom - element.top\r\n        }\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            shiftCoords: {x: event.clientX - cords.left, y: event.clientY - cords.top},\r\n            startDragNdrop: !this.state.startDragNdrop ? true : false\r\n        });\r\n\r\n        event.stopPropagation();\r\n    };\r\n\r\n    setWidth = eventItem => {\r\n        const {width} = eventItem;\r\n        this.setState({...this.state, \r\n            size: {\r\n                ...this.state.size,\r\n                w: width,\r\n            }\r\n        });\r\n    }\r\n\r\n    setHeight = eventItem => {\r\n        const {height} = eventItem;\r\n        this.setState({...this.state, \r\n            size: {\r\n                ...this.state.size,\r\n                h: height,\r\n            }\r\n        });\r\n    }\r\n\r\n    checkPivotPosition = (coordX, coordY) => {\r\n\r\n        const element = this.refMedia.getBoundingClientRect();\r\n        const borderTopLeft = 0;\r\n        const borderDown = 800 - element.height;\r\n        const borderRight = this.props.sizeParentBox.width - element.width;\r\n\r\n        if (coordY < borderTopLeft) coordY = borderTopLeft;\r\n        if (coordY > borderDown) coordY = borderDown;\r\n        if (coordX < borderTopLeft) coordX = borderTopLeft;\r\n        if (coordX > borderRight) coordX = borderRight;\r\n\r\n        return {x: coordX, y: coordY};\r\n    }\r\n\r\n\r\n    move = (x,y) => this.setState({...this.state, posMedia: {x: x, y: y}});\r\n\r\n    moveMedia = event => {\r\n\r\n        if (this.state.startDragNdrop && this.state.istrumentsActive){\r\n\r\n            let xItem = event.clientX - (this.props.sizeParentBox.left  * this.state.sectionNumber);\r\n            let yItem = event.clientY - (this.props.sizeParentBox.top * this.state.sectionNumber);\r\n\r\n            let coordX = xItem - this.state.shiftCoords.x;\r\n            let coordY = yItem - this.state.shiftCoords.y;\r\n\r\n            let coords = this.checkPivotPosition(coordX,coordY);\r\n\r\n            let convertToPercentX = coords.x * 100 / this.state.sizeParentBox.width;\r\n            let convertToPercentY = coords.y * 100 / this.state.sizeParentBox.height;\r\n\r\n            this.move(convertToPercentX.toFixed(2) + '%',\r\n                      convertToPercentY.toFixed(2) + '%');\r\n    }\r\n        event.stopPropagation();\r\n    };\r\n\r\n    stopDragNdrop = event => {\r\n        if (this.state.startDragNdrop) {\r\n            this.setState({...this.state, startDragNdrop: false})\r\n            controllerStream.emit(`EventUpdatePosition${this.state.id}`, this.state.posMedia);\r\n        }\r\n        event.stopPropagation();\r\n    };\r\n\r\n    setContent = event => {\r\n        const {iframe} = event;\r\n        this.setState({...this.state, content: iframe});\r\n    };\r\n\r\n\r\n    saveSize = event => {\r\n        const {size} = event;\r\n        if (!this.state.getSizeBool){\r\n        this.setState({\r\n            ...this.state,\r\n            getSizeBool: true,\r\n            countSection: event.countSection,\r\n            sectionNumber: event.sectionNumber + 1,\r\n            sizeParentBox: {width: size.width, height: size.height}});\r\n        } else controllerStream.off(`EventSaveWidth${this.state.targetSection}`,this.saveSize);\r\n    }\r\n\r\n    refMedia = null;\r\n    refMediaComponent = node => this.refMedia = node;\r\n\r\n    render(){\r\n        const url = 'https://www.youtube.com/embed/';\r\n\r\n        if (this.props.mode === 'dev'){\r\n            return (\r\n                <WrapperMedia\r\n                    ref = {this.refMediaComponent}\r\n                    onClick={this.openMediaInstruments}\r\n                    onMouseDown = {this.saveCoords}\r\n                    onMouseMove= {this.moveMedia}\r\n                    onMouseLeave = {this.stopDragNdrop}\r\n                    onMouseUp = {this.stopDragNdrop}\r\n                    onDragStart = {this.stop}\r\n                    mode = {this.props.mode}\r\n                    indexZ = {this.state.startDragNdrop}\r\n                    coordX = {this.state.posMedia ? this.state.posMedia.x : null}\r\n                    coordY = {this.state.posMedia ? this.state.posMedia.y : null}\r\n                    size = {this.state.size}\r\n                >\r\n                {!this.state.startDragNdrop ? \r\n                    <Media\r\n                        src= {this.state.content ? url + this.state.content : null }\r\n                        drawContent = {this.state.drawContent}\r\n                        width = {this.state.width} \r\n                        height = {this.state.height}\r\n                        zIndex = {this.state.content}\r\n                        allowfullscreen\r\n                    ></Media> : null\r\n                }\r\n                </WrapperMedia>\r\n            )\r\n        } else if (this.props.mode === 'production'){\r\n            return (\r\n                <ProductionStyle\r\n                    ref = {this.refMediaComponent}\r\n                    indexZ = {this.state.startDragNdrop}\r\n                    size = {this.state.size}\r\n                    coordX = {this.state.posMedia ? this.state.posMedia.x : null}\r\n                    coordY = {this.state.posMedia ? this.state.posMedia.y : null}\r\n                    mode = {this.props.mode}\r\n                >\r\n                {!this.state.startDragNdrop ? \r\n                    <Media\r\n                        src= {this.state.content ? url + this.state.content : null }\r\n                        drawContent = {this.state.drawContent}\r\n                        width = {this.state.width} \r\n                        height = {this.state.height}\r\n                        zIndex = {this.state.content}\r\n                        mode = {this.props.mode}\r\n                        allowfullscreen\r\n                    ></Media> : null\r\n                }\r\n                </ProductionStyle>\r\n            )\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        controllerStream.on(`EventSetContentMedia${this.state.id}`, this.setContent);\r\n        controllerStream.on(`EventSaveWidth${this.state.targetSection}`, this.saveSize);\r\n        controllerStream.on(`EventSetWidth${this.state.id}`, this.setWidth);\r\n        controllerStream.on(`EventSetHeight${this.state.id}`, this.setHeight); \r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        controllerStream.off(`EventSaveWidth${this.state.targetSection}`,this.saveSize);\r\n        controllerStream.off(`EventSetContentMedia${this.state.id}`, this.setContent);\r\n        controllerStream.off(`EventSetWidth${this.state.id}`, this.setWidth);\r\n        controllerStream.off(`EventSetHeight${this.state.id}`, this.setHeight); \r\n    }\r\n}\r\n\r\nexport default MediaComponent;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport eventEmitter,{controllerStream} from '../../../EventEmitter';\r\nimport styled from 'styled-components';\r\n\r\n\r\nconst WrapperImg = styled.div.attrs(props => {\r\n    if (props.mode !== 'production')\r\n    return ({\r\n        style: {\r\n            zIndex: props.indexZ ? '9999' : null,\r\n            transform: `rotateZ(${props.rotate}deg) scale(${props.scale})`,\r\n            left: props.coordX ? props.coordX : '45%',\r\n            top:  props.coordY ? props.coordY : '0',\r\n            transition: `transform  0.3s linear`,\r\n        }\r\n    })\r\n})`\r\n    width: ${props => props.size ? props.size.w + '%' : '30%'};\r\n    height: ${props => props.size ? props.size.h + '%' : '50%'};\r\n    position: absolute;\r\n`;\r\n\r\nconst ImageStyle = styled.img`\r\n    width: 100%;\r\n    height: 100%;\r\n    opacity: ${props => props.opacity};\r\n    border-radius: ${props => props.borderRadius}px;\r\n    position: absolute;\r\n`;\r\n\r\nconst ProductionStyle = styled(WrapperImg)`\r\n    left: ${props => props.coordX ? props.coordX : '50%'};\r\n    top:  ${props => props.coordY};\r\n    transform: rotate(${props => props.rotate}deg) scale(${props => props.scale});\r\n`;\r\n\r\nclass Image extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        id: PropTypes.oneOfType([\r\n            PropTypes.string,\r\n            PropTypes.number\r\n        ]).isRequired,\r\n        targetSection: PropTypes.string,\r\n        sizeParentBox: PropTypes.object,\r\n    }\r\n\r\n    state = {\r\n        id: this.props.id,\r\n        istrumentsActive: false,\r\n        getSizeBool: false,\r\n        countSection: 0,\r\n        opacity: this.props.opacity || 1,\r\n        transformValue: this.props.rotate || 0,\r\n        scaleValue: this.props.scale || 1,\r\n        sectionNumber: 0,\r\n        borderRadius: this.props.borderRadius || 0,\r\n        sizeParentBox: this.props.sizeParentBox,\r\n        targetSection: this.props.targetSection,\r\n        path: this.props.image ? this.props.image : this.props.path,\r\n        size: this.props.size ? this.props.size : {w: 30, h: 50},\r\n        shiftCoords: null,\r\n        posImage: this.props.coords.x ? {x: this.props.coords.x, y: this.props.coords.y} : null,\r\n        startDragNdrop: false,\r\n    }\r\n\r\n    openImageInstruments = event => {\r\n        /** open panel instruments */\r\n        const componentsPatternImage = {\r\n            id: this.state.id,\r\n            targetSection: this.state.targetSection,\r\n            size: {...this.state.size},\r\n            type: 'image',\r\n            rotate: this.state.transformValue,\r\n            scale: this.state.scaleValue,\r\n            borderRadius: this.state.borderRadius,\r\n            opacity: this.state.opacity,\r\n            zIndex: null,\r\n            image: this.state.path,\r\n            coords: {...this.state.posImage}, // x, y\r\n        }\r\n\r\n        eventEmitter.emit(`EventInstrumentPanel`,{\r\n            componentStats: componentsPatternImage,\r\n            targetSection: this.state.targetSection,\r\n            id: this.state.id,\r\n            sizeTextValue: this.state.size\r\n        });\r\n        this.setState({...this.state, istrumentsActive: true});\r\n        event.stopPropagation();\r\n    };\r\n\r\n    saveCoords = event => {\r\n          /** save current coords */\r\n        if (event.nativeEvent.which !== 1) return false;\r\n        const element = this.refImage.getBoundingClientRect();\r\n\r\n        const cords = {\r\n            left: element.left,\r\n            top: element.top,\r\n            width: element.right - element.left,\r\n            height: element.bottom - element.top\r\n        }\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            shiftCoords: {x: event.clientX - cords.left, y: event.clientY - cords.top},\r\n            startDragNdrop: !this.state.startDragNdrop ? true : false\r\n        });\r\n\r\n        event.stopPropagation();\r\n    };\r\n\r\n    checkPivotPosition = (coordX, coordY) => {\r\n          /** Checking the boundaries */\r\n        const element = this.refImage.getBoundingClientRect();\r\n        const borderTopLeft = 0;\r\n        const borderDown = 800 - element.height;\r\n        const borderRight = this.props.sizeParentBox.width - element.width;\r\n\r\n        if (coordY < borderTopLeft) coordY = borderTopLeft;\r\n        if (coordY > borderDown) coordY = borderDown;\r\n        if (coordX < borderTopLeft) coordX = borderTopLeft;\r\n        if (coordX > borderRight) coordX = borderRight;\r\n\r\n        return {x: coordX, y: coordY};\r\n    }\r\n\r\n    rotateEvent = eventItem => {\r\n         /** transform - rotate */\r\n        const angle = eventItem.angle;\r\n        this.setState({\r\n            ...this.state,\r\n            transformValue: angle,\r\n        });\r\n    }\r\n\r\n    scaleEvent = eventItem => {\r\n         /** transform - scale */\r\n        const scale = eventItem.scale;\r\n        this.setState({\r\n            ...this.state,\r\n            scaleValue: scale,\r\n        });\r\n    }\r\n\r\n    move = (x,y) => this.setState({...this.state, posImage: {x: x, y: y}});\r\n\r\n    moveText = event => {\r\n          /** move element event */\r\n        if (this.state.startDragNdrop && this.state.istrumentsActive){ /** if key down - false */\r\n            const element = this.refImage.getBoundingClientRect();\r\n            let xItem = event.clientX - (this.props.sizeParentBox.left  * this.state.sectionNumber);\r\n            let yItem = event.clientY - (this.props.sizeParentBox.top * this.state.sectionNumber);\r\n            let factorCoord = this.diffAngle(parseInt(this.state.transformValue),element.height,element.width);\r\n\r\n            let coordX = xItem - this.state.shiftCoords.x + factorCoord.xFacotr;\r\n            let coordY = yItem - 61 - this.state.shiftCoords.y + factorCoord.yFactor;\r\n\r\n            let coords = this.checkPivotPosition(coordX,coordY);\r\n\r\n            let convertToPercentX = coords.x * 100 / this.state.sizeParentBox.width;\r\n            let convertToPercentY = coords.y * 100 / this.state.sizeParentBox.height;\r\n\r\n            this.move(convertToPercentX.toFixed(2) + '%',\r\n                      convertToPercentY.toFixed(2) + '%');\r\n    }\r\n        event.stopPropagation();\r\n    };\r\n\r\n\r\n    diffAngle = (transform, height, width) => {\r\n          /** if user use transform rotate - coordinate recount */\r\n        let powHeight = height**2;\r\n        let powWidth =  width**2;\r\n\r\n        let pythagoras = Math.sqrt(powHeight + powWidth) / 2;\r\n        let _angle = Math.atan(height / width);\r\n        let angle = Math.atan(width / height);\r\n\r\n        let _biasFactor = 1;\r\n        let biasFactor = 1;\r\n\r\n        if (transform < 0 || transform > 180)\r\n            _biasFactor = - 1;\r\n        if (transform > 90 && transform < 270)\r\n            biasFactor= -1;\r\n\r\n        transform = transform * (Math.PI/180);\r\n\r\n        let sinX = Math.sin(biasFactor * angle + _biasFactor * transform);\r\n        let sinY = Math.sin(biasFactor* _angle + _biasFactor * transform);\r\n\r\n        let xFacotr = pythagoras*(-Math.sin(angle)+sinX);\r\n        let yFactor = pythagoras*(-Math.sin(_angle)+sinY);\r\n\r\n        return {xFacotr, yFactor}\r\n    };\r\n\r\n    stopDragNdrop = event => {\r\n        /** end move element */\r\n        if (this.state.startDragNdrop) {\r\n            this.setState({...this.state, startDragNdrop: false})\r\n            controllerStream.emit(`EventUpdatePosition${this.state.id}`, this.state.posImage);\r\n        }\r\n        event.stopPropagation();\r\n    };\r\n\r\n    setCurrentImage = event => {\r\n        /** set content */\r\n        const {urlFull} = event;\r\n        this.setState({...this.state, path: urlFull});\r\n    };\r\n\r\n    setWidth = eventItem => {\r\n        /** set size w */\r\n        const {width} = eventItem;\r\n        this.setState({...this.state, \r\n            size: {\r\n                ...this.state.size,\r\n                w: width,\r\n            }\r\n        });\r\n    }\r\n\r\n    setHeight = eventItem => {\r\n          /** set size h */\r\n        const {height} = eventItem;\r\n        this.setState({...this.state, \r\n            size: {\r\n                ...this.state.size,\r\n                h: height,\r\n            }\r\n        });\r\n    }\r\n\r\n    saveSize = event => {\r\n         /** save sizes  */\r\n        const {size} = event;\r\n        if (!this.state.getSizeBool){\r\n        this.setState({\r\n            ...this.state,\r\n            getSizeBool: true,\r\n            countSection: event.countSection,\r\n            sectionNumber: event.sectionNumber,\r\n            sizeParentBox: {width: size.width, height: size.height}});\r\n        } else controllerStream.off(`EventSaveWidth${this.state.targetSection}`,this.saveSize);\r\n    }\r\n\r\n    setBorderRadius = eventItem => {\r\n        //** saet border-radius */\r\n        let radius = eventItem.borderRadius > 200 ? 200 : eventItem.borderRadius;\r\n        radius = eventItem.borderDown < 0 ? 0 : eventItem.borderRadius;\r\n        this.setState({\r\n            ...this.state,\r\n            borderRadius: radius\r\n        });\r\n    };\r\n\r\n    setOpacity = eventItem => {\r\n        //** saet opacity */\r\n        let opacity = eventItem.opacity > 1 ? 1 : eventItem.opacity;\r\n        opacity = eventItem.opacity < 0 ? 0 : eventItem.opacity;\r\n            this.setState({\r\n                ...this.state,\r\n                opacity: opacity\r\n            });\r\n    }\r\n\r\n    stopDrag = event => {\r\n        event.preventDefault();\r\n    }\r\n \r\n    refImage = null;\r\n    refImageComponent = node => this.refImage = node;\r\n\r\n    render(){\r\n\r\n        if (this.props.mode === 'dev'){\r\n            return (\r\n                <WrapperImg\r\n                ref = {this.refImageComponent}\r\n                size = {this.state.size}\r\n                rotate = {this.state.transformValue}\r\n                scale = {this.state.scaleValue}\r\n                onClick = {this.openImageInstruments}\r\n                onMouseDown = {this.saveCoords}\r\n                onMouseMove= {this.moveText}\r\n                onMouseLeave = {this.stopDragNdrop}\r\n                onMouseUp = {this.stopDragNdrop}\r\n                onDragStart = {this.stopDrag}\r\n                coordX = {this.state.posImage ? this.state.posImage.x : null}\r\n                coordY = {this.state.posImage ? this.state.posImage.y : null}\r\n                indexZ = {this.state.startDragNdrop}\r\n                data-imagecomponentwrapper\r\n                >\r\n                    <ImageStyle\r\n                        data-imagecomponent\r\n                        borderRadius = {this.state.borderRadius}\r\n                        onDragStart = {this.stopDrag}\r\n                        opacity = {this.state.opacity}\r\n                        src = {this.state.path}\r\n                        alt = 'img'\r\n                    />\r\n                </WrapperImg>\r\n            )\r\n        } else if (this.props.mode === 'production'){\r\n            return (\r\n                <ProductionStyle\r\n                ref = {this.refImageComponent}\r\n                size = {this.state.size}\r\n                rotate = {this.state.transformValue}\r\n                scale = {this.state.scaleValue}\r\n                mode = {this.props.mode}\r\n                coordX = {this.state.posImage ? this.state.posImage.x : null}\r\n                coordY = {this.state.posImage ? this.state.posImage.y : null}\r\n                indexZ = {this.state.startDragNdrop}\r\n                >\r\n                    <ImageStyle\r\n                        borderRadius = {this.state.borderRadius}\r\n                        opacity = {this.state.opacity}\r\n                        crossOrigin = \"anonymous\"\r\n                        src = {this.state.path}\r\n                        alt = 'img'\r\n                    />\r\n                </ProductionStyle>\r\n            )\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        controllerStream.on(`EventSetCurrentImage${this.state.id}`, this.setCurrentImage);\r\n        controllerStream.on(`EventSetOpacity${this.state.id}`, this.setOpacity);\r\n        controllerStream.on(`EventSetBorderRadius${this.state.id}`,this.setBorderRadius);\r\n        controllerStream.on(`EventSetWidth${this.state.id}`, this.setWidth);\r\n        controllerStream.on(`EventSetHeight${this.state.id}`, this.setHeight); \r\n        controllerStream.on(`EventResize${this.state.id}`,this.rotateEvent);\r\n        controllerStream.on(`EventScale${this.state.id}`,this.scaleEvent);\r\n        controllerStream.on(`EventSaveWidth${this.state.targetSection}`, this.saveSize);\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n\r\n        controllerStream.off(`EventSetOpacity${this.state.id}`, this.setOpacity);\r\n        controllerStream.off(`EventSetBorderRadius${this.state.id}`,this.setBorderRadius);\r\n        controllerStream.off(`EventSetCurrentImage${this.state.id}`, this.setCurrentImage);\r\n        controllerStream.off(`EventSetWidth${this.state.id}`, this.setWidth);\r\n        controllerStream.off(`EventSetHeight${this.state.id}`, this.setHeight); \r\n        controllerStream.off(`EventResize${this.state.id}`,this.rotateEvent);\r\n        controllerStream.off(`EventScale${this.state.id}`,this.scaleEvent);\r\n        controllerStream.off(`EventSaveWidth${this.state.targetSection}`,this.saveSize);\r\n    }\r\n}\r\n\r\nexport default Image;","\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport eventEmitter,{controllerStream} from '../../../EventEmitter';\r\nimport Events from 'events';\r\nimport styled from 'styled-components';\r\n\r\nimport './components.scss';\r\n\r\n\r\n\r\nconst WrapperText = styled.div.attrs(props => {\r\n    if (props.mode !== 'production')\r\n    return ({\r\n        style: {\r\n            zIndex: props.indexZ ? '9999' : null,\r\n            transform: `rotateZ(${props.rotate}deg) scale(${props.scale})`,\r\n            left: props.coordX ? props.coordX : '50%',\r\n            top:  props.coordY,\r\n            transition: `transform  0.3s linear`,\r\n        }\r\n    })\r\n})`\r\n    position: absolute;\r\n    font-size: ${props => props.size ? props.size : '120px'};\r\n    color: ${props => props.textColor};\r\n    text-align: center;\r\n    margin: 0;\r\n    word-break: break-all;\r\n`;\r\n\r\nconst TextStyle = styled.p`\r\n    width: 100%;\r\n    height: 100%;\r\n    font-family: ${props => props.font};\r\n    text-align: center;\r\n    margin: 0;\r\n    user-select: none;\r\n`;\r\n\r\n\r\nconst ProductionStyle = styled(WrapperText)`\r\n    left: ${props => props.coordX ? props.coordX : '50%'};\r\n    top:  ${props => props.coordY};\r\n    transform: rotate(${props => props.rotate}deg) scale(${props => props.scale});\r\n`;\r\n\r\n\r\nclass TextComponent extends React.PureComponent {\r\n\r\n    resizeStream = new Events();\r\n\r\n    static propTypes = {\r\n        id: PropTypes.oneOfType([\r\n            PropTypes.string,\r\n            PropTypes.number\r\n        ]).isRequired,\r\n        targetSection: PropTypes.string,\r\n        sizeParentBox: PropTypes.object,\r\n        mode: PropTypes.string.isRequired,\r\n    }\r\n\r\n    state = {\r\n        id: this.props.id,\r\n        istrumentsActive: false,\r\n        isHaveSize: false,\r\n        parent: this.props.sizeParentBox,\r\n        targetSection: this.props.targetSection,\r\n        colorText: this.props.color,\r\n        sizeText: this.props.fontSize || this.props.size,\r\n        shiftCoords: null,\r\n        position: this.props.coords,\r\n        transformValue: this.props.rotate || 0,\r\n        scaleValue: this.props.scale || 1,\r\n        font: this.props.font ? this.props.font : 'Arial',\r\n        startDragNdrop: false,\r\n        contentText: this.props.content ? this.props.content : null,\r\n        countSection: 0,\r\n        sectionNumber: 0,\r\n        getSizeBool: false,\r\n    }\r\n\r\n    openTitleInstruments = event => {\r\n         const componentsPatternText = {\r\n            id: this.state.id,\r\n            targetSection: this.state.targetSection,\r\n            type: 'text',\r\n            rotate: this.state.transformValue,\r\n            scale: this.state.scaleValue,\r\n            font: this.state.font,\r\n            color: this.state.colorText,\r\n            fontSize: this.state.sizeText || 120,\r\n            content: this.state.contentText,\r\n            coords: {...this.state.position}, // x, y\r\n        };\r\n        eventEmitter.emit(`EventInstrumentPanel`,{\r\n                type: 'text',\r\n                targetSection: this.state.targetSection,\r\n                id: this.state.id,\r\n                componentStats: componentsPatternText,\r\n                sizeTextValue: this.state.sizeText\r\n        });\r\n        this.setState({...this.state, istrumentsActive: true});\r\n        event.stopPropagation();\r\n    }\r\n\r\n    changeColorText = colorRGB => {\r\n        if (typeof colorRGB === 'string')\r\n            this.setState({\r\n                ...this.state,\r\n                colorText: colorRGB\r\n            });\r\n    };\r\n\r\n    changeSizeText = eventSize => {\r\n        this.setState({...this.state, sizeText: eventSize.size});\r\n    };\r\n\r\n    saveSize = event => {\r\n        const {size} = event;\r\n        if (!this.state.getSizeBool){\r\n        this.setState({\r\n            ...this.state,\r\n            getSizeBool: true,\r\n            countSection: event.countSection,\r\n            sectionNumber: event.sectionNumber,\r\n            parent: {width: size.width, height: size.height}});\r\n        } else controllerStream.off(`EventSaveWidth${this.state.targetSection}`,this.saveSize);\r\n    }\r\n\r\n    changeContentText = eventContent => {\r\n        let booldContent = eventContent.content || eventContent.content === '';\r\n        if (booldContent)\r\n            this.setState({\r\n                ...this.state,\r\n                contentText: eventContent.content\r\n            });\r\n    };\r\n\r\n    saveCoords = event => {\r\n        const element = this.refText.getBoundingClientRect();\r\n        const cords = {\r\n            left: element.left,\r\n            top: element.top,\r\n            width: element.right - element.left,\r\n            height: element.bottom - element.top\r\n        }\r\n\r\n        const resizeStart = event.target.classList[0] === 'resizeDoted'\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            shiftCoords: {x: event.clientX - cords.left, y: event.clientY - cords.top},\r\n            startDragNdrop: !this.state.startDragNdrop ? true : false,\r\n            resizeStart: resizeStart,\r\n        });\r\n\r\n        event.stopPropagation();\r\n    };\r\n\r\n    setFont = eventItem => {\r\n        /** set type font */\r\n        this.setState({\r\n            ...this.state,\r\n            font: eventItem.font\r\n        });\r\n    };\r\n\r\n    checkPivotPosition = (coordX, coordY) => {\r\n        const element = this.refText.getBoundingClientRect();\r\n        const borderTopLeft = 0;\r\n        const borderDown = 800 - element.height;\r\n        const borderRight = this.props.sizeParentBox.width - element.width;\r\n\r\n        if (coordY < borderTopLeft) coordY = borderTopLeft;\r\n        if (coordY > borderDown) coordY = borderDown;\r\n        if (coordX < borderTopLeft) coordX = borderTopLeft;\r\n        if (coordX > borderRight) coordX = borderRight;\r\n\r\n        return {x: coordX, y: coordY};\r\n    }\r\n\r\n    move = (x,y) => this.setState({...this.state, position: {x: x, y: y}});\r\n\r\n    moveText = event => {\r\n        if (this.state.startDragNdrop && this.state.istrumentsActive){\r\n            const element = this.refText.getBoundingClientRect();\r\n            let sectionNum = this.state.sectionNumber === 0 ? 1 : this.state.sectionNumber;\r\n            let xItem = event.clientX - (this.props.sizeParentBox.left  * sectionNum);\r\n            let yItem = event.clientY - (this.props.sizeParentBox.top * sectionNum);\r\n            let factorCoord = this.diffAngle(parseInt(this.state.transformValue),element.height,element.width);\r\n\r\n            let coordX = xItem - this.state.shiftCoords.x + factorCoord.xFacotr;\r\n            let coordY = yItem - this.state.shiftCoords.y + factorCoord.yFactor;\r\n\r\n            let coords = this.checkPivotPosition(coordX,coordY);\r\n\r\n            let convertToPercentX = coords.x * 100 / this.state.parent.width;\r\n            let convertToPercentY = coords.y * 100 / this.state.parent.height;\r\n\r\n            this.move(convertToPercentX.toFixed(2) + '%',\r\n                      convertToPercentY.toFixed(2) + '%');\r\n        }\r\n        event.stopPropagation();\r\n    };\r\n\r\n\r\n    rotateEvent = eventItem => {\r\n        const angle = eventItem.angle;\r\n        this.setState({\r\n            ...this.state,\r\n            transformValue: angle,\r\n        });\r\n    }\r\n\r\n    scaleEvent = eventItem => {\r\n        const scale = eventItem.scale;\r\n        this.setState({\r\n            ...this.state,\r\n            scaleValue: scale,\r\n        });\r\n    }\r\n\r\n    diffAngle = (transform, height, width) => {\r\n\r\n        let powHeight = height**2;\r\n        let powWidth =  width**2;\r\n\r\n        let pythagoras = Math.sqrt(powHeight + powWidth) / 2;\r\n        let _angle = Math.atan(height / width);\r\n        let angle = Math.atan(width / height);\r\n\r\n        let _biasFactor = 1;\r\n        let biasFactor = 1;\r\n\r\n        if (transform < 0 || transform > 180)\r\n            _biasFactor = - 1;\r\n        if (transform > 90 && transform < 270)\r\n            biasFactor= -1;\r\n\r\n        transform = transform * (Math.PI/180);\r\n\r\n        let sinX = Math.sin(biasFactor * angle + _biasFactor * transform);\r\n        let sinY = Math.sin(biasFactor* _angle + _biasFactor * transform);\r\n\r\n        const xFacotr = pythagoras * (-Math.sin(angle) + sinX);\r\n        const yFactor = pythagoras * (-Math.sin(_angle) + sinY);\r\n\r\n        return {xFacotr, yFactor}\r\n    };\r\n\r\n\r\n    stopDragNdrop = event => {\r\n\r\n        if (this.state.startDragNdrop)\r\n            this.setState({...this.state, startDragNdrop: false},\r\n            () => controllerStream.emit(`EventUpdatePosition${this.state.id}`, this.state.position));\r\n        event.stopPropagation();\r\n    };\r\n\r\n    stopDrag = event => {\r\n        event.preventDefault();\r\n    }\r\n\r\n    refText = null;\r\n    refTextComponent = node => this.refText = node;\r\n\r\n\r\n    render(){\r\n        if (this.props.mode === 'dev'){\r\n            return (\r\n                <WrapperText\r\n                    ref  = {this.refTextComponent}\r\n                    onClick={this.openTitleInstruments}\r\n                    textColor = {this.state.colorText ? this.state.colorText : 'red'}\r\n                    size = {this.state.sizeText ? this.state.sizeText + 'px' : '120px'}\r\n                    onMouseDown = {this.saveCoords}\r\n                    onMouseMove= {this.moveText}\r\n                    onMouseLeave = {this.stopDragNdrop}\r\n                    onMouseUp = {this.stopDragNdrop}\r\n                    rotate = {this.state.transformValue}\r\n                    onDragStart = {this.stopDrag}\r\n                    scale = {this.state.scaleValue}\r\n                    coordX = {this.state.position ? this.state.position.x : null}\r\n                    coordY = {this.state.position ? this.state.position.y : null}\r\n                    indexZ = {this.state.startDragNdrop}\r\n                    data-textcomponent\r\n                >\r\n                    <TextStyle font = {this.state.font}>{this.state.contentText}</TextStyle>\r\n                </WrapperText>\r\n            ) \r\n        } else if (this.props.mode === 'production'){\r\n            return (\r\n                <ProductionStyle\r\n                    ref  = {this.refTextComponent}\r\n                    mode = {this.props.mode}\r\n                    scale = {this.state.scaleValue}\r\n                    rotate = {this.state.transformValue}\r\n                    textColor = {this.state.colorText ? this.state.colorText : 'red'}\r\n                    size = {this.state.sizeText ? this.state.sizeText + 'px' : '120px'}\r\n                    coordX = {this.state.position ? this.state.position.x : null}\r\n                    coordY = {this.state.position ? this.state.position.y : null}\r\n                    indexZ = {this.state.startDragNdrop}\r\n                >\r\n                    <TextStyle font = {this.state.font}>{this.state.contentText}</TextStyle>\r\n                </ProductionStyle>\r\n            )\r\n        }\r\n\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        controllerStream.on(`EventChangeColorText${this.state.id}`, this.changeColorText);\r\n        controllerStream.on(`EventSetFont${this.state.id}`, this.setFont);\r\n        controllerStream.on(`EventChangeSize${this.state.id}`, this.changeSizeText);\r\n        controllerStream.on(`EventChangeContentText${this.state.id}`, this.changeContentText);\r\n        controllerStream.on(`EventSaveWidth${this.state.targetSection}`,this.saveSize);\r\n        controllerStream.on(`EventResize${this.state.id}`,this.rotateEvent);\r\n        controllerStream.on(`EventScale${this.state.id}`,this.scaleEvent);\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        controllerStream.off(`EventChangeColorText${this.state.id}`, this.changeColorText);\r\n        controllerStream.off(`EventSetFont${this.state.id}`, this.setFont);\r\n        controllerStream.off(`EventChangeSize${this.state.id}`, this.changeSizeText);\r\n        controllerStream.off(`EventChangeContentText${this.state.id}`, this.changeContentText);\r\n        controllerStream.off(`EventSaveWidth${this.state.targetSection}`,this.saveSize);\r\n        controllerStream.off(`EventResize${this.state.id}`,this.rotateEvent);\r\n        controllerStream.on(`EventScale${this.state.id}`,this.scaleEvent);\r\n    }\r\n}\r\n\r\nexport default TextComponent;","import React from 'react';\r\n\r\nimport Input from './buildComponents/components/Input';\r\nimport Media from './buildComponents/components/Media';\r\nimport Image from './buildComponents/components/Image';\r\nimport TextComponent from './buildComponents/components/Text';\r\nimport BackgroundComponent from './buildComponents/components/Background';\r\n\r\nconst builderHOC = item => Component => {\r\n        /** Builder editable components */\r\n        if (item.type === 'background') Component = BackgroundComponent;\r\n        else if (item.type === 'input') Component = Input;\r\n        else if (item.type === 'media') Component = Media;\r\n        else if (item.type === 'image') Component = Image;\r\n        else if (item.type === 'text') Component = TextComponent;\r\n\r\n        return <Component key = { `${item.type}${item.id}`} {...item.props} />\r\n};\r\n\r\nexport default builderHOC;","import React,{Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\n/** Redux actions */\r\nimport {loadCurrentProjectAction, exitProjectAction} from '../../redux/actions';\r\n/* ------- Child components ------- */\r\nimport Section from '../../components/buildComponents/section';\r\nimport builderHOC from '../../components/builderHOC';\r\nimport Loader from '../../components/loading/Loader';\r\nimport Header from '../../components/header/Header';\r\n/* HOC */\r\nimport withFirebase from '../../components/withFirebase';\r\nimport './production.scss';\r\n\r\nclass Production extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        firebase: PropTypes.object,\r\n    }\r\n\r\n    state = {\r\n        idProject: parseInt(this.props.match.params.param), /** @Id project */\r\n        mode: 'production', /** @workMode */\r\n        projectEmpty: false, /** @Bool detected project undefiend */\r\n        isLoadComponents: true, /** @Bool load all necessary components  */\r\n        componentsProdJSX: [] /** @Array with JSX */\r\n    }\r\n\r\n    makeProduction = (array) => {\r\n        /* build components */\r\n        let {componentsProdJSX} = this.state;\r\n        let _components = [];\r\n\r\n        array.forEach(item => {\r\n\r\n            const itemHash = {\r\n                props: {\r\n                    ...item,\r\n                    mode: 'production',\r\n                },\r\n                type: item.type,\r\n                id: item.id,\r\n            }\r\n            const patternJSX = {\r\n                id: item.id,\r\n                targetSection: item.targetSection,\r\n                component: builderHOC(itemHash)(Fragment)\r\n            };\r\n                _components.push(patternJSX);\r\n        });\r\n            this.setState({\r\n                ...this.state,\r\n                isLoadComponents: false,\r\n                componentsProdJSX: [...componentsProdJSX, ..._components],\r\n            });\r\n    };\r\n\r\n    prodRef = null;\r\n    mainProductionRef  = node => node ?\r\n    this.prodRef = {data: node.getBoundingClientRect(), node: node} : node;\r\n\r\n    render(){\r\n\r\n        const {userData} = this.props;\r\n        const {currentProjectsData} = userData;\r\n        const section = currentProjectsData.sectionsProject;\r\n\r\n        if (this.state.projectEmpty) return <Redirect to = '/Cabinet' />\r\n\r\n        if (userData.active && currentProjectsData.loadProject){\r\n            return (\r\n                <Fragment>\r\n                    <Header key = 'Header' title = \"Constructor\" idUser = {userData.idUser} />\r\n                    <div\r\n                        ref = {this.mainProductionRef}\r\n                        className = 'Production'\r\n                        key = 'Production'\r\n                        >\r\n                        {!this.state.isLoadComponents ?\r\n                            section.length &&\r\n                                <Section \r\n                                    key = 'section'\r\n                                    mode = {this.state.mode}\r\n                                    currentProjectsData = {currentProjectsData}\r\n                                    componentsProdJSX = {this.state.componentsProdJSX}\r\n                                    section = {section}\r\n                                />\r\n                            : null\r\n                        }\r\n                    </div>\r\n                </Fragment>\r\n            )\r\n        } else if (!this.props.firebase.getCurrentUser()) return <Redirect to = '/' />\r\n        else return <Loader  key = 'Loader' path = '/img/loading.gif' type = 'production' />\r\n    }\r\n\r\n    componentDidUpdate = () => {\r\n        let {userData} = this.props;\r\n        let {currentProjectsData} = userData;\r\n\r\n        if (userData.active && !currentProjectsData.loadProject) {\r\n            /** load current project of user session active and load project - false */\r\n            const current =  userData.projects.find(item => item.id === this.state.idProject)\r\n            if (current)\r\n            this.props.dispatch(loadCurrentProjectAction({\r\n                id: current.id,\r\n                typeProject: current.type,\r\n                sectionsProject: [...current.sectionsProject],\r\n                components: [...current.components]\r\n            })) /* else redirect */\r\n            else this.setState({...this.state, projectEmpty: true});\r\n        }\r\n\r\n        if (this.state.isLoadComponents && currentProjectsData.loadProject)\r\n            /* if all components load build our JSX */\r\n            this.makeProduction(currentProjectsData.components);\r\n\r\n    }\r\n\r\n\r\n    componentDidMount = () => {\r\n        let {userData} = this.props;\r\n        let {currentProjectsData} = userData;\r\n\r\n        if (userData.active && !currentProjectsData.loadProject) {\r\n            /** if user active and project load - false */\r\n            const current =  userData.projects.find(item => item.id === this.state.idProject)\r\n            this.props.dispatch(loadCurrentProjectAction({\r\n                id: current.id,\r\n                sectionsProject: [...current.sectionsProject],\r\n                typeProject: current.type,\r\n                components: [...current.components]\r\n            })); /** else render loader */\r\n        };\r\n\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        let {userData} = this.props;\r\n        if (userData.active)  this.props.dispatch(exitProjectAction(true));\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        userData: {\r\n            active: state.cabinet.active,\r\n            idUser: state.cabinet.idUser,\r\n            projects: [...state.cabinet.projects],\r\n           currentProjectsData: {...state.builder}\r\n        },\r\n    }\r\n};\r\n\r\n  export default connect(mapStateToProps)(withFirebase(Production));","import React,{Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\n\r\n\r\nimport withFirebase from '../../components/withFirebase';\r\nimport Header from '../../components/header/Header';\r\nimport Loader from '../../components/loading/Loader';\r\n\r\nimport './about.scss';\r\n\r\nclass About extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        config: PropTypes.object.isRequired, /** @Config app */\r\n        firebase: PropTypes.object.isRequired, /** @firebase class for use firebase functions */\r\n        history: PropTypes.object, /** @Router HTML5 history */\r\n        location: PropTypes.object, /** @Router */\r\n        match: PropTypes.object, /** @Router */\r\n    }\r\n\r\n    state = {\r\n        config: this.props.config\r\n    };\r\n\r\n    render(){\r\n\r\n        let user = this.props.firebase.getCurrentUser();\r\n        if (user && this.props.idUser) {\r\n            const { config } = this.state;\r\n            return (\r\n                <Fragment>\r\n                    <Header title = {config.title} idUser = {user.uid} />\r\n                    <section className = 'About'>\r\n                        <div className = 'container'>\r\n                            <div className = 'col-12'>\r\n                                <div className = 'About__information'>\r\n                                <img alt = 'img'\r\n                                    className = 'information__logoAbout' \r\n                                    src = {process.env.PUBLIC_URL + '/img/about.jpg'}\r\n                                />\r\n                                    <p className ='developer'><span>Developer:</span>\r\n                                                            {config.about.developer}\r\n                                    </p>\r\n                                    <p className = 'year'><span>Year:</span> {config.about.year}</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </section>\r\n                </Fragment>\r\n            )\r\n        } else if (!user) return <Redirect to = { '/'} />\r\n        else return <Loader path = '/img/loading.gif' type = 'About' />\r\n\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n      idUser: state.cabinet.idUser,\r\n    }\r\n  };\r\n\r\nexport default connect(mapStateToProps)(withFirebase(About));","import {errorAction, loadUpdateCurrentProject} from '../actions';\r\n\r\nconst updateMiddleware = (item) => async (dispatch,getState, {firebase}) => {\r\n    /** Save new updates for projects */\r\n    let newProjects = item.projects.map(project => {\r\n        if (project.id === item.idProject) {\r\n            project.components = [...item.components]\r\n            project.sectionsProject = [...item.sectionsProject]\r\n        }\r\n        return project;\r\n    });\r\n    await firebase.db.collection(\"users\").doc(item.uid).update({\r\n        'projects': JSON.parse(JSON.stringify(newProjects))\r\n    })\r\n    .then(response => {\r\n        /** find and save updates */\r\n        let project = item.projects.find(itemdb => itemdb.id === item.idProject);\r\n        dispatch(loadUpdateCurrentProject({\r\n            components: [...project.components],\r\n            idProject: item.idProject,\r\n            sectionsProject: item.sectionsProject,\r\n        }))\r\n    })\r\n    .catch(error => dispatch(errorAction(error.message)));\r\n};\r\n\r\nexport default updateMiddleware;","import React from 'react';\r\nimport eventEmitter from '../EventEmitter';\r\nimport {animateScroll as scroll, scroller } from \"react-scroll\";\r\n\r\n\r\nconst withScroll = Component => {\r\n    return class ScrollMove extends React.PureComponent {\r\n\r\n        state = {\r\n            mode: 'default',\r\n            scrollConfig: {\r\n                duration: 1000,\r\n                delay: 50,\r\n                smooth: true,\r\n                offset: -60\r\n            },\r\n            position: 0,\r\n            positionCount: null\r\n\r\n        }\r\n\r\n        setStates = event => {\r\n            /** Count all positions */\r\n            this.setState({...this.state,positionCount: event});\r\n        }\r\n\r\n        blockMove = event => {\r\n            /** block for move */\r\n            this.setState({...this.state, mode: event})\r\n        }\r\n\r\n        moveLocation = event => {\r\n            /** Scrolling */\r\n            if (this.state.mode === 'default'){\r\n                const count = this.state.positionCount;\r\n                const moveDown = this.state.position < count && event.deltaY > 0;\r\n                const moveUp = event.deltaY < 0 && this.state.position > 0;\r\n                eventEmitter.emit('EventClosePanel',{close: false});\r\n\r\n                if (moveDown)\r\n                    this.setState({ position: this.state.position + 1},\r\n                        () => scroller.scrollTo(`element${this.state.position}`,this.state.scrollConfig));\r\n                    else if (moveUp){\r\n                        this.state.position === 1 &&\r\n                            this.setState({position: this.state.position - 1}, () => scroll.scrollToTop());\r\n                        this.state.position !== 1 &&\r\n                            this.setState({position: this.state.position - 1},\r\n                                () => scroller.scrollTo(`element${this.state.position}`,this.state.scrollConfig));\r\n                    }\r\n            }\r\n\r\n        }\r\n\r\n\r\n        render(){\r\n            return (\r\n                <React.Fragment>\r\n                        <div key = 'moveScroll' onWheel = {this.moveLocation} onTouchStart = {() => false}\r\n                        >\r\n                            {<Component {...this.props} />}\r\n                        </div>\r\n                </React.Fragment>\r\n            )\r\n        }\r\n\r\n        componentDidMount = () => {\r\n            eventEmitter.on('EventBlockScroll', this.blockMove);\r\n            eventEmitter.on('EventSetState', this.setStates);\r\n        }\r\n\r\n        componentWillUnmount = () => {\r\n            eventEmitter.off('EventBlockScroll', this.blockMove);\r\n            eventEmitter.off('EventSetState', this.setStates);\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport default withScroll;","import React,{useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Viewer.scss';\r\n\r\nfunction Viewer(props){\r\n\r\n    let [mode] = useState(props.mode);\r\n    let [path] = useState(props.path);\r\n\r\n    const closeViewer = event => {\r\n        props.eventStreamBuild.emit(\"EventView\", { action: false, target: null});\r\n        event.stopPropagation();\r\n    }\r\n\r\n    return (\r\n        \r\n        <div onClick = {closeViewer} className = 'Viewer'>\r\n            {(mode === 'image' || mode === 'background') ? <img src = {path} alt = 'fullImage' /> \r\n            : \r\n            <iframe \r\n            src= {`https://www.youtube.com/embed/${props.iframe}`}\r\n            title = 'youtube'\r\n            frameBorder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" \r\n            allowFullScreen>\r\n            </iframe>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nViewer.propTypes = {\r\n    eventStreamBuild: PropTypes.object.isRequired, // events stream\r\n    mode: PropTypes.string, // use mode\r\n    path: PropTypes.string // path to data component\r\n}\r\n\r\nexport default Viewer;","import React,{Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {SketchPicker} from 'react-color';\r\n\r\n\r\nconst InputInstruments = props => {\r\n\r\n    let {colorPickerActive} = props.instrumentPanel;\r\n    let {content} = props.componentStats;\r\n    let {fontSize} = props.componentStats;\r\n    let {coords} = props.componentStats;\r\n    let {size} = props.componentStats;\r\n\r\n    let _content = content !== '' ? 'Input' : '';\r\n\r\n    return (\r\n        <Fragment>\r\n            <p className = 'titleInstument'>Position: </p>\r\n            <span className = 'textCoordsPanel'>\r\n            {coords.x ?\r\n                coords.x + ' / ' + coords.y : ' drop for active'}\r\n            </span>\r\n            <p className = 'titleInstument'>Color: </p>\r\n            <div className = 'controllersText'>\r\n                <input \r\n                    onClick = {props.cbSetColor}\r\n                    className = 'button_switch color_switch'\r\n                    type = 'button'\r\n                    value = 'color pick'\r\n                />\r\n            </div>\r\n                { colorPickerActive ?\r\n                    <div className ='wrapperColorPicker'>\r\n                        <SketchPicker\r\n                        onChangeComplete={props.cbHandleChangeComplete}\r\n                        color = {props.color ? props.color : 'white'}\r\n                        />\r\n                    </div>\r\n                    : null\r\n                }\r\n            <p className = 'titleInstument'>Size (%):</p>\r\n            <div className = 'controllersText'>\r\n                <input\r\n                    className = 'button_switch'\r\n                    onChange = {props.cbSetWidth}\r\n                    type=\"number\"\r\n                    min = '10' max = '200'\r\n                    value = {size.w ? size.w : 100}\r\n                />\r\n                <input \r\n                    className = 'button_switch'\r\n                    onChange = {props.cbSetHeight}\r\n                    type=\"number\"\r\n                    min = '10' max = '200'\r\n                    value = {size.h ? size.h : 50}\r\n                />\r\n            </div>\r\n            <p className = 'titleInstument'>Text size: </p>\r\n            <input \r\n                className = 'button_switch'\r\n                onChange = {props.cbSetSize}\r\n                type=\"number\"\r\n                min = '10' max = '200'\r\n                value = {fontSize ? fontSize : 21}\r\n            />\r\n            <p className = 'titleInstument'>Border radius: </p>\r\n            <input\r\n                onChange = {props.cbSetBorderRadius}\r\n                className = 'button_switch radius'\r\n                type=\"number\"\r\n                value = {props.componentStats.borderRadius ?\r\n                            props.componentStats.borderRadius : 10\r\n                        }\r\n                min = '10' max = '200'\r\n            />\r\n\r\n            <p className = 'titleInstument'>Type input: </p>\r\n            <select \r\n            value = {props.componentStats.typeInput} \r\n            onChange = {props.cbSetType}\r\n            className = 'button_switch button_switch_type'>\r\n                <option>button</option>\r\n                <option>text</option>\r\n                <option>password</option>\r\n            </select>\r\n            <p className = 'titleInstument'>Content: </p>\r\n            <input\r\n            className = 'button_switch'\r\n            onChange = {props.cbSetContent}\r\n            maxLength = '100'\r\n            type = 'text'\r\n            value = {content ? content : _content}\r\n        />\r\n            <input \r\n                onClick = {props.cbDelete}\r\n                className = 'instrumentPanel__deleteComponentButton'\r\n                type=\"button\"\r\n                value = 'delete'\r\n            />\r\n        </Fragment>\r\n    )\r\n};\r\n\r\nInputInstruments.propTypes = {\r\n    componentStats: PropTypes.object.isRequired, // object with current component data\r\n    cbSetColor: PropTypes.func.isRequired, // callback set color\r\n    cbHandleChangeComplete: PropTypes.func.isRequired, // callback state color picker\r\n    cbSetWidth: PropTypes.func.isRequired, // callback set width\r\n    cbSetHeight: PropTypes.func.isRequired, // callback set height\r\n    cbSetSize: PropTypes.func.isRequired, // callback set size\r\n    cbSetBorderRadius: PropTypes.func.isRequired, // callback set border-radius\r\n    cbSetContent: PropTypes.func.isRequired, // callback set content input\r\n    cbDelete: PropTypes.func.isRequired, // callback delete\r\n}\r\n\r\nexport default InputInstruments;","import React,{Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst MediaInstruments = props => {\r\n\r\n    let {size} = props.componentStats;\r\n    let {coords} = props.componentStats;\r\n\r\n    return (\r\n        <Fragment>\r\n            <p className = 'titleInstument'>Position: </p>\r\n            <span className = 'textCoordsPanel'>\r\n            {coords.x ?\r\n                coords.x + ' / ' + coords.y : ' drop for active'}\r\n            </span>\r\n            <p className = 'titleInstument'>Size (%):</p>\r\n            <div className = 'controllersText media'>\r\n                <input\r\n                    className = 'button_switch'\r\n                    onChange = {props.cbSetWidth}\r\n                    type=\"number\"\r\n                    min = '10' max = '100'\r\n                    value = {size.w ? size.w : 30}\r\n                />\r\n                <input \r\n                    className = 'button_switch'\r\n                    onChange = {props.cbSetHeight}\r\n                    type=\"number\"\r\n                    min = '10' max = '100'\r\n                    value = {size.h ? size.h : 50}\r\n                />\r\n            </div>\r\n            <p className = 'titleInstument'>Content: </p>\r\n            <input \r\n                onClick = {props.cbSearch}\r\n                className = 'ImageSearchButton'\r\n                type=\"button\"\r\n                value = 'search media'\r\n            />\r\n            <input \r\n                onClick = {props.cbDelete}\r\n                className = 'instrumentPanel__deleteComponentButton'\r\n                type=\"button\"\r\n                value = 'delete'\r\n            />\r\n        </Fragment>\r\n    )\r\n};\r\n\r\nMediaInstruments.propTypes = {\r\n    componentStats: PropTypes.object.isRequired, // object with current component data\r\n    cbSearch: PropTypes.func.isRequired, // callback search\r\n    cbSetWidth: PropTypes.func.isRequired, // callback set width\r\n    cbSetHeight: PropTypes.func.isRequired, // callback set height\r\n    cbDelete: PropTypes.func.isRequired, // callback delete\r\n}\r\n\r\nexport default MediaInstruments;","import React, {Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ImageInstruments = props => {\r\n\r\n    let {coords} = props.componentStats;\r\n    let {size} = props.componentStats;\r\n    let {rotate} = props.componentStats;\r\n    let {scale} = props.componentStats;\r\n    let fileRef = React.createRef();\r\n    return (\r\n        <Fragment>\r\n        <p className = 'titleInstument'>Position: </p>\r\n        <span className = 'textCoordsPanel'>\r\n        {coords.x ?\r\n            coords.x + ' / ' + coords.y : ' drop for active'}\r\n        </span>\r\n        <p className = 'titleInstument'>Size (%):</p>\r\n        <div className = 'controllersText'>\r\n            <input\r\n                className = 'button_switch size'\r\n                onChange = {props.cbSetWidth}\r\n                type=\"number\"\r\n                min = '10' max = '100'\r\n                value = {size.w ? size.w : 30}\r\n            />\r\n            <input \r\n                className = 'button_switch size'\r\n                onChange = {props.cbSetHeight}\r\n                type=\"number\"\r\n                min = '10' max = '100'\r\n                value = {size.h ? size.h : 30}\r\n            />\r\n        </div>\r\n        <p className = 'titleInstument'>Rotate/Scale:</p>\r\n        <div className = 'controllersText'>\r\n            <input\r\n            className = 'button_switch rotate'\r\n            onChange = {props.cbRotate}\r\n            type=\"number\"\r\n            min = '0' max = '360'\r\n            value = {rotate ? rotate : 0}\r\n            />\r\n            <input\r\n            className = 'button_switch scale'\r\n            onChange = {props.cbScale}\r\n            type=\"number\"\r\n            step = '0.1'\r\n            min = '0' max = '2'\r\n            value = {scale ? scale : 1}\r\n            />\r\n        </div>\r\n        <p className = 'titleInstument'>Border radius: </p>\r\n            <input\r\n                onChange = {props.cbSetBorderRadius}\r\n                className = 'button_switch radius'\r\n                type=\"number\"\r\n                value = {props.componentStats.borderRadius ?\r\n                            props.componentStats.borderRadius : 10\r\n                        }\r\n                min = '10' max = '200'\r\n            />\r\n            <p className = 'titleInstument titleInstrument__opacity'>Opacity: </p>\r\n            <input \r\n                onChange = {props.cbSetOpacity}\r\n                className = 'ImageSearchButton'\r\n                type=\"number\"\r\n                value = {props.componentStats.opacity ?\r\n                    props.componentStats.opacity : 1\r\n                }\r\n                step = '0.1'\r\n                min = '0' max = '1'\r\n            />\r\n            <p className = 'titleInstument titleInstrument__opacity'>Loader: </p>\r\n            <div className = 'controllersText'>\r\n                <div className = 'fileLoader'>\r\n                    <input \r\n                        onClick = {props.cbSearch}\r\n                        className = 'ImageSearchButton file'\r\n                        type=\"button\"\r\n                        value = 'search image'\r\n                    />\r\n                    <input\r\n                        ref = {fileRef}\r\n                        className = 'fileInput'\r\n                        onChange = {props.cbLoadFile}\r\n                        accept=\"image/*\"\r\n                        type=\"file\"\r\n                    />\r\n                    <input\r\n                        className = 'ImageSearchButton file'\r\n                        type = 'button'\r\n                        value = 'loading file'\r\n                    />\r\n\r\n                </div>\r\n            </div>\r\n            <input \r\n                onClick = {props.cbDelete}\r\n                className = 'instrumentPanel__deleteComponentButton'\r\n                type=\"button\"\r\n                value = 'delete'\r\n            />\r\n        </Fragment>\r\n    )\r\n\r\n}\r\n\r\nImageInstruments.propTypes = {\r\n    componentStats: PropTypes.object.isRequired, // object with current component data\r\n    cbSetWidth: PropTypes.func.isRequired, // callback set width\r\n    cbSetHeight: PropTypes.func.isRequired, // callback set height\r\n    cbSetBorderRadius: PropTypes.func.isRequired, // callback set border-radius\r\n    cbSetOpacity: PropTypes.func.isRequired, // callback set opacity\r\n    cbLoadFile: PropTypes.func.isRequired, // callback load file\r\n    cbSearch: PropTypes.func.isRequired, // callback search\r\n    cbDelete: PropTypes.func.isRequired, // callback delete\r\n}\r\n\r\nexport default ImageInstruments;","import React, {Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {SketchPicker} from 'react-color';\r\n\r\nconst BackgroundInstruments = props => {\r\n    let  {targetSection} = props.componentStats;\r\n    return (\r\n        <Fragment>\r\n        <p className = 'titleInstument'>Color: </p>\r\n        <input\r\n            onClick = {props.cbSetColor}\r\n            className = 'button_switch Color'\r\n            type = 'button'\r\n            value = 'color pick'\r\n        />\r\n            { props.colorPickerActive ?\r\n                <SketchPicker\r\n                    onChangeComplete={props.cbHandleChangeComplete}\r\n                    color = {props.color ? props.color : 'white'}\r\n                />\r\n                : null\r\n            }\r\n            <input \r\n                onClick = {props.cbSearch}\r\n                className = 'ImageSearchButton'\r\n                type = 'button'\r\n                value = 'background-image'\r\n            />\r\n            <input\r\n                disabled = {targetSection === 'Header'}\r\n                onClick = {props.cbDelete}\r\n                className = 'instrumentPanel__deleteComponentButton'\r\n                type=\"button\"\r\n                value = 'delete'\r\n            />\r\n        </Fragment>\r\n    )\r\n\r\n}\r\n\r\nBackgroundInstruments.propTypes = {\r\n    componentStats: PropTypes.object.isRequired, // object with current component data\r\n    cbSetColor: PropTypes.func.isRequired, // callback set color\r\n    cbHandleChangeComplete: PropTypes.func.isRequired, // callback picker state change\r\n    cbSearch: PropTypes.func.isRequired, // callback search\r\n}\r\n\r\nexport default BackgroundInstruments;","import React,{Fragment} from 'react';\r\nimport {SketchPicker} from 'react-color';\r\n\r\nconst TextInstruments = props => {\r\n\r\n\r\n        let {colorPickerActive} = props.instrumentPanel;\r\n        let {content} = props.componentStats;\r\n        let {fontSize} = props.componentStats;\r\n        let {coords} = props.componentStats;\r\n        let {rotate} = props.componentStats;\r\n        let {scale} = props.componentStats;\r\n        let _content = content !== '' ? 'Title' : '';\r\n        return (\r\n            <Fragment>\r\n            <p className = 'titleInstument'>Position: </p>\r\n            <span className = 'textCoordsPanel'>\r\n            {coords.x ?\r\n                coords.x + ' / ' + coords.y : ' drop for active'}\r\n            </span>\r\n            <p className = 'titleInstument'>Rotate/Scale:</p>\r\n            <div className = 'controllersText'>\r\n                <input\r\n                className = 'button_switch rotate'\r\n                onChange = {props.cbRotate}\r\n                type=\"number\"\r\n                min = '0' max = '360'\r\n                value = {rotate ? rotate : 0}\r\n                />\r\n                <input\r\n                className = 'button_switch scale'\r\n                onChange = {props.cbScale}\r\n                type=\"number\"\r\n                step = '0.1'\r\n                min = '0' max = '2'\r\n                value = {scale ? scale : 1}\r\n                />\r\n            </div>\r\n            <p className = 'titleInstument'>Color: </p>\r\n            <input \r\n                onClick = {props.cbSetColor}\r\n                className = 'button_switch color'\r\n                type = 'button'\r\n                value = 'color pick'\r\n            />\r\n            <p className = 'titleInstument'>Text size: </p>\r\n            <input \r\n                className = 'button_switch size'\r\n                onChange = {props.cbSetSize}\r\n                type=\"number\"\r\n                min = '10' max = '200'\r\n                value = {fontSize ? fontSize : 120}\r\n            />\r\n                { colorPickerActive ?\r\n                    <div className ='wrapperColorPicker text'>\r\n                        <SketchPicker\r\n                            onChangeComplete={props.cbHandleChangeComplete}\r\n                            color = {props.color ? props.color : 'red'}\r\n                        />\r\n                    </div>\r\n                    : null\r\n                }\r\n                <p className = 'titleInstument'>Font: </p>\r\n                <select \r\n                    value = {props.componentStats.font} \r\n                    onChange = {props.cbSetFont}\r\n                    className = 'button_switch font'\r\n                >\r\n                <option>Arial</option>\r\n                <option>Times</option>\r\n                <option>Georgia</option>\r\n                <option>Impact</option>\r\n                <option>Tahoma</option>\r\n                <option>Verdana</option>\r\n                <option>Comic</option>\r\n                </select>\r\n            <p className = 'titleInstument'>Content: </p>\r\n            <input\r\n                className = 'button_switch content'\r\n                onChange = {props.cbSetContent}\r\n                maxLength = '100'\r\n                type = 'text'\r\n                value = {content ? content : _content}\r\n            />\r\n            <input \r\n                onClick = {props.cbDelete}\r\n                className = 'instrumentPanel__deleteComponentButton'\r\n                type=\"button\"\r\n                value = 'delete'\r\n            />\r\n            </Fragment>\r\n        )\r\n}\r\n\r\nexport default TextInstruments;","import React from 'react';\r\nimport eventEmitter,{controllerStream} from '../../EventEmitter';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport InputInstruments from './InputTools/InputInstruments';\r\nimport MediaInstruments from './MediaTools/MediaInstruments';\r\nimport ImageInstruments from './ImageTools/ImageInstruments';\r\nimport BackgroundInstruments from './BackgroundTools/BackgroundInstruments';\r\nimport TextInstruments from './TextTools/TextInstruments';\r\nimport Icon from '../Icon/icon';\r\n\r\nimport './instrumentsPanel.scss';\r\n\r\n\r\n\r\nclass InstrumentsPanel extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        instrumentPanel:  PropTypes.object.isRequired, /** @Settings for panel and data about component */\r\n        editComponentName: PropTypes.string, /** @Name editable component */\r\n        eventStreamBuild: PropTypes.object.isRequired // stream events\r\n    };\r\n\r\n    state = {\r\n        instrumentPanel: {...this.props.instrumentPanel},\r\n        componentStats: this.props.componentStats,\r\n        images: null,\r\n    };\r\n\r\n\r\n    closePanel = event => {\r\n        this.props.eventStreamBuild.emit('EventClosePanel', {close: false});\r\n    };\r\n\r\n    setSize = event => {\r\n        let {id} = this.state.componentStats;\r\n        let size = event.target.value > 200 ? 200 : event.target.value;\r\n\r\n        if (this.state.componentStats.type !== 'input')\r\n        this.setState({\r\n            ...this.state, \r\n            instrumentPanel: {...this.state.instrumentPanel},\r\n            componentStats: {...this.state.componentStats,fontSize: size}\r\n        }, () => controllerStream.emit(`EventChangeSize${id}`, {\r\n                targetSection: this.state.editComponentName, size: size \r\n        }));\r\n        else this.setState({\r\n                ...this.state, \r\n                instrumentPanel: {...this.state.instrumentPanel},\r\n                componentStats: {...this.state.componentStats,fontSize: size}\r\n            }, () => controllerStream.emit(`EventChangeSizeText${id}`, {size: size}\r\n            ));\r\n    };\r\n\r\n    setFont = event => {\r\n        let {id} = this.state.componentStats;\r\n        let fontName = event.target.value;\r\n        this.setState({\r\n            ...this.state, \r\n            instrumentPanel: {...this.state.instrumentPanel},\r\n            componentStats: {...this.state.componentStats,font: fontName}\r\n        },\r\n            () => controllerStream.emit(`EventSetFont${id}`, {\r\n                targetSection: this.state.editComponentName, font: fontName\r\n            })\r\n        );\r\n    }\r\n\r\n    rotate = event => {\r\n        let {id} = this.state.componentStats;\r\n        let angle = event.target.value;\r\n        this.setState({\r\n            ...this.state, \r\n            instrumentPanel: {...this.state.instrumentPanel},\r\n            componentStats: {...this.state.componentStats, rotate: angle}\r\n        },\r\n        () => controllerStream.emit(`EventResize${id}`,{angle: angle}));\r\n        event.stopPropagation();\r\n    }\r\n\r\n    scale = event => {\r\n        let {id} = this.state.componentStats;\r\n        let scale = event.target.value;\r\n        this.setState({\r\n            ...this.state, \r\n            instrumentPanel: {...this.state.instrumentPanel},\r\n            componentStats: {...this.state.componentStats, scale: scale}\r\n        },\r\n        () => controllerStream.emit(`EventScale${id}`,{scale: scale}));\r\n        event.stopPropagation();\r\n    }\r\n\r\n    setIframeContent = eventItem => {\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            componentStats:{\r\n                ...this.state.componentStats,\r\n                content: eventItem.iframe\r\n            }\r\n        });\r\n    }\r\n\r\n    setContent = event => {\r\n        let {id} = this.state.componentStats;\r\n        let contentValue = event.target.value;\r\n        this.setState({\r\n            ...this.state, \r\n            instrumentPanel: {...this.state.instrumentPanel},\r\n            componentStats: {...this.state.componentStats,content: contentValue}\r\n        },\r\n            () => controllerStream.emit(`EventChangeContentText${id}`,{\r\n                targetSection: this.state.editComponentName, content: contentValue\r\n            })\r\n        );\r\n        if (event) event.stopPropagation();\r\n    };\r\n\r\n    setWidth = event => {\r\n        const {id} = this.state.componentStats;\r\n        const width = event.target.value;\r\n        this.setState({\r\n            ...this.state,\r\n            componentStats: {...this.state.componentStats,\r\n                size: {\r\n                    ...this.state.componentStats.size,\r\n                    w: width\r\n                }}\r\n        },\r\n            () => controllerStream.emit(`EventSetWidth${id}`,{width: width}));\r\n\r\n        if (event) event.stopPropagation();\r\n    };\r\n\r\n    setHeight = event => {\r\n        const {id} = this.state.componentStats;\r\n        const height = event.target.value;\r\n        this.setState({\r\n            ...this.state,\r\n            componentStats: {...this.state.componentStats,\r\n                size: {\r\n                    ...this.state.componentStats.size,\r\n                    h: height\r\n                }}\r\n        },\r\n            () => controllerStream.emit(`EventSetHeight${id}`,{height: height}));\r\n\r\n        if (event) event.stopPropagation();\r\n    }\r\n\r\n    updatePosition = eventItem => {\r\n        if (!eventItem) return;\r\n        this.setState({\r\n            ...this.state, \r\n            componentStats: {\r\n                ...this.state.componentStats,\r\n                coords: {\r\n                    ...this.state.componentStats.coords,\r\n                    x: eventItem.x,\r\n                    y: eventItem.y\r\n                }\r\n            }\r\n        });\r\n    };\r\n\r\n    setColor = event => {\r\n        this.setState({...this.state,\r\n            instrumentPanel:{\r\n                ...this.state.instrumentPanel,\r\n                colorPickerActive: this.state.instrumentPanel.colorPickerActive ? false : true\r\n            }\r\n        });\r\n        if (event) event.stopPropagation();\r\n    };\r\n\r\n    setType = event => {\r\n\r\n        let {id} = this.state.componentStats;\r\n        let typeInput = event.target.value;\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            componentStats: {\r\n                ...this.state.componentStats,\r\n                typeInput: typeInput\r\n            }\r\n        },\r\n         () => controllerStream.emit(`EventSetType${id}`, typeInput));\r\n        if (event) event.stopPropagation();\r\n    }\r\n\r\n    setOpacity = event => {\r\n        let {id} = this.state.componentStats;\r\n        let opacity = event.target.value;\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            componentStats: {...this.state.componentStats,opacity: opacity}\r\n        },\r\n         () => controllerStream.emit(`EventSetOpacity${id}`, {opacity: opacity}));\r\n    };\r\n\r\n    setBorderRadius = event => {\r\n        let {id} = this.state.componentStats;\r\n        let radius = event.target.value;\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            componentStats: {...this.state.componentStats,borderRadius: radius}\r\n        },\r\n         () => controllerStream.emit(`EventSetBorderRadius${id}`, {borderRadius: radius}));\r\n    };\r\n\r\n    updateBimageStats = eventItem => {\r\n        const {images} = eventItem;\r\n        if (eventItem.mode !== 'image')\r\n        this.setState({\r\n            ...this.state,\r\n            componentStats:{\r\n                ...this.state.componentStats,\r\n                backgroundImage: images.urlFull\r\n            }\r\n        });\r\n        else {\r\n            this.setState({\r\n                ...this.state,\r\n                componentStats:{\r\n                    ...this.state.componentStats,\r\n                    image: images.urlFull\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    handleChangeComplete = event => {\r\n\r\n        const {rgb} = event;\r\n        let colorRGB = `rgb(${rgb.r},${rgb.g},${rgb.b},${rgb.a})`;\r\n\r\n        let {id} = this.state.componentStats;\r\n        if (this.state.componentStats.type === 'background'){\r\n            this.setState({\r\n                ...this.state,\r\n                componentStats: {...this.state.componentStats,color: colorRGB}\r\n            }, () => controllerStream.emit(`EventChangeColorBackground${id}`,\r\n                        {colorRGB: this.state.componentStats.color}\r\n                    ));\r\n        }\r\n\r\n        else if (this.state.componentStats.type === 'text') {\r\n            this.setState({\r\n                ...this.state,\r\n                componentStats: {...this.state.componentStats,color: colorRGB}\r\n            },\r\n            () => controllerStream.emit(`EventChangeColorText${id}`, colorRGB));\r\n        }\r\n\r\n        else if (this.state.componentStats.type === 'input') {\r\n            this.setState({\r\n                ...this.state,\r\n                componentStats: {...this.state.componentStats,color: colorRGB}\r\n            },\r\n            () => controllerStream.emit(`EventChangecolor${id}`, colorRGB));\r\n        }\r\n\r\n    };\r\n\r\n    redirectSaveChanges = event => {\r\n        this.props.eventStreamBuild.emit(\"EventSaveChangesComponent\", {\r\n            ...this.state.componentStats,\r\n            id: this.state.componentStats.id,\r\n            type: this.state.componentStats.type,\r\n            ms: 0\r\n        });\r\n        if (event) event.stopPropagation();\r\n    }\r\n\r\n    saveChanges = event => {\r\n\r\n        this.props.eventStreamBuild.emit(\"EventSaveChangesComponent\", {\r\n                ...this.state.componentStats,\r\n                id: this.state.componentStats.id,\r\n                type: this.state.componentStats.type,\r\n                ms: 1500,\r\n            });\r\n\r\n        eventEmitter.emit('EventRedirectConfirm', true);\r\n        if (event) event.stopPropagation();\r\n    }\r\n\r\n    deleteComponent = event => {\r\n        this.props.eventStreamBuild.emit('EventDeleteComponent', {\r\n            id: this.state.componentStats.id,\r\n            targetSection: this.state.componentStats.targetSection,\r\n            type: this.state.componentStats.type\r\n        });\r\n    };\r\n\r\n    search = event => {\r\n\r\n        let {id} = this.state.componentStats;\r\n        this.props.eventStreamBuild.emit('EventModalSearchOn',{\r\n            idComponent: id,\r\n            mode: this.state.componentStats.type\r\n        });\r\n\r\n        event.stopPropagation();\r\n    };\r\n\r\n    loadFile = event => {\r\n        let {id} = this.state.componentStats;\r\n        try {\r\n            let image = event.target.files[0];\r\n            let reader = new FileReader();\r\n            if (image.type[0] !== 'i') throw new Error('Invalid file');\r\n            reader.readAsDataURL(image);\r\n            reader.onload = (e) => {\r\n                controllerStream.emit(`EventSetCurrentImage${id}`,{ urlFull: reader.result });\r\n                this.updateBimageStats({images: { urlFull: reader.result }, mode: 'image'});\r\n                e.stopPropagation();\r\n            }\r\n            reader.onerror = () => {\r\n                console.error(reader.error);\r\n            }\r\n        } catch (error) {\r\n            console.error(error.message);\r\n        }\r\n\r\n        event.stopPropagation();\r\n    }\r\n\r\n    makePanelInstruments = (type) => {\r\n            switch (type){\r\n                case 'text':\r\n                   return(\r\n                    <TextInstruments\r\n                        instrumentPanel = {{...this.state.instrumentPanel}}\r\n                        componentStats = {{...this.state.componentStats}}\r\n                        cbSetColor = {this.setColor}\r\n                        cbSetSize = {this.setSize}\r\n                        cbHandleChangeComplete = {this.handleChangeComplete}\r\n                        cbSetContent = {this.setContent}\r\n                        cbSetFont = {this.setFont}\r\n                        cbSetOpacity = {this.setOpacity}\r\n                        color = {this.state.componentStats.color}\r\n                        cbDelete = {this.deleteComponent}\r\n                        cbRotate = {this.rotate}\r\n                        cbScale = {this.scale}\r\n                    />\r\n                   )\r\n                case 'background':\r\n                    return (\r\n                        <BackgroundInstruments\r\n                            colorPickerActive = {this.state.instrumentPanel.colorPickerActive}\r\n                            componentStats = {{...this.state.componentStats}}\r\n                            cbSetColor = {this.setColor}\r\n                            color = {this.state.componentStats.color}\r\n                            cbHandleChangeComplete = {this.handleChangeComplete}\r\n                            cbSearch = {this.search}\r\n                            cbDelete = {this.deleteComponent}\r\n                        />\r\n                    )\r\n                case 'image':\r\n                        return (\r\n                            <ImageInstruments\r\n                                instrumentPanel = {{...this.state.instrumentPanel}}\r\n                                componentStats = {{...this.state.componentStats}}\r\n                                cbSearch = {this.search}\r\n                                cbSetSize = {this.setSize}\r\n                                cbSetBorderRadius = {this.setBorderRadius}\r\n                                cbSetOpacity = {this.setOpacity}\r\n                                cbSetWidth = {this.setWidth}\r\n                                cbSetHeight = {this.setHeight}\r\n                                cbLoadFile = {this.loadFile}\r\n                                cbDelete = {this.deleteComponent}\r\n                                cbRotate = {this.rotate}\r\n                                cbScale = {this.scale}\r\n                            />\r\n                        )\r\n                case 'media':\r\n                        return (\r\n                            <MediaInstruments\r\n                                instrumentPanel = {{...this.state.instrumentPanel}}\r\n                                componentStats = {{...this.state.componentStats}}\r\n                                cbSearch = {this.search}\r\n                                cbSetWidth = {this.setWidth}\r\n                                cbSetHeight = {this.setHeight}\r\n                                cbDelete = {this.deleteComponent}\r\n                            />\r\n                            )\r\n                case 'input':\r\n                        return (\r\n                            <InputInstruments\r\n                                instrumentPanel = {{...this.state.instrumentPanel}}\r\n                                componentStats = {{...this.state.componentStats}}\r\n                                cbSetColor = {this.setColor}\r\n                                cbSetBorderRadius = {this.setBorderRadius}\r\n                                cbHandleChangeComplete = {this.handleChangeComplete}\r\n                                cbSetSize = {this.setSize}\r\n                                cbSetWidth = {this.setWidth}\r\n                                cbSetHeight = {this.setHeight}\r\n                                color = {this.state.componentStats.color}\r\n                                cbSetContent = {this.setContent}\r\n                                cbSetType = {this.setType}\r\n                                cbDelete = {this.deleteComponent}\r\n                            />\r\n                        )\r\n                default: return <p className = 'warningInstruments'>No found element</p>\r\n            }\r\n    };\r\n\r\n    render(){\r\n        let { instrumentActive } = this.state.instrumentPanel;\r\n        return (\r\n\r\n                <div  className = 'instumentsPanel'>\r\n                    <button\r\n                        onClick = {this.closePanel}\r\n                        className = 'closeInstrumentsPanel'\r\n                    >\r\n                        <Icon path = '/img/close.svg' />\r\n                    </button>\r\n                    <h3>Instruments</h3>\r\n                    {\r\n                        instrumentActive ? \r\n                        <p className = 'TextComponent'>{this.state.componentStats.type}</p>\r\n                        : null\r\n                    }\r\n                    {\r\n                        instrumentActive ?\r\n                        <div className = 'instuments'>\r\n                            {this.makePanelInstruments(this.state.componentStats.type)}\r\n                        </div>\r\n                        : null\r\n                    }\r\n                </div>\r\n        )\r\n    };\r\n\r\n    componentDidUpdate = (oldProps, oldState) => {\r\n        if (oldState.componentStats !== this.state.componentStats)\r\n        this.saveChanges();\r\n    };\r\n\r\n    componentDidMount = event => {\r\n        eventEmitter.on('EventRedirectSaveChanges', this.redirectSaveChanges);\r\n        eventEmitter.on(\"EventSetBImageInstumentPanel\", this.updateBimageStats);\r\n        eventEmitter.on(`EventSetIframe`, this.setIframeContent);\r\n        controllerStream.on(`EventUpdatePosition${this.state.componentStats.id}`, this.updatePosition);\r\n    };\r\n\r\n    componentWillUnmount = event => {\r\n        if (this.timer) clearTimeout(this.timer);\r\n        eventEmitter.off('EventRedirectSaveChanges', this.redirectSaveChanges);\r\n        eventEmitter.off(\"EventSetBImageInstumentPanel\", this.updateBimageStats);\r\n        eventEmitter.off(`EventSetIframe`, this.setIframeContent);\r\n        controllerStream.off(`EventUpdatePosition${this.state.componentStats.id}`, this.updatePosition);\r\n    };\r\n};\r\n\r\nexport default InstrumentsPanel;","import React,{Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Viewer from '../imageViewer/Viewer';\r\nimport InstrumentsPanel from '../../components/instrumentsPanel/InstrumentsPanel';\r\nimport ModalWindow from '../../components/modalWindow/ModalWindow';\r\nimport {CSSTransition} from 'react-transition-group';\r\n\r\nclass AdditionalTools extends React.PureComponent{\r\n\r\n    static propTypes = {\r\n        eventStreamBuild: PropTypes.object.isRequired, // events stream\r\n    }\r\n\r\n    state = {\r\n        modal: {\r\n            modalSearch: false, /** @bool active modal search image/media */\r\n            modalSearchMode: null, /** @String work mode of search modal */\r\n        },\r\n        modalViewer: {action: false, image: null, mode: null }, /** @Object data with viewer data */\r\n        instrumentPanel: { /** @Object with data controll instrument panel */\r\n            colorPickerActive: false,\r\n            instrumentActive: false,\r\n        },\r\n        componentStats: {}, /** @Object with data about components */\r\n        editComponentName:  this.props.editComponentName, /** @String | @null name current edit component */\r\n    }\r\n\r\n    modalSearchOn = itemEvent => {\r\n        this.setState({\r\n            ...this.state,\r\n            modal:{\r\n                ...this.state.modal,\r\n                modalSearch: !this.state.modal.modalSearch,\r\n                modalSearchMode: itemEvent.mode || null\r\n            }\r\n        });\r\n    }\r\n\r\n    ViewerSwitch = itemEvent => {\r\n        /* set settings for viewer */\r\n        this.setState({\r\n            ...this.state,\r\n            modalViewer: {\r\n                ...this.state.modalViewer,\r\n                action: itemEvent.action,\r\n                target: itemEvent.target,\r\n                mode: itemEvent.mode,\r\n                iframe: itemEvent.iframe\r\n            }\r\n        });\r\n    };\r\n\r\n    openInstrument = itemEvent => {\r\n        /* build instrument panel component */\r\n           const idEqual = this.state.componentStats.id === itemEvent.componentStats.id;\r\n           if (!idEqual || !this.state.instrumentPanel.instrumentActive)\r\n           this.setState({\r\n               ...this.state,\r\n               editComponentName: itemEvent.targetSection,\r\n               componentStats: {\r\n                   ...this.state.componentStats,\r\n                   ...itemEvent.componentStats\r\n               },\r\n               instrumentPanel: {\r\n                   ...this.state.instrumentPanel,\r\n                   instrumentActive: true,\r\n               }\r\n           });\r\n   }\r\n\r\n   closePanel = itemEvent => {\r\n        /* unmount unstrument panel component */\r\n       this.setState({\r\n           ...this.state,\r\n           instrumentPanel: {\r\n               ...this.state.instrumentPanel,\r\n               colorPickerActive: false,\r\n               instrumentActive: itemEvent.close\r\n           }\r\n       });\r\n   };\r\n\r\n    render(){\r\n        const props = this.props;\r\n        if (this.state.instrumentPanel.instrumentActive){\r\n            return (\r\n                <Fragment key = 'AdditionalBuild'>\r\n                    <CSSTransition\r\n                        in={this.state.modalViewer.action}\r\n                        timeout={300}\r\n                        classNames=\"modalAnimation\"\r\n                        unmountOnExit\r\n                        appear\r\n                    >\r\n                        <Viewer\r\n                            key = 'ImageViewer'\r\n                            eventStreamBuild = {props.eventStreamBuild}\r\n                            mode = {this.state.modalViewer.mode}\r\n                            path = {this.state.modalViewer.target}\r\n                            iframe = {this.state.modalViewer.iframe}\r\n                        />\r\n                    </CSSTransition>\r\n                    <CSSTransition\r\n                        in={this.state.modal.modalSearch}\r\n                        timeout={300}\r\n                        classNames=\"modalAnimation\"\r\n                        unmountOnExit\r\n                        appear\r\n                    >\r\n                            <ModalWindow\r\n                                eventStreamBuild = {props.eventStreamBuild}\r\n                                idComponent = {this.state.componentStats.id}\r\n                                modalSearchMode = {this.state.modal.modalSearchMode}\r\n                                key = 'ModalWindow' workMode = 'Search'\r\n                            />\r\n                    </CSSTransition>\r\n                        <InstrumentsPanel\r\n                            key = {`InstrumentsPanel${this.state.componentStats.id}`}\r\n                            eventStreamBuild = {props.eventStreamBuild}\r\n                            editComponentName = {this.state.editComponentName}\r\n                            componentStats = {this.state.componentStats}\r\n                            instrumentPanel = {this.state.instrumentPanel}\r\n                        />\r\n                </Fragment>\r\n            )\r\n        } else return <Fragment></Fragment>;\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.props.eventStreamBuild.on('EventModalSearchOn', this.modalSearchOn);\r\n        this.props.eventStreamBuild.on('EventView', this.ViewerSwitch);\r\n        this.props.eventStreamBuild.on('EventClosePanel', this.closePanel);\r\n        this.props.eventEmitter.on('EventInstrumentPanel', this.openInstrument);\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        this.props.eventStreamBuild.off('EventModalSearchOn', this.modalSearchOn);\r\n        this.props.eventEmitter.off('EventInstrumentPanel', this.openInstrument);\r\n        this.props.eventStreamBuild.off('EventView', this.ViewerSwitch);\r\n        this.props.eventStreamBuild.off('EventClosePanel', this.closePanel);\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport default AdditionalTools;","import React,{Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Input from '../buildComponents/components/Input';\r\nimport Media from '../buildComponents/components/Media';\r\nimport Image from '../buildComponents/components/Image';\r\nimport TextComponent from '../buildComponents/components/Text';\r\nimport BackgroundComponent from '../buildComponents/components/Background';\r\n\r\nimport './buildMenu.scss';\r\n\r\nclass BuildMenu extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        mode: PropTypes.string.isRequired, /** @String work mode component */\r\n        editComponentName: PropTypes.string,\r\n        eventStreamBuild: PropTypes.object, /** @Events stream build */\r\n        countSection: PropTypes.number, /** @Number for new section id */\r\n        countComponents: PropTypes.number, /** @Number last project */\r\n        sizeParentBox: PropTypes.object /** @Object with width and height parent(bg) */\r\n    }\r\n\r\n\r\n    state = {\r\n        mode: this.props.mode,\r\n        sizeParentBox: {...this.props.sizeParentBox},\r\n        title: 'Title'\r\n    }\r\n\r\n    addText = event => {\r\n        let id = Math.random().toFixed(3);\r\n\r\n        const componentsPatternText = {\r\n            type: 'text',\r\n            font: 'Arial',\r\n            color: null,\r\n            rotate: 0,\r\n            scale: 1,\r\n            opacity: 1,\r\n            fontSize: null,\r\n            content: 'Title',\r\n            coords: {x: null, y: null}, // x, y\r\n            id: id,\r\n            targetSection: this.props.editComponentName,\r\n        };\r\n        this.props.eventStreamBuild.emit('EventBuildComponents',{\r\n            componentsPattern: componentsPatternText,\r\n            type: componentsPatternText.type,\r\n            component: <TextComponent\r\n                            key = {`text${id}`}\r\n                            mode = 'dev'\r\n                            {...componentsPatternText}\r\n                            sizeParentBox = {{...this.props.sizeParentBox}}\r\n                            id = {id}\r\n                        >Title</TextComponent>\r\n        });\r\n        event.stopPropagation();\r\n    }\r\n\r\n    addBackground = event => {\r\n        let id = Math.random().toFixed(3);\r\n\r\n        const componentsPatternBackground = {\r\n            id: id,\r\n            type: 'background',\r\n            backgroundColor: null,\r\n            backgroundImage: null,\r\n            targetSection: this.state.editComponentName,\r\n        };\r\n\r\n        this.props.eventStreamBuild.emit('EventBuildComponents',{\r\n            componentsPattern: componentsPatternBackground,\r\n            type: componentsPatternBackground.type,\r\n            component: <BackgroundComponent\r\n                            targetSection = {this.props.editComponentName}\r\n                            {...componentsPatternBackground}\r\n                            key = {`bg${id}`}\r\n                            id = {id}\r\n                        />\r\n        });\r\n\r\n        event.stopPropagation();\r\n    }\r\n\r\n    addImage = event => {\r\n        let id = Math.random().toFixed(3);\r\n\r\n        const componentsPatternImage = {\r\n            borderRadius: 0,\r\n            type: 'image',\r\n            size: {w: 30, h: 50},\r\n            opacity: 1,\r\n            rotate: 0,\r\n            zIndex: null,\r\n            image: '/img/photoPattern.svg',\r\n            coords: {x: null, y: null}, // x, y\r\n            id: id,\r\n            targetSection: this.props.editComponentName,\r\n        };\r\n        this.props.eventStreamBuild.emit('EventBuildComponents',{\r\n            componentsPattern: componentsPatternImage,\r\n            type: componentsPatternImage.type,\r\n            component: <Image\r\n                            key = {`image${id}`}\r\n                            sizeParentBox = {this.props.sizeParentBox}\r\n                            id = {id}\r\n                            mode = 'dev'\r\n                            path = {'/img/photoPattern.svg'}\r\n                            {...componentsPatternImage}\r\n                            type = 'image' />\r\n        });\r\n        event.stopPropagation();\r\n    }\r\n\r\n    addMedia = event => {\r\n        let id = Math.random().toFixed(3);\r\n\r\n        const  componentsPatternMedia = {\r\n            type: 'media',\r\n            size: {w: null, h: null},\r\n            content: null,\r\n            coords: {x: null, y: null}, // x, y\r\n            id: id,\r\n            targetSection: this.props.editComponentName,\r\n        };\r\n\r\n        this.props.eventStreamBuild.emit('EventBuildComponents', {\r\n            componentsPattern: componentsPatternMedia,\r\n            type: componentsPatternMedia.type,\r\n            component: <Media\r\n                            key = {`media${id}`}\r\n                            targetSection = {this.props.editComponentName}\r\n                            sizeParentBox = {this.props.sizeParentBox}\r\n                            content = {null}\r\n                            id = {id}\r\n                            path = {'/img/photoPattern.mp4'}\r\n                            {...componentsPatternMedia}\r\n                            type = 'media'\r\n                            mode = 'dev'\r\n                        />\r\n        });\r\n        event.stopPropagation();\r\n    }\r\n\r\n    addInput = event => {\r\n        let id = Math.random().toFixed(3);\r\n\r\n        const  componentsPatternInput = {\r\n            type: 'input',\r\n            size: {w: null, h: null},\r\n            typeInput: 'button',\r\n            color: null,\r\n            fontSize: null,\r\n            borderRadius: null,\r\n            content: null,\r\n            coords: {x: null, y: null}, // x, y\r\n            id: id,\r\n            targetSection: this.props.editComponentName,\r\n        };\r\n\r\n        this.props.eventStreamBuild.emit('EventBuildComponents', {\r\n            componentsPattern: componentsPatternInput,\r\n            type: componentsPatternInput.type,\r\n            component: <Input\r\n                            key = {`input${id}`}\r\n                            targetSection = {this.props.editComponentName}\r\n                            sizeParentBox = {this.props.sizeParentBox}\r\n                            id = {id}\r\n                            inputType = 'button'\r\n                            {...componentsPatternInput}\r\n                            type = 'input'\r\n                            mode = 'dev'\r\n                        />\r\n        });\r\n        event.stopPropagation();\r\n    }\r\n\r\n    addSection = event => {\r\n        let id = Math.random().toFixed(3);\r\n\r\n        const componentsPatternBackground = {\r\n            backgroundColor: null,\r\n            backgroundImage: null,\r\n            targetSection: `Section${id}`,\r\n            id: `Section${id}`,\r\n            type: 'background',\r\n        };\r\n        this.props.eventStreamBuild.emit('EventNewSection', {\r\n            componentsPattern: componentsPatternBackground,\r\n            component: <BackgroundComponent\r\n                            {...componentsPatternBackground}\r\n                            key = {`bg${id}`}\r\n                            id = {id}\r\n                            targetSection = {`Section${id}`}\r\n                            width = '100%'\r\n                            height = '800px'\r\n                            type = 'background'\r\n                            mode = 'dev'\r\n                        />\r\n        });\r\n        event.stopPropagation();\r\n    }\r\n\r\n    render(){\r\n\r\n        if (this.state.mode === 'build'){\r\n            return (\r\n                <div className = 'ComponentsMenu'>\r\n                    <button \r\n                        onClick = {this.addImage} \r\n                        className = 'ImageTool CompoentnsMenu_button' \r\n                    >\r\n                        <span>Image</span>\r\n                    </button>\r\n                    <button \r\n                        onClick = {this.addText} \r\n                        className = 'TextTool CompoentnsMenu_button' >\r\n                        <span>Text</span>\r\n                    </button>\r\n                    <button\r\n                        onClick = {this.addInput}\r\n                        disabled = {this.props.editComponentName !== 'Header' ? false : true}\r\n                        className = 'ButtonTool CompoentnsMenu_button' >\r\n                        <span>Button</span>\r\n                    </button>\r\n                    <button onClick = {this.addMedia}\r\n                        className = 'VideoTool CompoentnsMenu_button'\r\n                    >\r\n                        <span>Video</span>\r\n                    </button>\r\n                </div>\r\n            )\r\n        } else if (this.state.mode === 'section') {\r\n            return (\r\n                <div className = 'sectionMode'>\r\n                    <button\r\n                        onClick = {this.addSection}\r\n                        className = 'newSectionTool CompoentnsMenu_button'\r\n                    >\r\n                        <span>New section</span>\r\n                    </button>\r\n                </div>\r\n            )\r\n        } else return <Fragment></Fragment>\r\n    }\r\n}\r\n\r\nexport default BuildMenu;","import React,{Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Icon from '../Icon/icon';\r\nimport BuildMenu from '../componentsBuildMenu/BuildMenu';\r\n\r\nimport './controllers.scss';\r\n\r\nclass Controllers extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        countComponents: PropTypes.number.isRequired, /** @number last project id */\r\n        sizeParentBox: PropTypes.object, /** @Object with width and height parent(bg) */\r\n        eventStreamBuild: PropTypes.object, /** @Events stream */\r\n        menuActive: PropTypes.bool, /** @Bool value active menu or unactive */\r\n    }\r\n\r\n    state = {\r\n        viewComponentMenu: false,\r\n        editComponentName: this.props.editComponentName,\r\n        shiftX: 0,\r\n        shiftY: 0,\r\n        coordsX: '50%',\r\n        coordsY: '0',\r\n        shadowDisplay: 'block'\r\n    }\r\n\r\n    componentMenu = event => {\r\n        this.setState({viewComponentMenu: this.state.viewComponentMenu ? false : true});\r\n        event.stopPropagation();\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <Fragment>\r\n            {\r\n                <div\r\n                ref = {this.refControll}\r\n                className = 'ControllersEditComponent'\r\n                >\r\n                    <Icon\r\n                        onClick = {this.componentMenu}\r\n                        className = 'ControllersEditComponent__addButton'\r\n                        path = '/img/addButton.png'\r\n                    />\r\n                    { this.state.viewComponentMenu ?\r\n                        <BuildMenu\r\n                            key = {`buildMenu ${this.state.editComponentName}`}\r\n                            mode = 'build'\r\n                            eventStreamBuild = {this.props.eventStreamBuild}\r\n                            editComponentName = {this.state.editComponentName}\r\n                            sizeParentBox = {this.props.sizeParentBox}\r\n                            countComponents = {this.props.countComponents}\r\n                        /> : null\r\n                    }\r\n                </div>\r\n            }\r\n            </Fragment>\r\n        )\r\n    }\r\n\r\n    componentDidUpdate = () => {\r\n        if (this.props.editComponentName !== this.state.editComponentName)\r\n            this.setState({\r\n                ...this.state,\r\n                editComponentName: this.props.editComponentName\r\n            })\r\n    }\r\n\r\n}\r\n\r\nexport default Controllers;","import React,{Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport RenderInBrowser from 'react-render-in-browser';\r\n/* ------- Events streams ------- */\r\nimport eventEmitter from '../../EventEmitter'; // common\r\nimport EventBuild from 'events'; // for builder controllers\r\n/* ------- For load project and exit from project ------- */\r\nimport {loadCurrentProjectAction, exitProjectAction} from '../../redux/actions';\r\n/* ------- Moddlewares ------- */\r\nimport {middlewareDeleteProjectComponent} from '../../redux/middleware/middlewareDelete';\r\nimport updateMiddleware from '../../redux/middleware/updateMiddleware';\r\n/* ------- HOC for het firebase controll object ------- */\r\nimport withScroll from '../../components/withScroll';\r\nimport withFirebase from '../../components/withFirebase';\r\n/* ------- Child components ------- */\r\nimport AdditionalTools from '../../components/additionalTools/additionalTools';\r\nimport builderHOC from '../../components/builderHOC';\r\nimport Controllers from '../../components/controllers/controllers';\r\nimport Loader from '../../components/loading/Loader';\r\nimport Header from '../../components/header/Header';\r\nimport Section from '../../components/buildComponents/section';\r\nimport BuildMenu from '../../components/componentsBuildMenu/BuildMenu';\r\n\r\nimport './build.scss';\r\n\r\nclass Build extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        firebase: PropTypes.object.isRequired, /** @firebase class for use firebase functions */\r\n        active: PropTypes.bool, /** @active - status firebase auth */\r\n        dispatch: PropTypes.func.isRequired, /** @dispatch - redux */\r\n        history: PropTypes.object, /** @Router HTML5 history */\r\n        location: PropTypes.object, /** @Router */\r\n        match: PropTypes.object.isRequired, /** @Router */\r\n        userData: PropTypes.object.isRequired, /** @UserData data about projects,user and current edit prject */\r\n    }\r\n\r\n    state = {\r\n            idProject: parseInt(this.props.match.params.param), /** @Id project */\r\n            editStart: false, /** @Bool start edit or no */\r\n            isChange: false, /** @Bool detected changes */\r\n            isLoadComponents: true, /** @Bool load all necessary components  */\r\n            projectEmpty: false, /** @Bool detected project undefiend */\r\n            componentJSX: [], /** @Array with JSX */\r\n            editComponentName:  null, /** @String | @null name current edit component */\r\n            menuActive: false, /** @bool active menu or no */\r\n            sizeParentBox: null, /** @Object size store */\r\n        }\r\n\r\n        eventEmitterBuild = new EventBuild(); // events stream for controllers\r\n        timer = null; // save timer\r\n\r\n    workModeEdit = itemEvent => {\r\n        /* set edit mode */\r\n        if (itemEvent.editStart)\r\n        this.setState({\r\n            ...this.state,\r\n            editStart: itemEvent.editStart,\r\n            editComponentName: itemEvent.targetSection,\r\n            menuActive: true,\r\n        });\r\n    }\r\n\r\n    deleteComponent = eventItem => {\r\n        /* delete component from DB and from JSX array */\r\n        if (eventItem.id === 'Header' && eventItem.type === 'background') return;\r\n        let {currentProjectsData} = this.props.userData;\r\n        let {componentJSX} = this.state;\r\n\r\n        const data = {\r\n            id: this.state.idProject,\r\n            uid: this.props.userData.idUser,\r\n            idComponent: eventItem.id,\r\n            sectionsProject: [...currentProjectsData.sectionsProject],\r\n            type: eventItem.type\r\n        }\r\n\r\n        this.props.dispatch(middlewareDeleteProjectComponent(data))\r\n        .then(id => {\r\n            if (id !== null){\r\n               const _componentJSX = componentJSX.filter(item => item.id !== id);\r\n            this.setState({\r\n                ...this.state,\r\n                componentJSX: _componentJSX\r\n            });\r\n        }\r\n        });\r\n    }\r\n\r\n    addComponentsFromBD = (array, sizeParentBox) => {\r\n        /* build JSX components from DB */\r\n        if (!sizeParentBox) sizeParentBox = this.state.sizeParentBox;\r\n        let {componentJSX} = this.state;\r\n        let componentsFromDB = [];\r\n\r\n        array.forEach(item => {\r\n            if (item.type !== 'background'){\r\n                const itemHash = {\r\n                    props: {\r\n                        ...item,\r\n                        sizeParentBox,\r\n                        mode: 'dev',\r\n                    },\r\n                    type: item.type,\r\n                    id: item.id,\r\n                }\r\n                const patternJSX = {\r\n                    id: item.id,\r\n                    targetSection: item.targetSection,\r\n                    component: builderHOC(itemHash)(Fragment)\r\n                };\r\n                componentsFromDB.push(patternJSX);\r\n            }\r\n        });\r\n            this.setState({\r\n                ...this.state,\r\n                isLoadComponents: false,\r\n                sizeParentBox: {...sizeParentBox},\r\n                componentJSX: [...componentJSX, ...componentsFromDB],\r\n            });\r\n    };\r\n\r\n    addComponent = itemEvent => {\r\n         /* create new component */\r\n        let {componentJSX} = this.state;\r\n        let {componentsPattern} = itemEvent;\r\n\r\n        const patternJSX = {\r\n            id: componentsPattern.id,\r\n            targetSection: componentsPattern.targetSection,\r\n            component: itemEvent.component\r\n        };\r\n            this.setState({\r\n                ...this.state,\r\n                componentJSX: [...componentJSX, patternJSX],\r\n            });\r\n    };\r\n\r\n    saveChangesComponent = itemEvent => {\r\n        /* save detected changes in DB and call confirm modal */\r\n        const {ms} = itemEvent;\r\n        if (this.timer) clearTimeout(this.timer);\r\n\r\n        this.timer = setTimeout(() => {\r\n            const {currentProjectsData} = this.props.userData;\r\n            const {userData} = this.props;\r\n            let findCurrentItem = false;\r\n            const _components = currentProjectsData.components.map(item => {\r\n                if (item.id === itemEvent.id) { findCurrentItem = true; return {...itemEvent}; }\r\n                return item;\r\n            });\r\n\r\n            if (!findCurrentItem) _components.push(itemEvent);\r\n\r\n            this.props.dispatch(updateMiddleware({\r\n                uid: userData.idUser,\r\n                projects: [...userData.projects],\r\n                components: _components,\r\n                sectionsProject: [...currentProjectsData.sectionsProject],\r\n                idProject: this.state.idProject\r\n            })).then(() =>\r\n                eventEmitter.emit('EventRedirectConfirm', {false: false, confirm: false}));\r\n        },ms);\r\n    };\r\n\r\n    mainComponent = null;\r\n    mainRefComponent = node => node ?\r\n        this.mainComponent = {data: node.getBoundingClientRect(), node: node} : node;\r\n\r\n    addNewSection = eventItem => {\r\n    /* create new project section */\r\n        const {userData} = this.props;\r\n        const {currentProjectsData} = userData;\r\n\r\n        this.props.dispatch(updateMiddleware({\r\n                uid: userData.idUser,\r\n                projects: [...userData.projects],\r\n                components: [...currentProjectsData.components,\r\n                            eventItem.componentsPattern],\r\n                sectionsProject: [\r\n                    ...currentProjectsData.sectionsProject,\r\n                    eventItem.componentsPattern.id\r\n                ],\r\n                idProject: this.state.idProject\r\n        })).then(() => {\r\n            this.setState({\r\n                ...this.state,\r\n                componentJSX:[\r\n                    ...this.state.componentJSX,\r\n                    eventItem.component\r\n                ]\r\n            }, () => {\r\n                eventEmitter.emit('EventSetState', currentProjectsData.sectionsProject.length);\r\n            });\r\n        });\r\n}\r\n\r\n    render(){\r\n\r\n        if (this.state.projectEmpty) return <Redirect to = '/Cabinet' />\r\n        \r\n        const {userData} = this.props;\r\n        const {currentProjectsData} = userData;\r\n        const section = currentProjectsData.sectionsProject;\r\n\r\n        if (userData.active && currentProjectsData.loadProject){\r\n            return (\r\n                <Fragment>\r\n                    <Header key = 'Header' title = \"Constructor\" idUser = {userData.idUser}  />\r\n                    <RenderInBrowser ie only>\r\n                        <h2 className = 'ie'>\r\n                            All the magic tricks in this app work best in Chrome/Firefox/Opera and other.\r\n                            <hr/>\r\n                            Internet explorer deprecated.\r\n                        </h2>\r\n                    </RenderInBrowser>\r\n                    <RenderInBrowser except ie>\r\n                        <div\r\n                            ref = {this.mainRefComponent} \r\n                            onMouseMove = {this.showAddSection} \r\n                            className = 'Build' \r\n                            key = 'Build'\r\n                        >\r\n                            { this.state.editStart &&\r\n                                <Controllers\r\n                                    key = 'controllers'\r\n                                    eventStreamBuild = {this.eventEmitterBuild}\r\n                                    editComponentName = {this.state.editComponentName}\r\n                                    countComponents = {currentProjectsData.components.length}\r\n                                    menuActive = {this.state.menuActive}\r\n                                    sizeParentBox = {this.state.sizeParentBox}\r\n                                />\r\n                            }\r\n                                <BuildMenu\r\n                                    key = 'buildMenu'\r\n                                    eventStreamBuild = {this.eventEmitterBuild}\r\n                                    countSection = {this.state.componentJSX.length * 5}\r\n                                    mode = \"section\"\r\n                                    className = 'menu'\r\n                                />\r\n                                <AdditionalTools key = 'tools'\r\n                                    eventStreamBuild = {this.eventEmitterBuild}\r\n                                    eventEmitter = {eventEmitter}\r\n                                    editComponentName = {this.state.editComponentName}\r\n                                />\r\n                            {section.length &&\r\n                                <Section mode = 'dev' key = 'section'\r\n                                    componentJSX = {this.state.componentJSX}\r\n                                    editComponentName = {this.state.editComponentName}\r\n                                    menuActive = {this.state.menuActive}\r\n                                    sizeParentBox = {this.state.sizeParentBox}\r\n                                    userData = {userData}\r\n                                />\r\n                            }\r\n                        </div>\r\n                    </RenderInBrowser>\r\n                </Fragment>\r\n            )\r\n        } else if (!this.props.firebase.getCurrentUser()) return <Redirect to = '/' />\r\n        else return <Loader  key = 'Loader' path = '/img/loading.gif' type = 'build' />\r\n    }\r\n\r\n    componentDidUpdate = (prevProps) => {\r\n\r\n        let {userData} = this.props;\r\n        let {currentProjectsData} = userData;\r\n        const isLoadComponents = this.state.isLoadComponents;\r\n        let sizeParentBox = null;\r\n\r\n        if (this.mainComponent && this.state.sizeParentBox === null)\r\n            sizeParentBox = {\r\n                width: this.mainComponent.data.width,\r\n                height: this.mainComponent.data.height,\r\n                top: this.mainComponent.data.top,\r\n                left: this.mainComponent.data.left,\r\n            }\r\n\r\n\r\n        if (userData.active && !currentProjectsData.loadProject) {\r\n            /** load current project of user session active and load project - false */\r\n            const current =  userData.projects.find(item => /* find current project */\r\n                                                    item.id === this.state.idProject)\r\n            if (current){ /* load data */\r\n                this.props.dispatch(loadCurrentProjectAction({\r\n                    id: current.id,\r\n                    typeProject: current.type,\r\n                    sectionsProject: [...current.sectionsProject],\r\n                    components: [...current.components]\r\n                }))\r\n                /* else redirect */\r\n            } else this.setState({...this.state, projectEmpty: true});\r\n        }\r\n        if (currentProjectsData.loadProject && isLoadComponents) {\r\n             /* if all components load build our JSX */\r\n            if (this.state.sizeParentBox === null && sizeParentBox !== null)\r\n                this.addComponentsFromBD([...currentProjectsData.components], sizeParentBox);\r\n            else this.addComponentsFromBD([...currentProjectsData.components]);\r\n            /** For scroll component */\r\n            eventEmitter.emit('EventSetState',currentProjectsData.sectionsProject.length-1);\r\n        }\r\n\r\n        // if delete section change count for scroller\r\n        const currentSection = currentProjectsData.sectionsProject.length;\r\n        const  prevSection = prevProps.userData.currentProjectsData.sectionsProject.length;\r\n        if (currentSection !== prevSection){\r\n        eventEmitter.emit('EventSetState', currentProjectsData.sectionsProject.length-1);\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        let {userData} = this.props;\r\n        let {currentProjectsData} = userData;\r\n        /**  If the session is already active, immediately load */\r\n        if (userData.active && !currentProjectsData.loadProject) {\r\n        /** load current project of user session active and load project - false */\r\n            const current =  userData.projects.find(item => item.id === this.state.idProject)\r\n            this.props.dispatch(loadCurrentProjectAction({\r\n                id: current.id,\r\n                sectionsProject: [...current.sectionsProject],\r\n                typeProject: current.type,\r\n                components: [...current.components]\r\n            }));\r\n\r\n            eventEmitter.on('EventModeEdit', this.workModeEdit);\r\n            this.eventEmitterBuild.on('EventBuildComponents', this.addComponent);\r\n            this.eventEmitterBuild.on('EventDeleteComponent', this.deleteComponent);\r\n            this.eventEmitterBuild.on('EventNewSection', this.addNewSection);\r\n            this.eventEmitterBuild.on('EventSaveChangesComponent', this.saveChangesComponent);\r\n        }; /** else redirect */\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n\r\n        let {userData} = this.props;\r\n        if (userData.active){\r\n            this.props.dispatch(exitProjectAction(true));\r\n            eventEmitter.off('EventModeEdit', this.workModeEdit);\r\n            this.eventEmitterBuild.off('EventBuildComponents', this.addComponent);\r\n            this.eventEmitterBuild.off('EventDeleteComponent', this.deleteComponent);\r\n            this.eventEmitterBuild.off('EventNewSection', this.addNewSection);\r\n            this.eventEmitterBuild.off('EventSaveChangesComponent', this.saveChangesComponent);\r\n        }\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        userData: {\r\n            active: state.cabinet.active,\r\n            idUser: state.cabinet.idUser,\r\n            projects: [...state.cabinet.projects],\r\n           currentProjectsData: {...state.builder}\r\n        },\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(withFirebase(withScroll(Build)));\r\n","import React from 'react';\r\n\r\n\r\nconst OpenPanel = props => {\r\n\r\n\r\n\r\n    return (\r\n        <div className = 'guide openPanelGuide'>\r\n            <h4 className = 'guide__title'>Open panel</h4>\r\n            <p className = 'guide_content'>\r\n                If you want to open the toolbar, you should double-click on the background.\r\n            </p>\r\n            <img src = {process.env.PUBLIC_URL + '/img/guideOpenPanel.gif'} alt = 'guide'></img>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OpenPanel;","import React from 'react';\r\n\r\n\r\nconst SearchGuide = props => {\r\n    return (\r\n        <div className = 'guide addComponents'>\r\n            <h4 className = 'guide__title'>Search guide</h4>\r\n            <p className = 'guide_content'>\r\n                On the toolbar, click on the \"Search\" button and\r\n                enter a keyword in the search field.\r\n            </p>\r\n            <img src = {process.env.PUBLIC_URL + '/img/search.gif'} alt = 'guide'></img>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchGuide;","import React from 'react';\r\n\r\n\r\nconst AddComponents = props => {\r\n    return (\r\n        <div className = 'guide addComponents'>\r\n            <h4 className = 'guide__title'>Add components</h4>\r\n            <p className = 'guide_content'>\r\n                Click on the button at the top of the screen\r\n                and select a component.\r\n            </p>\r\n            <img src = {process.env.PUBLIC_URL + '/img/add.gif'} alt = 'guide'></img>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddComponents;","import React from 'react';\r\n\r\n\r\nconst AddNewSection = props => {\r\n    return (\r\n        <div className = 'guide addComponents'>\r\n            <h4 className = 'guide__title'>Add components</h4>\r\n            <p className = 'guide_content'>\r\n                If you want to add a new section,\r\n                click on the button at the bottom of the page.\r\n            </p>\r\n            <img src = {process.env.PUBLIC_URL + '/img/newSection.gif'} alt = 'guide'></img>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddNewSection;","import React from 'react';\r\n\r\n\r\nconst CreateNewProject = props => {\r\n    return (\r\n        <div className = 'guide addComponents'>\r\n            <h4 className = 'guide__title'>Add components</h4>\r\n            <p className = 'guide_content'>\r\n                If you want to create a new project,\r\n                in your account (/ Cabinet) click on the button at the top of the page.\r\n            </p>\r\n            <img src = {process.env.PUBLIC_URL + '/img/newProject.gif'} alt = 'guide'></img>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CreateNewProject;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport OpenPanel from './Guides/OpenPanel';\r\nimport SearchGuide from './Guides/SearchGuide';\r\nimport AddComponents from './Guides/AddComponents';\r\nimport AddNewSection from './Guides/AddNewSection';\r\nimport CreateNewProject from './Guides/CreateNewProject';\r\nimport Icon from '../Icon/icon';\r\nimport './switchContainer.scss';\r\n\r\nclass SwitchContainer extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        mode: PropTypes.string,\r\n    }\r\n\r\n    state = {\r\n        mode: 'panel'\r\n    }\r\n\r\n    changeWorkMode = event => {\r\n        event.target === this.refOP &&\r\n        this.setState({\r\n            ...this.state,\r\n            mode: 'panel'\r\n        });\r\n        event.target === this.refSE &&\r\n        this.setState({\r\n            ...this.state,\r\n            mode: 'search'\r\n        });\r\n        event.target === this.refADD &&\r\n        this.setState({\r\n            ...this.state,\r\n            mode: 'add'\r\n        });\r\n        event.target === this.refSN &&\r\n        this.setState({\r\n            ...this.state,\r\n            mode: 'section'\r\n        });\r\n        event.target === this.refPR &&\r\n        this.setState({\r\n            ...this.state,\r\n            mode: 'project'\r\n        });\r\n        event.stopPropagation();\r\n    }\r\n\r\n    refOP = null;\r\n    refSE = null;\r\n    refADD = null;\r\n    refSN = null;\r\n    refPR = null\r\n\r\n    refOpenPanel  = node => this.refOP = node;\r\n    refSearch = node => this.refSE = node;\r\n    refAdd = node => this.refADD = node;\r\n    refSection = node => this.refSN = node;\r\n    refProject = node => this.refPR = node;\r\n\r\n    render(){\r\n        return(\r\n            <div className = 'switchContainer'>\r\n                <div className = 'col--17 col-sm-10 switchContainer__controllers'>\r\n                    <Icon className = 'switchContainer__menu' path = '/img/Menu_Burder.png' />\r\n                    <ul className = 'guide_list list'>\r\n                        <li>\r\n                            <input\r\n                                onClick = {this.changeWorkMode}\r\n                                className = {\r\n                                    this.state.mode !== 'panel' ?\r\n                                    'switch__button panel'\r\n                                    : 'switch__button panel activeButton'\r\n                                }\r\n                                type = 'button'\r\n                                ref = {this.refOpenPanel}\r\n                                value = 'Open panel for edit'\r\n                            />\r\n                        </li>\r\n                        <li>\r\n                            <input\r\n                                onClick = {this.changeWorkMode}\r\n                                className = {\r\n                                    this.state.mode !== 'search' ?\r\n                                    'switch__button search'\r\n                                    : 'switch__button search activeButton'\r\n                                }\r\n                                type = 'button'\r\n                                ref = {this.refSearch}\r\n                                value ='Search image/media'\r\n                            />\r\n                        </li>\r\n                        <li>\r\n                            <input\r\n                                onClick = {this.changeWorkMode}\r\n                                className = {\r\n                                    this.state.mode !== 'add' ?\r\n                                    'switch__button add'\r\n                                    : 'switch__button add activeButton'\r\n                                }\r\n                                type = 'button'\r\n                                ref = {this.refAdd}\r\n                                value ='Adding components'\r\n                            />\r\n                        </li>\r\n                        <li>\r\n                            <input\r\n                                onClick = {this.changeWorkMode}\r\n                                className = {\r\n                                    this.state.mode !== 'section' ?\r\n                                    'switch__button section'\r\n                                    : 'switch__button section activeButton'\r\n                                }\r\n                                type = 'button'\r\n                                ref = {this.refSection}\r\n                                value ='Adding new section'\r\n                            />\r\n                        </li>\r\n                        <li>\r\n                            <input\r\n                                onClick = {this.changeWorkMode}\r\n                                className = {\r\n                                    this.state.mode !== 'project' ?\r\n                                    'switch__button project'\r\n                                    : 'switch__button project activeButton'\r\n                                }\r\n                                type = 'button'\r\n                                ref = {this.refProject}\r\n                                value ='Create new project'\r\n                            />\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n                <div className = 'col--80--1'>\r\n                    {this.state.mode === 'panel' &&\r\n                        <OpenPanel />\r\n                    }\r\n                    {this.state.mode === 'search' &&\r\n                        <SearchGuide />\r\n                    }\r\n                    {this.state.mode === 'add' &&\r\n                        <AddComponents />\r\n                    }\r\n                    {this.state.mode === 'section' &&\r\n                        <AddNewSection />\r\n                    }\r\n                    {this.state.mode === 'project' &&\r\n                        <CreateNewProject />\r\n                }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SwitchContainer;","import React,{Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\n\r\nimport SwitchContainer from '../../components/SwitchContainer/SwitchContainer';\r\nimport withFirebase from '../../components/withFirebase';\r\nimport Header from '../../components/header/Header';\r\nimport Loader from '../../components/loading/Loader';\r\n\r\nimport './guide.scss';\r\nclass Guide extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        config: PropTypes.object.isRequired, /** @Config app */\r\n        firebase: PropTypes.object.isRequired, /** @firebase class for use firebase functions */\r\n        history: PropTypes.object, /** @Router HTML5 history */\r\n        location: PropTypes.object, /** @Router */\r\n        match: PropTypes.object, /** @Router */\r\n    }\r\n\r\n    state = {\r\n        config: this.props.config\r\n    };\r\n\r\n    render(){\r\n\r\n        let user = this.props.firebase.getCurrentUser();\r\n        if (user && this.props.idUser) {\r\n            const { config } = this.state;\r\n            return (\r\n                <Fragment>\r\n                    <Header title = {config.title} idUser = {user.uid} />\r\n                    <section className = 'Guide'>\r\n                        <div className = 'container guide--flex'>\r\n                            <div className = 'Guide__about'>\r\n                                <h2>Documentation</h2>\r\n                                <p>Get started with {config.title}</p>\r\n                                <p className = 'Guide__about__rev'>\r\n                                    The Constructor guides are step-by-step walkthroughs\r\n                                    that help you get started using Constructor.\r\n                                </p>\r\n                            </div>\r\n                            <SwitchContainer />\r\n                        </div>\r\n                    </section>\r\n                </Fragment>\r\n            )\r\n        } else if (!user) return <Redirect to = { '/'} />\r\n        else return <Loader path = '/img/loading.gif' type = 'About' />\r\n\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n      idUser: state.cabinet.idUser,\r\n    }\r\n  };\r\n\r\nexport default connect(mapStateToProps)(withFirebase(Guide));","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {connect} from 'react-redux';\r\nimport {Route, Switch} from 'react-router-dom';\r\n/* ------- Moddlewares ------- */\r\nimport {middlewareLoadUserData} from './redux/middleware/loadUserMiddleware';\r\n/* ------- Child components ------- */\r\nimport withFirebase from './components/withFirebase';\r\nimport Loader from './components/loading/Loader';\r\nimport Index from './Pages/Index/Index';\r\nimport Cabinet from './Pages/Cabinet/Cabinet';\r\nimport Production from './Pages/Production/Production';\r\nimport About from './Pages/About/About';\r\nimport Build from './Pages/Build/Build';\r\nimport Guide from './Pages/Guide/Guide';\r\nimport ErrorPage from './components/ErrorCatch/ErrorPage';\r\nimport './root.scss';\r\n\r\nclass App extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        config: PropTypes.object.isRequired, /** @Config app */\r\n        firebase: PropTypes.object.isRequired, /** @firebase class for use firebase functions */\r\n        dispatch: PropTypes.func.isRequired, /** @dispatch - redux */\r\n    }\r\n\r\n    state = {\r\n        firebase: this.props.firebase,\r\n        firebaseLoadState: false,\r\n        config: this.props.config,\r\n    }\r\n\r\n    componentDidMount(){\r\n        /** Listening firebase answer after first load app */\r\n        this.props.firebase.auth.onAuthStateChanged((user) => {\r\n            if (!this.state.firebaseLoadState){\r\n                /** if user - true, loading data in store */\r\n                if (user) this.props.dispatch(middlewareLoadUserData(user.uid))\r\n                .then((res) =>  { /** show loader */\r\n                    this.setState({...this.state, firebaseLoadState: res});\r\n                }); /** if loading = redirect */\r\n                else  this.setState({...this.state, firebaseLoadState: true});\r\n            }\r\n        });\r\n    }\r\n\r\n    render(){\r\n        if (this.state.firebaseLoadState){\r\n            return (\r\n                <Switch>\r\n                        <Route\r\n                            path = {'/'} exact\r\n                            render = {(props) => <Index {...props} config = {this.state.config} />}\r\n                        />\r\n                        <Route \r\n                            path = '/Cabinet/' exact \r\n                            render = {(props) => <Cabinet {...props} config = {this.state.config} />}\r\n                        />\r\n                        <Route\r\n                            path = {'/Cabinet/About'}\r\n                            render = {(props) => <About {...props} config = {this.state.config} />}\r\n                        />\r\n                        <Route path = {'/Cabinet/Build/:param'} exact\r\n                            render = {(props) => <Build {...props} />}\r\n                        />\r\n                        <Route path = {'/Cabinet/Build/:param/Production'} exact component = {Production} />\r\n                        <Route path = {'/Cabinet/Guide'} exact \r\n                        render = {(props) => <Guide {...props} config = {this.state.config} />}\r\n                        />\r\n                        <Route path = {'*'} component = {Index} />\r\n                        <Route path = {'/crashPage'} component = {ErrorPage} />\r\n                </Switch>\r\n            )\r\n        } else return <Loader path = { '/img/loading.gif'} type = 'application' />\r\n    }\r\n}\r\n\r\nexport default connect()(withFirebase(App));","\n/** IE supports polyfills */\nimport 'core-js/es/map';\nimport 'core-js/es/set';\nimport 'core-js/es/symbol';\nimport 'core-js/es/array/includes';\nimport 'core-js/es/array/find';\nimport 'core-js/es/string/includes';\nimport 'core-js/es/object/assign';\n/** --------------------- */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\nimport firebase from './Firebase/Firebase';\nimport ErrorBoundary from './components/ErrorCatch/ErrorBoundary';\nimport {HashRouter } from 'react-router-dom';\nimport {Provider} from 'react-redux';\nimport store from './redux/store';\nimport App from './App.jsx';\nimport 'normalize.css';\n\nimport firebaseContext from './Firebase/firebaseContext'; /** firebase contect API */\nimport config from './config.json'; /** app config file */\n\n\nReactDOM.render(\n        <HashRouter>\n            <ErrorBoundary>\n                <firebaseContext.Provider value = {firebase}>\n                    <Provider store = {store}>\n                        <App config = {config} />\n                    </Provider>\n                </firebaseContext.Provider>\n            </ErrorBoundary>\n        </HashRouter>,\n        document.getElementById('root')\n);\n\n\nserviceWorker.register();\n\n"],"sourceRoot":""}