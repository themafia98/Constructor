{"version":3,"sources":["serviceWorker.js","Firebase/firebaseConfig.js","Firebase/Firebase.js","EventEmitter.js","components/ErrorCatch/ErrorPage.jsx","components/ErrorCatch/ErrorBoundary.jsx","redux/actions.js","redux/reducerBuilder.js","redux/reducerCabinet.js","redux/reducers.js","redux/store.js","redux/middleware/loadUserMiddleware.js","Firebase/firebaseContext.js","components/firebaseHOC.jsx","components/loading/Loader.jsx","components/AnimationText/AnimationTitle.jsx","components/Registration/Registration.jsx","Pages/Index/Index.jsx","redux/middleware/middlewareDelete.js","components/Icon/icon.jsx","components/confirmBox/Confirm.jsx","components/header/Header.jsx","components/imageViewer/imageItem.jsx","components/modalWindow/createProject/createProject.jsx","components/modalWindow/Search/searchModal.jsx","components/modalWindow/ModalWindow.jsx","redux/middleware/createProjectMiddleware.js","components/List/Item.jsx","components/List/List.jsx","components/ProjectsSection/ProjectsSection.jsx","Pages/Cabinet/Cabinet.jsx","components/buildComponents/components/Background.jsx","components/buildComponents/MainBackground/MainBackground.jsx","components/buildComponents/section.jsx","components/builderHOC.jsx","components/buildComponents/components/Input.jsx","components/buildComponents/components/Media.jsx","components/buildComponents/components/Image.jsx","components/buildComponents/components/Text.jsx","Pages/Production/Production.jsx","Pages/About/About.jsx","redux/middleware/updateMiddleware.js","components/imageViewer/Viewer.jsx","components/instrumentsPanel/InputTools/InputInstruments.jsx","components/instrumentsPanel/MediaTools/MediaInstruments.jsx","components/instrumentsPanel/ImageTools/ImageInstruments.jsx","components/instrumentsPanel/BackgroundTools/BackgroundInstruments.jsx","components/instrumentsPanel/TextTools/TextInstruments.jsx","components/instrumentsPanel/InstrumentsPanel.jsx","components/additionalTools/additionalTools.jsx","components/componentsBuildMenu/BuildMenu.jsx","components/controllers/controllers.jsx","Pages/Build/Build.jsx","components/ScrollMove.jsx","App.jsx","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","firebaseConfig","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firebaseInterface","require","Firebase","Object","classCallCheck","this","firebase","auth","db","rules","setPersistence","Auth","Persistence","email","password","signInWithEmailAndPassword","createUserWithEmailAndPassword","signOut","currentUser","stream","EventEmitter","controllerStream","ErrorPage","redirect","update","event","_this","setState","eventEmitter","emit","react_default","a","createElement","react_router","to","class","className","onClick","React","Component","ErrorBoundary","hasError","updateApplication","componentDidMount","on","componentWillUnmount","off","info","ErrorCatch_ErrorPage","props","children","PureComponent","exitProjectAction","type","exit","loadCurrentProjectAction","id","typeProject","sectionsProject","components","loadUpdateCurrentProject","idProject","toConsumableArray","loadUserAction","active","idUser","uid","projects","errorAction","initialState","loadProject","combineReducers","builder","arguments","length","undefined","action","objectSpread","cabinet","map","item","middleware","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","thunk","withExtraArgument","store","createStore","middlewareLogin","_ref2","asyncToGenerator","regenerator_default","mark","_callee","dispatch","getState","_ref","wrap","_context","prev","next","login","response","collection","doc","user","get","docUser","data","message","stop","_x","_x2","_x3","apply","middlewareLogOutUser","_ref6","_callee3","_ref5","_context3","_x7","_x8","_x9","firebaseContext","createContext","withFirebase","Firebase_firebaseContext","Consumer","assign","loading_Loader","_useState","useState","path","slicedToArray","_useState3","mode","concat","src","alt","AnimationTitle","styled","h3","_templateObject","dir","AnimationText","tilteContent","content","split","currentTitle","positionTitle","directionAnimation","msAnimation","msTimeout","msPauseEnd","_isMounted","timerAnimation","animationTitle","timer","self","assertThisInitialized","setTimeout","tick","counter","word","_title","slice","e","clearTimeout","data-titlebuild","emailRef","passwordRef","setRefEmail","node","setRefPassword","createUser","value","Error","set","indexStream","autoComplete","ref","Index","Events","title","registrationActive","regStatus","wrongEnter","emailImput","passwordImput","statusRegistration","additionalUserInfo","isNewUser","showBox","stopPropagation","authTo","AnimationText_AnimationTitle","TransitionGroup","component","CSSTransition","timeout","unmountOnExit","classNames","components_Registration_Registration","connect","middlewareDeleteProjectComponent","_ref4","_callee2","_ref3","_context2","findProject","find","project","filter","idComponent","dataUpdate","abrupt","_x4","_x5","_x6","middlewareDelete","itemdb","Icon","_useState5","draggable","Confirm","cbSaveChanges","cbCancelSave","iconPath","CabinetIcon","Header","isChange","redirectConfirm","redirectAbout","redirectA","redirectCabinet","redirectC","confirm","false","confirmSaveDetectChanges","logOut","pathname","add","cabinetStream","componentWillMount","_this2","Fragment","components_confirmBox_Confirm","Icon_icon","withRouter","ImageItem","urls","regular","urlRegular","full","urlFull","_useState7","isFull","_useState9","urlContent","selected","url","iframe","CreateProject","isNumber","nameLength","warningLengthMin","warningLengthMax","validName","warningNumber","typeClassName","name","onChange","cbValidateName","placeholder","validType","warningType","cbSelectOption","cbAddNewProject","disabled","dissabled","cbCancel","loading","SearchModal","modalSearchMode","items","images","search","refSearch","cbSearch","refSearchFunc","componentDidUpdate","prevProps","prevState","contentPrev","haveUpdate","isSelected","selectedId","_items","cbMakeImageResultBox","menuActive","cbShowImage","cbSetSelectedImage","polyfill","ModalWindow","readyAnimation","workMode","buttonSearchDisabled","selectedItem","showUrl","imageBoxView","newProject","validateName","validateType","imageMenuActive","warning","lengthMax","lengthMin","inputSearch","inputSelect","searchData","inages","api","isFetch","ok","json","results","searchYouTubeAPI","RAITE","KEY","res","status","arrayItems","forEach","push","snippet","thumbnails","high","videoId","showMenuImage","showImage","_this$state$images","eventStreamBuild","target","setSelectedImage","makeImageResultBox","i","imageItem","key","Math","random","addNewProject","selectOption","inputs","defineProperty","test","cancel","refSelect","typeRenderModal","createProject","searchModal","loader","react","nextProps","nextState","middlewareCreateProject","list","lastProject","lastIndex","header","backgroundImage","backgroundColor","min","max","floor","targetSection","productionPath","_useState6","canBuild","setCanBuild","_useState8","canProd","setCanProd","_useState11","_useState13","data-id","List","makeList","List_Item","ProjectsSection","components_List_List","Cabinet","deletItem","getCurrentUser","changeWorkMode","header_Header","modalWindow_ModalWindow","components_ProjectsSection_ProjectsSection","Background","div","Background_templateObject","width","height","BackgroundComponent","background","color","boxComponent","boxComponentRef","saveDataParent","boxInform","getBoundingClientRect","countSection","sectionNumber","size","openBgInstruments","componentsPatternBackground","componentStats","changeColor","eventItem","colorRGB","setBackgroundImage","onDoubleClick","data-name","MainBackground","editRedy","changeMode","editStart","editComponentName","refSection","refSectionFunc","currentProjectsData","componentJSX","needUpdate","countComponents","data-class","components_Background","Section","userData","buildComponents_MainBackground_MainBackground","sizeParentBox","section","componentsProdJSX","builderHOC","InputComponent","input","attrs","style","zIndex","indexZ","left","coordX","top","coordY","Input_templateObject","w","h","fontSize","borderRadius","ProductionStyle","_templateObject2","Input","istrumentsActive","getSizeBool","typeInput","shiftCoords","posInput","coords","x","y","startDragNdrop","openInputInstruments","componentsPatternImage","sizeTextValue","saveCoords","nativeEvent","which","element","refInput","cords","right","bottom","clientX","clientY","changeSize","eventSize","changeSizeText","setBorderRadius","radius","borderDown","changeContent","checkPivotPosition","borderRight","delta","trans","transT","move","moveInput","num","xItem","yItem","convertToPercentX","convertToPercentY","toFixed","stopDragNdrop","saveSize","setWidth","setType","setHeight","refInputComponent","onMouseDown","onMouseMove","onMouseLeave","onMouseUp","onDragStart","data-imagecomponentwrapper","WrapperMedia","display","justifyContent","alignItems","padding","Media_templateObject","Media","Media_templateObject2","_templateObject3","MediaComponent","posMedia","drawContent","openMediaInstruments","componentsPatternMedia","refMedia","moveMedia","setContent","refMediaComponent","allowfullscreen","Media_ProductionStyle","WrapperImg","Image_templateObject","ImageStyle","img","Image_templateObject2","opacity","Image_templateObject3","Image","image","posImage","openImageInstruments","refImage","moveText","setCurrentImage","changeSizeImage","setOpacity","refImageComponent","data-imagecomponent","Image_ProductionStyle","crossOrigin","WrapperText","Text_templateObject","textColor","TextStyle","p","Text_templateObject2","font","Text_templateObject3","TextComponent","isHaveSize","parent","colorText","sizeText","position","contentText","openTitleInstruments","componentsPatternText","posText","changeColorText","changeContentText","eventContent","refText","setFont","sectionNum","refTextComponent","data-textcomponent","Text_ProductionStyle","Production","parseInt","params","param","projectEmpty","isLoadComponents","makeProduction","array","_components","prodRef","patternJSX","mainProductionRef","current","buildComponents_section","About","about","developer","year","updateMiddleware","newProjects","JSON","parse","stringify","Viewer","frameBorder","allow","allowFullScreen","InputInstruments","colorPickerActive","instrumentPanel","_content","cbSetColor","lib","onChangeComplete","cbHandleChangeComplete","cbSetWidth","cbSetHeight","cbSetSize","cbSetBorderRadius","cbSetType","cbSetContent","maxLength","cbDelete","MediaInstruments","ImageInstruments","fileRef","createRef","cbSetOpacity","step","cbLoadFile","accept","BackgroundInstruments","TextInstruments","cbSetFont","InstrumentsPanel","closePanel","close","setSize","fontName","setIframeContent","contentValue","updatePosition","setColor","updateBimageStats","handleChangeComplete","rgb","r","g","b","redirectSaveChanges","ms","saveChanges","deleteComponent","loadFile","files","reader","FileReader","readAsDataURL","onload","result","onerror","makePanelInstruments","TextTools_TextInstruments","BackgroundTools_BackgroundInstruments","ImageTools_ImageInstruments","MediaTools_MediaInstruments","InputTools_InputInstruments","oldProps","oldState","instrumentActive","AdditionalTools","modalViewer","imageViewer_Viewer","modalSearch","instrumentsPanel_InstrumentsPanel","BuildMenu","addText","componentsPattern","Text","addBackground","addImage","components_Image","addMedia","components_Media","addInput","componentsPatternInput","components_Input","inputType","addSection","Controllers","viewComponentMenu","shiftX","shiftY","coordsX","coordsY","shadowDisplay","componentMenu","refControll","componentsBuildMenu_BuildMenu","Build","eventEmitterBuild","EventBuild","modalSearchOn","itemEvent","modeHave","hasOwnProperty","ViewerSwitch","workModeEdit","openInstrument","_componentJSX","addComponentsFromBD","componentsFromDB","mainComponent","addComponent","saveChangesComponent","findCurrentItem","mainRefComponent","addNewSection","showAddSection","controllers","additionalTools","ScrollMove","scrollConfig","duration","delay","smooth","offset","positionCount","setStates","blockMove","moveLocation","count","moveDown","deltaY","moveUp","scroller","scrollTo","scroll","scrollToTop","onWheel","onTouchStart","App","firebaseLoadState","onAuthStateChanged","_this3","exact","render","Pages_Index_Index","Pages_About_About","components_ScrollMove","Pages_Build_Build","saveSession","time","ReactDOM","react_router_dom","ErrorCatch_ErrorBoundary","Provider","es","src_App","document","getElementById","URL","href","origin","addEventListener","fetch","contentType","headers","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.e4f8b7a6.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log('This web app is being served cache-first by a service worker.');\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","// setings in root folder / firebase.env\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n    databaseURL: process.env.REACT_APP_DATABASE_URL,\r\n    projectId: process.env.REACT_APP_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n    appId: process.env.REACT_APP_APPID\r\n};\r\n\r\nexport default firebaseConfig;","import * as firebase from 'firebase/app';\r\nimport firebaseConfig from './firebaseConfig';\r\n\r\nconst auth = require('firebase/auth');\r\nconst firestore = require('firebase/firestore');\r\n\r\nclass Firebase {\r\n\r\n    constructor(firebaseConfig){\r\n        firebase.initializeApp(firebaseConfig);\r\n        this.auth = firebase.auth();\r\n        this.db = firebase.firestore();\r\n    }\r\n\r\n    saveSession(rules){\r\n        return this.auth.setPersistence(firebase.auth.Auth.Persistence[rules]);\r\n    }\r\n\r\n    login(email, password){\r\n        try {\r\n            return this.auth.signInWithEmailAndPassword(email, password);\r\n        } catch (error) {\r\n            console.error(error);\r\n            return null;\r\n        }\r\n    }\r\n\r\n    registration(email, password){\r\n        return this.auth.createUserWithEmailAndPassword(email, password)\r\n    }\r\n\r\n    signOut(){\r\n        return this.auth.signOut()\r\n    }\r\n\r\n    getCurrentUser() {\r\n        return this.auth.currentUser\r\n    }\r\n}\r\n\r\nlet firebaseInterface = new Firebase(firebaseConfig);\r\n\r\nexport default firebaseInterface;\r\n\r\nexport { auth, firestore };\r\n\r\n","import {EventEmitter} from 'events';\r\n\r\nconst stream = new EventEmitter();\r\nconst controllerStream = new EventEmitter();\r\n\r\nexport {controllerStream};\r\nexport default stream;\r\n","import React from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\nimport eventEmitter from '../../EventEmitter';\r\n\r\nimport './errorPage.scss';\r\n\r\n\r\nclass ErrorPage extends React.Component {\r\n\r\n    state = {\r\n        redirect: false,\r\n    }\r\n\r\n    update = event => {\r\n       this.setState({redirect: true},\r\n        () => eventEmitter.emit('EventErrorCatchUpdate'));\r\n    }\r\n\r\n    render(){\r\n        if (this.state.redirect) return <Redirect to = '/' />\r\n        return (\r\n        <div class = 'container'>\r\n            <div class = 'flex-column'>\r\n                <h1>Application crash</h1>\r\n                <button className = 'button_updateApp' onClick = {this.update}>Update</button>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ErrorPage;","\r\nimport React from 'react';\r\nimport eventEmitter from '../../EventEmitter';\r\nimport ErrorPage from './ErrorPage';\r\n\r\nclass ErrorBoundary extends React.PureComponent {\r\n\r\n      state = { \r\n        hasError: false,\r\n      };\r\n\r\n    static getDerivedStateFromError(error) {\r\n        console.log(error);\r\n      // Обновить состояние с тем, чтобы следующий рендер показал запасной UI.\r\n      return { hasError: true};\r\n    }\r\n\r\n    updateApplication = event => {\r\n      this.setState({hasError: false});\r\n    };\r\n  \r\n    componentDidCatch(error, info) {\r\n      // Можно также сохранить информацию об ошибке в соответствующую службу журнала ошибок\r\n     console.error(error + \",\" + info);\r\n    }\r\n  \r\n    render() {\r\n      if (this.state.hasError) return <ErrorPage />\r\n      return this.props.children;\r\n    }\r\n\r\n    componentDidMount = () => {\r\n      eventEmitter.on('EventErrorCatchUpdate',this.updateApplication);\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n      eventEmitter.off('EventErrorCatchUpdate',this.updateApplication);\r\n    }\r\n  }\r\n\r\n  export default ErrorBoundary;","const CREATE_PROJECT = 'CREATE_PROJECT';\r\nconst LOAD_UPDATE_PROJECT = \"LOAD_UPDATE_PROJECT\";\r\nconst LOAD_CURRENT = 'LOAD_CURRENT';\r\nconst LOG_OUT_CABINET = 'LOG_OUT_CABINET';\r\nconst LOAD_USER_CABINET = 'LOAD_USER_CABINET';\r\nconst ERROR_CABINET = 'ERROR_CABINET';\r\nconst EXIT_PROJECT = 'EXIT_PROJECT';\r\n\r\nconst createProjectAction = (state) => {\r\n    return {\r\n        type: CREATE_PROJECT,\r\n        projects: state,\r\n    }\r\n}\r\n\r\nconst exitProjectAction = (state) => {\r\n    return {\r\n        type: EXIT_PROJECT,\r\n        exit: state\r\n    }\r\n}\r\n\r\nconst loadCurrentProjectAction = (state) => {\r\n    return {\r\n        type: LOAD_CURRENT,\r\n        id: state.id,\r\n        typeProject: state.typeProject,\r\n        sectionsProject: state.sectionsProject,\r\n        components: state.components\r\n    }\r\n}\r\n\r\nconst loadUpdateCurrentProject = (state) => {\r\n    return {\r\n        type: LOAD_UPDATE_PROJECT,\r\n        idProject: state.idProject,\r\n        sectionsProject: [...state.sectionsProject],\r\n        components: [...state.components]\r\n    }\r\n}\r\n\r\nconst loadUserAction = (state) => {\r\n    return {\r\n        type: LOAD_USER_CABINET,\r\n        active: true,\r\n        idUser: state.uid,\r\n        error: '',\r\n        projects: state.projects\r\n    }\r\n}\r\n\r\nconst logOutAction = (state) => {\r\n\r\n    return {\r\n        type: LOG_OUT_CABINET,\r\n        active: false,\r\n        idUser: null,\r\n        error: '',\r\n        projects: []\r\n    }\r\n}\r\n\r\nconst errorAction = (state) => {\r\n    return {\r\n        type: ERROR_CABINET,\r\n        error: state\r\n    }\r\n}\r\n\r\nexport {\r\n    CREATE_PROJECT, createProjectAction, /* cabinet */\r\n    LOAD_USER_CABINET, loadUserAction, /* cabinet */\r\n    LOG_OUT_CABINET, logOutAction, /* cabinet */\r\n    LOAD_CURRENT, loadCurrentProjectAction, /* builder */\r\n    LOAD_UPDATE_PROJECT, loadUpdateCurrentProject,\r\n    EXIT_PROJECT, exitProjectAction,\r\n    ERROR_CABINET, errorAction, /* both */\r\n}","import {LOAD_CURRENT,LOAD_UPDATE_PROJECT, EXIT_PROJECT} from './actions';\r\n\r\nconst initialState = {\r\n    loadProject: false,\r\n    idProject: null,\r\n    typeProject: null,\r\n    components: [],\r\n    sectionsProject: [],\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n    switch (action.type){\r\n\r\n        case LOAD_CURRENT: {\r\n            return {\r\n                ...state,\r\n                loadProject: true,\r\n                idProject: action.id,\r\n                typeProject: action.typeProject,\r\n                components: [...action.components],\r\n                sectionsProject: [...action.sectionsProject]\r\n            }\r\n        }\r\n\r\n        case LOAD_UPDATE_PROJECT: {\r\n            return {\r\n                ...state,\r\n                components: [...action.components],\r\n                sectionsProject: [...action.sectionsProject]\r\n            }\r\n        }\r\n\r\n        case EXIT_PROJECT: {\r\n            if (action.exit)\r\n            return {\r\n                ...state,\r\n                loadProject: false,\r\n                idProject: null,\r\n                typeProject: null,\r\n                components: []\r\n            }\r\n            else return state;\r\n        }\r\n        default: return state;\r\n    }\r\n};","import {LOAD_USER_CABINET, LOG_OUT_CABINET, ERROR_CABINET, CREATE_PROJECT, LOAD_UPDATE_PROJECT} from './actions';\r\n\r\nconst initialState = {\r\n    active: false,\r\n    idUser: null,\r\n    projects: [],\r\n    error: null,\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case LOAD_USER_CABINET: {\r\n\r\n            return {\r\n                ...state,\r\n                active: action.active,\r\n                idUser: action.idUser,\r\n                projects: [...action.projects]\r\n            }\r\n        }\r\n\r\n        case CREATE_PROJECT: {\r\n            return {\r\n                ...state,\r\n                projects: [...action.projects]\r\n            }\r\n        }\r\n\r\n        case LOAD_UPDATE_PROJECT: {\r\n            return {\r\n                ...state,\r\n                projects: state.projects.map(item => {\r\n                    if (item.id === action.idProject)\r\n                        item.components = [...action.components]\r\n                return item;\r\n                })\r\n            }\r\n        }\r\n\r\n        case LOG_OUT_CABINET: {\r\n            return {\r\n                ...state,\r\n                active: false,\r\n                idUser: null,\r\n                projects: []\r\n            }\r\n        }\r\n\r\n        case ERROR_CABINET: {\r\n            return {\r\n                ...state,\r\n                error: action.error\r\n            }\r\n        }\r\n        default: return state;\r\n    }\r\n}\r\n\r\n","import {combineReducers} from 'redux';\r\nimport reducerBuilder from './reducerBuilder';\r\nimport reducerCabinet from './reducerCabinet';\r\n\r\nexport default combineReducers({\r\n    builder: reducerBuilder,\r\n    cabinet: reducerCabinet,\r\n});","import {createStore, applyMiddleware, compose} from 'redux';\r\nimport firebase from  '../Firebase/Firebase';\r\nimport thunk from 'redux-thunk';\r\nimport combineReducers from './reducers';\r\n\r\nconst composeEnhancers =\r\n  typeof window === 'object' &&\r\n  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?\r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\r\n    }) : compose;\r\n\r\nconst middleware = composeEnhancers(\r\n  applyMiddleware(thunk.withExtraArgument({firebase})));\r\n\r\nconst store = createStore(combineReducers, middleware);\r\nexport default store;","import {loadUserAction, errorAction, logOutAction} from '../actions';\r\n\r\nconst middlewareLogin = (email,password) => async (dispatch,getState, {firebase}) => {\r\n        await firebase.login(email,password)\r\n        .then(response =>{\r\n            firebase.db.collection(\"users\").doc(response.user.uid).get()\r\n            .then(docUser => {\r\n                let user = docUser.data();\r\n                dispatch(loadUserAction({uid: docUser.id, projects: [...user.projects]}))\r\n            })\r\n        })\r\n        .catch((error) => {\r\n            console.error(error.message);\r\n            dispatch(errorAction(error.message));\r\n        });\r\n    }\r\n\r\nconst middlewareLoadUserData = (uid) => async (dispatch,getState, {firebase}) => {\r\n        await firebase.db.collection(\"users\").doc(uid).get()\r\n        .then(docUser => {\r\n            let user = docUser.data();\r\n            dispatch(loadUserAction({uid: uid, projects: [...user.projects]}))\r\n        })\r\n        .catch((error) => {\r\n            console.error(error.message);\r\n            dispatch(errorAction(error.message));\r\n        });\r\n    }\r\n\r\nconst middlewareLogOutUser = (uid) => async (dispatch,getState, {firebase}) => {\r\n    await firebase.signOut()\r\n    .then (response => {\r\n        dispatch(logOutAction());\r\n    })\r\n    .catch((error) => {\r\n        console.error(error.message);\r\n        dispatch(errorAction(error.message));\r\n    });\r\n}\r\nexport {\r\n    middlewareLogin,middlewareLoadUserData, middlewareLogOutUser\r\n}","import React from 'react';\r\nimport firebase from './Firebase';\r\nconst firebaseContext = React.createContext(firebase);\r\nexport default firebaseContext;","import React from 'react';\r\nimport firebaseContext from '../Firebase/firebaseContext';\r\n\r\n\r\nconst withFirebase = Component => props => {\r\n        return (\r\n            <firebaseContext.Consumer>\r\n                {firebase => <Component {...props} firebase = {firebase} /> }\r\n            </firebaseContext.Consumer>\r\n        )\r\n};\r\n\r\n\r\nexport default withFirebase;","import React,{useState} from 'react';\r\nimport './Loader.scss';\r\nexport default function(props) {\r\n    const [path] = useState(props.path ? props.path : '/img/loading.gif');\r\n    const [mode] = useState(props.mode ? props.mode : false);\r\n    return (\r\n            <div className = {`loaderBox ${mode && 'specialMode'}`}>\r\n                <img className = 'loader' src = {path} alt = 'loader'></img> \r\n                {!mode && <p>{`Loading ${props.type}`}</p>}\r\n            </div>\r\n    )\r\n}","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst AnimationTitle = styled.h3`\r\n    user-select: none;\r\n    transition: .4s linear all;\r\n    color: ${props => props.dir === 'up' ? 'red' : 'blue'};\r\n`;\r\n\r\nclass AnimationText extends React.PureComponent {\r\n\r\n    state = {\r\n        tilteContent: this.props.content.split(''),\r\n        currentTitle: this.props.content[0],\r\n        positionTitle: 1,\r\n        directionAnimation: 'up',\r\n        msAnimation: this.props.msAnimation,\r\n        msTimeout: this.props.msAnimation,\r\n        msPauseEnd: this.props.msPauseEnd,\r\n    }\r\n\r\n    _isMounted = false;\r\n    timerAnimation = null;\r\n\r\n    animationTitle = timer => {\r\n        let self = this;\r\n        if (this._isMounted)\r\n        timer = setTimeout( function tick(){\r\n\r\n            if (self._isMounted) {\r\n                if (self.state.directionAnimation === 'up'){\r\n                    let counter = self.state.tilteContent.length;\r\n                    const word = counter > self.state.positionTitle ?\r\n                                self.state.tilteContent[self.state.positionTitle] :\r\n                                self.state.tilteContent[self.state.positionTitle-1];\r\n                    self.setState({\r\n                        ...self.state,\r\n                        currentTitle: self.state.currentTitle + word,\r\n                        positionTitle: self.state.positionTitle + 1,\r\n                        directionAnimation: self.state.positionTitle === counter ? 'down' : 'up',\r\n                        msAnimation: self.state.positionTitle === counter ?\r\n                            self.state.msPauseEnd : self.state.msTimeout\r\n                    });\r\n                }\r\n                if (self.state.directionAnimation === 'down'){\r\n                    let _title = self.state.currentTitle;\r\n                    const length = self.state.currentTitle.length;\r\n                    _title = _title.slice(0,length - 1);\r\n                    self.setState({\r\n                        ...self.state,\r\n                        currentTitle: _title,\r\n                        positionTitle: self.state.positionTitle - 1,\r\n                        directionAnimation: self.state.positionTitle === 2 ? 'up' : 'down',\r\n                        msAnimation: self.state.positionTitle === 2 ?\r\n                            self.state.msPauseEnd : self.state.msTimeout\r\n                    });\r\n                }\r\n            timer = setTimeout(tick, self.state.msAnimation);\r\n            }\r\n        }, this.state.msAnimation);\r\n\r\n    }\r\n\r\n\r\n    render(){\r\n        return (\r\n            <AnimationTitle data-titlebuild dir = {this.state.directionAnimation}>\r\n                {this.state.currentTitle}\r\n            </AnimationTitle>\r\n        )\r\n\r\n    }\r\n\r\n    componentDidMount = (e) => {\r\n        this._isMounted = true;\r\n        this.animationTitle(this.timerAnimation);\r\n    }\r\n\r\n    componentWillUnmount = (e) => {\r\n        this._isMounted = false;\r\n        if (this.timerAnimation) clearTimeout(this.timerAnimation);\r\n    }\r\n}\r\n\r\n\r\nexport default AnimationText;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './registration.scss';\r\n\r\nimport withFirebase from '../../components/firebaseHOC';\r\n\r\n\r\nclass Registration extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        firebase: PropTypes.object.isRequired, /** @firebase class for use firebase functions */\r\n        indexStream: PropTypes.object.isRequired /** @Events stream object */\r\n    }\r\n\r\n    state = {\r\n        firebase: this.props.firebase,\r\n        error: null,\r\n    }\r\n\r\n    emailRef = null;\r\n    passwordRef = null;\r\n\r\n    setRefEmail = (node) => this.emailRef = node;\r\n    setRefPassword = (node) => this.passwordRef = node;\r\n\r\n    createUser = event => {\r\n\r\n        const email = this.emailRef ? this.emailRef.value : null;\r\n        const password = this.passwordRef ? this.passwordRef.value : null;\r\n        const { firebase } = this.props;\r\n\r\n        if (password && email)\r\n        firebase.registration(email, password)\r\n        .then(response => {\r\n            if (!response) throw new Error('Ivaid registration')\r\n            firebase.db.collection(\"users\").doc(response.user.uid).set({\r\n                'projects': [],\r\n                'email': email,\r\n            }).then(() => this.props.indexStream.emit('EventRegistrationCorrect', response));\r\n        })\r\n        .catch((error) => {\r\n        console.error(error.message);\r\n        this.setState({error: error.message});\r\n        });\r\n        else  return this.setState({error: 'invalid user data'});\r\n    };\r\n\r\n    render(){\r\n        let  { error } = this.state;\r\n        return (\r\n            <div className ='RegistrationBox'>\r\n                <div  className = 'RegistrationForm'>\r\n                    <h3>Registration</h3>\r\n                    <form autoComplete = 'off' className = 'RegForm'>\r\n                        { error ?\r\n                            <p className = 'error'>{error}</p>\r\n                            : null\r\n                        }\r\n                        <span>E-mail</span>\r\n                        <input ref = {this.setRefEmail} type = 'text' />\r\n                        <span>Password</span>\r\n                        <input className = 'password' autoComplete = \"off\" ref = {this.setRefPassword} type = 'password' />\r\n                        <input onClick = {this.createUser}\r\n                                className = 'loginButton'\r\n                                type = 'button'\r\n                                value = 'registration'\r\n                        />\r\n                    </form>\r\n                </div>\r\n                </div>\r\n        )\r\n    }\r\n\r\n}\r\nexport default withFirebase(Registration);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Redirect} from 'react-router-dom';\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\r\nimport AnimationText from '../../components/AnimationText/AnimationTitle';\r\nimport Events from 'events';\r\nimport {middlewareLogin} from '../../redux/middleware/loadUserMiddleware';\r\n\r\nimport Loader from '../../components/loading/Loader';\r\nimport Registration from '../../components/Registration/Registration';\r\n\r\nimport {connect} from 'react-redux';\r\n\r\nimport './index.scss';\r\n\r\n\r\nclass Index extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        active: PropTypes.bool, /** @active - status firebase auth */\r\n        dispatch: PropTypes.func.isRequired, /** @dispatch - redux */\r\n        history: PropTypes.object.isRequired, /** @Router HTML5 history */\r\n        location: PropTypes.object.isRequired, /** @Router */\r\n        match: PropTypes.object.isRequired, /** @Router */\r\n        wrongEnter: PropTypes.string, /** @Error about invalid enter */\r\n        config: PropTypes.object, /** @config - app settings */\r\n    }\r\n\r\n    indexStream = new Events();\r\n\r\n    state = {\r\n        title:  \"Constructor\",\r\n        registrationActive: false,\r\n        regStatus: false,\r\n        wrongEnter: false,\r\n        error: '',\r\n    }\r\n\r\n    emailImput = null;\r\n    passwordImput = null;\r\n\r\n    statusRegistration = event => {\r\n        event.additionalUserInfo.isNewUser ?\r\n            this.setState({\r\n                ...this.state,\r\n                regStatus: true,\r\n                registrationActive: false,\r\n                error: 'Account create!'\r\n            })\r\n        : console.error('error registration');\r\n    }\r\n\r\n    showBox = event => {\r\n        this.setState ({\r\n            ...this.state,\r\n        registrationActive: this.state.registrationActive ? false : true\r\n        });\r\n        event.stopPropagation();\r\n    }\r\n\r\n    authTo = event => {\r\n            if (this.emailImput && this.passwordImput)\r\n            this.props.dispatch(middlewareLogin(this.emailImput.value, this.passwordImput.value));\r\n            event.stopPropagation();\r\n    }\r\n\r\n    emailRef = node => this.emailImput = node;\r\n    passwordRef = node => this.passwordImput = node;\r\n\r\n    render(){\r\n\r\n        if (this.props.active) return <Redirect to = { '/Cabinet'} />\r\n        else if (!this.props.active) {\r\n            return (\r\n                <div className = 'LoginPage flex-column'>\r\n                <h1>{this.state.title}</h1>\r\n                        <div className = 'LoginBox'>\r\n                        <AnimationText\r\n                            content = 'Build your landing page!'\r\n                            msPauseEnd = {1000}\r\n                            msAnimation = {150}\r\n                        />\r\n                            <div className = 'LoginForm'>\r\n                                <h3>Connect form</h3>\r\n                                {\r\n                                    this.props.wrongEnter || this.state.regStatus ?\r\n                                    <p className = 'error'>{this.props.wrongEnter}</p>\r\n                                    : null\r\n                                }\r\n                                <p>E-mail</p>\r\n                                <input ref = {this.emailRef} type = 'text' />\r\n                                <p>Password</p>\r\n                                <input ref = {this.passwordRef} type = 'password' />\r\n                                <input \r\n                                    onClick = {this.authTo} \r\n                                    className = 'loginButton enterInput'\r\n                                    type = 'button'\r\n                                    value = 'enter' />\r\n                                <input\r\n                                    onClick = {this.showBox}\r\n                                    className = {this.state.registrationActive ?\r\n                                        `loginButton registration selected` : 'loginButton registration'}\r\n                                    type = 'button'\r\n                                    value = 'registration'\r\n                                    />\r\n                            </div>\r\n                        </div>\r\n                            <TransitionGroup component={null}>\r\n                            { this.state.registrationActive &&\r\n                                    <CSSTransition\r\n                                        timeout={300}\r\n                                        unmountOnExit\r\n                                        classNames=\"boxOpacity\">\r\n                                        <Registration  indexStream = {this.indexStream} />\r\n                                    </CSSTransition>\r\n                            }\r\n                            </TransitionGroup>\r\n                </div>\r\n            )\r\n        } else  return <Loader path = '/img/loading.gif' type = 'session' />\r\n    }\r\n\r\n    componentDidMount = (e) => {\r\n        this.indexStream.on('EventRegistrationCorrect', this.statusRegistration);\r\n    }\r\n    componentWillUnmount = (e) => {\r\n        this.indexStream.off('EventRegistrationCorrect', this.statusRegistration);\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        active: state.cabinet.active, \r\n        wrongEnter: state.cabinet.error\r\n    }\r\n  }\r\n\r\nexport default connect(mapStateToProps)(Index);","\r\nimport {errorAction, loadUserAction, loadUpdateCurrentProject} from '../actions';\r\n\r\nconst middlewareDelete = item => async (dispatch,getState, {firebase}) => {\r\n\r\n    await firebase.db.collection('users').doc(item.uid).get()\r\n    .then(user => user.data())\r\n    .then(data => {\r\n        return {id: item.uid, projects: data.projects.filter(itemdb => itemdb.id !== item.id)};\r\n    })\r\n    .then(data => {\r\n        firebase.db.collection(\"users\").doc(item.uid).update({\r\n            \"projects\": data.projects\r\n        })\r\n        .then(response => {\r\n            dispatch(loadUserAction({uid: item.uid, projects: data.projects}));\r\n        });\r\n    })\r\n    .catch((error) => {\r\n        console.error(error.message);\r\n        dispatch(errorAction(error.message));\r\n    });\r\n}\r\n\r\nconst middlewareDeleteProjectComponent = item => async (dispatch, getState, {firebase}) => {\r\n    await firebase.db.collection('users').doc(item.uid).get()\r\n    .then(user => user.data())\r\n    .then(data => {\r\n        const userProjects = [...data.projects];\r\n        const findProject = userProjects.find(project => item.id === project.id);\r\n        if (!findProject) throw new Error('No found project');\r\n        findProject.components = findProject.components.filter(component =>\r\n            component.id !== item.idComponent\r\n        );\r\n        return {dataUpdate: data, findProject: findProject};\r\n    })\r\n    .then(data => {\r\n        let {dataUpdate} = data;\r\n        let {findProject} = data;\r\n        firebase.db.collection(\"users\").doc(item.uid).update({\r\n            \"projects\": dataUpdate.projects\r\n        })\r\n        .then(response => {\r\n            dispatch(loadUpdateCurrentProject({\r\n                components: [...findProject.components],\r\n                idProject: item.id,\r\n                sectionsProject: [...item.sectionsProject],\r\n            }))\r\n        });\r\n    })\r\n    .catch(error => {\r\n        console.error(error.message);\r\n        dispatch(errorAction(error.message));\r\n        return null;\r\n    });\r\n\r\n    return item.idComponent;\r\n}\r\n\r\nexport {middlewareDeleteProjectComponent};\r\nexport default middlewareDelete;\r\n","import React, {useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './icon.scss';\r\n\r\nfunction Icon(props){\r\n    const [path] = useState(props.path);\r\n    const [className] = useState(props.className ? props.className : null);\r\n    const [draggable] = useState(props.draggable ? true : false);\r\n\r\n    return (\r\n    <img\r\n        draggable = {draggable}\r\n        onClick = {props.onClick ? props.onClick : null}\r\n        className = {className}\r\n        title = {props.title ? props.title : null}\r\n        src = {process.env.PUBLIC_URL + path } alt = 'icon'>\r\n    </img>\r\n    )\r\n}\r\n\r\nIcon.propTypes = {\r\n    path: PropTypes.string.isRequired, // icon path\r\n    className: PropTypes.string, // class\r\n    draggable: PropTypes.bool // draggable bool\r\n}\r\n\r\nexport default Icon;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './Confirm.scss';\r\n\r\nconst Confirm = props => {\r\n\r\n    return (\r\n        <div className = 'wrapperConfirm'>\r\n            <div className = 'confirmSave'>\r\n                <span>Detected new changes</span>\r\n                <input\r\n                    className = 'saveCofirm'\r\n                    onClick = {props.cbSaveChanges}\r\n                    type = 'button'\r\n                    value = 'Save changes'\r\n                />\r\n                <input\r\n                    className = 'cancelCofirm'\r\n                    onClick = {props.cbCancelSave}\r\n                    type = 'button'\r\n                    value = 'Cancel'\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nConfirm.propTypes = {\r\n    cbSaveChanges: PropTypes.func.isRequired, // callback\r\n    cbCancelSave: PropTypes.func.isRequired // callback\r\n}\r\n\r\nexport default Confirm;","import React from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport './header.scss';\r\n\r\nimport {middlewareLogOutUser} from '../../redux/middleware/loadUserMiddleware';\r\nimport {connect} from 'react-redux';\r\nimport {Redirect, withRouter} from 'react-router-dom';\r\n\r\nimport eventEmitter from '../../EventEmitter.js';\r\nimport Icon from '../Icon/icon';\r\nimport Confirm from '../confirmBox/Confirm';\r\n\r\nconst iconPath = require('../../config.json').CabinetIcon;\r\n\r\nclass Header extends React.Component {\r\n\r\n    static propTypes = {\r\n        title: PropTypes.string.isRequired, /** @Config title app */\r\n        cabinetStream: PropTypes.object, /** @Events stream cabinet */\r\n        dispatch: PropTypes.func.isRequired, /** @dispatch redux */\r\n        history: PropTypes.object.isRequired, /** @Router HTML5 history */\r\n        location: PropTypes.object.isRequired, /** @Router */\r\n        match: PropTypes.object.isRequired, /** @Router */\r\n    };\r\n\r\n    state = {\r\n        idUser: this.props.idUser,\r\n        title: this.props.title,\r\n        isChange: false,\r\n        redirectConfirm: false,\r\n        redirectAbout: {\r\n            path:  '/Cabinet/About',\r\n            redirectA: false,\r\n        },\r\n        redirectCabinet: {\r\n            path:  '/Cabinet',\r\n            redirectC: false,\r\n        }\r\n    };\r\n\r\n    confirm = event => {\r\n        if (typeof event !== 'object')\r\n        this.setState({isChange: event});\r\n        else this.setState({isChange: event.false, redirectConfirm: event.confirm});\r\n    }\r\n\r\n    confirmSaveDetectChanges = event => {\r\n        eventEmitter.emit('EventRedirectSaveChanges');\r\n        this.setState({\r\n            redirectConfirm: false,\r\n            redirectCabinet: {\r\n                ...this.state.redirectCabinet,\r\n                redirectC: true\r\n            }\r\n        });\r\n    };\r\n\r\n    logOut = event => {\r\n        if (this.state.idUser)\r\n            this.props.dispatch(middlewareLogOutUser(this.props.idUser));\r\n        event.stopPropagation();\r\n    };\r\n\r\n    redirectAbout = event => {\r\n        const isPath = this.props.location.pathname !== this.state.redirectAbout.path;\r\n        if (isPath && !this.state.isChange)\r\n           this.setState({\r\n                redirectConfirm: false,\r\n                redirectAbout: {\r\n                   ...this.state.redirectAbout,\r\n                   redirectA: true\r\n               }\r\n           });\r\n           else this.setState({redirectConfirm: true});\r\n        event.stopPropagation()\r\n    };\r\n\r\n    redirectCabinet = event => {\r\n        if (event !== 'cancelMode'){\r\n            const isPath = this.props.location.pathname !== this.state.redirectCabinet.path;\r\n            if (isPath && this.state.isChange === false)\r\n            this.setState({\r\n                redirectConfirm: false,\r\n                redirectCabinet: {\r\n                    ...this.state.redirectCabinet,\r\n                    redirectC: true\r\n                }\r\n            });\r\n            else if (!this.state.redirectConfirm) this.setState({redirectConfirm: true});\r\n            event.stopPropagation();\r\n\r\n        } else this.setState({\r\n            redirectConfirm: false,\r\n            redirectCabinet: {\r\n                ...this.state.redirectCabinet,\r\n                redirectC: true\r\n            }\r\n        });\r\n    }\r\n\r\n    add = event => {\r\n        this.props.cabinetStream.emit('EventChangeWorkMode',{action: 'newProject'});\r\n        event.stopPropagation()\r\n    };\r\n\r\n    render(){\r\n        let {redirectA} = this.state.redirectAbout;\r\n        let {redirectC} = this.state.redirectCabinet;\r\n\r\n        if (redirectA) return <Redirect to = {this.state.redirectAbout.path} />\r\n        if(redirectC) return <Redirect to = {this.state.redirectCabinet.path} />\r\n\r\n        return (\r\n            <React.Fragment>\r\n            {this.state.isChange && this.state.redirectConfirm ? \r\n                <Confirm \r\n                    cbSaveChanges = {this.confirmSaveDetectChanges}\r\n                    cbCancelSave = {() => this.redirectCabinet('cancelMode')}\r\n                /> : null}\r\n                <header>\r\n                    <div className = 'container'>\r\n                        <div className = 'flex-row'>\r\n                                <div onClick = {this.redirectCabinet} className = 'header__CabinetInfo'>\r\n                                    <Icon className ='mainIcon' path = {iconPath} />\r\n                                    <h3 className = 'tilteApp'>{this.state.title}</h3>\r\n                                </div>\r\n                                {this.props.location.pathname === '/Cabinet' ?\r\n                                    <div onClick = {this.add} className = 'header__newProject__AddButton'>\r\n                                        <Icon className = 'Cabinet' path = '/img/plus.png' />\r\n                                    </div>\r\n                                    : null\r\n                                }\r\n                                    <div  className = 'Navigator'>\r\n                                        <Icon className = 'about' onClick = {this.redirectAbout}\r\n                                            title = 'about'\r\n                                            path = '/img/about_logo.svg'\r\n                                        />\r\n                                        <Icon className = 'logoutButton'\r\n                                            onClick = {this.logOut}\r\n                                            title = 'logOut'\r\n                                            path = '/img/logOut.svg'\r\n                                        />\r\n                                    </div>\r\n                        </div>\r\n                </div>\r\n                </header>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n    componentWillMount = () => {\r\n        eventEmitter.on('EventRedirectConfirm', this.confirm);\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        eventEmitter.off('EventRedirectConfirm', this.confirm);\r\n    }\r\n}\r\n\r\nexport default connect()(withRouter(Header));","import React, {useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport eventEmitter from '../../EventEmitter';\r\n\r\nconst ImageItem = props => {\r\n\r\n    const [id] = useState(props.id);\r\n    const [urlRegular] = useState(props.urls.regular);\r\n    const [urlFull] = useState(props.urls.full);\r\n    const [isFull] = useState(props.isFull);\r\n    const [urlContent] = useState(props.urlContent);\r\n    const showImageMenu = event => {\r\n\r\n       eventEmitter.emit(\"EventShowMenuImage\",{\r\n            id: id,\r\n            url: urlRegular,\r\n            urlFull: urlFull,\r\n            iframe: urlContent\r\n        });\r\n\r\n        event.stopPropagation();\r\n    }\r\n\r\n    return (\r\n        <div className = {props.selected ? 'ItemBox selected' : 'ItemBox'}>\r\n            <img\r\n                className = 'ImageItem'\r\n                onClick = {showImageMenu}\r\n                src = {isFull ? urlFull : urlRegular}\r\n                alt = 'item'\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nImageItem.propTypes = {\r\n    id: PropTypes.oneOfType([\r\n        PropTypes.string,\r\n        PropTypes.number,\r\n    ]),\r\n    urls: PropTypes.object, // data with image path\r\n    isFull: PropTypes.bool, // mode view\r\n    urlContent: PropTypes.string // content path\r\n}\r\n\r\nexport default ImageItem;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Loader from '../../loading/Loader';\r\nconst CreateProject = props => {\r\n\r\n    let isNumber = props.nameLength >= 4 && props.nameLength <= 20;\r\n\r\n    return (\r\n    <div className = 'Modal'>\r\n        <h3>Create new Project</h3>\r\n        { props.nameLength <= 3 ?\r\n            <span className = 'warning'>{props.warningLengthMin}</span> : null\r\n        }\r\n        { props.nameLength >= 20 ?\r\n            <span className = 'warning'>{props.warningLengthMax}</span> : null\r\n        }\r\n        {\r\n            isNumber && !props.validName ?\r\n            <span className = 'warning'>{props.warningNumber}</span> : null\r\n        }\r\n        <input\r\n            className = {props.typeClassName ? 'ready' : 'wrong'}\r\n            value = {props.name}\r\n            onChange = {props.cbValidateName}\r\n            type = 'text'\r\n            placeholder = \"Project name\"\r\n        />\r\n        { !props.validType ?\r\n            <span className = 'warning'>{props.warningType}</span> : null\r\n        }\r\n        <select onChange = {props.cbSelectOption} >\r\n            <option value = 'empty'>--------</option>\r\n            <option value = 'landing'>Landing</option>\r\n        </select>\r\n        <input \r\n            onClick = {props.cbAddNewProject}\r\n            className = 'acceptButton'\r\n            disabled = {props.dissabled}\r\n            type = 'button'\r\n            value = 'Submit'\r\n        />\r\n        <input onClick = {props.cbCancel} type ='button' value = 'Cancel' />\r\n        {props.loading && <Loader mode = 'create' />}\r\n    </div>\r\n    )\r\n}\r\n\r\nCreateProject.propTypes = {\r\n    typeClassName: PropTypes.bool, // type color className\r\n    name: PropTypes.string, // name of project\r\n    warningType: PropTypes.string, // errors\r\n    warningLengthMax: PropTypes.string, // error max length\r\n    warningLengthMin: PropTypes.string, // error min length\r\n    dissabled: PropTypes.bool, // buttons dissabled\r\n    validType: PropTypes.bool, // valid or no\r\n    cbValidateName: PropTypes.func.isRequired, // callback validate\r\n    cbAddNewProject: PropTypes.func.isRequired, // callback add new project\r\n}\r\n\r\nexport default CreateProject;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport eventEmitter from '../../../EventEmitter';\r\nimport Icon from '../../Icon/icon';\r\nimport Loader from '../../loading/Loader';\r\n\r\nclass  SearchModal extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        modalSearchMode: PropTypes.string.isRequired, // search mode\r\n        content: PropTypes.object, // with search data\r\n        cbCancel: PropTypes.func.isRequired, // callback cancel\r\n        cbShowImage: PropTypes.func.isRequired, // callback show image\r\n        cbSetSelectedImage: PropTypes.func.isRequired, // callback show image\r\n    }\r\n\r\n    state = {\r\n        mode: this.props.modalSearchMode,\r\n        items: this.props.images,\r\n    }\r\n\r\n    search = event => {\r\n        const value = this.refSearch ? this.refSearch.value : null;\r\n        this.props.cbSearch(event,value, this.props.modalSearchMode);\r\n        event.stopPropagation();\r\n    }\r\n\r\n    refSearch = null;\r\n    refSearchFunc = node => this.refSearch = node;\r\n\r\n    render(){\r\n\r\n        let {content} = this.props;\r\n        return (\r\n            <React.Fragment>\r\n                <div className = 'Modal Modal-search'>\r\n                <h3>{`Search ${this.props.modalSearchMode}`}</h3>\r\n                { this.props.error ?\r\n                    <span className = 'error'>{content.error}</span> : null\r\n                }\r\n                    <input ref = {this.refSearchFunc} type = 'text' placeholder = \"name\" />\r\n                        <input\r\n                            disabled = {content.dissabled}\r\n                            className = 'acceptButton'\r\n                            type = 'button'\r\n                            value = 'Search'\r\n                            onClick = {this.search}\r\n                        />\r\n                    <input onClick = {this.props.cbCancel} type ='button' value = 'Cancel' />\r\n                <div className = 'searchResultBox'>\r\n                    {this.state.items}\r\n                    {this.props.loading ? <Loader type = 'images' /> : null}\r\n                </div>\r\n                </div>\r\n                {  this.props.menuActive ?\r\n                    <div className = 'ActionModalSearch'>\r\n                    <button onClick = {this.props.cbShowImage} className = 'actionModalSearch__view'>\r\n                        <Icon path = '/img/view.png' />\r\n                    </button>\r\n                    <button onClick = {this.props.cbSetSelectedImage} className = 'actionModalSearch__settings'>\r\n                        <Icon path = '/img/settings.png' />\r\n                    </button>\r\n                    </div>\r\n                    : null\r\n                }\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n    componentDidUpdate = (prevProps,prevState) => {\r\n        let {content} = this.props;\r\n        let {content: contentPrev} = prevProps;\r\n        const haveUpdate = (contentPrev.images !== content.images && content.images);\r\n        const isSelected = contentPrev.selectedId !== content.selectedId;\r\n\r\n        if (haveUpdate || isSelected){\r\n            let _items = this.props.cbMakeImageResultBox(content.images);\r\n            this.setState({\r\n                ...this.state,\r\n                items: [..._items]\r\n            });\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        eventEmitter.emit('EventBlockScroll', 'window');\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        eventEmitter.emit('EventBlockScroll', 'default');\r\n    }\r\n}\r\n\r\nexport default SearchModal;","import React,{Fragment} from 'react';\r\n\r\nimport isFetch from 'isomorphic-fetch';\r\nimport PropTypes from 'prop-types';\r\nimport eventEmitter,{controllerStream} from '../../EventEmitter.js';\r\nimport {CSSTransition, TransitionGroup} from 'react-transition-group';\r\nimport ImageItem from '../imageViewer/imageItem';\r\n\r\nimport CreateProject from './createProject/createProject';\r\nimport SearchModal from './Search/searchModal';\r\nimport './modal.scss';\r\nrequire('es6-promise').polyfill();\r\n\r\nclass ModalWindow extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        workMode: PropTypes.string.isRequired, /** @Mode for modal */\r\n        cabinetStream: PropTypes.object, /** @Events stream cabinet */\r\n        eventStreamBuild: PropTypes.object, /** @Events stream build */\r\n        idComponent: PropTypes.oneOfType([\r\n            PropTypes.string,\r\n            PropTypes.number\r\n        ]) /** @Id current user project */\r\n    }\r\n\r\n    state = {\r\n        readyAnimation: false,\r\n        workMode: this.props.workMode,\r\n        loading: false,\r\n        items: [],\r\n        images: {\r\n            loading: false,\r\n            buttonSearchDisabled: false,\r\n            selectedItem: null, \r\n            showUrl: null, \r\n            images: null,\r\n            urlFull: null,\r\n            imageBoxView: false, \r\n            iframe: null,\r\n            error: ''\r\n        },\r\n        newProject: {\r\n            validateName: false,\r\n            validateType: false,\r\n            disabled: true,\r\n            name: '',\r\n            type: 'empty'\r\n        },\r\n        imageMenuActive: false,\r\n        warning: {\r\n            lengthMax: 'Max length: 20 laters',\r\n            warningNumber: `Don't use numbers`,\r\n            lengthMin: 'Min length: 4 letters',\r\n            type: 'Select type of webpage',\r\n        }\r\n    }\r\n\r\n    inputSearch = null;\r\n    inputSelect = null;\r\n\r\n    searchData = (event,value, mode) => {\r\n\r\n        this.setState({...this.state, \r\n            images: {\r\n                ...this.state.inages,\r\n                loading: true,\r\n                buttonSearchDisabled: true\r\n            }\r\n        });\r\n\r\n        let search = null;\r\n        if (value) search = value;\r\n        else search = this.inputSearch.value;\r\n\r\n        if (mode !== 'media'){\r\n        const modeAPI = 'search/photos/?page=1&per_page=40&query=';\r\n        const api = `https://api.unsplash.com/${modeAPI}`;\r\n \r\n        isFetch(`${api + search}&client_id=${process.env.REACT_APP_UNSPLASH_TOKEN}`)\r\n        .then(response => {\r\n            if (response.ok) return response.json();\r\n            else throw new Error('request invalid');\r\n        })\r\n        .then(response => {\r\n            let {results} = response;\r\n            if (results.length)\r\n            this.setState({\r\n                ...this.state,\r\n                images: {\r\n                    ...this.state.images,\r\n                    loading: false,\r\n                    imageBoxView: true,\r\n                    error: '',\r\n                    images: [...results],\r\n                    buttonSearchDisabled: false\r\n                },\r\n            });\r\n            else throw new Error('Photos not found');\r\n        })\r\n        .catch(error => {\r\n            console.error(error.message);\r\n            this.setState({\r\n                ...this.state,\r\n                images: {\r\n                    ...this.state.images,\r\n                    buttonSearchDisabled: false,\r\n                    loading: false,\r\n                    error: error.message},\r\n                imageBoxView: false,\r\n            });\r\n        });\r\n        } else this.searchYouTubeAPI(search);\r\n    }\r\n\r\n    \r\n    searchYouTubeAPI = (search) => {\r\n\r\n        const API = `https://www.googleapis.com/youtube/v3/search?part=snippet`;\r\n        const RAITE = `&maxResults=25&order=date&q=${search}`;\r\n        const KEY = `&key=${process.env.REACT_APP_YOUTUBE_SEARCH_TOKEN}`;\r\n        isFetch(API + RAITE + KEY)\r\n        .then(res => {\r\n            if (res.ok)\r\n            return res.json();\r\n            else throw new Error (`Error ${res.status}`);\r\n        })\r\n        .then(res => {\r\n            const arrayItems = [];\r\n            res.items.forEach(item => {\r\n                arrayItems.push({\r\n                    urls: { regular: item.snippet.thumbnails.high.url },\r\n                    videoId: item.id.videoId\r\n                })\r\n            });\r\n            return arrayItems;\r\n        })\r\n        .then(results => {\r\n            this.setState({\r\n                ...this.state,\r\n                images: {\r\n                    ...this.state.images,\r\n                    loading: false,\r\n                    imageBoxView: true,\r\n                    error: '',\r\n                    images: [...results],\r\n                    buttonSearchDisabled: false\r\n                },\r\n            });\r\n        })\r\n        .catch(error => console.error(error));\r\n    }\r\n\r\n    showMenuImage = event => {\r\n        this.setState({\r\n            ...this.state, \r\n            imageMenuActive: true,\r\n            images: {\r\n                ...this.state.images,\r\n                selectedItem: event.id, \r\n                showUrl: event.url,\r\n                urlFull: event.urlFull,\r\n                iframe: event.iframe\r\n\r\n            }\r\n        });\r\n    }\r\n\r\n    showImage = event => {\r\n\r\n        const {showUrl, iframe} = this.state.images;\r\n\r\n        this.props.eventStreamBuild.emit(\"EventView\", {\r\n            action: true, \r\n            target: showUrl ? showUrl : null,\r\n            iframe: iframe,\r\n            mode: this.props.modalSearchMode\r\n        });\r\n        event.stopPropagation();\r\n    }\r\n\r\n    setSelectedImage = event => {\r\n\r\n        let data = {...this.state.images};\r\n        if (this.props.modalSearchMode === 'background'){\r\n            controllerStream.emit(`EventSetBackgroundImage${this.props.idComponent}`,data);\r\n            eventEmitter.emit(`EventSetBImageInstumentPanel`,{images: data, mode: this.props.modalSearchMode});\r\n        } else if (this.props.modalSearchMode === 'image'){\r\n            controllerStream.emit(`EventSetCurrentImage${this.props.idComponent}`, data);\r\n            eventEmitter.emit(`EventSetBImageInstumentPanel`, {images: data,  mode: this.props.modalSearchMode });\r\n        } else if (this.props.modalSearchMode === 'media'){\r\n            controllerStream.emit(`EventSetContentMedia${this.props.idComponent}`,{\r\n                    iframe: data.iframe,\r\n                    mode: this.props.modalSearchMode\r\n                }\r\n            );\r\n            eventEmitter.emit(`EventSetIframe`, {iframe: data.iframe});\r\n        }\r\n\r\n        event.stopPropagation();\r\n    };\r\n\r\n    makeImageResultBox = (items) => {\r\n        if (!items) return null;\r\n        return items.map((item,i) =>{\r\n                return <ImageItem\r\n                            key = {`item${~~(1 + Math.random() * 999)}`}\r\n                            id = {i}\r\n                            urlContent = {item.videoId ? item.videoId : null}\r\n                            selected = {this.state.images.selectedItem === i ? true : false} \r\n                            isFull = {false}\r\n                            urls = {item.urls}\r\n                        />\r\n        });\r\n\r\n    }\r\n\r\n    addNewProject = event => {\r\n        let mode = this.state[this.state.workMode];\r\n        if (mode.validateType &&  mode.validateName) {\r\n\r\n            this.setState({\r\n                ...this.state,\r\n                loading: true,\r\n            });\r\n            this.props.cabinetStream.emit('EventAddProject',\r\n            {\r\n                title: this.state[this.state.workMode].name,\r\n                type: this.state[this.state.workMode].type\r\n            });\r\n\r\n            this.props.cabinetStream.emit('EventChangeWorkMode',{action: 'default'});\r\n        }\r\n    }\r\n\r\n    selectOption = event => {\r\n\r\n        let inputs = {...this.state[this.state.workMode]};\r\n        inputs.type = event.target.value;\r\n        inputs.validateType = inputs.type !== 'empty';\r\n        inputs.disabled = inputs.validateType && inputs.validateName ? false : true;\r\n        this.setState({\r\n            ...this.state,\r\n            [this.state.workMode]: inputs\r\n        });\r\n    }\r\n\r\n    validateName = event => {\r\n\r\n        let inputs = {...this.state[this.state.workMode]};\r\n        inputs.name = event.target.value;\r\n        inputs.validateName = /^\\D{4,20}$/i.test(inputs.name);\r\n        inputs.disabled = inputs.validateType && inputs.validateName ? false : true;\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            [this.state.workMode]: inputs\r\n        })\r\n    };\r\n\r\n    cancel = event => {\r\n\r\n        if (this.state.workMode === 'Search')\r\n        this.props.eventStreamBuild.emit(\"EventModalSearchOn\", {action: 'offline', mode: null});\r\n        else  this.props.cabinetStream.emit('EventChangeWorkMode',{action: 'default'});\r\n    }\r\n\r\n    refSelect = (node) => this.inputSelect = node;\r\n    refSearch = node => this.inputSearch = node;\r\n\r\n\r\n    typeRenderModal = workMode => {\r\n        switch (workMode){\r\n            case 'newProject':\r\n                return (\r\n                    <CSSTransition\r\n                            timeout={500}\r\n                            unmountOnExit\r\n                            classNames = 'modalAnimation'\r\n                    >\r\n                        <CreateProject\r\n                                dissabled = {this.state[this.state.workMode].disabled}\r\n                                warningNumber = {this.state.warning.warningNumber}\r\n                                validName = {this.state[this.state.workMode].validateName}\r\n                                nameLength = {this.state[this.state.workMode].name.length}\r\n                                name = {this.state[this.state.workMode].name}\r\n                                validType = {this.state[this.state.workMode].validateType}\r\n                                warningType = {this.state.warning.type}\r\n                                typeClassName = {this.state[this.state.workMode].validateName}\r\n                                warningLengthMin = {this.state.warning.lengthMin}\r\n                                warningLengthMax = {this.state.warning.lengthMax}\r\n                                cbValidateName = {this.validateName}\r\n                                cbSelectOption = {this.selectOption}\r\n                                cbAddNewProject = {this.addNewProject}\r\n                                cbCancel = {this.cancel}\r\n                                loading = {this.state.loading}\r\n                        />\r\n                    </CSSTransition>\r\n                )\r\n            case 'Search':\r\n                    return (\r\n                        <CSSTransition\r\n                            timeout={500}\r\n                            unmountOnExit\r\n                            classNames = 'modalAnimation'\r\n                        >\r\n                            <div className = 'searchWrapper'> \r\n                                <SearchModal\r\n                                    content = {this.state.images}\r\n                                    cbCancel = {this.cancel}\r\n                                    menuActive = {this.state.imageMenuActive}\r\n                                    cbMakeImageResultBox = {this.makeImageResultBox}\r\n                                    cbShowImage = {this.showImage}\r\n                                    cbSetSelectedImage = {this.setSelectedImage}\r\n                                    modalSearchMode = {this.props.modalSearchMode}\r\n                                    cbSearch = {this.searchData}\r\n                                    loader = {this.state.loading}\r\n                                  \r\n                                />\r\n                            </div>\r\n                        </CSSTransition>\r\n                    )\r\n\r\n            default: return <Fragment></Fragment>\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <TransitionGroup  component = {null}>\r\n                {this.state.readyAnimation && this.typeRenderModal(this.state.workMode)}\r\n            </TransitionGroup>\r\n        )\r\n    }\r\n\r\n    componentDidUpdate = (nextProps, nextState) => {\r\n        if (!this.state.readyAnimation)\r\n        this.setState({\r\n            ...this.state,\r\n            readyAnimation: true,\r\n        });\r\n    }\r\n    \r\n\r\n    componentDidMount = event => {\r\n        if (this.state.workMode === 'Search')\r\n            eventEmitter.on('EventShowMenuImage', this.showMenuImage);\r\n\r\n\r\n            if (!this.state.readyAnimation)\r\n            this.setState({\r\n                ...this.state,\r\n                readyAnimation: true,\r\n            });\r\n    }\r\n\r\n    componentWillUnmount = event => {\r\n        if (this.state.workMode === 'Search')\r\n            eventEmitter.off('EventShowMenuImage', this.showMenuImage);\r\n    }\r\n}\r\n\r\nexport default ModalWindow;\r\n\r\n","import {createProjectAction, errorAction} from '../actions';\r\n\r\n\r\nfunction random(min,max){\r\n    return `${Math.floor(min + Math.random() * (max-min))}`\r\n}\r\n\r\n\r\nconst middlewareCreateProject = (uid, list, title, type) => async (dispatch,getState, {firebase}) => {\r\n    let lastProject = [...list];\r\n    const lastIndex = lastProject.length  ? lastProject[lastProject.length-1].id + 1 : 0;\r\n    const sectionsProject = [];\r\n    if (type === 'portfolio') sectionsProject.push(\"Header\");\r\n    else sectionsProject.push(\"Header\");\r\n    const header = {\r\n        backgroundImage: null,\r\n        backgroundColor: null,\r\n        id: `MainBackgroundHeader${random(0,10000)}`,\r\n        targetSection: \"Header\",\r\n        type: \"background\"\r\n    }\r\n\r\n    lastProject.push({\r\n        id: lastIndex,\r\n        title: title,\r\n        type: type,\r\n        components: [header],\r\n        sectionsProject: [...sectionsProject],\r\n    });\r\n\r\n    await firebase.db.collection(\"users\").doc(uid).update({\r\n        'projects': lastProject,\r\n    })\r\n    .then (() => dispatch(createProjectAction(lastProject)))\r\n    .catch(error => {\r\n        console.error(error.message);\r\n        dispatch(errorAction(error.message));\r\n    })\r\n};\r\n\r\nexport {\r\n    middlewareCreateProject\r\n}","import React, {useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {withRouter, Redirect} from 'react-router-dom';\r\n\r\nfunction Item(props) {\r\n\r\n    const [path] = useState( `/Cabinet/Build/${props.id}`);\r\n    const [productionPath] = useState(`/Cabinet/Build/${props.id}/Production/`);\r\n\r\n    let [canBuild,setCanBuild] = useState(false);\r\n    let [canProd, setCanProd] = useState(false);\r\n\r\n    const [id] = useState(props.id);\r\n    const [name] = useState(props.name);\r\n    const [type] = useState(props.type);\r\n\r\n\r\n    const build = event => {\r\n        if(props.location.pathname !== path)\r\n            setCanBuild(true);\r\n        event.stopPropagation();\r\n    };\r\n\r\n    const showProduction = event => {\r\n        if(props.location.pathname !== path)\r\n        setCanProd(true);\r\n        event.stopPropagation();\r\n    };\r\n\r\n    const deleteItem = event => {\r\n        props.cabinetStream.emit('EventDeleteItem',{\r\n            id: props.id,\r\n            name: props.name,\r\n            type: props.type\r\n        });\r\n        event.stopPropagation();\r\n    };\r\n\r\n\r\n    if (canBuild) return <Redirect to = {path} />\r\n    else if (canProd) return <Redirect to = {productionPath} />\r\n    else return (\r\n            <div className = 'item' data-id = {id}>\r\n                <p className = 'ProjectName'>{name}</p>\r\n                <p className = 'ProjectType'>{type}</p>\r\n                <div className = 'projectController'>\r\n                    <input \r\n                        onClick = {build} \r\n                        className = 'projectControllerButton_enter' \r\n                        type = 'button' \r\n                        value = 'enter build' />\r\n                    <input onClick = {deleteItem} \r\n                        className = 'projectControllerButton_delete' \r\n                        type = 'button' \r\n                        value = 'delete' />\r\n                </div>\r\n                <input onClick = {showProduction} \r\n                    className = 'productionButton' \r\n                    type = 'button' \r\n                    value = 'Production' />\r\n            </div>\r\n        )\r\n}\r\n\r\nItem.propTypes = {\r\n    id: PropTypes.number.isRequired, // id item\r\n    name: PropTypes.string.isRequired, // item name\r\n    type: PropTypes.string.isRequired, // item type\r\n}\r\n\r\nexport default withRouter(Item);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport {middlewareCreateProject} from '../../redux/middleware/createProjectMiddleware';\r\n// import {CSSTransition, TransitionGroup} from 'react-transition-group';\r\nimport './list.scss';\r\n\r\nimport Item from './Item';\r\n\r\nclass List extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        dispatch: PropTypes.func.isRequired, /** @dispatch redux */\r\n        idUser: PropTypes.string.isRequired, /** @UID current user */\r\n        list: PropTypes.array.isRequired, /** @List user projects */\r\n    }\r\n\r\n    state = {\r\n        redirect: false,\r\n    }\r\n\r\n    addNewProject = (item) => {\r\n        if (this.props.idUser) {\r\n            this.props.dispatch(middlewareCreateProject(\r\n                    this.props.idUser,\r\n                    this.props.list,\r\n                    item.title,\r\n                    item.type\r\n                ));\r\n        } else this.setState({...this.state, redirect: true});\r\n    }\r\n\r\n\r\n    makeList = (list) => {\r\n\r\n        return list.map (project => {\r\n\r\n            return(\r\n                <Item\r\n                    key = {project.id}\r\n                    id = {project.id}\r\n                    name = {project.title}\r\n                    type = {project.type}\r\n                    cabinetStream = {this.props.cabinetStream}\r\n                />\r\n            )\r\n        });\r\n    }\r\n\r\n    render(){\r\n        if (this.state.redirect)\r\n            return <Redirect to = { '/'} />\r\n            else return (\r\n                    <div className = 'projectsList__list'>\r\n                        {this.makeList([...this.props.list])}\r\n                    </div>\r\n                )\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.props.cabinetStream.on('EventAddProject',this.addNewProject);\r\n    }\r\n\r\n      componentWillUnmount = () => {\r\n        this.props.cabinetStream.off('EventAddProject',this.addNewProject);\r\n      }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        idUser: state.cabinet.idUser,\r\n        list: [...state.cabinet.projects]\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(List);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport List from '../List/List.jsx';\r\nimport './ProjectsSection.scss';\r\n\r\nconst ProjectsSection = props => {\r\n        return (\r\n            <section className = 'projectsList'>\r\n                <div className = 'container'>\r\n                    <div className = 'flex-column'>\r\n                        <div className = 'projectsList__about'>\r\n                            <h3>Your Projects</h3>\r\n                        </div>\r\n                        <List cabinetStream = {props.cabinetStream} />\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        )\r\n\r\n}\r\n\r\nProjectsSection.propTypes = {\r\n    cabinetStream: PropTypes.object /** @Events stream */\r\n}\r\n\r\nexport default ProjectsSection;","import React,{Fragment} from 'react';\nimport PropTypes from 'prop-types';\nimport Events from 'events';\nimport {Redirect} from 'react-router-dom';\nimport withFirebase from '../../components/firebaseHOC';\n\nimport {middlewareLogOutUser} from '../../redux/middleware/loadUserMiddleware';\nimport middlewareDelete from '../../redux/middleware/middlewareDelete';\nimport Loader from '../../components/loading/Loader';\nimport {connect} from 'react-redux';\n\nimport Header from '../../components/header/Header';\nimport Modal from '../../components/modalWindow/ModalWindow';\nimport ProjectsSection from '../../components/ProjectsSection/ProjectsSection';\n\nimport './Cabinet.scss';\n\nconst title = require('../../config.json').title;\n\nclass Cabinet extends React.PureComponent {\n\n  static propTypes = {\n    firebase: PropTypes.object.isRequired, /** @firebase class for use firebase functions */\n    active: PropTypes.bool, /** @active - status firebase auth */\n    dispatch: PropTypes.func.isRequired, /** @dispatch - redux */\n    history: PropTypes.object.isRequired, /** @Router HTML5 history */\n    location: PropTypes.object.isRequired, /** @Router */\n    match: PropTypes.object.isRequired, /** @Router */\n    idUser: PropTypes.string, /** @Session user id from redux */\n    projects: PropTypes.arrayOf(PropTypes.object).isRequired /** @Projects array with user projects from redux */\n  }\n\n  cabinetStream = new Events();\n\n  state = {\n    workMode: 'default',\n  }\n\n  logOut = () => {\n    this.props.dispatch(middlewareLogOutUser(this.props.idUser));\n  }\n\n  deletItem = event => {\n    this.props.dispatch(middlewareDelete({...event, uid: this.props.firebase.getCurrentUser().uid}));\n  };\n\n  changeWorkMode = event => {\n    this.setState ({\n      ...this.state,\n      workMode: event.action,\n    });\n  };\n\n  render(){\n\n    if (this.props.active){\n      return (\n        <Fragment>\n          <Header cabinetStream = {this.cabinetStream} title = {title} idUser = {this.props.idUser} />\n          <div className = 'Cabinet'>\n            {(this.state.workMode === 'newProject') ?\n              <Modal\n                cabinetStream = {this.cabinetStream}\n                workMode = {this.state.workMode} \n              />\n            : null}\n              <ProjectsSection cabinetStream = {this.cabinetStream} />\n            </div>\n        </Fragment>\n      )\n    } else if (!this.props.firebase.getCurrentUser()) return <Redirect to = { '/'} />\n    else return <Loader path = '/img/loading.gif' type = 'Cabinet' />\n  }\n\n\n  componentDidMount = () => {\n    this.cabinetStream.on('EventDeleteItem', this.deletItem);\n    this.cabinetStream.on('EventChangeWorkMode', this.changeWorkMode);\n  };\n\n  componentWillUnmount = () => {\n    this.cabinetStream.off('EventDeleteItem', this.deletItem);\n    this.cabinetStream.off('EventChangeWorkMode', this.changeWorkMode);\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    idUser: state.cabinet.idUser,\n    projects: [...state.cabinet.projects],\n    active: state.cabinet.active\n  }\n};\n\nexport default connect(mapStateToProps)(withFirebase(Cabinet));\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport eventEmitter,{controllerStream} from '../../../EventEmitter';\r\nimport styled from 'styled-components';\r\n\r\n\r\nconst Background = styled.div`\r\n    position: relative;\r\n    width: ${props => props.width || '100%'};\r\n    height: ${props => props.height || '100%'};\r\n    background-color: ${props => props.backgroundColor};\r\n    ${props => props.backgroundImage ? `background-image: url(${props.backgroundImage});` : null}\r\n    background-size: cover;\r\n`;\r\n\r\nclass BackgroundComponent extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        id: PropTypes.string.isRequired,\r\n        targetSection: PropTypes.string.isRequired,\r\n        background: PropTypes.string,\r\n        backgroundImage: PropTypes.string,\r\n        width: PropTypes.string,\r\n        height: PropTypes.string,\r\n        sectionNumber: PropTypes.number,\r\n        mode: PropTypes.string.isRequired\r\n    };\r\n\r\n    state = {\r\n        id: this.props.id,\r\n        targetSection: this.props.targetSection,\r\n        backgroundColor: this.props.background || this.props.color,\r\n        backgroundImage: this.props.backgroundImage,\r\n        width: this.props.width,\r\n        height: this.props.height\r\n    };\r\n\r\n    boxComponent = null; // ref\r\n    boxComponentRef = node => this.boxComponent = node;\r\n\r\n    saveDataParent = () => {\r\n        let boxInform =  this.boxComponent.getBoundingClientRect();\r\n        controllerStream.emit(`EventSaveWidth${this.state.targetSection}`,{\r\n            countSection: this.props.countSection,\r\n            sectionNumber: this.props.sectionNumber,\r\n            size: {width: boxInform.width, height: boxInform.height}\r\n        });\r\n    };\r\n\r\n    openBgInstruments = event => {\r\n\r\n        const componentsPatternBackground = {\r\n            id: this.state.id,\r\n            targetSection: this.state.targetSection,\r\n            type: 'background',\r\n            backgroundColor: this.state.backgroundColor,\r\n            backgroundImage: this.state.backgroundImage,\r\n        }\r\n        eventEmitter.emit('EventInstrumentPanel',{\r\n            componentStats: componentsPatternBackground,\r\n            targetSection: this.state.targetSection,\r\n            type: 'background',\r\n            id: this.state.id,\r\n        });\r\n        event.stopPropagation();\r\n    };\r\n\r\n    changeColor = eventItem => {\r\n        this.setState({\r\n            ...this.state,\r\n            backgroundColor: eventItem.colorRGB\r\n        });\r\n    };\r\n\r\n    setBackgroundImage = event => {\r\n        const {urlFull} = event;\r\n        this.setState({\r\n            ...this.state,\r\n            backgroundImage: urlFull,\r\n        });\r\n    };\r\n\r\n    render(){\r\n            if (this.props.mode === 'dev'){\r\n        return (\r\n            <Background\r\n                key = {this.state.id}\r\n                ref  = {this.boxComponentRef}\r\n                onDoubleClick={this.openBgInstruments}\r\n                data-name = {this.state.targetSection}\r\n                backgroundColor = {this.state.backgroundColor}\r\n                backgroundImage = {this.state.backgroundImage}\r\n                width = {this.state.width}\r\n                height = {this.state.height}\r\n            >\r\n                {this.props.children}\r\n            </Background>\r\n        )\r\n    } else if (this.props.mode === 'production'){\r\n\r\n        return (\r\n            <Background\r\n                key = {this.state.id}\r\n                ref  = {this.boxComponentRef}\r\n                data-name = {this.state.targetSection}\r\n                backgroundColor = {this.state.backgroundColor}\r\n                backgroundImage = {this.state.backgroundImage}\r\n                width = {this.state.width}\r\n                height = {this.state.height}\r\n            >\r\n            {this.props.children}\r\n            </Background>\r\n        )\r\n    }\r\n\r\n    }\r\n\r\n    componentDidUpdate = () => {\r\n        this.saveDataParent();\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.saveDataParent();\r\n        controllerStream.on(`EventChangeColorBackground${this.state.id}`, this.changeColor);\r\n        controllerStream.on(`EventSetBackgroundImage${this.state.id}`, this.setBackgroundImage);\r\n    };\r\n\r\n    componentWillUnmount = () => {\r\n        controllerStream.off(`EventChangeColorBackground${this.state.id}`, this.changeColor);\r\n        controllerStream.off(`EventSetBackgroundImage${this.state.id}`, this.setBackgroundImage);\r\n    };\r\n};\r\n\r\n\r\n\r\nexport default BackgroundComponent;","import React, {Fragment} from 'react';\r\nimport eventEmitter from '../../../EventEmitter';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport BackgroundComponent from '../components/Background';\r\nimport Loader from '../../loading/Loader';\r\n\r\nimport './MainBackground.scss';\r\n\r\nclass MainBackground extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        countComponents: PropTypes.number.isRequired, /** @Number last project */\r\n        menuActive: PropTypes.bool, /** @Bool active menu or unactive */\r\n        id: PropTypes.string.isRequired, /** @id current project */\r\n    };\r\n\r\n    state = {\r\n        targetSection: this.props.id,\r\n        editRedy: false,\r\n        component: null,\r\n        children: null,\r\n    };\r\n\r\n    changeMode = () => {\r\n        if (!this.state.editStart || this.props.id !== this.props.editComponentName) {\r\n            this.setState({\r\n                ...this.state,\r\n                editStart: true\r\n            }, () =>\r\n            eventEmitter.emit('EventModeEdit', {\r\n                ...this.state,\r\n                editStart: true,\r\n                targetSection: this.state.targetSection,\r\n            }));\r\n        }\r\n    };\r\n\r\n    refSection = null;\r\n    refSectionFunc = node => node ? this.refSection = {data: node.getBoundingClientRect(), node: node} : node;\r\n\r\n    render() {\r\n\r\n        if (this.props.mode === 'dev' && this.state.component){\r\n            return (\r\n                <Fragment>\r\n                    <section\r\n                        key = {this.props.sectionNumber}\r\n                        className = {`element${this.props.sectionNumber}`} \r\n                        ref={this.refSectionFunc}\r\n                        data-class = 'editable' \r\n                        onClick = {this.changeMode}\r\n                    >\r\n                        <BackgroundComponent \r\n                            mode = {this.props.mode}\r\n                            sectionNumber = {this.props.sectionNumber}\r\n                            countSection = {this.props.countSection}\r\n                            {...this.state.component}\r\n                        >\r\n                            {this.state.children || null}\r\n                        </BackgroundComponent>\r\n                        {!this.state.editStart &&\r\n                            <div className = 'warningEdit'><p>Click for start edit</p></div>\r\n                        }\r\n                    </section>\r\n                </Fragment>\r\n            );\r\n        } else if (this.props.mode === 'production' && this.state.component){\r\n            return (\r\n                <Fragment>\r\n                    <section \r\n                        key = {this.props.sectionNumber}\r\n                        ref={this.refSectionFunc} \r\n                        data-class = 'production'\r\n                    >\r\n                        <BackgroundComponent\r\n                            key = {this.props.sectionNumber}\r\n                            mode = {this.props.mode}\r\n                            sectionNumber = {this.props.sectionNumber}\r\n                            {...this.state.component}\r\n                        >\r\n                        {this.state.children || null}\r\n                        </BackgroundComponent>\r\n                    </section>\r\n                </Fragment>\r\n            );\r\n        }\r\n        else return <Loader type = {`${this.props.mode} components`} />;\r\n    }\r\n\r\n\r\n    componentDidMount = () => {\r\n        if (!this.state.component){\r\n            let component = this.props.currentProjectsData.components.find(item =>\r\n                                            item.targetSection === this.props.id);\r\n            const children = this.props.componentJSX.filter(item => \r\n                item.targetSection === this.props.id && item.id !== component.id)\r\n                            .map(item => item.component);\r\n           this.setState({\r\n               ...this.state,\r\n               component: component,\r\n               children: children,\r\n           });\r\n        }\r\n    }\r\n\r\n    componentDidUpdate = (prevProps) => {\r\n        const needUpdate = this.props.countComponents !== prevProps.countComponents;\r\n        if (!this.state.component){\r\n            let component = this.props.currentProjectsData.components.find(item =>\r\n                                            item.targetSection === this.props.id);\r\n            const children = this.props.componentJSX.filter(item => item.targetSection === this.props.id)\r\n                            .map(item => item.component);\r\n           this.setState({\r\n               ...this.state,\r\n               component: component,\r\n               children: children,\r\n           });\r\n        }\r\n        if (needUpdate){\r\n            const children = this.props.componentJSX.filter(item => item.targetSection === this.props.id)\r\n            children && this.setState({...this.state,children: children.map(item => item.component) });\r\n        }\r\n    }\r\n}\r\nexport default MainBackground;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport MainBackground from './MainBackground/MainBackground';\r\n\r\n\r\nconst Section = props => {\r\n    if (props.mode === 'dev'){\r\n    const {currentProjectsData} = props.userData;\r\n    const section = currentProjectsData.sectionsProject;\r\n\r\n            return section.map((item,i) => {\r\n                return (\r\n                        <MainBackground\r\n                            key = {item}\r\n                            componentJSX = {props.componentJSX}\r\n                            currentProjectsData = {currentProjectsData}\r\n                            editComponentName = {props.editComponentName}\r\n                            countComponents = {props.componentJSX.length}\r\n                            menuActive = {props.menuActive}\r\n                            sizeParentBox = {props.sizeParentBox}\r\n                            id = {item}\r\n                            countSection = {currentProjectsData.sectionsProject.length}\r\n                            sectionNumber = {i}\r\n                            mode = {props.mode}\r\n                        />\r\n                );\r\n            });\r\n    } else if (props.mode === 'production'){\r\n       const {section} = props;\r\n       const {currentProjectsData} = props;\r\n        return section.map((item,i) => {\r\n            return (\r\n                    <MainBackground\r\n                        key = {item}\r\n                        componentJSX = {props.componentsProdJSX}\r\n                        currentProjectsData = {currentProjectsData}\r\n                        editComponentName = {props.editComponentName}\r\n                        countComponents = {props.componentsProdJSX.length}\r\n                        sizeParentBox = {props.sizeParentBox}\r\n                        id = {item}\r\n                        sectionNumber = {i}\r\n                        mode = {props.mode}\r\n                    />\r\n            );\r\n        });\r\n    }\r\n}\r\n\r\nSection.propTypes = {\r\n    componentJSX: PropTypes.array, /// array with jsx components\r\n    editComponentName: PropTypes.string, // name current edit component\r\n    menuActive: PropTypes.bool, // build menu\r\n    mode: PropTypes.string.isRequired, // curent mode\r\n    sizeParentBox: PropTypes.object, // data with size main component\r\n    userData: PropTypes.object // users data\r\n}\r\n\r\nexport default Section;","import React from 'react';\r\n\r\nconst builderHOC = data => Component => {\r\n        return <Component key = { `${data.type}${data.id}`} {...data} />\r\n};\r\n\r\nexport default builderHOC;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport eventEmitter,{controllerStream} from '../../../EventEmitter';\r\nimport styled from 'styled-components';\r\n\r\n\r\nconst InputComponent = styled.input.attrs(props => {\r\n    if (props.mode !== 'production')\r\n    return ({\r\n        style: {\r\n            zIndex: props.indexZ ? '9999' : null,\r\n            left: props.coordX ? props.coordX : '45%',\r\n            top:  props.coordY ? props.coordY : '0%',\r\n        }\r\n    })\r\n})`\r\n    width: ${props => props.size ? props.size.w + 'px' : null};\r\n    color: white;\r\n    height: ${props => props.size ? props.size.h + 'px' : null};\r\n    font-size: ${props => props.fontSize ? props.fontSize + 'px' : null};\r\n    position: absolute;\r\n    background-color: ${props => props.color || null};\r\n    border: ${props => `1px solid ${props.color}`};\r\n    border-radius: ${props => props.borderRadius ? props.borderRadius + 'px' : null};\r\n    white-space: normal;\r\n    font-weight: bold;\r\n    transition: .3s transform linear;\r\n\r\n    :active {\r\n        border: ${props =>`2px dotted ${props.color}`};\r\n        transform: scale(1.05);\r\n    }\r\n`;\r\n\r\nconst ProductionStyle = styled(InputComponent)`\r\n    left: ${props => props.coordX ? props.coordX : '45%'};\r\n    top:  ${props => props.coordY ? props.coordY : '0%'};\r\n`;\r\n\r\n\r\nclass Input extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        id: PropTypes.oneOfType([\r\n            PropTypes.string,\r\n            PropTypes.number\r\n        ]).isRequired,\r\n        targetSection: PropTypes.string.isRequired,\r\n        sizeParentBox: PropTypes.object.isRequired,\r\n    }\r\n\r\n    state = {\r\n        id: this.props.id,\r\n        istrumentsActive: false,\r\n        getSizeBool: false,\r\n        countSection: 0,\r\n        borderRadius: this.props.borderRadius,\r\n        sectionNumber: 0,\r\n        typeInput: this.props.typeInput || 'button',\r\n        sizeParentBox: this.props.sizeParentBox,\r\n        targetSection: this.props.targetSection,\r\n        size: this.props.size && this.props.size.w ? this.props.size : {w: '100', h:'50'},\r\n        fontSize: this.props.fontSize || 20,\r\n        color: this.props.color || null,\r\n        shiftCoords: null,\r\n        content: this.props.content || 'Input',\r\n        posInput: this.props.coords.x ? {x: this.props.coords.x, y: this.props.coords.y} : null,\r\n        startDragNdrop: false,\r\n    }\r\n\r\n    openInputInstruments = event => {\r\n\r\n        const componentsPatternImage = {\r\n            id: this.state.id,\r\n            targetSection: this.state.targetSection,\r\n            typeInput: this.state.typeInput,\r\n            type: 'input',\r\n            color: this.state.color,\r\n            borderRadius: this.state.borderRadius,\r\n            zIndex: null,\r\n            size: {...this.state.size},\r\n            fontSize: this.state.fontSize,\r\n            content: this.state.content,\r\n            coords: {...this.state.posInput}, // x, y\r\n        }\r\n\r\n        eventEmitter.emit(`EventInstrumentPanel`,{\r\n            componentStats: componentsPatternImage,\r\n            targetSection: this.state.targetSection,\r\n            id: this.state.id,\r\n            sizeTextValue: this.state.size\r\n        });\r\n        this.setState({...this.state, istrumentsActive: true});\r\n        event.stopPropagation();\r\n    };\r\n\r\n    saveCoords = event => {\r\n        if (event.nativeEvent.which !== 1) return false;\r\n        const element = this.refInput.getBoundingClientRect();\r\n\r\n        const cords = {\r\n            left: element.left,\r\n            top: element.top,\r\n            width: element.right - element.left,\r\n            height: element.bottom - element.top\r\n        }\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            shiftCoords: {x: event.clientX - cords.left, y: event.clientY - cords.top},\r\n            startDragNdrop: !this.state.startDragNdrop ? true : false\r\n        });\r\n\r\n        event.stopPropagation();\r\n    };\r\n\r\n    changeSize = eventSize => {\r\n        this.setState({...this.state, size: eventSize.size});\r\n    };\r\n\r\n    changeColor = colorRGB => {\r\n\r\n        if (typeof colorRGB === 'string')\r\n            this.setState({\r\n                ...this.state,\r\n                color: colorRGB\r\n            });\r\n    };\r\n\r\n    changeSizeText = eventSize => {\r\n        this.setState({...this.state, fontSize: eventSize.size});\r\n    };\r\n\r\n    setBorderRadius = eventItem => {\r\n        let radius = eventItem.borderRadius > 200 ? 200 : eventItem.borderRadius;\r\n        radius = eventItem.borderDown < 0 ? 0 : eventItem.borderRadius;\r\n            this.setState({\r\n                ...this.state,\r\n                borderRadius: radius\r\n            });\r\n    };\r\n\r\n    changeContent = eventItem => {\r\n        let booldContent = eventItem.content || eventItem.content === '';\r\n        if (booldContent)\r\n            this.setState({\r\n                ...this.state,\r\n                content: eventItem.content\r\n            });\r\n    }\r\n\r\n\r\n\r\n    checkPivotPosition = (coordX, coordY) => {\r\n\r\n        const element = this.refInput.getBoundingClientRect();\r\n        const borderTopLeft = 0;\r\n        const borderDown = 800 - element.height;\r\n        const borderRight = this.props.sizeParentBox.width - element.width;\r\n\r\n        if (coordY < borderTopLeft) coordY = borderTopLeft;\r\n        if (coordY > borderDown) coordY = borderDown;\r\n        if (coordX < borderTopLeft) coordX = borderTopLeft;\r\n        if (coordX > borderRight) coordX = borderRight;\r\n\r\n        return {x: coordX, y: coordY};\r\n    }\r\n\r\n    delta = (trans,transT) => {\r\n        return {\r\n            x: 0,\r\n            y: 0,\r\n        }\r\n    }\r\n    move = (x,y) => this.setState({...this.state, posInput: {x: x, y: y}});\r\n\r\n    moveInput = event => {\r\n\r\n        if (this.state.startDragNdrop && this.state.istrumentsActive){\r\n            let num = this.state.sectionNumber;\r\n            if (this.state.sectionNumber === 1 && this.state.countSection-1 === this.state.sectionNumber)  \r\n                num = this.state.sectionNumber + 1;\r\n            let xItem = event.clientX - (this.props.sizeParentBox.left  * num);\r\n            let yItem = event.clientY - (this.props.sizeParentBox.top * num);\r\n\r\n            let coordX = xItem - this.state.shiftCoords.x + this.delta().x;\r\n            let coordY = yItem - this.state.shiftCoords.y + this.delta().y;\r\n\r\n            let coords = this.checkPivotPosition(coordX,coordY);\r\n\r\n            let convertToPercentX = coords.x * 100 / this.state.sizeParentBox.width;\r\n            let convertToPercentY = coords.y * 100 / this.state.sizeParentBox.height;\r\n\r\n            this.move(convertToPercentX.toFixed(2) + '%',\r\n                      convertToPercentY.toFixed(2) + '%');\r\n    }\r\n        event.stopPropagation();\r\n    };\r\n\r\n    stopDragNdrop = event => {\r\n        if (this.state.startDragNdrop) {\r\n            this.setState({...this.state, startDragNdrop: false})\r\n            controllerStream.emit(`EventUpdatePosition${this.state.id}`, this.state.posInput);\r\n        }\r\n        event.stopPropagation();\r\n    };\r\n    //currentProjectsData.sectionsProject.length\r\n\r\n    saveSize = event => {\r\n        const {size} = event;\r\n        if (!this.state.getSizeBool){\r\n        this.setState({\r\n            ...this.state,\r\n            getSizeBool: true,\r\n            countSection: event.countSection,\r\n            sectionNumber: event.sectionNumber,\r\n            sizeParentBox: {width: size.width, height: size.height}});\r\n        } else controllerStream.off(`EventSaveWidth${this.state.targetSection}`,this.saveSize);\r\n    }\r\n\r\n    setWidth = eventItem => {\r\n        const {width} = eventItem;\r\n        this.setState({...this.state, \r\n            size: {\r\n                ...this.state.size,\r\n                w: width,\r\n            }\r\n        });\r\n    }\r\n\r\n    setType = eventItem => {\r\n        this.setState({\r\n            ...this.state, \r\n            typeInput: eventItem\r\n        });\r\n    }\r\n\r\n    setHeight = eventItem => {\r\n        const {height} = eventItem;\r\n        this.setState({...this.state, \r\n            size: {\r\n                ...this.state.size,\r\n                h: height,\r\n            }\r\n        });\r\n    }\r\n\r\n    refInput = null;\r\n    refInputComponent = node => this.refInput = node;\r\n\r\n    render(){\r\n\r\n        if (this.props.mode === 'dev'){\r\n            return (\r\n                <InputComponent\r\n                    type = {this.state.typeInput}\r\n                    value = {this.state.content}\r\n                    ref = {this.refInputComponent}\r\n                    size = {this.state.size}\r\n                    color = {this.state.color}\r\n                    borderRadius = {this.state.borderRadius}\r\n                    fontSize = {this.state.fontSize}\r\n                    onClick = {this.openInputInstruments}\r\n                    onMouseDown = {this.saveCoords}\r\n                    onMouseMove= {this.moveInput}\r\n                    onMouseLeave = {this.stopDragNdrop}\r\n                    onMouseUp = {this.stopDragNdrop}\r\n                    onDragStart = {this.stop}\r\n                    coordX = {this.state.posInput ? this.state.posInput.x : null}\r\n                    coordY = {this.state.posInput ? this.state.posInput.y : null}\r\n                    indexZ = {this.state.startDragNdrop}\r\n                    data-imagecomponentwrapper\r\n                />\r\n            )\r\n        } else if (this.props.mode === 'production'){\r\n\r\n            return (\r\n                <ProductionStyle\r\n                    type = {this.state.typeInput}\r\n                    value = {this.state.content}\r\n                    ref = {this.refInputComponent}\r\n                    size = {this.state.size}\r\n                    color = {this.state.color}\r\n                    fontSize = {this.state.fontSize}\r\n                    borderRadius = {this.state.borderRadius}\r\n                    coordX = {this.state.posInput ? this.state.posInput.x : null}\r\n                    coordY = {this.state.posInput ? this.state.posInput.y : null}\r\n                    indexZ = {this.state.startDragNdrop}\r\n                    mode = {this.props.mode}\r\n                />\r\n            )\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        controllerStream.on(`EventSaveWidth${this.state.targetSection}`, this.saveSize);\r\n        controllerStream.on(`EventSetBorderRadius${this.state.id}`, this.setBorderRadius);\r\n        controllerStream.on(`EventChangecolor${this.state.id}`, this.changeColor);\r\n        controllerStream.on(`EventChangeSize${this.state.id}`, this.changeSize);\r\n        controllerStream.on(`EventChangeSizeText${this.state.id}`, this.changeSizeText);\r\n        controllerStream.on(`EventChangeContentText${this.state.id}`, this.changeContent);\r\n        controllerStream.on(`EventSetWidth${this.state.id}`, this.setWidth);\r\n        controllerStream.on(`EventSetType${this.state.id}`, this.setType);\r\n        controllerStream.on(`EventSetHeight${this.state.id}`, this.setHeight);\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        controllerStream.off(`EventSaveWidth${this.state.targetSection}`,this.saveSize);\r\n        controllerStream.off(`EventSetBorderRadius${this.state.id}`, this.setBorderRadius);\r\n        controllerStream.off(`EventChangeSize${this.state.id}`, this.changeSize);\r\n        controllerStream.off(`EventChangeSizeText${this.state.id}`, this.changeSizeText);\r\n        controllerStream.off(`EventChangeContentText${this.state.id}`, this.changeContent);\r\n        controllerStream.off(`EventChangecolor${this.state.id}`, this.changeColor);\r\n        controllerStream.off(`EventSetWidth${this.state.id}`, this.setWidth);\r\n        controllerStream.off(`EventSetType${this.state.id}`, this.setType);\r\n        controllerStream.off(`EventSetHeight${this.state.id}`, this.setHeight);\r\n    }\r\n}\r\n\r\nexport default Input;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport eventEmitter,{controllerStream} from '../../../EventEmitter';\r\nimport styled from 'styled-components';\r\n\r\nconst WrapperMedia = styled.div.attrs(props => {\r\n    if (props.mode !== 'production')\r\n    return ({\r\n        style: {\r\n            zIndex: props.indexZ ? '9999' : null,\r\n            left: props.coordX ? props.coordX : '45%',\r\n            top:  props.coordY ? props.coordY : '0%',\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            padding: props.mode === 'dev' ? '40px' : null\r\n        }\r\n    })\r\n})`\r\n    width: ${props => props.size.w ? props.size.w + '%' : '30%'};\r\n    height: ${props => props.size.h ? props.size.h + '%' : '50%'};\r\n    position: absolute;\r\n    background: ${props => props.mode === 'dev' ? `url(/img/media.svg)` : null};\r\n    background-size: cover;\r\n    border: ${props => props.mode === 'dev' ? `1px solid red` : null};\r\n    padding: 10px;\r\n`;\r\nconst Media = styled.iframe`\r\n    width: 100%;\r\n    height: 100%;\r\n    z-index: ${props => props.zIndex ? '0' : '-1'};\r\n`;\r\n\r\nconst ProductionStyle = styled(WrapperMedia)`\r\n    left: ${props => props.coordX ? props.coordX : '45%'};\r\n    top:  ${props => props.coordY ? props.coordY : '0%'};\r\n`;\r\n\r\nclass MediaComponent extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        id: PropTypes.oneOfType([\r\n            PropTypes.string,\r\n            PropTypes.number\r\n        ]).isRequired,\r\n        targetSection: PropTypes.string.isRequired,\r\n        sizeParentBox: PropTypes.object.isRequired,\r\n        content: PropTypes.string,\r\n    }\r\n\r\n    state = {\r\n        targetSection: this.props.targetSection,\r\n        id : this.props.id,\r\n        sizeParentBox: this.props.sizeParentBox,\r\n        shiftCoords: null,\r\n        countSection: 0,\r\n        size: this.props.size ? this.props.size : {w: null, h: null},\r\n        posMedia: this.props.coords.x ? {x: this.props.coords.x, y: this.props.coords.y} : null,\r\n        startDragNdrop: false,\r\n        istrumentsActive: false,\r\n        drawContent: false,\r\n        sectionNumber: this.props.sectionNumber,\r\n        content: this.props.content ? this.props.content : null\r\n    }\r\n\r\n    openMediaInstruments = event => {\r\n\r\n        const componentsPatternMedia = {\r\n            id: this.state.id,\r\n            size: this.state.size,\r\n            targetSection: this.state.targetSection,\r\n            type: 'media',\r\n            zIndex: null,\r\n            content: this.state.content,\r\n            coords: {...this.state.posMedia}, // x, y\r\n        }\r\n\r\n        eventEmitter.emit('EventInstrumentPanel',{\r\n            componentStats: componentsPatternMedia,\r\n            targetSection: this.state.targetSection,\r\n            id: this.state.id,\r\n            size: this.state.size,\r\n        });\r\n        this.setState({...this.state, istrumentsActive: true});\r\n        event.stopPropagation();\r\n    }\r\n\r\n    saveCoords = event => {\r\n        if (event.nativeEvent.which !== 1) return false;\r\n        const element = this.refMedia.getBoundingClientRect();\r\n        const cords = {\r\n            left: element.left,\r\n            top: element.top,\r\n            width: element.right - element.left,\r\n            height: element.bottom - element.top\r\n        }\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            shiftCoords: {x: event.clientX - cords.left, y: event.clientY - cords.top},\r\n            startDragNdrop: !this.state.startDragNdrop ? true : false\r\n        });\r\n\r\n        event.stopPropagation();\r\n    };\r\n\r\n    setWidth = eventItem => {\r\n        const {width} = eventItem;\r\n        this.setState({...this.state, \r\n            size: {\r\n                ...this.state.size,\r\n                w: width,\r\n            }\r\n        });\r\n    }\r\n\r\n    setHeight = eventItem => {\r\n        const {height} = eventItem;\r\n        this.setState({...this.state, \r\n            size: {\r\n                ...this.state.size,\r\n                h: height,\r\n            }\r\n        });\r\n    }\r\n\r\n    checkPivotPosition = (coordX, coordY) => {\r\n\r\n        const element = this.refMedia.getBoundingClientRect();\r\n        const borderTopLeft = 0;\r\n        const borderDown = 800 - element.height;\r\n        const borderRight = this.props.sizeParentBox.width - element.width;\r\n\r\n        if (coordY < borderTopLeft) coordY = borderTopLeft;\r\n        if (coordY > borderDown) coordY = borderDown;\r\n        if (coordX < borderTopLeft) coordX = borderTopLeft;\r\n        if (coordX > borderRight) coordX = borderRight;\r\n\r\n        return {x: coordX, y: coordY};\r\n    }\r\n\r\n    delta = (trans,transT) => {\r\n        return {\r\n            x: 0,\r\n            y: 0,\r\n        }\r\n    }\r\n    move = (x,y) => this.setState({...this.state, posMedia: {x: x, y: y}});\r\n\r\n    moveMedia = event => {\r\n\r\n        if (this.state.startDragNdrop && this.state.istrumentsActive){\r\n\r\n            let xItem = event.clientX - (this.props.sizeParentBox.left  * this.state.sectionNumber);\r\n            let yItem = event.clientY - (this.props.sizeParentBox.top * this.state.sectionNumber);\r\n\r\n            let coordX = xItem - this.state.shiftCoords.x + this.delta().x;\r\n            let coordY = yItem - this.state.shiftCoords.y + this.delta().y;\r\n\r\n            let coords = this.checkPivotPosition(coordX,coordY);\r\n\r\n            let convertToPercentX = coords.x * 100 / this.state.sizeParentBox.width;\r\n            let convertToPercentY = coords.y * 100 / this.state.sizeParentBox.height;\r\n\r\n            this.move(convertToPercentX.toFixed(2) + '%',\r\n                      convertToPercentY.toFixed(2) + '%');\r\n    }\r\n        event.stopPropagation();\r\n    };\r\n\r\n    stopDragNdrop = event => {\r\n        if (this.state.startDragNdrop) {\r\n            this.setState({...this.state, startDragNdrop: false})\r\n            controllerStream.emit(`EventUpdatePosition${this.state.id}`, this.state.posMedia);\r\n        }\r\n        event.stopPropagation();\r\n    };\r\n\r\n    setContent = event => {\r\n        const {iframe} = event;\r\n        this.setState({...this.state, content: iframe});\r\n    };\r\n\r\n\r\n    saveSize = event => {\r\n        const {size} = event;\r\n        if (!this.state.getSizeBool){\r\n        this.setState({\r\n            ...this.state,\r\n            getSizeBool: true,\r\n            countSection: event.countSection,\r\n            sectionNumber: event.sectionNumber + 1,\r\n            sizeParentBox: {width: size.width, height: size.height}});\r\n        } else controllerStream.off(`EventSaveWidth${this.state.targetSection}`,this.saveSize);\r\n    }\r\n\r\n    refMedia = null;\r\n    refMediaComponent = node => this.refMedia = node;\r\n\r\n    render(){\r\n        const url = 'https://www.youtube.com/embed/';\r\n\r\n        if (this.props.mode === 'dev'){\r\n            return (\r\n                <WrapperMedia\r\n                    ref = {this.refMediaComponent}\r\n                    onClick={this.openMediaInstruments}\r\n                    onMouseDown = {this.saveCoords}\r\n                    onMouseMove= {this.moveMedia}\r\n                    onMouseLeave = {this.stopDragNdrop}\r\n                    onMouseUp = {this.stopDragNdrop}\r\n                    onDragStart = {this.stop}\r\n                    mode = {this.props.mode}\r\n                    indexZ = {this.state.startDragNdrop}\r\n                    coordX = {this.state.posMedia ? this.state.posMedia.x : null}\r\n                    coordY = {this.state.posMedia ? this.state.posMedia.y : null}\r\n                    size = {this.state.size}\r\n                >\r\n                {!this.state.startDragNdrop ? \r\n                    <Media\r\n                        src= {this.state.content ? url + this.state.content : null }\r\n                        drawContent = {this.state.drawContent}\r\n                        width = {this.state.width} \r\n                        height = {this.state.height}\r\n                        zIndex = {this.state.content}\r\n                        allowfullscreen\r\n                    ></Media> : null\r\n                }\r\n                </WrapperMedia>\r\n            )\r\n        } else if (this.props.mode === 'production'){\r\n            return (\r\n                <ProductionStyle\r\n                    ref = {this.refMediaComponent}\r\n                    indexZ = {this.state.startDragNdrop}\r\n                    size = {this.state.size}\r\n                    coordX = {this.state.posMedia ? this.state.posMedia.x : null}\r\n                    coordY = {this.state.posMedia ? this.state.posMedia.y : null}\r\n                    mode = {this.props.mode}\r\n                >\r\n                {!this.state.startDragNdrop ? \r\n                    <Media\r\n                        src= {this.state.content ? url + this.state.content : null }\r\n                        drawContent = {this.state.drawContent}\r\n                        width = {this.state.width} \r\n                        height = {this.state.height}\r\n                        zIndex = {this.state.content}\r\n                        mode = {this.props.mode}\r\n                        allowfullscreen\r\n                    ></Media> : null\r\n                }\r\n                </ProductionStyle>\r\n            )\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        controllerStream.on(`EventSetContentMedia${this.state.id}`, this.setContent);\r\n        controllerStream.on(`EventSaveWidth${this.state.targetSection}`, this.saveSize);\r\n        controllerStream.on(`EventSetWidth${this.state.id}`, this.setWidth);\r\n        controllerStream.on(`EventSetHeight${this.state.id}`, this.setHeight); \r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        controllerStream.off(`EventSaveWidth${this.state.targetSection}`,this.saveSize);\r\n        controllerStream.off(`EventSetContentMedia${this.state.id}`, this.setContent);\r\n        controllerStream.off(`EventSetWidth${this.state.id}`, this.setWidth);\r\n        controllerStream.off(`EventSetHeight${this.state.id}`, this.setHeight); \r\n    }\r\n}\r\n\r\nexport default MediaComponent;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport eventEmitter,{controllerStream} from '../../../EventEmitter';\r\nimport styled from 'styled-components';\r\n\r\n\r\nconst WrapperImg = styled.div.attrs(props => {\r\n    if (props.mode !== 'production')\r\n    return ({\r\n        style: {\r\n            zIndex: props.indexZ ? '9999' : null,\r\n            left: props.coordX ? props.coordX : '45%',\r\n            top:  props.coordY ? props.coordY : '0',\r\n        }\r\n    })\r\n})`\r\n    width: ${props => props.size ? props.size.w + '%' : '30%'};\r\n    height: ${props => props.size ? props.size.h + '%' : '50%'};\r\n    position: absolute;\r\n`;\r\n\r\nconst ImageStyle = styled.img`\r\n    width: 100%;\r\n    height: 100%;\r\n    opacity: ${props => props.opacity};\r\n    border-radius: ${props => props.borderRadius}px;\r\n    pointer-events: none;\r\n    position: absolute;\r\n`;\r\n\r\nconst ProductionStyle = styled(WrapperImg)`\r\n    left: ${props => props.coordX ? props.coordX : '50%'};\r\n    top:  ${props => props.coordY};\r\n`;\r\n\r\nclass Image extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        id: PropTypes.oneOfType([\r\n            PropTypes.string,\r\n            PropTypes.number\r\n        ]).isRequired,\r\n        targetSection: PropTypes.string.isRequired,\r\n        sizeParentBox: PropTypes.object.isRequired,\r\n    }\r\n\r\n    state = {\r\n        id: this.props.id,\r\n        istrumentsActive: false,\r\n        getSizeBool: false,\r\n        countSection: 0,\r\n        opacity: this.props.opacity || 1,\r\n        sectionNumber: 0,\r\n        borderRadius: this.props.borderRadius || 0,\r\n        sizeParentBox: this.props.sizeParentBox,\r\n        targetSection: this.props.targetSection,\r\n        path: this.props.image ? this.props.image : this.props.path,\r\n        size: this.props.size ? this.props.size : {w: 30, h: 50},\r\n        shiftCoords: null,\r\n        posImage: this.props.coords.x ? {x: this.props.coords.x, y: this.props.coords.y} : null,\r\n        startDragNdrop: false,\r\n    }\r\n\r\n    openImageInstruments = event => {\r\n\r\n        const componentsPatternImage = {\r\n            id: this.state.id,\r\n            targetSection: this.state.targetSection,\r\n            size: {...this.state.size},\r\n            type: 'image',\r\n            borderRadius: this.state.borderRadius,\r\n            opacity: this.state.opacity,\r\n            zIndex: null,\r\n            image: this.state.path,\r\n            coords: {...this.state.posImage}, // x, y\r\n        }\r\n\r\n        eventEmitter.emit(`EventInstrumentPanel`,{\r\n            componentStats: componentsPatternImage,\r\n            targetSection: this.state.targetSection,\r\n            id: this.state.id,\r\n            sizeTextValue: this.state.size\r\n        });\r\n        this.setState({...this.state, istrumentsActive: true});\r\n        event.stopPropagation();\r\n    };\r\n\r\n    saveCoords = event => {\r\n        if (event.nativeEvent.which !== 1) return false;\r\n        const element = this.refImage.getBoundingClientRect();\r\n\r\n        const cords = {\r\n            left: element.left,\r\n            top: element.top,\r\n            width: element.right - element.left,\r\n            height: element.bottom - element.top\r\n        }\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            shiftCoords: {x: event.clientX - cords.left, y: event.clientY - cords.top},\r\n            startDragNdrop: !this.state.startDragNdrop ? true : false\r\n        });\r\n\r\n        event.stopPropagation();\r\n    };\r\n\r\n    checkPivotPosition = (coordX, coordY) => {\r\n\r\n        const element = this.refImage.getBoundingClientRect();\r\n        const borderTopLeft = 0;\r\n        const borderDown = 800 - element.height;\r\n        const borderRight = this.props.sizeParentBox.width - element.width;\r\n\r\n        if (coordY < borderTopLeft) coordY = borderTopLeft;\r\n        if (coordY > borderDown) coordY = borderDown;\r\n        if (coordX < borderTopLeft) coordX = borderTopLeft;\r\n        if (coordX > borderRight) coordX = borderRight;\r\n\r\n        return {x: coordX, y: coordY};\r\n    }\r\n\r\n    delta = (trans,transT) => {\r\n        return {\r\n            x: 0,\r\n            y: 0,\r\n        }\r\n    }\r\n    move = (x,y) => this.setState({...this.state, posImage: {x: x, y: y}});\r\n\r\n    moveText = event => {\r\n\r\n        if (this.state.startDragNdrop && this.state.istrumentsActive){\r\n\r\n            let xItem = event.clientX - (this.props.sizeParentBox.left  * this.state.sectionNumber);\r\n            let yItem = event.clientY - (this.props.sizeParentBox.top * this.state.sectionNumber);\r\n\r\n            let coordX = xItem - this.state.shiftCoords.x + this.delta().x;\r\n            let coordY = yItem - this.state.shiftCoords.y + this.delta().y;\r\n\r\n            let coords = this.checkPivotPosition(coordX,coordY);\r\n\r\n            let convertToPercentX = coords.x * 100 / this.state.sizeParentBox.width;\r\n            let convertToPercentY = coords.y * 100 / this.state.sizeParentBox.height;\r\n\r\n            this.move(convertToPercentX.toFixed(2) + '%',\r\n                      convertToPercentY.toFixed(2) + '%');\r\n    }\r\n        event.stopPropagation();\r\n    };\r\n\r\n    stopDragNdrop = event => {\r\n        if (this.state.startDragNdrop) {\r\n            this.setState({...this.state, startDragNdrop: false})\r\n            controllerStream.emit(`EventUpdatePosition${this.state.id}`, this.state.posImage);\r\n        }\r\n        event.stopPropagation();\r\n    };\r\n\r\n    setCurrentImage = event => {\r\n        const {urlFull} = event;\r\n        this.setState({...this.state, path: urlFull});\r\n    };\r\n\r\n    setWidth = eventItem => {\r\n        const {width} = eventItem;\r\n        this.setState({...this.state, \r\n            size: {\r\n                ...this.state.size,\r\n                w: width,\r\n            }\r\n        });\r\n    }\r\n\r\n    setHeight = eventItem => {\r\n        const {height} = eventItem;\r\n        this.setState({...this.state, \r\n            size: {\r\n                ...this.state.size,\r\n                h: height,\r\n            }\r\n        });\r\n    }\r\n\r\n    saveSize = event => {\r\n        const {size} = event;\r\n        if (!this.state.getSizeBool){\r\n        this.setState({\r\n            ...this.state,\r\n            getSizeBool: true,\r\n            countSection: event.countSection,\r\n            sectionNumber: event.sectionNumber,\r\n            sizeParentBox: {width: size.width, height: size.height}});\r\n        } else controllerStream.off(`EventSaveWidth${this.state.targetSection}`,this.saveSize);\r\n    }\r\n\r\n    changeSizeImage = eventItem => {\r\n        this.setState({...this.state, size: eventItem.size});\r\n    };\r\n\r\n    setBorderRadius = eventItem => {\r\n\r\n    let radius = eventItem.borderRadius > 200 ? 200 : eventItem.borderRadius;\r\n    radius = eventItem.borderDown < 0 ? 0 : eventItem.borderRadius;\r\n        this.setState({\r\n            ...this.state,\r\n            borderRadius: radius\r\n        });\r\n    };\r\n\r\n    setOpacity = eventItem => {\r\n        let opacity = eventItem.opacity > 1 ? 1 : eventItem.opacity;\r\n        opacity = eventItem.opacity < 0 ? 0 : eventItem.opacity;\r\n            this.setState({\r\n                ...this.state,\r\n                opacity: opacity\r\n            });\r\n    }\r\n \r\n    refImage = null;\r\n    refImageComponent = node => this.refImage = node;\r\n\r\n    render(){\r\n\r\n        if (this.props.mode === 'dev'){\r\n            return (\r\n                <WrapperImg\r\n                ref = {this.refImageComponent}\r\n                size = {this.state.size}\r\n                onClick = {this.openImageInstruments}\r\n                onMouseDown = {this.saveCoords}\r\n                onMouseMove= {this.moveText}\r\n                onMouseLeave = {this.stopDragNdrop}\r\n                onMouseUp = {this.stopDragNdrop}\r\n                onDragStart = {this.stop}\r\n                coordX = {this.state.posImage ? this.state.posImage.x : null}\r\n                coordY = {this.state.posImage ? this.state.posImage.y : null}\r\n                indexZ = {this.state.startDragNdrop}\r\n                data-imagecomponentwrapper\r\n                >\r\n                    <ImageStyle\r\n                        data-imagecomponent\r\n                        borderRadius = {this.state.borderRadius}\r\n                        opacity = {this.state.opacity}\r\n                        src = {this.state.path}\r\n                        alt = 'img'\r\n                    />\r\n                </WrapperImg>\r\n            )\r\n        } else if (this.props.mode === 'production'){\r\n            return (\r\n                <ProductionStyle\r\n                ref = {this.refImageComponent}\r\n                size = {this.state.size}\r\n                mode = {this.props.mode}\r\n                coordX = {this.state.posImage ? this.state.posImage.x : null}\r\n                coordY = {this.state.posImage ? this.state.posImage.y : null}\r\n                indexZ = {this.state.startDragNdrop}\r\n                >\r\n                    <ImageStyle\r\n                        borderRadius = {this.state.borderRadius}\r\n                        opacity = {this.state.opacity}\r\n                        crossOrigin = \"anonymous\"\r\n                        src = {this.state.path}\r\n                        alt = 'img'\r\n                    />\r\n                </ProductionStyle>\r\n            )\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        controllerStream.on(`EventSetCurrentImage${this.state.id}`, this.setCurrentImage);\r\n        controllerStream.on(`EventChangeSize${this.state.id}`, this.changeSizeImage);\r\n        controllerStream.on(`EventSetOpacity${this.state.id}`, this.setOpacity);\r\n        controllerStream.on(`EventSetBorderRadius${this.state.id}`,this.setBorderRadius);\r\n        controllerStream.on(`EventSetWidth${this.state.id}`, this.setWidth);\r\n        controllerStream.on(`EventSetHeight${this.state.id}`, this.setHeight); \r\n        controllerStream.on(`EventSaveWidth${this.state.targetSection}`, this.saveSize);\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n       \r\n        controllerStream.off(`EventChangeSize${this.state.id}`, this.changeSizeImage);\r\n        controllerStream.off(`EventSetOpacity${this.state.id}`, this.setOpacity);\r\n        controllerStream.off(`EventSetBorderRadius${this.state.id}`,this.setBorderRadius);\r\n        controllerStream.off(`EventSetCurrentImage${this.state.id}`, this.setCurrentImage);\r\n        controllerStream.off(`EventSetWidth${this.state.id}`, this.setWidth);\r\n        controllerStream.off(`EventSetHeight${this.state.id}`, this.setHeight); \r\n        controllerStream.off(`EventSaveWidth${this.state.targetSection}`,this.saveSize);\r\n    }\r\n}\r\n\r\nexport default Image;","\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport eventEmitter,{controllerStream} from '../../../EventEmitter';\r\nimport styled from 'styled-components';\r\nimport './components.scss';\r\n\r\n\r\n\r\nconst WrapperText = styled.div.attrs(props => {\r\n    if (props.mode !== 'production')\r\n    return ({\r\n        style: {\r\n            zIndex: props.indexZ ? '9999' : null,\r\n            left: props.coordX ? props.coordX : '50%',\r\n            top:  props.coordY,\r\n        }\r\n    })\r\n})`\r\n    position: absolute;\r\n    font-size: ${props => props.size ? props.size : '120px'};\r\n    color: ${props => props.textColor};\r\n    text-align: center;\r\n    margin: 0;\r\n    word-break: break-all;\r\n`;\r\n\r\nconst TextStyle = styled.p`\r\n    width: 100%;\r\n    height: 100%;\r\n    font-family: ${props => props.font};\r\n    text-align: center;\r\n    margin: 0;\r\n    user-select: none;\r\n`;\r\n\r\n\r\nconst ProductionStyle = styled(WrapperText)`\r\n    left: ${props => props.coordX ? props.coordX : '50%'};\r\n    top:  ${props => props.coordY};\r\n\r\n\r\n`;\r\n\r\n    // @media ${`screen and (max-width: 500px)`} {\r\n    //     font-size: 50px;\r\n    //   }\r\n\r\nclass TextComponent extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        id: PropTypes.oneOfType([\r\n            PropTypes.string,\r\n            PropTypes.number\r\n        ]).isRequired,\r\n        targetSection: PropTypes.string.isRequired,\r\n        sizeParentBox: PropTypes.object.isRequired,\r\n        mode: PropTypes.string.isRequired,\r\n    }\r\n\r\n    state = {\r\n        id: this.props.id,\r\n        istrumentsActive: false,\r\n        isHaveSize: false,\r\n        parent: this.props.sizeParentBox,\r\n        targetSection: this.props.targetSection,\r\n        colorText: this.props.color,\r\n        sizeText: this.props.fontSize || this.props.size,\r\n        shiftCoords: null,\r\n        position: this.props.coords,\r\n        font: this.props.font ? this.props.font : 'Arial',\r\n        startDragNdrop: false,\r\n        contentText: this.props.content ? this.props.content : null,\r\n        countSection: 0,\r\n        sectionNumber: 0,\r\n        getSizeBool: false\r\n    }\r\n\r\n    openTitleInstruments = event => {\r\n\r\n         const componentsPatternText = {\r\n            id: this.state.id,\r\n            targetSection: this.state.targetSection,\r\n            type: 'text',\r\n            font: this.state.font,\r\n            color: this.state.colorText,\r\n            fontSize: this.state.sizeText || 120,\r\n            content: this.state.contentText,\r\n            coords: {...this.state.posText}, // x, y\r\n        };\r\n        eventEmitter.emit(`EventInstrumentPanel`,{\r\n                type: 'text',\r\n                targetSection: this.state.targetSection,\r\n                id: this.state.id,\r\n                componentStats: componentsPatternText,\r\n                sizeTextValue: this.state.sizeText\r\n        });\r\n        this.setState({...this.state, istrumentsActive: true});\r\n        event.stopPropagation();\r\n    }\r\n\r\n    changeColorText = colorRGB => {\r\n        if (typeof colorRGB === 'string')\r\n            this.setState({\r\n                ...this.state,\r\n                colorText: colorRGB\r\n            });\r\n    };\r\n\r\n    changeSizeText = eventSize => {\r\n        this.setState({...this.state, sizeText: eventSize.size});\r\n    };\r\n\r\n    saveSize = event => {\r\n        const {size} = event;\r\n        if (!this.state.getSizeBool){\r\n        this.setState({\r\n            ...this.state,\r\n            getSizeBool: true,\r\n            countSection: event.countSection,\r\n            sectionNumber: event.sectionNumber,\r\n            parent: {width: size.width, height: size.height}});\r\n        } else controllerStream.off(`EventSaveWidth${this.state.targetSection}`,this.saveSize);\r\n    }\r\n\r\n    changeContentText = eventContent => {\r\n        let booldContent = eventContent.content || eventContent.content === '';\r\n        if (booldContent)\r\n            this.setState({\r\n                ...this.state,\r\n                contentText: eventContent.content\r\n            });\r\n    };\r\n\r\n    saveCoords = event => {\r\n        if (event.nativeEvent.which !== 1) return false;\r\n        const element = this.refText.getBoundingClientRect();\r\n\r\n        const cords = {\r\n            left: element.left,\r\n            top: element.top,\r\n            width: element.right - element.left,\r\n            height: element.bottom - element.top\r\n        }\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            shiftCoords: {x: event.clientX - cords.left, y: event.clientY - cords.top},\r\n            startDragNdrop: !this.state.startDragNdrop ? true : false\r\n        });\r\n\r\n        event.stopPropagation();\r\n    };\r\n\r\n    setFont = eventItem => {\r\n        this.setState({\r\n            ...this.state,\r\n            font: eventItem.font\r\n        });\r\n    };\r\n\r\n    checkPivotPosition = (coordX, coordY) => {\r\n\r\n        const element = this.refText.getBoundingClientRect();\r\n        const borderTopLeft = 0;\r\n        const borderDown = 800 - element.height;\r\n        const borderRight = this.props.sizeParentBox.width - element.width;\r\n\r\n        if (coordY < borderTopLeft) coordY = borderTopLeft;\r\n        if (coordY > borderDown) coordY = borderDown;\r\n        if (coordX < borderTopLeft) coordX = borderTopLeft;\r\n        if (coordX > borderRight) coordX = borderRight;\r\n\r\n        return {x: coordX, y: coordY};\r\n    }\r\n\r\n    delta = (trans,transT) => {\r\n        return {\r\n            x: 0,\r\n            y: 0,\r\n        }\r\n    }\r\n    move = (x,y) => this.setState({...this.state, position: {x: x, y: y}});\r\n\r\n    moveText = event => {\r\n \r\n        if (this.state.startDragNdrop && this.state.istrumentsActive){\r\n\r\n            let sectionNum = this.state.sectionNumber === 0 ? 1 : this.state.sectionNumber;\r\n            let xItem = event.clientX - (this.props.sizeParentBox.left  * sectionNum);\r\n            let yItem = event.clientY - (this.props.sizeParentBox.top * sectionNum);\r\n\r\n            let coordX = xItem - this.state.shiftCoords.x + this.delta().x;\r\n            let coordY = yItem - this.state.shiftCoords.y + this.delta().y;\r\n\r\n            let coords = this.checkPivotPosition(coordX,coordY);\r\n\r\n            let convertToPercentX = coords.x * 100 / this.state.parent.width;\r\n            let convertToPercentY = coords.y * 100 / this.state.parent.height;\r\n\r\n            this.move(convertToPercentX.toFixed(2) + '%',\r\n                      convertToPercentY.toFixed(2) + '%');\r\n    }\r\n        event.stopPropagation();\r\n    };\r\n\r\n    stopDragNdrop = event => {\r\n            this.setState({...this.state, startDragNdrop: false},\r\n            () => controllerStream.emit(`EventUpdatePosition${this.state.id}`, this.state.position));\r\n        event.stopPropagation();\r\n    };\r\n\r\n    refText = null;\r\n    refTextComponent = node => this.refText = node;\r\n\r\n\r\n    render(){\r\n        if (this.props.mode === 'dev'){\r\n            return (\r\n                <WrapperText\r\n                    ref  = {this.refTextComponent}\r\n                    onClick={this.openTitleInstruments}\r\n                    textColor = {this.state.colorText ? this.state.colorText : 'red'}\r\n                    size = {this.state.sizeText ? this.state.sizeText + 'px' : '120px'}\r\n                    onMouseDown = {this.saveCoords}\r\n                    onMouseMove= {this.moveText}\r\n                    onMouseLeave = {this.stopDragNdrop}\r\n                    onMouseUp = {this.stopDragNdrop}\r\n                    coordX = {this.state.position ? this.state.position.x : null}\r\n                    coordY = {this.state.position ? this.state.position.y : null}\r\n                    indexZ = {this.state.startDragNdrop}\r\n                    data-textcomponent\r\n                >\r\n                    <TextStyle font = {this.state.font}>{this.state.contentText}</TextStyle>\r\n                </WrapperText>\r\n            ) \r\n        } else if (this.props.mode === 'production'){\r\n            return (\r\n                <ProductionStyle\r\n                    ref  = {this.refTextComponent}\r\n                    mode = {this.props.mode}\r\n                    textColor = {this.state.colorText ? this.state.colorText : 'red'}\r\n                    size = {this.state.sizeText ? this.state.sizeText + 'px' : '120px'}\r\n                    coordX = {this.state.position ? this.state.position.x : null}\r\n                    coordY = {this.state.position ? this.state.position.y : null}\r\n                    indexZ = {this.state.startDragNdrop}\r\n                >\r\n                    <TextStyle font = {this.state.font}>{this.state.contentText}</TextStyle>\r\n                </ProductionStyle>\r\n            )\r\n        }\r\n\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        controllerStream.on(`EventChangeColorText${this.state.id}`, this.changeColorText);\r\n        controllerStream.on(`EventSetFont${this.state.id}`, this.setFont);\r\n        controllerStream.on(`EventChangeSize${this.state.id}`, this.changeSizeText);\r\n        controllerStream.on(`EventChangeContentText${this.state.id}`, this.changeContentText);\r\n        controllerStream.on(`EventSaveWidth${this.state.targetSection}`,this.saveSize);\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        controllerStream.off(`EventChangeColorText${this.state.id}`, this.changeColorText);\r\n        controllerStream.off(`EventSetFont${this.state.id}`, this.setFont);\r\n        controllerStream.off(`EventChangeSize${this.state.id}`, this.changeSizeText);\r\n        controllerStream.off(`EventChangeContentText${this.state.id}`, this.changeContentText);\r\n        controllerStream.off(`EventSaveWidth${this.state.targetSection}`,this.saveSize);\r\n    }\r\n}\r\n\r\nexport default TextComponent;","import React,{Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport {Redirect} from 'react-router-dom';\r\nimport {loadCurrentProjectAction, exitProjectAction} from '../../redux/actions';\r\n\r\nimport Section from '../../components/buildComponents/section';\r\nimport builderHOC from '../../components/builderHOC';\r\nimport Loader from '../../components/loading/Loader';\r\nimport Header from '../../components/header/Header';\r\nimport withFirebase from '../../components/firebaseHOC';\r\nimport {connect} from 'react-redux';\r\n\r\n\r\n\r\nimport Input from '../../components/buildComponents/components/Input';\r\nimport Media from '../../components/buildComponents/components/Media';\r\nimport Image from '../../components/buildComponents/components/Image';\r\nimport TextComponent from '../../components/buildComponents/components/Text';\r\nimport BackgroundComponent from '../../components/buildComponents/components/Background';\r\n\r\nimport './production.scss';\r\n\r\nclass Production extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        firebase: PropTypes.object,\r\n    }\r\n\r\n    state = {\r\n        idProject: parseInt(this.props.match.params.param),\r\n        mode: 'production',\r\n        projectEmpty: false,\r\n        isLoadComponents: true,\r\n        componentsProdJSX: []\r\n    }\r\n\r\n    makeProduction = array => {\r\n\r\n        let {componentsProdJSX} = this.state;\r\n        let _components = [];\r\n\r\n        array.forEach(item => {\r\n\r\n            let props = {\r\n                sizeParentBox: {\r\n                    width: this.prodRef.data.width,\r\n                    height: this.prodRef.data.height,\r\n                    top: this.prodRef.data.top,\r\n                    left: this.prodRef.data.left,\r\n                },\r\n                ...item,\r\n                mode: 'production',\r\n            }\r\n\r\n            let Component = null;\r\n                if (item.type === 'background') Component = BackgroundComponent;\r\n                else if (item.type === 'input') Component = Input;\r\n                else if (item.type === 'media') Component = Media;\r\n                else if (item.type === 'image') Component = Image;\r\n                else if (item.type === 'text') Component = TextComponent;\r\n\r\n            const patternJSX = {\r\n                id: item.id,\r\n                targetSection: item.targetSection,\r\n                component: builderHOC(props)(Component)\r\n            };\r\n                _components.push(patternJSX);\r\n        });\r\n            this.setState({\r\n                ...this.state,\r\n                isLoadComponents: false,\r\n                componentsProdJSX: [...componentsProdJSX, ..._components],\r\n            });\r\n    };\r\n\r\n    prodRef = null;\r\n    mainProductionRef  = node => node ?\r\n    this.prodRef = {data: node.getBoundingClientRect(), node: node} : node;\r\n\r\n    render(){\r\n\r\n        const {userData} = this.props;\r\n        const {currentProjectsData} = userData;\r\n        const section = currentProjectsData.sectionsProject;\r\n\r\n        if (this.state.projectEmpty) return <Redirect to = '/Cabinet' />\r\n\r\n        if (userData.active && currentProjectsData.loadProject){\r\n            return (\r\n            <Fragment>\r\n                <Header key = 'Header' title = \"Constructor\" idUser = {userData.idUser} />\r\n                <div\r\n                    ref = {this.mainProductionRef}\r\n                    className = 'Production'\r\n                    key = 'Production'\r\n                    >\r\n                    {!this.state.isLoadComponents ?\r\n                        section.length &&\r\n                            <Section \r\n                                key = 'section'\r\n                                mode = {this.state.mode}\r\n                                currentProjectsData = {currentProjectsData}\r\n                                componentsProdJSX = {this.state.componentsProdJSX}\r\n                                section = {section}\r\n                            />\r\n                        : null\r\n                    }\r\n                </div>\r\n            </Fragment>\r\n            )\r\n        } else if (!this.props.firebase.getCurrentUser()) return <Redirect to = '/' />\r\n        else return <Loader  key = 'Loader' path = '/img/loading.gif' type = 'production' />\r\n    }\r\n\r\n    componentDidUpdate = (prevProps, prevState) => {\r\n        let {userData} = this.props;\r\n        let {currentProjectsData} = userData;\r\n\r\n        if (userData.active && !currentProjectsData.loadProject) {\r\n            const current =  userData.projects.find(item => item.id === this.state.idProject)\r\n            if (current)\r\n            this.props.dispatch(loadCurrentProjectAction({\r\n                id: current.id,\r\n                typeProject: current.type,\r\n                sectionsProject: [...current.sectionsProject],\r\n                components: [...current.components]\r\n            }))\r\n            else this.setState({...this.state, projectEmpty: true});\r\n        }\r\n\r\n        if (this.state.isLoadComponents && currentProjectsData.loadProject) \r\n            this.makeProduction(currentProjectsData.components);\r\n\r\n    }\r\n\r\n\r\n    componentDidMount = () => {\r\n        let {userData} = this.props;\r\n        let {currentProjectsData} = userData;\r\n\r\n        if (userData.active && !currentProjectsData.loadProject) {\r\n            const current =  userData.projects.find(item => item.id === this.state.idProject)\r\n            this.props.dispatch(loadCurrentProjectAction({\r\n                id: current.id,\r\n                sectionsProject: [...current.sectionsProject],\r\n                typeProject: current.type,\r\n                components: [...current.components]\r\n            }));\r\n        };\r\n\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n\r\n        let {userData} = this.props;\r\n        if (userData.active)  this.props.dispatch(exitProjectAction(true));\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        userData: {\r\n            active: state.cabinet.active,\r\n            idUser: state.cabinet.idUser,\r\n            projects: [...state.cabinet.projects],\r\n           currentProjectsData: {...state.builder}\r\n        },\r\n    }\r\n};\r\n\r\n  export default connect(mapStateToProps)(withFirebase(Production));","import React, {Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\n\r\n\r\nimport withFirebase from '../../components/firebaseHOC';\r\n\r\nimport Header from '../../components/header/Header';\r\nimport Loader from '../../components/loading/Loader';\r\n\r\nimport './about.scss';\r\n\r\nclass About extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        config: PropTypes.object.isRequired, /** @Config app */\r\n        firebase: PropTypes.object.isRequired, /** @firebase class for use firebase functions */\r\n        history: PropTypes.object, /** @Router HTML5 history */\r\n        location: PropTypes.object, /** @Router */\r\n        match: PropTypes.object, /** @Router */\r\n    }\r\n\r\n    state = {\r\n        config: this.props.config\r\n    };\r\n\r\n    render(){\r\n\r\n        let user = this.props.firebase.getCurrentUser();\r\n        if (user && this.props.idUser) {\r\n            const { config } = this.state;\r\n            return (\r\n                <Fragment>\r\n                    <Header title = {config.title} idUser = {user.uid} />\r\n                    <section className = 'About'>\r\n                        <div className = 'container'>\r\n                            <div className = 'col-12'>\r\n                                <div className = 'information'>\r\n                                <img alt = 'img' className = 'logoAbout' src = {process.env.PUBLIC_URL + '/img/about.jpg'}/>\r\n                                    <p className ='developer'><span>Developer:</span> {config.about.developer}</p>\r\n                                    <p className = 'year'><span>Year:</span> {config.about.year}</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </section>\r\n                </Fragment>\r\n            )\r\n        } else if (!user) return <Redirect to = { '/'} />\r\n        else return <Loader path = '/img/loading.gif' type = 'About' />\r\n\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n      idUser: state.cabinet.idUser,\r\n    }\r\n  };\r\n\r\nexport default connect(mapStateToProps)(withFirebase(About));","import {errorAction, loadUpdateCurrentProject} from '../actions';\r\n\r\nconst updateMiddleware = (item) => async (dispatch,getState, {firebase}) => {\r\n \r\n    let newProjects = item.projects.map(project => {\r\n        if (project.id === item.idProject) {\r\n            project.components = [...item.components]\r\n            project.sectionsProject = [...item.sectionsProject]\r\n        }\r\n        return project;\r\n    });\r\n    await firebase.db.collection(\"users\").doc(item.uid).update({\r\n        'projects': JSON.parse(JSON.stringify(newProjects))\r\n    })\r\n    .then(response => {\r\n        let project = item.projects.find(itemdb => itemdb.id === item.idProject);\r\n        dispatch(loadUpdateCurrentProject({\r\n            components: [...project.components],\r\n            idProject: item.idProject,\r\n            sectionsProject: item.sectionsProject,\r\n        }))\r\n    })\r\n    .catch(error => dispatch(errorAction(error.message)));\r\n};\r\n\r\nexport default updateMiddleware;","import React,{useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Viewer.scss';\r\n\r\nfunction Viewer(props){\r\n\r\n    let [mode] = useState(props.mode);\r\n    let [path] = useState(props.path);\r\n\r\n    const closeViewer = event => {\r\n        props.eventStreamBuild.emit(\"EventView\", { action: false, target: null});\r\n        event.stopPropagation();\r\n    }\r\n\r\n    return (\r\n        \r\n        <div onClick = {closeViewer} className = 'Viewer'>\r\n            {(mode === 'image' || mode === 'background') ? <img src = {path} alt = 'fullImage' /> \r\n            : \r\n            <iframe \r\n            src= {`https://www.youtube.com/embed/${props.iframe}`}\r\n            title = 'youtube'\r\n            frameBorder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" \r\n            allowFullScreen>\r\n            </iframe>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nViewer.propTypes = {\r\n    eventStreamBuild: PropTypes.object.isRequired, // events stream\r\n    mode: PropTypes.string.isRequired, // use mode\r\n    path: PropTypes.string.isRequired // path to data component\r\n}\r\n\r\nexport default Viewer;","import React,{Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {SketchPicker} from 'react-color';\r\n\r\n\r\nconst InputInstruments = props => {\r\n\r\n    let {colorPickerActive} = props.instrumentPanel;\r\n    let {content} = props.componentStats;\r\n    let {fontSize} = props.componentStats;\r\n    let {coords} = props.componentStats;\r\n    let {size} = props.componentStats;\r\n\r\n    let _content = content !== '' ? 'Input' : '';\r\n\r\n    return (\r\n        <Fragment>\r\n            <p className = 'titleInstument'>Position: </p>\r\n            <span className = 'textCoordsPanel'>\r\n            {coords.x ?\r\n                coords.x + ' / ' + coords.y : ' drop for active'}\r\n            </span>\r\n            <p className = 'titleInstument'>Color: </p>\r\n            <input \r\n                onClick = {props.cbSetColor}\r\n                className = 'button_switch'\r\n                type = 'button'\r\n                value = 'color pick'\r\n            />\r\n                { colorPickerActive ?\r\n                    <div className ='wrapperColorPicker'>\r\n                        <SketchPicker\r\n                        onChangeComplete={props.cbHandleChangeComplete}\r\n                        color = {props.color ? props.color : 'white'}\r\n                        />\r\n                    </div>\r\n                    : null\r\n                }\r\n            <p className = 'titleInstument'>Size (%):</p>\r\n            <div className = 'panel__sizes'>\r\n                <input\r\n                    className = 'button_switch'\r\n                    onChange = {props.cbSetWidth}\r\n                    type=\"number\"\r\n                    min = '10' max = '200'\r\n                    value = {size.w ? size.w : 100}\r\n                />\r\n                <input \r\n                    className = 'button_switch'\r\n                    onChange = {props.cbSetHeight}\r\n                    type=\"number\"\r\n                    min = '10' max = '200'\r\n                    value = {size.h ? size.h : 50}\r\n                />\r\n            </div>\r\n            <p className = 'titleInstument'>Text size: </p>\r\n            <input \r\n                className = 'button_switch'\r\n                onChange = {props.cbSetSize}\r\n                type=\"number\"\r\n                min = '10' max = '200'\r\n                value = {fontSize ? fontSize : 21}\r\n            />\r\n            <p className = 'titleInstument'>Border radius: </p>\r\n            <input\r\n                onChange = {props.cbSetBorderRadius}\r\n                className = 'button_switch radius'\r\n                type=\"number\"\r\n                value = {props.componentStats.borderRadius ?\r\n                            props.componentStats.borderRadius : 10\r\n                        }\r\n                min = '10' max = '200'\r\n            />\r\n\r\n            <p className = 'titleInstument'>Type input: </p>\r\n            <select \r\n            value = {props.componentStats.typeInput} \r\n            onChange = {props.cbSetType}\r\n            className = 'button_switch'\r\n        >\r\n        <option>button</option>\r\n        <option>text</option>\r\n        <option>password</option>\r\n        </select>\r\n        />\r\n            <p className = 'titleInstument'>Content: </p>\r\n            <input\r\n            className = 'button_switch'\r\n            onChange = {props.cbSetContent}\r\n            maxLength = '100'\r\n            type = 'text'\r\n            value = {content ? content : _content}\r\n        />\r\n            <input \r\n                onClick = {props.cbDelete}\r\n                className = 'instrumentPanel__deleteComponentButton'\r\n                type=\"button\"\r\n                value = 'delete'\r\n            />\r\n        </Fragment>\r\n    )\r\n};\r\n\r\nInputInstruments.propTypes = {\r\n    componentStats: PropTypes.object.isRequired, // object with current component data\r\n    cbSetColor: PropTypes.func.isRequired, // callback set color\r\n    cbHandleChangeComplete: PropTypes.func.isRequired, // callback state color picker\r\n    cbSetWidth: PropTypes.func.isRequired, // callback set width\r\n    cbSetHeight: PropTypes.func.isRequired, // callback set height\r\n    cbSetSize: PropTypes.func.isRequired, // callback set size\r\n    cbSetBorderRadius: PropTypes.func.isRequired, // callback set border-radius\r\n    cbSetContent: PropTypes.func.isRequired, // callback set content input\r\n    cbDelete: PropTypes.func.isRequired, // callback delete\r\n}\r\n\r\nexport default InputInstruments;","import React,{Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst MediaInstruments = props => {\r\n\r\n    let {size} = props.componentStats;\r\n    let {coords} = props.componentStats;\r\n\r\n    return (\r\n        <Fragment>\r\n            <p className = 'titleInstument'>Position: </p>\r\n            <span className = 'textCoordsPanel'>\r\n            {coords.x ?\r\n                coords.x + ' / ' + coords.y : ' drop for active'}\r\n            </span>\r\n            <p className = 'titleInstument'>Size (%):</p>\r\n            <div className = 'panel__sizes'>\r\n                <input\r\n                    className = 'button_switch'\r\n                    onChange = {props.cbSetWidth}\r\n                    type=\"number\"\r\n                    min = '10' max = '100'\r\n                    value = {size.w ? size.w : 30}\r\n                />\r\n                <input \r\n                    className = 'button_switch'\r\n                    onChange = {props.cbSetHeight}\r\n                    type=\"number\"\r\n                    min = '10' max = '100'\r\n                    value = {size.h ? size.h : 50}\r\n                />\r\n            </div>\r\n            <p className = 'titleInstument'>Content: </p>\r\n            <input \r\n                onClick = {props.cbSearch}\r\n                className = 'ImageSearchButton'\r\n                type=\"button\"\r\n                value = 'search media'\r\n            />\r\n            <input \r\n                onClick = {props.cbDelete}\r\n                className = 'instrumentPanel__deleteComponentButton'\r\n                type=\"button\"\r\n                value = 'delete'\r\n            />\r\n        </Fragment>\r\n    )\r\n};\r\n\r\nMediaInstruments.propTypes = {\r\n    componentStats: PropTypes.object.isRequired, // object with current component data\r\n    cbSearch: PropTypes.func.isRequired, // callback search\r\n    cbSetWidth: PropTypes.func.isRequired, // callback set width\r\n    cbSetHeight: PropTypes.func.isRequired, // callback set height\r\n    cbDelete: PropTypes.func.isRequired, // callback delete\r\n}\r\n\r\nexport default MediaInstruments;","import React, {Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ImageInstruments = props => {\r\n\r\n    let {coords} = props.componentStats;\r\n    let {size} = props.componentStats;\r\n    let fileRef = React.createRef();\r\n    return (\r\n        <Fragment>\r\n        <p className = 'titleInstument'>Position: </p>\r\n        <span className = 'textCoordsPanel'>\r\n        {coords.x ?\r\n            coords.x + ' / ' + coords.y : ' drop for active'}\r\n        </span>\r\n        <p className = 'titleInstument'>Size (%):</p>\r\n        <div className = 'panel__sizes'>\r\n            <input\r\n                className = 'button_switch'\r\n                onChange = {props.cbSetWidth}\r\n                type=\"number\"\r\n                min = '10' max = '100'\r\n                value = {size.w ? size.w : 30}\r\n            />\r\n            <input \r\n                className = 'button_switch'\r\n                onChange = {props.cbSetHeight}\r\n                type=\"number\"\r\n                min = '10' max = '100'\r\n                value = {size.h ? size.h : 30}\r\n            />\r\n        </div>\r\n        <p className = 'titleInstument'>Border radius: </p>\r\n            <input\r\n                onChange = {props.cbSetBorderRadius}\r\n                className = 'button_switch radius'\r\n                type=\"number\"\r\n                value = {props.componentStats.borderRadius ?\r\n                            props.componentStats.borderRadius : 10\r\n                        }\r\n                min = '10' max = '200'\r\n            />\r\n            <p className = 'titleInstument titleInstrument__opacity'>Opacity: </p>\r\n            <input \r\n                onChange = {props.cbSetOpacity}\r\n                className = 'ImageSearchButton'\r\n                type=\"number\"\r\n                value = {props.componentStats.opacity ?\r\n                    props.componentStats.opacity : 1\r\n                }\r\n                step = '0.1'\r\n                min = '0' max = '1'\r\n            />\r\n            <p className = 'titleInstument titleInstrument__opacity'>Loader: </p>\r\n            <div className = 'fileLoader'>\r\n            <input\r\n                ref = {fileRef}\r\n                className = 'fileInput'\r\n                onChange = {props.cbLoadFile}\r\n                accept=\"image/*\"\r\n                type=\"file\"\r\n            />\r\n                <input\r\n                        // onClick = {simulateClickFile}\r\n                        className = 'ImageSearchButton'\r\n                        type = 'button'\r\n                        value = 'loading file'\r\n                />\r\n            </div>\r\n            <input \r\n                onClick = {props.cbSearch}\r\n                className = 'ImageSearchButton'\r\n                type=\"button\"\r\n                value = 'search image'\r\n            />\r\n            <input \r\n                onClick = {props.cbDelete}\r\n                className = 'instrumentPanel__deleteComponentButton'\r\n                type=\"button\"\r\n                value = 'delete'\r\n            />\r\n        </Fragment>\r\n    )\r\n\r\n}\r\n\r\nImageInstruments.propTypes = {\r\n    componentStats: PropTypes.object.isRequired, // object with current component data\r\n    cbSetWidth: PropTypes.func.isRequired, // callback set width\r\n    cbSetHeight: PropTypes.func.isRequired, // callback set height\r\n    cbSetBorderRadius: PropTypes.func.isRequired, // callback set border-radius\r\n    cbSetOpacity: PropTypes.func.isRequired, // callback set opacity\r\n    cbLoadFile: PropTypes.func.isRequired, // callback load file\r\n    cbSearch: PropTypes.func.isRequired, // callback search\r\n    cbDelete: PropTypes.func.isRequired, // callback delete\r\n}\r\n\r\nexport default ImageInstruments;","import React, {Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {SketchPicker} from 'react-color';\r\n\r\nconst BackgroundInstruments = props => {\r\n    return (\r\n        <Fragment>\r\n        <p className = 'titleInstument'>Color: </p>\r\n        <input\r\n            onClick = {props.cbSetColor}\r\n            className = 'button_switch Color'\r\n            type = 'button'\r\n            value = 'color pick'\r\n        />\r\n            { props.colorPickerActive ?\r\n                <SketchPicker\r\n                    onChangeComplete={props.cbHandleChangeComplete}\r\n                    color = {props.color ? props.color : 'white'}\r\n                />\r\n                : null\r\n            }\r\n            <input \r\n                onClick = {props.cbSearch}\r\n                className = 'ImageSearchButton'\r\n                type = 'button'\r\n                value = 'background-image'\r\n            />\r\n        </Fragment>\r\n    )\r\n\r\n}\r\n\r\nBackgroundInstruments.propTypes = {\r\n    componentStats: PropTypes.object.isRequired, // object with current component data\r\n    cbSetColor: PropTypes.func.isRequired, // callback set color\r\n    cbHandleChangeComplete: PropTypes.func.isRequired, // callback picker state change\r\n    cbSearch: PropTypes.func.isRequired, // callback search\r\n}\r\n\r\nexport default BackgroundInstruments;","import React,{Fragment} from 'react';\r\nimport {SketchPicker} from 'react-color';\r\n\r\nconst TextInstruments = props => {\r\n\r\n        let {colorPickerActive} = props.instrumentPanel;\r\n        let {content} = props.componentStats;\r\n        let {fontSize} = props.componentStats;\r\n        let {coords} = props.componentStats;\r\n        let _content = content !== '' ? 'Title' : '';\r\n\r\n        return (\r\n            <Fragment>\r\n            <p className = 'titleInstument'>Position: </p>\r\n            <span className = 'textCoordsPanel'>\r\n            {coords.x ?\r\n                coords.x + ' / ' + coords.y : ' drop for active'}\r\n            </span>\r\n            <p className = 'titleInstument'>Color: </p>\r\n            <input \r\n                onClick = {props.cbSetColor}\r\n                className = 'button_switch'\r\n                type = 'button'\r\n                value = 'color pick'\r\n            />\r\n            <p className = 'titleInstument'>Text size: </p>\r\n            <input \r\n                className = 'button_switch'\r\n                onChange = {props.cbSetSize}\r\n                type=\"number\"\r\n                min = '10' max = '200'\r\n                value = {fontSize ? fontSize : 120}\r\n            />\r\n                { colorPickerActive ?\r\n                    <SketchPicker\r\n                    onChangeComplete={props.cbHandleChangeComplete}\r\n                    color = {props.color ? props.color : 'red'}\r\n                    />\r\n                    : null\r\n                }\r\n                <p className = 'titleInstument'>Font: </p>\r\n                <select \r\n                    value = {props.componentStats.font} \r\n                    onChange = {props.cbSetFont}\r\n                    className = 'button_switch'\r\n                >\r\n                <option>Arial</option>\r\n                <option>Times</option>\r\n                <option>Georgia</option>\r\n                <option>Impact</option>\r\n                <option>Tahoma</option>\r\n                <option>Verdana</option>\r\n                <option>Comic</option>\r\n                </select>\r\n            <p className = 'titleInstument'>Content: </p>\r\n            <input\r\n                className = 'button_switch'\r\n                onChange = {props.cbSetContent}\r\n                maxLength = '100'\r\n                type = 'text'\r\n                value = {content ? content : _content}\r\n            />\r\n            <input \r\n                onClick = {props.cbDelete}\r\n                className = 'instrumentPanel__deleteComponentButton'\r\n                type=\"button\"\r\n                value = 'delete'\r\n            />\r\n            </Fragment>\r\n        )\r\n}\r\n\r\nexport default TextInstruments;","import React, {Fragment} from 'react';\r\nimport eventEmitter,{controllerStream} from '../../EventEmitter';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport InputInstruments from './InputTools/InputInstruments';\r\nimport MediaInstruments from './MediaTools/MediaInstruments';\r\nimport ImageInstruments from './ImageTools/ImageInstruments';\r\nimport BackgroundInstruments from './BackgroundTools/BackgroundInstruments';\r\nimport TextInstruments from './TextTools/TextInstruments';\r\n\r\nimport Icon from '../Icon/icon';\r\n\r\nimport './instrumentsPanel.scss';\r\n\r\n\r\nclass InstrumentsPanel extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        instrumentPanel:  PropTypes.object.isRequired, /** @Settings for panel and data about component */\r\n        editComponentName: PropTypes.string, /** @Name editable component */\r\n        eventStreamBuild: PropTypes.object.isRequired // stream events\r\n    };\r\n\r\n    state = {\r\n        instrumentPanel: {...this.props.instrumentPanel},\r\n        componentStats: this.props.componentStats,\r\n        images: null,\r\n    };\r\n\r\n\r\n    closePanel = event => {\r\n        this.props.eventStreamBuild.emit('EventClosePanel', {close: false});\r\n    };\r\n\r\n    setSize = event => {\r\n        let {id} = this.state.componentStats;\r\n        let size = event.target.value > 200 ? 200 : event.target.value;\r\n\r\n        if (this.state.componentStats.type !== 'input')\r\n        this.setState({\r\n            ...this.state, \r\n            instrumentPanel: {...this.state.instrumentPanel},\r\n            componentStats: {...this.state.componentStats,fontSize: size}\r\n        }, () => controllerStream.emit(`EventChangeSize${id}`, {\r\n                targetSection: this.state.editComponentName, size: size \r\n        }));\r\n        else this.setState({\r\n                ...this.state, \r\n                instrumentPanel: {...this.state.instrumentPanel},\r\n                componentStats: {...this.state.componentStats,fontSize: size}\r\n            }, () => controllerStream.emit(`EventChangeSizeText${id}`, {size: size}\r\n            ));\r\n    };\r\n\r\n    setFont = event => {\r\n        let {id} = this.state.componentStats;\r\n        let fontName = event.target.value;\r\n        this.setState({\r\n            ...this.state, \r\n            instrumentPanel: {...this.state.instrumentPanel},\r\n            componentStats: {...this.state.componentStats,font: fontName}\r\n        },\r\n            () => controllerStream.emit(`EventSetFont${id}`, {\r\n                targetSection: this.state.editComponentName, font: fontName\r\n            })\r\n        );\r\n    }\r\n\r\n    setIframeContent = eventItem => {\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            componentStats:{\r\n                ...this.state.componentStats,\r\n                content: eventItem.iframe\r\n            }\r\n        });\r\n    }\r\n\r\n    setContent = event => {\r\n        let {id} = this.state.componentStats;\r\n        let contentValue = event.target.value;\r\n        this.setState({\r\n            ...this.state, \r\n            instrumentPanel: {...this.state.instrumentPanel},\r\n            componentStats: {...this.state.componentStats,content: contentValue}\r\n        },\r\n            () => controllerStream.emit(`EventChangeContentText${id}`,{\r\n                targetSection: this.state.editComponentName, content: contentValue\r\n            })\r\n        );\r\n        if (event) event.stopPropagation();\r\n    };\r\n\r\n    setWidth = event => {\r\n        const {id} = this.state.componentStats;\r\n        const width = event.target.value;\r\n        this.setState({\r\n            ...this.state,\r\n            componentStats: {...this.state.componentStats,\r\n                size: {\r\n                    ...this.state.componentStats.size,\r\n                    w: width\r\n                }}\r\n        },\r\n            () => controllerStream.emit(`EventSetWidth${id}`,{width: width}));\r\n\r\n        if (event) event.stopPropagation();\r\n    };\r\n\r\n    setHeight = event => {\r\n        const {id} = this.state.componentStats;\r\n        const height = event.target.value;\r\n        this.setState({\r\n            ...this.state,\r\n            componentStats: {...this.state.componentStats,\r\n                size: {\r\n                    ...this.state.componentStats.size,\r\n                    h: height\r\n                }}\r\n        },\r\n            () => controllerStream.emit(`EventSetHeight${id}`,{height: height}));\r\n\r\n        if (event) event.stopPropagation();\r\n    }\r\n\r\n    updatePosition = eventItem => {\r\n        if (!eventItem) return;\r\n        this.setState({\r\n            ...this.state, \r\n            componentStats: {\r\n                ...this.state.componentStats,\r\n                coords: {\r\n                    ...this.state.componentStats.coords,\r\n                    x: eventItem.x,\r\n                    y: eventItem.y\r\n                }\r\n            }\r\n        });\r\n    };\r\n\r\n    setColor = event => {\r\n        this.setState({...this.state,\r\n            instrumentPanel:{\r\n                ...this.state.instrumentPanel,\r\n                colorPickerActive: this.state.instrumentPanel.colorPickerActive ? false : true\r\n            }\r\n        });\r\n        if (event) event.stopPropagation();\r\n    };\r\n\r\n    setType = event => {\r\n\r\n        let {id} = this.state.componentStats;\r\n        let typeInput = event.target.value;\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            componentStats: {\r\n                ...this.state.componentStats,\r\n                typeInput: typeInput\r\n            }\r\n        },\r\n         () => controllerStream.emit(`EventSetType${id}`, typeInput));\r\n        if (event) event.stopPropagation();\r\n    }\r\n\r\n    setOpacity = event => {\r\n        let {id} = this.state.componentStats;\r\n        let opacity = event.target.value;\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            componentStats: {...this.state.componentStats,opacity: opacity}\r\n        },\r\n         () => controllerStream.emit(`EventSetOpacity${id}`, {opacity: opacity}));\r\n    };\r\n\r\n    setBorderRadius = event => {\r\n        let {id} = this.state.componentStats;\r\n        let radius = event.target.value;\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            componentStats: {...this.state.componentStats,borderRadius: radius}\r\n        },\r\n         () => controllerStream.emit(`EventSetBorderRadius${id}`, {borderRadius: radius}));\r\n    };\r\n\r\n    updateBimageStats = eventItem => {\r\n        const {images} = eventItem;\r\n        if (eventItem.mode !== 'image')\r\n        this.setState({\r\n            ...this.state,\r\n            componentStats:{\r\n                ...this.state.componentStats,\r\n                backgroundImage: images.urlFull\r\n            }\r\n        });\r\n        else {\r\n            this.setState({\r\n                ...this.state,\r\n                componentStats:{\r\n                    ...this.state.componentStats,\r\n                    image: images.urlFull\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    handleChangeComplete = event => {\r\n\r\n        const {rgb} = event;\r\n        let colorRGB = `rgb(${rgb.r},${rgb.g},${rgb.b},${rgb.a})`;\r\n\r\n        let {id} = this.state.componentStats;\r\n        if (this.state.componentStats.type === 'background'){\r\n            this.setState({\r\n                ...this.state,\r\n                componentStats: {...this.state.componentStats,color: colorRGB}\r\n            }, () => controllerStream.emit(`EventChangeColorBackground${id}`,\r\n                        {colorRGB: this.state.componentStats.color}\r\n                    ));\r\n        }\r\n\r\n        else if (this.state.componentStats.type === 'text') {\r\n            this.setState({\r\n                ...this.state,\r\n                componentStats: {...this.state.componentStats,color: colorRGB}\r\n            },\r\n            () => controllerStream.emit(`EventChangeColorText${id}`, colorRGB));\r\n        }\r\n\r\n        else if (this.state.componentStats.type === 'input') {\r\n            this.setState({\r\n                ...this.state,\r\n                componentStats: {...this.state.componentStats,color: colorRGB}\r\n            },\r\n            () => controllerStream.emit(`EventChangecolor${id}`, colorRGB));\r\n        }\r\n\r\n    };\r\n\r\n    redirectSaveChanges = event => {\r\n        this.props.eventStreamBuild.emit(\"EventSaveChangesComponent\", {\r\n            ...this.state.componentStats,\r\n            id: this.state.componentStats.id,\r\n            type: this.state.componentStats.type,\r\n            ms: 0\r\n        });\r\n        if (event) event.stopPropagation();\r\n    }\r\n\r\n    saveChanges = event => {\r\n\r\n        this.props.eventStreamBuild.emit(\"EventSaveChangesComponent\", {\r\n                ...this.state.componentStats,\r\n                id: this.state.componentStats.id,\r\n                type: this.state.componentStats.type,\r\n                ms: 1500,\r\n            });\r\n\r\n        eventEmitter.emit('EventRedirectConfirm', true);\r\n        if (event) event.stopPropagation();\r\n    }\r\n\r\n    deleteComponent = event => {\r\n        this.props.eventStreamBuild.emit('EventDeleteComponent', {\r\n            id: this.state.componentStats.id,\r\n            targetSection: this.state.componentStats.targetSection,\r\n            type: this.state.componentStats.type\r\n        });\r\n    };\r\n\r\n    search = event => {\r\n\r\n        let {id} = this.state.componentStats;\r\n        this.props.eventStreamBuild.emit('EventModalSearchOn', {idComponent: id, mode: this.state.componentStats.type});\r\n\r\n        event.stopPropagation();\r\n    };\r\n\r\n    loadFile = event => {\r\n        let {id} = this.state.componentStats;\r\n        try {\r\n            let image = event.target.files[0];\r\n            let reader = new FileReader();\r\n            if (image.type[0] !== 'i') throw new Error('Invalid file');\r\n            reader.readAsDataURL(image);\r\n            reader.onload = (e) => {\r\n                controllerStream.emit(`EventSetCurrentImage${id}`,{ urlFull: reader.result });\r\n                this.updateBimageStats({images: { urlFull: reader.result }, mode: 'image'});\r\n                e.stopPropagation();\r\n            }\r\n            reader.onerror = () => {\r\n                console.error(reader.error);\r\n            }\r\n        } catch (error) {\r\n            console.error(error.message);\r\n        }\r\n\r\n        event.stopPropagation();\r\n    }\r\n\r\n    makePanelInstruments = (type) => {\r\n            switch (type){\r\n                case 'text':\r\n                   return(\r\n                    <TextInstruments\r\n                        instrumentPanel = {{...this.state.instrumentPanel}}\r\n                        componentStats = {{...this.state.componentStats}}\r\n                        cbSetColor = {this.setColor}\r\n                        cbSetSize = {this.setSize}\r\n                        cbHandleChangeComplete = {this.handleChangeComplete}\r\n                        cbSetContent = {this.setContent}\r\n                        cbSetFont = {this.setFont}\r\n                        cbSetOpacity = {this.setOpacity}\r\n                        color = {this.state.componentStats.color}\r\n                        cbDelete = {this.deleteComponent}\r\n                    />\r\n                   )\r\n                case 'background':\r\n                    return (\r\n                        <BackgroundInstruments\r\n                            colorPickerActive = {this.state.instrumentPanel.colorPickerActive}\r\n                            componentStats = {{...this.state.componentStats}}\r\n                            cbSetColor = {this.setColor}\r\n                            color = {this.state.componentStats.color}\r\n                            cbHandleChangeComplete = {this.handleChangeComplete}\r\n                            cbSearch = {this.search}\r\n                        />\r\n                    )\r\n                case 'image':\r\n                        return (\r\n                            <ImageInstruments\r\n                                instrumentPanel = {{...this.state.instrumentPanel}}\r\n                                componentStats = {{...this.state.componentStats}}\r\n                                cbSearch = {this.search}\r\n                                cbSetSize = {this.setSize}\r\n                                cbSetBorderRadius = {this.setBorderRadius}\r\n                                cbSetOpacity = {this.setOpacity}\r\n                                cbSetWidth = {this.setWidth}\r\n                                cbSetHeight = {this.setHeight}\r\n                                cbLoadFile = {this.loadFile}\r\n                                cbDelete = {this.deleteComponent}\r\n                            />\r\n                        )\r\n                case 'media':\r\n                        return (\r\n                            <MediaInstruments\r\n                                instrumentPanel = {{...this.state.instrumentPanel}}\r\n                                componentStats = {{...this.state.componentStats}}\r\n                                cbSearch = {this.search}\r\n                                cbSetWidth = {this.setWidth}\r\n                                cbSetHeight = {this.setHeight}\r\n                                cbDelete = {this.deleteComponent}\r\n                            />\r\n                            )\r\n                case 'input':\r\n                        return (\r\n                            <InputInstruments\r\n                                instrumentPanel = {{...this.state.instrumentPanel}}\r\n                                componentStats = {{...this.state.componentStats}}\r\n                                cbSetColor = {this.setColor}\r\n                                cbSetBorderRadius = {this.setBorderRadius}\r\n                                cbHandleChangeComplete = {this.handleChangeComplete}\r\n                                cbSetSize = {this.setSize}\r\n                                cbSetWidth = {this.setWidth}\r\n                                cbSetHeight = {this.setHeight}\r\n                                color = {this.state.componentStats.color}\r\n                                cbSetContent = {this.setContent}\r\n                                cbSetType = {this.setType}\r\n                                cbDelete = {this.deleteComponent}\r\n                            />\r\n                        )\r\n                default: return <p className = 'warningInstruments'>No found element</p>\r\n            }\r\n    };\r\n\r\n    render(){\r\n        let { instrumentActive } = this.state.instrumentPanel;\r\n        return (\r\n            <Fragment>\r\n                <div  className = 'instumentsPanel'>\r\n                    <button\r\n                        onClick = {this.closePanel}\r\n                        className = 'closeInstrumentsPanel'\r\n                    >\r\n                        <Icon path = '/img/close.svg' />\r\n                    </button>\r\n                    <h3>Instruments</h3>\r\n                    {\r\n                        instrumentActive ? \r\n                        <p className = 'TextComponent'>{this.state.componentStats.type}</p>\r\n                        : null\r\n                    }\r\n                    {\r\n                        instrumentActive ?\r\n                        <div className = 'instuments'>\r\n                            {this.makePanelInstruments(this.state.componentStats.type)}\r\n                        </div>\r\n                        : null\r\n                    }\r\n                </div>\r\n            </Fragment>\r\n        )\r\n    };\r\n\r\n    componentDidUpdate = (oldProps, oldState) => {\r\n        if (oldState.componentStats !== this.state.componentStats)\r\n        this.saveChanges();\r\n    };\r\n\r\n    componentDidMount = event => {\r\n        eventEmitter.on('EventRedirectSaveChanges', this.redirectSaveChanges);\r\n        eventEmitter.on(\"EventSetBImageInstumentPanel\", this.updateBimageStats);\r\n        eventEmitter.on(`EventSetIframe`, this.setIframeContent);\r\n        controllerStream.on(`EventUpdatePosition${this.state.componentStats.id}`, this.updatePosition);\r\n    };\r\n\r\n    componentWillUnmount = event => {\r\n        if (this.timer) clearTimeout(this.timer);\r\n        eventEmitter.off('EventRedirectSaveChanges', this.redirectSaveChanges);\r\n        eventEmitter.off(\"EventSetBImageInstumentPanel\", this.updateBimageStats);\r\n        eventEmitter.off(`EventSetIframe`, this.setIframeContent);\r\n        controllerStream.off(`EventUpdatePosition${this.state.componentStats.id}`, this.updatePosition);\r\n    };\r\n};\r\n\r\nexport default InstrumentsPanel;","import React,{Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Viewer from '../imageViewer/Viewer';\r\nimport InstrumentsPanel from '../../components/instrumentsPanel/InstrumentsPanel';\r\nimport ModalWindow from '../../components/modalWindow/ModalWindow';\r\n\r\n\r\n\r\nconst AdditionalTools = props => {\r\n\r\n    return (\r\n        <Fragment key = 'AdditionalBuild'>\r\n            {   props.modalViewer.action &&\r\n                    <Viewer \r\n                        key = 'ImageViewer'\r\n                        eventStreamBuild = {props.eventStreamBuild}\r\n                        mode = {props.modalViewer.mode}\r\n                        path = {props.modalViewer.target}\r\n                        iframe = {props.modalViewer.iframe}\r\n                    />\r\n            }\r\n            {   props.modalSearch &&\r\n                    <ModalWindow\r\n                        eventStreamBuild = {props.eventStreamBuild}\r\n                        idComponent = {props.componentStats.id}\r\n                        modalSearchMode = {props.modalSearchMode}\r\n                        key = 'ModalWindow' workMode = 'Search'\r\n                    />\r\n            }\r\n                <InstrumentsPanel\r\n                    key = {`InstrumentsPanel${props.componentStats.id}`}\r\n                    eventStreamBuild = {props.eventStreamBuild}\r\n                    editComponentName = {props.editComponentName}\r\n                    componentStats = {props.componentStats}\r\n                    instrumentPanel = {props.instrumentPanel}\r\n                />\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nAdditionalTools.propTypes = {\r\n    eventStreamBuild: PropTypes.object.isRequired, // events stream\r\n    componentStats: PropTypes.object.isRequired, // current components data\r\n    instrumentPanel: PropTypes.object.isRequired, // instruments data\r\n    modalViewer: PropTypes.object.isRequired, // Viewer data\r\n}\r\n\r\nexport default AdditionalTools;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Input from '../buildComponents/components/Input';\r\nimport Media from '../buildComponents/components/Media';\r\nimport Image from '../buildComponents/components/Image';\r\nimport TextComponent from '../buildComponents/components/Text';\r\nimport BackgroundComponent from '../buildComponents/components/Background';\r\n\r\nimport './buildMenu.scss';\r\n\r\nclass BuildMenu extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        mode: PropTypes.string.isRequired, /** @String work mode component */\r\n        editComponentName: PropTypes.string,\r\n        eventStreamBuild: PropTypes.object, /** @Events stream build */\r\n        countSection: PropTypes.number, /** @Number for new section id */\r\n        countComponents: PropTypes.number, /** @Number last project */\r\n        sizeParentBox: PropTypes.object /** @Object with width and height parent(bg) */\r\n    }\r\n\r\n\r\n    state = {\r\n        mode: this.props.mode,\r\n        sizeParentBox: {...this.props.sizeParentBox},\r\n        title: 'Title'\r\n    }\r\n\r\n    addText = event => {\r\n        let id = Math.random().toFixed(3);\r\n\r\n        const componentsPatternText = {\r\n            type: 'text',\r\n            font: 'Arial',\r\n            color: null,\r\n            opacity: 1,\r\n            fontSize: null,\r\n            content: 'Title',\r\n            coords: {x: null, y: null}, // x, y\r\n            id: id,\r\n            targetSection: this.props.editComponentName,\r\n        };\r\n        this.props.eventStreamBuild.emit('EventBuildComponents',{\r\n            componentsPattern: componentsPatternText,\r\n            type: componentsPatternText.type,\r\n            component: <TextComponent\r\n                            key = {`text${id}`}\r\n                            mode = 'dev'\r\n                            {...componentsPatternText}\r\n                            sizeParentBox = {{...this.props.sizeParentBox}}\r\n                            id = {id}\r\n                        >Title</TextComponent>\r\n        });\r\n        event.stopPropagation();\r\n    }\r\n\r\n    addBackground = event => {\r\n        let id = Math.random().toFixed(3);\r\n\r\n        const componentsPatternBackground = {\r\n            id: id,\r\n            type: 'background',\r\n            backgroundColor: null,\r\n            backgroundImage: null,\r\n            targetSection: this.state.editComponentName,\r\n        };\r\n\r\n        this.props.eventStreamBuild.emit('EventBuildComponents',{\r\n            componentsPattern: componentsPatternBackground,\r\n            type: componentsPatternBackground.type,\r\n            component: <BackgroundComponent\r\n                            targetSection = {this.props.editComponentName}\r\n                            {...componentsPatternBackground}\r\n                            key = {`bg${id}`}\r\n                            id = {id}\r\n                        />\r\n        });\r\n\r\n        event.stopPropagation();\r\n    }\r\n\r\n    addImage = event => {\r\n        let id = Math.random().toFixed(3);\r\n\r\n        const componentsPatternImage = {\r\n            borderRadius: 0,\r\n            type: 'image',\r\n            size: {w: 30, h: 50},\r\n            opacity: 1,\r\n            zIndex: null,\r\n            image: '/img/photoPattern.svg',\r\n            coords: {x: null, y: null}, // x, y\r\n            id: id,\r\n            targetSection: this.props.editComponentName,\r\n        };\r\n        this.props.eventStreamBuild.emit('EventBuildComponents',{\r\n            componentsPattern: componentsPatternImage,\r\n            type: componentsPatternImage.type,\r\n            component: <Image\r\n                            key = {`image${id}`}\r\n                            sizeParentBox = {this.props.sizeParentBox}\r\n                            id = {id}\r\n                            mode = 'dev'\r\n                            path = {'/img/photoPattern.svg'}\r\n                            {...componentsPatternImage}\r\n                            type = 'image' />\r\n        });\r\n        event.stopPropagation();\r\n    }\r\n\r\n    addMedia = event => {\r\n        let id = Math.random().toFixed(3);\r\n\r\n        const  componentsPatternMedia = {\r\n            type: 'media',\r\n            size: {w: null, h: null},\r\n            content: null,\r\n            coords: {x: null, y: null}, // x, y\r\n            id: id,\r\n            targetSection: this.props.editComponentName,\r\n        };\r\n\r\n        this.props.eventStreamBuild.emit('EventBuildComponents', {\r\n            componentsPattern: componentsPatternMedia,\r\n            type: componentsPatternMedia.type,\r\n            component: <Media\r\n                            key = {`media${id}`}\r\n                            targetSection = {this.props.editComponentName}\r\n                            sizeParentBox = {this.props.sizeParentBox}\r\n                            content = {null}\r\n                            id = {id}\r\n                            path = {'/img/photoPattern.mp4'}\r\n                            {...componentsPatternMedia}\r\n                            type = 'media'\r\n                            mode = 'dev'\r\n                        />\r\n        });\r\n        event.stopPropagation();\r\n    }\r\n\r\n    addInput = event => {\r\n        let id = Math.random().toFixed(3);\r\n\r\n        const  componentsPatternInput = {\r\n            type: 'input',\r\n            size: {w: null, h: null},\r\n            typeInput: 'button',\r\n            color: null,\r\n            fontSize: null,\r\n            borderRadius: null,\r\n            content: null,\r\n            coords: {x: null, y: null}, // x, y\r\n            id: id,\r\n            targetSection: this.props.editComponentName,\r\n        };\r\n\r\n        this.props.eventStreamBuild.emit('EventBuildComponents', {\r\n            componentsPattern: componentsPatternInput,\r\n            type: componentsPatternInput.type,\r\n            component: <Input\r\n                            key = {`input${id}`}\r\n                            targetSection = {this.props.editComponentName}\r\n                            sizeParentBox = {this.props.sizeParentBox}\r\n                            id = {id}\r\n                            inputType = 'button'\r\n                            {...componentsPatternInput}\r\n                            type = 'input'\r\n                            mode = 'dev'\r\n                        />\r\n        });\r\n        event.stopPropagation();\r\n    }\r\n\r\n    addSection = event => {\r\n        let id = Math.random().toFixed(3);\r\n\r\n        const componentsPatternBackground = {\r\n            backgroundColor: null,\r\n            backgroundImage: null,\r\n            targetSection: `Section${id}`,\r\n            id: `Section${id}`,\r\n            type: 'background',\r\n        };\r\n        this.props.eventStreamBuild.emit('EventNewSection', {\r\n            componentsPattern: componentsPatternBackground,\r\n            component: <BackgroundComponent\r\n                            {...componentsPatternBackground}\r\n                            key = {`bg${id}`}\r\n                            id = {id}\r\n                            targetSection = {`Section${id}`}\r\n                            width = '100%'\r\n                            height = '800px'\r\n                            type = 'background'\r\n                            mode = 'dev'\r\n                        />\r\n        });\r\n        event.stopPropagation();\r\n    }\r\n\r\n    render(){\r\n\r\n        if (this.state.mode === 'build'){\r\n            return (\r\n                <div className = 'ComponentsMenu'>\r\n                    <button \r\n                        onClick = {this.addImage} \r\n                        className = 'ImageTool CompoentnsMenu_button' \r\n                    >\r\n                        <span>Image</span>\r\n                    </button>\r\n                    <button \r\n                        onClick = {this.addText} \r\n                        className = 'TextTool CompoentnsMenu_button' >\r\n                        <span>Text</span>\r\n                    </button>\r\n                    <button\r\n                        onClick = {this.addInput}\r\n                        disabled = {this.props.editComponentName !== 'Header' ? false : true}\r\n                        className = 'ButtonTool CompoentnsMenu_button' >\r\n                        <span>Button</span>\r\n                    </button>\r\n                    <button onClick = {this.addMedia}\r\n                        className = 'VideoTool CompoentnsMenu_button'\r\n                    >\r\n                        <span>Video</span>\r\n                    </button>\r\n                </div>\r\n            )\r\n        } else if (this.state.mode === 'section') {\r\n            return (\r\n                <div className = 'sectionMode'>\r\n                    <button\r\n                        onClick = {this.addSection}\r\n                        className = 'newSectionTool CompoentnsMenu_button'\r\n                    >\r\n                        <span>New section</span>\r\n                    </button>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default BuildMenu;","import React,{Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Icon from '../Icon/icon';\r\nimport BuildMenu from '../componentsBuildMenu/BuildMenu';\r\n\r\n\r\nclass Controllers extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        countComponents: PropTypes.number.isRequired, /** @number last project id */\r\n        sizeParentBox: PropTypes.object, /** @Object with width and height parent(bg) */\r\n        eventStreamBuild: PropTypes.object, /** @Events stream */\r\n        menuActive: PropTypes.bool, /** @Bool value active menu or unactive */\r\n    }\r\n\r\n    state = {\r\n        viewComponentMenu: false,\r\n        editComponentName: this.props.editComponentName,\r\n        shiftX: 0,\r\n        shiftY: 0,\r\n        coordsX: '50%',\r\n        coordsY: '0',\r\n        shadowDisplay: 'block'\r\n    }\r\n\r\n    componentMenu = event => {\r\n        this.setState({viewComponentMenu: this.state.viewComponentMenu ? false : true});\r\n        event.stopPropagation();\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <Fragment>\r\n            {\r\n                <div\r\n                ref = {this.refControll}\r\n                className = 'ControllersEditComponent'\r\n                onClick = {this.componentMenu}\r\n                >\r\n                    <Icon\r\n                        onClick = {this.componentMenu}\r\n                        className = 'addButton'\r\n                        path = '/img/addButton.png'\r\n                    />\r\n                    { this.state.viewComponentMenu ?\r\n                        <BuildMenu\r\n                            key = {`buildMenu ${this.state.editComponentName}`}\r\n                            mode = 'build'\r\n                            eventStreamBuild = {this.props.eventStreamBuild}\r\n                            editComponentName = {this.state.editComponentName}\r\n                            sizeParentBox = {this.props.sizeParentBox}\r\n                            countComponents = {this.props.countComponents}\r\n                        /> : null\r\n                    }\r\n                </div>\r\n            }\r\n            </Fragment>\r\n        )\r\n    }\r\n\r\n    componentDidUpdate = () => {\r\n        if (this.props.editComponentName !== this.state.editComponentName)\r\n            this.setState({\r\n                ...this.state,\r\n                editComponentName: this.props.editComponentName\r\n            })\r\n    }\r\n\r\n}\r\n\r\nexport default Controllers;","import React,{Fragment} from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport {Redirect} from 'react-router-dom';\r\nimport eventEmitter from '../../EventEmitter';\r\nimport EventBuild from 'events';\r\nimport {loadCurrentProjectAction, exitProjectAction} from '../../redux/actions';\r\n\r\nimport {middlewareDeleteProjectComponent} from '../../redux/middleware/middlewareDelete';\r\nimport updateMiddleware from '../../redux/middleware/updateMiddleware';\r\nimport withFirebase from '../../components/firebaseHOC';\r\nimport {connect} from 'react-redux';\r\n\r\nimport AdditionalTools from '../../components/additionalTools/additionalTools';\r\nimport builderHOC from '../../components/builderHOC';\r\nimport Controllers from '../../components/controllers/controllers';\r\nimport Loader from '../../components/loading/Loader';\r\nimport Header from '../../components/header/Header';\r\nimport Section from '../../components/buildComponents/section';\r\nimport BuildMenu from '../../components/componentsBuildMenu/BuildMenu';\r\n\r\nimport './build.scss';\r\n\r\nimport Input from '../../components/buildComponents/components/Input';\r\nimport Media from '../../components/buildComponents/components/Media';\r\nimport Image from '../../components/buildComponents/components/Image';\r\nimport TextComponent from '../../components/buildComponents/components/Text';\r\nimport BackgroundComponent from '../../components/buildComponents/components/Background';\r\n\r\nclass Build extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        firebase: PropTypes.object.isRequired, /** @firebase class for use firebase functions */\r\n        active: PropTypes.bool, /** @active - status firebase auth */\r\n        dispatch: PropTypes.func.isRequired, /** @dispatch - redux */\r\n        history: PropTypes.object, /** @Router HTML5 history */\r\n        location: PropTypes.object, /** @Router */\r\n        match: PropTypes.object.isRequired, /** @Router */\r\n        userData: PropTypes.object.isRequired, /** @UserData data about projects,user and current edit prject */\r\n    }\r\n\r\n    state = {\r\n            idProject: parseInt(this.props.match.params.param),\r\n            editStart: false,\r\n            isChange: false,\r\n            isLoadComponents: true,\r\n            projectEmpty: false,\r\n            componentStats: {},\r\n            componentJSX: [],\r\n            instrumentPanel: {\r\n                colorPickerActive: false,\r\n                instrumentActive: false,\r\n            },\r\n            editComponentName:  null,\r\n            menuActive: false,\r\n            modalSearch: false,\r\n            modalSearchMode: null,\r\n            modalViewer: {action: false, image: null, mode: null },\r\n            sizeParentBox: null,\r\n        }\r\n\r\n        eventEmitterBuild = new EventBuild(); // events stream for controllers\r\n        timer = null; // save timer\r\n\r\n    modalSearchOn = itemEvent => {\r\n        const modeHave = itemEvent.hasOwnProperty('mode');\r\n        this.setState({\r\n            ...this.state, \r\n            modalSearch: !this.state.modalSearch,\r\n            modalSearchMode: modeHave ? itemEvent.mode : null\r\n        });\r\n    }\r\n\r\n    ViewerSwitch = itemEvent => {\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            modalViewer: {\r\n                ...this.state.modalViewer,\r\n                action: itemEvent.action,\r\n                target: itemEvent.target,\r\n                mode: itemEvent.mode,\r\n                iframe: itemEvent.iframe\r\n            }\r\n        });\r\n    };\r\n\r\n    workModeEdit = itemEvent => {\r\n\r\n        if (itemEvent.editStart)\r\n        this.setState({\r\n            ...this.state,\r\n            editStart: itemEvent.editStart,\r\n            editComponentName: itemEvent.targetSection,\r\n            menuActive: true,\r\n        });\r\n\r\n    }\r\n\r\n    openInstrument = itemEvent => {\r\n            const idEqual = this.state.componentStats.id === itemEvent.componentStats.id;\r\n            if (!idEqual || !this.state.instrumentPanel.instrumentActive)\r\n            this.setState({\r\n                ...this.state,\r\n                editComponentName: itemEvent.targetSection,\r\n                componentStats: {\r\n                    ...this.state.componentStats,\r\n                    ...itemEvent.componentStats\r\n                },\r\n                instrumentPanel: {\r\n                    ...this.state.instrumentPanel,\r\n                    instrumentActive: true,\r\n                }\r\n            });\r\n    }\r\n\r\n    closePanel = itemEvent => {\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            instrumentPanel: {\r\n                ...this.state.instrumentPanel,\r\n                colorPickerActive: false,\r\n                instrumentActive: itemEvent.close\r\n            }\r\n        });\r\n    };\r\n\r\n    deleteComponent = eventItem => {\r\n        let {currentProjectsData} = this.props.userData;\r\n        let {componentJSX} = this.state;\r\n\r\n        const data = {\r\n            id: this.state.idProject,\r\n            uid: this.props.userData.idUser,\r\n            idComponent: eventItem.id,\r\n            sectionsProject: [...currentProjectsData.sectionsProject],\r\n            type: eventItem.type\r\n        }\r\n\r\n        this.props.dispatch(middlewareDeleteProjectComponent(data))\r\n        .then(id => {\r\n            if (id !== null){\r\n               const _componentJSX = componentJSX.filter(item => item.id !== id);\r\n            this.setState({\r\n                ...this.state,\r\n                componentJSX: _componentJSX\r\n            });\r\n        }\r\n        });\r\n    }\r\n\r\n    addComponentsFromBD = array => {\r\n\r\n        let {componentJSX} = this.state;\r\n        let componentsFromDB = [];\r\n\r\n        array.forEach(item => {\r\n            if (item.type !== 'background'){\r\n\r\n                let props = {\r\n                    sizeParentBox: {\r\n                        width: this.mainComponent.data.width,\r\n                        height: this.mainComponent.data.height,\r\n                        top: this.mainComponent.data.top,\r\n                        left: this.mainComponent.data.left,\r\n                    },\r\n                    ...item,\r\n                    mode: 'dev',\r\n                }\r\n                let Component = null;\r\n                    if (item.type === 'background') Component = BackgroundComponent;\r\n                    else if (item.type === 'input') Component = Input;\r\n                    else if (item.type === 'media') Component = Media;\r\n                    else if (item.type === 'image') Component = Image;\r\n                    else if (item.type === 'text') Component = TextComponent;\r\n                const patternJSX = {\r\n                    id: item.id,\r\n                    targetSection: item.targetSection,\r\n                    component: builderHOC(props)(Component)\r\n                };\r\n                componentsFromDB.push(patternJSX);\r\n            }\r\n        });\r\n            this.setState({\r\n                ...this.state,\r\n                isLoadComponents: false,\r\n                componentJSX: [...componentJSX, ...componentsFromDB],\r\n            });\r\n    };\r\n\r\n    addComponent = itemEvent => {\r\n        let {componentJSX} = this.state;\r\n        let {componentsPattern} = itemEvent;\r\n\r\n        const patternJSX = {\r\n            id: componentsPattern.id,\r\n            targetSection: componentsPattern.targetSection,\r\n            component: itemEvent.component\r\n        };\r\n            this.setState({\r\n                ...this.state,\r\n                componentJSX: [...componentJSX, patternJSX],\r\n            });\r\n    };\r\n\r\n    saveChangesComponent = itemEvent => {\r\n\r\n        const {ms} = itemEvent;\r\n        if (this.timer) clearTimeout(this.timer);\r\n\r\n        this.timer = setTimeout(() => {\r\n            const {currentProjectsData} = this.props.userData;\r\n            const {userData} = this.props;\r\n            let findCurrentItem = false;\r\n            const _components = currentProjectsData.components.map(item => {\r\n                if (item.id === itemEvent.id) { findCurrentItem = true; return {...itemEvent}; }\r\n                return item;\r\n            });\r\n\r\n            if (!findCurrentItem) _components.push(itemEvent);\r\n\r\n            this.props.dispatch(updateMiddleware({\r\n                uid: userData.idUser,\r\n                projects: [...userData.projects],\r\n                components: _components,\r\n                sectionsProject: [...currentProjectsData.sectionsProject],\r\n                idProject: this.state.idProject\r\n            })).then(() =>\r\n                eventEmitter.emit('EventRedirectConfirm', {false: false, confirm: false}));\r\n        },ms);\r\n    };\r\n\r\n    mainComponent = null;\r\n    mainRefComponent = node => node ?\r\n        this.mainComponent = {data: node.getBoundingClientRect(), node: node} : node;\r\n\r\n    addNewSection = eventItem => {\r\n\r\n        const {userData} = this.props;\r\n        const {currentProjectsData} = userData;\r\n\r\n        this.props.dispatch(updateMiddleware({\r\n                uid: userData.idUser,\r\n                projects: [...userData.projects],\r\n                components: [...currentProjectsData.components,\r\n                            eventItem.componentsPattern],\r\n                sectionsProject: [\r\n                    ...currentProjectsData.sectionsProject,\r\n                    eventItem.componentsPattern.id\r\n                ],\r\n                idProject: this.state.idProject\r\n        })).then(() => {\r\n            this.setState({\r\n                ...this.state,\r\n                componentJSX:[\r\n                    ...this.state.componentJSX,\r\n                    eventItem.component\r\n                ]\r\n            }, () => {\r\n                eventEmitter.emit('EventSetState', currentProjectsData.sectionsProject.length);\r\n            });\r\n        });\r\n}\r\n\r\n    render(){\r\n\r\n        if (this.state.projectEmpty) return <Redirect to = '/Cabinet' />\r\n\r\n        const {instrumentActive} = this.state.instrumentPanel;\r\n        const {userData} = this.props;\r\n        const {currentProjectsData} = userData;\r\n        const section = currentProjectsData.sectionsProject;\r\n\r\n        if (userData.active && currentProjectsData.loadProject){\r\n            return (\r\n                <Fragment>\r\n                    <Header key = 'Header' title = \"Constructor\" idUser = {userData.idUser}  />\r\n                    <div\r\n                        ref = {this.mainRefComponent} \r\n                        onMouseMove = {this.showAddSection} \r\n                        className = 'Build' \r\n                        key = 'Build'\r\n                    >\r\n                        { this.state.editStart &&\r\n                        <Controllers\r\n                            key = 'controllers'\r\n                            eventStreamBuild = {this.eventEmitterBuild}\r\n                            editComponentName = {this.state.editComponentName}\r\n                            countComponents = {currentProjectsData.components.length}\r\n                            menuActive = {this.state.menuActive}\r\n                            sizeParentBox = {this.state.sizeParentBox}\r\n                        />\r\n                        }\r\n                            <BuildMenu\r\n                                key = 'buildMenu'\r\n                                eventStreamBuild = {this.eventEmitterBuild}\r\n                                countSection = {this.state.componentJSX.length * 5}\r\n                                mode = \"section\"\r\n                                className = 'menu'\r\n                            />\r\n                        {instrumentActive && \r\n                            <AdditionalTools key = 'tools'\r\n                                eventStreamBuild = {this.eventEmitterBuild}\r\n                                modalViewer = {this.state.modalViewer}\r\n                                componentStats = {this.state.componentStats}\r\n                                editComponentName = {this.state.editComponentName}\r\n                                instrumentPanel = {this.state.instrumentPanel}\r\n                                modalSearchMode = {this.state.modalSearchMode}\r\n                                modalSearch = {this.state.modalSearch}\r\n                                \r\n                            />}\r\n                        {section.length &&\r\n                             <Section mode = 'dev' key = 'section'\r\n                                    componentJSX = {this.state.componentJSX}\r\n                                    editComponentName = {this.state.editComponentName}\r\n                                    menuActive = {this.state.menuActive}\r\n                                    sizeParentBox = {this.state.sizeParentBox}\r\n                                    userData = {userData}\r\n                                />\r\n                        }\r\n                    </div>\r\n                </Fragment>\r\n            )\r\n        } else if (!this.props.firebase.getCurrentUser()) return <Redirect to = '/' />\r\n        else return <Loader  key = 'Loader' path = '/img/loading.gif' type = 'build' />\r\n    }\r\n\r\n    componentDidUpdate = (prevProps) => {\r\n\r\n        let {userData} = this.props;\r\n        let {currentProjectsData} = userData;\r\n        const isLoadComponents = this.state.isLoadComponents;\r\n        let sizeParentBox = null;\r\n\r\n        if (this.mainComponent && this.state.sizeParentBox === null)\r\n            sizeParentBox = {\r\n                width: this.mainComponent.data.width,\r\n                height: this.mainComponent.data.height,\r\n                top: this.mainComponent.data.top,\r\n                left: this.mainComponent.data.left,\r\n            }\r\n\r\n        if (userData.active && !currentProjectsData.loadProject) {\r\n            const current =  userData.projects.find(item => item.id === this.state.idProject)\r\n            if (current){\r\n                this.props.dispatch(loadCurrentProjectAction({\r\n                    id: current.id,\r\n                    typeProject: current.type,\r\n                    sectionsProject: [...current.sectionsProject],\r\n                    components: [...current.components]\r\n                }))\r\n\r\n            } else this.setState({...this.state, projectEmpty: true, sizeParentBox: sizeParentBox});\r\n        }\r\n        if (currentProjectsData.loadProject && isLoadComponents) {\r\n            if (this.state.sizeParentBox === null && sizeParentBox !== null)\r\n            this.setState({\r\n                ...this.state,\r\n                sizeParentBox: sizeParentBox\r\n            }, () => this.addComponentsFromBD([...currentProjectsData.components]));\r\n            else this.addComponentsFromBD([...currentProjectsData.components]);\r\n            eventEmitter.emit('EventSetState',currentProjectsData.sectionsProject.length-1);\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        let {userData} = this.props;\r\n        let {currentProjectsData} = userData;\r\n\r\n        if (userData.active && !currentProjectsData.loadProject) {\r\n\r\n            const current =  userData.projects.find(item => item.id === this.state.idProject)\r\n            this.props.dispatch(loadCurrentProjectAction({\r\n                id: current.id,\r\n                sectionsProject: [...current.sectionsProject],\r\n                typeProject: current.type,\r\n                components: [...current.components]\r\n            }));\r\n        };\r\n\r\n        eventEmitter.on('EventInstrumentPanel', this.openInstrument);\r\n        eventEmitter.on('EventModeEdit', this.workModeEdit);\r\n        this.eventEmitterBuild.on('EventBuildComponents', this.addComponent);\r\n        this.eventEmitterBuild.on('EventDeleteComponent', this.deleteComponent);\r\n        this.eventEmitterBuild.on('EventNewSection', this.addNewSection);\r\n        this.eventEmitterBuild.on('EventSaveChangesComponent', this.saveChangesComponent);\r\n        this.eventEmitterBuild.on('EventClosePanel', this.closePanel);\r\n        this.eventEmitterBuild.on('EventModalSearchOn', this.modalSearchOn);\r\n        this.eventEmitterBuild.on('EventView', this.ViewerSwitch);\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n\r\n        let {userData} = this.props;\r\n        if (userData.active)  this.props.dispatch(exitProjectAction(true));\r\n\r\n        eventEmitter.off('EventInstrumentPanel', this.openInstrument);\r\n        eventEmitter.off('EventModeEdit', this.workModeEdit);\r\n        this.eventEmitterBuild.off('EventBuildComponents', this.addComponent);\r\n        this.eventEmitterBuild.off('EventDeleteComponent', this.deleteComponent);\r\n        this.eventEmitterBuild.off('EventNewSection', this.addNewSection);\r\n        this.eventEmitterBuild.off('EventSaveChangesComponent', this.saveChangesComponent);\r\n        this.eventEmitterBuild.off('EventModalSearchOn', this.modalSearchOn);\r\n        this.eventEmitterBuild.off('EventClosePanel', this.closePanel);\r\n        this.eventEmitterBuild.off('EventView', this.ViewerSwitch);\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        userData: {\r\n            active: state.cabinet.active,\r\n            idUser: state.cabinet.idUser,\r\n            projects: [...state.cabinet.projects],\r\n           currentProjectsData: {...state.builder}\r\n        },\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(withFirebase(Build));\r\n","import React from 'react';\r\nimport eventEmitter from '../EventEmitter';\r\n\r\nimport {animateScroll as scroll, scroller } from \"react-scroll\";\r\n\r\nclass ScrollMove extends React.PureComponent {\r\n\r\n    state = {\r\n        mode: 'default',\r\n        scrollConfig: {\r\n            duration: 1000,\r\n            delay: 50,\r\n            smooth: true,\r\n            offset: 60\r\n        },\r\n        position: 0,\r\n        positionCount: null\r\n\r\n    }\r\n\r\n    setStates = event => {\r\n        this.setState({...this.state,positionCount: event});\r\n    }\r\n\r\n    blockMove = event => {\r\n        this.setState({...this.state, mode: event})\r\n    }\r\n\r\n    moveLocation = event => {\r\n\r\n        if (this.state.mode === 'default'){\r\n            const count = this.state.positionCount;\r\n            const moveDown = this.state.position < count && event.deltaY > 0;\r\n            const moveUp = event.deltaY < 0 && this.state.position > 0;\r\n            eventEmitter.emit('EventClosePanel',{close: false});\r\n\r\n            if (moveDown)\r\n                this.setState({ position: this.state.position + 1},\r\n                    () => scroller.scrollTo(`element${this.state.position}`,this.state.scrollConfig));\r\n                else if (moveUp){\r\n                    this.state.position === 1 &&\r\n                        this.setState({position: this.state.position - 1}, () => scroll.scrollToTop());\r\n                    this.state.position !== 1 &&\r\n                        this.setState({position: this.state.position - 1},\r\n                            () => scroller.scrollTo(`element${this.state.position}`,this.state.scrollConfig));\r\n                }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    render(){\r\n        return (\r\n            <div key = 'moveScroll' onWheel = {this.moveLocation} onTouchStart = {() => false}\r\n            >\r\n                {this.props.children}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        eventEmitter.on('EventBlockScroll', this.blockMove);\r\n        eventEmitter.on('EventSetState', this.setStates);\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        eventEmitter.off('EventBlockScroll', this.blockMove);\r\n        eventEmitter.off('EventSetState', this.setStates);\r\n    }\r\n}\r\n\r\n\r\nexport default ScrollMove;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport {Route, Switch} from 'react-router-dom';\r\n\r\nimport {middlewareLoadUserData} from './redux/middleware/loadUserMiddleware';\r\nimport {connect} from 'react-redux';\r\nimport withFirebase from './components/firebaseHOC';\r\nimport Loader from './components/loading/Loader';\r\n\r\nimport Index from './Pages/Index/Index';\r\nimport Cabinet from './Pages/Cabinet/Cabinet';\r\nimport Production from './Pages/Production/Production';\r\nimport About from './Pages/About/About';\r\nimport Build from './Pages/Build/Build';\r\nimport ErrorPage from './components/ErrorCatch/ErrorPage';\r\nimport ScrollMove from './components/ScrollMove';\r\n\r\nclass App extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        config: PropTypes.object.isRequired, /** @Config app */\r\n        firebase: PropTypes.object.isRequired, /** @firebase class for use firebase functions */\r\n        dispatch: PropTypes.func.isRequired, /** @dispatch - redux */\r\n    }\r\n\r\n    state = {\r\n        firebase: this.props.firebase,\r\n        firebaseLoadState: false,\r\n    }\r\n\r\n    componentDidMount(){\r\n\r\n        this.props.firebase.auth.onAuthStateChanged((user) => {\r\n\r\n            if (!this.state.firebaseLoadState){\r\n                if (user) this.props.dispatch(middlewareLoadUserData(user.uid));\r\n                this.setState({...this.state, firebaseLoadState: true});\r\n            }\r\n        });\r\n    }\r\n\r\n    render(){\r\n        if (this.state.firebaseLoadState){\r\n            return (\r\n                <Switch>\r\n                    <Route\r\n                        path = {'/'} exact\r\n                        render = {(props) => <Index {...props} />}\r\n                    />\r\n                    <Route path = '/Cabinet/' exact component = {Cabinet}/>\r\n                    <Route\r\n                        path = {'/Cabinet/About'}\r\n                        render = {(props) => <About {...props} config = {this.props.config} />}\r\n                    />\r\n                    <Route path = {'/Cabinet/Build/:param'} exact \r\n                        render = {(props) => <ScrollMove><Build {...props}></Build></ScrollMove>}\r\n                    />\r\n                    <Route path = {'/Cabinet/Build/:param/Production'} exact component = {Production} />\r\n                    <Route path = {'*'} component = {Index} />\r\n                    <Route path = {'/crashPage'} component = {ErrorPage} />\r\n                </Switch>\r\n            )\r\n        } else return <Loader path = { '/img/loading.gif'} type = 'application' />\r\n    }\r\n}\r\n\r\nexport default connect()(withFirebase(App));","\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\n\nimport firebase from './Firebase/Firebase';\nimport ErrorBoundary from './components/ErrorCatch/ErrorBoundary';\nimport {HashRouter } from 'react-router-dom';\nimport {Provider} from 'react-redux';\nimport store from './redux/store';\nimport App from './App.jsx';\nimport 'normalize.css';\n\nimport firebaseContext from './Firebase/firebaseContext';\n\nfirebase.saveSession('SESSION');\nconst config = require('./config.json');\nconsole.time();\nReactDOM.render(\n        <HashRouter>\n            <ErrorBoundary>\n                <firebaseContext.Provider value = {firebase}>\n                    <Provider store = {store}>\n                        <App config = {config} />\n                    </Provider>\n                </firebaseContext.Provider>\n            </ErrorBoundary>\n        </HashRouter>,\n        document.getElementById('root')\n);\n\n\nserviceWorker.register();\n\n"],"sourceRoot":""}