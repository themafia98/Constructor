{"version":3,"sources":["serviceWorker.js","Firebase/firebaseConfig.js","Firebase/Firebase.js","EventEmitter.js","components/ErrorCatch/ErrorPage.jsx","components/ErrorCatch/ErrorBoundary.jsx","redux/actions.js","redux/reducerBuilder.js","redux/reducerCabinet.js","redux/reducers.js","redux/store.js","redux/middleware/loadUserMiddleware.js","Firebase/firebaseContext.js","components/firebaseHOC.jsx","components/loading/Loader.jsx","components/AnimationText/AnimationTitle.jsx","components/Registration/Registration.jsx","Pages/Index/Index.jsx","redux/middleware/middlewareDelete.js","components/Icon/icon.jsx","components/confirmBox/Confirm.jsx","components/header/Header.jsx","components/imageViewer/imageItem.jsx","components/modalWindow/createProject/createProject.jsx","components/modalWindow/Search/searchModal.jsx","components/modalWindow/ModalWindow.jsx","redux/middleware/createProjectMiddleware.js","components/List/Item.jsx","components/List/List.jsx","components/ProjectsSection/ProjectsSection.jsx","Pages/Cabinet/Cabinet.jsx","components/buildComponents/components/Background.jsx","components/buildComponents/MainBackground/MainBackground.jsx","components/buildComponents/section.jsx","components/builderHOC.jsx","components/buildComponents/components/Input.jsx","components/buildComponents/components/Media.jsx","components/buildComponents/components/Image.jsx","components/buildComponents/components/Text.jsx","Pages/Production/Production.jsx","Pages/About/About.jsx","redux/middleware/updateMiddleware.js","components/imageViewer/Viewer.jsx","components/instrumentsPanel/InputTools/InputInstruments.jsx","components/instrumentsPanel/MediaTools/MediaInstruments.jsx","components/instrumentsPanel/ImageTools/ImageInstruments.jsx","components/instrumentsPanel/BackgroundTools/BackgroundInstruments.jsx","components/instrumentsPanel/TextTools/TextInstruments.jsx","components/instrumentsPanel/InstrumentsPanel.jsx","components/additionalTools/additionalTools.jsx","components/componentsBuildMenu/BuildMenu.jsx","components/controllers/controllers.jsx","Pages/Build/Build.jsx","components/ScrollMove.jsx","App.jsx","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","firebaseConfig","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firebaseInterface","require","Firebase","Object","classCallCheck","this","firebase","auth","db","rules","setPersistence","Auth","Persistence","email","password","signInWithEmailAndPassword","createUserWithEmailAndPassword","signOut","currentUser","stream","EventEmitter","controllerStream","ErrorPage","redirect","update","event","_this","setState","eventEmitter","emit","react_default","a","createElement","react_router","to","class","className","onClick","React","Component","ErrorBoundary","hasError","updateApplication","componentDidMount","on","componentWillUnmount","off","info","ErrorCatch_ErrorPage","props","children","PureComponent","exitProjectAction","type","exit","loadCurrentProjectAction","id","typeProject","sectionsProject","components","loadUpdateCurrentProject","idProject","toConsumableArray","loadUserAction","active","idUser","uid","projects","errorAction","initialState","loadProject","combineReducers","builder","arguments","length","undefined","action","objectSpread","cabinet","map","item","middleware","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","thunk","withExtraArgument","store","createStore","middlewareLogin","_ref2","asyncToGenerator","regenerator_default","mark","_callee","dispatch","getState","_ref","wrap","_context","prev","next","login","response","collection","doc","user","get","docUser","data","message","stop","_x","_x2","_x3","apply","middlewareLogOutUser","_ref6","_callee3","_ref5","_context3","_x7","_x8","_x9","firebaseContext","createContext","withFirebase","Firebase_firebaseContext","Consumer","assign","loading_Loader","_useState","useState","path","slicedToArray","_useState3","mode","concat","src","alt","AnimationTitle","styled","h3","_templateObject","dir","AnimationText","tilteContent","content","split","currentTitle","positionTitle","directionAnimation","msAnimation","msTimeout","msPauseEnd","_isMounted","timerAnimation","animationTitle","timer","self","assertThisInitialized","setTimeout","tick","counter","word","_title","slice","e","clearTimeout","data-titlebuild","emailRef","passwordRef","setRefEmail","node","setRefPassword","createUser","value","Error","set","indexStream","autoComplete","placeHolder","ref","Index","Events","title","registrationActive","regStatus","wrongEnter","emailImput","passwordImput","statusRegistration","additionalUserInfo","isNewUser","showBox","stopPropagation","authTo","AnimationText_AnimationTitle","TransitionGroup","component","CSSTransition","timeout","unmountOnExit","classNames","components_Registration_Registration","connect","middlewareDeleteProjectComponent","_ref4","_callee2","_ref3","_context2","findProject","find","project","filter","idComponent","dataUpdate","abrupt","_x4","_x5","_x6","middlewareDelete","itemdb","Icon","_useState5","draggable","Confirm","cbSaveChanges","cbCancelSave","iconPath","CabinetIcon","Header","isChange","redirectConfirm","redirectAbout","redirectA","redirectCabinet","redirectC","confirm","false","confirmSaveDetectChanges","logOut","pathname","add","cabinetStream","componentWillMount","_this2","Fragment","components_confirmBox_Confirm","Icon_icon","withRouter","ImageItem","urls","regular","urlRegular","full","urlFull","_useState7","isFull","_useState9","urlContent","selected","url","iframe","CreateProject","disabled","validateName","name","validateType","typeClassName","nameLength","isNumber","warningLengthMin","warningLengthMax","warningNumber","onChange","cbValidateName","placeholder","warningType","cbSelectOption","cbAddNewProject","cbCancel","loading","SearchModal","modalSearchMode","items","images","search","refSearch","cbSearch","refSearchFunc","componentDidUpdate","prevProps","prevState","contentPrev","haveUpdate","isSelected","selectedId","_items","cbMakeImageResultBox","dissabled","menuActive","cbShowImage","cbSetSelectedImage","polyfill","ModalWindow","readyAnimation","workMode","buttonSearchDisabled","selectedItem","showUrl","imageBoxView","newProject","imageMenuActive","warning","lengthMax","lengthMin","inputSearch","inputSelect","searchData","inages","api","isFetch","ok","json","results","searchYouTubeAPI","RAITE","KEY","res","status","arrayItems","forEach","push","snippet","thumbnails","high","videoId","showMenuImage","showImage","_this$state$images","eventStreamBuild","target","setSelectedImage","makeImageResultBox","i","imageItem","key","Math","random","addNewProject","selectOption","inputs","defineProperty","test","cancel","refSelect","typeRenderModal","createProject","searchModal","loader","react","nextProps","nextState","middlewareCreateProject","list","lastProject","lastIndex","header","backgroundImage","backgroundColor","min","max","floor","targetSection","productionPath","_useState6","canBuild","setCanBuild","_useState8","canProd","setCanProd","_useState11","_useState13","data-id","List","makeList","List_Item","ProjectsSection","components_List_List","Cabinet","deletItem","getCurrentUser","changeWorkMode","header_Header","modalWindow_ModalWindow","components_ProjectsSection_ProjectsSection","Background","div","Background_templateObject","width","height","BackgroundComponent","background","color","boxComponent","boxComponentRef","saveDataParent","boxInform","getBoundingClientRect","countSection","sectionNumber","size","openBgInstruments","componentsPatternBackground","componentStats","changeColor","eventItem","colorRGB","setBackgroundImage","onDoubleClick","data-name","MainBackground","editRedy","changeMode","editStart","editComponentName","refSection","refSectionFunc","currentProjectsData","componentJSX","needUpdate","countComponents","data-class","components_Background","Section","userData","buildComponents_MainBackground_MainBackground","sizeParentBox","section","componentsProdJSX","builderHOC","InputComponent","input","attrs","style","zIndex","indexZ","left","coordX","top","coordY","Input_templateObject","w","h","fontSize","borderRadius","ProductionStyle","_templateObject2","Input","istrumentsActive","getSizeBool","typeInput","shiftCoords","posInput","coords","x","y","startDragNdrop","openInputInstruments","componentsPatternImage","sizeTextValue","saveCoords","nativeEvent","which","element","refInput","cords","right","bottom","clientX","clientY","changeSize","eventSize","changeSizeText","setBorderRadius","radius","borderDown","changeContent","checkPivotPosition","borderRight","delta","trans","transT","move","moveInput","num","xItem","yItem","convertToPercentX","convertToPercentY","toFixed","stopDragNdrop","saveSize","setWidth","setType","setHeight","refInputComponent","onMouseDown","onMouseMove","onMouseLeave","onMouseUp","onDragStart","data-imagecomponentwrapper","WrapperMedia","display","justifyContent","alignItems","padding","Media_templateObject","Media","Media_templateObject2","_templateObject3","MediaComponent","posMedia","drawContent","openMediaInstruments","componentsPatternMedia","refMedia","moveMedia","setContent","refMediaComponent","allowfullscreen","Media_ProductionStyle","WrapperImg","Image_templateObject","ImageStyle","img","Image_templateObject2","opacity","Image_templateObject3","Image","image","posImage","openImageInstruments","refImage","moveText","setCurrentImage","changeSizeImage","setOpacity","refImageComponent","data-imagecomponent","Image_ProductionStyle","crossOrigin","WrapperText","Text_templateObject","textColor","TextStyle","p","Text_templateObject2","font","Text_templateObject3","TextComponent","isHaveSize","parent","colorText","sizeText","position","contentText","openTitleInstruments","componentsPatternText","posText","changeColorText","changeContentText","eventContent","refText","setFont","sectionNum","refTextComponent","data-textcomponent","Text_ProductionStyle","Production","parseInt","params","param","projectEmpty","isLoadComponents","makeProduction","array","_components","prodRef","patternJSX","mainProductionRef","current","buildComponents_section","About","about","developer","year","updateMiddleware","newProjects","JSON","parse","stringify","Viewer","frameBorder","allow","allowFullScreen","InputInstruments","colorPickerActive","instrumentPanel","_content","cbSetColor","lib","onChangeComplete","cbHandleChangeComplete","cbSetWidth","cbSetHeight","cbSetSize","cbSetBorderRadius","cbSetType","cbSetContent","maxLength","cbDelete","MediaInstruments","ImageInstruments","fileRef","createRef","cbSetOpacity","step","cbLoadFile","accept","BackgroundInstruments","TextInstruments","cbSetFont","InstrumentsPanel","closePanel","close","setSize","fontName","setIframeContent","contentValue","updatePosition","setColor","updateBimageStats","handleChangeComplete","rgb","r","g","b","redirectSaveChanges","ms","saveChanges","deleteComponent","loadFile","files","reader","FileReader","readAsDataURL","onload","result","onerror","makePanelInstruments","TextTools_TextInstruments","BackgroundTools_BackgroundInstruments","ImageTools_ImageInstruments","MediaTools_MediaInstruments","InputTools_InputInstruments","oldProps","oldState","instrumentActive","AdditionalTools","modalViewer","imageViewer_Viewer","modalSearch","instrumentsPanel_InstrumentsPanel","BuildMenu","addText","componentsPattern","Text","addBackground","addImage","components_Image","addMedia","components_Media","addInput","componentsPatternInput","components_Input","inputType","addSection","Controllers","viewComponentMenu","shiftX","shiftY","coordsX","coordsY","shadowDisplay","componentMenu","refControll","componentsBuildMenu_BuildMenu","Build","eventEmitterBuild","EventBuild","modalSearchOn","itemEvent","modeHave","hasOwnProperty","ViewerSwitch","workModeEdit","openInstrument","_componentJSX","addComponentsFromBD","componentsFromDB","mainComponent","addComponent","saveChangesComponent","findCurrentItem","mainRefComponent","addNewSection","showAddSection","controllers_controllers","additionalTools","ScrollMove","scrollConfig","duration","delay","smooth","offset","positionCount","setStates","blockMove","moveLocation","count","moveDown","deltaY","moveUp","scroller","scrollTo","scroll","scrollToTop","onWheel","onTouchStart","App","firebaseLoadState","onAuthStateChanged","_this3","exact","render","Pages_Index_Index","Pages_About_About","components_ScrollMove","Pages_Build_Build","saveSession","time","ReactDOM","react_router_dom","ErrorCatch_ErrorBoundary","Provider","es","src_App","document","getElementById","URL","href","origin","addEventListener","fetch","contentType","headers","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.4e605611.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log('This web app is being served cache-first by a service worker.');\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","// setings in root folder / firebase.env\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n    databaseURL: process.env.REACT_APP_DATABASE_URL,\r\n    projectId: process.env.REACT_APP_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n    appId: process.env.REACT_APP_APPID\r\n};\r\n\r\nexport default firebaseConfig;","import * as firebase from 'firebase/app';\r\nimport firebaseConfig from './firebaseConfig';\r\n\r\nconst auth = require('firebase/auth');\r\nconst firestore = require('firebase/firestore');\r\n\r\nclass Firebase {\r\n\r\n    constructor(firebaseConfig){\r\n        firebase.initializeApp(firebaseConfig);\r\n        this.auth = firebase.auth();\r\n        this.db = firebase.firestore();\r\n    }\r\n\r\n    saveSession(rules){\r\n        return this.auth.setPersistence(firebase.auth.Auth.Persistence[rules]);\r\n    }\r\n\r\n    login(email, password){\r\n        try {\r\n            return this.auth.signInWithEmailAndPassword(email, password);\r\n        } catch (error) {\r\n            console.error(error);\r\n            return null;\r\n        }\r\n    }\r\n\r\n    registration(email, password){\r\n        return this.auth.createUserWithEmailAndPassword(email, password)\r\n    }\r\n\r\n    signOut(){\r\n        return this.auth.signOut()\r\n    }\r\n\r\n    getCurrentUser() {\r\n        return this.auth.currentUser\r\n    }\r\n}\r\n\r\nlet firebaseInterface = new Firebase(firebaseConfig);\r\n\r\nexport default firebaseInterface;\r\n\r\nexport { auth, firestore };\r\n\r\n","import {EventEmitter} from 'events';\r\n\r\nconst stream = new EventEmitter();\r\nconst controllerStream = new EventEmitter();\r\n\r\nexport {controllerStream};\r\nexport default stream;\r\n","import React from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\nimport eventEmitter from '../../EventEmitter';\r\n\r\nimport './errorPage.scss';\r\n\r\n\r\nclass ErrorPage extends React.Component {\r\n\r\n    state = {\r\n        redirect: false,\r\n    }\r\n\r\n    update = event => {\r\n       this.setState({redirect: true},\r\n        () => eventEmitter.emit('EventErrorCatchUpdate'));\r\n    }\r\n\r\n    render(){\r\n        if (this.state.redirect) return <Redirect to = '/' />\r\n        return (\r\n        <div class = 'container'>\r\n            <div class = 'flex-column ErrorPage'>\r\n                <h1>Application crash</h1>\r\n                <button className = 'ErrorPage__button_updateApp' onClick = {this.update}>Update</button>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ErrorPage;","\r\nimport React from 'react';\r\nimport eventEmitter from '../../EventEmitter';\r\nimport ErrorPage from './ErrorPage';\r\n\r\nclass ErrorBoundary extends React.PureComponent {\r\n\r\n      state = { \r\n        hasError: false,\r\n      };\r\n\r\n    static getDerivedStateFromError(error) {\r\n        console.log(error);\r\n      // Обновить состояние с тем, чтобы следующий рендер показал запасной UI.\r\n      return { hasError: true};\r\n    }\r\n\r\n    updateApplication = event => {\r\n      this.setState({hasError: false});\r\n    };\r\n  \r\n    componentDidCatch(error, info) {\r\n      // Можно также сохранить информацию об ошибке в соответствующую службу журнала ошибок\r\n     console.error(error + \",\" + info);\r\n    }\r\n  \r\n    render() {\r\n      if (this.state.hasError) return <ErrorPage />\r\n      return this.props.children;\r\n    }\r\n\r\n    componentDidMount = () => {\r\n      eventEmitter.on('EventErrorCatchUpdate',this.updateApplication);\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n      eventEmitter.off('EventErrorCatchUpdate',this.updateApplication);\r\n    }\r\n  }\r\n\r\n  export default ErrorBoundary;","const CREATE_PROJECT = 'CREATE_PROJECT';\r\nconst LOAD_UPDATE_PROJECT = \"LOAD_UPDATE_PROJECT\";\r\nconst LOAD_CURRENT = 'LOAD_CURRENT';\r\nconst LOG_OUT_CABINET = 'LOG_OUT_CABINET';\r\nconst LOAD_USER_CABINET = 'LOAD_USER_CABINET';\r\nconst ERROR_CABINET = 'ERROR_CABINET';\r\nconst EXIT_PROJECT = 'EXIT_PROJECT';\r\n\r\nconst createProjectAction = (state) => {\r\n    return {\r\n        type: CREATE_PROJECT,\r\n        projects: state,\r\n    }\r\n}\r\n\r\nconst exitProjectAction = (state) => {\r\n    return {\r\n        type: EXIT_PROJECT,\r\n        exit: state\r\n    }\r\n}\r\n\r\nconst loadCurrentProjectAction = (state) => {\r\n    return {\r\n        type: LOAD_CURRENT,\r\n        id: state.id,\r\n        typeProject: state.typeProject,\r\n        sectionsProject: state.sectionsProject,\r\n        components: state.components\r\n    }\r\n}\r\n\r\nconst loadUpdateCurrentProject = (state) => {\r\n    return {\r\n        type: LOAD_UPDATE_PROJECT,\r\n        idProject: state.idProject,\r\n        sectionsProject: [...state.sectionsProject],\r\n        components: [...state.components]\r\n    }\r\n}\r\n\r\nconst loadUserAction = (state) => {\r\n    return {\r\n        type: LOAD_USER_CABINET,\r\n        active: true,\r\n        idUser: state.uid,\r\n        error: '',\r\n        projects: state.projects\r\n    }\r\n}\r\n\r\nconst logOutAction = (state) => {\r\n\r\n    return {\r\n        type: LOG_OUT_CABINET,\r\n        active: false,\r\n        idUser: null,\r\n        error: '',\r\n        projects: []\r\n    }\r\n}\r\n\r\nconst errorAction = (state) => {\r\n    return {\r\n        type: ERROR_CABINET,\r\n        error: state\r\n    }\r\n}\r\n\r\nexport {\r\n    CREATE_PROJECT, createProjectAction, /* cabinet */\r\n    LOAD_USER_CABINET, loadUserAction, /* cabinet */\r\n    LOG_OUT_CABINET, logOutAction, /* cabinet */\r\n    LOAD_CURRENT, loadCurrentProjectAction, /* builder */\r\n    LOAD_UPDATE_PROJECT, loadUpdateCurrentProject,\r\n    EXIT_PROJECT, exitProjectAction,\r\n    ERROR_CABINET, errorAction, /* both */\r\n}","import {LOAD_CURRENT,LOAD_UPDATE_PROJECT, EXIT_PROJECT} from './actions';\r\n\r\nconst initialState = {\r\n    loadProject: false,\r\n    idProject: null,\r\n    typeProject: null,\r\n    components: [],\r\n    sectionsProject: [],\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n    switch (action.type){\r\n\r\n        case LOAD_CURRENT: {\r\n            return {\r\n                ...state,\r\n                loadProject: true,\r\n                idProject: action.id,\r\n                typeProject: action.typeProject,\r\n                components: [...action.components],\r\n                sectionsProject: [...action.sectionsProject]\r\n            }\r\n        }\r\n\r\n        case LOAD_UPDATE_PROJECT: {\r\n            return {\r\n                ...state,\r\n                components: [...action.components],\r\n                sectionsProject: [...action.sectionsProject]\r\n            }\r\n        }\r\n\r\n        case EXIT_PROJECT: {\r\n            if (action.exit)\r\n            return {\r\n                ...state,\r\n                loadProject: false,\r\n                idProject: null,\r\n                typeProject: null,\r\n                components: []\r\n            }\r\n            else return state;\r\n        }\r\n        default: return state;\r\n    }\r\n};","import {LOAD_USER_CABINET, LOG_OUT_CABINET, ERROR_CABINET, CREATE_PROJECT, LOAD_UPDATE_PROJECT} from './actions';\r\n\r\nconst initialState = {\r\n    active: false,\r\n    idUser: null,\r\n    projects: [],\r\n    error: null,\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case LOAD_USER_CABINET: {\r\n\r\n            return {\r\n                ...state,\r\n                active: action.active,\r\n                idUser: action.idUser,\r\n                projects: [...action.projects]\r\n            }\r\n        }\r\n\r\n        case CREATE_PROJECT: {\r\n            return {\r\n                ...state,\r\n                projects: [...action.projects]\r\n            }\r\n        }\r\n\r\n        case LOAD_UPDATE_PROJECT: {\r\n            return {\r\n                ...state,\r\n                projects: state.projects.map(item => {\r\n                    if (item.id === action.idProject)\r\n                        item.components = [...action.components]\r\n                return item;\r\n                })\r\n            }\r\n        }\r\n\r\n        case LOG_OUT_CABINET: {\r\n            return {\r\n                ...state,\r\n                active: false,\r\n                idUser: null,\r\n                projects: []\r\n            }\r\n        }\r\n\r\n        case ERROR_CABINET: {\r\n            return {\r\n                ...state,\r\n                error: action.error\r\n            }\r\n        }\r\n        default: return state;\r\n    }\r\n}\r\n\r\n","import {combineReducers} from 'redux';\r\nimport reducerBuilder from './reducerBuilder';\r\nimport reducerCabinet from './reducerCabinet';\r\n\r\nexport default combineReducers({\r\n    builder: reducerBuilder,\r\n    cabinet: reducerCabinet,\r\n});","import {createStore, applyMiddleware, compose} from 'redux';\r\nimport firebase from  '../Firebase/Firebase';\r\nimport thunk from 'redux-thunk';\r\nimport combineReducers from './reducers';\r\n\r\nconst composeEnhancers =\r\n  typeof window === 'object' &&\r\n  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?\r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\r\n    }) : compose;\r\n\r\nconst middleware = composeEnhancers(\r\n  applyMiddleware(thunk.withExtraArgument({firebase})));\r\n\r\nconst store = createStore(combineReducers, middleware);\r\nexport default store;","import {loadUserAction, errorAction, logOutAction} from '../actions';\r\n\r\nconst middlewareLogin = (email,password) => async (dispatch,getState, {firebase}) => {\r\n        await firebase.login(email,password)\r\n        .then(response =>{\r\n            firebase.db.collection(\"users\").doc(response.user.uid).get()\r\n            .then(docUser => {\r\n                let user = docUser.data();\r\n                dispatch(loadUserAction({uid: docUser.id, projects: [...user.projects]}))\r\n            })\r\n        })\r\n        .catch((error) => {\r\n            console.error(error.message);\r\n            dispatch(errorAction(error.message));\r\n        });\r\n    }\r\n\r\nconst middlewareLoadUserData = (uid) => async (dispatch,getState, {firebase}) => {\r\n        await firebase.db.collection(\"users\").doc(uid).get()\r\n        .then(docUser => {\r\n            let user = docUser.data();\r\n            dispatch(loadUserAction({uid: uid, projects: [...user.projects]}))\r\n        })\r\n        .catch((error) => {\r\n            console.error(error.message);\r\n            dispatch(errorAction(error.message));\r\n        });\r\n    }\r\n\r\nconst middlewareLogOutUser = (uid) => async (dispatch,getState, {firebase}) => {\r\n    await firebase.signOut()\r\n    .then (response => {\r\n        dispatch(logOutAction());\r\n    })\r\n    .catch((error) => {\r\n        console.error(error.message);\r\n        dispatch(errorAction(error.message));\r\n    });\r\n}\r\nexport {\r\n    middlewareLogin,middlewareLoadUserData, middlewareLogOutUser\r\n}","import React from 'react';\r\nimport firebase from './Firebase';\r\nconst firebaseContext = React.createContext(firebase);\r\nexport default firebaseContext;","import React from 'react';\r\nimport firebaseContext from '../Firebase/firebaseContext';\r\n\r\n\r\nconst withFirebase = Component => props => {\r\n        return (\r\n            <firebaseContext.Consumer>\r\n                {firebase => <Component {...props} firebase = {firebase} /> }\r\n            </firebaseContext.Consumer>\r\n        )\r\n};\r\n\r\n\r\nexport default withFirebase;","import React,{useState} from 'react';\r\nimport './Loader.scss';\r\nexport default function(props) {\r\n  \r\n    const [path] = useState(props.path ? process.env.PUBLIC_URL + props.path : process.env.PUBLIC_URL + `/img/loading.gif`);\r\n    const [mode] = useState(props.mode ? props.mode : false);\r\n    return (\r\n            <div className = {`loaderBox ${mode && 'specialMode'}`}>\r\n                <img className = 'loader' src = {path} alt = 'loader'></img> \r\n                {!mode && <p>{`Loading ${props.type}`}</p>}\r\n            </div>\r\n    )\r\n}","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst AnimationTitle = styled.h3`\r\n    user-select: none;\r\n    transition: .4s linear all;\r\n    color: ${props => props.dir === 'up' ? 'red' : 'blue'};\r\n`;\r\n\r\nclass AnimationText extends React.PureComponent {\r\n\r\n    state = {\r\n        tilteContent: this.props.content.split(''),\r\n        currentTitle: this.props.content[0],\r\n        positionTitle: 1,\r\n        directionAnimation: 'up',\r\n        msAnimation: this.props.msAnimation,\r\n        msTimeout: this.props.msAnimation,\r\n        msPauseEnd: this.props.msPauseEnd,\r\n    }\r\n\r\n    _isMounted = false;\r\n    timerAnimation = null;\r\n\r\n    animationTitle = timer => {\r\n        let self = this;\r\n        if (this._isMounted)\r\n        timer = setTimeout( function tick(){\r\n\r\n            if (self._isMounted) {\r\n                if (self.state.directionAnimation === 'up'){\r\n                    let counter = self.state.tilteContent.length;\r\n                    const word = counter > self.state.positionTitle ?\r\n                                self.state.tilteContent[self.state.positionTitle] :\r\n                                self.state.tilteContent[self.state.positionTitle-1];\r\n                    self.setState({\r\n                        ...self.state,\r\n                        currentTitle: self.state.currentTitle + word,\r\n                        positionTitle: self.state.positionTitle + 1,\r\n                        directionAnimation: self.state.positionTitle === counter ? 'down' : 'up',\r\n                        msAnimation: self.state.positionTitle === counter ?\r\n                            self.state.msPauseEnd : self.state.msTimeout\r\n                    });\r\n                }\r\n                if (self.state.directionAnimation === 'down'){\r\n                    let _title = self.state.currentTitle;\r\n                    const length = self.state.currentTitle.length;\r\n                    _title = _title.slice(0,length - 1);\r\n                    self.setState({\r\n                        ...self.state,\r\n                        currentTitle: _title,\r\n                        positionTitle: self.state.positionTitle - 1,\r\n                        directionAnimation: self.state.positionTitle === 2 ? 'up' : 'down',\r\n                        msAnimation: self.state.positionTitle === 2 ?\r\n                            self.state.msPauseEnd : self.state.msTimeout\r\n                    });\r\n                }\r\n            timer = setTimeout(tick, self.state.msAnimation);\r\n            }\r\n        }, this.state.msAnimation);\r\n\r\n    }\r\n\r\n\r\n    render(){\r\n        return (\r\n            <AnimationTitle data-titlebuild dir = {this.state.directionAnimation}>\r\n                {this.state.currentTitle}\r\n            </AnimationTitle>\r\n        )\r\n\r\n    }\r\n\r\n    componentDidMount = (e) => {\r\n        this._isMounted = true;\r\n        this.animationTitle(this.timerAnimation);\r\n    }\r\n\r\n    componentWillUnmount = (e) => {\r\n        this._isMounted = false;\r\n        if (this.timerAnimation) clearTimeout(this.timerAnimation);\r\n    }\r\n}\r\n\r\n\r\nexport default AnimationText;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './registration.scss';\r\n\r\nimport withFirebase from '../../components/firebaseHOC';\r\n\r\n\r\nclass Registration extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        firebase: PropTypes.object.isRequired, /** @firebase class for use firebase functions */\r\n        indexStream: PropTypes.object.isRequired /** @Events stream object */\r\n    }\r\n\r\n    state = {\r\n        firebase: this.props.firebase,\r\n        error: null,\r\n    }\r\n\r\n    emailRef = null;\r\n    passwordRef = null;\r\n\r\n    setRefEmail = (node) => this.emailRef = node;\r\n    setRefPassword = (node) => this.passwordRef = node;\r\n\r\n    createUser = event => {\r\n\r\n        const email = this.emailRef ? this.emailRef.value : null;\r\n        const password = this.passwordRef ? this.passwordRef.value : null;\r\n        const { firebase } = this.props;\r\n\r\n        if (password && email)\r\n        firebase.registration(email, password)\r\n        .then(response => {\r\n            if (!response) throw new Error('Ivaid registration')\r\n            firebase.db.collection(\"users\").doc(response.user.uid).set({\r\n                'projects': [],\r\n                'email': email,\r\n            }).then(() => this.props.indexStream.emit('EventRegistrationCorrect', response));\r\n        })\r\n        .catch((error) => {\r\n        console.error(error.message);\r\n        this.setState({error: error.message});\r\n        });\r\n        else  return this.setState({error: 'invalid user data'});\r\n    };\r\n\r\n    render(){\r\n        let  { error } = this.state;\r\n        return (\r\n            <div className ='RegistrationBox'>\r\n                <div  className = 'RegistrationBox__RegistrationForm'>\r\n                    <h3>Registration</h3>\r\n                    <form autoComplete = 'off' className = 'RegistrationForm__RegForm'>\r\n                        { error ?\r\n                            <p className = 'error'>{error}</p>\r\n                            : null\r\n                        }\r\n                        <span>E-mail</span>\r\n                        <input placeHolder=\"email\" ref = {this.setRefEmail} type = 'text' />\r\n                        <span>Password</span>\r\n                        <input \r\n                            className = 'password' \r\n                            autoComplete = \"off\" \r\n                            ref = {this.setRefPassword} \r\n                            type = 'password' \r\n                            placeHolder=\"password\"\r\n                        />\r\n                        <input onClick = {this.createUser}\r\n                                className = 'RegForm__loginButton'\r\n                                type = 'button'\r\n                                value = 'registration'\r\n                        />\r\n                    </form>\r\n                </div>\r\n                </div>\r\n        )\r\n    }\r\n\r\n}\r\nexport default withFirebase(Registration);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Redirect} from 'react-router-dom';\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\r\nimport AnimationText from '../../components/AnimationText/AnimationTitle';\r\nimport Events from 'events';\r\nimport {middlewareLogin} from '../../redux/middleware/loadUserMiddleware';\r\n\r\nimport Loader from '../../components/loading/Loader';\r\nimport Registration from '../../components/Registration/Registration';\r\n\r\nimport {connect} from 'react-redux';\r\n\r\nimport './index.scss';\r\n\r\n\r\nclass Index extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        active: PropTypes.bool, /** @active - status firebase auth */\r\n        dispatch: PropTypes.func.isRequired, /** @dispatch - redux */\r\n        history: PropTypes.object.isRequired, /** @Router HTML5 history */\r\n        location: PropTypes.object.isRequired, /** @Router */\r\n        match: PropTypes.object.isRequired, /** @Router */\r\n        wrongEnter: PropTypes.string, /** @Error about invalid enter */\r\n        config: PropTypes.object, /** @config - app settings */\r\n    }\r\n\r\n    indexStream = new Events();\r\n\r\n    state = {\r\n        title:  \"Constructor\",\r\n        registrationActive: false,\r\n        regStatus: false,\r\n        wrongEnter: false,\r\n        error: '',\r\n    }\r\n\r\n    emailImput = null;\r\n    passwordImput = null;\r\n\r\n    statusRegistration = event => {\r\n        event.additionalUserInfo.isNewUser ?\r\n            this.setState({\r\n                ...this.state,\r\n                regStatus: true,\r\n                registrationActive: false,\r\n                error: 'Account create!'\r\n            })\r\n        : console.error('error registration');\r\n    }\r\n\r\n    showBox = event => {\r\n        try {\r\n            this.setState ({\r\n                ...this.state,\r\n            registrationActive: this.state.registrationActive ? false : true\r\n            });\r\n        } catch (e) {\r\n        console.error('animation fail');\r\n        }\r\n        event.stopPropagation();\r\n    }\r\n\r\n    authTo = event => {\r\n            if (this.emailImput && this.passwordImput)\r\n            this.props.dispatch(middlewareLogin(this.emailImput.value, this.passwordImput.value));\r\n            event.stopPropagation();\r\n    }\r\n\r\n    emailRef = node => this.emailImput = node;\r\n    passwordRef = node => this.passwordImput = node;\r\n\r\n    render(){\r\n\r\n        if (this.props.active) return <Redirect to = { '/Cabinet'} />\r\n        else if (!this.props.active) {\r\n            return (\r\n                <div className = 'LoginPage flex-column'>\r\n                <h1>{this.state.title}</h1>\r\n                        <div className = 'LoginPage__LoginBox'>\r\n                        <AnimationText\r\n                            content = 'Build your landing page!'\r\n                            msPauseEnd = {1000}\r\n                            msAnimation = {150}\r\n                        />\r\n                            <form className = 'LoginBox__LoginForm'>\r\n                                <h3>Connect form</h3>\r\n                                {\r\n                                    this.props.wrongEnter || this.state.regStatus ?\r\n                                    <p className = 'error'>{this.props.wrongEnter}</p>\r\n                                    : null\r\n                                }\r\n                                <p>E-mail</p>\r\n                                <input \r\n                                    autoComplete = 'off'\r\n                                    placeHolder=\"email\" \r\n                                    ref = {this.emailRef}\r\n                                     type = 'text' \r\n                                />\r\n                                <p>Password</p>\r\n                                <input \r\n                                    ref = {this.passwordRef} \r\n                                    type = 'password' \r\n                                    autoComplete = 'off'\r\n                                    placeHolder=\"password\"\r\n                                    />\r\n                                <input \r\n                                    onClick = {this.authTo} \r\n                                    className = 'LoginForm__loginButton enterInput'\r\n                                    type = 'button'\r\n                                    value = 'enter' />\r\n                                <input\r\n                                    onClick = {this.showBox}\r\n                                    className = {this.state.registrationActive ?\r\n                                        `LoginForm__loginButton registration selected` : \r\n                                        'LoginForm__loginButton registration'\r\n                                    }\r\n                                    type = 'button'\r\n                                    value = 'registration'\r\n                                    />\r\n                            </form>\r\n                        </div>\r\n                            <TransitionGroup component={null}>\r\n                            { this.state.registrationActive &&\r\n                                    <CSSTransition\r\n                                        timeout={300}\r\n                                        unmountOnExit\r\n                                        classNames=\"RegAnim\">\r\n                                        <Registration  indexStream = {this.indexStream} />\r\n                                    </CSSTransition>\r\n                            }\r\n                            </TransitionGroup>\r\n                </div>\r\n            )\r\n        } else  return <Loader path = '/img/loading.gif' type = 'session' />\r\n    }\r\n\r\n    componentDidMount = (e) => {\r\n        this.indexStream.on('EventRegistrationCorrect', this.statusRegistration);\r\n    }\r\n    componentWillUnmount = (e) => {\r\n        this.indexStream.off('EventRegistrationCorrect', this.statusRegistration);\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        active: state.cabinet.active, \r\n        wrongEnter: state.cabinet.error\r\n    }\r\n  }\r\n\r\nexport default connect(mapStateToProps)(Index);","\r\nimport {errorAction, loadUserAction, loadUpdateCurrentProject} from '../actions';\r\n\r\nconst middlewareDelete = item => async (dispatch,getState, {firebase}) => {\r\n\r\n    await firebase.db.collection('users').doc(item.uid).get()\r\n    .then(user => user.data())\r\n    .then(data => {\r\n        return {id: item.uid, projects: data.projects.filter(itemdb => itemdb.id !== item.id)};\r\n    })\r\n    .then(data => {\r\n        firebase.db.collection(\"users\").doc(item.uid).update({\r\n            \"projects\": data.projects\r\n        })\r\n        .then(response => {\r\n            dispatch(loadUserAction({uid: item.uid, projects: data.projects}));\r\n        });\r\n    })\r\n    .catch((error) => {\r\n        console.error(error.message);\r\n        dispatch(errorAction(error.message));\r\n    });\r\n}\r\n\r\nconst middlewareDeleteProjectComponent = item => async (dispatch, getState, {firebase}) => {\r\n    await firebase.db.collection('users').doc(item.uid).get()\r\n    .then(user => user.data())\r\n    .then(data => {\r\n        const userProjects = [...data.projects];\r\n        const findProject = userProjects.find(project => item.id === project.id);\r\n        if (!findProject) throw new Error('No found project');\r\n        findProject.components = findProject.components.filter(component =>\r\n            component.id !== item.idComponent\r\n        );\r\n        return {dataUpdate: data, findProject: findProject};\r\n    })\r\n    .then(data => {\r\n        let {dataUpdate} = data;\r\n        let {findProject} = data;\r\n        firebase.db.collection(\"users\").doc(item.uid).update({\r\n            \"projects\": dataUpdate.projects\r\n        })\r\n        .then(response => {\r\n            dispatch(loadUpdateCurrentProject({\r\n                components: [...findProject.components],\r\n                idProject: item.id,\r\n                sectionsProject: [...item.sectionsProject],\r\n            }))\r\n        });\r\n    })\r\n    .catch(error => {\r\n        console.error(error.message);\r\n        dispatch(errorAction(error.message));\r\n        return null;\r\n    });\r\n\r\n    return item.idComponent;\r\n}\r\n\r\nexport {middlewareDeleteProjectComponent};\r\nexport default middlewareDelete;\r\n","import React, {useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './icon.scss';\r\n\r\nfunction Icon(props){\r\n    const [path] = useState(props.path);\r\n    const [className] = useState(props.className ? props.className : null);\r\n    const [draggable] = useState(props.draggable ? true : false);\r\n\r\n    return (\r\n    <img\r\n        draggable = {draggable}\r\n        onClick = {props.onClick ? props.onClick : null}\r\n        className = {className}\r\n        title = {props.title ? props.title : null}\r\n        src = {process.env.PUBLIC_URL + path } alt = 'icon'>\r\n    </img>\r\n    )\r\n}\r\n\r\nIcon.propTypes = {\r\n    path: PropTypes.string.isRequired, // icon path\r\n    className: PropTypes.string, // class\r\n    draggable: PropTypes.bool // draggable bool\r\n}\r\n\r\nexport default Icon;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './Confirm.scss';\r\n\r\nconst Confirm = props => {\r\n\r\n    return (\r\n        <div className = 'wrapperConfirm'>\r\n            <div className = 'confirmSave'>\r\n                <span>Detected new changes</span>\r\n                <input\r\n                    className = 'saveCofirm'\r\n                    onClick = {props.cbSaveChanges}\r\n                    type = 'button'\r\n                    value = 'Save changes'\r\n                />\r\n                <input\r\n                    className = 'cancelCofirm'\r\n                    onClick = {props.cbCancelSave}\r\n                    type = 'button'\r\n                    value = 'Cancel'\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nConfirm.propTypes = {\r\n    cbSaveChanges: PropTypes.func.isRequired, // callback\r\n    cbCancelSave: PropTypes.func.isRequired // callback\r\n}\r\n\r\nexport default Confirm;","import React from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport './header.scss';\r\n\r\nimport {middlewareLogOutUser} from '../../redux/middleware/loadUserMiddleware';\r\nimport {connect} from 'react-redux';\r\nimport {Redirect, withRouter} from 'react-router-dom';\r\n\r\nimport eventEmitter from '../../EventEmitter.js';\r\nimport Icon from '../Icon/icon';\r\nimport Confirm from '../confirmBox/Confirm';\r\n\r\nconst iconPath = require('../../config.json').CabinetIcon;\r\n\r\nclass Header extends React.Component {\r\n\r\n    static propTypes = {\r\n        title: PropTypes.string.isRequired, /** @Config title app */\r\n        cabinetStream: PropTypes.object, /** @Events stream cabinet */\r\n        dispatch: PropTypes.func.isRequired, /** @dispatch redux */\r\n        history: PropTypes.object.isRequired, /** @Router HTML5 history */\r\n        location: PropTypes.object.isRequired, /** @Router */\r\n        match: PropTypes.object, /** @Router */\r\n    };\r\n\r\n    state = {\r\n        idUser: this.props.idUser,\r\n        title: this.props.title,\r\n        isChange: false,\r\n        redirectConfirm: false,\r\n        redirectAbout: {\r\n            path:  '/Cabinet/About',\r\n            redirectA: false,\r\n        },\r\n        redirectCabinet: {\r\n            path:  '/Cabinet',\r\n            redirectC: false,\r\n        }\r\n    };\r\n\r\n    confirm = event => {\r\n        if (typeof event !== 'object')\r\n        this.setState({isChange: event});\r\n        else this.setState({isChange: event.false, redirectConfirm: event.confirm});\r\n    }\r\n\r\n    confirmSaveDetectChanges = event => {\r\n        eventEmitter.emit('EventRedirectSaveChanges');\r\n        this.setState({\r\n            redirectConfirm: false,\r\n            redirectCabinet: {\r\n                ...this.state.redirectCabinet,\r\n                redirectC: true\r\n            }\r\n        });\r\n    };\r\n\r\n    logOut = event => {\r\n        if (this.state.idUser)\r\n            this.props.dispatch(middlewareLogOutUser(this.props.idUser));\r\n        event.stopPropagation();\r\n    };\r\n\r\n    redirectAbout = event => {\r\n        const isPath = this.props.location.pathname !== this.state.redirectAbout.path;\r\n        if (isPath && !this.state.isChange)\r\n           this.setState({\r\n                redirectConfirm: false,\r\n                redirectAbout: {\r\n                   ...this.state.redirectAbout,\r\n                   redirectA: true\r\n               }\r\n           });\r\n           else this.setState({redirectConfirm: true});\r\n        event.stopPropagation()\r\n    };\r\n\r\n    redirectCabinet = event => {\r\n        if (event !== 'cancelMode'){\r\n            const isPath = this.props.location.pathname !== this.state.redirectCabinet.path;\r\n            if (isPath && this.state.isChange === false)\r\n            this.setState({\r\n                redirectConfirm: false,\r\n                redirectCabinet: {\r\n                    ...this.state.redirectCabinet,\r\n                    redirectC: true\r\n                }\r\n            });\r\n            else if (!this.state.redirectConfirm) this.setState({redirectConfirm: true});\r\n            event.stopPropagation();\r\n\r\n        } else this.setState({\r\n            redirectConfirm: false,\r\n            redirectCabinet: {\r\n                ...this.state.redirectCabinet,\r\n                redirectC: true\r\n            }\r\n        });\r\n    }\r\n\r\n    add = event => {\r\n        this.props.cabinetStream.emit('EventChangeWorkMode',{action: 'newProject'});\r\n        event.stopPropagation()\r\n    };\r\n\r\n    render(){\r\n        let {redirectA} = this.state.redirectAbout;\r\n        let {redirectC} = this.state.redirectCabinet;\r\n\r\n        if (redirectA) return <Redirect to = {this.state.redirectAbout.path} />\r\n        if(redirectC) return <Redirect to = {this.state.redirectCabinet.path} />\r\n\r\n        return (\r\n            <React.Fragment>\r\n            {this.state.isChange && this.state.redirectConfirm ? \r\n                <Confirm \r\n                    cbSaveChanges = {this.confirmSaveDetectChanges}\r\n                    cbCancelSave = {() => this.redirectCabinet('cancelMode')}\r\n                /> : null}\r\n                <header>\r\n                    <div className = 'container'>\r\n                        <div className = 'flex-row'>\r\n                                <div onClick = {this.redirectCabinet} className = 'header__CabinetInfo'>\r\n                                    <Icon className ='mainIcon' path = {iconPath} />\r\n                                    <h3 className = 'tilteApp'>{this.state.title}</h3>\r\n                                </div>\r\n                                {this.props.location.pathname === '/Cabinet' ?\r\n                                    <div onClick = {this.add} className = 'header__newProject__AddButton'>\r\n                                        <Icon className = 'Cabinet' path = '/img/plus.png' />\r\n                                    </div>\r\n                                    : null\r\n                                }\r\n                                    <div  className = 'Navigator'>\r\n                                        <Icon className = 'about' onClick = {this.redirectAbout}\r\n                                            title = 'about'\r\n                                            path = '/img/about_logo.svg'\r\n                                        />\r\n                                        <Icon className = 'logoutButton'\r\n                                            onClick = {this.logOut}\r\n                                            title = 'logOut'\r\n                                            path = '/img/logOut.svg'\r\n                                        />\r\n                                    </div>\r\n                        </div>\r\n                </div>\r\n                </header>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n    componentWillMount = () => {\r\n        eventEmitter.on('EventRedirectConfirm', this.confirm);\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        eventEmitter.off('EventRedirectConfirm', this.confirm);\r\n    }\r\n}\r\n\r\nexport default connect()(withRouter(Header));","import React, {useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport eventEmitter from '../../EventEmitter';\r\n\r\nconst ImageItem = props => {\r\n\r\n    const [id] = useState(props.id);\r\n    const [urlRegular] = useState(props.urls.regular);\r\n    const [urlFull] = useState(props.urls.full);\r\n    const [isFull] = useState(props.isFull);\r\n    const [urlContent] = useState(props.urlContent);\r\n    const showImageMenu = event => {\r\n\r\n       eventEmitter.emit(\"EventShowMenuImage\",{\r\n            id: id,\r\n            url: urlRegular,\r\n            urlFull: urlFull,\r\n            iframe: urlContent\r\n        });\r\n\r\n        event.stopPropagation();\r\n    }\r\n\r\n    return (\r\n        <div className = {props.selected ? 'ItemBox selected' : 'ItemBox'}>\r\n            <img\r\n                className = 'ImageItem'\r\n                onClick = {showImageMenu}\r\n                src = {isFull ? urlFull : urlRegular}\r\n                alt = 'item'\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nImageItem.propTypes = {\r\n    id: PropTypes.oneOfType([\r\n        PropTypes.string,\r\n        PropTypes.number,\r\n    ]),\r\n    urls: PropTypes.object, // data with image path\r\n    isFull: PropTypes.bool, // mode view\r\n    urlContent: PropTypes.string // content path\r\n}\r\n\r\nexport default ImageItem;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Loader from '../../loading/Loader';\r\n\r\nconst CreateProject = props => {\r\n\r\n    const content = props.content;\r\n    const {disabled,validateName,name,validateType,typeClassName} = content;\r\n    const nameLength = name.length;\r\n\r\n    let isNumber = props.nameLength >= 4 && props.nameLength <= 20;\r\n\r\n    return (\r\n    <div className = 'Modal'>\r\n        <h3>Create new Project</h3>\r\n        { nameLength <= 3 ?\r\n            <span className = 'warning'>{props.warningLengthMin}</span> : null\r\n        }\r\n        { nameLength >= 20 ?\r\n            <span className = 'warning'>{props.warningLengthMax}</span> : null\r\n        }\r\n        {\r\n            isNumber && !validateName ?\r\n            <span className = 'warning'>{props.warningNumber}</span> : null\r\n        }\r\n        <input\r\n            className = {typeClassName ? 'ready' : 'wrong'}\r\n            value = {props.name}\r\n            onChange = {props.cbValidateName}\r\n            type = 'text'\r\n            placeholder = \"Project name\"\r\n        />\r\n        { !validateType ?\r\n            <span className = 'warning'>{props.warningType}</span> : null\r\n        }\r\n        <select onChange = {props.cbSelectOption} >\r\n            <option value = 'empty'>--------</option>\r\n            <option value = 'landing'>Landing</option>\r\n        </select>\r\n        <input \r\n            onClick = {props.cbAddNewProject}\r\n            className = 'acceptButton'\r\n            disabled = {disabled}\r\n            type = 'button'\r\n            value = 'Submit'\r\n        />\r\n        <input onClick = {props.cbCancel} type ='button' value = 'Cancel' />\r\n        {props.loading && <Loader mode = 'create' />}\r\n    </div>\r\n    )\r\n}\r\n\r\nCreateProject.propTypes = {\r\n    content: PropTypes.object, // type color className\r\n    warningType: PropTypes.string, // errors\r\n    warningLengthMax: PropTypes.string, // error max length\r\n    warningLengthMin: PropTypes.string, // error min length\r\n    cbValidateName: PropTypes.func.isRequired, // callback validate\r\n    cbAddNewProject: PropTypes.func.isRequired, // callback add new project\r\n}\r\n\r\nexport default CreateProject;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport eventEmitter from '../../../EventEmitter';\r\nimport Icon from '../../Icon/icon';\r\nimport Loader from '../../loading/Loader';\r\n\r\nclass  SearchModal extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        modalSearchMode: PropTypes.string.isRequired, // search mode\r\n        content: PropTypes.object, // with search data\r\n        cbCancel: PropTypes.func.isRequired, // callback cancel\r\n        cbShowImage: PropTypes.func.isRequired, // callback show image\r\n        cbSetSelectedImage: PropTypes.func.isRequired, // callback show image\r\n    }\r\n\r\n    state = {\r\n        mode: this.props.modalSearchMode,\r\n        items: this.props.images,\r\n    }\r\n\r\n    search = event => {\r\n        const value = this.refSearch ? this.refSearch.value : null;\r\n        this.props.cbSearch(event,value, this.props.modalSearchMode);\r\n        event.stopPropagation();\r\n    }\r\n\r\n    refSearch = null;\r\n    refSearchFunc = node => this.refSearch = node;\r\n\r\n    render(){\r\n\r\n        let {content} = this.props;\r\n        return (\r\n            <React.Fragment>\r\n                <div className = 'Modal Modal-search'>\r\n                <h3>{`Search ${this.props.modalSearchMode}`}</h3>\r\n                { this.props.error ?\r\n                    <span className = 'error'>{content.error}</span> : null\r\n                }\r\n                    <input ref = {this.refSearchFunc} type = 'text' placeholder = \"name\" />\r\n                        <input\r\n                            disabled = {content.dissabled}\r\n                            className = 'acceptButton'\r\n                            type = 'button'\r\n                            value = 'Search'\r\n                            onClick = {this.search}\r\n                        />\r\n                    <input onClick = {this.props.cbCancel} type ='button' value = 'Cancel' />\r\n                <div className = 'searchResultBox'>\r\n                    {this.state.items}\r\n                    {this.props.loading ? <Loader type = 'images' /> : null}\r\n                </div>\r\n                </div>\r\n                {  this.props.menuActive ?\r\n                    <div className = 'ActionModalSearch'>\r\n                    <button onClick = {this.props.cbShowImage} className = 'actionModalSearch__view'>\r\n                        <Icon path = '/img/view.png' />\r\n                    </button>\r\n                    <button onClick = {this.props.cbSetSelectedImage} className = 'actionModalSearch__settings'>\r\n                        <Icon path = '/img/settings.png' />\r\n                    </button>\r\n                    </div>\r\n                    : null\r\n                }\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n    componentDidUpdate = (prevProps,prevState) => {\r\n        let {content} = this.props;\r\n        let {content: contentPrev} = prevProps;\r\n        const haveUpdate = (contentPrev.images !== content.images && content.images);\r\n        const isSelected = contentPrev.selectedId !== content.selectedId;\r\n\r\n        if (haveUpdate || isSelected){\r\n            let _items = this.props.cbMakeImageResultBox(content.images);\r\n            this.setState({\r\n                ...this.state,\r\n                items: [..._items]\r\n            });\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        eventEmitter.emit('EventBlockScroll', 'window');\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        eventEmitter.emit('EventBlockScroll', 'default');\r\n    }\r\n}\r\n\r\nexport default SearchModal;","import React,{Fragment} from 'react';\r\n\r\nimport isFetch from 'isomorphic-fetch';\r\nimport PropTypes from 'prop-types';\r\nimport eventEmitter,{controllerStream} from '../../EventEmitter.js';\r\nimport {CSSTransition, TransitionGroup} from 'react-transition-group';\r\nimport ImageItem from '../imageViewer/imageItem';\r\n\r\nimport CreateProject from './createProject/createProject';\r\nimport SearchModal from './Search/searchModal';\r\nimport './modal.scss';\r\nrequire('es6-promise').polyfill();\r\n\r\nclass ModalWindow extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        workMode: PropTypes.string.isRequired, /** @Mode for modal */\r\n        cabinetStream: PropTypes.object, /** @Events stream cabinet */\r\n        eventStreamBuild: PropTypes.object, /** @Events stream build */\r\n        idComponent: PropTypes.oneOfType([\r\n            PropTypes.string,\r\n            PropTypes.number\r\n        ]) /** @Id current user project */\r\n    }\r\n\r\n    state = {\r\n        readyAnimation: false,\r\n        workMode: this.props.workMode,\r\n        loading: false,\r\n        items: [],\r\n        images: {\r\n            loading: false,\r\n            buttonSearchDisabled: false,\r\n            selectedItem: null, \r\n            showUrl: null, \r\n            images: null,\r\n            urlFull: null,\r\n            imageBoxView: false, \r\n            iframe: null,\r\n            error: ''\r\n        },\r\n        newProject: {\r\n            validateName: false,\r\n            validateType: false,\r\n            disabled: true,\r\n            name: '',\r\n            type: 'empty'\r\n        },\r\n        imageMenuActive: false,\r\n        warning: {\r\n            lengthMax: 'Max length: 20 laters',\r\n            warningNumber: `Don't use numbers`,\r\n            lengthMin: 'Min length: 4 letters',\r\n            type: 'Select type of webpage',\r\n        }\r\n    }\r\n\r\n    inputSearch = null;\r\n    inputSelect = null;\r\n\r\n    searchData = (event,value, mode) => {\r\n\r\n        this.setState({...this.state, \r\n            images: {\r\n                ...this.state.inages,\r\n                loading: true,\r\n                buttonSearchDisabled: true\r\n            }\r\n        });\r\n\r\n        let search = null;\r\n        if (value) search = value;\r\n        else search = this.inputSearch.value;\r\n\r\n        if (mode !== 'media'){\r\n        const modeAPI = 'search/photos/?page=1&per_page=40&query=';\r\n        const api = `https://api.unsplash.com/${modeAPI}`;\r\n \r\n        isFetch(`${api + search}&client_id=${process.env.REACT_APP_UNSPLASH_TOKEN}`)\r\n        .then(response => {\r\n            if (response.ok) return response.json();\r\n            else throw new Error('request invalid');\r\n        })\r\n        .then(response => {\r\n            let {results} = response;\r\n            if (results.length)\r\n            this.setState({\r\n                ...this.state,\r\n                images: {\r\n                    ...this.state.images,\r\n                    loading: false,\r\n                    imageBoxView: true,\r\n                    error: '',\r\n                    images: [...results],\r\n                    buttonSearchDisabled: false\r\n                },\r\n            });\r\n            else throw new Error('Photos not found');\r\n        })\r\n        .catch(error => {\r\n            console.error(error.message);\r\n            this.setState({\r\n                ...this.state,\r\n                images: {\r\n                    ...this.state.images,\r\n                    buttonSearchDisabled: false,\r\n                    loading: false,\r\n                    error: error.message},\r\n                imageBoxView: false,\r\n            });\r\n        });\r\n        } else this.searchYouTubeAPI(search);\r\n    }\r\n\r\n    \r\n    searchYouTubeAPI = (search) => {\r\n\r\n        const API = `https://www.googleapis.com/youtube/v3/search?part=snippet`;\r\n        const RAITE = `&maxResults=25&order=date&q=${search}`;\r\n        const KEY = `&key=${process.env.REACT_APP_YOUTUBE_SEARCH_TOKEN}`;\r\n        isFetch(API + RAITE + KEY)\r\n        .then(res => {\r\n            if (res.ok)\r\n            return res.json();\r\n            else throw new Error (`Error ${res.status}`);\r\n        })\r\n        .then(res => {\r\n            const arrayItems = [];\r\n            res.items.forEach(item => {\r\n                arrayItems.push({\r\n                    urls: { regular: item.snippet.thumbnails.high.url },\r\n                    videoId: item.id.videoId\r\n                })\r\n            });\r\n            return arrayItems;\r\n        })\r\n        .then(results => {\r\n            this.setState({\r\n                ...this.state,\r\n                images: {\r\n                    ...this.state.images,\r\n                    loading: false,\r\n                    imageBoxView: true,\r\n                    error: '',\r\n                    images: [...results],\r\n                    buttonSearchDisabled: false\r\n                },\r\n            });\r\n        })\r\n        .catch(error => console.error(error));\r\n    }\r\n\r\n    showMenuImage = event => {\r\n        this.setState({\r\n            ...this.state, \r\n            imageMenuActive: true,\r\n            images: {\r\n                ...this.state.images,\r\n                selectedItem: event.id, \r\n                showUrl: event.url,\r\n                urlFull: event.urlFull,\r\n                iframe: event.iframe\r\n\r\n            }\r\n        });\r\n    }\r\n\r\n    showImage = event => {\r\n\r\n        const {showUrl, iframe} = this.state.images;\r\n\r\n        this.props.eventStreamBuild.emit(\"EventView\", {\r\n            action: true, \r\n            target: showUrl ? showUrl : null,\r\n            iframe: iframe,\r\n            mode: this.props.modalSearchMode\r\n        });\r\n        event.stopPropagation();\r\n    }\r\n\r\n    setSelectedImage = event => {\r\n\r\n        let data = {...this.state.images};\r\n        if (this.props.modalSearchMode === 'background'){\r\n            controllerStream.emit(`EventSetBackgroundImage${this.props.idComponent}`,data);\r\n            eventEmitter.emit(`EventSetBImageInstumentPanel`,{images: data, mode: this.props.modalSearchMode});\r\n        } else if (this.props.modalSearchMode === 'image'){\r\n            controllerStream.emit(`EventSetCurrentImage${this.props.idComponent}`, data);\r\n            eventEmitter.emit(`EventSetBImageInstumentPanel`, {images: data,  mode: this.props.modalSearchMode });\r\n        } else if (this.props.modalSearchMode === 'media'){\r\n            controllerStream.emit(`EventSetContentMedia${this.props.idComponent}`,{\r\n                    iframe: data.iframe,\r\n                    mode: this.props.modalSearchMode\r\n                }\r\n            );\r\n            eventEmitter.emit(`EventSetIframe`, {iframe: data.iframe});\r\n        }\r\n\r\n        event.stopPropagation();\r\n    };\r\n\r\n    makeImageResultBox = (items) => {\r\n        if (!items) return null;\r\n        return items.map((item,i) =>{\r\n                return <ImageItem\r\n                            key = {`item${~~(1 + Math.random() * 999)}`}\r\n                            id = {i}\r\n                            urlContent = {item.videoId ? item.videoId : null}\r\n                            selected = {this.state.images.selectedItem === i ? true : false} \r\n                            isFull = {false}\r\n                            urls = {item.urls}\r\n                        />\r\n        });\r\n\r\n    }\r\n\r\n    addNewProject = event => {\r\n        let mode = this.state[this.state.workMode];\r\n        if (mode.validateType &&  mode.validateName) {\r\n\r\n            this.setState({\r\n                ...this.state,\r\n                loading: true,\r\n            });\r\n            this.props.cabinetStream.emit('EventAddProject',\r\n            {\r\n                title: this.state[this.state.workMode].name,\r\n                type: this.state[this.state.workMode].type\r\n            });\r\n\r\n            this.props.cabinetStream.emit('EventChangeWorkMode',{action: 'default'});\r\n        }\r\n    }\r\n\r\n    selectOption = event => {\r\n\r\n        let inputs = {...this.state[this.state.workMode]};\r\n        inputs.type = event.target.value;\r\n        inputs.validateType = inputs.type !== 'empty';\r\n        inputs.disabled = inputs.validateType && inputs.validateName ? false : true;\r\n        this.setState({\r\n            ...this.state,\r\n            [this.state.workMode]: inputs\r\n        });\r\n    }\r\n\r\n    validateName = event => {\r\n\r\n        let inputs = {...this.state[this.state.workMode]};\r\n        inputs.name = event.target.value;\r\n        inputs.validateName = /^\\D{4,20}$/i.test(inputs.name);\r\n        inputs.disabled = inputs.validateType && inputs.validateName ? false : true;\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            [this.state.workMode]: inputs\r\n        })\r\n    };\r\n\r\n    cancel = event => {\r\n\r\n        if (this.state.workMode === 'Search')\r\n        this.props.eventStreamBuild.emit(\"EventModalSearchOn\", {action: 'offline', mode: null});\r\n        else  this.props.cabinetStream.emit('EventChangeWorkMode',{action: 'default'});\r\n    }\r\n\r\n    refSelect = (node) => this.inputSelect = node;\r\n    refSearch = node => this.inputSearch = node;\r\n\r\n    typeRenderModal = workMode => {\r\n        switch (workMode){\r\n            case 'newProject':\r\n                return (\r\n                    <CSSTransition\r\n                            timeout={500}\r\n                            unmountOnExit\r\n                            classNames = 'modalAnimation'\r\n                    >\r\n                        <CreateProject\r\n                                content = {this.state[this.state.workMode]}\r\n                                warningType = {this.state.warning.type}\r\n                                warningNumber = {this.state.warning.warningNumber}\r\n                                warningLengthMin = {this.state.warning.lengthMin}\r\n                                warningLengthMax = {this.state.warning.lengthMax}\r\n                                cbValidateName = {this.validateName}\r\n                                cbSelectOption = {this.selectOption}\r\n                                cbAddNewProject = {this.addNewProject}\r\n                                cbCancel = {this.cancel}\r\n                                loading = {this.state.loading}\r\n                        />\r\n                    </CSSTransition>\r\n                )\r\n            case 'Search':\r\n                    return (\r\n                        <CSSTransition\r\n                            timeout={500}\r\n                            unmountOnExit\r\n                            classNames = 'modalAnimation'\r\n                        >\r\n                            <div className = 'searchWrapper'> \r\n                                <SearchModal\r\n                                    content = {this.state.images}\r\n                                    cbCancel = {this.cancel}\r\n                                    menuActive = {this.state.imageMenuActive}\r\n                                    cbMakeImageResultBox = {this.makeImageResultBox}\r\n                                    cbShowImage = {this.showImage}\r\n                                    cbSetSelectedImage = {this.setSelectedImage}\r\n                                    modalSearchMode = {this.props.modalSearchMode}\r\n                                    cbSearch = {this.searchData}\r\n                                    loader = {this.state.loading}\r\n                                  \r\n                                />\r\n                            </div>\r\n                        </CSSTransition>\r\n                    )\r\n\r\n            default: return <Fragment></Fragment>\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <TransitionGroup  component = {null}>\r\n                {this.state.readyAnimation && this.typeRenderModal(this.state.workMode)}\r\n            </TransitionGroup>\r\n        )\r\n    }\r\n\r\n    componentDidUpdate = (nextProps, nextState) => {\r\n        if (!this.state.readyAnimation)\r\n        this.setState({\r\n            ...this.state,\r\n            readyAnimation: true,\r\n        });\r\n    }\r\n    \r\n\r\n    componentDidMount = event => {\r\n        if (this.state.workMode === 'Search')\r\n            eventEmitter.on('EventShowMenuImage', this.showMenuImage);\r\n\r\n\r\n            if (!this.state.readyAnimation)\r\n            this.setState({\r\n                ...this.state,\r\n                readyAnimation: true,\r\n            });\r\n    }\r\n\r\n    componentWillUnmount = event => {\r\n        if (this.state.workMode === 'Search')\r\n            eventEmitter.off('EventShowMenuImage', this.showMenuImage);\r\n    }\r\n}\r\n\r\nexport default ModalWindow;\r\n\r\n","import {createProjectAction, errorAction} from '../actions';\r\n\r\n\r\nfunction random(min,max){\r\n    return `${Math.floor(min + Math.random() * (max-min))}`\r\n}\r\n\r\n\r\nconst middlewareCreateProject = (uid, list, title, type) => async (dispatch,getState, {firebase}) => {\r\n    let lastProject = [...list];\r\n    const lastIndex = lastProject.length  ? lastProject[lastProject.length-1].id + 1 : 0;\r\n    const sectionsProject = [];\r\n    if (type === 'portfolio') sectionsProject.push(\"Header\");\r\n    else sectionsProject.push(\"Header\");\r\n    const header = {\r\n        backgroundImage: null,\r\n        backgroundColor: null,\r\n        id: `MainBackgroundHeader${random(0,10000)}`,\r\n        targetSection: \"Header\",\r\n        type: \"background\"\r\n    }\r\n\r\n    lastProject.push({\r\n        id: lastIndex,\r\n        title: title,\r\n        type: type,\r\n        components: [header],\r\n        sectionsProject: [...sectionsProject],\r\n    });\r\n\r\n    await firebase.db.collection(\"users\").doc(uid).update({\r\n        'projects': lastProject,\r\n    })\r\n    .then (() => dispatch(createProjectAction(lastProject)))\r\n    .catch(error => {\r\n        console.error(error.message);\r\n        dispatch(errorAction(error.message));\r\n    })\r\n};\r\n\r\nexport {\r\n    middlewareCreateProject\r\n}","import React, {useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {withRouter, Redirect} from 'react-router-dom';\r\n\r\nfunction Item(props) {\r\n\r\n    const [path] = useState( `/Cabinet/Build/${props.id}`);\r\n    const [productionPath] = useState(`/Cabinet/Build/${props.id}/Production/`);\r\n\r\n    let [canBuild,setCanBuild] = useState(false);\r\n    let [canProd, setCanProd] = useState(false);\r\n\r\n    const [id] = useState(props.id);\r\n    const [name] = useState(props.name);\r\n    const [type] = useState(props.type);\r\n\r\n\r\n    const build = event => {\r\n        if(props.location.pathname !== path)\r\n            setCanBuild(true);\r\n        event.stopPropagation();\r\n    };\r\n\r\n    const showProduction = event => {\r\n        if(props.location.pathname !== path)\r\n        setCanProd(true);\r\n        event.stopPropagation();\r\n    };\r\n\r\n    const deleteItem = event => {\r\n        props.cabinetStream.emit('EventDeleteItem',{\r\n            id: props.id,\r\n            name: props.name,\r\n            type: props.type\r\n        });\r\n        event.stopPropagation();\r\n    };\r\n\r\n\r\n    if (canBuild) return <Redirect to = {path} />\r\n    else if (canProd) return <Redirect to = {productionPath} />\r\n    else return (\r\n            <div className = 'item' data-id = {id}>\r\n                <p className = 'ProjectName'>{name}</p>\r\n                <p className = 'ProjectType'>{type}</p>\r\n                <div className = 'projectController'>\r\n                    <input \r\n                        onClick = {build} \r\n                        className = 'projectControllerButton_enter' \r\n                        type = 'button' \r\n                        value = 'enter build' />\r\n                    <input onClick = {deleteItem} \r\n                        className = 'projectControllerButton_delete' \r\n                        type = 'button' \r\n                        value = 'delete' />\r\n                </div>\r\n                <input onClick = {showProduction} \r\n                    className = 'productionButton' \r\n                    type = 'button' \r\n                    value = 'Production' />\r\n            </div>\r\n        )\r\n}\r\n\r\nItem.propTypes = {\r\n    id: PropTypes.number.isRequired, // id item\r\n    name: PropTypes.string.isRequired, // item name\r\n    type: PropTypes.string.isRequired, // item type\r\n}\r\n\r\nexport default withRouter(Item);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport {middlewareCreateProject} from '../../redux/middleware/createProjectMiddleware';\r\n// import {CSSTransition, TransitionGroup} from 'react-transition-group';\r\nimport './list.scss';\r\n\r\nimport Item from './Item';\r\n\r\nclass List extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        dispatch: PropTypes.func.isRequired, /** @dispatch redux */\r\n        idUser: PropTypes.string.isRequired, /** @UID current user */\r\n        list: PropTypes.array.isRequired, /** @List user projects */\r\n    }\r\n\r\n    state = {\r\n        redirect: false,\r\n    }\r\n\r\n    addNewProject = (item) => {\r\n        if (this.props.idUser) {\r\n            this.props.dispatch(middlewareCreateProject(\r\n                    this.props.idUser,\r\n                    this.props.list,\r\n                    item.title,\r\n                    item.type\r\n                ));\r\n        } else this.setState({...this.state, redirect: true});\r\n    }\r\n\r\n\r\n    makeList = (list) => {\r\n\r\n        return list.map (project => {\r\n\r\n            return(\r\n                <Item\r\n                    key = {project.id}\r\n                    id = {project.id}\r\n                    name = {project.title}\r\n                    type = {project.type}\r\n                    cabinetStream = {this.props.cabinetStream}\r\n                />\r\n            )\r\n        });\r\n    }\r\n\r\n    render(){\r\n        if (this.state.redirect)\r\n            return <Redirect to = { '/'} />\r\n            else return (\r\n                    <div className = 'projectsList__list'>\r\n                        {this.makeList([...this.props.list])}\r\n                    </div>\r\n                )\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.props.cabinetStream.on('EventAddProject',this.addNewProject);\r\n    }\r\n\r\n      componentWillUnmount = () => {\r\n        this.props.cabinetStream.off('EventAddProject',this.addNewProject);\r\n      }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        idUser: state.cabinet.idUser,\r\n        list: [...state.cabinet.projects]\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(List);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport List from '../List/List.jsx';\r\nimport './ProjectsSection.scss';\r\n\r\nconst ProjectsSection = props => {\r\n        return (\r\n            <section className = 'projectsList'>\r\n                <div className = 'container'>\r\n                    <div className = 'flex-column'>\r\n                        <div className = 'projectsList__box'>\r\n                            <h3>Your Projects</h3>\r\n                        </div>\r\n                        <List cabinetStream = {props.cabinetStream} />\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        )\r\n\r\n}\r\n\r\nProjectsSection.propTypes = {\r\n    cabinetStream: PropTypes.object /** @Events stream */\r\n}\r\n\r\nexport default ProjectsSection;","import React,{Fragment} from 'react';\nimport PropTypes from 'prop-types';\nimport Events from 'events';\nimport {Redirect} from 'react-router-dom';\nimport withFirebase from '../../components/firebaseHOC';\n\nimport {middlewareLogOutUser} from '../../redux/middleware/loadUserMiddleware';\nimport middlewareDelete from '../../redux/middleware/middlewareDelete';\nimport Loader from '../../components/loading/Loader';\nimport {connect} from 'react-redux';\n\nimport Header from '../../components/header/Header';\nimport Modal from '../../components/modalWindow/ModalWindow';\nimport ProjectsSection from '../../components/ProjectsSection/ProjectsSection';\n\nimport './Cabinet.scss';\n\nconst title = require('../../config.json').title;\n\nclass Cabinet extends React.PureComponent {\n\n  static propTypes = {\n    firebase: PropTypes.object.isRequired, /** @firebase class for use firebase functions */\n    active: PropTypes.bool, /** @active - status firebase auth */\n    dispatch: PropTypes.func.isRequired, /** @dispatch - redux */\n    history: PropTypes.object.isRequired, /** @Router HTML5 history */\n    location: PropTypes.object.isRequired, /** @Router */\n    match: PropTypes.object.isRequired, /** @Router */\n    idUser: PropTypes.string, /** @Session user id from redux */\n    projects: PropTypes.arrayOf(PropTypes.object).isRequired /** @Projects array with user projects from redux */\n  }\n\n  cabinetStream = new Events();\n\n  state = {\n    workMode: 'default',\n  }\n\n  logOut = () => {\n    this.props.dispatch(middlewareLogOutUser(this.props.idUser));\n  }\n\n  deletItem = event => {\n    this.props.dispatch(middlewareDelete({...event, uid: this.props.firebase.getCurrentUser().uid}));\n  };\n\n  changeWorkMode = event => {\n    this.setState ({\n      ...this.state,\n      workMode: event.action,\n    });\n  };\n\n  render(){\n\n    if (this.props.active){\n      return (\n        <Fragment>\n          <Header cabinetStream = {this.cabinetStream} title = {title} idUser = {this.props.idUser} />\n          <div className = 'Cabinet'>\n            {(this.state.workMode === 'newProject') ?\n              <Modal\n                cabinetStream = {this.cabinetStream}\n                workMode = {this.state.workMode} \n              />\n            : null}\n              <ProjectsSection cabinetStream = {this.cabinetStream} />\n            </div>\n        </Fragment>\n      )\n    } else if (!this.props.firebase.getCurrentUser()) return <Redirect to = { '/'} />\n    else return <Loader path = '/img/loading.gif' type = 'Cabinet' />\n  }\n\n\n  componentDidMount = () => {\n    this.cabinetStream.on('EventDeleteItem', this.deletItem);\n    this.cabinetStream.on('EventChangeWorkMode', this.changeWorkMode);\n  };\n\n  componentWillUnmount = () => {\n    this.cabinetStream.off('EventDeleteItem', this.deletItem);\n    this.cabinetStream.off('EventChangeWorkMode', this.changeWorkMode);\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    idUser: state.cabinet.idUser,\n    projects: [...state.cabinet.projects],\n    active: state.cabinet.active\n  }\n};\n\nexport default connect(mapStateToProps)(withFirebase(Cabinet));\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport eventEmitter,{controllerStream} from '../../../EventEmitter';\r\nimport styled from 'styled-components';\r\n\r\n\r\nconst Background = styled.div`\r\n    position: relative;\r\n    width: ${props => props.width || '100%'};\r\n    height: ${props => props.height || '100%'};\r\n    background-color: ${props => props.backgroundColor};\r\n    ${props => props.backgroundImage ? `background-image: url(${props.backgroundImage});` : null}\r\n    background-size: cover;\r\n`;\r\n\r\nclass BackgroundComponent extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        id: PropTypes.string.isRequired,\r\n        targetSection: PropTypes.string.isRequired,\r\n        background: PropTypes.string,\r\n        backgroundImage: PropTypes.string,\r\n        width: PropTypes.string,\r\n        height: PropTypes.string,\r\n        sectionNumber: PropTypes.number,\r\n        mode: PropTypes.string.isRequired\r\n    };\r\n\r\n    state = {\r\n        id: this.props.id,\r\n        targetSection: this.props.targetSection,\r\n        backgroundColor: this.props.background || this.props.color,\r\n        backgroundImage: this.props.backgroundImage,\r\n        width: this.props.width,\r\n        height: this.props.height\r\n    };\r\n\r\n    boxComponent = null; // ref\r\n    boxComponentRef = node => this.boxComponent = node;\r\n\r\n    saveDataParent = () => {\r\n        let boxInform =  this.boxComponent.getBoundingClientRect();\r\n        controllerStream.emit(`EventSaveWidth${this.state.targetSection}`,{\r\n            countSection: this.props.countSection,\r\n            sectionNumber: this.props.sectionNumber,\r\n            size: {width: boxInform.width, height: boxInform.height}\r\n        });\r\n    };\r\n\r\n    openBgInstruments = event => {\r\n\r\n        const componentsPatternBackground = {\r\n            id: this.state.id,\r\n            targetSection: this.state.targetSection,\r\n            type: 'background',\r\n            backgroundColor: this.state.backgroundColor,\r\n            backgroundImage: this.state.backgroundImage,\r\n        }\r\n        eventEmitter.emit('EventInstrumentPanel',{\r\n            componentStats: componentsPatternBackground,\r\n            targetSection: this.state.targetSection,\r\n            type: 'background',\r\n            id: this.state.id,\r\n        });\r\n        event.stopPropagation();\r\n    };\r\n\r\n    changeColor = eventItem => {\r\n        this.setState({\r\n            ...this.state,\r\n            backgroundColor: eventItem.colorRGB\r\n        });\r\n    };\r\n\r\n    setBackgroundImage = event => {\r\n        const {urlFull} = event;\r\n        this.setState({\r\n            ...this.state,\r\n            backgroundImage: urlFull,\r\n        });\r\n    };\r\n\r\n    render(){\r\n            if (this.props.mode === 'dev'){\r\n        return (\r\n            <Background\r\n                key = {this.state.id}\r\n                ref  = {this.boxComponentRef}\r\n                onDoubleClick={this.openBgInstruments}\r\n                data-name = {this.state.targetSection}\r\n                backgroundColor = {this.state.backgroundColor}\r\n                backgroundImage = {this.state.backgroundImage}\r\n                width = {this.state.width}\r\n                height = {this.state.height}\r\n            >\r\n                {this.props.children}\r\n            </Background>\r\n        )\r\n    } else if (this.props.mode === 'production'){\r\n\r\n        return (\r\n            <Background\r\n                key = {this.state.id}\r\n                ref  = {this.boxComponentRef}\r\n                data-name = {this.state.targetSection}\r\n                backgroundColor = {this.state.backgroundColor}\r\n                backgroundImage = {this.state.backgroundImage}\r\n                width = {this.state.width}\r\n                height = {this.state.height}\r\n            >\r\n            {this.props.children}\r\n            </Background>\r\n        )\r\n    }\r\n\r\n    }\r\n\r\n    componentDidUpdate = () => {\r\n        this.saveDataParent();\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.saveDataParent();\r\n        controllerStream.on(`EventChangeColorBackground${this.state.id}`, this.changeColor);\r\n        controllerStream.on(`EventSetBackgroundImage${this.state.id}`, this.setBackgroundImage);\r\n    };\r\n\r\n    componentWillUnmount = () => {\r\n        controllerStream.off(`EventChangeColorBackground${this.state.id}`, this.changeColor);\r\n        controllerStream.off(`EventSetBackgroundImage${this.state.id}`, this.setBackgroundImage);\r\n    };\r\n};\r\n\r\n\r\n\r\nexport default BackgroundComponent;","import React, {Fragment} from 'react';\r\nimport eventEmitter from '../../../EventEmitter';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport BackgroundComponent from '../components/Background';\r\nimport Loader from '../../loading/Loader';\r\n\r\nimport './MainBackground.scss';\r\n\r\nclass MainBackground extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        countComponents: PropTypes.number.isRequired, /** @Number last project */\r\n        menuActive: PropTypes.bool, /** @Bool active menu or unactive */\r\n        id: PropTypes.string.isRequired, /** @id current project */\r\n    };\r\n\r\n    state = {\r\n        targetSection: this.props.id,\r\n        editRedy: false,\r\n        component: null,\r\n        children: null,\r\n    };\r\n\r\n    changeMode = () => {\r\n        if (!this.state.editStart || this.props.id !== this.props.editComponentName) {\r\n            this.setState({\r\n                ...this.state,\r\n                editStart: true\r\n            }, () =>\r\n            eventEmitter.emit('EventModeEdit', {\r\n                ...this.state,\r\n                editStart: true,\r\n                targetSection: this.state.targetSection,\r\n            }));\r\n        }\r\n    };\r\n\r\n    refSection = null;\r\n    refSectionFunc = node => node ? this.refSection = {data: node.getBoundingClientRect(), node: node} : node;\r\n\r\n    render() {\r\n\r\n        if (this.props.mode === 'dev' && this.state.component){\r\n            return (\r\n                <Fragment>\r\n                    <section\r\n                        key = {this.props.sectionNumber}\r\n                        className = {`element${this.props.sectionNumber}`} \r\n                        ref={this.refSectionFunc}\r\n                        data-class = 'editable' \r\n                        onClick = {this.changeMode}\r\n                    >\r\n                        <BackgroundComponent \r\n                            mode = {this.props.mode}\r\n                            sectionNumber = {this.props.sectionNumber}\r\n                            countSection = {this.props.countSection}\r\n                            {...this.state.component}\r\n                        >\r\n                            {this.state.children || null}\r\n                        </BackgroundComponent>\r\n                        {!this.state.editStart &&\r\n                            <div className = 'warningEdit'><p>Click for start edit</p></div>\r\n                        }\r\n                    </section>\r\n                </Fragment>\r\n            );\r\n        } else if (this.props.mode === 'production' && this.state.component){\r\n            return (\r\n                <Fragment>\r\n                    <section \r\n                        key = {this.props.sectionNumber}\r\n                        ref={this.refSectionFunc} \r\n                        data-class = 'production'\r\n                    >\r\n                        <BackgroundComponent\r\n                            key = {this.props.sectionNumber}\r\n                            mode = {this.props.mode}\r\n                            sectionNumber = {this.props.sectionNumber}\r\n                            {...this.state.component}\r\n                        >\r\n                        {this.state.children || null}\r\n                        </BackgroundComponent>\r\n                    </section>\r\n                </Fragment>\r\n            );\r\n        }\r\n        else return <Loader type = {`${this.props.mode} components`} />;\r\n    }\r\n\r\n\r\n    componentDidMount = () => {\r\n        if (!this.state.component){\r\n            let component = this.props.currentProjectsData.components.find(item =>\r\n                                            item.targetSection === this.props.id);\r\n            const children = this.props.componentJSX.filter(item => \r\n                item.targetSection === this.props.id && item.id !== component.id)\r\n                            .map(item => item.component);\r\n           this.setState({\r\n               ...this.state,\r\n               component: component,\r\n               children: children,\r\n           });\r\n        }\r\n    }\r\n\r\n    componentDidUpdate = (prevProps) => {\r\n        const needUpdate = this.props.countComponents !== prevProps.countComponents;\r\n        if (!this.state.component){\r\n            let component = this.props.currentProjectsData.components.find(item =>\r\n                                            item.targetSection === this.props.id);\r\n            const children = this.props.componentJSX.filter(item => item.targetSection === this.props.id)\r\n                            .map(item => item.component);\r\n           this.setState({\r\n               ...this.state,\r\n               component: component,\r\n               children: children,\r\n           });\r\n        }\r\n        if (needUpdate){\r\n            const children = this.props.componentJSX.filter(item => item.targetSection === this.props.id)\r\n            children && this.setState({...this.state,children: children.map(item => item.component) });\r\n        }\r\n    }\r\n}\r\nexport default MainBackground;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport MainBackground from './MainBackground/MainBackground';\r\n\r\n\r\nconst Section = props => {\r\n    if (props.mode === 'dev'){\r\n    const {currentProjectsData} = props.userData;\r\n    const section = currentProjectsData.sectionsProject;\r\n\r\n            return section.map((item,i) => {\r\n                return (\r\n                        <MainBackground\r\n                            key = {item}\r\n                            componentJSX = {props.componentJSX}\r\n                            currentProjectsData = {currentProjectsData}\r\n                            editComponentName = {props.editComponentName}\r\n                            countComponents = {props.componentJSX.length}\r\n                            menuActive = {props.menuActive}\r\n                            sizeParentBox = {props.sizeParentBox}\r\n                            id = {item}\r\n                            countSection = {currentProjectsData.sectionsProject.length}\r\n                            sectionNumber = {i}\r\n                            mode = {props.mode}\r\n                        />\r\n                );\r\n            });\r\n    } else if (props.mode === 'production'){\r\n       const {section} = props;\r\n       const {currentProjectsData} = props;\r\n        return section.map((item,i) => {\r\n            return (\r\n                    <MainBackground\r\n                        key = {item}\r\n                        componentJSX = {props.componentsProdJSX}\r\n                        currentProjectsData = {currentProjectsData}\r\n                        editComponentName = {props.editComponentName}\r\n                        countComponents = {props.componentsProdJSX.length}\r\n                        sizeParentBox = {props.sizeParentBox}\r\n                        id = {item}\r\n                        sectionNumber = {i}\r\n                        mode = {props.mode}\r\n                    />\r\n            );\r\n        });\r\n    }\r\n}\r\n\r\nSection.propTypes = {\r\n    componentJSX: PropTypes.array, /// array with jsx components\r\n    editComponentName: PropTypes.string, // name current edit component\r\n    menuActive: PropTypes.bool, // build menu\r\n    mode: PropTypes.string.isRequired, // curent mode\r\n    sizeParentBox: PropTypes.object, // data with size main component\r\n    userData: PropTypes.object // users data\r\n}\r\n\r\nexport default Section;","import React from 'react';\r\n\r\nconst builderHOC = data => Component => {\r\n        return <Component key = { `${data.type}${data.id}`} {...data} />\r\n};\r\n\r\nexport default builderHOC;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport eventEmitter,{controllerStream} from '../../../EventEmitter';\r\nimport styled from 'styled-components';\r\n\r\n\r\nconst InputComponent = styled.input.attrs(props => {\r\n    if (props.mode !== 'production')\r\n    return ({\r\n        style: {\r\n            zIndex: props.indexZ ? '9999' : null,\r\n            left: props.coordX ? props.coordX : '45%',\r\n            top:  props.coordY ? props.coordY : '0%',\r\n        }\r\n    })\r\n})`\r\n    width: ${props => props.size ? props.size.w + 'px' : null};\r\n    color: white;\r\n    height: ${props => props.size ? props.size.h + 'px' : null};\r\n    font-size: ${props => props.fontSize ? props.fontSize + 'px' : null};\r\n    position: absolute;\r\n    background-color: ${props => props.color || null};\r\n    border: ${props => `1px solid ${props.color}`};\r\n    border-radius: ${props => props.borderRadius ? props.borderRadius + 'px' : null};\r\n    white-space: normal;\r\n    font-weight: bold;\r\n    transition: .3s transform linear;\r\n\r\n    :active {\r\n        border: ${props =>`2px dotted ${props.color}`};\r\n        transform: scale(1.05);\r\n    }\r\n`;\r\n\r\nconst ProductionStyle = styled(InputComponent)`\r\n    left: ${props => props.coordX ? props.coordX : '45%'};\r\n    top:  ${props => props.coordY ? props.coordY : '0%'};\r\n`;\r\n\r\n\r\nclass Input extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        id: PropTypes.oneOfType([\r\n            PropTypes.string,\r\n            PropTypes.number\r\n        ]).isRequired,\r\n        targetSection: PropTypes.string.isRequired,\r\n        sizeParentBox: PropTypes.object.isRequired,\r\n    }\r\n\r\n    state = {\r\n        id: this.props.id,\r\n        istrumentsActive: false,\r\n        getSizeBool: false,\r\n        countSection: 0,\r\n        borderRadius: this.props.borderRadius,\r\n        sectionNumber: 0,\r\n        typeInput: this.props.typeInput || 'button',\r\n        sizeParentBox: this.props.sizeParentBox,\r\n        targetSection: this.props.targetSection,\r\n        size: this.props.size && this.props.size.w ? this.props.size : {w: '100', h:'50'},\r\n        fontSize: this.props.fontSize || 20,\r\n        color: this.props.color || null,\r\n        shiftCoords: null,\r\n        content: this.props.content || 'Input',\r\n        posInput: this.props.coords.x ? {x: this.props.coords.x, y: this.props.coords.y} : null,\r\n        startDragNdrop: false,\r\n    }\r\n\r\n    openInputInstruments = event => {\r\n\r\n        const componentsPatternImage = {\r\n            id: this.state.id,\r\n            targetSection: this.state.targetSection,\r\n            typeInput: this.state.typeInput,\r\n            type: 'input',\r\n            color: this.state.color,\r\n            borderRadius: this.state.borderRadius,\r\n            zIndex: null,\r\n            size: {...this.state.size},\r\n            fontSize: this.state.fontSize,\r\n            content: this.state.content,\r\n            coords: {...this.state.posInput}, // x, y\r\n        }\r\n\r\n        eventEmitter.emit(`EventInstrumentPanel`,{\r\n            componentStats: componentsPatternImage,\r\n            targetSection: this.state.targetSection,\r\n            id: this.state.id,\r\n            sizeTextValue: this.state.size\r\n        });\r\n        this.setState({...this.state, istrumentsActive: true});\r\n        event.stopPropagation();\r\n    };\r\n\r\n    saveCoords = event => {\r\n        if (event.nativeEvent.which !== 1) return false;\r\n        const element = this.refInput.getBoundingClientRect();\r\n\r\n        const cords = {\r\n            left: element.left,\r\n            top: element.top,\r\n            width: element.right - element.left,\r\n            height: element.bottom - element.top\r\n        }\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            shiftCoords: {x: event.clientX - cords.left, y: event.clientY - cords.top},\r\n            startDragNdrop: !this.state.startDragNdrop ? true : false\r\n        });\r\n\r\n        event.stopPropagation();\r\n    };\r\n\r\n    changeSize = eventSize => {\r\n        this.setState({...this.state, size: eventSize.size});\r\n    };\r\n\r\n    changeColor = colorRGB => {\r\n\r\n        if (typeof colorRGB === 'string')\r\n            this.setState({\r\n                ...this.state,\r\n                color: colorRGB\r\n            });\r\n    };\r\n\r\n    changeSizeText = eventSize => {\r\n        this.setState({...this.state, fontSize: eventSize.size});\r\n    };\r\n\r\n    setBorderRadius = eventItem => {\r\n        let radius = eventItem.borderRadius > 200 ? 200 : eventItem.borderRadius;\r\n        radius = eventItem.borderDown < 0 ? 0 : eventItem.borderRadius;\r\n            this.setState({\r\n                ...this.state,\r\n                borderRadius: radius\r\n            });\r\n    };\r\n\r\n    changeContent = eventItem => {\r\n        let booldContent = eventItem.content || eventItem.content === '';\r\n        if (booldContent)\r\n            this.setState({\r\n                ...this.state,\r\n                content: eventItem.content\r\n            });\r\n    }\r\n\r\n\r\n\r\n    checkPivotPosition = (coordX, coordY) => {\r\n\r\n        const element = this.refInput.getBoundingClientRect();\r\n        const borderTopLeft = 0;\r\n        const borderDown = 800 - element.height;\r\n        const borderRight = this.props.sizeParentBox.width - element.width;\r\n\r\n        if (coordY < borderTopLeft) coordY = borderTopLeft;\r\n        if (coordY > borderDown) coordY = borderDown;\r\n        if (coordX < borderTopLeft) coordX = borderTopLeft;\r\n        if (coordX > borderRight) coordX = borderRight;\r\n\r\n        return {x: coordX, y: coordY};\r\n    }\r\n\r\n    delta = (trans,transT) => {\r\n        return {\r\n            x: 0,\r\n            y: 0,\r\n        }\r\n    }\r\n    move = (x,y) => this.setState({...this.state, posInput: {x: x, y: y}});\r\n\r\n    moveInput = event => {\r\n\r\n        if (this.state.startDragNdrop && this.state.istrumentsActive){\r\n            let num = this.state.sectionNumber;\r\n            if (this.state.sectionNumber === 1 && this.state.countSection-1 === this.state.sectionNumber)  \r\n                num = this.state.sectionNumber + 1;\r\n            let xItem = event.clientX - (this.props.sizeParentBox.left  * num);\r\n            let yItem = event.clientY - (this.props.sizeParentBox.top * num);\r\n\r\n            let coordX = xItem - this.state.shiftCoords.x + this.delta().x;\r\n            let coordY = yItem - this.state.shiftCoords.y + this.delta().y;\r\n\r\n            let coords = this.checkPivotPosition(coordX,coordY);\r\n\r\n            let convertToPercentX = coords.x * 100 / this.state.sizeParentBox.width;\r\n            let convertToPercentY = coords.y * 100 / this.state.sizeParentBox.height;\r\n\r\n            this.move(convertToPercentX.toFixed(2) + '%',\r\n                      convertToPercentY.toFixed(2) + '%');\r\n    }\r\n        event.stopPropagation();\r\n    };\r\n\r\n    stopDragNdrop = event => {\r\n        if (this.state.startDragNdrop) {\r\n            this.setState({...this.state, startDragNdrop: false})\r\n            controllerStream.emit(`EventUpdatePosition${this.state.id}`, this.state.posInput);\r\n        }\r\n        event.stopPropagation();\r\n    };\r\n    //currentProjectsData.sectionsProject.length\r\n\r\n    saveSize = event => {\r\n        const {size} = event;\r\n        if (!this.state.getSizeBool){\r\n        this.setState({\r\n            ...this.state,\r\n            getSizeBool: true,\r\n            countSection: event.countSection,\r\n            sectionNumber: event.sectionNumber,\r\n            sizeParentBox: {width: size.width, height: size.height}});\r\n        } else controllerStream.off(`EventSaveWidth${this.state.targetSection}`,this.saveSize);\r\n    }\r\n\r\n    setWidth = eventItem => {\r\n        const {width} = eventItem;\r\n        this.setState({...this.state, \r\n            size: {\r\n                ...this.state.size,\r\n                w: width,\r\n            }\r\n        });\r\n    }\r\n\r\n    setType = eventItem => {\r\n        this.setState({\r\n            ...this.state, \r\n            typeInput: eventItem\r\n        });\r\n    }\r\n\r\n    setHeight = eventItem => {\r\n        const {height} = eventItem;\r\n        this.setState({...this.state, \r\n            size: {\r\n                ...this.state.size,\r\n                h: height,\r\n            }\r\n        });\r\n    }\r\n\r\n    refInput = null;\r\n    refInputComponent = node => this.refInput = node;\r\n\r\n    render(){\r\n\r\n        if (this.props.mode === 'dev'){\r\n            return (\r\n                <InputComponent\r\n                    type = {this.state.typeInput}\r\n                    value = {this.state.content}\r\n                    ref = {this.refInputComponent}\r\n                    size = {this.state.size}\r\n                    color = {this.state.color}\r\n                    borderRadius = {this.state.borderRadius}\r\n                    fontSize = {this.state.fontSize}\r\n                    onClick = {this.openInputInstruments}\r\n                    onMouseDown = {this.saveCoords}\r\n                    onMouseMove= {this.moveInput}\r\n                    onMouseLeave = {this.stopDragNdrop}\r\n                    onMouseUp = {this.stopDragNdrop}\r\n                    onDragStart = {this.stop}\r\n                    coordX = {this.state.posInput ? this.state.posInput.x : null}\r\n                    coordY = {this.state.posInput ? this.state.posInput.y : null}\r\n                    indexZ = {this.state.startDragNdrop}\r\n                    data-imagecomponentwrapper\r\n                />\r\n            )\r\n        } else if (this.props.mode === 'production'){\r\n\r\n            return (\r\n                <ProductionStyle\r\n                    type = {this.state.typeInput}\r\n                    value = {this.state.content}\r\n                    ref = {this.refInputComponent}\r\n                    size = {this.state.size}\r\n                    color = {this.state.color}\r\n                    fontSize = {this.state.fontSize}\r\n                    borderRadius = {this.state.borderRadius}\r\n                    coordX = {this.state.posInput ? this.state.posInput.x : null}\r\n                    coordY = {this.state.posInput ? this.state.posInput.y : null}\r\n                    indexZ = {this.state.startDragNdrop}\r\n                    mode = {this.props.mode}\r\n                />\r\n            )\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        controllerStream.on(`EventSaveWidth${this.state.targetSection}`, this.saveSize);\r\n        controllerStream.on(`EventSetBorderRadius${this.state.id}`, this.setBorderRadius);\r\n        controllerStream.on(`EventChangecolor${this.state.id}`, this.changeColor);\r\n        controllerStream.on(`EventChangeSize${this.state.id}`, this.changeSize);\r\n        controllerStream.on(`EventChangeSizeText${this.state.id}`, this.changeSizeText);\r\n        controllerStream.on(`EventChangeContentText${this.state.id}`, this.changeContent);\r\n        controllerStream.on(`EventSetWidth${this.state.id}`, this.setWidth);\r\n        controllerStream.on(`EventSetType${this.state.id}`, this.setType);\r\n        controllerStream.on(`EventSetHeight${this.state.id}`, this.setHeight);\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        controllerStream.off(`EventSaveWidth${this.state.targetSection}`,this.saveSize);\r\n        controllerStream.off(`EventSetBorderRadius${this.state.id}`, this.setBorderRadius);\r\n        controllerStream.off(`EventChangeSize${this.state.id}`, this.changeSize);\r\n        controllerStream.off(`EventChangeSizeText${this.state.id}`, this.changeSizeText);\r\n        controllerStream.off(`EventChangeContentText${this.state.id}`, this.changeContent);\r\n        controllerStream.off(`EventChangecolor${this.state.id}`, this.changeColor);\r\n        controllerStream.off(`EventSetWidth${this.state.id}`, this.setWidth);\r\n        controllerStream.off(`EventSetType${this.state.id}`, this.setType);\r\n        controllerStream.off(`EventSetHeight${this.state.id}`, this.setHeight);\r\n    }\r\n}\r\n\r\nexport default Input;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport eventEmitter,{controllerStream} from '../../../EventEmitter';\r\nimport styled from 'styled-components';\r\n\r\nconst WrapperMedia = styled.div.attrs(props => {\r\n    if (props.mode !== 'production')\r\n    return ({\r\n        style: {\r\n            zIndex: props.indexZ ? '9999' : null,\r\n            left: props.coordX ? props.coordX : '45%',\r\n            top:  props.coordY ? props.coordY : '0%',\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            padding: props.mode === 'dev' ? '40px' : null\r\n        }\r\n    })\r\n})`\r\n    width: ${props => props.size.w ? props.size.w + '%' : '30%'};\r\n    height: ${props => props.size.h ? props.size.h + '%' : '50%'};\r\n    position: absolute;\r\n    background: ${props => props.mode === 'dev' ? `url(${process.env.PUBLIC_URL}/img/media.svg)` : null};\r\n    background-size: cover;\r\n    border: ${props => props.mode === 'dev' ? `1px solid red` : null};\r\n    padding: 10px;\r\n`;\r\nconst Media = styled.iframe`\r\n    width: 100%;\r\n    height: 100%;\r\n    z-index: ${props => props.zIndex ? '0' : '-1'};\r\n`;\r\n\r\nconst ProductionStyle = styled(WrapperMedia)`\r\n    left: ${props => props.coordX ? props.coordX : '45%'};\r\n    top:  ${props => props.coordY ? props.coordY : '0%'};\r\n`;\r\n\r\nclass MediaComponent extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        id: PropTypes.oneOfType([\r\n            PropTypes.string,\r\n            PropTypes.number\r\n        ]).isRequired,\r\n        targetSection: PropTypes.string.isRequired,\r\n        sizeParentBox: PropTypes.object.isRequired,\r\n        content: PropTypes.string,\r\n    }\r\n\r\n    state = {\r\n        targetSection: this.props.targetSection,\r\n        id : this.props.id,\r\n        sizeParentBox: this.props.sizeParentBox,\r\n        shiftCoords: null,\r\n        countSection: 0,\r\n        size: this.props.size ? this.props.size : {w: null, h: null},\r\n        posMedia: this.props.coords.x ? {x: this.props.coords.x, y: this.props.coords.y} : null,\r\n        startDragNdrop: false,\r\n        istrumentsActive: false,\r\n        drawContent: false,\r\n        sectionNumber: this.props.sectionNumber,\r\n        content: this.props.content ? this.props.content : null\r\n    }\r\n\r\n    openMediaInstruments = event => {\r\n\r\n        const componentsPatternMedia = {\r\n            id: this.state.id,\r\n            size: this.state.size,\r\n            targetSection: this.state.targetSection,\r\n            type: 'media',\r\n            zIndex: null,\r\n            content: this.state.content,\r\n            coords: {...this.state.posMedia}, // x, y\r\n        }\r\n\r\n        eventEmitter.emit('EventInstrumentPanel',{\r\n            componentStats: componentsPatternMedia,\r\n            targetSection: this.state.targetSection,\r\n            id: this.state.id,\r\n            size: this.state.size,\r\n        });\r\n        this.setState({...this.state, istrumentsActive: true});\r\n        event.stopPropagation();\r\n    }\r\n\r\n    saveCoords = event => {\r\n        if (event.nativeEvent.which !== 1) return false;\r\n        const element = this.refMedia.getBoundingClientRect();\r\n        const cords = {\r\n            left: element.left,\r\n            top: element.top,\r\n            width: element.right - element.left,\r\n            height: element.bottom - element.top\r\n        }\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            shiftCoords: {x: event.clientX - cords.left, y: event.clientY - cords.top},\r\n            startDragNdrop: !this.state.startDragNdrop ? true : false\r\n        });\r\n\r\n        event.stopPropagation();\r\n    };\r\n\r\n    setWidth = eventItem => {\r\n        const {width} = eventItem;\r\n        this.setState({...this.state, \r\n            size: {\r\n                ...this.state.size,\r\n                w: width,\r\n            }\r\n        });\r\n    }\r\n\r\n    setHeight = eventItem => {\r\n        const {height} = eventItem;\r\n        this.setState({...this.state, \r\n            size: {\r\n                ...this.state.size,\r\n                h: height,\r\n            }\r\n        });\r\n    }\r\n\r\n    checkPivotPosition = (coordX, coordY) => {\r\n\r\n        const element = this.refMedia.getBoundingClientRect();\r\n        const borderTopLeft = 0;\r\n        const borderDown = 800 - element.height;\r\n        const borderRight = this.props.sizeParentBox.width - element.width;\r\n\r\n        if (coordY < borderTopLeft) coordY = borderTopLeft;\r\n        if (coordY > borderDown) coordY = borderDown;\r\n        if (coordX < borderTopLeft) coordX = borderTopLeft;\r\n        if (coordX > borderRight) coordX = borderRight;\r\n\r\n        return {x: coordX, y: coordY};\r\n    }\r\n\r\n    delta = (trans,transT) => {\r\n        return {\r\n            x: 0,\r\n            y: 0,\r\n        }\r\n    }\r\n    move = (x,y) => this.setState({...this.state, posMedia: {x: x, y: y}});\r\n\r\n    moveMedia = event => {\r\n\r\n        if (this.state.startDragNdrop && this.state.istrumentsActive){\r\n\r\n            let xItem = event.clientX - (this.props.sizeParentBox.left  * this.state.sectionNumber);\r\n            let yItem = event.clientY - (this.props.sizeParentBox.top * this.state.sectionNumber);\r\n\r\n            let coordX = xItem - this.state.shiftCoords.x + this.delta().x;\r\n            let coordY = yItem - this.state.shiftCoords.y + this.delta().y;\r\n\r\n            let coords = this.checkPivotPosition(coordX,coordY);\r\n\r\n            let convertToPercentX = coords.x * 100 / this.state.sizeParentBox.width;\r\n            let convertToPercentY = coords.y * 100 / this.state.sizeParentBox.height;\r\n\r\n            this.move(convertToPercentX.toFixed(2) + '%',\r\n                      convertToPercentY.toFixed(2) + '%');\r\n    }\r\n        event.stopPropagation();\r\n    };\r\n\r\n    stopDragNdrop = event => {\r\n        if (this.state.startDragNdrop) {\r\n            this.setState({...this.state, startDragNdrop: false})\r\n            controllerStream.emit(`EventUpdatePosition${this.state.id}`, this.state.posMedia);\r\n        }\r\n        event.stopPropagation();\r\n    };\r\n\r\n    setContent = event => {\r\n        const {iframe} = event;\r\n        this.setState({...this.state, content: iframe});\r\n    };\r\n\r\n\r\n    saveSize = event => {\r\n        const {size} = event;\r\n        if (!this.state.getSizeBool){\r\n        this.setState({\r\n            ...this.state,\r\n            getSizeBool: true,\r\n            countSection: event.countSection,\r\n            sectionNumber: event.sectionNumber + 1,\r\n            sizeParentBox: {width: size.width, height: size.height}});\r\n        } else controllerStream.off(`EventSaveWidth${this.state.targetSection}`,this.saveSize);\r\n    }\r\n\r\n    refMedia = null;\r\n    refMediaComponent = node => this.refMedia = node;\r\n\r\n    render(){\r\n        const url = 'https://www.youtube.com/embed/';\r\n\r\n        if (this.props.mode === 'dev'){\r\n            return (\r\n                <WrapperMedia\r\n                    ref = {this.refMediaComponent}\r\n                    onClick={this.openMediaInstruments}\r\n                    onMouseDown = {this.saveCoords}\r\n                    onMouseMove= {this.moveMedia}\r\n                    onMouseLeave = {this.stopDragNdrop}\r\n                    onMouseUp = {this.stopDragNdrop}\r\n                    onDragStart = {this.stop}\r\n                    mode = {this.props.mode}\r\n                    indexZ = {this.state.startDragNdrop}\r\n                    coordX = {this.state.posMedia ? this.state.posMedia.x : null}\r\n                    coordY = {this.state.posMedia ? this.state.posMedia.y : null}\r\n                    size = {this.state.size}\r\n                >\r\n                {!this.state.startDragNdrop ? \r\n                    <Media\r\n                        src= {this.state.content ? url + this.state.content : null }\r\n                        drawContent = {this.state.drawContent}\r\n                        width = {this.state.width} \r\n                        height = {this.state.height}\r\n                        zIndex = {this.state.content}\r\n                        allowfullscreen\r\n                    ></Media> : null\r\n                }\r\n                </WrapperMedia>\r\n            )\r\n        } else if (this.props.mode === 'production'){\r\n            return (\r\n                <ProductionStyle\r\n                    ref = {this.refMediaComponent}\r\n                    indexZ = {this.state.startDragNdrop}\r\n                    size = {this.state.size}\r\n                    coordX = {this.state.posMedia ? this.state.posMedia.x : null}\r\n                    coordY = {this.state.posMedia ? this.state.posMedia.y : null}\r\n                    mode = {this.props.mode}\r\n                >\r\n                {!this.state.startDragNdrop ? \r\n                    <Media\r\n                        src= {this.state.content ? url + this.state.content : null }\r\n                        drawContent = {this.state.drawContent}\r\n                        width = {this.state.width} \r\n                        height = {this.state.height}\r\n                        zIndex = {this.state.content}\r\n                        mode = {this.props.mode}\r\n                        allowfullscreen\r\n                    ></Media> : null\r\n                }\r\n                </ProductionStyle>\r\n            )\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        controllerStream.on(`EventSetContentMedia${this.state.id}`, this.setContent);\r\n        controllerStream.on(`EventSaveWidth${this.state.targetSection}`, this.saveSize);\r\n        controllerStream.on(`EventSetWidth${this.state.id}`, this.setWidth);\r\n        controllerStream.on(`EventSetHeight${this.state.id}`, this.setHeight); \r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        controllerStream.off(`EventSaveWidth${this.state.targetSection}`,this.saveSize);\r\n        controllerStream.off(`EventSetContentMedia${this.state.id}`, this.setContent);\r\n        controllerStream.off(`EventSetWidth${this.state.id}`, this.setWidth);\r\n        controllerStream.off(`EventSetHeight${this.state.id}`, this.setHeight); \r\n    }\r\n}\r\n\r\nexport default MediaComponent;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport eventEmitter,{controllerStream} from '../../../EventEmitter';\r\nimport styled from 'styled-components';\r\n\r\n\r\nconst WrapperImg = styled.div.attrs(props => {\r\n    if (props.mode !== 'production')\r\n    return ({\r\n        style: {\r\n            zIndex: props.indexZ ? '9999' : null,\r\n            left: props.coordX ? props.coordX : '45%',\r\n            top:  props.coordY ? props.coordY : '0',\r\n        }\r\n    })\r\n})`\r\n    width: ${props => props.size ? props.size.w + '%' : '30%'};\r\n    height: ${props => props.size ? props.size.h + '%' : '50%'};\r\n    position: absolute;\r\n`;\r\n\r\nconst ImageStyle = styled.img`\r\n    width: 100%;\r\n    height: 100%;\r\n    opacity: ${props => props.opacity};\r\n    border-radius: ${props => props.borderRadius}px;\r\n    pointer-events: none;\r\n    position: absolute;\r\n`;\r\n\r\nconst ProductionStyle = styled(WrapperImg)`\r\n    left: ${props => props.coordX ? props.coordX : '50%'};\r\n    top:  ${props => props.coordY};\r\n`;\r\n\r\nclass Image extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        id: PropTypes.oneOfType([\r\n            PropTypes.string,\r\n            PropTypes.number\r\n        ]).isRequired,\r\n        targetSection: PropTypes.string.isRequired,\r\n        sizeParentBox: PropTypes.object.isRequired,\r\n    }\r\n\r\n    state = {\r\n        id: this.props.id,\r\n        istrumentsActive: false,\r\n        getSizeBool: false,\r\n        countSection: 0,\r\n        opacity: this.props.opacity || 1,\r\n        sectionNumber: 0,\r\n        borderRadius: this.props.borderRadius || 0,\r\n        sizeParentBox: this.props.sizeParentBox,\r\n        targetSection: this.props.targetSection,\r\n        path: this.props.image ? this.props.image : this.props.path,\r\n        size: this.props.size ? this.props.size : {w: 30, h: 50},\r\n        shiftCoords: null,\r\n        posImage: this.props.coords.x ? {x: this.props.coords.x, y: this.props.coords.y} : null,\r\n        startDragNdrop: false,\r\n    }\r\n\r\n    openImageInstruments = event => {\r\n\r\n        const componentsPatternImage = {\r\n            id: this.state.id,\r\n            targetSection: this.state.targetSection,\r\n            size: {...this.state.size},\r\n            type: 'image',\r\n            borderRadius: this.state.borderRadius,\r\n            opacity: this.state.opacity,\r\n            zIndex: null,\r\n            image: this.state.path,\r\n            coords: {...this.state.posImage}, // x, y\r\n        }\r\n\r\n        eventEmitter.emit(`EventInstrumentPanel`,{\r\n            componentStats: componentsPatternImage,\r\n            targetSection: this.state.targetSection,\r\n            id: this.state.id,\r\n            sizeTextValue: this.state.size\r\n        });\r\n        this.setState({...this.state, istrumentsActive: true});\r\n        event.stopPropagation();\r\n    };\r\n\r\n    saveCoords = event => {\r\n        if (event.nativeEvent.which !== 1) return false;\r\n        const element = this.refImage.getBoundingClientRect();\r\n\r\n        const cords = {\r\n            left: element.left,\r\n            top: element.top,\r\n            width: element.right - element.left,\r\n            height: element.bottom - element.top\r\n        }\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            shiftCoords: {x: event.clientX - cords.left, y: event.clientY - cords.top},\r\n            startDragNdrop: !this.state.startDragNdrop ? true : false\r\n        });\r\n\r\n        event.stopPropagation();\r\n    };\r\n\r\n    checkPivotPosition = (coordX, coordY) => {\r\n\r\n        const element = this.refImage.getBoundingClientRect();\r\n        const borderTopLeft = 0;\r\n        const borderDown = 800 - element.height;\r\n        const borderRight = this.props.sizeParentBox.width - element.width;\r\n\r\n        if (coordY < borderTopLeft) coordY = borderTopLeft;\r\n        if (coordY > borderDown) coordY = borderDown;\r\n        if (coordX < borderTopLeft) coordX = borderTopLeft;\r\n        if (coordX > borderRight) coordX = borderRight;\r\n\r\n        return {x: coordX, y: coordY};\r\n    }\r\n\r\n    delta = (trans,transT) => {\r\n        return {\r\n            x: 0,\r\n            y: 0,\r\n        }\r\n    }\r\n    move = (x,y) => this.setState({...this.state, posImage: {x: x, y: y}});\r\n\r\n    moveText = event => {\r\n\r\n        if (this.state.startDragNdrop && this.state.istrumentsActive){\r\n\r\n            let xItem = event.clientX - (this.props.sizeParentBox.left  * this.state.sectionNumber);\r\n            let yItem = event.clientY - (this.props.sizeParentBox.top * this.state.sectionNumber);\r\n\r\n            let coordX = xItem - this.state.shiftCoords.x + this.delta().x;\r\n            let coordY = yItem - this.state.shiftCoords.y + this.delta().y;\r\n\r\n            let coords = this.checkPivotPosition(coordX,coordY);\r\n\r\n            let convertToPercentX = coords.x * 100 / this.state.sizeParentBox.width;\r\n            let convertToPercentY = coords.y * 100 / this.state.sizeParentBox.height;\r\n\r\n            this.move(convertToPercentX.toFixed(2) + '%',\r\n                      convertToPercentY.toFixed(2) + '%');\r\n    }\r\n        event.stopPropagation();\r\n    };\r\n\r\n    stopDragNdrop = event => {\r\n        if (this.state.startDragNdrop) {\r\n            this.setState({...this.state, startDragNdrop: false})\r\n            controllerStream.emit(`EventUpdatePosition${this.state.id}`, this.state.posImage);\r\n        }\r\n        event.stopPropagation();\r\n    };\r\n\r\n    setCurrentImage = event => {\r\n        const {urlFull} = event;\r\n        this.setState({...this.state, path: urlFull});\r\n    };\r\n\r\n    setWidth = eventItem => {\r\n        const {width} = eventItem;\r\n        this.setState({...this.state, \r\n            size: {\r\n                ...this.state.size,\r\n                w: width,\r\n            }\r\n        });\r\n    }\r\n\r\n    setHeight = eventItem => {\r\n        const {height} = eventItem;\r\n        this.setState({...this.state, \r\n            size: {\r\n                ...this.state.size,\r\n                h: height,\r\n            }\r\n        });\r\n    }\r\n\r\n    saveSize = event => {\r\n        const {size} = event;\r\n        if (!this.state.getSizeBool){\r\n        this.setState({\r\n            ...this.state,\r\n            getSizeBool: true,\r\n            countSection: event.countSection,\r\n            sectionNumber: event.sectionNumber,\r\n            sizeParentBox: {width: size.width, height: size.height}});\r\n        } else controllerStream.off(`EventSaveWidth${this.state.targetSection}`,this.saveSize);\r\n    }\r\n\r\n    changeSizeImage = eventItem => {\r\n        this.setState({...this.state, size: eventItem.size});\r\n    };\r\n\r\n    setBorderRadius = eventItem => {\r\n\r\n    let radius = eventItem.borderRadius > 200 ? 200 : eventItem.borderRadius;\r\n    radius = eventItem.borderDown < 0 ? 0 : eventItem.borderRadius;\r\n        this.setState({\r\n            ...this.state,\r\n            borderRadius: radius\r\n        });\r\n    };\r\n\r\n    setOpacity = eventItem => {\r\n        let opacity = eventItem.opacity > 1 ? 1 : eventItem.opacity;\r\n        opacity = eventItem.opacity < 0 ? 0 : eventItem.opacity;\r\n            this.setState({\r\n                ...this.state,\r\n                opacity: opacity\r\n            });\r\n    }\r\n \r\n    refImage = null;\r\n    refImageComponent = node => this.refImage = node;\r\n\r\n    render(){\r\n\r\n        if (this.props.mode === 'dev'){\r\n            return (\r\n                <WrapperImg\r\n                ref = {this.refImageComponent}\r\n                size = {this.state.size}\r\n                onClick = {this.openImageInstruments}\r\n                onMouseDown = {this.saveCoords}\r\n                onMouseMove= {this.moveText}\r\n                onMouseLeave = {this.stopDragNdrop}\r\n                onMouseUp = {this.stopDragNdrop}\r\n                onDragStart = {this.stop}\r\n                coordX = {this.state.posImage ? this.state.posImage.x : null}\r\n                coordY = {this.state.posImage ? this.state.posImage.y : null}\r\n                indexZ = {this.state.startDragNdrop}\r\n                data-imagecomponentwrapper\r\n                >\r\n                    <ImageStyle\r\n                        data-imagecomponent\r\n                        borderRadius = {this.state.borderRadius}\r\n                        opacity = {this.state.opacity}\r\n                        src = {this.state.path}\r\n                        alt = 'img'\r\n                    />\r\n                </WrapperImg>\r\n            )\r\n        } else if (this.props.mode === 'production'){\r\n            return (\r\n                <ProductionStyle\r\n                ref = {this.refImageComponent}\r\n                size = {this.state.size}\r\n                mode = {this.props.mode}\r\n                coordX = {this.state.posImage ? this.state.posImage.x : null}\r\n                coordY = {this.state.posImage ? this.state.posImage.y : null}\r\n                indexZ = {this.state.startDragNdrop}\r\n                >\r\n                    <ImageStyle\r\n                        borderRadius = {this.state.borderRadius}\r\n                        opacity = {this.state.opacity}\r\n                        crossOrigin = \"anonymous\"\r\n                        src = {this.state.path}\r\n                        alt = 'img'\r\n                    />\r\n                </ProductionStyle>\r\n            )\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        controllerStream.on(`EventSetCurrentImage${this.state.id}`, this.setCurrentImage);\r\n        controllerStream.on(`EventChangeSize${this.state.id}`, this.changeSizeImage);\r\n        controllerStream.on(`EventSetOpacity${this.state.id}`, this.setOpacity);\r\n        controllerStream.on(`EventSetBorderRadius${this.state.id}`,this.setBorderRadius);\r\n        controllerStream.on(`EventSetWidth${this.state.id}`, this.setWidth);\r\n        controllerStream.on(`EventSetHeight${this.state.id}`, this.setHeight); \r\n        controllerStream.on(`EventSaveWidth${this.state.targetSection}`, this.saveSize);\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n       \r\n        controllerStream.off(`EventChangeSize${this.state.id}`, this.changeSizeImage);\r\n        controllerStream.off(`EventSetOpacity${this.state.id}`, this.setOpacity);\r\n        controllerStream.off(`EventSetBorderRadius${this.state.id}`,this.setBorderRadius);\r\n        controllerStream.off(`EventSetCurrentImage${this.state.id}`, this.setCurrentImage);\r\n        controllerStream.off(`EventSetWidth${this.state.id}`, this.setWidth);\r\n        controllerStream.off(`EventSetHeight${this.state.id}`, this.setHeight); \r\n        controllerStream.off(`EventSaveWidth${this.state.targetSection}`,this.saveSize);\r\n    }\r\n}\r\n\r\nexport default Image;","\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport eventEmitter,{controllerStream} from '../../../EventEmitter';\r\nimport styled from 'styled-components';\r\nimport './components.scss';\r\n\r\n\r\n\r\nconst WrapperText = styled.div.attrs(props => {\r\n    if (props.mode !== 'production')\r\n    return ({\r\n        style: {\r\n            zIndex: props.indexZ ? '9999' : null,\r\n            left: props.coordX ? props.coordX : '50%',\r\n            top:  props.coordY,\r\n        }\r\n    })\r\n})`\r\n    position: absolute;\r\n    font-size: ${props => props.size ? props.size : '120px'};\r\n    color: ${props => props.textColor};\r\n    text-align: center;\r\n    margin: 0;\r\n    word-break: break-all;\r\n`;\r\n\r\nconst TextStyle = styled.p`\r\n    width: 100%;\r\n    height: 100%;\r\n    font-family: ${props => props.font};\r\n    text-align: center;\r\n    margin: 0;\r\n    user-select: none;\r\n`;\r\n\r\n\r\nconst ProductionStyle = styled(WrapperText)`\r\n    left: ${props => props.coordX ? props.coordX : '50%'};\r\n    top:  ${props => props.coordY};\r\n\r\n\r\n`;\r\n\r\n    // @media ${`screen and (max-width: 500px)`} {\r\n    //     font-size: 50px;\r\n    //   }\r\n\r\nclass TextComponent extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        id: PropTypes.oneOfType([\r\n            PropTypes.string,\r\n            PropTypes.number\r\n        ]).isRequired,\r\n        targetSection: PropTypes.string.isRequired,\r\n        sizeParentBox: PropTypes.object.isRequired,\r\n        mode: PropTypes.string.isRequired,\r\n    }\r\n\r\n    state = {\r\n        id: this.props.id,\r\n        istrumentsActive: false,\r\n        isHaveSize: false,\r\n        parent: this.props.sizeParentBox,\r\n        targetSection: this.props.targetSection,\r\n        colorText: this.props.color,\r\n        sizeText: this.props.fontSize || this.props.size,\r\n        shiftCoords: null,\r\n        position: this.props.coords,\r\n        font: this.props.font ? this.props.font : 'Arial',\r\n        startDragNdrop: false,\r\n        contentText: this.props.content ? this.props.content : null,\r\n        countSection: 0,\r\n        sectionNumber: 0,\r\n        getSizeBool: false\r\n    }\r\n\r\n    openTitleInstruments = event => {\r\n\r\n         const componentsPatternText = {\r\n            id: this.state.id,\r\n            targetSection: this.state.targetSection,\r\n            type: 'text',\r\n            font: this.state.font,\r\n            color: this.state.colorText,\r\n            fontSize: this.state.sizeText || 120,\r\n            content: this.state.contentText,\r\n            coords: {...this.state.posText}, // x, y\r\n        };\r\n        eventEmitter.emit(`EventInstrumentPanel`,{\r\n                type: 'text',\r\n                targetSection: this.state.targetSection,\r\n                id: this.state.id,\r\n                componentStats: componentsPatternText,\r\n                sizeTextValue: this.state.sizeText\r\n        });\r\n        this.setState({...this.state, istrumentsActive: true});\r\n        event.stopPropagation();\r\n    }\r\n\r\n    changeColorText = colorRGB => {\r\n        if (typeof colorRGB === 'string')\r\n            this.setState({\r\n                ...this.state,\r\n                colorText: colorRGB\r\n            });\r\n    };\r\n\r\n    changeSizeText = eventSize => {\r\n        this.setState({...this.state, sizeText: eventSize.size});\r\n    };\r\n\r\n    saveSize = event => {\r\n        const {size} = event;\r\n        if (!this.state.getSizeBool){\r\n        this.setState({\r\n            ...this.state,\r\n            getSizeBool: true,\r\n            countSection: event.countSection,\r\n            sectionNumber: event.sectionNumber,\r\n            parent: {width: size.width, height: size.height}});\r\n        } else controllerStream.off(`EventSaveWidth${this.state.targetSection}`,this.saveSize);\r\n    }\r\n\r\n    changeContentText = eventContent => {\r\n        let booldContent = eventContent.content || eventContent.content === '';\r\n        if (booldContent)\r\n            this.setState({\r\n                ...this.state,\r\n                contentText: eventContent.content\r\n            });\r\n    };\r\n\r\n    saveCoords = event => {\r\n        if (event.nativeEvent.which !== 1) return false;\r\n        const element = this.refText.getBoundingClientRect();\r\n\r\n        const cords = {\r\n            left: element.left,\r\n            top: element.top,\r\n            width: element.right - element.left,\r\n            height: element.bottom - element.top\r\n        }\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            shiftCoords: {x: event.clientX - cords.left, y: event.clientY - cords.top},\r\n            startDragNdrop: !this.state.startDragNdrop ? true : false\r\n        });\r\n\r\n        event.stopPropagation();\r\n    };\r\n\r\n    setFont = eventItem => {\r\n        this.setState({\r\n            ...this.state,\r\n            font: eventItem.font\r\n        });\r\n    };\r\n\r\n    checkPivotPosition = (coordX, coordY) => {\r\n\r\n        const element = this.refText.getBoundingClientRect();\r\n        const borderTopLeft = 0;\r\n        const borderDown = 800 - element.height;\r\n        const borderRight = this.props.sizeParentBox.width - element.width;\r\n\r\n        if (coordY < borderTopLeft) coordY = borderTopLeft;\r\n        if (coordY > borderDown) coordY = borderDown;\r\n        if (coordX < borderTopLeft) coordX = borderTopLeft;\r\n        if (coordX > borderRight) coordX = borderRight;\r\n\r\n        return {x: coordX, y: coordY};\r\n    }\r\n\r\n    delta = (trans,transT) => {\r\n        return {\r\n            x: 0,\r\n            y: 0,\r\n        }\r\n    }\r\n    move = (x,y) => this.setState({...this.state, position: {x: x, y: y}});\r\n\r\n    moveText = event => {\r\n \r\n        if (this.state.startDragNdrop && this.state.istrumentsActive){\r\n\r\n            let sectionNum = this.state.sectionNumber === 0 ? 1 : this.state.sectionNumber;\r\n            let xItem = event.clientX - (this.props.sizeParentBox.left  * sectionNum);\r\n            let yItem = event.clientY - (this.props.sizeParentBox.top * sectionNum);\r\n\r\n            let coordX = xItem - this.state.shiftCoords.x + this.delta().x;\r\n            let coordY = yItem - this.state.shiftCoords.y + this.delta().y;\r\n\r\n            let coords = this.checkPivotPosition(coordX,coordY);\r\n\r\n            let convertToPercentX = coords.x * 100 / this.state.parent.width;\r\n            let convertToPercentY = coords.y * 100 / this.state.parent.height;\r\n\r\n            this.move(convertToPercentX.toFixed(2) + '%',\r\n                      convertToPercentY.toFixed(2) + '%');\r\n    }\r\n        event.stopPropagation();\r\n    };\r\n\r\n    stopDragNdrop = event => {\r\n            this.setState({...this.state, startDragNdrop: false},\r\n            () => controllerStream.emit(`EventUpdatePosition${this.state.id}`, this.state.position));\r\n        event.stopPropagation();\r\n    };\r\n\r\n    refText = null;\r\n    refTextComponent = node => this.refText = node;\r\n\r\n\r\n    render(){\r\n        if (this.props.mode === 'dev'){\r\n            return (\r\n                <WrapperText\r\n                    ref  = {this.refTextComponent}\r\n                    onClick={this.openTitleInstruments}\r\n                    textColor = {this.state.colorText ? this.state.colorText : 'red'}\r\n                    size = {this.state.sizeText ? this.state.sizeText + 'px' : '120px'}\r\n                    onMouseDown = {this.saveCoords}\r\n                    onMouseMove= {this.moveText}\r\n                    onMouseLeave = {this.stopDragNdrop}\r\n                    onMouseUp = {this.stopDragNdrop}\r\n                    coordX = {this.state.position ? this.state.position.x : null}\r\n                    coordY = {this.state.position ? this.state.position.y : null}\r\n                    indexZ = {this.state.startDragNdrop}\r\n                    data-textcomponent\r\n                >\r\n                    <TextStyle font = {this.state.font}>{this.state.contentText}</TextStyle>\r\n                </WrapperText>\r\n            ) \r\n        } else if (this.props.mode === 'production'){\r\n            return (\r\n                <ProductionStyle\r\n                    ref  = {this.refTextComponent}\r\n                    mode = {this.props.mode}\r\n                    textColor = {this.state.colorText ? this.state.colorText : 'red'}\r\n                    size = {this.state.sizeText ? this.state.sizeText + 'px' : '120px'}\r\n                    coordX = {this.state.position ? this.state.position.x : null}\r\n                    coordY = {this.state.position ? this.state.position.y : null}\r\n                    indexZ = {this.state.startDragNdrop}\r\n                >\r\n                    <TextStyle font = {this.state.font}>{this.state.contentText}</TextStyle>\r\n                </ProductionStyle>\r\n            )\r\n        }\r\n\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        controllerStream.on(`EventChangeColorText${this.state.id}`, this.changeColorText);\r\n        controllerStream.on(`EventSetFont${this.state.id}`, this.setFont);\r\n        controllerStream.on(`EventChangeSize${this.state.id}`, this.changeSizeText);\r\n        controllerStream.on(`EventChangeContentText${this.state.id}`, this.changeContentText);\r\n        controllerStream.on(`EventSaveWidth${this.state.targetSection}`,this.saveSize);\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        controllerStream.off(`EventChangeColorText${this.state.id}`, this.changeColorText);\r\n        controllerStream.off(`EventSetFont${this.state.id}`, this.setFont);\r\n        controllerStream.off(`EventChangeSize${this.state.id}`, this.changeSizeText);\r\n        controllerStream.off(`EventChangeContentText${this.state.id}`, this.changeContentText);\r\n        controllerStream.off(`EventSaveWidth${this.state.targetSection}`,this.saveSize);\r\n    }\r\n}\r\n\r\nexport default TextComponent;","import React,{Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport {Redirect} from 'react-router-dom';\r\nimport {loadCurrentProjectAction, exitProjectAction} from '../../redux/actions';\r\n\r\nimport Section from '../../components/buildComponents/section';\r\nimport builderHOC from '../../components/builderHOC';\r\nimport Loader from '../../components/loading/Loader';\r\nimport Header from '../../components/header/Header';\r\nimport withFirebase from '../../components/firebaseHOC';\r\nimport {connect} from 'react-redux';\r\n\r\n\r\n\r\nimport Input from '../../components/buildComponents/components/Input';\r\nimport Media from '../../components/buildComponents/components/Media';\r\nimport Image from '../../components/buildComponents/components/Image';\r\nimport TextComponent from '../../components/buildComponents/components/Text';\r\nimport BackgroundComponent from '../../components/buildComponents/components/Background';\r\n\r\nimport './production.scss';\r\n\r\nclass Production extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        firebase: PropTypes.object,\r\n    }\r\n\r\n    state = {\r\n        idProject: parseInt(this.props.match.params.param),\r\n        mode: 'production',\r\n        projectEmpty: false,\r\n        isLoadComponents: true,\r\n        componentsProdJSX: []\r\n    }\r\n\r\n    makeProduction = array => {\r\n\r\n        let {componentsProdJSX} = this.state;\r\n        let _components = [];\r\n\r\n        array.forEach(item => {\r\n\r\n            let props = {\r\n                sizeParentBox: {\r\n                    width: this.prodRef.data.width,\r\n                    height: this.prodRef.data.height,\r\n                    top: this.prodRef.data.top,\r\n                    left: this.prodRef.data.left,\r\n                },\r\n                ...item,\r\n                mode: 'production',\r\n            }\r\n\r\n            let Component = null;\r\n                if (item.type === 'background') Component = BackgroundComponent;\r\n                else if (item.type === 'input') Component = Input;\r\n                else if (item.type === 'media') Component = Media;\r\n                else if (item.type === 'image') Component = Image;\r\n                else if (item.type === 'text') Component = TextComponent;\r\n\r\n            const patternJSX = {\r\n                id: item.id,\r\n                targetSection: item.targetSection,\r\n                component: builderHOC(props)(Component)\r\n            };\r\n                _components.push(patternJSX);\r\n        });\r\n            this.setState({\r\n                ...this.state,\r\n                isLoadComponents: false,\r\n                componentsProdJSX: [...componentsProdJSX, ..._components],\r\n            });\r\n    };\r\n\r\n    prodRef = null;\r\n    mainProductionRef  = node => node ?\r\n    this.prodRef = {data: node.getBoundingClientRect(), node: node} : node;\r\n\r\n    render(){\r\n\r\n        const {userData} = this.props;\r\n        const {currentProjectsData} = userData;\r\n        const section = currentProjectsData.sectionsProject;\r\n\r\n        if (this.state.projectEmpty) return <Redirect to = '/Cabinet' />\r\n\r\n        if (userData.active && currentProjectsData.loadProject){\r\n            return (\r\n            <Fragment>\r\n                <Header key = 'Header' title = \"Constructor\" idUser = {userData.idUser} />\r\n                <div\r\n                    ref = {this.mainProductionRef}\r\n                    className = 'Production'\r\n                    key = 'Production'\r\n                    >\r\n                    {!this.state.isLoadComponents ?\r\n                        section.length &&\r\n                            <Section \r\n                                key = 'section'\r\n                                mode = {this.state.mode}\r\n                                currentProjectsData = {currentProjectsData}\r\n                                componentsProdJSX = {this.state.componentsProdJSX}\r\n                                section = {section}\r\n                            />\r\n                        : null\r\n                    }\r\n                </div>\r\n            </Fragment>\r\n            )\r\n        } else if (!this.props.firebase.getCurrentUser()) return <Redirect to = '/' />\r\n        else return <Loader  key = 'Loader' path = '/img/loading.gif' type = 'production' />\r\n    }\r\n\r\n    componentDidUpdate = (prevProps, prevState) => {\r\n        let {userData} = this.props;\r\n        let {currentProjectsData} = userData;\r\n\r\n        if (userData.active && !currentProjectsData.loadProject) {\r\n            const current =  userData.projects.find(item => item.id === this.state.idProject)\r\n            if (current)\r\n            this.props.dispatch(loadCurrentProjectAction({\r\n                id: current.id,\r\n                typeProject: current.type,\r\n                sectionsProject: [...current.sectionsProject],\r\n                components: [...current.components]\r\n            }))\r\n            else this.setState({...this.state, projectEmpty: true});\r\n        }\r\n\r\n        if (this.state.isLoadComponents && currentProjectsData.loadProject) \r\n            this.makeProduction(currentProjectsData.components);\r\n\r\n    }\r\n\r\n\r\n    componentDidMount = () => {\r\n        let {userData} = this.props;\r\n        let {currentProjectsData} = userData;\r\n\r\n        if (userData.active && !currentProjectsData.loadProject) {\r\n            const current =  userData.projects.find(item => item.id === this.state.idProject)\r\n            this.props.dispatch(loadCurrentProjectAction({\r\n                id: current.id,\r\n                sectionsProject: [...current.sectionsProject],\r\n                typeProject: current.type,\r\n                components: [...current.components]\r\n            }));\r\n        };\r\n\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n\r\n        let {userData} = this.props;\r\n        if (userData.active)  this.props.dispatch(exitProjectAction(true));\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        userData: {\r\n            active: state.cabinet.active,\r\n            idUser: state.cabinet.idUser,\r\n            projects: [...state.cabinet.projects],\r\n           currentProjectsData: {...state.builder}\r\n        },\r\n    }\r\n};\r\n\r\n  export default connect(mapStateToProps)(withFirebase(Production));","import React, {Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\n\r\n\r\nimport withFirebase from '../../components/firebaseHOC';\r\n\r\nimport Header from '../../components/header/Header';\r\nimport Loader from '../../components/loading/Loader';\r\n\r\nimport './about.scss';\r\n\r\nclass About extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        config: PropTypes.object.isRequired, /** @Config app */\r\n        firebase: PropTypes.object.isRequired, /** @firebase class for use firebase functions */\r\n        history: PropTypes.object, /** @Router HTML5 history */\r\n        location: PropTypes.object, /** @Router */\r\n        match: PropTypes.object, /** @Router */\r\n    }\r\n\r\n    state = {\r\n        config: this.props.config\r\n    };\r\n\r\n    render(){\r\n\r\n        let user = this.props.firebase.getCurrentUser();\r\n        if (user && this.props.idUser) {\r\n            const { config } = this.state;\r\n            return (\r\n                <Fragment>\r\n                    <Header title = {config.title} idUser = {user.uid} />\r\n                    <section className = 'About'>\r\n                        <div className = 'container'>\r\n                            <div className = 'col-12'>\r\n                                <div className = 'About__information'>\r\n                                <img alt = 'img'\r\n                                    className = 'information__logoAbout' \r\n                                    src = {process.env.PUBLIC_URL + '/img/about.jpg'}\r\n                                />\r\n                                    <p className ='developer'><span>Developer:</span>\r\n                                                            {config.about.developer}\r\n                                    </p>\r\n                                    <p className = 'year'><span>Year:</span> {config.about.year}</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </section>\r\n                </Fragment>\r\n            )\r\n        } else if (!user) return <Redirect to = { '/'} />\r\n        else return <Loader path = '/img/loading.gif' type = 'About' />\r\n\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n      idUser: state.cabinet.idUser,\r\n    }\r\n  };\r\n\r\nexport default connect(mapStateToProps)(withFirebase(About));","import {errorAction, loadUpdateCurrentProject} from '../actions';\r\n\r\nconst updateMiddleware = (item) => async (dispatch,getState, {firebase}) => {\r\n \r\n    let newProjects = item.projects.map(project => {\r\n        if (project.id === item.idProject) {\r\n            project.components = [...item.components]\r\n            project.sectionsProject = [...item.sectionsProject]\r\n        }\r\n        return project;\r\n    });\r\n    await firebase.db.collection(\"users\").doc(item.uid).update({\r\n        'projects': JSON.parse(JSON.stringify(newProjects))\r\n    })\r\n    .then(response => {\r\n        let project = item.projects.find(itemdb => itemdb.id === item.idProject);\r\n        dispatch(loadUpdateCurrentProject({\r\n            components: [...project.components],\r\n            idProject: item.idProject,\r\n            sectionsProject: item.sectionsProject,\r\n        }))\r\n    })\r\n    .catch(error => dispatch(errorAction(error.message)));\r\n};\r\n\r\nexport default updateMiddleware;","import React,{useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Viewer.scss';\r\n\r\nfunction Viewer(props){\r\n\r\n    let [mode] = useState(props.mode);\r\n    let [path] = useState(props.path);\r\n\r\n    const closeViewer = event => {\r\n        props.eventStreamBuild.emit(\"EventView\", { action: false, target: null});\r\n        event.stopPropagation();\r\n    }\r\n\r\n    return (\r\n        \r\n        <div onClick = {closeViewer} className = 'Viewer'>\r\n            {(mode === 'image' || mode === 'background') ? <img src = {path} alt = 'fullImage' /> \r\n            : \r\n            <iframe \r\n            src= {`https://www.youtube.com/embed/${props.iframe}`}\r\n            title = 'youtube'\r\n            frameBorder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" \r\n            allowFullScreen>\r\n            </iframe>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nViewer.propTypes = {\r\n    eventStreamBuild: PropTypes.object.isRequired, // events stream\r\n    mode: PropTypes.string.isRequired, // use mode\r\n    path: PropTypes.string.isRequired // path to data component\r\n}\r\n\r\nexport default Viewer;","import React,{Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {SketchPicker} from 'react-color';\r\n\r\n\r\nconst InputInstruments = props => {\r\n\r\n    let {colorPickerActive} = props.instrumentPanel;\r\n    let {content} = props.componentStats;\r\n    let {fontSize} = props.componentStats;\r\n    let {coords} = props.componentStats;\r\n    let {size} = props.componentStats;\r\n\r\n    let _content = content !== '' ? 'Input' : '';\r\n\r\n    return (\r\n        <Fragment>\r\n            <p className = 'titleInstument'>Position: </p>\r\n            <span className = 'textCoordsPanel'>\r\n            {coords.x ?\r\n                coords.x + ' / ' + coords.y : ' drop for active'}\r\n            </span>\r\n            <p className = 'titleInstument'>Color: </p>\r\n            <input \r\n                onClick = {props.cbSetColor}\r\n                className = 'button_switch'\r\n                type = 'button'\r\n                value = 'color pick'\r\n            />\r\n                { colorPickerActive ?\r\n                    <div className ='wrapperColorPicker'>\r\n                        <SketchPicker\r\n                        onChangeComplete={props.cbHandleChangeComplete}\r\n                        color = {props.color ? props.color : 'white'}\r\n                        />\r\n                    </div>\r\n                    : null\r\n                }\r\n            <p className = 'titleInstument'>Size (%):</p>\r\n            <div className = 'panel__sizes'>\r\n                <input\r\n                    className = 'button_switch'\r\n                    onChange = {props.cbSetWidth}\r\n                    type=\"number\"\r\n                    min = '10' max = '200'\r\n                    value = {size.w ? size.w : 100}\r\n                />\r\n                <input \r\n                    className = 'button_switch'\r\n                    onChange = {props.cbSetHeight}\r\n                    type=\"number\"\r\n                    min = '10' max = '200'\r\n                    value = {size.h ? size.h : 50}\r\n                />\r\n            </div>\r\n            <p className = 'titleInstument'>Text size: </p>\r\n            <input \r\n                className = 'button_switch'\r\n                onChange = {props.cbSetSize}\r\n                type=\"number\"\r\n                min = '10' max = '200'\r\n                value = {fontSize ? fontSize : 21}\r\n            />\r\n            <p className = 'titleInstument'>Border radius: </p>\r\n            <input\r\n                onChange = {props.cbSetBorderRadius}\r\n                className = 'button_switch radius'\r\n                type=\"number\"\r\n                value = {props.componentStats.borderRadius ?\r\n                            props.componentStats.borderRadius : 10\r\n                        }\r\n                min = '10' max = '200'\r\n            />\r\n\r\n            <p className = 'titleInstument'>Type input: </p>\r\n            <select \r\n            value = {props.componentStats.typeInput} \r\n            onChange = {props.cbSetType}\r\n            className = 'button_switch'\r\n        >\r\n        <option>button</option>\r\n        <option>text</option>\r\n        <option>password</option>\r\n        </select>\r\n        />\r\n            <p className = 'titleInstument'>Content: </p>\r\n            <input\r\n            className = 'button_switch'\r\n            onChange = {props.cbSetContent}\r\n            maxLength = '100'\r\n            type = 'text'\r\n            value = {content ? content : _content}\r\n        />\r\n            <input \r\n                onClick = {props.cbDelete}\r\n                className = 'instrumentPanel__deleteComponentButton'\r\n                type=\"button\"\r\n                value = 'delete'\r\n            />\r\n        </Fragment>\r\n    )\r\n};\r\n\r\nInputInstruments.propTypes = {\r\n    componentStats: PropTypes.object.isRequired, // object with current component data\r\n    cbSetColor: PropTypes.func.isRequired, // callback set color\r\n    cbHandleChangeComplete: PropTypes.func.isRequired, // callback state color picker\r\n    cbSetWidth: PropTypes.func.isRequired, // callback set width\r\n    cbSetHeight: PropTypes.func.isRequired, // callback set height\r\n    cbSetSize: PropTypes.func.isRequired, // callback set size\r\n    cbSetBorderRadius: PropTypes.func.isRequired, // callback set border-radius\r\n    cbSetContent: PropTypes.func.isRequired, // callback set content input\r\n    cbDelete: PropTypes.func.isRequired, // callback delete\r\n}\r\n\r\nexport default InputInstruments;","import React,{Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst MediaInstruments = props => {\r\n\r\n    let {size} = props.componentStats;\r\n    let {coords} = props.componentStats;\r\n\r\n    return (\r\n        <Fragment>\r\n            <p className = 'titleInstument'>Position: </p>\r\n            <span className = 'textCoordsPanel'>\r\n            {coords.x ?\r\n                coords.x + ' / ' + coords.y : ' drop for active'}\r\n            </span>\r\n            <p className = 'titleInstument'>Size (%):</p>\r\n            <div className = 'panel__sizes'>\r\n                <input\r\n                    className = 'button_switch'\r\n                    onChange = {props.cbSetWidth}\r\n                    type=\"number\"\r\n                    min = '10' max = '100'\r\n                    value = {size.w ? size.w : 30}\r\n                />\r\n                <input \r\n                    className = 'button_switch'\r\n                    onChange = {props.cbSetHeight}\r\n                    type=\"number\"\r\n                    min = '10' max = '100'\r\n                    value = {size.h ? size.h : 50}\r\n                />\r\n            </div>\r\n            <p className = 'titleInstument'>Content: </p>\r\n            <input \r\n                onClick = {props.cbSearch}\r\n                className = 'ImageSearchButton'\r\n                type=\"button\"\r\n                value = 'search media'\r\n            />\r\n            <input \r\n                onClick = {props.cbDelete}\r\n                className = 'instrumentPanel__deleteComponentButton'\r\n                type=\"button\"\r\n                value = 'delete'\r\n            />\r\n        </Fragment>\r\n    )\r\n};\r\n\r\nMediaInstruments.propTypes = {\r\n    componentStats: PropTypes.object.isRequired, // object with current component data\r\n    cbSearch: PropTypes.func.isRequired, // callback search\r\n    cbSetWidth: PropTypes.func.isRequired, // callback set width\r\n    cbSetHeight: PropTypes.func.isRequired, // callback set height\r\n    cbDelete: PropTypes.func.isRequired, // callback delete\r\n}\r\n\r\nexport default MediaInstruments;","import React, {Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ImageInstruments = props => {\r\n\r\n    let {coords} = props.componentStats;\r\n    let {size} = props.componentStats;\r\n    let fileRef = React.createRef();\r\n    return (\r\n        <Fragment>\r\n        <p className = 'titleInstument'>Position: </p>\r\n        <span className = 'textCoordsPanel'>\r\n        {coords.x ?\r\n            coords.x + ' / ' + coords.y : ' drop for active'}\r\n        </span>\r\n        <p className = 'titleInstument'>Size (%):</p>\r\n        <div className = 'panel__sizes'>\r\n            <input\r\n                className = 'button_switch'\r\n                onChange = {props.cbSetWidth}\r\n                type=\"number\"\r\n                min = '10' max = '100'\r\n                value = {size.w ? size.w : 30}\r\n            />\r\n            <input \r\n                className = 'button_switch'\r\n                onChange = {props.cbSetHeight}\r\n                type=\"number\"\r\n                min = '10' max = '100'\r\n                value = {size.h ? size.h : 30}\r\n            />\r\n        </div>\r\n        <p className = 'titleInstument'>Border radius: </p>\r\n            <input\r\n                onChange = {props.cbSetBorderRadius}\r\n                className = 'button_switch radius'\r\n                type=\"number\"\r\n                value = {props.componentStats.borderRadius ?\r\n                            props.componentStats.borderRadius : 10\r\n                        }\r\n                min = '10' max = '200'\r\n            />\r\n            <p className = 'titleInstument titleInstrument__opacity'>Opacity: </p>\r\n            <input \r\n                onChange = {props.cbSetOpacity}\r\n                className = 'ImageSearchButton'\r\n                type=\"number\"\r\n                value = {props.componentStats.opacity ?\r\n                    props.componentStats.opacity : 1\r\n                }\r\n                step = '0.1'\r\n                min = '0' max = '1'\r\n            />\r\n            <p className = 'titleInstument titleInstrument__opacity'>Loader: </p>\r\n            <div className = 'fileLoader'>\r\n            <input\r\n                ref = {fileRef}\r\n                className = 'fileInput'\r\n                onChange = {props.cbLoadFile}\r\n                accept=\"image/*\"\r\n                type=\"file\"\r\n            />\r\n                <input\r\n                        // onClick = {simulateClickFile}\r\n                        className = 'ImageSearchButton'\r\n                        type = 'button'\r\n                        value = 'loading file'\r\n                />\r\n            </div>\r\n            <input \r\n                onClick = {props.cbSearch}\r\n                className = 'ImageSearchButton'\r\n                type=\"button\"\r\n                value = 'search image'\r\n            />\r\n            <input \r\n                onClick = {props.cbDelete}\r\n                className = 'instrumentPanel__deleteComponentButton'\r\n                type=\"button\"\r\n                value = 'delete'\r\n            />\r\n        </Fragment>\r\n    )\r\n\r\n}\r\n\r\nImageInstruments.propTypes = {\r\n    componentStats: PropTypes.object.isRequired, // object with current component data\r\n    cbSetWidth: PropTypes.func.isRequired, // callback set width\r\n    cbSetHeight: PropTypes.func.isRequired, // callback set height\r\n    cbSetBorderRadius: PropTypes.func.isRequired, // callback set border-radius\r\n    cbSetOpacity: PropTypes.func.isRequired, // callback set opacity\r\n    cbLoadFile: PropTypes.func.isRequired, // callback load file\r\n    cbSearch: PropTypes.func.isRequired, // callback search\r\n    cbDelete: PropTypes.func.isRequired, // callback delete\r\n}\r\n\r\nexport default ImageInstruments;","import React, {Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {SketchPicker} from 'react-color';\r\n\r\nconst BackgroundInstruments = props => {\r\n    return (\r\n        <Fragment>\r\n        <p className = 'titleInstument'>Color: </p>\r\n        <input\r\n            onClick = {props.cbSetColor}\r\n            className = 'button_switch Color'\r\n            type = 'button'\r\n            value = 'color pick'\r\n        />\r\n            { props.colorPickerActive ?\r\n                <SketchPicker\r\n                    onChangeComplete={props.cbHandleChangeComplete}\r\n                    color = {props.color ? props.color : 'white'}\r\n                />\r\n                : null\r\n            }\r\n            <input \r\n                onClick = {props.cbSearch}\r\n                className = 'ImageSearchButton'\r\n                type = 'button'\r\n                value = 'background-image'\r\n            />\r\n        </Fragment>\r\n    )\r\n\r\n}\r\n\r\nBackgroundInstruments.propTypes = {\r\n    componentStats: PropTypes.object.isRequired, // object with current component data\r\n    cbSetColor: PropTypes.func.isRequired, // callback set color\r\n    cbHandleChangeComplete: PropTypes.func.isRequired, // callback picker state change\r\n    cbSearch: PropTypes.func.isRequired, // callback search\r\n}\r\n\r\nexport default BackgroundInstruments;","import React,{Fragment} from 'react';\r\nimport {SketchPicker} from 'react-color';\r\n\r\nconst TextInstruments = props => {\r\n\r\n        let {colorPickerActive} = props.instrumentPanel;\r\n        let {content} = props.componentStats;\r\n        let {fontSize} = props.componentStats;\r\n        let {coords} = props.componentStats;\r\n        let _content = content !== '' ? 'Title' : '';\r\n\r\n        return (\r\n            <Fragment>\r\n            <p className = 'titleInstument'>Position: </p>\r\n            <span className = 'textCoordsPanel'>\r\n            {coords.x ?\r\n                coords.x + ' / ' + coords.y : ' drop for active'}\r\n            </span>\r\n            <p className = 'titleInstument'>Color: </p>\r\n            <input \r\n                onClick = {props.cbSetColor}\r\n                className = 'button_switch'\r\n                type = 'button'\r\n                value = 'color pick'\r\n            />\r\n            <p className = 'titleInstument'>Text size: </p>\r\n            <input \r\n                className = 'button_switch'\r\n                onChange = {props.cbSetSize}\r\n                type=\"number\"\r\n                min = '10' max = '200'\r\n                value = {fontSize ? fontSize : 120}\r\n            />\r\n                { colorPickerActive ?\r\n                    <SketchPicker\r\n                    onChangeComplete={props.cbHandleChangeComplete}\r\n                    color = {props.color ? props.color : 'red'}\r\n                    />\r\n                    : null\r\n                }\r\n                <p className = 'titleInstument'>Font: </p>\r\n                <select \r\n                    value = {props.componentStats.font} \r\n                    onChange = {props.cbSetFont}\r\n                    className = 'button_switch'\r\n                >\r\n                <option>Arial</option>\r\n                <option>Times</option>\r\n                <option>Georgia</option>\r\n                <option>Impact</option>\r\n                <option>Tahoma</option>\r\n                <option>Verdana</option>\r\n                <option>Comic</option>\r\n                </select>\r\n            <p className = 'titleInstument'>Content: </p>\r\n            <input\r\n                className = 'button_switch'\r\n                onChange = {props.cbSetContent}\r\n                maxLength = '100'\r\n                type = 'text'\r\n                value = {content ? content : _content}\r\n            />\r\n            <input \r\n                onClick = {props.cbDelete}\r\n                className = 'instrumentPanel__deleteComponentButton'\r\n                type=\"button\"\r\n                value = 'delete'\r\n            />\r\n            </Fragment>\r\n        )\r\n}\r\n\r\nexport default TextInstruments;","import React, {Fragment} from 'react';\r\nimport eventEmitter,{controllerStream} from '../../EventEmitter';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport InputInstruments from './InputTools/InputInstruments';\r\nimport MediaInstruments from './MediaTools/MediaInstruments';\r\nimport ImageInstruments from './ImageTools/ImageInstruments';\r\nimport BackgroundInstruments from './BackgroundTools/BackgroundInstruments';\r\nimport TextInstruments from './TextTools/TextInstruments';\r\n\r\nimport Icon from '../Icon/icon';\r\n\r\nimport './instrumentsPanel.scss';\r\n\r\n\r\nclass InstrumentsPanel extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        instrumentPanel:  PropTypes.object.isRequired, /** @Settings for panel and data about component */\r\n        editComponentName: PropTypes.string, /** @Name editable component */\r\n        eventStreamBuild: PropTypes.object.isRequired // stream events\r\n    };\r\n\r\n    state = {\r\n        instrumentPanel: {...this.props.instrumentPanel},\r\n        componentStats: this.props.componentStats,\r\n        images: null,\r\n    };\r\n\r\n\r\n    closePanel = event => {\r\n        this.props.eventStreamBuild.emit('EventClosePanel', {close: false});\r\n    };\r\n\r\n    setSize = event => {\r\n        let {id} = this.state.componentStats;\r\n        let size = event.target.value > 200 ? 200 : event.target.value;\r\n\r\n        if (this.state.componentStats.type !== 'input')\r\n        this.setState({\r\n            ...this.state, \r\n            instrumentPanel: {...this.state.instrumentPanel},\r\n            componentStats: {...this.state.componentStats,fontSize: size}\r\n        }, () => controllerStream.emit(`EventChangeSize${id}`, {\r\n                targetSection: this.state.editComponentName, size: size \r\n        }));\r\n        else this.setState({\r\n                ...this.state, \r\n                instrumentPanel: {...this.state.instrumentPanel},\r\n                componentStats: {...this.state.componentStats,fontSize: size}\r\n            }, () => controllerStream.emit(`EventChangeSizeText${id}`, {size: size}\r\n            ));\r\n    };\r\n\r\n    setFont = event => {\r\n        let {id} = this.state.componentStats;\r\n        let fontName = event.target.value;\r\n        this.setState({\r\n            ...this.state, \r\n            instrumentPanel: {...this.state.instrumentPanel},\r\n            componentStats: {...this.state.componentStats,font: fontName}\r\n        },\r\n            () => controllerStream.emit(`EventSetFont${id}`, {\r\n                targetSection: this.state.editComponentName, font: fontName\r\n            })\r\n        );\r\n    }\r\n\r\n    setIframeContent = eventItem => {\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            componentStats:{\r\n                ...this.state.componentStats,\r\n                content: eventItem.iframe\r\n            }\r\n        });\r\n    }\r\n\r\n    setContent = event => {\r\n        let {id} = this.state.componentStats;\r\n        let contentValue = event.target.value;\r\n        this.setState({\r\n            ...this.state, \r\n            instrumentPanel: {...this.state.instrumentPanel},\r\n            componentStats: {...this.state.componentStats,content: contentValue}\r\n        },\r\n            () => controllerStream.emit(`EventChangeContentText${id}`,{\r\n                targetSection: this.state.editComponentName, content: contentValue\r\n            })\r\n        );\r\n        if (event) event.stopPropagation();\r\n    };\r\n\r\n    setWidth = event => {\r\n        const {id} = this.state.componentStats;\r\n        const width = event.target.value;\r\n        this.setState({\r\n            ...this.state,\r\n            componentStats: {...this.state.componentStats,\r\n                size: {\r\n                    ...this.state.componentStats.size,\r\n                    w: width\r\n                }}\r\n        },\r\n            () => controllerStream.emit(`EventSetWidth${id}`,{width: width}));\r\n\r\n        if (event) event.stopPropagation();\r\n    };\r\n\r\n    setHeight = event => {\r\n        const {id} = this.state.componentStats;\r\n        const height = event.target.value;\r\n        this.setState({\r\n            ...this.state,\r\n            componentStats: {...this.state.componentStats,\r\n                size: {\r\n                    ...this.state.componentStats.size,\r\n                    h: height\r\n                }}\r\n        },\r\n            () => controllerStream.emit(`EventSetHeight${id}`,{height: height}));\r\n\r\n        if (event) event.stopPropagation();\r\n    }\r\n\r\n    updatePosition = eventItem => {\r\n        if (!eventItem) return;\r\n        this.setState({\r\n            ...this.state, \r\n            componentStats: {\r\n                ...this.state.componentStats,\r\n                coords: {\r\n                    ...this.state.componentStats.coords,\r\n                    x: eventItem.x,\r\n                    y: eventItem.y\r\n                }\r\n            }\r\n        });\r\n    };\r\n\r\n    setColor = event => {\r\n        this.setState({...this.state,\r\n            instrumentPanel:{\r\n                ...this.state.instrumentPanel,\r\n                colorPickerActive: this.state.instrumentPanel.colorPickerActive ? false : true\r\n            }\r\n        });\r\n        if (event) event.stopPropagation();\r\n    };\r\n\r\n    setType = event => {\r\n\r\n        let {id} = this.state.componentStats;\r\n        let typeInput = event.target.value;\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            componentStats: {\r\n                ...this.state.componentStats,\r\n                typeInput: typeInput\r\n            }\r\n        },\r\n         () => controllerStream.emit(`EventSetType${id}`, typeInput));\r\n        if (event) event.stopPropagation();\r\n    }\r\n\r\n    setOpacity = event => {\r\n        let {id} = this.state.componentStats;\r\n        let opacity = event.target.value;\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            componentStats: {...this.state.componentStats,opacity: opacity}\r\n        },\r\n         () => controllerStream.emit(`EventSetOpacity${id}`, {opacity: opacity}));\r\n    };\r\n\r\n    setBorderRadius = event => {\r\n        let {id} = this.state.componentStats;\r\n        let radius = event.target.value;\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            componentStats: {...this.state.componentStats,borderRadius: radius}\r\n        },\r\n         () => controllerStream.emit(`EventSetBorderRadius${id}`, {borderRadius: radius}));\r\n    };\r\n\r\n    updateBimageStats = eventItem => {\r\n        const {images} = eventItem;\r\n        if (eventItem.mode !== 'image')\r\n        this.setState({\r\n            ...this.state,\r\n            componentStats:{\r\n                ...this.state.componentStats,\r\n                backgroundImage: images.urlFull\r\n            }\r\n        });\r\n        else {\r\n            this.setState({\r\n                ...this.state,\r\n                componentStats:{\r\n                    ...this.state.componentStats,\r\n                    image: images.urlFull\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    handleChangeComplete = event => {\r\n\r\n        const {rgb} = event;\r\n        let colorRGB = `rgb(${rgb.r},${rgb.g},${rgb.b},${rgb.a})`;\r\n\r\n        let {id} = this.state.componentStats;\r\n        if (this.state.componentStats.type === 'background'){\r\n            this.setState({\r\n                ...this.state,\r\n                componentStats: {...this.state.componentStats,color: colorRGB}\r\n            }, () => controllerStream.emit(`EventChangeColorBackground${id}`,\r\n                        {colorRGB: this.state.componentStats.color}\r\n                    ));\r\n        }\r\n\r\n        else if (this.state.componentStats.type === 'text') {\r\n            this.setState({\r\n                ...this.state,\r\n                componentStats: {...this.state.componentStats,color: colorRGB}\r\n            },\r\n            () => controllerStream.emit(`EventChangeColorText${id}`, colorRGB));\r\n        }\r\n\r\n        else if (this.state.componentStats.type === 'input') {\r\n            this.setState({\r\n                ...this.state,\r\n                componentStats: {...this.state.componentStats,color: colorRGB}\r\n            },\r\n            () => controllerStream.emit(`EventChangecolor${id}`, colorRGB));\r\n        }\r\n\r\n    };\r\n\r\n    redirectSaveChanges = event => {\r\n        this.props.eventStreamBuild.emit(\"EventSaveChangesComponent\", {\r\n            ...this.state.componentStats,\r\n            id: this.state.componentStats.id,\r\n            type: this.state.componentStats.type,\r\n            ms: 0\r\n        });\r\n        if (event) event.stopPropagation();\r\n    }\r\n\r\n    saveChanges = event => {\r\n\r\n        this.props.eventStreamBuild.emit(\"EventSaveChangesComponent\", {\r\n                ...this.state.componentStats,\r\n                id: this.state.componentStats.id,\r\n                type: this.state.componentStats.type,\r\n                ms: 1500,\r\n            });\r\n\r\n        eventEmitter.emit('EventRedirectConfirm', true);\r\n        if (event) event.stopPropagation();\r\n    }\r\n\r\n    deleteComponent = event => {\r\n        this.props.eventStreamBuild.emit('EventDeleteComponent', {\r\n            id: this.state.componentStats.id,\r\n            targetSection: this.state.componentStats.targetSection,\r\n            type: this.state.componentStats.type\r\n        });\r\n    };\r\n\r\n    search = event => {\r\n\r\n        let {id} = this.state.componentStats;\r\n        this.props.eventStreamBuild.emit('EventModalSearchOn', {idComponent: id, mode: this.state.componentStats.type});\r\n\r\n        event.stopPropagation();\r\n    };\r\n\r\n    loadFile = event => {\r\n        let {id} = this.state.componentStats;\r\n        try {\r\n            let image = event.target.files[0];\r\n            let reader = new FileReader();\r\n            if (image.type[0] !== 'i') throw new Error('Invalid file');\r\n            reader.readAsDataURL(image);\r\n            reader.onload = (e) => {\r\n                controllerStream.emit(`EventSetCurrentImage${id}`,{ urlFull: reader.result });\r\n                this.updateBimageStats({images: { urlFull: reader.result }, mode: 'image'});\r\n                e.stopPropagation();\r\n            }\r\n            reader.onerror = () => {\r\n                console.error(reader.error);\r\n            }\r\n        } catch (error) {\r\n            console.error(error.message);\r\n        }\r\n\r\n        event.stopPropagation();\r\n    }\r\n\r\n    makePanelInstruments = (type) => {\r\n            switch (type){\r\n                case 'text':\r\n                   return(\r\n                    <TextInstruments\r\n                        instrumentPanel = {{...this.state.instrumentPanel}}\r\n                        componentStats = {{...this.state.componentStats}}\r\n                        cbSetColor = {this.setColor}\r\n                        cbSetSize = {this.setSize}\r\n                        cbHandleChangeComplete = {this.handleChangeComplete}\r\n                        cbSetContent = {this.setContent}\r\n                        cbSetFont = {this.setFont}\r\n                        cbSetOpacity = {this.setOpacity}\r\n                        color = {this.state.componentStats.color}\r\n                        cbDelete = {this.deleteComponent}\r\n                    />\r\n                   )\r\n                case 'background':\r\n                    return (\r\n                        <BackgroundInstruments\r\n                            colorPickerActive = {this.state.instrumentPanel.colorPickerActive}\r\n                            componentStats = {{...this.state.componentStats}}\r\n                            cbSetColor = {this.setColor}\r\n                            color = {this.state.componentStats.color}\r\n                            cbHandleChangeComplete = {this.handleChangeComplete}\r\n                            cbSearch = {this.search}\r\n                        />\r\n                    )\r\n                case 'image':\r\n                        return (\r\n                            <ImageInstruments\r\n                                instrumentPanel = {{...this.state.instrumentPanel}}\r\n                                componentStats = {{...this.state.componentStats}}\r\n                                cbSearch = {this.search}\r\n                                cbSetSize = {this.setSize}\r\n                                cbSetBorderRadius = {this.setBorderRadius}\r\n                                cbSetOpacity = {this.setOpacity}\r\n                                cbSetWidth = {this.setWidth}\r\n                                cbSetHeight = {this.setHeight}\r\n                                cbLoadFile = {this.loadFile}\r\n                                cbDelete = {this.deleteComponent}\r\n                            />\r\n                        )\r\n                case 'media':\r\n                        return (\r\n                            <MediaInstruments\r\n                                instrumentPanel = {{...this.state.instrumentPanel}}\r\n                                componentStats = {{...this.state.componentStats}}\r\n                                cbSearch = {this.search}\r\n                                cbSetWidth = {this.setWidth}\r\n                                cbSetHeight = {this.setHeight}\r\n                                cbDelete = {this.deleteComponent}\r\n                            />\r\n                            )\r\n                case 'input':\r\n                        return (\r\n                            <InputInstruments\r\n                                instrumentPanel = {{...this.state.instrumentPanel}}\r\n                                componentStats = {{...this.state.componentStats}}\r\n                                cbSetColor = {this.setColor}\r\n                                cbSetBorderRadius = {this.setBorderRadius}\r\n                                cbHandleChangeComplete = {this.handleChangeComplete}\r\n                                cbSetSize = {this.setSize}\r\n                                cbSetWidth = {this.setWidth}\r\n                                cbSetHeight = {this.setHeight}\r\n                                color = {this.state.componentStats.color}\r\n                                cbSetContent = {this.setContent}\r\n                                cbSetType = {this.setType}\r\n                                cbDelete = {this.deleteComponent}\r\n                            />\r\n                        )\r\n                default: return <p className = 'warningInstruments'>No found element</p>\r\n            }\r\n    };\r\n\r\n    render(){\r\n        let { instrumentActive } = this.state.instrumentPanel;\r\n        return (\r\n            <Fragment>\r\n                <div  className = 'instumentsPanel'>\r\n                    <button\r\n                        onClick = {this.closePanel}\r\n                        className = 'closeInstrumentsPanel'\r\n                    >\r\n                        <Icon path = '/img/close.svg' />\r\n                    </button>\r\n                    <h3>Instruments</h3>\r\n                    {\r\n                        instrumentActive ? \r\n                        <p className = 'TextComponent'>{this.state.componentStats.type}</p>\r\n                        : null\r\n                    }\r\n                    {\r\n                        instrumentActive ?\r\n                        <div className = 'instuments'>\r\n                            {this.makePanelInstruments(this.state.componentStats.type)}\r\n                        </div>\r\n                        : null\r\n                    }\r\n                </div>\r\n            </Fragment>\r\n        )\r\n    };\r\n\r\n    componentDidUpdate = (oldProps, oldState) => {\r\n        if (oldState.componentStats !== this.state.componentStats)\r\n        this.saveChanges();\r\n    };\r\n\r\n    componentDidMount = event => {\r\n        eventEmitter.on('EventRedirectSaveChanges', this.redirectSaveChanges);\r\n        eventEmitter.on(\"EventSetBImageInstumentPanel\", this.updateBimageStats);\r\n        eventEmitter.on(`EventSetIframe`, this.setIframeContent);\r\n        controllerStream.on(`EventUpdatePosition${this.state.componentStats.id}`, this.updatePosition);\r\n    };\r\n\r\n    componentWillUnmount = event => {\r\n        if (this.timer) clearTimeout(this.timer);\r\n        eventEmitter.off('EventRedirectSaveChanges', this.redirectSaveChanges);\r\n        eventEmitter.off(\"EventSetBImageInstumentPanel\", this.updateBimageStats);\r\n        eventEmitter.off(`EventSetIframe`, this.setIframeContent);\r\n        controllerStream.off(`EventUpdatePosition${this.state.componentStats.id}`, this.updatePosition);\r\n    };\r\n};\r\n\r\nexport default InstrumentsPanel;","import React,{Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Viewer from '../imageViewer/Viewer';\r\nimport InstrumentsPanel from '../../components/instrumentsPanel/InstrumentsPanel';\r\nimport ModalWindow from '../../components/modalWindow/ModalWindow';\r\n\r\n\r\n\r\nconst AdditionalTools = props => {\r\n\r\n    return (\r\n        <Fragment key = 'AdditionalBuild'>\r\n            {   props.modalViewer.action &&\r\n                    <Viewer \r\n                        key = 'ImageViewer'\r\n                        eventStreamBuild = {props.eventStreamBuild}\r\n                        mode = {props.modalViewer.mode}\r\n                        path = {props.modalViewer.target}\r\n                        iframe = {props.modalViewer.iframe}\r\n                    />\r\n            }\r\n            {   props.modalSearch &&\r\n                    <ModalWindow\r\n                        eventStreamBuild = {props.eventStreamBuild}\r\n                        idComponent = {props.componentStats.id}\r\n                        modalSearchMode = {props.modalSearchMode}\r\n                        key = 'ModalWindow' workMode = 'Search'\r\n                    />\r\n            }\r\n                <InstrumentsPanel\r\n                    key = {`InstrumentsPanel${props.componentStats.id}`}\r\n                    eventStreamBuild = {props.eventStreamBuild}\r\n                    editComponentName = {props.editComponentName}\r\n                    componentStats = {props.componentStats}\r\n                    instrumentPanel = {props.instrumentPanel}\r\n                />\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nAdditionalTools.propTypes = {\r\n    eventStreamBuild: PropTypes.object.isRequired, // events stream\r\n    componentStats: PropTypes.object.isRequired, // current components data\r\n    instrumentPanel: PropTypes.object.isRequired, // instruments data\r\n    modalViewer: PropTypes.object.isRequired, // Viewer data\r\n}\r\n\r\nexport default AdditionalTools;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Input from '../buildComponents/components/Input';\r\nimport Media from '../buildComponents/components/Media';\r\nimport Image from '../buildComponents/components/Image';\r\nimport TextComponent from '../buildComponents/components/Text';\r\nimport BackgroundComponent from '../buildComponents/components/Background';\r\n\r\nimport './buildMenu.scss';\r\n\r\nclass BuildMenu extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        mode: PropTypes.string.isRequired, /** @String work mode component */\r\n        editComponentName: PropTypes.string,\r\n        eventStreamBuild: PropTypes.object, /** @Events stream build */\r\n        countSection: PropTypes.number, /** @Number for new section id */\r\n        countComponents: PropTypes.number, /** @Number last project */\r\n        sizeParentBox: PropTypes.object /** @Object with width and height parent(bg) */\r\n    }\r\n\r\n\r\n    state = {\r\n        mode: this.props.mode,\r\n        sizeParentBox: {...this.props.sizeParentBox},\r\n        title: 'Title'\r\n    }\r\n\r\n    addText = event => {\r\n        let id = Math.random().toFixed(3);\r\n\r\n        const componentsPatternText = {\r\n            type: 'text',\r\n            font: 'Arial',\r\n            color: null,\r\n            opacity: 1,\r\n            fontSize: null,\r\n            content: 'Title',\r\n            coords: {x: null, y: null}, // x, y\r\n            id: id,\r\n            targetSection: this.props.editComponentName,\r\n        };\r\n        this.props.eventStreamBuild.emit('EventBuildComponents',{\r\n            componentsPattern: componentsPatternText,\r\n            type: componentsPatternText.type,\r\n            component: <TextComponent\r\n                            key = {`text${id}`}\r\n                            mode = 'dev'\r\n                            {...componentsPatternText}\r\n                            sizeParentBox = {{...this.props.sizeParentBox}}\r\n                            id = {id}\r\n                        >Title</TextComponent>\r\n        });\r\n        event.stopPropagation();\r\n    }\r\n\r\n    addBackground = event => {\r\n        let id = Math.random().toFixed(3);\r\n\r\n        const componentsPatternBackground = {\r\n            id: id,\r\n            type: 'background',\r\n            backgroundColor: null,\r\n            backgroundImage: null,\r\n            targetSection: this.state.editComponentName,\r\n        };\r\n\r\n        this.props.eventStreamBuild.emit('EventBuildComponents',{\r\n            componentsPattern: componentsPatternBackground,\r\n            type: componentsPatternBackground.type,\r\n            component: <BackgroundComponent\r\n                            targetSection = {this.props.editComponentName}\r\n                            {...componentsPatternBackground}\r\n                            key = {`bg${id}`}\r\n                            id = {id}\r\n                        />\r\n        });\r\n\r\n        event.stopPropagation();\r\n    }\r\n\r\n    addImage = event => {\r\n        let id = Math.random().toFixed(3);\r\n\r\n        const componentsPatternImage = {\r\n            borderRadius: 0,\r\n            type: 'image',\r\n            size: {w: 30, h: 50},\r\n            opacity: 1,\r\n            zIndex: null,\r\n            image: '/img/photoPattern.svg',\r\n            coords: {x: null, y: null}, // x, y\r\n            id: id,\r\n            targetSection: this.props.editComponentName,\r\n        };\r\n        this.props.eventStreamBuild.emit('EventBuildComponents',{\r\n            componentsPattern: componentsPatternImage,\r\n            type: componentsPatternImage.type,\r\n            component: <Image\r\n                            key = {`image${id}`}\r\n                            sizeParentBox = {this.props.sizeParentBox}\r\n                            id = {id}\r\n                            mode = 'dev'\r\n                            path = {'/img/photoPattern.svg'}\r\n                            {...componentsPatternImage}\r\n                            type = 'image' />\r\n        });\r\n        event.stopPropagation();\r\n    }\r\n\r\n    addMedia = event => {\r\n        let id = Math.random().toFixed(3);\r\n\r\n        const  componentsPatternMedia = {\r\n            type: 'media',\r\n            size: {w: null, h: null},\r\n            content: null,\r\n            coords: {x: null, y: null}, // x, y\r\n            id: id,\r\n            targetSection: this.props.editComponentName,\r\n        };\r\n\r\n        this.props.eventStreamBuild.emit('EventBuildComponents', {\r\n            componentsPattern: componentsPatternMedia,\r\n            type: componentsPatternMedia.type,\r\n            component: <Media\r\n                            key = {`media${id}`}\r\n                            targetSection = {this.props.editComponentName}\r\n                            sizeParentBox = {this.props.sizeParentBox}\r\n                            content = {null}\r\n                            id = {id}\r\n                            path = {'/img/photoPattern.mp4'}\r\n                            {...componentsPatternMedia}\r\n                            type = 'media'\r\n                            mode = 'dev'\r\n                        />\r\n        });\r\n        event.stopPropagation();\r\n    }\r\n\r\n    addInput = event => {\r\n        let id = Math.random().toFixed(3);\r\n\r\n        const  componentsPatternInput = {\r\n            type: 'input',\r\n            size: {w: null, h: null},\r\n            typeInput: 'button',\r\n            color: null,\r\n            fontSize: null,\r\n            borderRadius: null,\r\n            content: null,\r\n            coords: {x: null, y: null}, // x, y\r\n            id: id,\r\n            targetSection: this.props.editComponentName,\r\n        };\r\n\r\n        this.props.eventStreamBuild.emit('EventBuildComponents', {\r\n            componentsPattern: componentsPatternInput,\r\n            type: componentsPatternInput.type,\r\n            component: <Input\r\n                            key = {`input${id}`}\r\n                            targetSection = {this.props.editComponentName}\r\n                            sizeParentBox = {this.props.sizeParentBox}\r\n                            id = {id}\r\n                            inputType = 'button'\r\n                            {...componentsPatternInput}\r\n                            type = 'input'\r\n                            mode = 'dev'\r\n                        />\r\n        });\r\n        event.stopPropagation();\r\n    }\r\n\r\n    addSection = event => {\r\n        let id = Math.random().toFixed(3);\r\n\r\n        const componentsPatternBackground = {\r\n            backgroundColor: null,\r\n            backgroundImage: null,\r\n            targetSection: `Section${id}`,\r\n            id: `Section${id}`,\r\n            type: 'background',\r\n        };\r\n        this.props.eventStreamBuild.emit('EventNewSection', {\r\n            componentsPattern: componentsPatternBackground,\r\n            component: <BackgroundComponent\r\n                            {...componentsPatternBackground}\r\n                            key = {`bg${id}`}\r\n                            id = {id}\r\n                            targetSection = {`Section${id}`}\r\n                            width = '100%'\r\n                            height = '800px'\r\n                            type = 'background'\r\n                            mode = 'dev'\r\n                        />\r\n        });\r\n        event.stopPropagation();\r\n    }\r\n\r\n    render(){\r\n\r\n        if (this.state.mode === 'build'){\r\n            return (\r\n                <div className = 'ComponentsMenu'>\r\n                    <button \r\n                        onClick = {this.addImage} \r\n                        className = 'ImageTool CompoentnsMenu_button' \r\n                    >\r\n                        <span>Image</span>\r\n                    </button>\r\n                    <button \r\n                        onClick = {this.addText} \r\n                        className = 'TextTool CompoentnsMenu_button' >\r\n                        <span>Text</span>\r\n                    </button>\r\n                    <button\r\n                        onClick = {this.addInput}\r\n                        disabled = {this.props.editComponentName !== 'Header' ? false : true}\r\n                        className = 'ButtonTool CompoentnsMenu_button' >\r\n                        <span>Button</span>\r\n                    </button>\r\n                    <button onClick = {this.addMedia}\r\n                        className = 'VideoTool CompoentnsMenu_button'\r\n                    >\r\n                        <span>Video</span>\r\n                    </button>\r\n                </div>\r\n            )\r\n        } else if (this.state.mode === 'section') {\r\n            return (\r\n                <div className = 'sectionMode'>\r\n                    <button\r\n                        onClick = {this.addSection}\r\n                        className = 'newSectionTool CompoentnsMenu_button'\r\n                    >\r\n                        <span>New section</span>\r\n                    </button>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default BuildMenu;","import React,{Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Icon from '../Icon/icon';\r\nimport BuildMenu from '../componentsBuildMenu/BuildMenu';\r\n\r\nimport './controllers.scss';\r\n\r\nclass Controllers extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        countComponents: PropTypes.number.isRequired, /** @number last project id */\r\n        sizeParentBox: PropTypes.object, /** @Object with width and height parent(bg) */\r\n        eventStreamBuild: PropTypes.object, /** @Events stream */\r\n        menuActive: PropTypes.bool, /** @Bool value active menu or unactive */\r\n    }\r\n\r\n    state = {\r\n        viewComponentMenu: false,\r\n        editComponentName: this.props.editComponentName,\r\n        shiftX: 0,\r\n        shiftY: 0,\r\n        coordsX: '50%',\r\n        coordsY: '0',\r\n        shadowDisplay: 'block'\r\n    }\r\n\r\n    componentMenu = event => {\r\n        this.setState({viewComponentMenu: this.state.viewComponentMenu ? false : true});\r\n        event.stopPropagation();\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <Fragment>\r\n            {\r\n                <div\r\n                ref = {this.refControll}\r\n                className = 'ControllersEditComponent'\r\n                onClick = {this.componentMenu}\r\n                >\r\n                    <Icon\r\n                        onClick = {this.componentMenu}\r\n                        className = 'ControllersEditComponent__addButton'\r\n                        path = '/img/addButton.png'\r\n                    />\r\n                    { this.state.viewComponentMenu ?\r\n                        <BuildMenu\r\n                            key = {`buildMenu ${this.state.editComponentName}`}\r\n                            mode = 'build'\r\n                            eventStreamBuild = {this.props.eventStreamBuild}\r\n                            editComponentName = {this.state.editComponentName}\r\n                            sizeParentBox = {this.props.sizeParentBox}\r\n                            countComponents = {this.props.countComponents}\r\n                        /> : null\r\n                    }\r\n                </div>\r\n            }\r\n            </Fragment>\r\n        )\r\n    }\r\n\r\n    componentDidUpdate = () => {\r\n        if (this.props.editComponentName !== this.state.editComponentName)\r\n            this.setState({\r\n                ...this.state,\r\n                editComponentName: this.props.editComponentName\r\n            })\r\n    }\r\n\r\n}\r\n\r\nexport default Controllers;","import React,{Fragment} from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport {Redirect} from 'react-router-dom';\r\nimport eventEmitter from '../../EventEmitter';\r\nimport EventBuild from 'events';\r\nimport {loadCurrentProjectAction, exitProjectAction} from '../../redux/actions';\r\n\r\nimport {middlewareDeleteProjectComponent} from '../../redux/middleware/middlewareDelete';\r\nimport updateMiddleware from '../../redux/middleware/updateMiddleware';\r\nimport withFirebase from '../../components/firebaseHOC';\r\nimport {connect} from 'react-redux';\r\n\r\nimport AdditionalTools from '../../components/additionalTools/additionalTools';\r\nimport builderHOC from '../../components/builderHOC';\r\nimport Controllers from '../../components/controllers/controllers';\r\nimport Loader from '../../components/loading/Loader';\r\nimport Header from '../../components/header/Header';\r\nimport Section from '../../components/buildComponents/section';\r\nimport BuildMenu from '../../components/componentsBuildMenu/BuildMenu';\r\n\r\nimport './build.scss';\r\n\r\nimport Input from '../../components/buildComponents/components/Input';\r\nimport Media from '../../components/buildComponents/components/Media';\r\nimport Image from '../../components/buildComponents/components/Image';\r\nimport TextComponent from '../../components/buildComponents/components/Text';\r\nimport BackgroundComponent from '../../components/buildComponents/components/Background';\r\n\r\nclass Build extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        firebase: PropTypes.object.isRequired, /** @firebase class for use firebase functions */\r\n        active: PropTypes.bool, /** @active - status firebase auth */\r\n        dispatch: PropTypes.func.isRequired, /** @dispatch - redux */\r\n        history: PropTypes.object, /** @Router HTML5 history */\r\n        location: PropTypes.object, /** @Router */\r\n        match: PropTypes.object.isRequired, /** @Router */\r\n        userData: PropTypes.object.isRequired, /** @UserData data about projects,user and current edit prject */\r\n    }\r\n\r\n    state = {\r\n            idProject: parseInt(this.props.match.params.param),\r\n            editStart: false,\r\n            isChange: false,\r\n            isLoadComponents: true,\r\n            projectEmpty: false,\r\n            componentStats: {},\r\n            componentJSX: [],\r\n            instrumentPanel: {\r\n                colorPickerActive: false,\r\n                instrumentActive: false,\r\n            },\r\n            editComponentName:  null,\r\n            menuActive: false,\r\n            modalSearch: false,\r\n            modalSearchMode: null,\r\n            modalViewer: {action: false, image: null, mode: null },\r\n            sizeParentBox: null,\r\n        }\r\n\r\n        eventEmitterBuild = new EventBuild(); // events stream for controllers\r\n        timer = null; // save timer\r\n\r\n    modalSearchOn = itemEvent => {\r\n        const modeHave = itemEvent.hasOwnProperty('mode');\r\n        this.setState({\r\n            ...this.state, \r\n            modalSearch: !this.state.modalSearch,\r\n            modalSearchMode: modeHave ? itemEvent.mode : null\r\n        });\r\n    }\r\n\r\n    ViewerSwitch = itemEvent => {\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            modalViewer: {\r\n                ...this.state.modalViewer,\r\n                action: itemEvent.action,\r\n                target: itemEvent.target,\r\n                mode: itemEvent.mode,\r\n                iframe: itemEvent.iframe\r\n            }\r\n        });\r\n    };\r\n\r\n    workModeEdit = itemEvent => {\r\n\r\n        if (itemEvent.editStart)\r\n        this.setState({\r\n            ...this.state,\r\n            editStart: itemEvent.editStart,\r\n            editComponentName: itemEvent.targetSection,\r\n            menuActive: true,\r\n        });\r\n\r\n    }\r\n\r\n    openInstrument = itemEvent => {\r\n            const idEqual = this.state.componentStats.id === itemEvent.componentStats.id;\r\n            if (!idEqual || !this.state.instrumentPanel.instrumentActive)\r\n            this.setState({\r\n                ...this.state,\r\n                editComponentName: itemEvent.targetSection,\r\n                componentStats: {\r\n                    ...this.state.componentStats,\r\n                    ...itemEvent.componentStats\r\n                },\r\n                instrumentPanel: {\r\n                    ...this.state.instrumentPanel,\r\n                    instrumentActive: true,\r\n                }\r\n            });\r\n    }\r\n\r\n    closePanel = itemEvent => {\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            instrumentPanel: {\r\n                ...this.state.instrumentPanel,\r\n                colorPickerActive: false,\r\n                instrumentActive: itemEvent.close\r\n            }\r\n        });\r\n    };\r\n\r\n    deleteComponent = eventItem => {\r\n        let {currentProjectsData} = this.props.userData;\r\n        let {componentJSX} = this.state;\r\n\r\n        const data = {\r\n            id: this.state.idProject,\r\n            uid: this.props.userData.idUser,\r\n            idComponent: eventItem.id,\r\n            sectionsProject: [...currentProjectsData.sectionsProject],\r\n            type: eventItem.type\r\n        }\r\n\r\n        this.props.dispatch(middlewareDeleteProjectComponent(data))\r\n        .then(id => {\r\n            if (id !== null){\r\n               const _componentJSX = componentJSX.filter(item => item.id !== id);\r\n            this.setState({\r\n                ...this.state,\r\n                componentJSX: _componentJSX\r\n            });\r\n        }\r\n        });\r\n    }\r\n\r\n    addComponentsFromBD = array => {\r\n\r\n        let {componentJSX} = this.state;\r\n        let componentsFromDB = [];\r\n\r\n        array.forEach(item => {\r\n            if (item.type !== 'background'){\r\n\r\n                let props = {\r\n                    sizeParentBox: {\r\n                        width: this.mainComponent.data.width,\r\n                        height: this.mainComponent.data.height,\r\n                        top: this.mainComponent.data.top,\r\n                        left: this.mainComponent.data.left,\r\n                    },\r\n                    ...item,\r\n                    mode: 'dev',\r\n                }\r\n                let Component = null;\r\n                    if (item.type === 'background') Component = BackgroundComponent;\r\n                    else if (item.type === 'input') Component = Input;\r\n                    else if (item.type === 'media') Component = Media;\r\n                    else if (item.type === 'image') Component = Image;\r\n                    else if (item.type === 'text') Component = TextComponent;\r\n                const patternJSX = {\r\n                    id: item.id,\r\n                    targetSection: item.targetSection,\r\n                    component: builderHOC(props)(Component)\r\n                };\r\n                componentsFromDB.push(patternJSX);\r\n            }\r\n        });\r\n            this.setState({\r\n                ...this.state,\r\n                isLoadComponents: false,\r\n                componentJSX: [...componentJSX, ...componentsFromDB],\r\n            });\r\n    };\r\n\r\n    addComponent = itemEvent => {\r\n        let {componentJSX} = this.state;\r\n        let {componentsPattern} = itemEvent;\r\n\r\n        const patternJSX = {\r\n            id: componentsPattern.id,\r\n            targetSection: componentsPattern.targetSection,\r\n            component: itemEvent.component\r\n        };\r\n            this.setState({\r\n                ...this.state,\r\n                componentJSX: [...componentJSX, patternJSX],\r\n            });\r\n    };\r\n\r\n    saveChangesComponent = itemEvent => {\r\n\r\n        const {ms} = itemEvent;\r\n        if (this.timer) clearTimeout(this.timer);\r\n\r\n        this.timer = setTimeout(() => {\r\n            const {currentProjectsData} = this.props.userData;\r\n            const {userData} = this.props;\r\n            let findCurrentItem = false;\r\n            const _components = currentProjectsData.components.map(item => {\r\n                if (item.id === itemEvent.id) { findCurrentItem = true; return {...itemEvent}; }\r\n                return item;\r\n            });\r\n\r\n            if (!findCurrentItem) _components.push(itemEvent);\r\n\r\n            this.props.dispatch(updateMiddleware({\r\n                uid: userData.idUser,\r\n                projects: [...userData.projects],\r\n                components: _components,\r\n                sectionsProject: [...currentProjectsData.sectionsProject],\r\n                idProject: this.state.idProject\r\n            })).then(() =>\r\n                eventEmitter.emit('EventRedirectConfirm', {false: false, confirm: false}));\r\n        },ms);\r\n    };\r\n\r\n    mainComponent = null;\r\n    mainRefComponent = node => node ?\r\n        this.mainComponent = {data: node.getBoundingClientRect(), node: node} : node;\r\n\r\n    addNewSection = eventItem => {\r\n\r\n        const {userData} = this.props;\r\n        const {currentProjectsData} = userData;\r\n\r\n        this.props.dispatch(updateMiddleware({\r\n                uid: userData.idUser,\r\n                projects: [...userData.projects],\r\n                components: [...currentProjectsData.components,\r\n                            eventItem.componentsPattern],\r\n                sectionsProject: [\r\n                    ...currentProjectsData.sectionsProject,\r\n                    eventItem.componentsPattern.id\r\n                ],\r\n                idProject: this.state.idProject\r\n        })).then(() => {\r\n            this.setState({\r\n                ...this.state,\r\n                componentJSX:[\r\n                    ...this.state.componentJSX,\r\n                    eventItem.component\r\n                ]\r\n            }, () => {\r\n                eventEmitter.emit('EventSetState', currentProjectsData.sectionsProject.length);\r\n            });\r\n        });\r\n}\r\n\r\n    render(){\r\n\r\n        if (this.state.projectEmpty) return <Redirect to = '/Cabinet' />\r\n\r\n        const {instrumentActive} = this.state.instrumentPanel;\r\n        const {userData} = this.props;\r\n        const {currentProjectsData} = userData;\r\n        const section = currentProjectsData.sectionsProject;\r\n\r\n        if (userData.active && currentProjectsData.loadProject){\r\n            return (\r\n                <Fragment>\r\n                    <Header key = 'Header' title = \"Constructor\" idUser = {userData.idUser}  />\r\n                    <div\r\n                        ref = {this.mainRefComponent} \r\n                        onMouseMove = {this.showAddSection} \r\n                        className = 'Build' \r\n                        key = 'Build'\r\n                    >\r\n                        { this.state.editStart &&\r\n                        <Controllers\r\n                            key = 'controllers'\r\n                            eventStreamBuild = {this.eventEmitterBuild}\r\n                            editComponentName = {this.state.editComponentName}\r\n                            countComponents = {currentProjectsData.components.length}\r\n                            menuActive = {this.state.menuActive}\r\n                            sizeParentBox = {this.state.sizeParentBox}\r\n                        />\r\n                        }\r\n                            <BuildMenu\r\n                                key = 'buildMenu'\r\n                                eventStreamBuild = {this.eventEmitterBuild}\r\n                                countSection = {this.state.componentJSX.length * 5}\r\n                                mode = \"section\"\r\n                                className = 'menu'\r\n                            />\r\n                        {instrumentActive && \r\n                            <AdditionalTools key = 'tools'\r\n                                eventStreamBuild = {this.eventEmitterBuild}\r\n                                modalViewer = {this.state.modalViewer}\r\n                                componentStats = {this.state.componentStats}\r\n                                editComponentName = {this.state.editComponentName}\r\n                                instrumentPanel = {this.state.instrumentPanel}\r\n                                modalSearchMode = {this.state.modalSearchMode}\r\n                                modalSearch = {this.state.modalSearch}\r\n                                \r\n                            />}\r\n                        {section.length &&\r\n                             <Section mode = 'dev' key = 'section'\r\n                                    componentJSX = {this.state.componentJSX}\r\n                                    editComponentName = {this.state.editComponentName}\r\n                                    menuActive = {this.state.menuActive}\r\n                                    sizeParentBox = {this.state.sizeParentBox}\r\n                                    userData = {userData}\r\n                                />\r\n                        }\r\n                    </div>\r\n                </Fragment>\r\n            )\r\n        } else if (!this.props.firebase.getCurrentUser()) return <Redirect to = '/' />\r\n        else return <Loader  key = 'Loader' path = '/img/loading.gif' type = 'build' />\r\n    }\r\n\r\n    componentDidUpdate = (prevProps) => {\r\n\r\n        let {userData} = this.props;\r\n        let {currentProjectsData} = userData;\r\n        const isLoadComponents = this.state.isLoadComponents;\r\n        let sizeParentBox = null;\r\n\r\n        if (this.mainComponent && this.state.sizeParentBox === null)\r\n            sizeParentBox = {\r\n                width: this.mainComponent.data.width,\r\n                height: this.mainComponent.data.height,\r\n                top: this.mainComponent.data.top,\r\n                left: this.mainComponent.data.left,\r\n            }\r\n\r\n        if (userData.active && !currentProjectsData.loadProject) {\r\n            const current =  userData.projects.find(item => item.id === this.state.idProject)\r\n            if (current){\r\n                this.props.dispatch(loadCurrentProjectAction({\r\n                    id: current.id,\r\n                    typeProject: current.type,\r\n                    sectionsProject: [...current.sectionsProject],\r\n                    components: [...current.components]\r\n                }))\r\n\r\n            } else this.setState({...this.state, projectEmpty: true, sizeParentBox: sizeParentBox});\r\n        }\r\n        if (currentProjectsData.loadProject && isLoadComponents) {\r\n            if (this.state.sizeParentBox === null && sizeParentBox !== null)\r\n            this.setState({\r\n                ...this.state,\r\n                sizeParentBox: sizeParentBox\r\n            }, () => this.addComponentsFromBD([...currentProjectsData.components]));\r\n            else this.addComponentsFromBD([...currentProjectsData.components]);\r\n            eventEmitter.emit('EventSetState',currentProjectsData.sectionsProject.length-1);\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        let {userData} = this.props;\r\n        let {currentProjectsData} = userData;\r\n\r\n        if (userData.active && !currentProjectsData.loadProject) {\r\n\r\n            const current =  userData.projects.find(item => item.id === this.state.idProject)\r\n            this.props.dispatch(loadCurrentProjectAction({\r\n                id: current.id,\r\n                sectionsProject: [...current.sectionsProject],\r\n                typeProject: current.type,\r\n                components: [...current.components]\r\n            }));\r\n        };\r\n\r\n        eventEmitter.on('EventInstrumentPanel', this.openInstrument);\r\n        eventEmitter.on('EventModeEdit', this.workModeEdit);\r\n        this.eventEmitterBuild.on('EventBuildComponents', this.addComponent);\r\n        this.eventEmitterBuild.on('EventDeleteComponent', this.deleteComponent);\r\n        this.eventEmitterBuild.on('EventNewSection', this.addNewSection);\r\n        this.eventEmitterBuild.on('EventSaveChangesComponent', this.saveChangesComponent);\r\n        this.eventEmitterBuild.on('EventClosePanel', this.closePanel);\r\n        this.eventEmitterBuild.on('EventModalSearchOn', this.modalSearchOn);\r\n        this.eventEmitterBuild.on('EventView', this.ViewerSwitch);\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n\r\n        let {userData} = this.props;\r\n        if (userData.active)  this.props.dispatch(exitProjectAction(true));\r\n\r\n        eventEmitter.off('EventInstrumentPanel', this.openInstrument);\r\n        eventEmitter.off('EventModeEdit', this.workModeEdit);\r\n        this.eventEmitterBuild.off('EventBuildComponents', this.addComponent);\r\n        this.eventEmitterBuild.off('EventDeleteComponent', this.deleteComponent);\r\n        this.eventEmitterBuild.off('EventNewSection', this.addNewSection);\r\n        this.eventEmitterBuild.off('EventSaveChangesComponent', this.saveChangesComponent);\r\n        this.eventEmitterBuild.off('EventModalSearchOn', this.modalSearchOn);\r\n        this.eventEmitterBuild.off('EventClosePanel', this.closePanel);\r\n        this.eventEmitterBuild.off('EventView', this.ViewerSwitch);\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        userData: {\r\n            active: state.cabinet.active,\r\n            idUser: state.cabinet.idUser,\r\n            projects: [...state.cabinet.projects],\r\n           currentProjectsData: {...state.builder}\r\n        },\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(withFirebase(Build));\r\n","import React from 'react';\r\nimport eventEmitter from '../EventEmitter';\r\n\r\nimport {animateScroll as scroll, scroller } from \"react-scroll\";\r\n\r\nclass ScrollMove extends React.PureComponent {\r\n\r\n    state = {\r\n        mode: 'default',\r\n        scrollConfig: {\r\n            duration: 1000,\r\n            delay: 50,\r\n            smooth: true,\r\n            offset: -60\r\n        },\r\n        position: 0,\r\n        positionCount: null\r\n\r\n    }\r\n\r\n    setStates = event => {\r\n        this.setState({...this.state,positionCount: event});\r\n    }\r\n\r\n    blockMove = event => {\r\n        this.setState({...this.state, mode: event})\r\n    }\r\n\r\n    moveLocation = event => {\r\n\r\n        if (this.state.mode === 'default'){\r\n            const count = this.state.positionCount;\r\n            const moveDown = this.state.position < count && event.deltaY > 0;\r\n            const moveUp = event.deltaY < 0 && this.state.position > 0;\r\n            eventEmitter.emit('EventClosePanel',{close: false});\r\n\r\n            if (moveDown)\r\n                this.setState({ position: this.state.position + 1},\r\n                    () => scroller.scrollTo(`element${this.state.position}`,this.state.scrollConfig));\r\n                else if (moveUp){\r\n                    this.state.position === 1 &&\r\n                        this.setState({position: this.state.position - 1}, () => scroll.scrollToTop());\r\n                    this.state.position !== 1 &&\r\n                        this.setState({position: this.state.position - 1},\r\n                            () => scroller.scrollTo(`element${this.state.position}`,this.state.scrollConfig));\r\n                }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    render(){\r\n        return (\r\n            <div key = 'moveScroll' onWheel = {this.moveLocation} onTouchStart = {() => false}\r\n            >\r\n                {this.props.children}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        eventEmitter.on('EventBlockScroll', this.blockMove);\r\n        eventEmitter.on('EventSetState', this.setStates);\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        eventEmitter.off('EventBlockScroll', this.blockMove);\r\n        eventEmitter.off('EventSetState', this.setStates);\r\n    }\r\n}\r\n\r\n\r\nexport default ScrollMove;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport {Route, Switch} from 'react-router-dom';\r\n\r\nimport {middlewareLoadUserData} from './redux/middleware/loadUserMiddleware';\r\nimport {connect} from 'react-redux';\r\nimport withFirebase from './components/firebaseHOC';\r\nimport Loader from './components/loading/Loader';\r\n\r\nimport Index from './Pages/Index/Index';\r\nimport Cabinet from './Pages/Cabinet/Cabinet';\r\nimport Production from './Pages/Production/Production';\r\nimport About from './Pages/About/About';\r\nimport Build from './Pages/Build/Build';\r\nimport ErrorPage from './components/ErrorCatch/ErrorPage';\r\nimport ScrollMove from './components/ScrollMove';\r\n\r\nimport './root.scss';\r\n\r\nclass App extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        config: PropTypes.object.isRequired, /** @Config app */\r\n        firebase: PropTypes.object.isRequired, /** @firebase class for use firebase functions */\r\n        dispatch: PropTypes.func.isRequired, /** @dispatch - redux */\r\n    }\r\n\r\n    state = {\r\n        firebase: this.props.firebase,\r\n        firebaseLoadState: false,\r\n    }\r\n\r\n    componentDidMount(){\r\n\r\n        this.props.firebase.auth.onAuthStateChanged((user) => {\r\n\r\n            if (!this.state.firebaseLoadState){\r\n                if (user) this.props.dispatch(middlewareLoadUserData(user.uid));\r\n                this.setState({...this.state, firebaseLoadState: true});\r\n            }\r\n        });\r\n    }\r\n\r\n    render(){\r\n        if (this.state.firebaseLoadState){\r\n            return (\r\n                <Switch>\r\n                    <Route\r\n                        path = {'/'} exact\r\n                        render = {(props) => <Index {...props} />}\r\n                    />\r\n                    <Route path = '/Cabinet/' exact component = {Cabinet}/>\r\n                    <Route\r\n                        path = {'/Cabinet/About'}\r\n                        render = {(props) => <About {...props} config = {this.props.config} />}\r\n                    />\r\n                    <Route path = {'/Cabinet/Build/:param'} exact \r\n                        render = {(props) => <ScrollMove><Build {...props}></Build></ScrollMove>}\r\n                    />\r\n                    <Route path = {'/Cabinet/Build/:param/Production'} exact component = {Production} />\r\n                    <Route path = {'*'} component = {Index} />\r\n                    <Route path = {'/crashPage'} component = {ErrorPage} />\r\n                </Switch>\r\n            )\r\n        } else return <Loader path = { '/img/loading.gif'} type = 'application' />\r\n    }\r\n}\r\n\r\nexport default connect()(withFirebase(App));","\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\n\nimport firebase from './Firebase/Firebase';\nimport ErrorBoundary from './components/ErrorCatch/ErrorBoundary';\nimport {HashRouter } from 'react-router-dom';\nimport {Provider} from 'react-redux';\nimport store from './redux/store';\nimport App from './App.jsx';\nimport 'normalize.css';\n\nimport firebaseContext from './Firebase/firebaseContext';\n\nfirebase.saveSession('SESSION');\nconst config = require('./config.json');\nconsole.time();\nReactDOM.render(\n        <HashRouter>\n            <ErrorBoundary>\n                <firebaseContext.Provider value = {firebase}>\n                    <Provider store = {store}>\n                        <App config = {config} />\n                    </Provider>\n                </firebaseContext.Provider>\n            </ErrorBoundary>\n        </HashRouter>,\n        document.getElementById('root')\n);\n\n\nserviceWorker.register();\n\n"],"sourceRoot":""}