{"version":3,"sources":["serviceWorker.js","EventEmitter.js","components/ErrorCatch/ErrorPage.jsx","components/ErrorCatch/ErrorBoundary.jsx","Firebase/firebaseConfig.js","Firebase/Firebase.js","redux/actions.js","redux/reducerBuilder.js","redux/reducerCabinet.js","redux/reducers.js","redux/store.js","redux/middleware/loadUserMiddleware.js","components/firebaseHOC.jsx","components/loading/Loader.jsx","components/Registration/Registration.jsx","Pages/Index/Index.jsx","redux/middleware/middlewareDelete.js","components/Icon/icon.jsx","components/header/Header.jsx","components/imageViewer/imageItem.jsx","components/modalWindow/ModalWindow.jsx","redux/middleware/createProjectMiddleware.js","components/List/Item.jsx","components/List/List.jsx","components/ProjectsSection/ProjectsSection.jsx","Pages/Cabinet/Cabinet.jsx","Pages/About/About.jsx","redux/middleware/updateMiddleware.js","components/imageViewer/imageViewer.jsx","components/instrumentsPanel/InstrumentsPanel.jsx","components/buildComponents/components/Background.jsx","components/buildComponents/components/Text.jsx","components/componentsBuildMenu/BuildMenu.jsx","components/controllers/controllers.jsx","components/buildComponents/header/headerBuild.jsx","Pages/Build/Build.jsx","App.jsx","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","stream","EventEmitter","ErrorPage","update","event","_this","props","history","push","eventEmitter","emit","react_default","a","createElement","class","onClick","this","React","PureComponent","withRouter","ErrorBoundary","hasError","updateApplication","setState","componentDidMount","on","componentWillUnmount","off","info","ErrorCatch_ErrorPage","children","firebaseConfig","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","interfaceFirebase","require","Firebase","Object","classCallCheck","firebase","auth","db","rules","setPersistence","Auth","Persistence","email","password","signInWithEmailAndPassword","createUserWithEmailAndPassword","signOut","currentUser","saveSession","exitProjectAction","type","exit","loadCurrentProjectAction","id","typeProject","component","loadUserAction","active","idUser","uid","projects","errorAction","initialState","loadProject","haveUpdateLoading","idProject","combineReducers","builder","arguments","length","undefined","action","objectSpread","toConsumableArray","cabinet","map","item","middleware","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","thunk","withExtraArgument","reduxCatch","getState","lastAction","dispatch","debug","store","createStore","middlewareLogin","_ref2","asyncToGenerator","regenerator_default","mark","_callee","_ref","wrap","_context","prev","next","login","response","collection","doc","user","get","docUser","data","message","stop","_x","_x2","_x3","apply","middlewareLogOutUser","_ref6","_callee3","_ref5","_context3","_x7","_x8","_x9","withFirebase","Component","assign","Loader","_useState","useState","path","slicedToArray","className","src","alt","emailRef","passwordRef","setRefEmail","node","setRefPassword","createUser","value","set","autoComplete","ref","Index","title","registrationActive","regStatus","wrongEnter","statusRegistration","additionalUserInfo","isNewUser","showBox","authTo","emailImput","passwordImput","e","react_router","to","currentSelected","components_Registration_Registration","connect","middlewareDelete","filter","itemdb","Icon","_useState3","_useState5","draggable","iconPath","CabinetIcon","Header","logOut","stopPropagation","redirect","pathname","redirectCabinet","add","icon","ImageItem","urls","regular","urlRegular","full","urlFull","_useState7","isFull","selected","url","ModalWindow","workMode","images","buttonSearchDisabled","selectedItem","showUrl","imageBoxView","newProject","validateName","validateType","disabled","name","imageMenuActive","warning","lengthMax","lengthMin","inputSearch","inputSelect","searchBackground","search","inages","isFetch","concat","ok","json","Error","results","showMenuImage","showImage","target","setSelectedImage","idComponent","makeImageResultBox","items","i","imageItem","key","addNewProject","mode","selectOption","inputs","defineProperty","lengthInput","cancel","refSelect","refSearch","onChange","placeholder","react","middlewareCreateProject","list","lastProject","lastIndex","data-id","List","makeList","project","List_Item","ProjectsSection","components_List_List","Cabinet","deletItem","getCurrentUser","changeWorkMode","header_Header","modalWindow_ModalWindow","components_ProjectsSection_ProjectsSection","about","developer","year","updateMiddleware","newProjects","JSON","parse","stringify","find","ImageViewer","InstrumentsPanel","instrumentPanel","componentsStats","content","fontSize","color","backgroundImage","image","coords","left","top","updateSizeText","eventSize","closePanel","close","setSize","size","setContent","contentValue","updatePosition","eventItem","x","y","setColor","colorPickerActive","updateBimageStats","handleChangeComplete","rgb","colorRGB","r","g","b","saveChanges","searchImage","makePanelInstruments","min","max","lib","onChangeComplete","maxLength","defaultValue","componentDidUpdate","oldProps","oldState","targetBool","idBool","instrumentActive","Background","styled","div","_templateObject","backgroundColor","BackgroundComponent","_useState4","count","setCount","boxComponent","createRef","background","_useState6","setBgColor","_useState8","setImage","changeColor","setBackgroundImage","useEffect","current","focus","boxInform","getBoundingClientRect","width","height","saveWidth","Title","h1","attrs","style","display","shadowDisplay","coordX","coordY","Text_templateObject","textColor","TextComponent","sizeParenBox","colorText","setColorText","sizeText","setSizeText","_useState9","_useState10","contentText","setText","_useState11","_useState12","shiftCoords","setShiftCoords","_useState13","_useState14","dragNdrop","setDragNdrop","changeColorText","changeSizeText","changeContentText","eventContent","moveText","pageX","pageY","position","sizeTextValue","onMouseDown","rect","onDrag","onDragEnd","onWheel","shiftKey","deltaY","counter","BuildMenu","addText","countComponents","Text","addBackground","components_Background","ControllersBox","controllers_templateObject","Controllers","viewComponentMenu","shiftX","shiftY","coordsX","coordsY","componentMenu","saveCoords","controlBox","drag","refControll","menuActive","componentsBuildMenu_BuildMenu","HeaderBuild","changeMode","editStart","currentTarget","refBox","refBackground","build","componentJSX","readyBuild","controllers","mainWidth","mainBoxWidth","mainHeight","mainBoxHeight","Build","parseInt","params","param","editComponent","edit","changeEdit","modalSearch","modalImageViewer","modalSearchOn","imageViewerSwitch","workModeEdit","itemEvent","openInstrument","targetEqual","instumentActive","addHeaderComponent","saveChangesComponent","componentSaveInBase","currentProject","imageViewer_imageViewer","instrumentsPanel_InstrumentsPanel","header_headerBuild","prevProps","prevState","_this2","App","firebaseLoadState","onAuthStateChanged","_ref4","_callee2","_ref3","_context2","_x4","_x5","_x6","_this3","pathProduction","exact","render","Pages_Index_Index","Pages_About_About","ReactDOM","react_router_dom","ErrorCatch_ErrorBoundary","es","src_App","document","getElementById","URL","href","origin","addEventListener","fetch","contentType","headers","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"geAYMA,EAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DAsCN,SAASC,EAAgBC,EAAOC,GAC9BC,UAAUC,cACPC,SAASJ,GACTK,KAAK,SAAAC,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBG,QACfT,UAAUC,cAAcS,YAI1BC,QAAQC,IACN,iHAKEb,GAAUA,EAAOc,UACnBd,EAAOc,SAAST,KAMlBO,QAAQC,IAAI,sCAGRb,GAAUA,EAAOe,WACnBf,EAAOe,UAAUV,UAO5BW,MAAM,SAAAC,GACLL,QAAQK,MAAM,4CAA6CA,4CC9FlDC,EADA,WAAIC,sBCMbC,qNAEFC,OAAS,SAAAC,GACLC,EAAKC,MAAMC,QAAQC,KAAK,KACxBC,EAAaC,KAAK,kGAKlB,OADAhB,QAAQC,IAAI,SAEZgB,EAAAC,EAAAC,cAAA,OAAKC,MAAQ,aACTH,EAAAC,EAAAC,cAAA,OAAKC,MAAQ,eACTH,EAAAC,EAAAC,cAAA,+BACAF,EAAAC,EAAAC,cAAA,UAAQE,QAAWC,KAAKb,QAAxB,mBAbQc,IAAMC,gBAoBfC,cAAWjB,GCaTkB,6MAjCX5B,MAAQ,CACN6B,UAAU,KASdC,kBAAoB,SAAAlB,GAClBC,EAAKkB,SAAS,CAACF,UAAU,OAa3BG,kBAAoB,WAClBf,EAAagB,GAAG,wBAAwBpB,EAAKiB,sBAG/CI,qBAAuB,WACrBjB,EAAakB,IAAI,wBAAwBtB,EAAKiB,qGAf9BvB,EAAO6B,GAExBlC,QAAQK,MAAMA,EAAQ,IAAM6B,oCAI3B,OAAIZ,KAAKxB,MAAM6B,SAAiBV,EAAAC,EAAAC,cAACgB,EAAD,MACzBb,KAAKV,MAAMwB,4DAjBY/B,GAG9B,OAFEL,QAAQC,IAAII,GAEP,CAAEsB,UAAU,UATGJ,IAAMC,+CCJlCxB,QAAQC,IAAI,UACZ,IAAMoC,EAAiB,CACnBC,OAAQC,0CACRC,WAAYD,oCACZE,YAAaF,2CACbG,UAAWH,oBACXI,cAAeJ,GACfK,kBAAmBL,eACnBM,MAAON,uCC2BPO,GAjCSC,EAAQ,KACHA,EAAQ,KAgCF,eA5BhB,SAAAC,IAAcC,OAAAC,EAAA,EAAAD,CAAA3B,KAAA0B,GACNhD,QAAQC,IAAI,iBACZkD,gBAAuBd,GACvBf,KAAK8B,KAAOD,SACZ7B,KAAK+B,GAAKF,sEAGNG,GACJ,OAAOhC,KAAK8B,KAAKG,eAAeJ,OAAcK,KAAKC,YAAYH,kCAGjEI,EAAOC,GACL,OAAOrC,KAAK8B,KAAKQ,2BAA2BF,EAAOC,wCAG9CD,EAAOC,GACZ,OAAOrC,KAAK8B,KAAKS,+BAA+BH,EAAOC,qCAIvD,OAAOrC,KAAK8B,KAAKU,mDAIjB,OAAOxC,KAAK8B,KAAKW,uBAKjCjB,EAAkBkB,YAAY,WAEflB,iDCxBTmB,EAAoB,SAACnE,GACvB,MAAO,CACHoE,KAXa,eAYbC,KAAMrE,IAIRsE,EAA2B,SAACtE,GAC9B,MAAO,CACHoE,KAtBa,eAuBbG,GAAIvE,EAAMuE,GACVC,YAAaxE,EAAMwE,YACnBC,UAAWzE,EAAMyE,YAYnBC,EAAiB,SAAC1E,GACpB,MAAO,CACHoE,KArCkB,oBAsClBO,QAAQ,EACRC,OAAQ5E,EAAM6E,IACdtE,MAAO,GACPuE,SAAU9E,EAAM8E,WAelBC,EAAc,SAAC/E,GACjB,MAAO,CACHoE,KAzDc,gBA0Dd7D,MAAOP,IC7DTgF,EAAe,CACjBC,aAAa,EACbC,mBAAmB,EACnBC,UAAW,KACXX,YAAa,KACbC,UAAW,ICLTO,EAAe,CACjBL,QAAQ,EACRC,OAAQ,KACRE,SAAU,GACVvE,MAAO,MCFI6E,cAAgB,CAC3BC,QFIW,WAAkC,IAAjCrF,EAAiCsF,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAzBN,EAAcS,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC7C,OAAQC,EAAOrB,MAEX,IDVa,eCWT,OAAOjB,OAAAuC,EAAA,EAAAvC,CAAA,GACAnD,EADP,CAEIkF,mBAAmBlF,EAAMkF,kBACzBD,aAAa,EACbE,UAAWM,EAAOlB,GAClBC,YAAaiB,EAAOjB,YACpBC,UAAUtB,OAAAwC,EAAA,EAAAxC,CAAKsC,EAAOhB,aAI9B,IDtBoB,sBCuBhB,OAAOtB,OAAAuC,EAAA,EAAAvC,CAAA,GACAnD,EADP,CAEIkF,mBAAmB,EACnBT,UAAUtB,OAAAwC,EAAA,EAAAxC,CAAKsC,EAAOhB,aAI9B,IDzBa,eC0BT,OAAIgB,EAAOpB,KACJlB,OAAAuC,EAAA,EAAAvC,CAAA,GACAnD,EADP,CAEIkF,mBAAmB,EACnBD,aAAa,EACbE,UAAW,KACXX,YAAa,KACbC,UAAW,KAEHzE,EAEhB,QAAS,OAAOA,IErCpB4F,QDIW,WAAkC,IAAjC5F,EAAiCsF,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAzBN,EAAcS,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC7C,OAAOC,EAAOrB,MACV,IFRkB,oBEUd,OAAOjB,OAAAuC,EAAA,EAAAvC,CAAA,GACAnD,EADP,CAEI2E,OAAQc,EAAOd,OACfC,OAAQa,EAAOb,OACfE,SAAS3B,OAAAwC,EAAA,EAAAxC,CAAKsC,EAAOX,YAI7B,IFtBe,iBEuBX,OAAO3B,OAAAuC,EAAA,EAAAvC,CAAA,GACAnD,EADP,CAEI8E,SAAS3B,OAAAwC,EAAA,EAAAxC,CAAKsC,EAAOX,YAI7B,IF5BoB,sBE6BhB,OAAO3B,OAAAuC,EAAA,EAAAvC,CAAA,GACAnD,EADP,CAEI8E,SAAU9E,EAAM8E,SAASe,IAAI,SAAAC,GAG7B,OAFQA,EAAKvB,KAAOkB,EAAON,YACnBW,EAAKrB,UAALtB,OAAAwC,EAAA,EAAAxC,CAAqBsC,EAAOhB,YAC7BqB,MAKf,IFrCgB,kBEsCZ,OAAO3C,OAAAuC,EAAA,EAAAvC,CAAA,GACAnD,EADP,CAEI2E,QAAQ,EACRC,OAAQ,KACRE,SAAU,KAIlB,IF5Cc,gBE6CV,OAAO3B,OAAAuC,EAAA,EAAAvC,CAAA,GACAnD,EADP,CAEIO,MAAOkF,EAAOlF,QAGtB,QAAS,OAAOP,MEpCxB,IAAM+F,GAZc,kBAAX/G,QACPA,OAAOgH,qCACLhH,OAAOgH,qCAAqC,IACvCC,KAUPC,YAAgBC,IAAMC,kBAAkB,CAAC/C,cACzC6C,YAAgBG,IATd,SAAsB9F,EAAO+F,EAAUC,EAAYC,GACjDtG,QAAQK,MAAMA,GACdL,QAAQuG,MAAM,gBAAiBH,KAC/BpG,QAAQuG,MAAM,kBAAmBF,OAWxBG,EAHDC,YAAYvB,EAAiBW,4BCrBrCa,EAAkB,SAAChD,EAAMC,GAAP,sBAAAgD,EAAA1D,OAAA2D,EAAA,EAAA3D,CAAA4D,EAAA3F,EAAA4F,KAAoB,SAAAC,EAAOT,EAASF,EAAhBY,GAAA,IAAA7D,EAAA,OAAA0D,EAAA3F,EAAA+F,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAA2BjE,EAA3B6D,EAA2B7D,SAA3B+D,EAAAE,KAAA,EAC9BjE,EAASkE,MAAM3D,EAAMC,GAC1BnE,KAAK,SAAA8H,GACFnE,EAASE,GAAGkE,WAAW,SAASC,IAAIF,EAASG,KAAK9C,KAAK+C,MACtDlI,KAAK,SAAAmI,GACF,IAAIF,EAAOE,EAAQC,OACnBtB,EAAS9B,EAAe,CAACG,IAAKgD,EAAQtD,GAAIO,SAAS3B,OAAAwC,EAAA,EAAAxC,CAAKwE,EAAK7C,iBAGpExE,MAAM,SAACC,GACJL,QAAQK,MAAMA,EAAMwH,SACpBvB,EAASzB,EAAYxE,EAAMwH,YAXK,wBAAAX,EAAAY,SAAAf,MAApB,gBAAAgB,EAAAC,EAAAC,GAAA,OAAAtB,EAAAuB,MAAA5G,KAAA8D,YAAA,IA2BlB+C,EAAuB,SAACxD,GAAD,sBAAAyD,EAAAnF,OAAA2D,EAAA,EAAA3D,CAAA4D,EAAA3F,EAAA4F,KAAS,SAAAuB,EAAO/B,EAASF,EAAhBkC,GAAA,IAAAnF,EAAA,OAAA0D,EAAA3F,EAAA+F,KAAA,SAAAsB,GAAA,cAAAA,EAAApB,KAAAoB,EAAAnB,MAAA,cAA2BjE,EAA3BmF,EAA2BnF,SAA3BoF,EAAAnB,KAAA,EAC5BjE,EAASW,UACdtE,KAAM,SAAA8H,GACHhB,ELmBG,CACHpC,KAjDgB,kBAkDhBO,QAAQ,EACRC,OAAQ,KACRrE,MAAO,GACPuE,SAAU,OKtBbxE,MAAM,SAACC,GACJL,QAAQK,MAAMA,EAAMwH,SACpBvB,EAASzB,EAAYxE,EAAMwH,YAPG,wBAAAU,EAAAT,SAAAO,MAAT,gBAAAG,EAAAC,EAAAC,GAAA,OAAAN,EAAAF,MAAA5G,KAAA8D,YAAA,ICtBduD,EAJM,SAAAC,GAAS,OAAI,SAAAhI,GAAK,OACnCK,EAAAC,EAAAC,cAACyH,EAAD3F,OAAA4F,OAAA,CAAW1F,SAAYA,GAAcvC,cCF1BkI,EAAA,SAASlI,GAAO,IAAAmI,EACZC,mBAASpI,EAAMqI,MAAvBA,EADoBhG,OAAAiG,EAAA,EAAAjG,CAAA8F,EAAA,MAE3B,OACQ9H,EAAAC,EAAAC,cAAA,OAAKgI,UAAY,aACblI,EAAAC,EAAAC,cAAA,OAAKgI,UAAY,SAASC,IAAOH,EAAMI,IAAM,WAC7CpI,EAAAC,EAAAC,cAAA,oBAAYP,EAAMsD,QCiEnByE,uNA1DX7I,MAAQ,CACJqD,SAAUxC,EAAKC,MAAMuC,SACrB9C,MAAO,QAGXiJ,SAAW,OACXC,YAAc,OAEdC,YAAc,SAACC,GAAD,OAAU9I,EAAK2I,SAAWG,KACxCC,eAAiB,SAACD,GAAD,OAAU9I,EAAK4I,YAAcE,KAE9CE,WAAa,SAACjJ,GAEV,IAAMgD,EAAQ/C,EAAK2I,SAASM,MACtBjG,EAAWhD,EAAK4I,YAAYK,MAC1BzG,EAAaxC,EAAKC,MAAlBuC,SAERA,EAAS1D,aAAaiE,EAAOC,GAC5BnE,KAAK,SAAA8H,GACFnE,EAASE,GAAGkE,WAAW,SAASC,IAAIF,EAASG,KAAK9C,KAAKkF,IAAI,CACvDjF,SAAY,GACZlB,MAASA,IACVlE,KAAK,kBAAMuB,EAAaC,KAAK,2BAA4BsG,OAE/DlH,MAAM,SAACC,GACRL,QAAQK,MAAMA,EAAMwH,SACpBlH,EAAKkB,SAAS,CAACxB,MAAOA,EAAMwH,qFAIxB,IACGxH,EAAUiB,KAAKxB,MAAfO,MAEP,OACIY,EAAAC,EAAAC,cAAA,OAAKgI,UAAY,mBACblI,EAAAC,EAAAC,cAAA,OAAMgI,UAAY,oBACdlI,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAA,QAAM2I,aAAe,MAAMX,UAAY,WACjC9I,EACEY,EAAAC,EAAAC,cAAA,KAAGgI,UAAY,SAAS9I,GACtB,KAENY,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,SAAO4I,IAAOzI,KAAKkI,YAAatF,KAAO,SACvCjD,EAAAC,EAAAC,cAAA,wBACAF,EAAAC,EAAAC,cAAA,SAAQ2I,aAAe,MAAMC,IAAOzI,KAAKoI,eAAgBxF,KAAO,aAChEjD,EAAAC,EAAAC,cAAA,SAAOE,QAAWC,KAAKqI,WACfR,UAAY,cACZjF,KAAO,SACP0F,MAAQ,2BAvDbrI,IAAMC,iBCM3BwI,qNAMFlK,MAAQ,CACJmK,MAAQ,cACRC,oBAAoB,EACpBC,WAAW,EACXC,YAAY,EACZ/J,MAAO,MAGXgK,mBAAqB,SAAC3J,GAClBA,EAAM4J,mBAAmBC,UACzB5J,EAAKkB,SAALoB,OAAAuC,EAAA,EAAAvC,CAAA,GAAkBtC,EAAKb,MAAvB,CACgBqK,WAAW,EACXD,oBAAoB,EACpB7J,MAAO,qBAErBL,QAAQK,MAAM,yBAGpBmK,QAAU,SAAC9J,GACPC,EAAKkB,SAALoB,OAAAuC,EAAA,EAAAvC,CAAA,GACOtC,EAAKb,MADZ,CAEAoK,oBAAoBvJ,EAAKb,MAAMoK,yBAInCO,OAAS,SAAC/J,GACFC,EAAKC,MAAM0F,SAASI,EAAgB/F,EAAK+J,WAAWd,MAAOjJ,EAAKgK,cAAcf,WAEtFc,WAAa,OACbC,cAAgB,OAChBrB,SAAW,SAACG,GAAD,OAAU9I,EAAK+J,WAAajB,KACvCF,YAAc,SAACE,GAAD,OAAU9I,EAAKgK,cAAgBlB,KA8C7C3H,kBAAoB,SAAC8I,GACjB7J,EAAagB,GAAG,2BAA4BpB,EAAK0J,uBAErDrI,qBAAuB,SAAC4I,GACpB7J,EAAakB,IAAI,2BAA4BtB,EAAK0J,6FA9ClD,GADArK,QAAQC,IAAI,gBACRqB,KAAKV,MAAM6D,OAAQ,OAAOxD,EAAAC,EAAAC,cAAC0J,EAAA,EAAD,CAAUC,GAAK,aACxC,GAAKxJ,KAAKV,MAAM6D,OAsCb,OAAOxD,EAAAC,EAAAC,cAAC2H,EAAD,CAAQG,KAAO,mBAAmB/E,KAAO,YArCpD,IAAI6G,EAAkBzJ,KAAKxB,MAAMoK,mBACjC,OACIjJ,EAAAC,EAAAC,cAAA,OAAKgI,UAAY,yBACTlI,EAAAC,EAAAC,cAAA,UAAKG,KAAKxB,MAAMmK,OAChBhJ,EAAAC,EAAAC,cAAA,OAAKgI,UAAY,YACblI,EAAAC,EAAAC,cAAA,OAAKgI,UAAY,aACblI,EAAAC,EAAAC,cAAA,0BAEIG,KAAKV,MAAMwJ,YAAc9I,KAAKxB,MAAMqK,UACpClJ,EAAAC,EAAAC,cAAA,KAAGgI,UAAY,SAAS7H,KAAKV,MAAMwJ,YACjC,KAENnJ,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAA,SAAO4I,IAAOzI,KAAKgI,SAAUpF,KAAO,SACpCjD,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,SAAO4I,IAAOzI,KAAKiI,YAAarF,KAAO,aACvCjD,EAAAC,EAAAC,cAAA,SACIE,QAAWC,KAAKmJ,OAChBtB,UAAY,cACZjF,KAAO,SACP0F,MAAQ,UACZ3I,EAAAC,EAAAC,cAAA,SACIE,QAAWC,KAAKkJ,QAChBrB,UAAa4B,EAAe,uBACtB,cACN7G,KAAO,SACP0F,MAAQ,mBAKhBtI,KAAKxB,MAAMoK,mBACXjJ,EAAAC,EAAAC,cAAC6J,EAAD,CAAc5H,KAAQ9B,KAAKV,MAAMwC,OAC/B,aA5EV7B,IAAMC,gBAkGXyJ,cAPS,SAACnL,GACrB,MAAO,CACH2E,OAAQ3E,EAAM4F,QAAQjB,OACtB2F,WAAYtK,EAAM4F,QAAQrF,QAInB4K,CAAyBjB,GCxFzBkB,EArBU,SAAAtF,GAAI,sBAAAe,EAAA1D,OAAA2D,EAAA,EAAA3D,CAAA4D,EAAA3F,EAAA4F,KAAI,SAAAC,EAAOT,EAASF,EAAhBY,GAAA,IAAA7D,EAAA,OAAA0D,EAAA3F,EAAA+F,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAA2BjE,EAA3B6D,EAA2B7D,SACxDnD,QAAQC,IAAI,cADiBiH,EAAAE,KAAA,EAEvBjE,EAASE,GAAGkE,WAAW,SAASC,IAAI5B,EAAKjB,KAAK+C,MACnDlI,KAAK,SAAAiI,GAAI,OAAIA,EAAKG,SAClBpI,KAAK,SAAAoI,GACF,MAAO,CAACvD,GAAIuD,EAAKvD,GAAIO,SAAUgD,EAAKhD,SAASuG,OAAO,SAAAC,GAAM,OAAIA,EAAO/G,KAAOuB,EAAKvB,QAEpF7E,KAAK,SAAAoI,GACFzE,EAASE,GAAGkE,WAAW,SAASC,IAAI5B,EAAKjB,KAAKlE,OAAO,CACjDmE,SAAYgD,EAAKhD,WAEpBpF,KAAK,SAAA8H,GACFhB,EAAS9B,EAAe,CAACG,IAAKiD,EAAKvD,GAAIO,SAAUgD,EAAKhD,gBAG7DxE,MAAM,SAACC,GACJL,QAAQK,MAAMA,EAAMwH,SACpBvB,EAASzB,EAAYxE,EAAMwH,YAjBF,wBAAAX,EAAAY,SAAAf,MAAJ,gBAAAgB,EAAAC,EAAAC,GAAA,OAAAtB,EAAAuB,MAAA5G,KAAA8D,YAAA,WCgBdiG,MAhBf,SAAczK,GAAM,IAAAmI,EACDC,mBAASpI,EAAMqI,MAAvBA,EADShG,OAAAiG,EAAA,EAAAjG,CAAA8F,EAAA,MAAAuC,EAEItC,mBAASpI,EAAMuI,UAAYvI,EAAMuI,UAAY,MAA1DA,EAFSlG,OAAAiG,EAAA,EAAAjG,CAAAqI,EAAA,MAAAC,EAGIvC,qBAASpI,EAAM4K,WAA5BA,EAHSvI,OAAAiG,EAAA,EAAAjG,CAAAsI,EAAA,MAKhB,OACAtK,EAAAC,EAAAC,cAAA,OACIqK,UAAaA,EACbnK,QAAWT,EAAMS,QAAUT,EAAMS,QAAU,KAC3C8H,UAAaA,EACbc,MAASrJ,EAAMqJ,MAAQrJ,EAAMqJ,MAAQ,KACrCb,IAAO7G,eAAyB0G,EAAOI,IAAM,UCD/CoC,EAAW1I,EAAQ,IAAqB2I,YAExCC,8MAMF7L,MAAQ,CACJmK,MAAOtJ,EAAKC,MAAMqJ,SAGtB2B,OAAS,SAAAlL,GACLC,EAAKC,MAAM0F,SAAS6B,EAAqBxH,EAAKC,MAAM8D,SACpDhE,EAAMmL,qBAGVC,SAAW,SAAApL,GAC8B,mBAAjCC,EAAKC,MAAM7B,SAASgN,UACpBpL,EAAKC,MAAMC,QAAQC,KAAK,kBAC5BJ,EAAMmL,qBAGVG,gBAAkB,SAAAtL,GACuB,aAAjCC,EAAKC,MAAM7B,SAASgN,UAChBpL,EAAKC,MAAMC,QAAQC,KAAK,YAChCJ,EAAMmL,qBAGVI,IAAM,SAACrB,GACH7J,EAAaC,KAAK,sBAAsB,CAACuE,OAAQ,wFAIjD,OACItE,EAAAC,EAAAC,cAAA,cACIF,EAAAC,EAAAC,cAAA,OAAKgI,UAAY,aACblI,EAAAC,EAAAC,cAAA,OAAKgI,UAAY,YACTlI,EAAAC,EAAAC,cAAA,OAAKgI,UAAY,uBACblI,EAAAC,EAAAC,cAAC+K,EAAD,CAAMjD,KAAQwC,IACdxK,EAAAC,EAAAC,cAAA,MAAIgI,UAAY,WAAW9H,QAAWC,KAAK0K,iBAAkB1K,KAAKxB,MAAMmK,QAE1C,aAAjC3I,KAAKV,MAAM7B,SAASgN,SACjB9K,EAAAC,EAAAC,cAAA,OAAKE,QAAWC,KAAK2K,IAAK9C,UAAY,iCAClClI,EAAAC,EAAAC,cAAC+K,EAAD,CAAMjD,KAAO,mBAEf,KAEFhI,EAAAC,EAAAC,cAAA,OAAMgI,UAAY,aACdlI,EAAAC,EAAAC,cAAC+K,EAAD,CAAM7K,QAAWC,KAAKwK,SAAU7B,MAAQ,QAAQhB,KAAO,wBACvDhI,EAAAC,EAAAC,cAAC+K,EAAD,CAAM7K,QAAWC,KAAKsK,OAAQ3B,MAAQ,SAAShB,KAAO,+BAhDrE1H,IAAMC,eAyDZyJ,iBAAUxJ,YAAWkK,mCC9CrBQ,GAvBG,SAAAvL,GAAS,IAAAmI,EAEVC,mBAASpI,EAAMyD,IAArBA,EAFgBpB,OAAAiG,EAAA,EAAAjG,CAAA8F,EAAA,MAAAuC,EAGFtC,mBAASpI,EAAMwL,KAAKC,SAAlCC,EAHgBrJ,OAAAiG,EAAA,EAAAjG,CAAAqI,EAAA,MAAAC,EAILvC,mBAASpI,EAAMwL,KAAKG,MAA/BC,EAJgBvJ,OAAAiG,EAAA,EAAAjG,CAAAsI,EAAA,MAAAkB,EAKNzD,mBAASpI,EAAM8L,QAAzBA,EALgBzJ,OAAAiG,EAAA,EAAAjG,CAAAwJ,EAAA,MAYvB,OACIxL,EAAAC,EAAAC,cAAA,OAAKgI,UAAavI,EAAM+L,SAAW,mBAAqB,WACpD1L,EAAAC,EAAAC,cAAA,OACIE,QARU,SAAAX,GACnBK,EAAaC,KAAK,qBAAsB,CAACqD,GAAIA,EAAIuI,IAAKN,EAAYE,QAASA,KAQlEpD,IAAOsD,EAASF,EAAUF,EAC1BjD,IAAM,WCyPPwD,sNA5PX/M,MAAQ,CACJgN,SAAUnM,EAAKC,MAAMkM,SACrBC,OAAQ,CACJC,sBAAsB,EACtBC,aAAc,KACdC,QAAS,KACTH,OAAQ,KACRP,QAAS,KACTW,cAAc,EACd9M,MAAO,IAEX+M,WAAY,CACRC,cAAc,EACdC,cAAc,EACdC,UAAU,EACVC,KAAM,GACNtJ,KAAM,SAEVuJ,iBAAiB,EACjBC,QAAS,CACLC,UAAW,yBACXC,UAAW,uBACX1J,KAAM,6BAId2J,YAAc,OACdC,YAAc,OAEdC,iBAAmB,SAAArN,GAEf,IACMsN,EAASrN,EAAKkN,YAAYjE,MAEhCjJ,EAAKkB,SAALoB,OAAAuC,EAAA,EAAAvC,CAAA,GAAkBtC,EAAKb,MAAvB,CAA8BiN,OAAO9J,OAAAuC,EAAA,EAAAvC,CAAA,GAAKtC,EAAKb,MAAMmO,OAAjB,CAAyBjB,sBAAsB,OAEnFkB,KAAO,GAAAC,OALK,oEAKKH,EAAV,eAAAG,OAA8B5L,qEACpC/C,KAAK,SAAA8H,GACF,GAAIA,EAAS8G,GAAI,OAAO9G,EAAS+G,OAC5B,MAAM,IAAIC,MAAM,qBAExB9O,KAAK,SAAA8H,GAAY,IAETiH,EAAWjH,EAAXiH,QACL,IAAIA,EAAQlJ,OAWP,MAAM,IAAIiJ,MAAM,oBAVrB3N,EAAKkB,SAALoB,OAAAuC,EAAA,EAAAvC,CAAA,GACOtC,EAAKb,MADZ,CAEIiN,OAAO9J,OAAAuC,EAAA,EAAAvC,CAAA,GACAtC,EAAKb,MAAMiN,OADZ,CAEFI,cAAc,EACd9M,MAAO,GACP0M,OAAO9J,OAAAwC,EAAA,EAAAxC,CAAKsL,GACZvB,sBAAsB,SAKjC5M,MAAM,SAAAC,GACHL,QAAQK,MAAMA,EAAMwH,SACpBlH,EAAKkB,SAALoB,OAAAuC,EAAA,EAAAvC,CAAA,GACOtC,EAAKb,MADZ,CAEIiN,OAAO9J,OAAAuC,EAAA,EAAAvC,CAAA,GAAKtC,EAAKb,MAAMiN,OAAjB,CAAyB1M,MAAOA,EAAMwH,UAC5CsF,cAAc,EACdH,sBAAsB,UAKlCwB,cAAgB,SAAA9N,GACZC,EAAKkB,SAALoB,OAAAuC,EAAA,EAAAvC,CAAA,GACOtC,EAAKb,MADZ,CAEI2N,iBAAiB,EACjBV,OAAO9J,OAAAuC,EAAA,EAAAvC,CAAA,GACAtC,EAAKb,MAAMiN,OADZ,CAEFE,aAAcvM,EAAM2D,GACpB6I,QAASxM,EAAMkM,IACfJ,QAAS9L,EAAM8L,gBAM3BiC,UAAY,SAAA/N,GAAS,IAEVwM,EAAWvM,EAAKb,MAAMiN,OAAtBG,QACPnM,EAAaC,KAAK,iBAAkB,CAACuE,QAAQ,EAAMmJ,OAAQxB,GAAoB,OAC/ExM,EAAMmL,qBAGV8C,iBAAmB,SAAAjO,GAEf,IAAIqM,EAAM9J,OAAAuC,EAAA,EAAAvC,CAAA,GAAOtC,EAAKb,MAAMiN,QAC5BhM,EAAaC,KAAb,0BAAAmN,OAA4CxN,EAAKC,MAAMgO,aAAc7B,GACrEhM,EAAaC,KAAb,+BAAiD+L,GACjDrM,EAAMmL,qBAGVgD,mBAAqB,SAACC,GAClB,OAAKA,GACL9O,QAAQC,IAAI,QACL6O,EAAMnJ,IAAI,SAACC,EAAKmJ,GACpB,OAAO9N,EAAAC,EAAAC,cAAC6N,GAAD,CACFC,IAAG,OAAAd,OAAWY,GACd1K,GAAM0K,EACNpC,SAAYhM,EAAKb,MAAMiN,OAAOE,eAAiB8B,EAC/CrC,QAAU,EACVN,KAAInJ,OAAAuC,EAAA,EAAAvC,CAAA,GAAQ2C,EAAKwG,WARN,QAavB8C,cAAgB,SAACxO,GACb,IAAIyO,EAAOxO,EAAKb,MAAMa,EAAKb,MAAMgN,UAC7BqC,EAAK7B,cAAiB6B,EAAK9B,eAC3BtM,EAAaC,KAAK,kBAClB,CACIiJ,MAAOtJ,EAAKb,MAAMa,EAAKb,MAAMgN,UAAUU,KACvCtJ,KAAMvD,EAAKb,MAAMa,EAAKb,MAAMgN,UAAU5I,OAG1CnD,EAAaC,KAAK,sBAAsB,CAACuE,OAAQ,gBAIzD6J,aAAe,SAAC1O,GAEZ,IAAI2O,EAAMpM,OAAAuC,EAAA,EAAAvC,CAAA,GAAOtC,EAAKb,MAAMa,EAAKb,MAAMgN,WACvCuC,EAAOnL,KAAOxD,EAAMgO,OAAO9E,MAC3ByF,EAAO/B,aAA+B,UAAhB+B,EAAOnL,KAC7BmL,EAAO9B,UAAW8B,EAAO/B,eAAgB+B,EAAOhC,aAChD1M,EAAKkB,SAALoB,OAAAuC,EAAA,EAAAvC,CAAA,GACOtC,EAAKb,MADZmD,OAAAqM,GAAA,EAAArM,CAAA,GAEKtC,EAAKb,MAAMgN,SAAWuC,QAI/BhC,aAAe,SAAC3M,GAEZ,IAAI2O,EAAMpM,OAAAuC,EAAA,EAAAvC,CAAA,GAAOtC,EAAKb,MAAMa,EAAKb,MAAMgN,WACvCuC,EAAO7B,KAAO9M,EAAMgO,OAAO9E,MAC3B,IAAI2F,EAAcF,EAAO7B,KAAKnI,OAC9BgK,EAAOhC,aAAekC,GAAe,GAAKA,EAAc,GACxDF,EAAO9B,UAAW8B,EAAO/B,eAAgB+B,EAAOhC,aAEhD1M,EAAKkB,SAALoB,OAAAuC,EAAA,EAAAvC,CAAA,GACOtC,EAAKb,MADZmD,OAAAqM,GAAA,EAAArM,CAAA,GAEKtC,EAAKb,MAAMgN,SAAWuC,QAI/BG,OAAS,SAAC9O,GAEsB,WAAxBC,EAAKb,MAAMgN,SACX/L,EAAaC,KAAK,sBAChBD,EAAaC,KAAK,sBAAsB,CAACuE,OAAQ,eAG3DkK,UAAY,SAAChG,GAAD,OAAU9I,EAAKmN,YAAcrE,KACzCiG,UAAY,SAAAjG,GAAI,OAAI9I,EAAKkN,YAAcpE,KAmFvC3H,kBAAoB,SAAApB,GACY,WAAxBC,EAAKb,MAAMgN,UACX/L,EAAagB,GAAG,qBAAsBpB,EAAK6N,kBAGnDxM,qBAAuB,SAAAtB,GACS,WAAxBC,EAAKb,MAAMgN,UACX/L,EAAakB,IAAI,qBAAsBtB,EAAK6N,wFAtFhD,OAAQlN,KAAKxB,MAAMgN,UACf,IAAK,aACD,OACI7L,EAAAC,EAAAC,cAAA,OAAKgI,UAAY,SACblI,EAAAC,EAAAC,cAAA,gCACEG,KAAKxB,MAAMwB,KAAKxB,MAAMgN,UAAUU,KAAKnI,QAAU,EAC7CpE,EAAAC,EAAAC,cAAA,QAAMgI,UAAY,WAAW7H,KAAKxB,MAAM4N,QAAQE,WAAoB,KAEtEtM,KAAKxB,MAAMwB,KAAKxB,MAAMgN,UAAUU,KAAKnI,QAAU,GAC7CpE,EAAAC,EAAAC,cAAA,QAAMgI,UAAY,WAAW7H,KAAKxB,MAAM4N,QAAQC,WAAoB,KAExE1M,EAAAC,EAAAC,cAAA,SACIgI,UAAa7H,KAAKxB,MAAMwB,KAAKxB,MAAMgN,UAAUO,aAAe,QAAU,QACtEzD,MAAStI,KAAKxB,MAAMwB,KAAKxB,MAAMgN,UAAUU,KACzCmC,SAAYrO,KAAK+L,aACjBnJ,KAAO,OACP0L,YAAc,iBAEftO,KAAKxB,MAAMwB,KAAKxB,MAAMgN,UAAUQ,aACgC,KAA/DrM,EAAAC,EAAAC,cAAA,QAAMgI,UAAY,WAAW7H,KAAKxB,MAAM4N,QAAQxJ,MAEpDjD,EAAAC,EAAAC,cAAA,UAAQwO,SAAYrO,KAAK8N,cACrBnO,EAAAC,EAAAC,cAAA,UAAQyI,MAAQ,SAAhB,YACA3I,EAAAC,EAAAC,cAAA,UAAQyI,MAAQ,WAAhB,WACA3I,EAAAC,EAAAC,cAAA,UAAQyI,MAAQ,aAAhB,cAEJ3I,EAAAC,EAAAC,cAAA,SACIE,QAAWC,KAAK4N,cAChB/F,UAAY,eACZoE,SAAYjM,KAAKxB,MAAMwB,KAAKxB,MAAMgN,UAAUS,SAC5CrJ,KAAO,SACP0F,MAAQ,WAER3I,EAAAC,EAAAC,cAAA,SAAOE,QAAWC,KAAKkO,OAAQtL,KAAM,SAAS0F,MAAQ,YAGtE,IAAK,SAED,OADA5J,QAAQC,IAAI,iBAERgB,EAAAC,EAAAC,cAAC0O,EAAA,SAAD,KACI5O,EAAAC,EAAAC,cAAA,OAAKgI,UAAY,sBACblI,EAAAC,EAAAC,cAAA,qCACEG,KAAKxB,MAAMiN,OAAO1M,MAChBY,EAAAC,EAAAC,cAAA,QAAMgI,UAAY,SAAS7H,KAAKxB,MAAMiN,OAAO1M,OAAgB,KAEjEY,EAAAC,EAAAC,cAAA,SAAO4I,IAAOzI,KAAKoO,UAAWxL,KAAO,OAAO0L,YAAc,eAC1D3O,EAAAC,EAAAC,cAAA,SACIoM,SAAYjM,KAAKxB,MAAMiN,OAAOC,qBAC9B7D,UAAY,eACZjF,KAAO,SACP0F,MAAQ,SACRvI,QAAWC,KAAKyM,mBAEpB9M,EAAAC,EAAAC,cAAA,SAAOE,QAAWC,KAAKkO,OAAQtL,KAAM,SAAS0F,MAAQ,WAElDtI,KAAKxB,MAAMiN,OAAOI,aAClBlM,EAAAC,EAAAC,cAAA,OAAKgI,UAAY,mBACZ7H,KAAKuN,mBAAL5L,OAAAwC,EAAA,EAAAxC,CAA4B3B,KAAKxB,MAAMiN,OAAX,UAE/B,MAGPzL,KAAKxB,MAAM2N,gBACVxM,EAAAC,EAAAC,cAAA,OAAKgI,UAAY,qBACjBlI,EAAAC,EAAAC,cAAA,UAAQE,QAAWC,KAAKmN,UAAWtF,UAAY,2BAC3ClI,EAAAC,EAAAC,cAAC+K,EAAD,CAAMjD,KAAO,mBAEjBhI,EAAAC,EAAAC,cAAA,UAAQE,QAAWC,KAAKqN,iBAAkBxF,UAAY,+BAClDlI,EAAAC,EAAAC,cAAC+K,EAAD,CAAMjD,KAAO,wBAGf,MAIlB,QAAS,OAAOhI,EAAAC,EAAAC,cAAC0O,EAAA,SAAD,cApPFtO,IAAMC,gBCP1BsO,GAA0B,SAACnL,EAAKoL,EAAM9F,EAAO/F,GAAnB,sBAAAyC,EAAA1D,OAAA2D,EAAA,EAAA3D,CAAA4D,EAAA3F,EAAA4F,KAA4B,SAAAC,EAAOT,EAASF,EAAhBY,GAAA,IAAA7D,EAAA6M,EAAAC,EAAA,OAAApJ,EAAA3F,EAAA+F,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAA2BjE,EAA3B6D,EAA2B7D,SAC/E6M,EADoD/M,OAAAwC,EAAA,EAAAxC,CAClC8M,GAChBE,EAAYD,EAAY3K,OAAU2K,EAAYA,EAAY3K,OAAO,GAAGhB,GAAK,EAAI,EACnF2L,EAAYlP,KAAK,CAACuD,GAAM4L,EAAWhG,MAASA,EAAO/F,KAAQA,EAAMK,UAAW,KAHpB2C,EAAAE,KAAA,EAKlDjE,EAASE,GAAGkE,WAAW,SAASC,IAAI7C,GAAKlE,OAAO,CAClDmE,SAAYoL,IAEfxQ,KAAM,kBAAM8G,EfFN,CACHpC,KAVe,iBAWfU,SeAsCoL,MACzC5P,MAAM,SAAAC,GACHL,QAAQK,MAAMA,EAAMwH,SACpBvB,EAASzB,EAAYxE,EAAMwH,YAXyB,wBAAAX,EAAAY,SAAAf,MAA5B,gBAAAgB,EAAAC,EAAAC,GAAA,OAAAtB,EAAAuB,MAAA5G,KAAA8D,YAAA,WC6BjB3D,mBA5Bf,SAAcb,GAAO,IAAAmI,EACJC,mBAASpI,EAAMyD,IAArBA,EADUpB,OAAAiG,EAAA,EAAAjG,CAAA8F,EAAA,MAAAuC,EAEFtC,mBAASpI,EAAM4M,MAAvBA,EAFUvK,OAAAiG,EAAA,EAAAjG,CAAAqI,EAAA,MAAAC,EAGFvC,mBAASpI,EAAMsD,MAAvBA,EAHUjB,OAAAiG,EAAA,EAAAjG,CAAAsI,EAAA,MAgBjB,OACItK,EAAAC,EAAAC,cAAA,OAAKgI,UAAY,OAAO+G,UAAW7L,GAC/BpD,EAAAC,EAAAC,cAAA,KAAGgI,UAAY,eAAeqE,GAC9BvM,EAAAC,EAAAC,cAAA,KAAGgI,UAAY,eAAejF,GAC9BjD,EAAAC,EAAAC,cAAA,OAAKgI,UAAY,qBACjBlI,EAAAC,EAAAC,cAAA,SAAOE,QAfD,SAAAX,GACVE,EAAMC,QAAQC,KAAd,kBAAAqN,OAAqC9J,IACrC3D,EAAMmL,mBAauB1C,UAAY,gCAAgCjF,KAAO,SAAS0F,MAAQ,gBAC7F3I,EAAAC,EAAAC,cAAA,SAAOE,QAXI,SAAAX,GACfK,EAAaC,KAAK,kBAAkB,CAACqD,GAAIzD,EAAMyD,GAAImJ,KAAM5M,EAAM4M,KAAMtJ,KAAMtD,EAAMsD,OACjFxD,EAAMmL,mBAS4B1C,UAAY,iCAAiCjF,KAAO,SAAS0F,MAAQ,eCfzGuG,8MAUFrQ,MAAQ,CACJgM,UAAU,KAGdoD,cAAgB,SAACtJ,GACTjF,EAAKC,MAAM8D,OACX/D,EAAKC,MAAM0F,SAASwJ,GAAwBnP,EAAKC,MAAM8D,OAAQ/D,EAAKC,MAAMmP,KAAMnK,EAAKqE,MAAOrE,EAAK1B,OAC9FvD,EAAKkB,SAALoB,OAAAuC,EAAA,EAAAvC,CAAA,GAAkBtC,EAAKb,MAAvB,CAA8BgM,UAAU,QAInDsE,SAAW,SAACL,GAER,OAAOA,EAAKpK,IAAK,SAAA0K,GAEb,OACIpP,EAAAC,EAAAC,cAACmP,GAAD,CACIrB,IAAOoB,EAAQhM,GACfA,GAAMgM,EAAQhM,GACdmJ,KAAQ6C,EAAQpG,MAChB/F,KAAQmM,EAAQnM,YAgBhCpC,kBAAoB,WAChBf,EAAagB,GAAG,kBAAkBpB,EAAKuO,kBAGzClN,qBAAuB,WACrBjB,EAAakB,IAAI,kBAAkBtB,EAAKuO,wFAdxC,OAAI5N,KAAKxB,MAAMgM,SACJ7K,EAAAC,EAAAC,cAAC0J,EAAA,EAAD,CAAUC,GAAK,MAEd7J,EAAAC,EAAAC,cAAA,OAAKgI,UAAY,sBACZ7H,KAAK8O,SAALnN,OAAAwC,EAAA,EAAAxC,CAAkB3B,KAAKV,MAAMmP,eAzCnCxO,IAAMC,eA+DVyJ,eAPS,SAACnL,GACrB,MAAO,CACH4E,OAAQ5E,EAAM4F,QAAQhB,OACtBqL,KAAK9M,OAAAwC,EAAA,EAAAxC,CAAKnD,EAAM4F,QAAQd,YAIjBqG,CAAyBkF,IC3CzBI,4LAhBP,OACQtP,EAAAC,EAAAC,cAAA,WAASgI,UAAY,gBACrBlI,EAAAC,EAAAC,cAAA,OAAKgI,UAAY,aACjBlI,EAAAC,EAAAC,cAAA,OAAKgI,UAAY,eACTlI,EAAAC,EAAAC,cAAA,OAAKgI,UAAY,uBACblI,EAAAC,EAAAC,cAAA,4BAEJF,EAAAC,EAAAC,cAACqP,GAAD,gBAdMjP,IAAMC,gBCS9ByI,WAAQlH,EAAQ,IAAqBkH,OAErCwG,8MAMJ3Q,MAAQ,CACNgN,SAAU,aAGZlB,OAAS,SAAAlL,GACPC,EAAKC,MAAM0F,SAAS6B,EAAqBxH,EAAKC,MAAM8D,YAGtDgM,UAAY,SAAAhQ,GACVC,EAAKC,MAAM0F,SAAS4E,EAAiBjI,OAAAuC,EAAA,EAAAvC,CAAA,GAAIvC,EAAL,CAAYiE,IAAKhE,EAAKC,MAAMuC,SAASwN,iBAAiBhM,WAG5FiM,eAAiB,SAAAlQ,GACfC,EAAKkB,SAALoB,OAAAuC,EAAA,EAAAvC,CAAA,GACKtC,EAAKb,MADV,CAEEgN,SAAUpM,EAAM6E,aAmBpBzD,kBAAoB,WAClBf,EAAagB,GAAG,kBAAmBpB,EAAK+P,WACxC3P,EAAagB,GAAG,sBAAuBpB,EAAKiQ,mBAG9C5O,qBAAuB,WACrBjB,EAAakB,IAAI,kBAAmBtB,EAAK+P,WACzC3P,EAAakB,IAAI,sBAAuBtB,EAAKiQ,yFArB7C,OAAItP,KAAKV,MAAM6D,QACbzE,QAAQC,IAAI,WAEVgB,EAAAC,EAAAC,cAAC0O,EAAA,SAAD,KACE5O,EAAAC,EAAAC,cAAC0P,GAAD,CAAQ5G,MAASA,GAAOvF,OAAUpD,KAAKV,MAAM8D,SACnB,eAAxBpD,KAAKxB,MAAMgN,SAA6B7L,EAAAC,EAAAC,cAAC2P,GAAD,CAAOhE,SAAYxL,KAAKxB,MAAMgN,WAAe,KACrF7L,EAAAC,EAAAC,cAAC4P,GAAD,QAGIzP,KAAKV,MAAMuC,SAASwN,iBACpB1P,EAAAC,EAAAC,cAAC2H,EAAD,CAAQG,KAAO,mBAAmB/E,KAAO,YADIjD,EAAAC,EAAAC,cAAC0J,EAAA,EAAD,CAAUC,GAAK,aAnCtDvJ,IAAMC,eA6DbyJ,eAVS,SAACnL,GACvB,MAAO,CACL4E,OAAQ5E,EAAM4F,QAAQhB,OACtBE,SAAS3B,OAAAwC,EAAA,EAAAxC,CAAKnD,EAAM4F,QAAQd,UAC5BH,OAAQ3E,EAAM4F,QAAQjB,SAMXwG,CAAyBtC,EAAa8H,KCnCtC9H,wNA7BX7I,MAAQ,CACJV,OAAQuB,EAAKC,MAAMxB,gFAInB,GAAIkC,KAAKV,MAAMuC,SAASwN,iBAAkB,KAC9BvR,EAAWkC,KAAKxB,MAAhBV,OACR,OACI6B,EAAAC,EAAAC,cAAC0O,EAAA,SAAD,KACI5O,EAAAC,EAAAC,cAAC0P,GAAD,CAAQ5G,MAAS7K,EAAO6K,QACxBhJ,EAAAC,EAAAC,cAAA,WAASgI,UAAY,SACjBlI,EAAAC,EAAAC,cAAA,OAAKgI,UAAY,aACblI,EAAAC,EAAAC,cAAA,OAAKgI,UAAY,UACblI,EAAAC,EAAAC,cAAA,OAAKgI,UAAY,eACjBlI,EAAAC,EAAAC,cAAA,OAAKkI,IAAM,MAAMF,UAAY,YAAYC,IAAO7G,+BAC5CtB,EAAAC,EAAAC,cAAA,KAAGgI,UAAW,aAAYlI,EAAAC,EAAAC,cAAA,0BAA1B,IAAmD/B,EAAO4R,MAAMC,WAChEhQ,EAAAC,EAAAC,cAAA,KAAGgI,UAAY,QAAOlI,EAAAC,EAAAC,cAAA,qBAAtB,IAA0C/B,EAAO4R,MAAME,WAO5E,OAAOjQ,EAAAC,EAAAC,cAAC0J,EAAA,EAAD,CAAUC,GAAK,aA9BjBvJ,IAAMC,iBCUX2P,GAjBU,SAACvL,GAAD,sBAAAe,EAAA1D,OAAA2D,EAAA,EAAA3D,CAAA4D,EAAA3F,EAAA4F,KAAU,SAAAC,EAAOT,EAASF,EAAhBY,GAAA,IAAA7D,EAAAiO,EAAA,OAAAvK,EAAA3F,EAAA+F,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAA2BjE,EAA3B6D,EAA2B7D,SAC1DnD,QAAQC,IAAI,UAERmR,EAAcxL,EAAKhB,SAASe,IAAI,SAAA0K,GAEhC,OADIA,EAAQhM,KAAOuB,EAAKX,YAAaoL,EAAQ9L,UAARtB,OAAAwC,EAAA,EAAAxC,CAAwB2C,EAAKrB,YAC3D8L,IALoBnJ,EAAAE,KAAA,EAOzBjE,EAASE,GAAGkE,WAAW,SAASC,IAAI5B,EAAKjB,KAAKlE,OAAO,CACvDmE,SAAYyM,KAAKC,MAAMD,KAAKE,UAAUH,MAEzC5R,KAAK,SAAA8H,GACF,IrBkB0BxH,EqBlBtBuQ,EAAUzK,EAAKhB,SAAS4M,KAAK,SAAApG,GAAM,OAAIA,EAAO/G,KAAOuB,EAAKX,YAC9DqB,ErBkBG,CACHpC,KAhCoB,sBAiCpBe,WAH0BnF,EqBjBQ,CAACyE,UAAUtB,OAAAwC,EAAA,EAAAxC,CAAKoN,EAAQ9L,WAAYU,UAAWW,EAAKX,YrBoBrEA,UACjBV,UAAWzE,EAAMyE,cqBnBpBnE,MAAM,SAAAC,GAAK,OAAIiG,EAASzB,EAAYxE,EAAMwH,YAdZ,wBAAAX,EAAAY,SAAAf,MAAV,gBAAAgB,EAAAC,EAAAC,GAAA,OAAAtB,EAAAuB,MAAA5G,KAAA8D,YAAA,WCmBVqM,OAhBf,SAAqB7Q,GAAM,IAAAmI,EAEVC,mBAASpI,EAAMqI,MAAvBA,EAFkBhG,OAAAiG,EAAA,EAAAjG,CAAA8F,EAAA,MASvB,OACI9H,EAAAC,EAAAC,cAAA,OAAKE,QANW,SAAAX,GAChBK,EAAaC,KAAK,iBAAkB,CAAEuE,QAAQ,EAAOmJ,OAAQ,OAC7DhO,EAAMmL,mBAIuB1C,UAAY,eACrClI,EAAAC,EAAAC,cAAA,OAAKiI,IAAOH,EAAMI,IAAM,0BCgOrBqI,sNAjOX5R,MAAQ,CACJ6R,gBAAgB1O,OAAAuC,EAAA,EAAAvC,CAAA,GAAKtC,EAAKC,MAAM+Q,iBAChCC,gBAAiB,CACbC,QAAS,KACTC,SAAU,KACVC,MAAO,KACPC,gBAAiB,KACjBC,MAAO,KACPC,OAAQ,CAACC,KAAM,KAAMC,IAAK,OAE9BrF,OAAQ,QAGZsF,eAAiB,SAAAC,GACb3R,EAAKkB,SAALoB,OAAAuC,EAAA,EAAAvC,CAAA,GACOtC,EAAKb,MADZ,CAEI6R,gBAAgB1O,OAAAuC,EAAA,EAAAvC,CAAA,GAAKtC,EAAKb,MAAM6R,iBAChCC,gBAAgB3O,OAAAuC,EAAA,EAAAvC,CAAA,GAAKtC,EAAKb,MAAM8R,gBAAjB,CAAkCE,SAAUQ,UAInEC,WAAa,SAAA7R,GACTK,EAAaC,KAAK,kBAAmB,CAACwR,OAAO,OAGjDC,QAAU,SAAA/R,GAAS,IAEVkO,EAAejO,EAAKb,MAAM6R,gBAA1B/C,YACD8D,EAAOhS,EAAMgO,OAAO9E,MAAQ,IAAM,IAAMlJ,EAAMgO,OAAO9E,MACzDjJ,EAAKkB,SAALoB,OAAAuC,EAAA,EAAAvC,CAAA,GACOtC,EAAKb,MADZ,CAEI6R,gBAAgB1O,OAAAuC,EAAA,EAAAvC,CAAA,GAAKtC,EAAKb,MAAM6R,iBAChCC,gBAAgB3O,OAAAuC,EAAA,EAAAvC,CAAA,GAAKtC,EAAKb,MAAM8R,gBAAjB,CAAiCE,SAAUY,MAE1D,kBAAM3R,EAAaC,KAAb,sBAAAmN,OAAwCS,GAAe,CAAC8D,KAAMA,MAGxEhS,EAAMmL,qBAGV8G,WAAa,SAAAjS,GAAS,IACbkO,EAAejO,EAAKb,MAAM6R,gBAA1B/C,YACDgE,EAAelS,EAAMgO,OAAO9E,MAChCjJ,EAAKkB,SAALoB,OAAAuC,EAAA,EAAAvC,CAAA,GACOtC,EAAKb,MADZ,CAEI6R,gBAAgB1O,OAAAuC,EAAA,EAAAvC,CAAA,GAAKtC,EAAKb,MAAM6R,iBAChCC,gBAAgB3O,OAAAuC,EAAA,EAAAvC,CAAA,GAAKtC,EAAKb,MAAM8R,gBAAjB,CAAiCC,QAASe,MAE7D,kBAAM7R,EAAaC,KAAb,yBAAAmN,OAA2CS,GAAc,CAACiD,QAASe,MACzElS,EAAMmL,qBAGVgH,eAAiB,SAAAC,GAEbnS,EAAKkB,SAALoB,OAAAuC,EAAA,EAAAvC,CAAA,GACOtC,EAAKb,MADZ,CAEI8R,gBAAgB3O,OAAAuC,EAAA,EAAAvC,CAAA,GACTtC,EAAKb,MAAM8R,gBADH,CAEXM,OAAOjP,OAAAuC,EAAA,EAAAvC,CAAA,GACAtC,EAAKb,MAAM8R,gBAAgBM,OAD5B,CAEFC,KAAMW,EAAUC,EAChBX,IAAKU,EAAUE,YAM/BC,SAAW,SAAAvS,GACPC,EAAKkB,SAALoB,OAAAuC,EAAA,EAAAvC,CAAA,GAAkBtC,EAAKb,MAAvB,CACI6R,gBAAgB1O,OAAAuC,EAAA,EAAAvC,CAAA,GACTtC,EAAKb,MAAM6R,gBADH,CAEXuB,mBAAmBvS,EAAKb,MAAM6R,gBAAgBuB,uBAGtDxS,EAAMmL,qBAGVsH,kBAAoB,SAAAL,GAAa,IACtBtG,EAAWsG,EAAXtG,QACP7L,EAAKkB,SAALoB,OAAAuC,EAAA,EAAAvC,CAAA,GACOtC,EAAKb,MADZ,CAEI8R,gBAAgB3O,OAAAuC,EAAA,EAAAvC,CAAA,GACTtC,EAAKb,MAAM8R,gBADH,CAEXI,gBAAiBxF,UAK7B4G,qBAAuB,SAAA1S,GAAS,IAErB2S,EAAO3S,EAAP2S,IACHC,EAAQ,OAAAnF,OAAUkF,EAAIE,EAAd,KAAApF,OAAmBkF,EAAIG,EAAvB,KAAArF,OAA4BkF,EAAII,EAAhC,KAAAtF,OAAqCkF,EAAInS,EAAzC,KAEP0N,EAAejO,EAAKb,MAAM6R,gBAA1B/C,YACqC,eAAtCjO,EAAKb,MAAM6R,gBAAgBjD,OAC3B/N,EAAKkB,SAALoB,OAAAuC,EAAA,EAAAvC,CAAA,GACOtC,EAAKb,MADZ,CAEI8R,gBAAgB3O,OAAAuC,EAAA,EAAAvC,CAAA,GAAKtC,EAAKb,MAAM8R,gBAAjB,CAAiCG,MAAOuB,MACxD,kBAAMvS,EAAaC,KAAb,6BAAAmN,OAA+CS,GAAe0E,KAG5B,SAAtC3S,EAAKb,MAAM6R,gBAAgBjD,QAChC/N,EAAKkB,SAALoB,OAAAuC,EAAA,EAAAvC,CAAA,GACOtC,EAAKb,MADZ,CAEI8R,gBAAgB3O,OAAAuC,EAAA,EAAAvC,CAAA,GAAKtC,EAAKb,MAAM8R,gBAAjB,CAAiCG,MAAOuB,MAE3D,kBAAMvS,EAAaC,KAAb,uBAAAmN,OAAyCS,GAAe0E,QAKtEI,YAAc,SAAAhT,GACVK,EAAaC,KAAK,4BAAlBiC,OAAAuC,EAAA,EAAAvC,CAAA,GACOtC,EAAKb,MAAM8R,gBADlB,CAEI1N,KAAMvD,EAAKb,MAAM6R,gBAAgBjD,UAGrChO,EAAMmL,qBAGV8H,YAAc,SAAAjT,GAAS,IAEdkO,EAAejO,EAAKb,MAAM6R,gBAA1B/C,YACL7N,EAAaC,KAAK,qBAAsB,CAAC4N,YAAaA,IAEtDlO,EAAMmL,qBAGV+H,qBAAuB,SAAC1P,GAAS,IAExBgP,EAAqBvS,EAAKb,MAAM6R,gBAAhCuB,kBACApB,EAAYnR,EAAKb,MAAM8R,gBAAvBE,SACD,OAAQ5N,GACJ,IAAK,OACD,OACIjD,EAAAC,EAAAC,cAAC0O,EAAA,SAAD,KACA5O,EAAAC,EAAAC,cAAA,KAAGgI,UAAY,kBAAf,WACAlI,EAAAC,EAAAC,cAAA,SAAOE,QAAWV,EAAKsS,SAAU9J,UAAY,qBAAqBjF,KAAO,SAAS0F,MAAQ,eAC1F3I,EAAAC,EAAAC,cAAA,KAAGgI,UAAY,kBAAf,eACAlI,EAAAC,EAAAC,cAAA,SACIwO,SAAYhP,EAAK8R,QACjBvO,KAAK,SACL2P,IAAM,KAAKC,IAAM,MACjBlK,MAASkI,GAAsB,MAE7BoB,EACEjS,EAAAC,EAAAC,cAAC4S,GAAA,aAAD,CACAC,iBAAkBrT,EAAKyS,uBAErB,KAEVnS,EAAAC,EAAAC,cAAA,KAAGgI,UAAY,kBAAf,aACAlI,EAAAC,EAAAC,cAAA,SAAOwO,SAAYhP,EAAKgS,WAAYsB,UAAY,KAAK/P,KAAO,OAAOgQ,aAAe,UAClFjT,EAAAC,EAAAC,cAAA,SAAOE,QAAWV,EAAK+S,YAAavK,UAAY,sBAAsBjF,KAAO,SAAS0F,MAAQ,kBAGtG,IAAK,aACD,OACI3I,EAAAC,EAAAC,cAAC0O,EAAA,SAAD,KACA5O,EAAAC,EAAAC,cAAA,KAAGgI,UAAY,kBAAf,WACAlI,EAAAC,EAAAC,cAAA,SAAOE,QAAWV,EAAKsS,SAAU9J,UAAY,qBAAqBjF,KAAO,SAAS0F,MAAQ,eACpFsJ,EACEjS,EAAAC,EAAAC,cAAC4S,GAAA,aAAD,CACAC,iBAAkBrT,EAAKyS,uBAErB,KAENnS,EAAAC,EAAAC,cAAA,SAAOE,QAAWV,EAAKgT,YAAaxK,UAAY,oBAAoBjF,KAAO,SAAS0F,MAAQ,qBAC5F3I,EAAAC,EAAAC,cAAA,SAAOE,QAAWV,EAAK+S,YAAavK,UAAY,sBAAsBjF,KAAO,SAAS0F,MAAQ,kBAG1G,QAAS,OAAO3I,EAAAC,EAAAC,cAAA,KAAGgI,UAAY,sBAAf,mDAI5BgL,mBAAqB,SAACC,EAAUC,GAC5B,IAAIC,EAAaD,EAAS1C,gBAAgBjD,SAAW/N,EAAKC,MAAM+Q,gBAAgBjD,OAC5E6F,EAASF,EAAS1C,gBAAgB/C,cAAgBjO,EAAKC,MAAM+Q,gBAAgB/C,YACjF5O,QAAQC,IAAIU,EAAKC,MAAM+Q,kBACnB4C,GAAUD,IACV3T,EAAKkB,SAALoB,OAAAuC,EAAA,EAAAvC,CAAA,GACOtC,EAAKb,MADZ,CAEI6R,gBAAgB1O,OAAAuC,EAAA,EAAAvC,CAAA,GAAKtC,EAAKC,MAAM+Q,gBAAjB,CAAkCuB,mBAAmB,IACpEtB,gBAAiB,CACbC,QAAS,KAAMC,SAAU,KAAMC,MAAO,KACtCC,gBAAiB,KAAMC,MAAO,KAC9BC,OAAQ,CAACC,KAAM,KAAMC,IAAK,aAK1CtQ,kBAAoB,SAAApB,GAChBK,EAAagB,GAAG,sBAAuBpB,EAAK0R,gBAC5CtR,EAAagB,GAAG,+BAAgCpB,EAAKwS,mBACrDpS,EAAagB,GAAG,sBAAuBpB,EAAKkS,mBAGhD7Q,qBAAuB,SAAAtB,GACnBK,EAAakB,IAAI,sBAAuBtB,EAAK0R,gBAC7CtR,EAAakB,IAAI,sBAAuBtB,EAAKkS,yFAGzC,IACE2B,EAAqBlT,KAAKxB,MAAM6R,gBAAhC6C,iBACN,OACIvT,EAAAC,EAAAC,cAAC0O,EAAA,SAAD,KACI5O,EAAAC,EAAAC,cAAA,OAAMgI,UAAY,mBAClBlI,EAAAC,EAAAC,cAAA,UAAQE,QAAWC,KAAKiR,WAAYpJ,UAAY,yBAAwBlI,EAAAC,EAAAC,cAAC+K,EAAD,CAAMjD,KAAO,oBACjFhI,EAAAC,EAAAC,cAAA,yBAEIqT,EACAvT,EAAAC,EAAAC,cAAA,KAAGgI,UAAY,iBAAiB7H,KAAKxB,MAAM6R,gBAAgBjD,QACzD,KAGF8F,EACAvT,EAAAC,EAAAC,cAAA,OAAMgI,UAAW,cAAc7H,KAAKsS,qBAAqBtS,KAAKxB,MAAM6R,gBAAgBjD,SAClF,cAhOKnN,IAAMC,oQCHrC,IAAMiT,GAAaC,KAAOC,IAAVC,KAKQ,SAAAhU,GAAK,OAAIA,EAAMiU,iBACX,SAAAjU,GAAK,OAAIA,EAAMoR,kBA8D5B8C,GA3Da,SAAAlU,GAAS,IAAAmI,EAEpBC,mBAASpI,EAAMyD,IAArBA,EAF0BpB,OAAAiG,EAAA,EAAAjG,CAAA8F,EAAA,MAAAuC,EAIPtC,mBAAS,GAJF+L,EAAA9R,OAAAiG,EAAA,EAAAjG,CAAAqI,EAAA,GAI1B0J,EAJ0BD,EAAA,GAInBE,EAJmBF,EAAA,GAK7BG,EAAe3T,IAAM4T,YALQ5J,EAOGvC,mBAASpI,EAAMwU,YAPlBC,EAAApS,OAAAiG,EAAA,EAAAjG,CAAAsI,EAAA,GAO5BsJ,EAP4BQ,EAAA,GAOXC,EAPWD,EAAA,GAAA5I,EAQCzD,mBAASpI,EAAMoR,gBAAkBpR,EAAMoR,gBAAkB,MAR1DuD,EAAAtS,OAAAiG,EAAA,EAAAjG,CAAAwJ,EAAA,GAQ5BuF,EAR4BuD,EAAA,GAQXC,EARWD,EAAA,GA0B3BE,EAAc,SAAA1D,GAChBuD,EAAWvD,IAGT2D,EAAqB,SAAAhV,GAAS,IACzB8L,EAAW9L,EAAX8L,QACPgJ,EAAShJ,IAeb,OADAmJ,oBAXkB,WAKd,OAJA3V,QAAQC,IAAI,aACE,IAAV+U,GA3BU,SAAAtU,GACduU,EAASD,EAAQ,GACjBE,EAAaU,QAAQC,QACrB,IAAIC,EAAaZ,EAAaU,QAAQG,wBACtChV,EAAaC,KAAK,iBAAkB,CAACgV,MAAOF,EAAUE,MAAOC,OAAQH,EAAUG,SAuB7DC,GAClBnV,EAAagB,GAAb,6BAAAoM,OAA6C9J,GAAMoR,GACnD1U,EAAagB,GAAb,0BAAAoM,OAA0C9J,GAAMqR,GACzC,WACH3U,EAAakB,IAAb,6BAAAkM,OAA8C9J,GAAMoR,GACpD1U,EAAakB,IAAb,0BAAAkM,OAA2C9J,GAAMqR,MAMrDzU,EAAAC,EAAAC,cAACsT,GAAD,CACI1K,IAAQmL,EACR7T,QAjCkB,SAAAX,GACtBV,QAAQC,IAAIwU,IACZ1T,EAAaC,KAAK,uBAAuB,CACrC0N,OAAQ,aACRrK,GAAIA,IAER3D,EAAMmL,mBA4BFgJ,gBAAmBA,EACnB7C,gBAAmBA,GAElBpR,EAAMwB,8NC9DnB,IAAM+T,GAAQzB,KAAO0B,GAAGC,MAAM,SAAAzV,GAAK,MAAK,CACpC0V,MAAO,CACHC,QAAS3V,EAAM4V,cAAgB,OAAS,QACxCrE,KAAMvR,EAAM6V,OAAS7V,EAAM6V,OAAS,MACpCrE,IAAMxR,EAAM8V,UAJNhC,CAAHiC,KAQM,SAAA/V,GAAK,OAAIA,EAAM8R,MACnB,SAAA9R,GAAK,OAAIA,EAAMgW,YAkIbC,GA1HO,SAAAjW,GAAU,IAAAmI,EAEfC,mBAASpI,EAAMyD,IAArBA,EAFqBpB,OAAAiG,EAAA,EAAAjG,CAAA8F,EAAA,MAI5B/I,QAAQC,IAAK,QAJe,IAAAqL,EAKLtC,mBAAS/F,OAAAuC,EAAA,EAAAvC,CAAA,GAAIrC,EAAMkW,eAAnCA,EALqB7T,OAAAiG,EAAA,EAAAjG,CAAAqI,EAAA,MAAAC,EAOIvC,mBAASpI,EAAMmR,OAPnBsD,EAAApS,OAAAiG,EAAA,EAAAjG,CAAAsI,EAAA,GAOvBwL,EAPuB1B,EAAA,GAOZ2B,EAPY3B,EAAA,GAAA5I,EAQEzD,mBAASpI,EAAM8R,KAAO9R,EAAM8R,KAAO,KARrC6C,EAAAtS,OAAAiG,EAAA,EAAAjG,CAAAwJ,EAAA,GAQvBwK,EARuB1B,EAAA,GAQb2B,EARa3B,EAAA,GAAA4B,EASCnO,mBAASpI,EAAMwB,UAThBgV,EAAAnU,OAAAiG,EAAA,EAAAjG,CAAAkU,EAAA,GASvBE,EATuBD,EAAA,GASVE,EATUF,EAAA,GAAAG,EAUUvO,mBAAS,MAVnBwO,EAAAvU,OAAAiG,EAAA,EAAAjG,CAAAsU,EAAA,GAUrBE,EAVqBD,EAAA,GAURE,EAVQF,EAAA,GAAAG,EAWM3O,mBAAS,MAXf4O,EAAA3U,OAAAiG,EAAA,EAAAjG,CAAA0U,EAAA,GAWrBE,EAXqBD,EAAA,GAWVE,EAXUF,EAAA,GAuBtBG,EAAkB,SAAAhG,GACpBiF,EAAajF,IAGXiG,EAAiB,SAAA1F,GAAa,IACzBI,EAAQJ,EAARI,KACPwE,EAAYxE,IAGVuF,EAAoB,SAAAC,GAAgB,IAC/BrG,EAAWqG,EAAXrG,QACPyF,EAAQzF,IA2BNsG,EAAW,SAAAzX,GAEb,IAAI+V,EAAS/V,EAAM0X,MAAQX,EAAY1E,EACnC2D,EAAShW,EAAM2X,MAAQZ,EAAYzE,EACvChT,QAAQC,IAAIkW,IACZM,EAASA,GAAU,IAAM,IAAMA,EAC/BC,EAASA,GAAU,EAAI,EAAIA,EAC3B1W,QAAQC,IAAI6W,GACZ,IAGMwB,EAAW,CACbvF,EAJ8B,IAAT0D,EAAgBK,EAAad,MAI3B,IACvBhD,EAJ8B,IAAT0D,EAAgBI,EAAab,OAI3B,IACvBO,cAA8B,SAAf9V,EAAMwD,MAEzB4T,EAAaQ,GAEM,YAAf5X,EAAMwD,MACNnD,EAAaC,KAAK,sBAAuBsX,GAC7C5X,EAAMmL,mBAsBV,OAFA8J,oBA/DkB,SAAAjV,GAId,OAHAK,EAAagB,GAAb,uBAAAoM,OAAuC9J,GAAM0T,GAC7ChX,EAAagB,GAAb,sBAAAoM,OAAsC9J,GAAM2T,GAC5CjX,EAAagB,GAAb,yBAAAoM,OAAyC9J,GAAM4T,GACxC,WACHlX,EAAakB,IAAb,uBAAAkM,OAAwC9J,GAAM0T,GAC9ChX,EAAakB,IAAb,sBAAAkM,OAAuC9J,GAAM2T,GAC7CjX,EAAakB,IAAb,yBAAAkM,OAA0C9J,GAAM4T,MA2DpDhX,EAAAC,EAAAC,cAACgV,GAAD,CACI9U,QA5FqB,SAAAX,GAEzBK,EAAaC,KAAb,uBAAyC,CACrC0N,OAAQ,OACRrK,GAAIA,EACJkU,cAAetB,IAEnBvW,EAAMmL,mBAsFF+K,UAAaG,GAAwB,MACrCrE,KAAQuE,EAAWA,EAAW,KAAO,QACrCzL,WAAa,EACbgN,YA5DW,SAAA9X,GAEf,IAAI+X,EAAO/X,EAAMgO,OAAOqH,wBACpB5D,EAAOsG,EAAKtG,KACZC,EAAMqG,EAAKrG,IACX4D,EAAQyC,EAAKzC,MACbC,EAASwC,EAAKxC,OAClByB,EAAe,CAAC3E,EAAGrS,EAAM0X,MAAQjG,EAAO6D,EAAM,EAAGhD,EAAGtS,EAAM2X,MAAQjG,EAAM6D,EAAO,MAE/EvV,EAAMmL,mBAoDF6M,OAAYP,EACZQ,UAAaR,EACbS,QA5Be,SAAAlY,GAEnB,GAAIA,EAAMmY,WAA8B,MAAlBnY,EAAMoY,OAAiB,CACzC,IAAIC,EAAU9B,EAAW,EAEzBC,EADA6B,EAAUA,EAAU,IAAM,IAAMA,GAEhChY,EAAaC,KAAK,sBAAuB+X,GAG7C,GAAIrY,EAAMmY,UAA6B,MAAjBnY,EAAMoY,OAAgB,CACxC,IAAIC,EAAU9B,EAAW,EAExBC,EADA6B,EAAUA,GAAW,GAAK,GAAKA,GAE/BhY,EAAaC,KAAK,sBAAuB+X,GAE9CrY,EAAMmL,mBAcF4K,OAAUoB,EAAYA,EAAU9E,EAAI,KACpC2D,OAAUmB,EAAYA,EAAU7E,EAAI,KACpCwD,gBAAiBqB,GAAYA,EAAUrB,eAEtCa,ICtFE2B,sNAtCXlZ,MAAQ,CACJyE,UAAUtB,OAAAuC,EAAA,EAAAvC,CAAA,GAAKtC,EAAKC,MAAM2D,WAC1BuS,aAAa7T,OAAAuC,EAAA,EAAAvC,CAAA,GAAKtC,EAAKC,MAAMkW,cAC7B7M,MAAO,WAGXgP,QAAU,SAAAvY,GACN,IAAI2D,EAAK1D,EAAKC,MAAMsY,gBAChB3U,EAAY,CAACtD,EAAAC,EAAAC,cAACgY,GAAD,CAAerC,aAAY7T,OAAAuC,EAAA,EAAAvC,CAAA,GAAQtC,EAAKC,MAAMkW,cAAezS,GAAMA,EAAI4K,IAAG,OAAAd,OAAW9J,IAAO1D,EAAKb,MAAMmK,QACxHlJ,EAAaC,KAAK,6BAA6B,CAAC0N,OAAQ,SAAUxK,KAAM,OAAQK,UAAWA,IAC3F7D,EAAMmL,qBAGVuN,cAAgB,SAAA1Y,GACZ,IAAI2D,EAAK1D,EAAKC,MAAMsY,gBAChB9D,EAAa,CAACnU,EAAAC,EAAAC,cAACkY,GAAD,CAAqBhV,GAAMA,EAAI4K,IAAG,KAAAd,OAAS9J,MAC7DtD,EAAaC,KAAK,6BAA6B,CAAC0N,OAAQ,SAAUxK,KAAM,aAAcK,UAAW6Q,IAEjG1U,EAAMmL,2FAKN,OADA7L,QAAQC,IAAI,aAERgB,EAAAC,EAAAC,cAAA,OAAKgI,UAAY,kBACblI,EAAAC,EAAAC,cAAA,UAAQE,QAAWC,KAAK8X,cAAejQ,UAAY,mCAAmClI,EAAAC,EAAAC,cAAA,sBACtFF,EAAAC,EAAAC,cAAA,UAAQE,QAAWC,KAAK2X,QAAS9P,UAAY,kCAAkClI,EAAAC,EAAAC,cAAA,qBAC/EF,EAAAC,EAAAC,cAAA,UACIoM,SAA0C,WAA9BjM,KAAKxB,MAAMyE,UAAUiJ,KACjCrE,UAAY,oCACZlI,EAAAC,EAAAC,cAAA,uBAEJF,EAAAC,EAAAC,cAAA,UAAQgI,UAAY,mCAAmClI,EAAAC,EAAAC,cAAA,8BAtC/CI,IAAMC,yICF9B,IAAM8X,GAAiB5E,KAAOC,IACzB0B,MAAM,SAAAzV,GAAK,MAAI,CACZ0V,MAAO,CACCnE,KAAMvR,EAAM6V,OACZrE,IAAKxR,EAAM8V,UAJJhC,CAAH6E,KAQL,SAAA3Y,GAAK,OAAIA,EAAM4V,gBA8FfgD,8MArFX1Z,MAAQ,CACJ2Z,mBAAmB,EACnBC,OAAQ,EACRC,OAAQ,EACRC,QAAS,MACTC,QAAS,IACTrD,cAAe,WAGnBsD,cAAgB,SAACpZ,GACbC,EAAKkB,SAAS,CAAC4X,mBAAmB9Y,EAAKb,MAAM2Z,oBAC7C/Y,EAAMmL,qBAGVkO,WAAa,SAAArZ,GACT,IAAIyR,EAAOxR,EAAKqZ,WAAWjE,wBAAwB5D,KAC/CC,EAAMzR,EAAKqZ,WAAWjE,wBAAwB3D,IAClDzR,EAAKkB,SAALoB,OAAAuC,EAAA,EAAAvC,CAAA,GAAkBtC,EAAKb,MAAvB,CAA8B4Z,OAAQhZ,EAAM0X,MAAQjG,EACpDwH,OAAQjZ,EAAM2X,MAAQjG,EAAM,MAE5B1R,EAAMmL,qBAGVoO,KAAO,SAAAvZ,GACEC,EAAKb,MAAM2Z,mBACZ9Y,EAAKkB,SAALoB,OAAAuC,EAAA,EAAAvC,CAAA,GACOtC,EAAKb,MADZ,CAEI8Z,QAASlZ,EAAM0X,MAAQzX,EAAKb,MAAM4Z,OAAS,KAC3CG,QAASnZ,EAAM2X,MAAQ1X,EAAKb,MAAM6Z,OAAS,KAC3CnD,cAA8B,SAAf9V,EAAMwD,KAAkB,OAAS,WAExDxD,EAAMmL,qBAGVmO,WAAa,OACbE,YAAc,SAACzQ,GAAD,OAAU9I,EAAKqZ,WAAavQ,KAwC1C0K,mBAAqB,WACjBnU,QAAQC,IAAI,qCAGhB6B,kBAAoB,WAChB9B,QAAQC,IAAI,0GAxCZ,OADAD,QAAQC,IAAI,eAERgB,EAAAC,EAAAC,cAAC0O,EAAA,SAAD,KACEvO,KAAKV,MAAMuZ,WACTlZ,EAAAC,EAAAC,cAACmY,GAAD,CACAvP,IAAOzI,KAAK4Y,YACZ/Q,UAAY,2BACZsN,OAAUnV,KAAKxB,MAAM8Z,QACrBlD,OAAUpV,KAAKxB,MAAM+Z,QACrBrO,WAAclK,KAAKxB,MAAM2Z,kBACzBjB,YAAelX,KAAKyY,WACpB1Y,QAAWC,KAAKwY,cAChBpB,OAAYpX,KAAK2Y,KACjBtB,UAAarX,KAAK2Y,KAClBzD,cAAiBlV,KAAKxB,MAAM0W,eAExBvV,EAAAC,EAAAC,cAAC+K,EAAD,CACIV,WAAa,EACbnK,QAAWC,KAAKwY,cAChB3Q,UAAY,YACZF,KAAO,uBAEV3H,KAAKxB,MAAM2Z,kBACRxY,EAAAC,EAAAC,cAACiZ,GAAD,CACItD,aAAgBxV,KAAKV,MAAMkW,aAC3BoC,gBAAmB5X,KAAKV,MAAMsY,gBAC9B3U,UAAStB,OAAAuC,EAAA,EAAAvC,CAAA,GAAQ3B,KAAKV,MAAM2D,aAC3B,MAGX,aA3EQhD,IAAMC,eC0DjB6Y,sNA5DXva,MAAQ,CACJmF,UAAWtE,EAAKC,MAAMyD,GACtBE,UAAUtB,OAAAuC,EAAA,EAAAvC,CAAA,GAAKtC,EAAKC,MAAMwB,UAC1B0U,aAAc,QAGlBZ,UAAY,SAAApD,GACRnS,EAAKkB,SAAS,CAACiV,aAAa7T,OAAAuC,EAAA,EAAAvC,CAAA,GAAK6P,QAIrCwH,WAAa,SAAC5Z,GACV,IAAKC,EAAKC,MAAM2Z,UAAW,CACvB,IAAI9B,EAAO/X,EAAM8Z,cAAczE,wBACzBC,EAAQyC,EAAKzC,MACbC,EAASwC,EAAKxC,OACxBlV,EAAaC,KAAK,gBAAlBiC,OAAAuC,EAAA,EAAAvC,CAAA,GAAuCtC,EAAKb,MAA5C,CAAmDkW,MAAOA,EAAOC,OAAQA,SAI7EwE,OAAS,OACTC,cAAgB,SAAAjR,GAAI,OAAI9I,EAAK8Z,OAAShR,KA+BtC3H,kBAAoB,SAAApB,GAChBK,EAAagB,GAAG,iBAAkBpB,EAAKuV,cAG3ClU,qBAAuB,SAAAtB,GACnBK,EAAakB,IAAI,iBAAkBtB,EAAKuV,oFA9BxC,OAFAlW,QAAQC,IAAI,UACZD,QAAQC,IAAIqB,KAAKV,OAEbK,EAAAC,EAAAC,cAAC0O,EAAA,SAAD,KACI5O,EAAAC,EAAAC,cAAA,OAAKE,QAAWC,KAAKgZ,WAAYnR,UAAY,UACzClI,EAAAC,EAAAC,cAACkY,GAAD,CAAqBhV,GAAK,uBAAuB+Q,WAAa,QAC3D9T,KAAKV,MAAMwB,SAASuY,MAAMC,cAAmD,SAAnCtZ,KAAKV,MAAMwB,SAASuY,MAAMzW,KAC/D5C,KAAKV,MAAMwB,SAASuY,MAAMC,aAAe,MAG/CtZ,KAAKV,MAAM2Z,UAAoE,KAAxDtZ,EAAAC,EAAAC,cAAA,KAAGgI,UAAY,eAAf,wBACvB7H,KAAKxB,MAAM+a,WAUP,KATF5Z,EAAAC,EAAAC,cAAC2Z,GAAD,CACI5B,gBAAmB5X,KAAKV,MAAMsY,gBAC9BiB,WAAc7Y,KAAKV,MAAMuZ,WACzB5V,UAAStB,OAAAuC,EAAA,EAAAvC,CAAA,GAAQ3B,KAAKxB,MAAMyE,WAC5BuS,aAAgBxV,KAAKxB,MAAMgX,aAC3BiE,UAAazZ,KAAKV,MAAMwB,SAAS4Y,aACjCC,WAAc3Z,KAAKV,MAAMwB,SAAS8Y,yBAjDpC3Z,IAAMC,gBCU1B2Z,sNAWFrb,MAAQ,CACAmF,UAAWmW,SAASza,EAAKC,MAAM3B,MAAMoc,OAAOC,OAC5CC,cAAe,CACX/N,KAAM,KACNmN,MAAO,CACHnN,KAAM,KACNkB,OAAQ,KACRxK,KAAM,KACN8W,aAAc,KACdE,cAAe,KACf3W,UAAW,GACXqW,aAAc,IAElBY,MAAM,GAEVC,YAAY,EACZ9J,gBAAiB,CACbuB,mBAAmB,EACnBsB,kBAAkB,EAClB9F,OAAQ,GACRE,YAAa,MAEjBuL,YAAY,EACZI,WAAW,EACXmB,aAAa,EACbC,iBAAkB,CAACpW,QAAQ,EAAO0M,MAAO,SAGjD2J,cAAgB,SAAAlb,GACZC,EAAKkB,SAALoB,OAAAuC,EAAA,EAAAvC,CAAA,GAAkBtC,EAAKb,MAAvB,CAA8B4b,aAAa/a,EAAKb,MAAM4b,kBAG1DG,kBAAoB,SAAAnb,GAChBC,EAAKkB,SAALoB,OAAAuC,EAAA,EAAAvC,CAAA,GACOtC,EAAKb,MADZ,CAEI6b,iBAAiB1Y,OAAAuC,EAAA,EAAAvC,CAAA,GACVtC,EAAKb,MAAM6b,iBADF,CAEZpW,OAAQ7E,EAAM6E,OACdmJ,OAAQhO,EAAMgO,eAK1BoN,aAAe,SAAAC,GACNpb,EAAKb,MAAMya,YAAa5Z,EAAKb,MAAM2b,YACxC9a,EAAKkB,SAALoB,OAAAuC,EAAA,EAAAvC,CAAA,GACOtC,EAAKb,MADZ,CAEImF,UAAW8W,EAAU9W,UACrBsW,cAActY,OAAAuC,EAAA,EAAAvC,CAAA,GACP8Y,EAAUxX,UADJ,CAETyW,aAAce,EAAU/F,MACxBkF,cAAea,EAAU9F,SAE7BkE,YAAY,EACZI,WAAW,QAKnByB,eAAiB,SAAAD,GACb,IAAIE,EAActb,EAAKb,MAAM6R,gBAAgBjD,SAAWqN,EAAUrN,OAC7DwN,EAAmBvb,EAAKb,MAAM6R,gBAA9BuK,gBACDD,GAAetb,EAAKb,MAAMya,YAAc2B,GAC5Cvb,EAAKkB,SAALoB,OAAAuC,EAAA,EAAAvC,CAAA,GACOtC,EAAKb,MADZ,CAEI6R,gBAAgB1O,OAAAuC,EAAA,EAAAvC,CAAA,GACTtC,EAAKb,MAAM6R,gBADH,CAEX6C,kBAAkB,EAClB+D,cAAewD,EAAUxD,cACzB3J,YAAamN,EAAU1X,GACvBqK,OAAQqN,EAAUrN,eAK9B6D,WAAa,SAAA7R,GACTC,EAAKkB,SAALoB,OAAAuC,EAAA,EAAAvC,CAAA,GACOtC,EAAKb,MADZ,CAEI6R,gBAAgB1O,OAAAuC,EAAA,EAAAvC,CAAA,GACTtC,EAAKb,MAAM6R,gBADH,CAEXuB,mBAAmB,EACnBsB,iBAAkB9T,EAAM8R,cAKpC2J,mBAAqB,SAAAJ,GAAa,IAEzBnB,EAAgBja,EAAKb,MAAMyb,cAAcZ,MAAzCC,aACLja,EAAKkB,SAALoB,OAAAuC,EAAA,EAAAvC,CAAA,GACOtC,EAAKb,MADZ,CAEIyb,cAActY,OAAAuC,EAAA,EAAAvC,CAAA,GACPtC,EAAKb,MAAMyb,cADL,CAETZ,MAAM1X,OAAAuC,EAAA,EAAAvC,CAAA,GACCtC,EAAKb,MAAMyb,cAAcZ,MAD3B,CAEDjM,OAAQqN,EAAUrN,OAClBxK,KAAM6X,EAAU7X,KAChB0W,aAAY,GAAAzM,OAAAlL,OAAAwC,EAAA,EAAAxC,CAAM2X,GAAN3X,OAAAwC,EAAA,EAAAxC,CAAuB8Y,EAAUxX,sBAK7D6X,qBAAuB,SAAAL,GACnB/b,QAAQC,IAAI8b,GACZ,IAAIM,EAAmBpZ,OAAAuC,EAAA,EAAAvC,CAAA,GAAO8Y,EAAP,CAAkBvO,KAAM7M,EAAKb,MAAMyb,cAAc/N,OAExE7M,EAAKkB,SAALoB,OAAAuC,EAAA,EAAAvC,CAAA,GACOtC,EAAKb,MADZ,CAEIyb,cAActY,OAAAuC,EAAA,EAAAvC,CAAA,GACPtC,EAAKb,MAAMyb,cADL,CAETZ,MAAM1X,OAAAuC,EAAA,EAAAvC,CAAA,GACCtC,EAAKb,MAAMyb,cAAcZ,MAD3B,CAEDpW,UAAS,GAAA4J,OAAAlL,OAAAwC,EAAA,EAAAxC,CAAMtC,EAAKb,MAAMyb,cAAcZ,MAAMpW,WAArC,CAAgD8X,UAGlE,kBACH1b,EAAKC,MAAM0F,SAAS6K,GAAiB,CACjCxM,IAAKhE,EAAKC,MAAM8D,OAChBE,SAAS3B,OAAAwC,EAAA,EAAAxC,CAAKtC,EAAKC,MAAM0b,gBACzB/X,UAAUtB,OAAAwC,EAAA,EAAAxC,CAAKtC,EAAKb,MAAMyb,cAAcZ,MAAMpW,WAC9CU,UAAWtE,EAAKb,MAAMmF,kBA0D9BnD,kBAAoB,WAEhB,GADA9B,QAAQC,IAAI,2BACRU,EAAKC,MAAM6D,SAAW9D,EAAKC,MAAMmE,aAAepE,EAAKC,MAAMoE,kBAAmB,CAC9EhF,QAAQC,IAAI,oCACZ,IAAI2V,EAAWjV,EAAKC,MAAM0b,eAAe9K,KAAK,SAAA5L,GAAI,OAAIA,EAAKvB,KAAO1D,EAAKb,MAAMmF,YAC7EtE,EAAKC,MAAM0F,SAASlC,EAAyB,CACzCC,GAAIuR,EAAQvR,GACZC,YAAasR,EAAQ1R,KACrBK,UAAUtB,OAAAwC,EAAA,EAAAxC,CAAK2S,EAAQrR,cAG/BxD,EAAagB,GAAG,6BAA8BpB,EAAKwb,oBACnDpb,EAAagB,GAAG,4BAA6BpB,EAAKyb,sBAClDrb,EAAagB,GAAG,kBAAmBpB,EAAK4R,YACxCxR,EAAagB,GAAG,qBAAsBpB,EAAKib,eAC3C7a,EAAagB,GAAG,uBAAwBpB,EAAKqb,gBAC7Cjb,EAAagB,GAAG,iBAAkBpB,EAAKkb,mBACvC9a,EAAagB,GAAG,gBAAiBpB,EAAKmb,iBAG1C9Z,qBAAuB,WACnBhC,QAAQC,IAAI,wBACRU,EAAKC,MAAM6D,QAAS9D,EAAKC,MAAM0F,SAASrC,GAAkB,IAC9DlD,EAAakB,IAAI,6BAA8BtB,EAAKwb,oBACpDpb,EAAakB,IAAI,4BAA6BtB,EAAKyb,sBACnDrb,EAAakB,IAAI,qBAAsBtB,EAAKib,eAC5C7a,EAAakB,IAAI,kBAAmBtB,EAAK4R,YACzCxR,EAAakB,IAAI,uBAAwBtB,EAAKqb,gBAC9Cjb,EAAakB,IAAI,iBAAkBtB,EAAKkb,mBACxC9a,EAAakB,IAAI,gBAAiBtB,EAAKmb,uFAjFvC9b,QAAQC,IAAI,gBACZ,IAAIuU,EAAmBlT,KAAKxB,MAAM6R,gBAAgB6C,iBAClD,OAAIlT,KAAKV,MAAM6D,QAAUnD,KAAKV,MAAMmE,aAChC/E,QAAQC,IAAI,SAEJgB,EAAAC,EAAAC,cAAC0O,EAAA,SAAD,CAAUZ,IAAM,SACZ3N,KAAKxB,MAAM6b,iBAAiBpW,OAC5BtE,EAAAC,EAAAC,cAACob,GAAD,CAAatN,IAAM,cAAchG,KAAQ3H,KAAKxB,MAAM6b,iBAAiBjN,SAAa,KAErFpN,KAAKxB,MAAM4b,YACRza,EAAAC,EAAAC,cAAC2P,GAAD,CACIlC,YAAetN,KAAKxB,MAAM6R,gBAAgB/C,YAC1CK,IAAM,cAAcnC,SAAW,WAAc,KAEnD0H,EACEvT,EAAAC,EAAAC,cAACqb,GAAD,CACIvN,IAAM,mBACNsM,cAAatY,OAAAuC,EAAA,EAAAvC,CAAA,GAAS3B,KAAKxB,MAAMyb,eACjC5J,gBAAe1O,OAAAuC,EAAA,EAAAvC,CAAA,GAAQ3B,KAAKxB,MAAM6R,mBAEpC,KAEF1Q,EAAAC,EAAAC,cAAC0P,GAAD,CAAQ5B,IAAM,SAAShF,MAAQ,gBAC/BhJ,EAAAC,EAAAC,cAACsb,GAAD,CACQxN,IAAM,cACNsL,UAAajZ,KAAKxB,MAAMya,UACxBrB,gBAAmB5X,KAAKxB,MAAMyb,cAAcZ,MAAMC,aAAavV,OAC/D8U,WAAc7Y,KAAKxB,MAAMqa,WACzB9V,GAAM/C,KAAKxB,MAAMmF,WALzBhC,OAAAuC,EAAA,EAAAvC,CAAA,GAOS3B,KAAKxB,MAAMyb,cAPpB,CAOmC/N,KAAM,cAI7ClM,KAAKV,MAAMuC,SAASwN,iBACpB1P,EAAAC,EAAAC,cAAC2H,EAAD,CAASmG,IAAM,SAAShG,KAAO,mBAAmB/E,KAAO,WADjBlE,QAAQC,IAAI,YAAoBgB,EAAAC,EAAAC,cAAC0J,EAAA,EAAD,CAAUC,GAAK,kDAIpF4R,EAAWC,GAAW,IAAAC,EAAAtb,KAErC,GADAtB,QAAQC,IAAI,sBACRyc,EAAU3X,cAAgBzD,KAAKV,MAAMmE,aAAezD,KAAKV,MAAMoE,kBAAmB,CAClFhF,QAAQC,IAAI,qCACZ,IAAI2V,EAAWtU,KAAKV,MAAM0b,eAAe9K,KAAK,SAAA5L,GAAI,OAAIA,EAAKvB,KAAOuY,EAAK9c,MAAMmF,YAC7E3D,KAAKV,MAAM0F,SAASlC,EAAyB,CACzCC,GAAIuR,EAAQvR,GACZC,YAAasR,EAAQ1R,KACrBK,UAAUtB,OAAAwC,EAAA,EAAAxC,CAAK2S,EAAQrR,sBAvLnBhD,IAAMC,gBAyOXyJ,eAXS,SAACnL,GAGrB,OADAE,QAAQC,IAAI,kBAAoBH,GACzBmD,OAAAuC,EAAA,EAAAvC,CAAA,GACAnD,EAAMqF,QADb,CAEIV,OAAQ3E,EAAM4F,QAAQjB,OACtBC,OAAQ5E,EAAM4F,QAAQhB,OACtB4X,eAAgBxc,EAAM4F,QAAQd,YAIvBqG,CAAyBtC,EAAawS,KC5O/C0B,8MAQF/c,MAAQ,CACJqD,SAAUxC,EAAKC,MAAMuC,SACrB2Z,mBAAmB,sFAGJ,IAAAF,EAAAtb,KAEfA,KAAKV,MAAMuC,SAASC,KAAK2Z,mBAAmB,SAACtV,GzBhBtB,IAAC9C,EyBkBfiY,EAAK9c,MAAMgd,oBACRrV,IAAMzH,QAAQC,IAAI,QAAS2c,EAAKhc,MAAM0F,UzBnB1B3B,EyBmB0D8C,EAAK9C,IzBnBhE,eAAAqY,EAAA/Z,OAAA2D,EAAA,EAAA3D,CAAA4D,EAAA3F,EAAA4F,KAAS,SAAAmW,EAAO3W,EAASF,EAAhB8W,GAAA,IAAA/Z,EAAA,OAAA0D,EAAA3F,EAAA+F,KAAA,SAAAkW,GAAA,cAAAA,EAAAhW,KAAAgW,EAAA/V,MAAA,cAA2BjE,EAA3B+Z,EAA2B/Z,SAA3Bga,EAAA/V,KAAA,EAC1BjE,EAASE,GAAGkE,WAAW,SAASC,IAAI7C,GAAK+C,MAC9ClI,KAAK,SAAAmI,GACF,IAAIF,EAAOE,EAAQC,OACnBtB,EAAS9B,EAAe,CAACG,IAAKA,EAAKC,SAAS3B,OAAAwC,EAAA,EAAAxC,CAAKwE,EAAK7C,eAEzDxE,MAAM,SAACC,GACJL,QAAQK,MAAMA,EAAMwH,SACpBvB,EAASzB,EAAYxE,EAAMwH,YARC,wBAAAsV,EAAArV,SAAAmV,MAAT,gBAAAG,EAAAC,EAAAC,GAAA,OAAAN,EAAA9U,MAAA5G,KAAA8D,YAAA,MyBoBfwX,EAAK/a,SAALoB,OAAAuC,EAAA,EAAAvC,CAAA,GAAkB2Z,EAAK9c,MAAvB,CAA8Bgd,mBAAmB,yCAMrD,IAAAS,EAAAjc,KACCkc,EAAkBlc,KAAKxB,MAAvB0d,eAEL,OADAxd,QAAQC,IAAIud,GACRlc,KAAKxB,MAAMgd,mBACX9c,QAAQC,IAAI,OAERgB,EAAAC,EAAAC,cAAC0J,EAAA,EAAD,KACI5J,EAAAC,EAAAC,cAAC0J,EAAA,EAAD,CACI5B,KAAQ1G,eAAyBib,EAAiB,IAAKC,OAAK,EAC5DC,OAAU,SAAC9c,GAAD,OAAWK,EAAAC,EAAAC,cAACwc,EAAU/c,MAEpCK,EAAAC,EAAAC,cAAC0J,EAAA,EAAD,CAAO5B,KAAO,YAAYwU,OAAK,EAAClZ,UAAakM,KAC7CxP,EAAAC,EAAAC,cAAC0J,EAAA,EAAD,CACI5B,KAAQ1G,eAAyBib,EAAiB,iBAClDE,OAAU,SAAC9c,GAAD,OAAWK,EAAAC,EAAAC,cAACyc,GAAD3a,OAAA4F,OAAA,GAAWjI,EAAX,CAAkBxB,OAAUme,EAAK3c,MAAMxB,aAEhE6B,EAAAC,EAAAC,cAAC0J,EAAA,EAAD,CAAO5B,KAAQ1G,eAAyBib,EAAiB,wBAAyBjZ,UAAa4W,KAC/Fla,EAAAC,EAAAC,cAAC0J,EAAA,EAAD,CAAO5B,KAAQ1G,eAAyBib,EAAiB,IAAKjZ,UAAayF,IAC3E/I,EAAAC,EAAAC,cAAC0J,EAAA,EAAD,CAAO5B,KAAQ1G,eAAyBib,EAAiB,aAAcjZ,UAAa/D,MAIlFS,EAAAC,EAAAC,cAAC2H,EAAD,CAAQG,KAAQ1G,+BAA6C2B,KAAO,uBA/CxE3C,IAAMC,eAyDTyJ,iBAAUtC,EAAakU,KC/DhCzd,WAAS2D,EAAQ,KAEvB8a,IAASH,OACDzc,EAAAC,EAAAC,cAAC2c,EAAA,EAAD,KACI7c,EAAAC,EAAAC,cAAC4c,EAAD,KACI9c,EAAAC,EAAAC,cAAC6c,EAAA,EAAD,CAAUxX,MAASA,GACfvF,EAAAC,EAAAC,cAAC8c,GAAD,CAAK7e,OAAUA,QAI3B8e,SAASC,eAAe,SrCAzB,SAAkB/e,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAI+e,IAAI7b,eAAwBzD,OAAOC,SAASsf,MACpDC,SAAWxf,OAAOC,SAASuf,OAIvC,OAGFxf,OAAOyf,iBAAiB,OAAQ,WAC9B,IAAMpf,EAAK,GAAAgP,OAAM5L,eAAN,sBAEP3D,GAgEV,SAAiCO,EAAOC,GAEtCof,MAAMrf,GACHK,KAAK,SAAA8H,GAEJ,IAAMmX,EAAcnX,EAASoX,QAAQhX,IAAI,gBAEnB,MAApBJ,EAASqX,QACO,MAAfF,IAA8D,IAAvCA,EAAYG,QAAQ,cAG5Cvf,UAAUC,cAAcuf,MAAMrf,KAAK,SAAAC,GACjCA,EAAaqf,aAAatf,KAAK,WAC7BV,OAAOC,SAASggB,aAKpB7f,EAAgBC,EAAOC,KAG1BgB,MAAM,WACLJ,QAAQC,IACN,mEArFA+e,CAAwB7f,EAAOC,GAI/BC,UAAUC,cAAcuf,MAAMrf,KAAK,WACjCQ,QAAQC,IACN,gHAMJf,EAAgBC,EAAOC,MqCzB/BE","file":"static/js/main.ac84c929.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {EventEmitter} from 'events';\r\nconst stream = new EventEmitter();\r\nexport default stream;","import React from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport eventEmitter from '../../EventEmitter';\r\n\r\nimport './errorPage.scss';\r\n\r\n\r\nclass ErrorPage extends React.PureComponent {\r\n\r\n    update = event => {\r\n        this.props.history.push('/');\r\n        eventEmitter.emit('EventErrorCatchUpdate');\r\n    }\r\n\r\n    render(){\r\n        console.log('error');\r\n        return (\r\n        <div class = 'container'>\r\n            <div class = 'flex-column'>\r\n                <h1>Application crash</h1>\r\n                <button onClick = {this.update}>Update</button>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(ErrorPage);","\r\n\r\nimport React from 'react';\r\nimport eventEmitter from '../../EventEmitter';\r\nimport ErrorPage from './ErrorPage';\r\nclass ErrorBoundary extends React.PureComponent {\r\n\r\n      state = { \r\n        hasError: false,\r\n      };\r\n\r\n    static getDerivedStateFromError(error) {\r\n        console.log(error);\r\n      // Обновить состояние с тем, чтобы следующий рендер показал запасной UI.\r\n      return { hasError: true};\r\n    }\r\n\r\n    updateApplication = event => {\r\n      this.setState({hasError: false});\r\n    };\r\n  \r\n    componentDidCatch(error, info) {\r\n      // Можно также сохранить информацию об ошибке в соответствующую службу журнала ошибок\r\n     console.error(error + \",\" + info);\r\n    }\r\n  \r\n    render() {\r\n      if (this.state.hasError) return <ErrorPage />\r\n      return this.props.children;\r\n    }\r\n\r\n    componentDidMount = () => {\r\n      eventEmitter.on('EventErrorCatchUpdate',this.updateApplication);\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n      eventEmitter.off('EventErrorCatchUpdate',this.updateApplication);\r\n    }\r\n  }\r\n\r\n  export default ErrorBoundary;","// setings in root folder / firebase.env\r\nconsole.log('config');\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n    databaseURL: process.env.REACT_APP_DATABASE_URL,\r\n    projectId: process.env.REACT_APP_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n    appId: process.env.REACT_APP_APPID\r\n};\r\n\r\nexport {firebaseConfig}","import * as firebase from 'firebase/app';\r\nimport {firebaseConfig} from './firebaseConfig';\r\n\r\nconst auth = require('firebase/auth');\r\nconst firestore = require('firebase/firestore');\r\n\r\nclass Firebase {\r\n\r\n        constructor(){\r\n                console.log('init firebase');\r\n                firebase.initializeApp(firebaseConfig);\r\n                this.auth = firebase.auth();\r\n                this.db = firebase.firestore();\r\n        }\r\n\r\n        saveSession(rules){\r\n                return this.auth.setPersistence(firebase.auth.Auth.Persistence[rules]);\r\n        }\r\n\r\n        login(email, password){\r\n                return this.auth.signInWithEmailAndPassword(email, password);\r\n        }\r\n\r\n        registration(email, password){\r\n                return this.auth.createUserWithEmailAndPassword(email, password)\r\n        }\r\n\r\n        signOut(){\r\n                return this.auth.signOut()\r\n        }\r\n\r\n        getCurrentUser() {\r\n                return this.auth.currentUser\r\n        }\r\n}\r\n\r\nlet interfaceFirebase = new Firebase();\r\ninterfaceFirebase.saveSession('SESSION');\r\n\r\nexport default interfaceFirebase;\r\n\r\nexport { auth, firestore };\r\n\r\n","const CREATE_PROJECT = 'CREATE_PROJECT';\r\nconst LOAD_UPDATE_PROJECT = \"LOAD_UPDATE_PROJECT\";\r\nconst LOAD_CURRENT = 'LOAD_CURRENT';\r\nconst LOG_OUT_CABINET = 'LOG_OUT_CABINET';\r\nconst LOAD_USER_CABINET = 'LOAD_USER_CABINET';\r\nconst ERROR_CABINET = 'ERROR_CABINET';\r\nconst EXIT_PROJECT = 'EXIT_PROJECT';\r\n\r\nconst createProjectAction = (state) => {\r\n    return {\r\n        type: CREATE_PROJECT,\r\n        projects: state,\r\n    }\r\n}\r\n\r\nconst exitProjectAction = (state) => {\r\n    return {\r\n        type: EXIT_PROJECT,\r\n        exit: state\r\n    }\r\n}\r\n\r\nconst loadCurrentProjectAction = (state) => {\r\n    return {\r\n        type: LOAD_CURRENT,\r\n        id: state.id,\r\n        typeProject: state.typeProject,\r\n        component: state.component\r\n    }\r\n}\r\n\r\nconst loadUpdateCurrentProject = (state) => {\r\n    return {\r\n        type: LOAD_UPDATE_PROJECT,\r\n        idProject: state.idProject,\r\n        component: state.component\r\n    }\r\n}\r\n\r\nconst loadUserAction = (state) => {\r\n    return {\r\n        type: LOAD_USER_CABINET,\r\n        active: true,\r\n        idUser: state.uid,\r\n        error: '',\r\n        projects: state.projects\r\n    }\r\n}\r\n\r\nconst logOutAction = (state) => {\r\n\r\n    return {\r\n        type: LOG_OUT_CABINET,\r\n        active: false,\r\n        idUser: null,\r\n        error: '',\r\n        projects: []\r\n    }\r\n}\r\n\r\nconst errorAction = (state) => {\r\n    return {\r\n        type: ERROR_CABINET,\r\n        error: state\r\n    }\r\n}\r\n\r\nexport {\r\n    CREATE_PROJECT, createProjectAction, /* cabinet */\r\n    LOAD_USER_CABINET, loadUserAction, /* cabinet */\r\n    LOG_OUT_CABINET, logOutAction, /* cabinet */\r\n    LOAD_CURRENT, loadCurrentProjectAction, /* builder */\r\n    LOAD_UPDATE_PROJECT, loadUpdateCurrentProject,\r\n    EXIT_PROJECT, exitProjectAction,\r\n    ERROR_CABINET, errorAction, /* both */\r\n}","import {LOAD_CURRENT,LOAD_UPDATE_PROJECT, EXIT_PROJECT} from './actions';\r\n\r\nconst initialState = {\r\n    loadProject: false,\r\n    haveUpdateLoading: true,\r\n    idProject: null,\r\n    typeProject: null,\r\n    component: []\r\n};\r\nexport default (state = initialState, action) => {\r\n    switch (action.type){\r\n\r\n        case LOAD_CURRENT: {\r\n            return {\r\n                ...state,\r\n                haveUpdateLoading: state.haveUpdateLoading ? false : true,\r\n                loadProject: true,\r\n                idProject: action.id,\r\n                typeProject: action.typeProject,\r\n                component: [...action.component]\r\n            }\r\n        }\r\n\r\n        case LOAD_UPDATE_PROJECT: {\r\n            return {\r\n                ...state,\r\n                haveUpdateLoading: false,\r\n                component: [...action.component]\r\n            }\r\n        }\r\n\r\n        case EXIT_PROJECT: {\r\n            if (action.exit)\r\n            return {\r\n                ...state,\r\n                haveUpdateLoading: true,\r\n                loadProject: false,\r\n                idProject: null,\r\n                typeProject: null,\r\n                component: []\r\n            }\r\n            else return state;\r\n        }\r\n        default: return state;\r\n    }\r\n};","import {LOAD_USER_CABINET, LOG_OUT_CABINET, ERROR_CABINET, CREATE_PROJECT, LOAD_UPDATE_PROJECT} from './actions';\r\n\r\nconst initialState = {\r\n    active: false,\r\n    idUser: null,\r\n    projects: [],\r\n    error: null,\r\n    //dateConnect: new Date(Date.now()).toLocaleString().replace(/\\s/ig,'').split(','),\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case LOAD_USER_CABINET: {\r\n\r\n            return {\r\n                ...state,\r\n                active: action.active,\r\n                idUser: action.idUser,\r\n                projects: [...action.projects]\r\n            }\r\n        }\r\n\r\n        case CREATE_PROJECT: {\r\n            return {\r\n                ...state,\r\n                projects: [...action.projects]\r\n            }\r\n        }\r\n\r\n        case LOAD_UPDATE_PROJECT: {\r\n            return {\r\n                ...state,\r\n                projects: state.projects.map(item => {\r\n                    if (item.id === action.idProject)\r\n                        item.component = [...action.component]\r\n                return item;\r\n                })\r\n            }\r\n        }\r\n\r\n        case LOG_OUT_CABINET: {\r\n            return {\r\n                ...state,\r\n                active: false,\r\n                idUser: null,\r\n                projects: []\r\n            }\r\n        }\r\n\r\n        case ERROR_CABINET: {\r\n            return {\r\n                ...state,\r\n                error: action.error\r\n            }\r\n        }\r\n        default: return state;\r\n    }\r\n}\r\n\r\n","import {combineReducers} from 'redux';\r\nimport reducerBuilder from './reducerBuilder';\r\nimport reducerCabinet from './reducerCabinet';\r\n\r\nexport default combineReducers({\r\n    builder: reducerBuilder,\r\n    cabinet: reducerCabinet,\r\n});","import {createStore, applyMiddleware, compose} from 'redux';\r\nimport firebase from  '../Firebase/Firebase';\r\nimport reduxCatch from 'redux-catch';\r\nimport thunk from 'redux-thunk';\r\nimport combineReducers from './reducers';\r\n\r\nconst composeEnhancers =\r\n  typeof window === 'object' &&\r\n  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?\r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\r\n    }) : compose;\r\n\r\n    function errorHandler(error, getState, lastAction, dispatch) {\r\n      console.error(error);\r\n      console.debug('current state', getState());\r\n      console.debug('last action was', lastAction);\r\n      // optionally dispatch an action due to the error using the dispatch parameter\r\n    }\r\n\r\nconst middleware = composeEnhancers(\r\n  applyMiddleware(thunk.withExtraArgument({firebase})),\r\n  applyMiddleware(reduxCatch(errorHandler))\r\n);\r\nconst store = createStore(combineReducers, middleware);\r\n\r\n\r\nexport default store;","import {loadUserAction, errorAction, logOutAction} from '../actions';\r\n\r\nconst middlewareLogin = (email,password) => async (dispatch,getState, {firebase}) => {\r\n        await firebase.login(email,password)\r\n        .then(response =>{\r\n            firebase.db.collection(\"users\").doc(response.user.uid).get()\r\n            .then(docUser => {\r\n                let user = docUser.data();\r\n                dispatch(loadUserAction({uid: docUser.id, projects: [...user.projects]}))\r\n            })\r\n        })\r\n        .catch((error) => {\r\n            console.error(error.message);\r\n            dispatch(errorAction(error.message));\r\n        });\r\n    }\r\n\r\nconst middlewareLoadUserData = (uid) => async (dispatch,getState, {firebase}) => {\r\n        await firebase.db.collection(\"users\").doc(uid).get()\r\n        .then(docUser => {\r\n            let user = docUser.data();\r\n            dispatch(loadUserAction({uid: uid, projects: [...user.projects]}))\r\n        })\r\n        .catch((error) => {\r\n            console.error(error.message);\r\n            dispatch(errorAction(error.message));\r\n        });\r\n    }\r\n\r\nconst middlewareLogOutUser = (uid) => async (dispatch,getState, {firebase}) => {\r\n    await firebase.signOut()\r\n    .then (response => {\r\n        dispatch(logOutAction());\r\n    })\r\n    .catch((error) => {\r\n        console.error(error.message);\r\n        dispatch(errorAction(error.message));\r\n    });\r\n}\r\nexport {\r\n    middlewareLogin,middlewareLoadUserData, middlewareLogOutUser\r\n}","import React from 'react';\r\nimport firebase from '../Firebase/Firebase';\r\n\r\nconst withFirebase = Component => props => (\r\n    <Component firebase = {firebase} {...props} />\r\n);\r\n\r\nexport default withFirebase;","import React,{useState} from 'react';\r\n\r\nexport default function(props) {\r\n    const [path] = useState(props.path);\r\n    return (\r\n            <div className = 'loaderBox'>\r\n                <img className = 'loader' src = {path} alt = 'loader'></img> \r\n                <p>Loading {props.type}</p>\r\n            </div>\r\n    )\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport eventEmitter from '../../EventEmitter';\r\nimport './registration.scss';\r\n\r\nimport withFirebase from '../../components/firebaseHOC';\r\n\r\n\r\nclass Registration extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        firebase: PropTypes.object.isRequired,\r\n    }\r\n\r\n    state = {\r\n        firebase: this.props.firebase,\r\n        error: null,\r\n    }\r\n\r\n    emailRef = null;\r\n    passwordRef = null;\r\n\r\n    setRefEmail = (node) => this.emailRef = node;\r\n    setRefPassword = (node) => this.passwordRef = node;\r\n\r\n    createUser = (event) => {\r\n\r\n        const email = this.emailRef.value;\r\n        const password = this.passwordRef.value;\r\n        const { firebase } = this.props;\r\n\r\n        firebase.registration(email, password)\r\n        .then(response => {\r\n            firebase.db.collection(\"users\").doc(response.user.uid).set({\r\n                'projects': [],\r\n                'email': email,\r\n            }).then(() => eventEmitter.emit('EventRegistrationCorrect', response))\r\n        })\r\n        .catch((error) => {\r\n        console.error(error.message);\r\n        this.setState({error: error.message});\r\n        });\r\n    };\r\n\r\n    render(){\r\n        let  { error } = this.state;\r\n\r\n        return (\r\n            <div className = 'RegistrationBox'>\r\n                <div  className = 'RegistrationForm'>\r\n                    <h3>Registration</h3>\r\n                    <form autoComplete = 'off' className = 'RegForm'>\r\n                        { error ?\r\n                            <p className = 'error'>{error}</p>\r\n                            : null\r\n                        }\r\n                        <span>E-mail</span>\r\n                        <input ref = {this.setRefEmail} type = 'text' />\r\n                        <span>Password</span>\r\n                        <input  autoComplete = \"off\" ref = {this.setRefPassword} type = 'password' />\r\n                        <input onClick = {this.createUser}\r\n                                className = 'loginButton'\r\n                                type = 'button'\r\n                                value = 'registration'\r\n                        />\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\nexport default withFirebase(Registration);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport eventEmitter from '../../EventEmitter';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nimport {middlewareLogin} from '../../redux/middleware/loadUserMiddleware';\r\n\r\nimport Loader from '../../components/loading/Loader';\r\nimport Registration from '../../components/Registration/Registration';\r\n\r\nimport {connect} from 'react-redux';\r\n\r\nimport './index.scss';\r\n\r\nclass Index extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        config: PropTypes.object,\r\n    }\r\n\r\n    state = {\r\n        title:  \"Constructor\",\r\n        registrationActive: false,\r\n        regStatus: false,\r\n        wrongEnter: false,\r\n        error: ''\r\n    }\r\n\r\n    statusRegistration = (event) => {\r\n        event.additionalUserInfo.isNewUser ?\r\n        this.setState({...this.state,\r\n                        regStatus: true,\r\n                        registrationActive: false,\r\n                        error: 'Account create!'\r\n                    })\r\n        : console.error('error registration');\r\n    }\r\n\r\n    showBox = (event) => {\r\n        this.setState ({\r\n            ...this.state,\r\n        registrationActive: this.state.registrationActive ? false : true\r\n        })\r\n    }\r\n\r\n    authTo = (event) => {\r\n            this.props.dispatch(middlewareLogin(this.emailImput.value, this.passwordImput.value));\r\n}\r\n    emailImput = null;\r\n    passwordImput = null;\r\n    emailRef = (node) => this.emailImput = node;\r\n    passwordRef = (node) => this.passwordImput = node;\r\n\r\n    render(){\r\n        console.log('index render');\r\n        if (this.props.active) return <Redirect to = '/Cabinet' />\r\n        else if (!this.props.active) {\r\n            let currentSelected = this.state.registrationActive;\r\n            return (\r\n                <div className = 'LoginPage flex-column'>\r\n                        <h1>{this.state.title}</h1>\r\n                        <div className = 'LoginBox'>\r\n                            <div className = 'LoginForm'>\r\n                                <h3>Connect form</h3>\r\n                                {\r\n                                    this.props.wrongEnter || this.state.regStatus ?\r\n                                    <p className = 'error'>{this.props.wrongEnter}</p>\r\n                                    : null\r\n                                }\r\n                                <p>E-mail</p>\r\n                                <input ref = {this.emailRef} type = 'text' />\r\n                                <p>Password</p>\r\n                                <input ref = {this.passwordRef} type = 'password' />\r\n                                <input \r\n                                    onClick = {this.authTo} \r\n                                    className = 'loginButton'\r\n                                    type = 'button'\r\n                                    value = 'enter' />\r\n                                <input\r\n                                    onClick = {this.showBox}\r\n                                    className = {currentSelected ? `loginButton selected`\r\n                                        : 'loginButton'}\r\n                                    type = 'button'\r\n                                    value = 'registration'\r\n                                    />\r\n                            </div>\r\n                        </div>\r\n                        {\r\n                            this.state.registrationActive ?\r\n                            <Registration auth = {this.props.auth} />\r\n                            : null\r\n                        }\r\n                </div>\r\n            )\r\n        } else  return <Loader path = '/img/loading.gif' type = 'session' />\r\n    }\r\n\r\n    componentDidMount = (e) => {\r\n        eventEmitter.on('EventRegistrationCorrect', this.statusRegistration);\r\n    }\r\n    componentWillUnmount = (e) => {\r\n        eventEmitter.off('EventRegistrationCorrect', this.statusRegistration);\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        active: state.cabinet.active, \r\n        wrongEnter: state.cabinet.error\r\n    }\r\n  }\r\n\r\nexport default connect(mapStateToProps)(Index);","\r\nimport {errorAction, loadUserAction} from '../actions';\r\n\r\nconst middlewareDelete = item => async (dispatch,getState, {firebase}) => {\r\n    console.log('middleware');\r\n    await firebase.db.collection('users').doc(item.uid).get()\r\n    .then(user => user.data())\r\n    .then(data => {\r\n        return {id: data.id, projects: data.projects.filter(itemdb => itemdb.id !== item.id)};\r\n    })\r\n    .then(data => {\r\n        firebase.db.collection(\"users\").doc(item.uid).update({\r\n            \"projects\": data.projects\r\n        })\r\n        .then(response => {\r\n            dispatch(loadUserAction({uid: data.id, projects: data.projects}));\r\n        });\r\n    })\r\n    .catch((error) => {\r\n        console.error(error.message);\r\n        dispatch(errorAction(error.message));\r\n    });\r\n}\r\n\r\nexport default middlewareDelete;\r\n","import React, {useState} from 'react';\r\n\r\n\r\nfunction Icon(props){\r\n    const [path] = useState(props.path);\r\n    const [className] = useState(props.className ? props.className : null);\r\n    const [draggable] = useState(props.draggable ? true : false);\r\n\r\n    return (\r\n    <img\r\n        draggable = {draggable}\r\n        onClick = {props.onClick ? props.onClick : null}\r\n        className = {className}\r\n        title = {props.title ? props.title : null}\r\n        src = {process.env.PUBLIC_URL + path } alt = 'icon'>\r\n    </img>\r\n    )\r\n}\r\n\r\nexport default Icon;","import React from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport './header.scss';\r\n\r\nimport {middlewareLogOutUser} from '../../redux/middleware/loadUserMiddleware';\r\nimport {connect} from 'react-redux';\r\nimport {withRouter} from 'react-router-dom';\r\n\r\nimport eventEmitter from '../../EventEmitter.js';\r\nimport Icon from '../Icon/icon';\r\n\r\n\r\nconst iconPath = require('../../config.json').CabinetIcon;\r\n\r\nclass Header extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        title: PropTypes.string.isRequired,\r\n    };\r\n\r\n    state = {\r\n        title: this.props.title,\r\n    };\r\n\r\n    logOut = event => {\r\n        this.props.dispatch(middlewareLogOutUser(this.props.idUser));\r\n        event.stopPropagation();\r\n    };\r\n\r\n    redirect = event => {\r\n        if (this.props.location.pathname !== '/Cabinet/About')\r\n            this.props.history.push('/Cabinet/About');\r\n        event.stopPropagation()\r\n    };\r\n\r\n    redirectCabinet = event => {\r\n        if (this.props.location.pathname !== '/Cabinet')\r\n                this.props.history.push('/Cabinet');\r\n        event.stopPropagation()\r\n    }\r\n\r\n    add = (e) => {\r\n        eventEmitter.emit('EventChangeWorkMode',{action: 'newProject'});\r\n    };\r\n\r\n    render(){\r\n        return (\r\n            <header>\r\n                <div className = 'container'>\r\n                    <div className = 'flex-row'>\r\n                            <div className = 'header__CabinetInfo'>\r\n                                <Icon path = {iconPath} />\r\n                                <h3 className = 'tilteApp' onClick = {this.redirectCabinet}>{this.state.title}</h3>\r\n                            </div>\r\n                            {this.props.location.pathname === '/Cabinet' ?\r\n                                <div onClick = {this.add} className = 'header__newProject__AddButton'>\r\n                                    <Icon path = '/img/plus.png' />\r\n                                </div>\r\n                                : null\r\n                            }\r\n                                <div  className = 'Navigator'>\r\n                                    <Icon onClick = {this.redirect} title = 'about' path = '/img/about_logo.svg' />\r\n                                    <Icon onClick = {this.logOut} title = 'logOut' path = '/img/logOut.svg' />\r\n                                </div>\r\n                    </div>\r\n               </div>\r\n            </header>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect()(withRouter(Header));","import React, {useState} from 'react';\r\nimport eventEmitter from '../../EventEmitter';\r\n\r\nconst ImageItem = props => {\r\n\r\n    const [id] = useState(props.id);\r\n    const [urlRegular] = useState(props.urls.regular);\r\n    const [urlFull] = useState(props.urls.full);\r\n    const [isFull] = useState(props.isFull);\r\n\r\n    const showImageMenu = event => {\r\n       eventEmitter.emit(\"EventShowMenuImage\", {id: id, url: urlRegular, urlFull: urlFull});\r\n    }\r\n\r\n\r\n    return (\r\n        <div className = {props.selected ? 'ItemBox selected' : 'ItemBox'}>\r\n            <img\r\n                onClick = {showImageMenu}\r\n                src = {isFull ? urlFull : urlRegular}\r\n                alt = 'item'\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ImageItem;","import React,{Fragment} from 'react';\r\nimport isFetch from 'isomorphic-fetch';\r\nimport PropTypes from 'prop-types';\r\nimport eventEmitter from '../../EventEmitter.js';\r\n\r\nimport ImageItem from '../imageViewer/imageItem';\r\nimport Icon from '../Icon/icon';\r\n\r\nimport './modal.scss';\r\n\r\nclass ModalWindow extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        workMode: PropTypes.string.isRequired,\r\n        idComponent: PropTypes.string || PropTypes.number\r\n    }\r\n\r\n    state = {\r\n        workMode: this.props.workMode,\r\n        images: {\r\n            buttonSearchDisabled: false,\r\n            selectedItem: null, \r\n            showUrl: null, \r\n            images: null,\r\n            urlFull: null,\r\n            imageBoxView: false, \r\n            error: ''\r\n        },\r\n        newProject: {\r\n            validateName: false,\r\n            validateType: false,\r\n            disabled: true,\r\n            name: '',\r\n            type: 'empty'\r\n        },\r\n        imageMenuActive: false,\r\n        warning: {\r\n            lengthMax: 'Max length: 20 symbols',\r\n            lengthMin: 'Min length: 4 symbol',\r\n            type: 'Select type of webpage',\r\n        }\r\n    }\r\n\r\n    inputSearch = null;\r\n    inputSelect = null;\r\n\r\n    searchBackground = event => {\r\n\r\n        const api = 'https://api.unsplash.com/search/photos/?page=1&per_page=40&query=';\r\n        const search = this.inputSearch.value;\r\n\r\n        this.setState({...this.state, images: {...this.state.inages, buttonSearchDisabled: true}})\r\n\r\n        isFetch(`${api + search}&client_id=${process.env.REACT_APP_UNSPLASH_TOKEN}`)\r\n        .then(response => {\r\n            if (response.ok) return response.json();\r\n            else throw new Error('request invalid');\r\n        })\r\n        .then(response => {\r\n\r\n            let {results} = response;\r\n            if (results.length)\r\n            this.setState({\r\n                ...this.state,\r\n                images: {\r\n                    ...this.state.images,\r\n                    imageBoxView: true,\r\n                    error: '',\r\n                    images: [...results],\r\n                    buttonSearchDisabled: false\r\n                },\r\n            });\r\n            else throw new Error('Photos not found');\r\n        })\r\n        .catch(error => {\r\n            console.error(error.message);\r\n            this.setState({\r\n                ...this.state,\r\n                images: {...this.state.images, error: error.message},\r\n                imageBoxView: false,\r\n                buttonSearchDisabled: false\r\n            });\r\n        });\r\n    }\r\n\r\n    showMenuImage = event => {\r\n        this.setState({\r\n            ...this.state, \r\n            imageMenuActive: true,\r\n            images: {\r\n                ...this.state.images,\r\n                selectedItem: event.id, \r\n                showUrl: event.url,\r\n                urlFull: event.urlFull\r\n\r\n            }\r\n        });\r\n    }\r\n\r\n    showImage = event => {\r\n\r\n        const {showUrl} = this.state.images;\r\n        eventEmitter.emit(\"EventImageView\", {action: true, target: showUrl ? showUrl : null});\r\n        event.stopPropagation();\r\n    }\r\n\r\n    setSelectedImage = event => {\r\n\r\n        let images = {...this.state.images};\r\n        eventEmitter.emit(`EventSetBackgroundImage${this.props.idComponent}`,images);\r\n        eventEmitter.emit(`EventSetBImageInstumentPanel`,images);\r\n        event.stopPropagation();\r\n    };\r\n\r\n    makeImageResultBox = (items) => {\r\n        if (!items) return null;\r\n        console.log('item');\r\n        return items.map((item,i) =>{\r\n           return <ImageItem \r\n                key = {`item${i}`} \r\n                id = {i}\r\n                selected = {this.state.images.selectedItem === i ? true : false} \r\n                isFull = {false}\r\n                urls = {{...item.urls}} \r\n            />\r\n        });\r\n    }\r\n\r\n    addNewProject = (event) => {\r\n        let mode = this.state[this.state.workMode];\r\n        if (mode.validateType &&  mode.validateName) {\r\n            eventEmitter.emit('EventAddProject',\r\n            {\r\n                title: this.state[this.state.workMode].name,\r\n                type: this.state[this.state.workMode].type\r\n            });\r\n\r\n            eventEmitter.emit('EventChangeWorkMode',{action: 'default'});\r\n        }\r\n    }\r\n\r\n    selectOption = (event) => {\r\n\r\n        let inputs = {...this.state[this.state.workMode]};\r\n        inputs.type = event.target.value;\r\n        inputs.validateType = inputs.type !== 'empty';\r\n        inputs.disabled = inputs.validateType && inputs.validateName ? false : true;\r\n        this.setState({\r\n            ...this.state,\r\n            [this.state.workMode]: inputs\r\n        });\r\n    }\r\n\r\n    validateName = (event) => {\r\n\r\n        let inputs = {...this.state[this.state.workMode]};\r\n        inputs.name = event.target.value;\r\n        let lengthInput = inputs.name.length;\r\n        inputs.validateName = lengthInput >= 4 && lengthInput < 20 ? true : false;\r\n        inputs.disabled = inputs.validateType && inputs.validateName ? false : true;\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            [this.state.workMode]: inputs\r\n        })\r\n    };\r\n\r\n    cancel = (event) => {\r\n\r\n        if (this.state.workMode === 'Search')\r\n            eventEmitter.emit(\"EventModalSearchOn\");\r\n        else  eventEmitter.emit('EventChangeWorkMode',{action: 'default'});\r\n    }\r\n\r\n    refSelect = (node) => this.inputSelect = node;\r\n    refSearch = node => this.inputSearch = node;\r\n\r\n    render(){\r\n\r\n        switch (this.state.workMode){\r\n            case 'newProject':\r\n                return (\r\n                    <div className = 'Modal'>\r\n                        <h3>Create new Project</h3>\r\n                        { this.state[this.state.workMode].name.length <= 3 ?\r\n                            <span className = 'warning'>{this.state.warning.lengthMin}</span> : null\r\n                        }\r\n                        { this.state[this.state.workMode].name.length >= 20 ?\r\n                            <span className = 'warning'>{this.state.warning.lengthMax}</span> : null\r\n                        }\r\n                        <input\r\n                            className = {this.state[this.state.workMode].validateName ? 'ready' : 'wrong'}\r\n                            value = {this.state[this.state.workMode].name}\r\n                            onChange = {this.validateName}\r\n                            type = 'text'\r\n                            placeholder = \"Project name\"\r\n                        />\r\n                        { !this.state[this.state.workMode].validateType ?\r\n                            <span className = 'warning'>{this.state.warning.type}</span> : null\r\n                        }\r\n                        <select onChange = {this.selectOption} >\r\n                            <option value = 'empty'>--------</option>\r\n                            <option value = 'landing'>Landing</option>\r\n                            <option value = 'portfolio'>Portfolio</option>\r\n                        </select>\r\n                        <input \r\n                            onClick = {this.addNewProject}\r\n                            className = 'acceptButton'\r\n                            disabled = {this.state[this.state.workMode].disabled}\r\n                            type = 'button'\r\n                            value = 'Submit'\r\n                        />\r\n                            <input onClick = {this.cancel} type ='button' value = 'Cancel' />\r\n                    </div>\r\n                )\r\n            case 'Search':\r\n                console.log('Search render');\r\n                return (\r\n                    <Fragment>\r\n                        <div className = 'Modal Modal-search'>\r\n                            <h3>Search background image</h3>\r\n                            { this.state.images.error ?\r\n                                <span className = 'error'>{this.state.images.error}</span> : null\r\n                            }\r\n                            <input ref = {this.refSearch} type = 'text' placeholder = \"Photo name\" />\r\n                            <input \r\n                                disabled = {this.state.images.buttonSearchDisabled} \r\n                                className = 'acceptButton' \r\n                                type = 'button' \r\n                                value = 'Search'\r\n                                onClick = {this.searchBackground}\r\n                            />\r\n                            <input onClick = {this.cancel} type ='button' value = 'Cancel' />\r\n                            {\r\n                                this.state.images.imageBoxView ?\r\n                                <div className = 'searchResultBox'>\r\n                                    {this.makeImageResultBox([...this.state.images['images']])}\r\n                                </div>\r\n                                : null\r\n                            }\r\n                        </div>\r\n                        {  this.state.imageMenuActive ?\r\n                            <div className = 'ActionModalSearch'>\r\n                            <button onClick = {this.showImage} className = 'actionModalSearch__view'>\r\n                                <Icon path = '/img/view.png' />\r\n                            </button>\r\n                            <button onClick = {this.setSelectedImage} className = 'actionModalSearch__settings'>\r\n                                <Icon path = '/img/settings.png' />\r\n                            </button>\r\n                            </div>\r\n                            : null\r\n                        }\r\n                    </Fragment>\r\n                )\r\n            default: return <Fragment></Fragment>\r\n        }\r\n    }\r\n\r\n    componentDidMount = event => {\r\n        if (this.state.workMode === 'Search')\r\n            eventEmitter.on('EventShowMenuImage', this.showMenuImage);\r\n    }\r\n\r\n    componentWillUnmount = event => {\r\n        if (this.state.workMode === 'Search')\r\n            eventEmitter.off('EventShowMenuImage', this.showMenuImage);\r\n    }\r\n}\r\n\r\nexport default ModalWindow;\r\n\r\n","import {createProjectAction, errorAction} from '../actions';\r\n\r\n\r\nconst middlewareCreateProject = (uid, list, title, type) => async (dispatch,getState, {firebase}) => {\r\n    let lastProject = [...list];\r\n    const lastIndex = lastProject.length  ? lastProject[lastProject.length-1].id + 1 : 0;\r\n    lastProject.push({\"id\": lastIndex, \"title\": title, \"type\": type, component: []});\r\n\r\n    await firebase.db.collection(\"users\").doc(uid).update({\r\n        'projects': lastProject,\r\n    })\r\n    .then (() => dispatch(createProjectAction(lastProject)))\r\n    .catch(error => {\r\n        console.error(error.message);\r\n        dispatch(errorAction(error.message));\r\n    })\r\n};\r\n\r\nexport {\r\n    middlewareCreateProject\r\n}","import React, {useState} from 'react';\r\nimport eventEmitter from '../../EventEmitter';\r\nimport {withRouter} from 'react-router-dom';\r\n\r\nfunction Item(props) {\r\n    const [id] = useState(props.id);\r\n    const [name] = useState(props.name);\r\n    const [type] = useState(props.type);\r\n\r\n\r\n    const build = event => {\r\n        props.history.push(`/Cabinet/Build/${id}`);\r\n        event.stopPropagation();\r\n    };\r\n\r\n    const deleteItem = event => {\r\n        eventEmitter.emit('EventDeleteItem',{id: props.id, name: props.name, type: props.type});\r\n        event.stopPropagation();\r\n    };\r\n\r\n    return (\r\n        <div className = 'item' data-id = {id}>\r\n            <p className = 'ProjectName'>{name}</p>\r\n            <p className = 'ProjectType'>{type}</p>\r\n            <div className = 'projectController'>\r\n            <input onClick = {build} className = 'projectControllerButton_enter' type = 'button' value = 'enter build' />\r\n            <input onClick = {deleteItem} className = 'projectControllerButton_delete' type = 'button' value = 'delete' />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(Item);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport {middlewareCreateProject} from '../../redux/middleware/createProjectMiddleware';\r\n\r\nimport './list.scss';\r\n\r\nimport Item from './Item';\r\nimport eventEmitter from '../../EventEmitter.js';\r\n\r\nclass List extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        children: PropTypes.shape({\r\n            projects: PropTypes.array.isRequired,\r\n           count: PropTypes.number.isRequired,\r\n        }),\r\n        list: PropTypes.array.isRequired,\r\n    }\r\n\r\n    state = {\r\n        redirect: false,\r\n    }\r\n\r\n    addNewProject = (item) => {\r\n        if (this.props.idUser) {\r\n            this.props.dispatch(middlewareCreateProject(this.props.idUser, this.props.list, item.title, item.type));\r\n        } else this.setState({...this.state, redirect: true});\r\n    }\r\n\r\n\r\n    makeList = (list) => {\r\n\r\n        return list.map (project => {\r\n\r\n            return(\r\n                <Item\r\n                    key = {project.id}\r\n                    id = {project.id}\r\n                    name = {project.title}\r\n                    type = {project.type}\r\n                />\r\n            )\r\n        });\r\n    }\r\n\r\n    render(){\r\n        if (this.state.redirect)\r\n            return <Redirect to = '/' />\r\n            else return (\r\n                    <div className = 'projectsList__list'>\r\n                        {this.makeList([...this.props.list])}\r\n                    </div>\r\n                )\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        eventEmitter.on('EventAddProject',this.addNewProject);\r\n    }\r\n\r\n      componentWillUnmount = () => {\r\n        eventEmitter.off('EventAddProject',this.addNewProject);\r\n      }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        idUser: state.cabinet.idUser,\r\n        list: [...state.cabinet.projects]\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(List);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nimport List from '../List/List.jsx';\r\n\r\nimport './ProjectsSection.scss';\r\n\r\nclass ProjectsSection extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        projects: PropTypes.array,\r\n    }\r\n\r\n    render(){\r\n        return (\r\n                <section className = 'projectsList'>\r\n                <div className = 'container'>\r\n                <div className = 'flex-column'>\r\n                        <div className = 'projectsList__about'>\r\n                            <h3>Your Projects</h3>\r\n                        </div>\r\n                        <List />\r\n                    </div>\r\n                </div>\r\n                </section>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default ProjectsSection;","import React,{Fragment} from 'react';\nimport PropTypes from 'prop-types';\nimport eventEmitter from '../../EventEmitter.js';\nimport {Redirect} from 'react-router-dom';\nimport withFirebase from '../../components/firebaseHOC';\n\nimport {middlewareLogOutUser} from '../../redux/middleware/loadUserMiddleware';\nimport middlewareDelete from '../../redux/middleware/middlewareDelete';\nimport Loader from '../../components/loading/Loader';\nimport {connect} from 'react-redux';\n\nimport Header from '../../components/header/Header';\nimport Modal from '../../components/modalWindow/ModalWindow';\nimport ProjectsSection from '../../components/ProjectsSection/ProjectsSection';\n\nimport './Cabinet.scss';\n\nconst title = require('../../config.json').title;\n\nclass Cabinet extends React.PureComponent {\n\n  static propTypes = {\n    firebase: PropTypes.object.isRequired\n  }\n\n  state = {\n    workMode: 'default',\n  }\n\n  logOut = event => {\n    this.props.dispatch(middlewareLogOutUser(this.props.idUser));\n  }\n\n  deletItem = event => {\n    this.props.dispatch(middlewareDelete({...event, uid: this.props.firebase.getCurrentUser().uid}));\n  }\n\n  changeWorkMode = event => {\n    this.setState ({\n      ...this.state,\n      workMode: event.action,\n    });\n  }\n\n  render(){\n    if (this.props.active){\n      console.log('CAbinet');\n      return (\n        <Fragment>\n          <Header title = {title} idUser = {this.props.idUser} />\n          {(this.state.workMode === 'newProject') ? <Modal workMode = {this.state.workMode} /> : null}\n            <ProjectsSection />\n        </Fragment>\n      )\n    } else if (!this.props.firebase.getCurrentUser()) return <Redirect to = '/' />\n    else return <Loader path = '/img/loading.gif' type = 'Cabinet' />\n    }\n\n\n  componentDidMount = () => {\n    eventEmitter.on('EventDeleteItem', this.deletItem);\n    eventEmitter.on('EventChangeWorkMode', this.changeWorkMode);\n  }\n\n  componentWillUnmount = () => {\n    eventEmitter.off('EventDeleteItem', this.deletItem);\n    eventEmitter.off('EventChangeWorkMode', this.changeWorkMode);\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    idUser: state.cabinet.idUser,\n    projects: [...state.cabinet.projects],\n    active: state.cabinet.active\n  }\n}\n\n\n\nexport default connect(mapStateToProps)(withFirebase(Cabinet));\n","import React, {Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nimport withFirebase from '../../components/firebaseHOC';\r\nimport Header from '../../components/header/Header';\r\n\r\nimport './about.scss';\r\n\r\nclass About extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        config: PropTypes.object.isRequired,\r\n        firebase: PropTypes.object.isRequired,\r\n    }\r\n\r\n    state = {\r\n        config: this.props.config\r\n    };\r\n\r\n    render(){\r\n        if (this.props.firebase.getCurrentUser()) {\r\n            const { config } = this.state;\r\n            return (\r\n                <Fragment>\r\n                    <Header title = {config.title} />\r\n                    <section className = 'About'>\r\n                        <div className = 'container'>\r\n                            <div className = 'col-12'>\r\n                                <div className = 'information'>\r\n                                <img alt = 'img' className = 'logoAbout' src = {process.env.PUBLIC_URL + '/img/about.jpg'}/>\r\n                                    <p className ='developer'><span>Developer:</span> {config.about.developer}</p>\r\n                                    <p className = 'year'><span>Year:</span> {config.about.year}</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </section>\r\n                </Fragment>\r\n            )\r\n        } else return <Redirect to = '/' />\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default withFirebase(About);","import {errorAction, loadUpdateCurrentProject} from '../actions';\r\n\r\nconst updateMiddleware = (item) => async (dispatch,getState, {firebase}) => {\r\n    console.log('update');\r\n\r\n    let newProjects = item.projects.map(project => {\r\n        if (project.id === item.idProject) { project.component = [...item.component] }\r\n        return project;\r\n    });\r\n    await firebase.db.collection(\"users\").doc(item.uid).update({\r\n        'projects': JSON.parse(JSON.stringify(newProjects))\r\n    })\r\n    .then(response => {\r\n        let project = item.projects.find(itemdb => itemdb.id === item.idProject);\r\n        dispatch(loadUpdateCurrentProject({component: [...project.component], idProject: item.idProject}))\r\n    })\r\n    .catch(error => dispatch(errorAction(error.message)));\r\n};\r\n\r\nexport default updateMiddleware;","import React,{useState} from 'react';\r\nimport eventEmitter from '../../EventEmitter';\r\n\r\nimport './imageViewer.scss';\r\n\r\nfunction ImageViewer(props){\r\n\r\n    let [path] = useState(props.path);\r\n\r\n    const closeViewer = event => {\r\n        eventEmitter.emit(\"EventImageView\", { action: false, target: null});\r\n        event.stopPropagation();\r\n    }\r\n\r\n    return (\r\n        <div onClick = {closeViewer} className = 'ImageViewer'>\r\n            <img src = {path} alt = 'fullImage' />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ImageViewer;","import React, {Fragment} from 'react';\r\nimport eventEmitter from '../../EventEmitter';\r\nimport PropTypes from 'prop-types';\r\nimport { SketchPicker } from 'react-color';\r\nimport './instrumentsPanel.scss';\r\n\r\nimport Icon from '../Icon/icon';\r\n\r\nclass InstrumentsPanel extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        instrumentPanel:  PropTypes.object.isRequired,\r\n        editComponent: PropTypes.object.isRequired\r\n    };\r\n\r\n    state = {\r\n        instrumentPanel: {...this.props.instrumentPanel},\r\n        componentsStats: {\r\n            content: null,\r\n            fontSize: null,\r\n            color: null,\r\n            backgroundImage: null,\r\n            image: null,\r\n            coords: {left: null, top: null} // x, y\r\n        },\r\n        images: null,\r\n    };\r\n\r\n    updateSizeText = eventSize => {\r\n        this.setState({\r\n            ...this.state, \r\n            instrumentPanel: {...this.state.instrumentPanel},\r\n            componentsStats: {...this.state.componentsStats, fontSize: eventSize}\r\n        });\r\n    };\r\n\r\n    closePanel = event => {\r\n        eventEmitter.emit('EventClosePanel', {close: false});\r\n    };\r\n\r\n    setSize = event => {\r\n        // let {fontSize} = this.state.componentsStats;\r\n        let {idComponent} = this.state.instrumentPanel;\r\n        let size = event.target.value > 200 ? 200 : event.target.value;\r\n        this.setState({\r\n            ...this.state, \r\n            instrumentPanel: {...this.state.instrumentPanel},\r\n            componentsStats: {...this.state.componentsStats,fontSize: size}\r\n        },\r\n            () => eventEmitter.emit(`EventChangeSizeText${idComponent}`, {size: size })\r\n        );\r\n\r\n        event.stopPropagation();\r\n    };\r\n\r\n    setContent = event => {\r\n        let {idComponent} = this.state.instrumentPanel;\r\n        let contentValue = event.target.value;\r\n        this.setState({\r\n            ...this.state, \r\n            instrumentPanel: {...this.state.instrumentPanel},\r\n            componentsStats: {...this.state.componentsStats,content: contentValue}\r\n        },\r\n        () => eventEmitter.emit(`EventChangeContentText${idComponent}`,{content: contentValue}));\r\n        event.stopPropagation();\r\n    };\r\n\r\n    updatePosition = eventItem => {\r\n\r\n        this.setState({\r\n            ...this.state, \r\n            componentsStats: {\r\n                ...this.state.componentsStats,\r\n                coords: {\r\n                    ...this.state.componentsStats.coords,\r\n                    left: eventItem.x,\r\n                    top: eventItem.y\r\n                }\r\n            }\r\n        });\r\n    };\r\n\r\n    setColor = event => {\r\n        this.setState({...this.state,\r\n            instrumentPanel:{\r\n                ...this.state.instrumentPanel,\r\n                colorPickerActive: this.state.instrumentPanel.colorPickerActive ? false : true\r\n            }\r\n        });\r\n        event.stopPropagation();\r\n    };\r\n\r\n    updateBimageStats = eventItem => {\r\n        const {urlFull} = eventItem;\r\n        this.setState({\r\n            ...this.state,\r\n            componentsStats:{\r\n                ...this.state.componentsStats,\r\n                backgroundImage: urlFull\r\n            }\r\n        });\r\n    };\r\n\r\n    handleChangeComplete = event => {\r\n\r\n        const {rgb} = event;\r\n        let colorRGB = `rgb(${rgb.r},${rgb.g},${rgb.b},${rgb.a})`;\r\n\r\n        let {idComponent} = this.state.instrumentPanel;\r\n        if (this.state.instrumentPanel.target === 'background'){\r\n            this.setState({\r\n                ...this.state,\r\n                componentsStats: {...this.state.componentsStats,color: colorRGB}\r\n            }, () => eventEmitter.emit(`EventChangeColorBackground${idComponent}`, colorRGB));\r\n        }\r\n\r\n        else if (this.state.instrumentPanel.target === 'text') {\r\n            this.setState({\r\n                ...this.state,\r\n                componentsStats: {...this.state.componentsStats,color: colorRGB}\r\n            },\r\n            () => eventEmitter.emit(`EventChangeColorText${idComponent}`, colorRGB));\r\n        }\r\n\r\n    };\r\n\r\n    saveChanges = event => {\r\n        eventEmitter.emit(\"EventSaveChangesComponent\", {\r\n            ...this.state.componentsStats,\r\n            type: this.state.instrumentPanel.target\r\n        });\r\n\r\n        event.stopPropagation();\r\n    }\r\n\r\n    searchImage = event => {\r\n\r\n        let {idComponent} = this.state.instrumentPanel;\r\n        eventEmitter.emit('EventModalSearchOn', {idComponent: idComponent});\r\n\r\n        event.stopPropagation();\r\n    };\r\n\r\n    makePanelInstruments = (type) => {\r\n\r\n        let {colorPickerActive} = this.state.instrumentPanel;\r\n        let {fontSize} = this.state.componentsStats;\r\n            switch (type){\r\n                case 'text':\r\n                    return (\r\n                        <Fragment>\r\n                        <p className = 'titleInstument'>Color: </p>\r\n                        <input onClick = {this.setColor} className = 'button_switchColor' type = 'button' value = 'color pick' />\r\n                        <p className = 'titleInstument'>Text size: </p>\r\n                        <input \r\n                            onChange = {this.setSize} \r\n                            type=\"number\"\r\n                            min = '10' max = '200'\r\n                            value = {fontSize ? fontSize : 120 }\r\n                        />\r\n                            { colorPickerActive ?\r\n                                <SketchPicker\r\n                                onChangeComplete={this.handleChangeComplete}\r\n                                />\r\n                                : null\r\n                            }\r\n                        <p className = 'titleInstument'>Content: </p>\r\n                        <input onChange = {this.setContent} maxLength = '20' type = 'text' defaultValue = 'Title' />\r\n                        <input onClick = {this.saveChanges} className = 'saveButtonInstument' type = 'button' value = 'save changes' />\r\n                        </Fragment>\r\n                )\r\n                case 'background': \r\n                    return (\r\n                        <Fragment>\r\n                        <p className = 'titleInstument'>Color: </p>\r\n                        <input onClick = {this.setColor} className = 'button_switchColor' type = 'button' value = 'color pick' />\r\n                            { colorPickerActive ?\r\n                                <SketchPicker\r\n                                onChangeComplete={this.handleChangeComplete}\r\n                                />\r\n                                : null\r\n                            }\r\n                            <input onClick = {this.searchImage} className = 'ImageSearchButton' type = 'button' value = 'background-image' />\r\n                            <input onClick = {this.saveChanges} className = 'saveButtonInstument' type = 'button' value = 'save changes' />\r\n                        </Fragment>\r\n                    )\r\n                default: return <p className = 'warningInstruments'>Select elements for accses edit instruments</p>\r\n            }\r\n    };\r\n\r\n    componentDidUpdate = (oldProps, oldState) => {\r\n        let targetBool = oldState.instrumentPanel.target !== this.props.instrumentPanel.target;\r\n        let idBool = oldState.instrumentPanel.idComponent !== this.props.instrumentPanel.idComponent;\r\n        console.log(this.props.instrumentPanel);\r\n        if (idBool || targetBool)\r\n            this.setState({\r\n                ...this.state,\r\n                instrumentPanel: {...this.props.instrumentPanel, colorPickerActive: false},\r\n                componentsStats: {\r\n                    content: null, fontSize: null, color: null,\r\n                    backgroundImage: null, image: null,\r\n                    coords: {left: null, top: null} // x, y\r\n                },\r\n            })\r\n    };\r\n\r\n    componentDidMount = event => {\r\n        eventEmitter.on(\"EventUpdateSizeText\", this.updateSizeText);\r\n        eventEmitter.on(\"EventSetBImageInstumentPanel\", this.updateBimageStats);\r\n        eventEmitter.on(\"EventUpdatePosition\", this.updatePosition);\r\n    };\r\n\r\n    componentWillUnmount = event => {\r\n        eventEmitter.off(\"EventUpdateSizeText\", this.updateSizeText);\r\n        eventEmitter.off(\"EventUpdatePosition\", this.updatePosition);\r\n    };\r\n\r\n    render(){\r\n        let { instrumentActive } = this.state.instrumentPanel;\r\n        return (\r\n            <Fragment>\r\n                <div  className = 'instumentsPanel'>\r\n                <button onClick = {this.closePanel} className = 'closeInstrumentsPanel'><Icon path = '/img/close.svg' /></button>\r\n                    <h3>Instruments</h3>\r\n                    {\r\n                        instrumentActive ? \r\n                        <p className = 'TextComponent'>{this.state.instrumentPanel.target}</p>\r\n                        : null\r\n                    }\r\n                    {\r\n                        instrumentActive ?\r\n                        <div  className= 'instuments'>{this.makePanelInstruments(this.state.instrumentPanel.target)}</div>\r\n                        : null\r\n                    }\r\n                </div>\r\n            </Fragment>\r\n        )\r\n    };\r\n};\r\n\r\nexport default InstrumentsPanel;","import React, {useEffect, useState} from 'react';\r\nimport eventEmitter from '../../../EventEmitter';\r\nimport styled from 'styled-components';\r\n\r\n\r\nconst Background = styled.div`\r\n    position: relative;\r\n    width: 100%;\r\n    height: 95vh;\r\n    background-size: cover;\r\n    background-color: ${props => props.backgroundColor};\r\n    background-image: url(${props => props.backgroundImage});\r\n`;\r\n\r\nconst BackgroundComponent = props => {\r\n\r\n    const [id] = useState(props.id);\r\n\r\n    const [count, setCount] = useState(0);\r\n    let boxComponent = React.createRef();\r\n\r\n    let [backgroundColor, setBgColor] = useState(props.background);\r\n    let [backgroundImage, setImage] = useState(props.backgroundImage ? props.backgroundImage : null);\r\n\r\n    const saveWidth = event => {\r\n        setCount(count + 1);\r\n        boxComponent.current.focus();\r\n        let boxInform =  boxComponent.current.getBoundingClientRect();\r\n        eventEmitter.emit('EventSaveWidth', {width: boxInform.width, height: boxInform.height});\r\n    }\r\n\r\n    const openBgInstruments = event => {\r\n        console.log(Background);\r\n        eventEmitter.emit('EventInstrumentPanel',{\r\n            target: 'background',\r\n            id: id,\r\n        });\r\n        event.stopPropagation();\r\n    }\r\n\r\n    const changeColor = color => {\r\n        setBgColor(color);\r\n    }\r\n\r\n    const setBackgroundImage = event => {\r\n        const {urlFull} = event;\r\n        setImage(urlFull);\r\n    };\r\n\r\n    const didUpdate = () => {\r\n        console.log('didUpdate');\r\n        if (count === 0 ) saveWidth();\r\n        eventEmitter.on(`EventChangeColorBackground${id}`, changeColor);\r\n        eventEmitter.on(`EventSetBackgroundImage${id}`, setBackgroundImage);\r\n        return () => {\r\n            eventEmitter.off(`EventChangeColorBackground${id}`, changeColor);\r\n            eventEmitter.off(`EventSetBackgroundImage${id}`, setBackgroundImage);\r\n        }\r\n    }\r\n\r\n    useEffect(didUpdate);\r\n    return (\r\n        <Background\r\n            ref  = {boxComponent}\r\n            onClick={openBgInstruments}\r\n            backgroundColor = {backgroundColor}\r\n            backgroundImage = {backgroundImage}\r\n        >\r\n            {props.children}\r\n        </Background>\r\n    )\r\n}\r\n\r\nexport default BackgroundComponent;","\r\nimport React, {useEffect, useState} from 'react';\r\nimport eventEmitter from '../../../EventEmitter';\r\nimport styled from 'styled-components';\r\n\r\n\r\nconst Title = styled.h1.attrs(props => ({\r\n    style: {\r\n        display: props.shadowDisplay ? 'none' : 'block',\r\n        left: props.coordX ? props.coordX : '50%',\r\n        top:  props.coordY,\r\n}}))`\r\n    position: absolute;\r\n    transform: translate(-50%);\r\n    font-size: ${props => props.size};\r\n    color: ${props => props.textColor};\r\n    text-align: center;\r\n    margin: 0;\r\n`;\r\n\r\n// left: ${props => props.coordX ? props.coordX : '50%'};\r\n// top:  ${props => props.coordY};\r\n\r\nconst TextComponent = props =>  {\r\n\r\n    const [id] = useState(props.id);\r\n\r\n    console.log ('text');\r\n    const [sizeParenBox] = useState({...props.sizeParenBox});\r\n\r\n    let [colorText, setColorText] = useState(props.color);\r\n    let [sizeText, setSizeText] = useState(props.size ? props.size : 120);\r\n    let [contentText, setText] = useState(props.children);\r\n    const [shiftCoords, setShiftCoords] = useState(null)\r\n    const [dragNdrop, setDragNdrop] = useState(null);\r\n\r\n    const openTitleInstruments = event => {\r\n\r\n        eventEmitter.emit(`EventInstrumentPanel`,{\r\n            target: 'text',\r\n            id: id,\r\n            sizeTextValue: sizeText\r\n        });\r\n        event.stopPropagation();\r\n    }\r\n\r\n    const changeColorText = color => {\r\n        setColorText(color);\r\n    }\r\n\r\n    const changeSizeText = eventSize => {\r\n        const {size} = eventSize;\r\n        setSizeText(size);\r\n    }\r\n\r\n    const changeContentText = eventContent => {\r\n        const {content} = eventContent;\r\n        setText(content);\r\n    }\r\n\r\n\r\n    const didUpdate = event => {\r\n        eventEmitter.on(`EventChangeColorText${id}`, changeColorText);\r\n        eventEmitter.on(`EventChangeSizeText${id}`, changeSizeText);\r\n        eventEmitter.on(`EventChangeContentText${id}`, changeContentText);\r\n        return () => {\r\n            eventEmitter.off(`EventChangeColorText${id}`, changeColorText);\r\n            eventEmitter.off(`EventChangeSizeText${id}`, changeSizeText);\r\n            eventEmitter.off(`EventChangeContentText${id}`, changeContentText);\r\n        }\r\n    }\r\n\r\n    const saveCoords = event => {\r\n\r\n        let rect = event.target.getBoundingClientRect();\r\n        let left = rect.left;\r\n        let top = rect.top;\r\n        let width = rect.width;\r\n        let height = rect.height;\r\n        setShiftCoords({x: event.pageX - left - width/2, y: event.pageY - top + height/2.8});\r\n\r\n        event.stopPropagation();\r\n    }\r\n\r\n    const moveText = event => {\r\n\r\n        let coordX = event.pageX - shiftCoords.x;\r\n        let coordY = event.pageY - shiftCoords.y;\r\n        console.log(Title);\r\n        coordX = coordX <= 130 ? 130 : coordX;\r\n        coordY = coordY <= 0 ? 0 : coordY;\r\n        console.log(sizeParenBox);\r\n        let convertToPercentX = (coordX * 100) / sizeParenBox.width;\r\n        let convertToPercentY = (coordY * 100) / sizeParenBox.height;\r\n\r\n        const position = {\r\n            x: convertToPercentX + '%', \r\n            y: convertToPercentY + '%', \r\n            shadowDisplay: event.type === 'drag' ? true : false\r\n        };\r\n        setDragNdrop(position);\r\n        \r\n        if (event.type === 'dragend') \r\n            eventEmitter.emit('EventUpdatePosition', position);\r\n        event.stopPropagation();\r\n    }\r\n\r\n    const weelResizeText = event => {\r\n\r\n        if (event.shiftKey && event.deltaY === -100) {\r\n            let counter = sizeText + 1;\r\n            counter = counter > 200 ? 200 : counter;\r\n            setSizeText(counter);\r\n            eventEmitter.emit('EventUpdateSizeText', counter);\r\n        }\r\n\r\n        if (event.shiftKey && event.deltaY === 100) {\r\n            let counter = sizeText - 1;\r\n             counter = counter <= 10 ? 10 : counter;\r\n             setSizeText(counter);\r\n             eventEmitter.emit('EventUpdateSizeText', counter);\r\n            }\r\n        event.stopPropagation();\r\n    }\r\n    useEffect(didUpdate);\r\n\r\n    return (\r\n        <Title\r\n            onClick={openTitleInstruments}\r\n            textColor = {colorText ? colorText : 'red'}\r\n            size = {sizeText ? sizeText + 'px' : '120px'}\r\n            draggable = {true}\r\n            onMouseDown = {saveCoords}\r\n            onDrag   = {moveText}\r\n            onDragEnd = {moveText}\r\n            onWheel = {weelResizeText}\r\n            coordX = {dragNdrop ? dragNdrop.x : null}\r\n            coordY = {dragNdrop ? dragNdrop.y : null}\r\n            shadowDisplay = {dragNdrop ? dragNdrop.shadowDisplay : false}\r\n        >\r\n            {contentText}\r\n        </Title>\r\n    )\r\n}\r\n\r\nexport default TextComponent;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport TextComponent from '../buildComponents/components/Text';\r\nimport BackgroundComponent from '../buildComponents/components/Background';\r\n\r\nimport eventEmitter from '../../EventEmitter';\r\n\r\nimport './buildMenu.scss';\r\n\r\nclass BuildMenu extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        component: PropTypes.object\r\n    }\r\n\r\n    state = {\r\n        component: {...this.props.component},\r\n        sizeParenBox: {...this.props.sizeParenBox},\r\n        title: 'Title'\r\n    }\r\n\r\n    addText = event => {\r\n        let id = this.props.countComponents;\r\n        let component = [<TextComponent sizeParenBox = {{...this.props.sizeParenBox}} id = {id} key = {`text${id}`}>{this.state.title}</TextComponent>];\r\n        eventEmitter.emit('EventBuildHeaderComponents',{target: 'Header', type: 'text', component: component});\r\n        event.stopPropagation();\r\n    }\r\n\r\n    addBackground = event => {\r\n        let id = this.props.countComponents;\r\n        let background = [<BackgroundComponent id = {id} key = {`bg${id}`}/>];\r\n        eventEmitter.emit('EventBuildHeaderComponents',{target: 'Header', type: 'background', component: background});\r\n\r\n        event.stopPropagation();\r\n    }\r\n\r\n    render(){\r\n        console.log('menuBuild');\r\n        return (\r\n            <div className = 'ComponentsMenu'>\r\n                <button onClick = {this.addBackground} className = 'ImageTool CompoentnsMenu_button' ><span>Image</span></button>\r\n                <button onClick = {this.addText} className = 'TextTool CompoentnsMenu_button' ><span>Text</span></button>\r\n                <button \r\n                    disabled = {this.state.component.name !== 'Header' ? false : true}\r\n                    className = 'ButtonTool CompoentnsMenu_button' >\r\n                    <span>Button</span>\r\n                </button>\r\n                <button className = 'VideoTool CompoentnsMenu_button' ><span>Video</span></button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default BuildMenu;","import React,{Fragment} from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Icon from '../Icon/icon';\r\nimport BuildMenu from '../componentsBuildMenu/BuildMenu';\r\n\r\n\r\nconst ControllersBox = styled.div\r\n    .attrs(props =>({\r\n        style: {\r\n                left: props.coordX,\r\n                top: props.coordY,\r\n        }\r\n    })) `\r\n    position: absolute;\r\n    display: ${props => props.shadowDisplay}\r\n    `;\r\n\r\nclass Controllers extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        menuActive: PropTypes.bool,\r\n    }\r\n\r\n    state = {\r\n        viewComponentMenu: false,\r\n        shiftX: 0,\r\n        shiftY: 0,\r\n        coordsX: '50%',\r\n        coordsY: '0',\r\n        shadowDisplay: 'block'\r\n    }\r\n\r\n    componentMenu = (event) => {\r\n        this.setState({viewComponentMenu: this.state.viewComponentMenu ? false : true});\r\n        event.stopPropagation();\r\n    }\r\n\r\n    saveCoords = event => {\r\n        let left = this.controlBox.getBoundingClientRect().left;\r\n        let top = this.controlBox.getBoundingClientRect().top;\r\n        this.setState({...this.state, shiftX: event.pageX - left, \r\n        shiftY: event.pageY - top + 55 });\r\n\r\n        event.stopPropagation();\r\n    }\r\n\r\n    drag = event => {\r\n        if (!this.state.viewComponentMenu)\r\n            this.setState({\r\n                ...this.state,\r\n                coordsX: event.pageX - this.state.shiftX + 'px', \r\n                coordsY: event.pageY - this.state.shiftY + 'px',\r\n                shadowDisplay: event.type === 'drag' ? 'none' : 'block'\r\n            });\r\n        event.stopPropagation();\r\n    }\r\n\r\n    controlBox = null;\r\n    refControll = (node) => this.controlBox = node;\r\n\r\n\r\n    render(){\r\n        console.log('controllers');\r\n        return (\r\n            <Fragment>\r\n            { this.props.menuActive ?\r\n                <ControllersBox\r\n                ref = {this.refControll}\r\n                className = 'ControllersEditComponent'\r\n                coordX = {this.state.coordsX}\r\n                coordY = {this.state.coordsY}\r\n                draggable = {!this.state.viewComponentMenu}\r\n                onMouseDown = {this.saveCoords}\r\n                onClick = {this.componentMenu}\r\n                onDrag   = {this.drag}\r\n                onDragEnd = {this.drag}\r\n                shadowDisplay = {this.state.shadowDisplay}\r\n                >\r\n                    <Icon\r\n                        draggable = {true}\r\n                        onClick = {this.componentMenu}\r\n                        className = 'addButton'\r\n                        path = '/img/addButton.png'\r\n                    />\r\n                    {this.state.viewComponentMenu ? \r\n                        <BuildMenu\r\n                            sizeParenBox = {this.props.sizeParenBox}\r\n                            countComponents = {this.props.countComponents}\r\n                            component = {{...this.props.component}}\r\n                        /> : null\r\n                    }\r\n                </ControllersBox>\r\n                : null\r\n            }\r\n            </Fragment>\r\n        )\r\n    }\r\n\r\n    componentDidUpdate = () => {\r\n        console.log('componentDidUpdate controllers');\r\n    }\r\n    \r\n    componentDidMount = () => {\r\n        console.log('componentDidMount controllers');\r\n    }\r\n    \r\n}\r\n\r\nexport default Controllers;","import React, {Fragment} from 'react';\r\nimport eventEmitter from '../../../EventEmitter';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nimport BackgroundComponent from '../../buildComponents/components/Background';\r\nimport Controllers from '../../controllers/controllers';\r\n\r\n\r\nimport './headerBuild.scss';\r\n\r\nclass HeaderBuild extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        id: PropTypes.number.isRequired,\r\n    }\r\n\r\n    state = {\r\n        idProject: this.props.id,\r\n        component: {...this.props.children},\r\n        sizeParenBox: null,\r\n    }\r\n\r\n    saveWidth = eventItem => {\r\n        this.setState({sizeParenBox: {...eventItem}});\r\n    };\r\n\r\n\r\n    changeMode = (event) => {\r\n        if (!this.props.editStart) {\r\n            let rect = event.currentTarget.getBoundingClientRect();\r\n            const width = rect.width;\r\n            const height = rect.height;\r\n        eventEmitter.emit('EventModeEdit', {...this.state, width: width, height: height});\r\n        }\r\n    }\r\n\r\n    refBox = null;\r\n    refBackground = node => this.refBox = node;\r\n\r\n    render() {\r\n\r\n        console.log('header');\r\n        console.log(this.props);\r\n        return (\r\n            <Fragment>\r\n                <div onClick = {this.changeMode} className = 'Header'>\r\n                    <BackgroundComponent id = 'MainBackgroundHeader' background = 'grey'>\r\n                    {  this.props.children.build.componentJSX && this.props.children.build.type === 'text'  ?\r\n                            this.props.children.build.componentJSX : null\r\n                    }\r\n                    </BackgroundComponent>\r\n                    {!this.props.editStart ? <p className = 'warningEdit'>Click for start edit</p> : null}\r\n                    {!this.state.readyBuild ? \r\n                        <Controllers\r\n                            countComponents = {this.props.countComponents}\r\n                            menuActive = {this.props.menuActive}\r\n                            component = {{...this.state.component}}\r\n                            sizeParenBox = {this.state.sizeParenBox}\r\n                            mainWidth = {this.props.children.mainBoxWidth}\r\n                            mainHeight = {this.props.children.mainBoxHeight}\r\n\r\n                        />\r\n                        : null}\r\n                </div>\r\n            </Fragment>\r\n        )\r\n    }\r\n\r\n    componentDidMount = event => {\r\n        eventEmitter.on('EventSaveWidth', this.saveWidth);\r\n    }\r\n\r\n    componentWillUnmount = event => {\r\n        eventEmitter.off('EventSaveWidth', this.saveWidth);\r\n    }\r\n}\r\nexport default HeaderBuild;","import React,{Fragment} from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport {Redirect} from 'react-router-dom';\r\nimport eventEmitter from '../../EventEmitter';\r\n\r\nimport {loadCurrentProjectAction, exitProjectAction} from '../../redux/actions';\r\nimport updateMiddleware from '../../redux/middleware/updateMiddleware';\r\nimport withFirebase from '../../components/firebaseHOC';\r\nimport {connect} from 'react-redux';\r\n\r\nimport ImageViewer from '../../components/imageViewer/imageViewer';\r\nimport Loader from '../../components/loading/Loader';\r\nimport Header from '../../components/header/Header';\r\nimport InstrumentsPanel from '../../components/instrumentsPanel/InstrumentsPanel';\r\nimport ModalWindow from '../../components/modalWindow/ModalWindow';\r\nimport HeaderBuild from '../../components/buildComponents/header/headerBuild';\r\n\r\nimport './build.scss';\r\n\r\n\r\nclass Build extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        param: PropTypes.string,\r\n        match: PropTypes.shape({\r\n            params: PropTypes.shape({\r\n                param: PropTypes.string.isRequired\r\n            }).isRequired\r\n        }).isRequired\r\n    }\r\n\r\n    state = {\r\n            idProject: parseInt(this.props.match.params.param),\r\n            editComponent: {\r\n                name: null,\r\n                build: {\r\n                    name: null,\r\n                    target: null,\r\n                    type: null,\r\n                    mainBoxWidth: null,\r\n                    mainBoxHeight: null,\r\n                    component: [],\r\n                    componentJSX: []\r\n                },\r\n                edit: false\r\n            },\r\n            changeEdit: false,\r\n            instrumentPanel: {\r\n                colorPickerActive: false,\r\n                instrumentActive: false,\r\n                target: '',\r\n                idComponent: null,\r\n            },\r\n            menuActive: false,\r\n            editStart: false,\r\n            modalSearch: false,\r\n            modalImageViewer: {action: false, image: null },\r\n        }\r\n\r\n    modalSearchOn = event => {\r\n        this.setState({...this.state, modalSearch: this.state.modalSearch ? false : true});\r\n    }\r\n\r\n    imageViewerSwitch = event => {\r\n        this.setState({\r\n            ...this.state,\r\n            modalImageViewer: {\r\n                ...this.state.modalImageViewer, \r\n                action: event.action, \r\n                target: event.target\r\n            }\r\n        });\r\n    };\r\n\r\n    workModeEdit = itemEvent => {\r\n        if (!this.state.editStart || this.state.changeEdit)\r\n        this.setState({\r\n            ...this.state,\r\n            idProject: itemEvent.idProject,\r\n            editComponent: {\r\n                ...itemEvent.component,\r\n                mainBoxWidth: itemEvent.width,\r\n                mainBoxHeight: itemEvent.height\r\n            },\r\n            menuActive: true,\r\n            editStart: true\r\n        });\r\n\r\n    }\r\n\r\n    openInstrument = itemEvent => {\r\n        let targetEqual = this.state.instrumentPanel.target !== itemEvent.target;\r\n        let {instumentActive} = this.state.instrumentPanel;\r\n        if (targetEqual && this.state.editStart && !instumentActive)\r\n        this.setState({\r\n            ...this.state,\r\n            instrumentPanel: {\r\n                ...this.state.instrumentPanel,\r\n                instrumentActive: true,\r\n                sizeTextValue: itemEvent.sizeTextValue,\r\n                idComponent: itemEvent.id,\r\n                target: itemEvent.target\r\n            }\r\n        })\r\n    }\r\n\r\n    closePanel = event => {\r\n        this.setState({\r\n            ...this.state,\r\n            instrumentPanel: {\r\n                ...this.state.instrumentPanel,\r\n                colorPickerActive: false,\r\n                instrumentActive: event.close\r\n            }\r\n        });\r\n    };\r\n\r\n    addHeaderComponent = itemEvent => {\r\n\r\n        let {componentJSX} = this.state.editComponent.build;\r\n        this.setState({\r\n            ...this.state,\r\n            editComponent: {\r\n                ...this.state.editComponent,\r\n                build: {\r\n                    ...this.state.editComponent.build,\r\n                    target: itemEvent.target,\r\n                    type: itemEvent.type,\r\n                    componentJSX: [...componentJSX, ...itemEvent.component]},\r\n            },\r\n        });\r\n    };\r\n\r\n    saveChangesComponent = itemEvent => {\r\n        console.log(itemEvent);\r\n        let componentSaveInBase = {...itemEvent, name: this.state.editComponent.name};\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            editComponent: {\r\n                ...this.state.editComponent,\r\n                build: {\r\n                    ...this.state.editComponent.build,\r\n                    component: [...this.state.editComponent.build.component, componentSaveInBase]\r\n                }\r\n            }\r\n        }, () => (\r\n        this.props.dispatch(updateMiddleware({\r\n            uid: this.props.idUser,\r\n            projects: [...this.props.currentProject],\r\n            component: [...this.state.editComponent.build.component],\r\n            idProject: this.state.idProject}))\r\n        ));\r\n    };\r\n\r\n\r\n    render(){\r\n        console.log('render build');\r\n        let instrumentActive = this.state.instrumentPanel.instrumentActive;\r\n        if (this.props.active && this.props.loadProject){\r\n            console.log('build');\r\n            return (\r\n                    <Fragment key = 'build'>\r\n                    {   this.state.modalImageViewer.action ?\r\n                        <ImageViewer key = 'ImageViewer' path = {this.state.modalImageViewer.target} /> : null\r\n                    }\r\n                    {this.state.modalSearch ?\r\n                        <ModalWindow\r\n                            idComponent = {this.state.instrumentPanel.idComponent}\r\n                            key = 'ModalWindow' workMode = 'Search' /> : null\r\n                    }\r\n                    { instrumentActive ?\r\n                        <InstrumentsPanel\r\n                            key = 'InstrumentsPanel'\r\n                            editComponent =  {{...this.state.editComponent}}\r\n                            instrumentPanel = {{...this.state.instrumentPanel}}\r\n                        />\r\n                        : null\r\n                    }\r\n                        <Header key = 'Header' title = \"Constructor\"  />\r\n                        <HeaderBuild\r\n                                key = 'HeaderBuild'\r\n                                editStart = {this.state.editStart}\r\n                                countComponents = {this.state.editComponent.build.componentJSX.length}\r\n                                menuActive = {this.state.menuActive}\r\n                                id = {this.state.idProject}\r\n                        >\r\n                            {{...this.state.editComponent, name: 'Header'}}\r\n                        </HeaderBuild>\r\n                    </Fragment>\r\n            )\r\n        } else if (!this.props.firebase.getCurrentUser()) { console.log('redirect'); return <Redirect to = '/' /> }\r\n        else return <Loader  key = 'Loader' path = '/img/loading.gif' type = 'build' />\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        console.log('componentDidUpdate');\r\n        if (prevProps.loadProject === this.props.loadProject && this.props.haveUpdateLoading) {\r\n            console.log('componentDidUpdate build dispatch');\r\n            let current =  this.props.currentProject.find(item => item.id === this.state.idProject)\r\n            this.props.dispatch(loadCurrentProjectAction({\r\n                id: current.id,\r\n                typeProject: current.type,\r\n                component: [...current.component]\r\n            }))\r\n        }\r\n    }\r\n    \r\n\r\n    componentDidMount = () => {\r\n        console.log('componentDidMount build');\r\n        if (this.props.active && !this.props.loadProject && this.props.haveUpdateLoading) {\r\n            console.log('componentDidMount build dispatch');\r\n            let current =  this.props.currentProject.find(item => item.id === this.state.idProject)\r\n            this.props.dispatch(loadCurrentProjectAction({\r\n                id: current.id,\r\n                typeProject: current.type,\r\n                component: [...current.component]\r\n            }))\r\n        };\r\n        eventEmitter.on('EventBuildHeaderComponents', this.addHeaderComponent);\r\n        eventEmitter.on('EventSaveChangesComponent', this.saveChangesComponent);\r\n        eventEmitter.on('EventClosePanel', this.closePanel);\r\n        eventEmitter.on('EventModalSearchOn', this.modalSearchOn);\r\n        eventEmitter.on('EventInstrumentPanel', this.openInstrument);\r\n        eventEmitter.on('EventImageView', this.imageViewerSwitch);\r\n        eventEmitter.on('EventModeEdit', this.workModeEdit);\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        console.log('componentWillUnmount');\r\n        if (this.props.active)  this.props.dispatch(exitProjectAction(true));\r\n        eventEmitter.off('EventBuildHeaderComponents', this.addHeaderComponent);\r\n        eventEmitter.off('EventSaveChangesComponent', this.saveChangesComponent);\r\n        eventEmitter.off('EventModalSearchOn', this.modalSearchOn);\r\n        eventEmitter.off('EventClosePanel', this.closePanel);\r\n        eventEmitter.off('EventInstrumentPanel', this.openInstrument);\r\n        eventEmitter.off('EventImageView', this.imageViewerSwitch);\r\n        eventEmitter.off('EventModeEdit', this.workModeEdit);\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n\r\n    console.log(\"mapStateToProps\" + state);\r\n    return {\r\n        ...state.builder,\r\n        active: state.cabinet.active,\r\n        idUser: state.cabinet.idUser,\r\n        currentProject: state.cabinet.projects\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(withFirebase(Build));","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport {Route, Switch} from 'react-router-dom';\r\n\r\nimport {middlewareLoadUserData} from './redux/middleware/loadUserMiddleware';\r\nimport {connect} from 'react-redux';\r\nimport withFirebase from './components/firebaseHOC';\r\nimport Loader from './components/loading/Loader';\r\n\r\nimport Index from './Pages/Index/Index';\r\nimport Cabinet from './Pages/Cabinet/Cabinet';\r\nimport About from './Pages/About/About';\r\nimport Build from './Pages/Build/Build';\r\nimport ErrorPage from './components/ErrorCatch/ErrorPage';\r\n\r\n// require('es6-promise').polyfill();\r\n\r\nclass App extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        config: PropTypes.object.isRequired,\r\n        pathProduction: process.env.NODE_ENV === 'production' ? '/constructor' : null,\r\n        firebase: PropTypes.object.isRequired,\r\n    }\r\n\r\n    state = {\r\n        firebase: this.props.firebase,\r\n        firebaseLoadState: false,\r\n    }\r\n\r\n    componentDidMount(){\r\n\r\n        this.props.firebase.auth.onAuthStateChanged((user) => {\r\n            \r\n            if (!this.state.firebaseLoadState){\r\n                if (user){console.log('load'); this.props.dispatch(middlewareLoadUserData(user.uid)); }\r\n                this.setState({...this.state, firebaseLoadState: true});\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    render(){\r\n        let {pathProduction} = this.state;\r\n        console.log(pathProduction);\r\n        if (this.state.firebaseLoadState){\r\n            console.log('app');\r\n        return (\r\n                <Switch>\r\n                    <Route\r\n                        path = {process.env.PUBLIC_URL + pathProduction + '/'} exact\r\n                        render = {(props) => <Index {...props} />}\r\n                    />\r\n                    <Route path = '/Cabinet/' exact component = {Cabinet}/>\r\n                    <Route\r\n                        path = {process.env.PUBLIC_URL + pathProduction + '/Cabinet/About'}\r\n                        render = {(props) => <About {...props} config = {this.props.config} />}\r\n                    />\r\n                    <Route path = {process.env.PUBLIC_URL + pathProduction + '/Cabinet/Build/:param'} component = {Build}/>\r\n                    <Route path = {process.env.PUBLIC_URL + pathProduction + '*'} component = {Index} />\r\n                    <Route path = {process.env.PUBLIC_URL + pathProduction + '/crashPage'} component = {ErrorPage} />\r\n                </Switch>\r\n\r\n        )\r\n        } else return <Loader path = {process.env.PUBLIC_URL + '/img/loading.gif'} type = 'application' />\r\n    }\r\n}\r\n\r\n// const mapStateToProps = (state) => {\r\n//     return {\r\n//       active: state.cabinet.active\r\n//     }\r\n//   }\r\n\r\nexport default connect()(withFirebase(App));","\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\n\nimport ErrorBoundary from './components/ErrorCatch/ErrorBoundary';\nimport {BrowserRouter} from 'react-router-dom';\nimport {Provider} from 'react-redux';\nimport store from './redux/store';\nimport App from './App.jsx';\nimport 'normalize.css';\n\nconst config = require('./config.json');\n\nReactDOM.render(\n        <BrowserRouter>\n            <ErrorBoundary>\n                <Provider store = {store}>\n                    <App config = {config} />\n                </Provider>\n            </ErrorBoundary>\n        </BrowserRouter>,\n        document.getElementById('root')\n);\n\nserviceWorker.register();\n\n"],"sourceRoot":""}