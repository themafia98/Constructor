{"version":3,"sources":["serviceWorker.js","Firebase/firebaseConfig.js","Firebase/Firebase.js","EventEmitter.js","components/ErrorCatch/ErrorPage.jsx","components/ErrorCatch/ErrorBoundary.jsx","redux/actions.js","redux/reducerBuilder.js","redux/reducerCabinet.js","redux/reducers.js","redux/store.js","redux/middleware/loadUserMiddleware.js","Firebase/firebaseContext.js","components/firebaseHOC.jsx","components/loading/Loader.jsx","components/Registration/Registration.jsx","Pages/Index/Index.jsx","redux/middleware/middlewareDelete.js","components/Icon/icon.jsx","components/confirmBox/Confirm.jsx","components/header/Header.jsx","components/imageViewer/imageItem.jsx","components/modalWindow/createProject/createProject.jsx","components/modalWindow/Search/searchModal.jsx","components/modalWindow/ModalWindow.jsx","redux/middleware/createProjectMiddleware.js","components/List/Item.jsx","components/List/List.jsx","components/ProjectsSection/ProjectsSection.jsx","Pages/Cabinet/Cabinet.jsx","components/buildComponents/components/Background.jsx","components/buildComponents/MainBackground/MainBackground.jsx","components/buildComponents/section.jsx","components/buildComponents/components/Input.jsx","components/buildComponents/components/Media.jsx","components/buildComponents/components/Image.jsx","components/buildComponents/components/Text.jsx","components/componentsBuilder/BuilderComponents.jsx","Pages/Production/Production.jsx","Pages/About/About.jsx","redux/middleware/updateMiddleware.js","components/imageViewer/Viewer.jsx","components/instrumentsPanel/MediaTools/MediaInstruments.jsx","components/instrumentsPanel/ImageTools/ImageInstruments.jsx","components/instrumentsPanel/BackgroundTools/BackgroundInstruments.jsx","components/instrumentsPanel/TextTools/TextInstruments.jsx","components/instrumentsPanel/InstrumentsPanel.jsx","components/additionalTools/additionalTools.jsx","components/componentsBuildMenu/BuildMenu.jsx","components/controllers/controllers.jsx","Pages/Build/Build.jsx","App.jsx","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","firebaseConfig","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firebaseInterface","require","Firebase","Object","classCallCheck","this","firebase","auth","db","rules","setPersistence","Auth","Persistence","email","password","signInWithEmailAndPassword","createUserWithEmailAndPassword","signOut","currentUser","stream","EventEmitter","ErrorPage","redirect","update","event","_this","setState","eventEmitter","emit","react_default","a","createElement","react_router","to","class","className","onClick","React","Component","ErrorBoundary","hasError","updateApplication","componentDidMount","on","componentWillUnmount","off","info","ErrorCatch_ErrorPage","props","children","PureComponent","exitProjectAction","type","exit","loadCurrentProjectAction","id","typeProject","sectionsProject","components","loadUpdateCurrentProject","idProject","toConsumableArray","loadUserAction","active","idUser","uid","projects","errorAction","initialState","loadProject","combineReducers","builder","arguments","length","undefined","action","objectSpread","cabinet","map","item","middleware","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","thunk","withExtraArgument","store","createStore","middlewareLogin","_ref2","asyncToGenerator","regenerator_default","mark","_callee","dispatch","getState","_ref","wrap","_context","prev","next","login","response","collection","doc","user","get","docUser","data","message","stop","_x","_x2","_x3","apply","middlewareLogOutUser","_ref6","_callee3","_ref5","_context3","_x7","_x8","_x9","firebaseContext","createContext","withFirebase","Firebase_firebaseContext","Consumer","assign","Loader","_useState","useState","path","slicedToArray","src","alt","emailRef","passwordRef","setRefEmail","node","setRefPassword","createUser","value","Error","set","autoComplete","ref","Index","title","registrationActive","regStatus","wrongEnter","emailImput","passwordImput","statusRegistration","additionalUserInfo","isNewUser","showBox","stopPropagation","authTo","e","components_Registration_Registration","connect","middlewareDeleteProjectComponent","_ref4","_callee2","_ref3","_context2","findProject","find","project","filter","component","idComponent","dataUpdate","abrupt","_x4","_x5","_x6","middlewareDelete","itemdb","Icon","_useState3","_useState5","draggable","Confirm","cbSaveChanges","cbCancelSave","iconPath","CabinetIcon","Header","isChange","redirectConfirm","redirectAbout","redirectA","redirectCabinet","redirectC","confirm","confirmSaveDetectChanges","logOut","pathname","add","componentWillMount","_this2","Fragment","components_confirmBox_Confirm","Icon_icon","withRouter","ImageItem","urls","regular","urlRegular","full","urlFull","_useState7","isFull","_useState9","urlContent","selected","url","iframe","CreateProject","nameLength","warningLengthMin","warningLengthMax","typeClassName","name","onChange","cbValidateName","placeholder","validType","warningType","cbSelectOption","cbAddNewProject","disabled","dissabled","cbCancel","SearchModal","refSearch","createRef","concat","modalSearchMode","current","focus","cbSearch","view","cbMakeImageResultBox","images","loading","menuActive","cbShowImage","cbSetSelectedImage","polyfill","ModalWindow","workMode","buttonSearchDisabled","selectedItem","showUrl","imageBoxView","newProject","validateName","validateType","imageMenuActive","warning","lengthMax","lengthMin","inputSearch","inputSelect","searchData","mode","inages","search","api","isFetch","ok","json","results","searchYouTubeAPI","RAITE","KEY","res","status","arrayItems","items","forEach","push","snippet","thumbnails","high","videoId","showMenuImage","showImage","_this$state$images","target","setSelectedImage","makeImageResultBox","i","imageItem","key","addNewProject","selectOption","inputs","defineProperty","lengthInput","cancel","refSelect","createProject","searchModal","react","middlewareCreateProject","list","lastProject","lastIndex","header","backgroundImage","color","min","max","Math","floor","random","targetSection","productionPath","_useState6","canBuild","setCanBuild","_useState8","canProd","setCanProd","_useState11","_useState13","data-id","List","makeList","List_Item","ProjectsSection","components_List_List","Cabinet","deletItem","getCurrentUser","changeWorkMode","header_Header","modalWindow_ModalWindow","components_ProjectsSection_ProjectsSection","Background","styled","div","_templateObject","width","height","backgroundColor","BackgroundComponent","boxComponent","background","setBgColor","setImage","changeColor","eventItem","colorRGB","setBackgroundImage","useEffect","boxInform","getBoundingClientRect","sectionNumber","size","saveDataParent","onDoubleClick","componentsPatternBackground","componentStats","data-name","MainBackground","editRedy","changeMode","editStart","editComponentName","refSection","refSectionFunc","currentProjectsData","componentJSX","data-class","components_Background","Section","userData","buildComponents_MainBackground_MainBackground","countComponents","sizeParentBox","section","componentsProdJSX","InputComponent","input","attrs","style","zIndex","indexZ","left","coordX","top","coordY","Input_templateObject","Input","istrumentsActive","getSizeBool","shiftCoords","posImage","coords","x","y","startDragNdrop","openImageInstruments","componentsPatternImage","borderRadius","opacity","image","sizeTextValue","saveCoords","nativeEvent","which","element","refInput","cords","right","bottom","clientX","clientY","checkPivotPosition","borderDown","borderRight","delta","trans","transT","move","moveText","xItem","yItem","convertToPercentX","convertToPercentY","toFixed","stopDragNdrop","setCurrentImage","weelResizeText","shiftKey","deltaY","counter","saveSize","refInputComponent","onMouseDown","onMouseMove","onMouseLeave","onMouseUp","onDragStart","onWheel","data-imagecomponentwrapper","WrapperMedia","display","justifyContent","alignItems","padding","Media_templateObject","Media","_templateObject2","MediaComponent","posMedia","drawContent","content","openMediaInstruments","componentsPatternMedia","refMedia","moveMedia","setContent","refMediaComponent","allowfullscreen","WrapperImg","Image_templateObject","w","h","ImageStyle","img","Image_templateObject2","Image","refImage","setWidth","setHeight","changeSizeImage","setBorderRadius","radius","setOpacity","refImageComponent","data-imagecomponent","WrapperText","Text_templateObject","textColor","TextStyle","p","Text_templateObject2","font","TextComponent","isHaveSize","parent","colorText","sizeText","fontSize","position","contentText","openTitleInstruments","componentsPatternText","posText","changeColorText","changeSizeText","eventSize","changeContentText","eventContent","refText","setFont","sectionNum","refTextComponent","data-textcomponent","BuilderComponents","Text","components_Image","components_Media","components_Input","Production","parseInt","params","param","projectEmpty","isLoadComponents","makeProduction","array","_components","prodRef","componentsBuilder_BuilderComponents","patternJSX","mainProductionRef","componentDidUpdate","prevProps","prevState","buildComponents_section","about","developer","year","updateMiddleware","newProjects","JSON","parse","stringify","Viewer","frameBorder","allow","allowFullScreen","MediaInstruments","cbSetSize","defaultValue","cbDelete","ImageInstruments","fileRef","cbSetWidth","cbSetHeight","cbSetBorderRadius","cbSetOpacity","step","cbLoadFile","accept","BackgroundInstruments","componentsStats","hasOwnProperty","cbSetColor","colorPickerActive","lib","onChangeComplete","cbHandleChangeComplete","TextInstruments","instrumentPanel","_content","cbSetFont","cbSetContent","maxLength","InstrumentsPanel","timer","updateSize","closePanel","close","setSize","fontName","setIframeContent","contentValue","updatePosition","setColor","updateBimageStats","handleChangeComplete","rgb","r","g","b","redirectSaveChanges","saveChanges","clearTimeout","setTimeout","deleteComponent","loadFile","files","reader","FileReader","readAsDataURL","onload","result","onerror","makePanelInstruments","TextTools_TextInstruments","BackgroundTools_BackgroundInstruments","ImageTools_ImageInstruments","MediaTools_MediaInstruments","oldProps","oldState","instrumentActive","AdditionalTools","modalViewer","imageViewer_Viewer","modalSearch","instrumentsPanel_InstrumentsPanel","mainBuilderData","BuildMenu","addText","componentsPattern","addBackground","addImage","addMedia","addInput","componentsPatternInput","inputType","addSection","Controllers","viewComponentMenu","shiftX","shiftY","coordsX","coordsY","shadowDisplay","componentMenu","refControll","componentsBuildMenu_BuildMenu","Build","scrollConfig","duration","delay","smooth","offset","modalSearchOn","itemEvent","modeHave","ViewerSwitch","workModeEdit","openInstrument","_componentJSX","addComponentsFromBD","componentsFromDB","mainComponent","addComponent","saveChangesComponent","findCurrentItem","mainRefComponent","addNewSection","moveLocation","count","moveDown","moveUp","scroller","scrollTo","scroll","scrollToTop","showAddSection","controllers","countSection","additionalTools","App","firebaseLoadState","onAuthStateChanged","_this3","exact","render","Pages_Index_Index","Pages_About_About","saveSession","ReactDOM","react_router_dom","ErrorCatch_ErrorBoundary","Provider","es","src_App","document","getElementById","URL","href","origin","addEventListener","fetch","contentType","headers","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"+pBAYMA,EAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DAmCN,SAASC,EAAgBC,EAAOC,GAC9BC,UAAUC,cACPC,SAASJ,GACTK,KAAK,SAAAC,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBG,QACfT,UAAUC,cAAcS,YAI1BC,QAAQC,IACN,iHAKEb,GAAUA,EAAOc,UACnBd,EAAOc,SAAST,KAMlBO,QAAQC,IAAI,sCAGRb,GAAUA,EAAOe,WACnBf,EAAOe,UAAUV,UAO5BW,MAAM,SAAAC,GACLL,QAAQK,MAAM,4CAA6CA,+BClFlDC,EAVQ,CACnBC,OAAQC,0CACRC,WAAYD,oCACZE,YAAaF,2CACbG,UAAWH,oBACXI,cAAeJ,GACfK,kBAAmBL,eACnBM,MAAON,uCCkCIO,GAvCFC,EAAQ,KACHA,EAAQ,KAoCF,eAhCpB,SAAAC,EAAYX,GAAgBY,OAAAC,EAAA,EAAAD,CAAAE,KAAAH,GACxBI,gBAAuBf,GACvBc,KAAKE,KAAOD,SACZD,KAAKG,GAAKF,sEAGFG,GACR,OAAOJ,KAAKE,KAAKG,eAAeJ,OAAcK,KAAKC,YAAYH,kCAG7DI,EAAOC,GACT,IACI,OAAOT,KAAKE,KAAKQ,2BAA2BF,EAAOC,GACrD,MAAOxB,GAEL,OADAL,QAAQK,MAAMA,GACP,2CAIFuB,EAAOC,GAChB,OAAOT,KAAKE,KAAKS,+BAA+BH,EAAOC,qCAIvD,OAAOT,KAAKE,KAAKU,mDAIjB,OAAOZ,KAAKE,KAAKW,qBAID,CAAa3B,yBCrCtB4B,EADA,WAAIC,sBC6BJC,qNAtBXtC,MAAQ,CACJuC,UAAU,KAGdC,OAAS,SAAAC,GACNC,EAAKC,SAAS,CAACJ,UAAU,GACxB,kBAAMK,EAAaC,KAAK,oGAIxB,OAAIvB,KAAKtB,MAAMuC,SAAiBO,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAUC,GAAK,MAE/CJ,EAAAC,EAAAC,cAAA,OAAKG,MAAQ,aACTL,EAAAC,EAAAC,cAAA,OAAKG,MAAQ,eACTL,EAAAC,EAAAC,cAAA,+BACAF,EAAAC,EAAAC,cAAA,UAAQI,UAAY,mBAAmBC,QAAW/B,KAAKkB,QAAvD,mBAjBQc,IAAMC,YCiCbC,6MAjCXxD,MAAQ,CACNyD,UAAU,KASdC,kBAAoB,SAAAjB,GAClBC,EAAKC,SAAS,CAACc,UAAU,OAa3BE,kBAAoB,WAClBf,EAAagB,GAAG,wBAAwBlB,EAAKgB,sBAG/CG,qBAAuB,WACrBjB,EAAakB,IAAI,wBAAwBpB,EAAKgB,qGAf9BnD,EAAOwD,GAExB7D,QAAQK,MAAMA,EAAQ,IAAMwD,oCAI3B,OAAIzC,KAAKtB,MAAMyD,SAAiBX,EAAAC,EAAAC,cAACgB,EAAD,MACzB1C,KAAK2C,MAAMC,4DAjBY3D,GAG9B,OAFEL,QAAQC,IAAII,GAEP,CAAEkD,UAAU,UATGH,IAAMa,8DCU5BC,EAAoB,SAACpE,GACvB,MAAO,CACHqE,KAXa,eAYbC,KAAMtE,IAIRuE,EAA2B,SAACvE,GAC9B,MAAO,CACHqE,KAtBa,eAuBbG,GAAIxE,EAAMwE,GACVC,YAAazE,EAAMyE,YACnBC,gBAAiB1E,EAAM0E,gBACvBC,WAAY3E,EAAM2E,aAIpBC,EAA2B,SAAC5E,GAC9B,MAAO,CACHqE,KAjCoB,sBAkCpBQ,UAAW7E,EAAM6E,UACjBH,gBAAgBtD,OAAA0D,EAAA,EAAA1D,CAAKpB,EAAM0E,iBAC3BC,WAAWvD,OAAA0D,EAAA,EAAA1D,CAAKpB,EAAM2E,cAIxBI,EAAiB,SAAC/E,GACpB,MAAO,CACHqE,KAvCkB,oBAwClBW,QAAQ,EACRC,OAAQjF,EAAMkF,IACd3E,MAAO,GACP4E,SAAUnF,EAAMmF,WAelBC,EAAc,SAACpF,GACjB,MAAO,CACHqE,KA3Dc,gBA4Dd9D,MAAOP,IC/DTqF,EAAe,CACjBC,aAAa,EACbT,UAAW,KACXJ,YAAa,KACbE,WAAY,GACZD,gBAAiB,ICLfW,EAAe,CACjBL,QAAQ,EACRC,OAAQ,KACRE,SAAU,GACV5E,MAAO,MCFIgF,cAAgB,CAC3BC,QFKW,WAAkC,IAAjCxF,EAAiCyF,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAzBJ,EAAcO,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC7C,OAAQC,EAAOvB,MAEX,IDXa,eCYT,OAAOjD,OAAAyE,EAAA,EAAAzE,CAAA,GACApB,EADP,CAEIsF,aAAa,EACbT,UAAWe,EAAOpB,GAClBC,YAAamB,EAAOnB,YACpBE,WAAWvD,OAAA0D,EAAA,EAAA1D,CAAKwE,EAAOjB,YACvBD,gBAAgBtD,OAAA0D,EAAA,EAAA1D,CAAKwE,EAAOlB,mBAIpC,IDvBoB,sBCwBhB,OAAOtD,OAAAyE,EAAA,EAAAzE,CAAA,GACApB,EADP,CAEI2E,WAAWvD,OAAA0D,EAAA,EAAA1D,CAAKwE,EAAOjB,YACvBD,gBAAgBtD,OAAA0D,EAAA,EAAA1D,CAAKwE,EAAOlB,mBAIpC,ID1Ba,eC2BT,OAAIkB,EAAOtB,KACJlD,OAAAyE,EAAA,EAAAzE,CAAA,GACApB,EADP,CAEIsF,aAAa,EACbT,UAAW,KACXJ,YAAa,KACbE,WAAY,KAEJ3E,EAEhB,QAAS,OAAOA,IErCpB8F,QDGW,WAAkC,IAAjC9F,EAAiCyF,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAzBJ,EAAcO,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC7C,OAAOC,EAAOvB,MACV,IFPkB,oBESd,OAAOjD,OAAAyE,EAAA,EAAAzE,CAAA,GACApB,EADP,CAEIgF,OAAQY,EAAOZ,OACfC,OAAQW,EAAOX,OACfE,SAAS/D,OAAA0D,EAAA,EAAA1D,CAAKwE,EAAOT,YAI7B,IFrBe,iBEsBX,OAAO/D,OAAAyE,EAAA,EAAAzE,CAAA,GACApB,EADP,CAEImF,SAAS/D,OAAA0D,EAAA,EAAA1D,CAAKwE,EAAOT,YAI7B,IF3BoB,sBE4BhB,OAAO/D,OAAAyE,EAAA,EAAAzE,CAAA,GACApB,EADP,CAEImF,SAAUnF,EAAMmF,SAASY,IAAI,SAAAC,GAG7B,OAFQA,EAAKxB,KAAOoB,EAAOf,YACnBmB,EAAKrB,WAALvD,OAAA0D,EAAA,EAAA1D,CAAsBwE,EAAOjB,aAC9BqB,MAKf,IFpCgB,kBEqCZ,OAAO5E,OAAAyE,EAAA,EAAAzE,CAAA,GACApB,EADP,CAEIgF,QAAQ,EACRC,OAAQ,KACRE,SAAU,KAIlB,IF3Cc,gBE4CV,OAAO/D,OAAAyE,EAAA,EAAAzE,CAAA,GACApB,EADP,CAEIO,MAAOqF,EAAOrF,QAGtB,QAAS,OAAOP,ME3ClBiG,GALc,kBAAXjH,QACPA,OAAOkH,qCACLlH,OAAOkH,qCAAqC,IACvCC,KAGPC,YAAgBC,IAAMC,kBAAkB,CAAC/E,eAG5BgF,EADDC,YAAYjB,EAAiBU,4BCZrCQ,EAAkB,SAAC3E,EAAMC,GAAP,sBAAA2E,EAAAtF,OAAAuF,EAAA,EAAAvF,CAAAwF,EAAA7D,EAAA8D,KAAoB,SAAAC,EAAOC,EAASC,EAAhBC,GAAA,IAAA1F,EAAA,OAAAqF,EAAA7D,EAAAmE,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAA2B9F,EAA3B0F,EAA2B1F,SAA3B4F,EAAAE,KAAA,EAC9B9F,EAAS+F,MAAMxF,EAAMC,GAC1BrC,KAAK,SAAA6H,GACFhG,EAASE,GAAG+F,WAAW,SAASC,IAAIF,EAASG,KAAKxC,KAAKyC,MACtDjI,KAAK,SAAAkI,GACF,IAAIF,EAAOE,EAAQC,OACnBd,EAAShC,EAAe,CAACG,IAAK0C,EAAQpD,GAAIW,SAAS/D,OAAA0D,EAAA,EAAA1D,CAAKsG,EAAKvC,iBAGpE7E,MAAM,SAACC,GACJL,QAAQK,MAAMA,EAAMuH,SACpBf,EAAS3B,EAAY7E,EAAMuH,YAXK,wBAAAX,EAAAY,SAAAjB,MAApB,gBAAAkB,EAAAC,EAAAC,GAAA,OAAAxB,EAAAyB,MAAA7G,KAAAmE,YAAA,IA2BlB2C,EAAuB,SAAClD,GAAD,sBAAAmD,EAAAjH,OAAAuF,EAAA,EAAAvF,CAAAwF,EAAA7D,EAAA8D,KAAS,SAAAyB,EAAOvB,EAASC,EAAhBuB,GAAA,IAAAhH,EAAA,OAAAqF,EAAA7D,EAAAmE,KAAA,SAAAsB,GAAA,cAAAA,EAAApB,KAAAoB,EAAAnB,MAAA,cAA2B9F,EAA3BgH,EAA2BhH,SAA3BiH,EAAAnB,KAAA,EAC5B9F,EAASW,UACdxC,KAAM,SAAA6H,GACHR,ELqBG,CACH1C,KAnDgB,kBAoDhBW,QAAQ,EACRC,OAAQ,KACR1E,MAAO,GACP4E,SAAU,OKxBb7E,MAAM,SAACC,GACJL,QAAQK,MAAMA,EAAMuH,SACpBf,EAAS3B,EAAY7E,EAAMuH,YAPG,wBAAAU,EAAAT,SAAAO,MAAT,gBAAAG,EAAAC,EAAAC,GAAA,OAAAN,EAAAF,MAAA7G,KAAAmE,YAAA,IC1BdmD,EADStF,IAAMuF,cAActH,GCW7BuH,EATM,SAAAvF,GAAS,OAAI,SAAAU,GAC1B,OACInB,EAAAC,EAAAC,cAAC+F,EAAgBC,SAAjB,KACK,SAAAzH,GAAQ,OAAIuB,EAAAC,EAAAC,cAACO,EAADnC,OAAA6H,OAAA,GAAehF,EAAf,CAAsB1C,SAAYA,iBCLhD2H,EAAA,SAASjF,GAAO,IAAAkF,EACZC,mBAASnF,EAAMoF,KAAOpF,EAAMoF,KAAO,oBAA3CA,EADoBjI,OAAAkI,EAAA,EAAAlI,CAAA+H,EAAA,MAE3B,OACQrG,EAAAC,EAAAC,cAAA,OAAKI,UAAY,aACbN,EAAAC,EAAAC,cAAA,OAAKI,UAAY,SAASmG,IAAOF,EAAMG,IAAM,WAC7C1G,EAAAC,EAAAC,cAAA,oBAAYiB,EAAMI,QCmEnByE,uNA5DX9I,MAAQ,CACJuB,SAAUmB,EAAKuB,MAAM1C,SACrBhB,MAAO,QAGXkJ,SAAW,OACXC,YAAc,OAEdC,YAAc,SAACC,GAAD,OAAUlH,EAAK+G,SAAWG,KACxCC,eAAiB,SAACD,GAAD,OAAUlH,EAAKgH,YAAcE,KAE9CE,WAAa,SAAArH,GAET,IAAMX,EAAQY,EAAK+G,SAAW/G,EAAK+G,SAASM,MAAQ,KAC9ChI,EAAWW,EAAKgH,YAAchH,EAAKgH,YAAYK,MAAQ,KACrDxI,EAAamB,EAAKuB,MAAlB1C,SAER,IAAIQ,IAAYD,EAaV,OAAOY,EAAKC,SAAS,CAACpC,MAAO,sBAZnCgB,EAAS5B,aAAamC,EAAOC,GAC5BrC,KAAK,SAAA6H,GACF,IAAKA,EAAU,MAAM,IAAIyC,MAAM,sBAC/BzI,EAASE,GAAG+F,WAAW,SAASC,IAAIF,EAASG,KAAKxC,KAAK+E,IAAI,CACvD9E,SAAY,GACZrD,MAASA,IACVpC,KAAK,kBAAMkD,EAAaC,KAAK,2BAA4B0E,OAE/DjH,MAAM,SAACC,GACRL,QAAQK,MAAMA,EAAMuH,SACpBpF,EAAKC,SAAS,CAACpC,MAAOA,EAAMuH,qFAKxB,IACGvH,EAAUe,KAAKtB,MAAfO,MACP,OACIuC,EAAAC,EAAAC,cAAA,OAAKI,UAAY,mBACbN,EAAAC,EAAAC,cAAA,OAAMI,UAAY,oBACdN,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAA,QAAMkH,aAAe,MAAM9G,UAAY,WACjC7C,EACEuC,EAAAC,EAAAC,cAAA,KAAGI,UAAY,SAAS7C,GACtB,KAENuC,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,SAAOmH,IAAO7I,KAAKqI,YAAatF,KAAO,SACvCvB,EAAAC,EAAAC,cAAA,wBACAF,EAAAC,EAAAC,cAAA,SAAOI,UAAY,WAAW8G,aAAe,MAAMC,IAAO7I,KAAKuI,eAAgBxF,KAAO,aACtFvB,EAAAC,EAAAC,cAAA,SAAOK,QAAW/B,KAAKwI,WACf1G,UAAY,cACZiB,KAAO,SACP0F,MAAQ,2BAzDbzG,IAAMa,iBCM3BiG,qNAYFpK,MAAQ,CACJqK,MAAQ,cACRC,oBAAoB,EACpBC,WAAW,EACXC,YAAY,EACZjK,MAAO,MAGXkK,WAAa,OACbC,cAAgB,OAEhBC,mBAAqB,SAAAlI,GACjBA,EAAMmI,mBAAmBC,UACrBnI,EAAKC,SAALvB,OAAAyE,EAAA,EAAAzE,CAAA,GACOsB,EAAK1C,MADZ,CAEIuK,WAAW,EACXD,oBAAoB,EACpB/J,MAAO,qBAEbL,QAAQK,MAAM,yBAGpBuK,QAAU,SAAArI,GACNC,EAAKC,SAALvB,OAAAyE,EAAA,EAAAzE,CAAA,GACOsB,EAAK1C,MADZ,CAEAsK,oBAAoB5H,EAAK1C,MAAMsK,sBAE/B7H,EAAMsI,qBAGVC,OAAS,SAAAvI,GACGC,EAAK+H,YAAc/H,EAAKgI,eAC5BhI,EAAKuB,MAAM8C,SAASN,EAAgB/D,EAAK+H,WAAWV,MAAOrH,EAAKgI,cAAcX,QAC9EtH,EAAMsI,qBAGdtB,SAAW,SAAAG,GAAI,OAAIlH,EAAK+H,WAAab,KACrCF,YAAc,SAAAE,GAAI,OAAIlH,EAAKgI,cAAgBd,KA6C3CjG,kBAAoB,SAACsH,GACjBrI,EAAagB,GAAG,2BAA4BlB,EAAKiI,uBAErD9G,qBAAuB,SAACoH,GACpBrI,EAAakB,IAAI,2BAA4BpB,EAAKiI,6FA7ClD,OAAIrJ,KAAK2C,MAAMe,OAAelC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAUC,GAAO,aACrC5B,KAAK2C,MAAMe,OAqCNlC,EAAAC,EAAAC,cAACkG,EAAD,CAAQG,KAAO,mBAAmBhF,KAAO,YAnChDvB,EAAAC,EAAAC,cAAA,OAAKI,UAAY,yBACTN,EAAAC,EAAAC,cAAA,UAAK1B,KAAKtB,MAAMqK,OAChBvH,EAAAC,EAAAC,cAAA,OAAKI,UAAY,YACbN,EAAAC,EAAAC,cAAA,OAAKI,UAAY,aACbN,EAAAC,EAAAC,cAAA,0BAEI1B,KAAK2C,MAAMuG,YAAclJ,KAAKtB,MAAMuK,UACpCzH,EAAAC,EAAAC,cAAA,KAAGI,UAAY,SAAS9B,KAAK2C,MAAMuG,YACjC,KAEN1H,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAA,SAAOmH,IAAO7I,KAAKmI,SAAUpF,KAAO,SACpCvB,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,SAAOmH,IAAO7I,KAAKoI,YAAarF,KAAO,aACvCvB,EAAAC,EAAAC,cAAA,SACIK,QAAW/B,KAAK0J,OAChB5H,UAAY,yBACZiB,KAAO,SACP0F,MAAQ,UACZjH,EAAAC,EAAAC,cAAA,SACIK,QAAW/B,KAAKwJ,QAChB1H,UAAa9B,KAAKtB,MAAMsK,mBAAX,oCAC6B,2BAC1CjG,KAAO,SACP0F,MAAQ,mBAKhBzI,KAAKtB,MAAMsK,mBACXxH,EAAAC,EAAAC,cAACkI,EAAD,MACE,aAvFV5H,IAAMa,gBA6GXgH,cAPS,SAACnL,GACrB,MAAO,CACHgF,OAAQhF,EAAM8F,QAAQd,OACtBwF,WAAYxK,EAAM8F,QAAQvF,QAInB4K,CAAyBf,GCpGlCgB,EAAmC,SAAApF,GAAI,sBAAAqF,EAAAjK,OAAAuF,EAAA,EAAAvF,CAAAwF,EAAA7D,EAAA8D,KAAI,SAAAyE,EAAOvE,EAAUC,EAAjBuE,GAAA,IAAAhK,EAAA,OAAAqF,EAAA7D,EAAAmE,KAAA,SAAAsE,GAAA,cAAAA,EAAApE,KAAAoE,EAAAnE,MAAA,cAA4B9F,EAA5BgK,EAA4BhK,SAA5BiK,EAAAnE,KAAA,EACvC9F,EAASE,GAAG+F,WAAW,SAASC,IAAIzB,EAAKd,KAAKyC,MACnDjI,KAAK,SAAAgI,GAAI,OAAIA,EAAKG,SAClBnI,KAAK,SAAAmI,GACF,IACM4D,EADYrK,OAAA0D,EAAA,EAAA1D,CAAOyG,EAAK1C,UACGuG,KAAK,SAAAC,GAAO,OAAI3F,EAAKxB,KAAOmH,EAAQnH,KACrE,IAAKiH,EAAa,MAAM,IAAIzB,MAAM,oBAIlC,OAHAyB,EAAY9G,WAAa8G,EAAY9G,WAAWiH,OAAO,SAAAC,GAAS,OAC5DA,EAAUrH,KAAOwB,EAAK8F,cAEnB,CAACC,WAAYlE,EAAM4D,YAAaA,KAE1C/L,KAAK,SAAAmI,GAAQ,IACLkE,EAAclE,EAAdkE,WACAN,EAAe5D,EAAf4D,YACLlK,EAASE,GAAG+F,WAAW,SAASC,IAAIzB,EAAKd,KAAK1C,OAAO,CACjD2C,SAAY4G,EAAW5G,WAE1BzF,KAAK,SAAA6H,GACFR,EAASnC,EAAyB,CAC9BD,WAAWvD,OAAA0D,EAAA,EAAA1D,CAAKqK,EAAY9G,YAC5BE,UAAWmB,EAAKxB,GAChBE,gBAAgBtD,OAAA0D,EAAA,EAAA1D,CAAK4E,EAAKtB,wBAIrCpE,MAAM,SAAAC,GAGH,OAFAL,QAAQK,MAAMA,EAAMuH,SACpBf,EAAS3B,EAAY7E,EAAMuH,UACpB,OA7BkC,cAAA0D,EAAAQ,OAAA,SAgCtChG,EAAK8F,aAhCiC,wBAAAN,EAAAzD,SAAAuD,MAAJ,gBAAAW,EAAAC,EAAAC,GAAA,OAAAd,EAAAlD,MAAA7G,KAAAmE,YAAA,IAoC9B2G,EAxDU,SAAApG,GAAI,sBAAAU,EAAAtF,OAAAuF,EAAA,EAAAvF,CAAAwF,EAAA7D,EAAA8D,KAAI,SAAAC,EAAOC,EAASC,EAAhBC,GAAA,IAAA1F,EAAA,OAAAqF,EAAA7D,EAAAmE,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAA2B9F,EAA3B0F,EAA2B1F,SAA3B4F,EAAAE,KAAA,EACvB9F,EAASE,GAAG+F,WAAW,SAASC,IAAIzB,EAAKd,KAAKyC,MACnDjI,KAAK,SAAAgI,GAAI,OAAIA,EAAKG,SAClBnI,KAAK,SAAAmI,GACF,MAAO,CAACrD,GAAIqD,EAAKrD,GAAIW,SAAU0C,EAAK1C,SAASyG,OAAO,SAAAS,GAAM,OAAIA,EAAO7H,KAAOwB,EAAKxB,QAEpF9E,KAAK,SAAAmI,GACFtG,EAASE,GAAG+F,WAAW,SAASC,IAAIzB,EAAKd,KAAK1C,OAAO,CACjD2C,SAAY0C,EAAK1C,WAEpBzF,KAAK,SAAA6H,GACFR,EAAShC,EAAe,CAACG,IAAK2C,EAAKrD,GAAIW,SAAU0C,EAAK1C,gBAG7D7E,MAAM,SAACC,GACJL,QAAQK,MAAMA,EAAMuH,SACpBf,EAAS3B,EAAY7E,EAAMuH,YAhBF,wBAAAX,EAAAY,SAAAjB,MAAJ,gBAAAkB,EAAAC,EAAAC,GAAA,OAAAxB,EAAAyB,MAAA7G,KAAAmE,YAAA,kBCiBd6G,MAhBf,SAAcrI,GAAM,IAAAkF,EACDC,mBAASnF,EAAMoF,MAAvBA,EADSjI,OAAAkI,EAAA,EAAAlI,CAAA+H,EAAA,MAAAoD,EAEInD,mBAASnF,EAAMb,UAAYa,EAAMb,UAAY,MAA1DA,EAFShC,OAAAkI,EAAA,EAAAlI,CAAAmL,EAAA,MAAAC,EAGIpD,qBAASnF,EAAMwI,WAA5BA,EAHSrL,OAAAkI,EAAA,EAAAlI,CAAAoL,EAAA,MAKhB,OACA1J,EAAAC,EAAAC,cAAA,OACIyJ,UAAaA,EACbpJ,QAAWY,EAAMZ,QAAUY,EAAMZ,QAAU,KAC3CD,UAAaA,EACbiH,MAASpG,EAAMoG,MAAQpG,EAAMoG,MAAQ,KACrCd,IAAO7I,eAAyB2I,EAAOG,IAAM,UCYtCkD,UAvBC,SAAAzI,GAEZ,OACInB,EAAAC,EAAAC,cAAA,OAAKI,UAAY,kBACbN,EAAAC,EAAAC,cAAA,OAAKI,UAAY,eACbN,EAAAC,EAAAC,cAAA,oCACAF,EAAAC,EAAAC,cAAA,SACII,UAAY,aACZC,QAAWY,EAAM0I,cACjBtI,KAAO,SACP0F,MAAQ,iBAEZjH,EAAAC,EAAAC,cAAA,SACII,UAAY,eACZC,QAAWY,EAAM2I,aACjBvI,KAAO,SACP0F,MAAQ,eCPtB8C,EAAW3L,EAAQ,KAAqB4L,YAExCC,8MAUF/M,MAAQ,CACJqK,MAAO3H,EAAKuB,MAAMoG,MAClB2C,UAAU,EACVC,iBAAiB,EACjBC,cAAe,CACX7D,KAAO,iBACP8D,WAAW,GAEfC,gBAAiB,CACb/D,KAAO,WACPgE,WAAW,MAInBC,QAAU,SAAA7K,GACNC,EAAKC,SAAS,CAACqK,SAAUvK,OAG7B8K,yBAA2B,SAAA9K,GACvBG,EAAaC,KAAK,4BAClBH,EAAKC,SAAS,CACVsK,iBAAiB,EACjBG,gBAAgBhM,OAAAyE,EAAA,EAAAzE,CAAA,GACTsB,EAAK1C,MAAMoN,gBADH,CAEXC,WAAW,SAKvBG,OAAS,SAAA/K,GACDC,EAAKuB,MAAMgB,QACXvC,EAAKuB,MAAM8C,SAASqB,EAAqB1F,EAAKuB,MAAMgB,SACxDxC,EAAMsI,qBAGVmC,cAAgB,SAAAzK,GACGC,EAAKuB,MAAMhF,SAASwO,WAAa/K,EAAK1C,MAAMkN,cAAc7D,OAC1D3G,EAAK1C,MAAMgN,SACvBtK,EAAKC,SAAS,CACTsK,iBAAiB,EACjBC,cAAc9L,OAAAyE,EAAA,EAAAzE,CAAA,GACRsB,EAAK1C,MAAMkN,cADJ,CAEVC,WAAW,MAGdzK,EAAKC,SAAS,CAACsK,iBAAiB,IACxCxK,EAAMsI,qBAGVqC,gBAAkB,SAAA3K,GACA,eAAVA,GACeC,EAAKuB,MAAMhF,SAASwO,WAAa/K,EAAK1C,MAAMoN,gBAAgB/D,OAC5D3G,EAAK1C,MAAMgN,SAC1BtK,EAAKC,SAAS,CACVsK,iBAAiB,EACjBG,gBAAgBhM,OAAAyE,EAAA,EAAAzE,CAAA,GACTsB,EAAK1C,MAAMoN,gBADH,CAEXC,WAAW,MAGd3K,EAAKC,SAAS,CAACsK,iBAAiB,IACrCxK,EAAMsI,mBAEHrI,EAAKC,SAAS,CACjBsK,iBAAiB,EACjBG,gBAAgBhM,OAAAyE,EAAA,EAAAzE,CAAA,GACTsB,EAAK1C,MAAMoN,gBADH,CAEXC,WAAW,SAKvBK,IAAM,SAAAjL,GACFG,EAAaC,KAAK,sBAAsB,CAAC+C,OAAQ,eACjDnD,EAAMsI,qBAgDV4C,mBAAqB,WACjB/K,EAAagB,GAAG,uBAAwBlB,EAAK4K,YAGjDzJ,qBAAuB,WACnBjB,EAAakB,IAAI,uBAAwBpB,EAAK4K,kFAlD1C,IAAAM,EAAAtM,KACC6L,EAAa7L,KAAKtB,MAAMkN,cAAxBC,UACAE,EAAa/L,KAAKtB,MAAMoN,gBAAxBC,UAEL,OAAIF,EAAkBrK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAUC,GAAM5B,KAAKtB,MAAMkN,cAAc7D,OAC5DgE,EAAkBvK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAUC,GAAM5B,KAAKtB,MAAMoN,gBAAgB/D,OAG5DvG,EAAAC,EAAAC,cAACF,EAAAC,EAAM8K,SAAP,KACCvM,KAAKtB,MAAMgN,UAAY1L,KAAKtB,MAAMiN,gBAC/BnK,EAAAC,EAAAC,cAAC8K,EAAD,CACInB,cAAiBrL,KAAKiM,yBACtBX,aAAgB,kBAAMgB,EAAKR,gBAAgB,iBAC1C,KACLtK,EAAAC,EAAAC,cAAA,cACIF,EAAAC,EAAAC,cAAA,OAAKI,UAAY,aACbN,EAAAC,EAAAC,cAAA,OAAKI,UAAY,YACTN,EAAAC,EAAAC,cAAA,OAAKK,QAAW/B,KAAK8L,gBAAiBhK,UAAY,uBAC9CN,EAAAC,EAAAC,cAAC+K,EAAD,CAAM3K,UAAW,WAAWiG,KAAQwD,IACpC/J,EAAAC,EAAAC,cAAA,MAAII,UAAY,YAAY9B,KAAKtB,MAAMqK,QAET,aAAjC/I,KAAK2C,MAAMhF,SAASwO,SACjB3K,EAAAC,EAAAC,cAAA,OAAKK,QAAW/B,KAAKoM,IAAKtK,UAAY,iCAClCN,EAAAC,EAAAC,cAAC+K,EAAD,CAAM3K,UAAY,UAAUiG,KAAO,mBAErC,KAEFvG,EAAAC,EAAAC,cAAA,OAAMI,UAAY,aACdN,EAAAC,EAAAC,cAAC+K,EAAD,CAAM3K,UAAY,QAAQC,QAAW/B,KAAK4L,cACtC7C,MAAQ,QACRhB,KAAO,wBAEXvG,EAAAC,EAAAC,cAAC+K,EAAD,CAAM3K,UAAY,eACdC,QAAW/B,KAAKkM,OAChBnD,MAAQ,SACRhB,KAAO,gCA1H9B/F,IAAMC,WA6IZ4H,iBAAU6C,YAAWjB,mCChIrBkB,GAzBG,SAAAhK,GAAS,IAAAkF,EAEVC,mBAASnF,EAAMO,IAArBA,EAFgBpD,OAAAkI,EAAA,EAAAlI,CAAA+H,EAAA,MAAAoD,EAGFnD,mBAASnF,EAAMiK,KAAKC,SAAlCC,EAHgBhN,OAAAkI,EAAA,EAAAlI,CAAAmL,EAAA,MAAAC,EAILpD,mBAASnF,EAAMiK,KAAKG,MAA/BC,EAJgBlN,OAAAkI,EAAA,EAAAlI,CAAAoL,EAAA,MAAA+B,EAKNnF,mBAASnF,EAAMuK,QAAzBA,EALgBpN,OAAAkI,EAAA,EAAAlI,CAAAmN,EAAA,MAAAE,EAMFrF,mBAASnF,EAAMyK,YAA7BA,EANgBtN,OAAAkI,EAAA,EAAAlI,CAAAqN,EAAA,MAavB,OACI3L,EAAAC,EAAAC,cAAA,OAAKI,UAAaa,EAAM0K,SAAW,mBAAqB,WACpD7L,EAAAC,EAAAC,cAAA,OACII,UAAY,YACZC,QATU,SAAAZ,GACnBG,EAAaC,KAAK,qBAAsB,CAAC2B,GAAIA,EAAIoK,IAAKR,EAAYE,QAASA,EAASO,OAAQH,KASnFnF,IAAOiF,EAASF,EAAUF,EAC1B5E,IAAM,WCkBPsF,GAtCO,SAAA7K,GAElB,OACAnB,EAAAC,EAAAC,cAAA,OAAKI,UAAY,SACbN,EAAAC,EAAAC,cAAA,gCACEiB,EAAM8K,YAAc,EAClBjM,EAAAC,EAAAC,cAAA,QAAMI,UAAY,WAAWa,EAAM+K,kBAA2B,KAEhE/K,EAAM8K,YAAc,GAClBjM,EAAAC,EAAAC,cAAA,QAAMI,UAAY,WAAWa,EAAMgL,kBAA2B,KAElEnM,EAAAC,EAAAC,cAAA,SACII,UAAaa,EAAMiL,cAAgB,QAAU,QAC7CnF,MAAS9F,EAAMkL,KACfC,SAAYnL,EAAMoL,eAClBhL,KAAO,OACPiL,YAAc,iBAEfrL,EAAMsL,UACoD,KAAzDzM,EAAAC,EAAAC,cAAA,QAAMI,UAAY,WAAWa,EAAMuL,aAEvC1M,EAAAC,EAAAC,cAAA,UAAQoM,SAAYnL,EAAMwL,gBACtB3M,EAAAC,EAAAC,cAAA,UAAQ+G,MAAQ,SAAhB,YACAjH,EAAAC,EAAAC,cAAA,UAAQ+G,MAAQ,WAAhB,WACAjH,EAAAC,EAAAC,cAAA,UAAQ+G,MAAQ,aAAhB,cAEJjH,EAAAC,EAAAC,cAAA,SACIK,QAAWY,EAAMyL,gBACjBtM,UAAY,eACZuM,SAAY1L,EAAM2L,UAClBvL,KAAO,SACP0F,MAAQ,WAEZjH,EAAAC,EAAAC,cAAA,SAAOK,QAAWY,EAAM4L,SAAUxL,KAAM,SAAS0F,MAAQ,aCkBlD+F,GAlDK,SAAA7L,GAEhB,IAAM8L,EAAYzM,IAAM0M,YAUxB,OAEIlN,EAAAC,EAAAC,cAACF,EAAAC,EAAM8K,SAAP,KACI/K,EAAAC,EAAAC,cAAA,OAAKI,UAAY,sBACjBN,EAAAC,EAAAC,cAAA,oBAAAiN,OAAehM,EAAMiM,kBACnBjM,EAAM1D,MACJuC,EAAAC,EAAAC,cAAA,QAAMI,UAAY,SAASa,EAAM1D,OAAgB,KAEjDuC,EAAAC,EAAAC,cAAA,SAAOmH,IAAO4F,EAAW1L,KAAO,OAAOiL,YAAc,SACjDxM,EAAAC,EAAAC,cAAA,SACI2M,SAAY1L,EAAM2L,UAClBxM,UAAY,eACZiB,KAAO,SACP0F,MAAQ,SACR1G,QAtBL,SAAAZ,GACX,IAAIsH,EACJgG,EAAUI,QAAQC,QAClBrG,EAAQgG,EAAUI,QAAQpG,MAE1B9F,EAAMoM,SAAS5N,EAAMsH,EAAM9F,EAAMiM,iBACjCzN,EAAMsI,qBAkBEjI,EAAAC,EAAAC,cAAA,SAAOK,QAAWY,EAAM4L,SAAUxL,KAAM,SAAS0F,MAAQ,WAC7DjH,EAAAC,EAAAC,cAAA,OAAKI,UAAY,mBACZa,EAAMqM,KAAOrM,EAAMsM,qBAANnP,OAAA0D,EAAA,EAAA1D,CAA+B6C,EAAMuM,SAAW,KAC7DvM,EAAMwM,QAAU3N,EAAAC,EAAAC,cAACkG,EAAD,CAAQ7E,KAAO,WAAc,OAGnDJ,EAAMyM,WACL5N,EAAAC,EAAAC,cAAA,OAAKI,UAAY,qBACjBN,EAAAC,EAAAC,cAAA,UAAQK,QAAWY,EAAM0M,YAAavN,UAAY,2BAC9CN,EAAAC,EAAAC,cAAC+K,EAAD,CAAM1E,KAAO,mBAEjBvG,EAAAC,EAAAC,cAAA,UAAQK,QAAWY,EAAM2M,mBAAoBxN,UAAY,+BACrDN,EAAAC,EAAAC,cAAC+K,EAAD,CAAM1E,KAAO,wBAGf,cClCdnI,EAAQ,KAAe2P,eAuSRC,8MA9RX9Q,MAAQ,CACJ+Q,SAAUrO,EAAKuB,MAAM8M,SACrBP,OAAQ,CACJC,SAAS,EACTO,sBAAsB,EACtBC,aAAc,KACdC,QAAS,KACTV,OAAQ,KACRlC,QAAS,KACT6C,cAAc,EACdtC,OAAQ,KACRtO,MAAO,IAEX6Q,WAAY,CACRC,cAAc,EACdC,cAAc,EACd3B,UAAU,EACVR,KAAM,GACN9K,KAAM,SAEVkN,iBAAiB,EACjBC,QAAS,CACLC,UAAW,yBACXC,UAAW,uBACXrN,KAAM,6BAIdsN,YAAc,OACdC,YAAc,OAEdC,WAAa,SAACpP,EAAMsH,EAAO+H,GAEvBpP,EAAKC,SAALvB,OAAAyE,EAAA,EAAAzE,CAAA,GAAkBsB,EAAK1C,MAAvB,CACIwQ,OAAOpP,OAAAyE,EAAA,EAAAzE,CAAA,GACAsB,EAAK1C,MAAM+R,OADZ,CAEFtB,SAAS,EACTO,sBAAsB,OAI9B,IAAIgB,EAAS,KAIb,GAHWA,EAAPjI,GACUrH,EAAKiP,YAAY5H,MAElB,UAAT+H,EAAiB,CACrB,IACMG,EAAG,4BAAAhC,OADO,4CAGhBiC,KAAO,GAAAjC,OAAIgC,EAAMD,EAAV,eAAA/B,OAA8BvP,qEACpChB,KAAK,SAAA6H,GACF,GAAIA,EAAS4K,GAAI,OAAO5K,EAAS6K,OAC5B,MAAM,IAAIpI,MAAM,qBAExBtK,KAAK,SAAA6H,GAAY,IACT8K,EAAW9K,EAAX8K,QACL,IAAIA,EAAQ3M,OAYP,MAAM,IAAIsE,MAAM,oBAXrBtH,EAAKC,SAALvB,OAAAyE,EAAA,EAAAzE,CAAA,GACOsB,EAAK1C,MADZ,CAEIwQ,OAAOpP,OAAAyE,EAAA,EAAAzE,CAAA,GACAsB,EAAK1C,MAAMwQ,OADZ,CAEFC,SAAS,EACTU,cAAc,EACd5Q,MAAO,GACPiQ,OAAOpP,OAAA0D,EAAA,EAAA1D,CAAKiR,GACZrB,sBAAsB,SAKjC1Q,MAAM,SAAAC,GACHL,QAAQK,MAAMA,EAAMuH,SACpBpF,EAAKC,SAALvB,OAAAyE,EAAA,EAAAzE,CAAA,GACOsB,EAAK1C,MADZ,CAEIwQ,OAAOpP,OAAAyE,EAAA,EAAAzE,CAAA,GACAsB,EAAK1C,MAAMwQ,OADZ,CAEFQ,sBAAsB,EACtBP,SAAS,EACTlQ,MAAOA,EAAMuH,UACjBqJ,cAAc,YAGfzO,EAAK4P,iBAAiBN,MAIjCM,iBAAmB,SAACN,GAEhB,IACMO,EAAK,+BAAAtC,OAAkC+B,GACvCQ,EAAG,QAAAvC,OAAWvP,2CACpBwR,KAHS,4DAGKK,EAAQC,GACrB9S,KAAK,SAAA+S,GACF,GAAIA,EAAIN,GACR,OAAOM,EAAIL,OACN,MAAM,IAAIpI,MAAJ,SAAAiG,OAAoBwC,EAAIC,WAEtChT,KAAK,SAAA+S,GACF,IAAME,EAAa,GAOnB,OANAF,EAAIG,MAAMC,QAAQ,SAAA7M,GACd2M,EAAWG,KAAK,CACZ5E,KAAM,CAAEC,QAASnI,EAAK+M,QAAQC,WAAWC,KAAKrE,KAC9CsE,QAASlN,EAAKxB,GAAG0O,YAGlBP,IAEVjT,KAAK,SAAA2S,GACF3P,EAAKC,SAALvB,OAAAyE,EAAA,EAAAzE,CAAA,GACOsB,EAAK1C,MADZ,CAEIwQ,OAAOpP,OAAAyE,EAAA,EAAAzE,CAAA,GACAsB,EAAK1C,MAAMwQ,OADZ,CAEFC,SAAS,EACTU,cAAc,EACd5Q,MAAO,GACPiQ,OAAOpP,OAAA0D,EAAA,EAAA1D,CAAKiR,GACZrB,sBAAsB,SAIjC1Q,MAAM,SAAAC,GAAK,OAAIL,QAAQK,MAAMA,QAGlC4S,cAAgB,SAAA1Q,GACZC,EAAKC,SAALvB,OAAAyE,EAAA,EAAAzE,CAAA,GACOsB,EAAK1C,MADZ,CAEIuR,iBAAiB,EACjBf,OAAOpP,OAAAyE,EAAA,EAAAzE,CAAA,GACAsB,EAAK1C,MAAMwQ,OADZ,CAEFS,aAAcxO,EAAM+B,GACpB0M,QAASzO,EAAMmM,IACfN,QAAS7L,EAAM6L,QACfO,OAAQpM,EAAMoM,eAM1BuE,UAAY,SAAA3Q,GAAS,IAAA4Q,EAES3Q,EAAK1C,MAAMwQ,OAA9BU,EAFUmC,EAEVnC,QAASrC,EAFCwE,EAEDxE,OAEhBjM,EAAaC,KAAK,YAAa,CAC3B+C,QAAQ,EACR0N,OAAQpC,GAAoB,KAC5BrC,OAAQA,EACRiD,KAAMpP,EAAKuB,MAAMiM,kBAErBzN,EAAMsI,qBAGVwI,iBAAmB,SAAA9Q,GAEf,IAAIoF,EAAIzG,OAAAyE,EAAA,EAAAzE,CAAA,GAAOsB,EAAK1C,MAAMwQ,QACS,eAA/B9N,EAAKuB,MAAMiM,iBACXtN,EAAaC,KAAb,0BAAAoN,OAA4CvN,EAAKuB,MAAM6H,aAAcjE,GACrEjF,EAAaC,KAAb,+BAAiD,CAAC2N,OAAQ3I,EAAMiK,KAAMpP,EAAKuB,MAAMiM,mBAC3C,UAA/BxN,EAAKuB,MAAMiM,iBAClBtN,EAAaC,KAAb,uBAAAoN,OAAyCvN,EAAKuB,MAAM6H,aAAejE,GACnEjF,EAAaC,KAAb,+BAAkD,CAAC2N,OAAQ3I,EAAOiK,KAAMpP,EAAKuB,MAAMiM,mBAC7C,UAA/BxN,EAAKuB,MAAMiM,kBAClBtN,EAAaC,KAAb,uBAAAoN,OAAyCvN,EAAKuB,MAAM6H,aAAc,CAC1D+C,OAAQhH,EAAKgH,OACbiD,KAAMpP,EAAKuB,MAAMiM,kBAGzBtN,EAAaC,KAAb,iBAAoC,CAACgM,OAAQhH,EAAKgH,UAGtDpM,EAAMsI,qBAGVyI,mBAAqB,SAACZ,GAClB,OAAKA,EAEEA,EAAM7M,IAAI,SAACC,EAAKyN,GACpB,OAAO3Q,EAAAC,EAAAC,cAAC0Q,GAAD,CACFC,IAAG,OAAA1D,OAAWwD,GACdjP,GAAMiP,EACN/E,WAAc1I,EAAKkN,QAAUlN,EAAKkN,QAAU,KAC5CvE,SAAYjM,EAAK1C,MAAMwQ,OAAOS,eAAiBwC,EAC/CjF,QAAU,EACVN,KAAI9M,OAAAyE,EAAA,EAAAzE,CAAA,GAAQ4E,EAAKkI,UATN,QAcvB0F,cAAgB,SAAAnR,GACZ,IAAIqP,EAAOpP,EAAK1C,MAAM0C,EAAK1C,MAAM+Q,UAC7Be,EAAKR,cAAiBQ,EAAKT,eAC3BzO,EAAaC,KAAK,kBAClB,CACIwH,MAAO3H,EAAK1C,MAAM0C,EAAK1C,MAAM+Q,UAAU5B,KACvC9K,KAAM3B,EAAK1C,MAAM0C,EAAK1C,MAAM+Q,UAAU1M,OAG1CzB,EAAaC,KAAK,sBAAsB,CAAC+C,OAAQ,gBAIzDiO,aAAe,SAAApR,GAEX,IAAIqR,EAAM1S,OAAAyE,EAAA,EAAAzE,CAAA,GAAOsB,EAAK1C,MAAM0C,EAAK1C,MAAM+Q,WACvC+C,EAAOzP,KAAO5B,EAAM6Q,OAAOvJ,MAC3B+J,EAAOxC,aAA+B,UAAhBwC,EAAOzP,KAC7ByP,EAAOnE,UAAWmE,EAAOxC,eAAgBwC,EAAOzC,aAChD3O,EAAKC,SAALvB,OAAAyE,EAAA,EAAAzE,CAAA,GACOsB,EAAK1C,MADZoB,OAAA2S,GAAA,EAAA3S,CAAA,GAEKsB,EAAK1C,MAAM+Q,SAAW+C,QAI/BzC,aAAe,SAAA5O,GAEX,IAAIqR,EAAM1S,OAAAyE,EAAA,EAAAzE,CAAA,GAAOsB,EAAK1C,MAAM0C,EAAK1C,MAAM+Q,WACvC+C,EAAO3E,KAAO1M,EAAM6Q,OAAOvJ,MAC3B,IAAIiK,EAAcF,EAAO3E,KAAKzJ,OAC9BoO,EAAOzC,aAAe2C,GAAe,GAAKA,EAAc,GACxDF,EAAOnE,UAAWmE,EAAOxC,eAAgBwC,EAAOzC,aAEhD3O,EAAKC,SAALvB,OAAAyE,EAAA,EAAAzE,CAAA,GACOsB,EAAK1C,MADZoB,OAAA2S,GAAA,EAAA3S,CAAA,GAEKsB,EAAK1C,MAAM+Q,SAAW+C,QAI/BG,OAAS,SAAAxR,GAEuB,WAAxBC,EAAK1C,MAAM+Q,SACXnO,EAAaC,KAAK,qBAAsB,CAAC+C,OAAQ,UAAWkM,KAAM,OAChElP,EAAaC,KAAK,sBAAsB,CAAC+C,OAAQ,eAG3DsO,UAAY,SAACtK,GAAD,OAAUlH,EAAKkP,YAAchI,KACzCmG,UAAY,SAAAnG,GAAI,OAAIlH,EAAKiP,YAAc/H,KAyCvCjG,kBAAoB,SAAAlB,GACY,WAAxBC,EAAK1C,MAAM+Q,UACXnO,EAAagB,GAAG,qBAAsBlB,EAAKyQ,kBAGnDtP,qBAAuB,SAAApB,GACS,WAAxBC,EAAK1C,MAAM+Q,UACXnO,EAAakB,IAAI,qBAAsBpB,EAAKyQ,wFA7ChD,OAAQ7R,KAAKtB,MAAM+Q,UACf,IAAK,aACD,OAAOjO,EAAAC,EAAAC,cAACmR,GAAD,CACKvE,UAAatO,KAAKtB,MAAMsB,KAAKtB,MAAM+Q,UAAUpB,SAC7CZ,WAAczN,KAAKtB,MAAMsB,KAAKtB,MAAM+Q,UAAU5B,KAAKzJ,OACnDyJ,KAAQ7N,KAAKtB,MAAMsB,KAAKtB,MAAM+Q,UAAU5B,KACxCI,UAAajO,KAAKtB,MAAMsB,KAAKtB,MAAM+Q,UAAUO,aAC7C9B,YAAelO,KAAKtB,MAAMwR,QAAQnN,KAClC6K,cAAiB5N,KAAKtB,MAAMsB,KAAKtB,MAAM+Q,UAAUM,aACjDrC,iBAAoB1N,KAAKtB,MAAMwR,QAAQE,UACvCzC,iBAAoB3N,KAAKtB,MAAMwR,QAAQC,UACvCpC,eAAkB/N,KAAK+P,aACvB5B,eAAkBnO,KAAKuS,aACvBnE,gBAAmBpO,KAAKsS,cACxB/D,SAAYvO,KAAK2S,SAEjC,IAAK,SACG,OACInR,EAAAC,EAAAC,cAACoR,GAAD,CACI5D,OAAUlP,KAAKtB,MAAMwQ,OAAX,OACVC,QAAWnP,KAAKtB,MAAMwQ,OAAOC,QAC7BH,KAAQhP,KAAKtB,MAAMwQ,OAAOW,aAC1BvB,UAAatO,KAAKtB,MAAMwQ,OAAOQ,qBAC/BzQ,MAASe,KAAKtB,MAAMwQ,OAAOjQ,MAC3BsP,SAAYvO,KAAK2S,OACjBvD,WAAcpP,KAAKtB,MAAMuR,gBACzBhB,qBAAwBjP,KAAKkS,mBAC7B7C,YAAerP,KAAK8R,UACpBxC,mBAAsBtP,KAAKiS,iBAC3BrD,gBAAmB5O,KAAK2C,MAAMiM,gBAC9BG,SAAY/O,KAAKuQ,aAIjC,QAAS,OAAO/O,EAAAC,EAAAC,cAACqR,EAAA,SAAD,cAtRF/Q,IAAMa,eCNhC,IAAMmQ,GAA0B,SAACpP,EAAKqP,EAAMlK,EAAOhG,GAAnB,sBAAAqC,EAAAtF,OAAAuF,EAAA,EAAAvF,CAAAwF,EAAA7D,EAAA8D,KAA4B,SAAAC,EAAOC,EAASC,EAAhBC,GAAA,IAAA1F,EAAAiT,EAAAC,EAAA/P,EAAAgQ,EAAA,OAAA9N,EAAA7D,EAAAmE,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAA2B9F,EAA3B0F,EAA2B1F,SAC/EiT,EADoDpT,OAAA0D,EAAA,EAAA1D,CAClCmT,GAChBE,EAAYD,EAAY9O,OAAU8O,EAAYA,EAAY9O,OAAO,GAAGlB,GAAK,EAAI,GAC7EE,EAAkB,IACkBoO,KAAK,UAEzC4B,EAAS,CACXC,gBAAiB,KACjBC,MAAO,KACPpQ,GAAE,uBAAAyL,QAdM4E,EAc0B,EAdtBC,EAcwB,IAbxC,GAAA7E,OAAU8E,KAAKC,MAAMH,EAAME,KAAKE,UAAYH,EAAID,OAc5CK,cAAe,SACf7Q,KAAM,cAGVmQ,EAAY1B,KAAK,CACbtO,GAAIiQ,EACJpK,MAAOA,EACPhG,KAAMA,EACNM,WAAY,CAAC+P,GACbhQ,gBAAe,GAAAuL,OAAMvL,KAnB+ByC,EAAAE,KAAA,EAsBlD9F,EAASE,GAAG+F,WAAW,SAASC,IAAIvC,GAAK1C,OAAO,CAClD2C,SAAYqP,IAEf9U,KAAM,kBAAMqH,EnBxBN,CACH1C,KAVe,iBAWfc,SmBsBsCqP,MACzClU,MAAM,SAAAC,GACHL,QAAQK,MAAMA,EAAMuH,SACpBf,EAAS3B,EAAY7E,EAAMuH,YA5ByB,wBAAAX,EAAAY,OAL5D,IAAgB8M,EAAIC,GAKwChO,MAA5B,gBAAAkB,EAAAC,EAAAC,GAAA,OAAAxB,EAAAyB,MAAA7G,KAAAmE,YAAA,WCwDjBuI,mBA5Df,SAAc/J,GAAO,IAAAkF,EAEFC,mBAAQ,kBAAA6G,OAAoBhM,EAAMO,KAA1C6E,EAFUjI,OAAAkI,EAAA,EAAAlI,CAAA+H,EAAA,MAAAoD,EAGQnD,mBAAQ,kBAAA6G,OAAmBhM,EAAMO,GAAzB,iBAA1B2Q,EAHU/T,OAAAkI,EAAA,EAAAlI,CAAAmL,EAAA,MAAAC,EAKYpD,oBAAS,GALrBgM,EAAAhU,OAAAkI,EAAA,EAAAlI,CAAAoL,EAAA,GAKZ6I,EALYD,EAAA,GAKHE,EALGF,EAAA,GAAA7G,EAMWnF,oBAAS,GANpBmM,EAAAnU,OAAAkI,EAAA,EAAAlI,CAAAmN,EAAA,GAMZiH,EANYD,EAAA,GAMHE,EANGF,EAAA,GAAA9G,EAQJrF,mBAASnF,EAAMO,IAArBA,EARUpD,OAAAkI,EAAA,EAAAlI,CAAAqN,EAAA,MAAAiH,EASFtM,mBAASnF,EAAMkL,MAAvBA,EATU/N,OAAAkI,EAAA,EAAAlI,CAAAsU,EAAA,MAAAC,EAUFvM,mBAASnF,EAAMI,MAAvBA,EAVUjD,OAAAkI,EAAA,EAAAlI,CAAAuU,EAAA,MAmCjB,OAAIN,EAAiBvS,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAUC,GAAMmG,IAC5BmM,EAAgB1S,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAUC,GAAMiS,IAEjCrS,EAAAC,EAAAC,cAAA,OAAKI,UAAY,OAAOwS,UAAWpR,GAC/B1B,EAAAC,EAAAC,cAAA,KAAGI,UAAY,eAAe+L,GAC9BrM,EAAAC,EAAAC,cAAA,KAAGI,UAAY,eAAeiB,GAC9BvB,EAAAC,EAAAC,cAAA,OAAKI,UAAY,qBACbN,EAAAC,EAAAC,cAAA,SACIK,QA9BN,SAAAZ,GACPwB,EAAMhF,SAASwO,WAAapE,GAC3BiM,GAAY,GAChB7S,EAAMsI,mBA4BU3H,UAAY,gCACZiB,KAAO,SACP0F,MAAQ,gBACZjH,EAAAC,EAAAC,cAAA,SAAOK,QAtBJ,SAAAZ,GACfG,EAAaC,KAAK,kBAAkB,CAChC2B,GAAIP,EAAMO,GACV2K,KAAMlL,EAAMkL,KACZ9K,KAAMJ,EAAMI,OAEhB5B,EAAMsI,mBAiBU3H,UAAY,iCACZiB,KAAO,SACP0F,MAAQ,YAEhBjH,EAAAC,EAAAC,cAAA,SAAOK,QAjCI,SAAAZ,GAChBwB,EAAMhF,SAASwO,WAAapE,GAC/BoM,GAAW,GACXhT,EAAMsI,mBA+BM3H,UAAY,mBACZiB,KAAO,SACP0F,MAAQ,kBChDtB8L,8MAQF7V,MAAQ,CACJuC,UAAU,KAGdqR,cAAgB,SAAC5N,GACTtD,EAAKuB,MAAMgB,OACXvC,EAAKuB,MAAM8C,SAASuN,GACZ5R,EAAKuB,MAAMgB,OACXvC,EAAKuB,MAAMsQ,KACXvO,EAAKqE,MACLrE,EAAK3B,OAEV3B,EAAKC,SAALvB,OAAAyE,EAAA,EAAAzE,CAAA,GAAkBsB,EAAK1C,MAAvB,CAA8BuC,UAAU,QAInDuT,SAAW,SAACvB,GAER,OAAOA,EAAKxO,IAAK,SAAA4F,GAEb,OACI7I,EAAAC,EAAAC,cAAC+S,GAAD,CACIpC,IAAOhI,EAAQnH,GACfA,GAAMmH,EAAQnH,GACd2K,KAAQxD,EAAQtB,MAChBhG,KAAQsH,EAAQtH,YAgBhCV,kBAAoB,WAChBf,EAAagB,GAAG,kBAAkBlB,EAAKkR,kBAGzC/P,qBAAuB,WACrBjB,EAAakB,IAAI,kBAAkBpB,EAAKkR,wFAdxC,OAAItS,KAAKtB,MAAMuC,SACJO,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAUC,GAAO,MAEhBJ,EAAAC,EAAAC,cAAA,OAAKI,UAAY,sBACZ9B,KAAKwU,SAAL1U,OAAA0D,EAAA,EAAA1D,CAAkBE,KAAK2C,MAAMsQ,eA5CnCjR,IAAMa,eAkEVgH,eAPS,SAACnL,GACrB,MAAO,CACHiF,OAAQjF,EAAM8F,QAAQb,OACtBsP,KAAKnT,OAAA0D,EAAA,EAAA1D,CAAKpB,EAAM8F,QAAQX,YAIjBgG,CAAyB0K,ICtDzBG,WAjBS,SAAA/R,GAEhB,OACQnB,EAAAC,EAAAC,cAAA,WAASI,UAAY,gBACjBN,EAAAC,EAAAC,cAAA,OAAKI,UAAY,aACbN,EAAAC,EAAAC,cAAA,OAAKI,UAAY,eACbN,EAAAC,EAAAC,cAAA,OAAKI,UAAY,uBACbN,EAAAC,EAAAC,cAAA,4BAEH6S,GAAO/S,EAAAC,EAAAC,cAACiT,GAAD,MAAW,UCEzC5L,WAAQnJ,EAAQ,KAAqBmJ,OAErC6L,8MAaJlW,MAAQ,CACN+Q,SAAU,aAGZvD,OAAS,WACP9K,EAAKuB,MAAM8C,SAASqB,EAAqB1F,EAAKuB,MAAMgB,YAGtDkR,UAAY,SAAA1T,GACVC,EAAKuB,MAAM8C,SAASqF,EAAiBhL,OAAAyE,EAAA,EAAAzE,CAAA,GAAIqB,EAAL,CAAYyC,IAAKxC,EAAKuB,MAAM1C,SAAS6U,iBAAiBlR,WAG5FmR,eAAiB,SAAA5T,GACfC,EAAKC,SAALvB,OAAAyE,EAAA,EAAAzE,CAAA,GACKsB,EAAK1C,MADV,CAEE+Q,SAAUtO,EAAMmD,aAqBpBjC,kBAAoB,WAClBf,EAAagB,GAAG,kBAAmBlB,EAAKyT,WACxCvT,EAAagB,GAAG,sBAAuBlB,EAAK2T,mBAG9CxS,qBAAuB,WACrBjB,EAAakB,IAAI,kBAAmBpB,EAAKyT,WACzCvT,EAAakB,IAAI,sBAAuBpB,EAAK2T,yFAtB7C,OAAI/U,KAAK2C,MAAMe,OAEXlC,EAAAC,EAAAC,cAACqR,EAAA,SAAD,KACEvR,EAAAC,EAAAC,cAACsT,GAAD,CAAQjM,MAASA,GAAOpF,OAAU3D,KAAK2C,MAAMgB,SAC7CnC,EAAAC,EAAAC,cAAA,OAAKI,UAAY,WACW,eAAxB9B,KAAKtB,MAAM+Q,SAA6BjO,EAAAC,EAAAC,cAACuT,GAAD,CAAOxF,SAAYzP,KAAKtB,MAAM+Q,WAAe,KACrFjO,EAAAC,EAAAC,cAACwT,GAAD,QAIElV,KAAK2C,MAAM1C,SAAS6U,iBACpBtT,EAAAC,EAAAC,cAACkG,EAAD,CAAQG,KAAO,mBAAmBhF,KAAO,YADIvB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAUC,GAAO,aA5CxDI,IAAMa,eAoEbgH,eARS,SAACnL,GACvB,MAAO,CACLiF,OAAQjF,EAAM8F,QAAQb,OACtBE,SAAS/D,OAAA0D,EAAA,EAAA1D,CAAKpB,EAAM8F,QAAQX,UAC5BH,OAAQhF,EAAM8F,QAAQd,SAIXmG,CAAyBrC,EAAaoN,uPClFrD,IAAMO,GAAaC,KAAOC,IAAVC,KAEH,SAAA3S,GAAK,OAAIA,EAAM4S,OACd,SAAA5S,GAAK,OAAIA,EAAM6S,QAEL,SAAA7S,GAAK,OAAIA,EAAM8S,iBACX,SAAA9S,GAAK,OAAIA,EAAM0Q,kBA+F5BqC,GA5Fa,SAAA/S,GAAS,IAAAkF,EAEpBC,mBAASnF,EAAMO,IAArBA,EAF0BpD,OAAAkI,EAAA,EAAAlI,CAAA+H,EAAA,MAAAoD,EAGTnD,mBAASnF,EAAMiR,eAAhCA,EAH0B9T,OAAAkI,EAAA,EAAAlI,CAAAmL,EAAA,MAI7B0K,EAAe3T,IAAM0M,YAJQxD,EAMGpD,mBAASnF,EAAMiT,YAAcjT,EAAM2Q,OANtCQ,EAAAhU,OAAAkI,EAAA,EAAAlI,CAAAoL,EAAA,GAM5BuK,EAN4B3B,EAAA,GAMX+B,EANW/B,EAAA,GAAA7G,EAOCnF,mBAASnF,EAAM0Q,gBAAkB1Q,EAAM0Q,gBAAkB,MAP1DY,EAAAnU,OAAAkI,EAAA,EAAAlI,CAAAmN,EAAA,GAO5BoG,EAP4BY,EAAA,GAOX6B,EAPW7B,EAAA,GAAA9G,EASnBrF,mBAASnF,EAAM4S,MAAQ5S,EAAM4S,MAAQ,QAA9CA,EAT4BzV,OAAAkI,EAAA,EAAAlI,CAAAqN,EAAA,MAAAiH,EAUlBtM,mBAASnF,EAAM6S,OAAS7S,EAAM6S,OAAS,QAAjDA,EAV4B1V,OAAAkI,EAAA,EAAAlI,CAAAsU,EAAA,MAwC3B2B,EAAc,SAAAC,GAChBH,EAAWG,EAAUC,WAGnBC,EAAqB,SAAA/U,GAAS,IACzB6L,EAAW7L,EAAX6L,QACP8I,EAAS9I,IAgBb,OAFAmJ,oBAVkB,WAId,OAzCmB,WACnBR,EAAa9G,QAAQC,QACrB,IAAIsH,EAAaT,EAAa9G,QAAQwH,wBACtC/U,EAAaC,KAAb,iBAAAoN,OAAmCiF,GAAgB,CAC/C0C,cAAe3T,EAAM2T,cACrBC,KAAM,CAAChB,MAAOa,EAAUb,MAAOC,OAAQY,EAAUZ,UAiCrDgB,GACAlV,EAAagB,GAAb,6BAAAqM,OAA6CzL,GAAM6S,GACnDzU,EAAagB,GAAb,0BAAAqM,OAA0CzL,GAAMgT,GACzC,WACH5U,EAAakB,IAAb,6BAAAmM,OAA8CzL,GAAM6S,GACpDzU,EAAakB,IAAb,0BAAAmM,OAA2CzL,GAAMgT,MAMtC,QAAfvT,EAAM6N,KAEFhP,EAAAC,EAAAC,cAACyT,GAAD,CACItM,IAAQ8M,EACRc,cA5Cc,SAAAtV,GAEtB,IAAMuV,EAA8B,CAChCxT,GAAIA,EACJ0Q,cAAeA,EACf7Q,KAAM,aACNuQ,MAAOmC,EACPpC,gBAAiBA,GAErB/R,EAAaC,KAAK,uBAAuB,CACrCoV,eAAgBD,EAChB9C,cAAeA,EACf7Q,KAAM,aACNG,GAAIA,IAER/B,EAAMsI,mBA8BEmN,YAAahD,EACb6B,gBAAmBA,GAAoC9S,EAAMiT,WAC7DvC,gBAAmBA,GAAoC1Q,EAAM0Q,gBAC7DkC,MAASA,EACTC,OAAUA,GAET7S,EAAMC,UAGO,eAAfD,EAAM6N,KAEThP,EAAAC,EAAAC,cAACyT,GAAD,CACItM,IAAQ8M,EACRiB,YAAahD,EACb6B,gBAAmB9S,EAAMiT,WACzBvC,gBAAmB1Q,EAAM0Q,gBACzBkC,MAASA,EACTC,OAAUA,GAET7S,EAAMC,eAVZ,GCHIiU,sNApEXnY,MAAQ,CACJkV,cAAexS,EAAKuB,MAAMO,GAC1B4T,UAAU,EACVvM,UAAW,KACX3H,SAAU,QAGdmU,WAAa,WACJ3V,EAAK1C,MAAMsY,WAAa5V,EAAKuB,MAAMO,KAAO9B,EAAKuB,MAAMsU,mBACtD7V,EAAKC,SAALvB,OAAAyE,EAAA,EAAAzE,CAAA,GACOsB,EAAK1C,MADZ,CAEIsY,WAAW,IACZ,kBACH1V,EAAaC,KAAK,gBAAlBzB,OAAAyE,EAAA,EAAAzE,CAAA,GACOsB,EAAK1C,MADZ,CAEIsY,WAAW,EACXpD,cAAexS,EAAK1C,MAAMkV,sBAKtCsD,WAAa,OACbC,eAAiB,SAAA7O,GAAI,OAAIA,EAAOlH,EAAK8V,WAAa,CAAC3Q,KAAM+B,EAAK+N,wBAAyB/N,KAAMA,GAAQA,2EAE5F,IAAAgE,EAAAtM,KAEL,GAAwB,QAApBA,KAAK2C,MAAM6N,KAAe,CAC1B,IAAI7N,EAAQ3C,KAAK2C,MAAMyU,oBAAoB/T,WAAW+G,KAAK,SAAA1F,GAAI,OAAIA,EAAKkP,gBAAkBtH,EAAK3J,MAAMO,MAAO,KACxGN,EAAW5C,KAAK2C,MAAM0U,aAAa/M,OAAO,SAAA5F,GAAI,OAAIA,EAAKkP,gBAAkBtH,EAAK3J,MAAMO,KAExF,GAAIP,EACJ,OACInB,EAAAC,EAAAC,cAACqR,EAAA,SAAD,KACIvR,EAAAC,EAAAC,cAAA,WAASI,UAAS,UAAA6M,OAAc3O,KAAK2C,MAAM2T,eAAiBzN,IAAK7I,KAAKmX,eACtEG,aAAa,WAAWvV,QAAW/B,KAAK+W,YACpCvV,EAAAC,EAAAC,cAAC6V,GAADzX,OAAA6H,OAAA,CACI6I,KAAQxQ,KAAK2C,MAAM6N,MACf7N,EAFR,CAEe2T,cAAiBtW,KAAK2C,MAAM2T,gBAEtC1T,EAAS6B,IAAI,SAAAC,GAAI,OAAIA,EAAK6F,aAAc,OAE3CvK,KAAKtB,MAAMsY,WACTxV,EAAAC,EAAAC,cAAA,OAAKI,UAAY,eAAcN,EAAAC,EAAAC,cAAA,wCAK5C,IAAwB,eAApB1B,KAAK2C,MAAM6N,KAkBjB,OAAOhP,EAAAC,EAAAC,cAACkG,EAAD,CAAQ7E,KAAI,GAAA4L,OAAO3O,KAAK2C,MAAM6N,KAAlB,iBAjBpB,IAAI7N,EAAQ3C,KAAK2C,MAAMyU,oBAAoB/T,WAAW+G,KAAK,SAAA1F,GAAI,OAAIA,EAAKkP,gBAAkBtH,EAAK3J,MAAMO,MAAO,KACxGN,EAAW5C,KAAK2C,MAAM0U,aAAa/M,OAAO,SAAA5F,GAAI,OAAIA,EAAKkP,gBAAkBtH,EAAK3J,MAAMO,KAExF,GAAIP,EACJ,OACInB,EAAAC,EAAAC,cAACqR,EAAA,SAAD,KACIvR,EAAAC,EAAAC,cAAA,WAASmH,IAAK7I,KAAKmX,eAAgBG,aAAa,cAC5C9V,EAAAC,EAAAC,cAAC6V,GAADzX,OAAA6H,OAAA,GAAyBhF,EAAzB,CACI6N,KAAQxQ,KAAK2C,MAAM6N,KACnB8F,cAAiBtW,KAAK2C,MAAM2T,gBAE3B1T,EAAS6B,IAAI,SAAAC,GAAI,OAAIA,EAAK6F,aAAc,gBApExCvI,IAAMa,gBCuCpB2U,GA7CC,SAAA7U,GAEZ,GAAmB,QAAfA,EAAM6N,KAAe,KAClB4G,EAAuBzU,EAAM8U,SAA7BL,oBAEC,OADQA,EAAoBhU,gBACbqB,IAAI,SAACC,EAAKyN,GACrB,OACQ3Q,EAAAC,EAAAC,cAACgW,GAAD,CACIrF,IAAO3N,EACP2S,aAAYvX,OAAA0D,EAAA,EAAA1D,CAAQ6C,EAAM0U,cAC1BD,oBAAmBtX,OAAAyE,EAAA,EAAAzE,CAAA,GAAQsX,GAC3BH,kBAAqBtU,EAAMsU,kBAC3BU,gBAAmBhV,EAAM0U,aAAajT,OACtCgL,WAAczM,EAAMyM,WACpBwI,cAAiBjV,EAAMiV,cACvB1U,GAAMwB,EACN4R,cAAiBnE,EACjB3B,KAAQ7N,EAAM6N,MAEb,CAACoD,cAAejR,EAAMsU,sBAIxC,GAAmB,eAAftU,EAAM6N,KAAsB,KAC7BqH,EAAWlV,EAAXkV,QACAT,EAAuBzU,EAAvByU,oBACN,OAAOS,EAAQpT,IAAI,SAACC,EAAKyN,GACrB,OACQ3Q,EAAAC,EAAAC,cAACgW,GAAD,CACIrF,IAAO3N,EACP2S,aAAYvX,OAAA0D,EAAA,EAAA1D,CAAQ6C,EAAMmV,mBAC1BV,oBAAmBtX,OAAAyE,EAAA,EAAAzE,CAAA,GAAQsX,GAC3BH,kBAAqBtU,EAAMsU,kBAC3BU,gBAAmBhV,EAAMmV,kBAAkB1T,OAC3CwT,cAAiBjV,EAAMiV,cACvB1U,GAAMwB,EACN8L,KAAQ7N,EAAM6N,MAEb,CAACoD,cAAejR,EAAMsU,yLCpC/C,IAAMc,GAAiB3C,KAAO4C,MAAMC,MAAM,SAAAtV,GAAK,MAAK,CAChDuV,MAAO,CACHC,OAAQxV,EAAMyV,OAAS,OAAS,KAChCC,KAAM1V,EAAM2V,OAAS3V,EAAM2V,OAAS,MACpCC,IAAM5V,EAAM6V,OAAS7V,EAAM6V,OAAS,QAJrBpD,CAAHqD,KAMP,SAAA9V,GAAK,OAAIA,EAAM4T,KAAO5T,EAAM4T,KAAO,IAAM,MACxC,SAAA5T,GAAK,OAAIA,EAAM4T,KAAO5T,EAAM4T,KAAO,GAAK,IAAO,OAmM9CmC,8MAlLXha,MAAQ,CACJwE,GAAI9B,EAAKuB,MAAMO,GACfyV,kBAAkB,EAClBC,aAAa,EACbhB,cAAexW,EAAKuB,MAAMiV,cAC1BhE,cAAexS,EAAKuB,MAAMiR,cAC1B7L,KAAM3G,EAAKuB,MAAMoF,KACjBwO,KAAMnV,EAAKuB,MAAM4T,KAAOnV,EAAKuB,MAAM4T,KAAO,KAC1CsC,YAAa,KACbC,SAAU1X,EAAKuB,MAAMoW,OAAOC,EAAI,CAACA,EAAG5X,EAAKuB,MAAMoW,OAAOC,EAAGC,EAAG7X,EAAKuB,MAAMoW,OAAOE,GAAK,KACnFC,gBAAgB,KAGpBC,qBAAuB,SAAAhY,GAEnB,IAAMiY,EAAyB,CAC3BlW,GAAI9B,EAAK1C,MAAMwE,GACf0Q,cAAexS,EAAK1C,MAAMkV,cAC1B7Q,KAAM,QACNsW,aAAc,KACdC,QAAS,EACTnB,OAAQ,KACRoB,MAAOnY,EAAK1C,MAAMqJ,KAClBgR,OAAOjZ,OAAAyE,EAAA,EAAAzE,CAAA,GAAKsB,EAAK1C,MAAMoa,WAG3BxX,EAAaC,KAAb,uBAAyC,CACrCoV,eAAgByC,EAChBxF,cAAexS,EAAK1C,MAAMkV,cAC1B1Q,GAAI9B,EAAK1C,MAAMwE,GACfsW,cAAepY,EAAK1C,MAAM6X,OAE9BnV,EAAKC,SAALvB,OAAAyE,EAAA,EAAAzE,CAAA,GAAkBsB,EAAK1C,MAAvB,CAA8Bia,kBAAkB,KAChDxX,EAAMsI,qBAGVgQ,WAAa,SAAAtY,GACT,GAAgC,IAA5BA,EAAMuY,YAAYC,MAAa,OAAO,EAC1C,IAAMC,EAAUxY,EAAKyY,SAASxD,wBAExByD,EACIF,EAAQvB,KADZyB,EAEGF,EAAQrB,IACNqB,EAAQG,MAAQH,EAAQvB,KACvBuB,EAAQI,OAASJ,EAAQrB,IAGrCnX,EAAKC,SAALvB,OAAAyE,EAAA,EAAAzE,CAAA,GACOsB,EAAK1C,MADZ,CAEIma,YAAa,CAACG,EAAG7X,EAAM8Y,QAAUH,EAAYb,EAAG9X,EAAM+Y,QAAUJ,GAChEZ,gBAAiB9X,EAAK1C,MAAMwa,kBAGhC/X,EAAMsI,qBAGV0Q,mBAAqB,SAAC7B,EAAQE,GAE1B,IAAMoB,EAAUxY,EAAKyY,SAASxD,wBAExB+D,EAAa,IAAMR,EAAQpE,OAC3B6E,EAAcjZ,EAAKuB,MAAMiV,cAAcrC,MAAQqE,EAAQrE,MAO7D,OALIiD,EAJkB,IAIMA,EAJN,GAKlBA,EAAS4B,IAAY5B,EAAS4B,GAC9B9B,EANkB,IAMMA,EANN,GAOlBA,EAAS+B,IAAa/B,EAAS+B,GAE5B,CAACrB,EAAGV,EAAQW,EAAGT,MAG1B8B,MAAQ,SAACC,EAAMC,GACX,MAAO,CACHxB,EAAG,EACHC,EAAG,MAGXwB,KAAO,SAACzB,EAAEC,GAAH,OAAS7X,EAAKC,SAALvB,OAAAyE,EAAA,EAAAzE,CAAA,GAAkBsB,EAAK1C,MAAvB,CAA8Boa,SAAU,CAACE,EAAGA,EAAGC,EAAGA,SAElEyB,SAAW,SAAAvZ,GAEP,GAAIC,EAAK1C,MAAMwa,gBAAkB9X,EAAK1C,MAAMia,iBAAiB,CAEzD,IAAIgC,EAAQxZ,EAAM8Y,QAAU7Y,EAAKuB,MAAMiV,cAAcS,KACjDuC,EAAQzZ,EAAM+Y,QAAU9Y,EAAKuB,MAAMiV,cAAcW,IAEjDD,EAASqC,EAAQvZ,EAAK1C,MAAMma,YAAYG,EAAI5X,EAAKkZ,QAAQtB,EACzDR,EAASoC,EAAQxZ,EAAK1C,MAAMma,YAAYI,EAAI7X,EAAKkZ,QAAQrB,EAEzDF,EAAS3X,EAAK+Y,mBAAmB7B,EAAOE,GAExCqC,EAA+B,IAAX9B,EAAOC,EAAU5X,EAAK1C,MAAMkZ,cAAcrC,MAC9DuF,EAA+B,IAAX/B,EAAOE,EAAU7X,EAAK1C,MAAMkZ,cAAcpC,OAElEpU,EAAKqZ,KAAKI,EAAkBE,QAAQ,GAAK,IAC/BD,EAAkBC,QAAQ,GAAK,KAE7C5Z,EAAMsI,qBAGVuR,cAAgB,SAAA7Z,GACRC,EAAK1C,MAAMwa,iBACX9X,EAAKC,SAALvB,OAAAyE,EAAA,EAAAzE,CAAA,GAAkBsB,EAAK1C,MAAvB,CAA8Bwa,gBAAgB,KAC9C5X,EAAaC,KAAb,sBAAAoN,OAAwCvN,EAAK1C,MAAMwE,IAAM9B,EAAK1C,MAAMoa,WAExE3X,EAAMsI,qBAGVwR,gBAAkB,SAAA9Z,GAAS,IAChB6L,EAAW7L,EAAX6L,QACP5L,EAAKC,SAALvB,OAAAyE,EAAA,EAAAzE,CAAA,GAAkBsB,EAAK1C,MAAvB,CAA8BqJ,KAAMiF,QAGxCkO,eAAiB,SAAA/Z,GAEb,GAAIA,EAAMga,WAA8B,MAAlBha,EAAMia,OAAiB,CACzC,IAAIC,EAAUja,EAAK1C,MAAM6X,KAAO,EAChC8E,EAAUA,EAAU,IAAM,IAAMA,EAChCja,EAAKC,SAALvB,OAAAyE,EAAA,EAAAzE,CAAA,GAAkBsB,EAAK1C,MAAvB,CAA6B6X,KAAM8E,KACnC/Z,EAAaC,KAAK,kBAAmB8Z,GAGzC,GAAIla,EAAMga,UAA6B,MAAjBha,EAAMia,OAAgB,CACxC,IAAIC,EAAUja,EAAK1C,MAAM6X,KAAO,EAC/B8E,EAAUA,GAAW,EAAI,EAAIA,EAC7Bja,EAAKC,SAALvB,OAAAyE,EAAA,EAAAzE,CAAA,GAAkBsB,EAAK1C,MAAvB,CAA6B6X,KAAM8E,KACnC/Z,EAAaC,KAAK,kBAAmB8Z,GAE1Cla,EAAMsI,qBAGV6R,SAAW,SAAAna,GAAS,IACToV,EAAQpV,EAARoV,KACFnV,EAAK1C,MAAMka,YAMTtX,EAAakB,IAAb,iBAAAmM,OAAkCvN,EAAK1C,MAAMkV,eAAgBxS,EAAKka,UALzEla,EAAKC,SAALvB,OAAAyE,EAAA,EAAAzE,CAAA,GACOsB,EAAK1C,MADZ,CAEIka,aAAa,EACbtC,cAAenV,EAAMmV,cAAgB,EACrCsB,cAAe,CAACrC,MAAOgB,EAAKhB,MAAOC,OAAQe,EAAKf,cAIxDqE,SAAW,OACX0B,kBAAoB,SAAAjT,GAAI,OAAIlH,EAAKyY,SAAWvR,KAwB5CjG,kBAAoB,WAChBf,EAAagB,GAAb,uBAAAqM,OAAuCvN,EAAK1C,MAAMwE,IAAM9B,EAAK6Z,iBAC7D3Z,EAAagB,GAAb,iBAAAqM,OAAiCvN,EAAK1C,MAAMkV,eAAiBxS,EAAKka,aAGtE/Y,qBAAuB,WACnBjB,EAAakB,IAAb,iBAAAmM,OAAkCvN,EAAK1C,MAAMkV,eAAgBxS,EAAKka,UAClEha,EAAakB,IAAb,uBAAAmM,OAAwCvN,EAAK1C,MAAMwE,IAAM9B,EAAK6Z,0FA5B1D,OACIzZ,EAAAC,EAAAC,cAACqW,GAAD,CACIhV,KAAO,SACP0F,MAAQ,QACRI,IAAO7I,KAAKub,kBACZhF,KAAQvW,KAAKtB,MAAM6X,KACnBxU,QAAW/B,KAAKmZ,qBAChBqC,YAAexb,KAAKyZ,WACpBgC,YAAczb,KAAK0a,SACnBgB,aAAgB1b,KAAKgb,cACrBW,UAAa3b,KAAKgb,cAClBY,YAAe5b,KAAKyG,KACpBoV,QAAW7b,KAAKkb,eAChB5C,OAAUtY,KAAKtB,MAAMoa,SAAW9Y,KAAKtB,MAAMoa,SAASE,EAAI,KACxDR,OAAUxY,KAAKtB,MAAMoa,SAAW9Y,KAAKtB,MAAMoa,SAASG,EAAI,KACxDb,OAAUpY,KAAKtB,MAAMwa,eACrB4C,8BAAA,WA7KA9Z,IAAMa,mVCd1B,IAAMkZ,GAAe3G,KAAOC,IAAI4C,MAAM,SAAAtV,GAAK,MAAK,CAC5CuV,MAAO,CACHC,OAAQxV,EAAMyV,OAAS,OAAS,KAChCC,KAAM1V,EAAM2V,OAAS3V,EAAM2V,OAAS,MACpCC,IAAM5V,EAAM6V,OAAS7V,EAAM6V,OAAS,KACpCwD,QAAS,OACTC,eAAgB,SAChBC,WAAY,SACZC,QAAwB,QAAfxZ,EAAM6N,KAAiB,OAAS,QAR5B4E,CAAHgH,KAaA,SAAAzZ,GAAK,MAAmB,QAAfA,EAAM6N,KAAN,sBAA+C,MAC5D,SAAA7N,GAAK,MAAmB,QAAfA,EAAM6N,KAAN,gBAAyC,OAG1D6L,GAAQjH,KAAO7H,OAAV+O,KAGI,SAAA3Z,GAAK,OAAIA,EAAMwV,OAAS,IAAM,OAgO9BoE,8MAjNX7d,MAAQ,CACJkV,cAAexS,EAAKuB,MAAMiR,cAC1B1Q,GAAK9B,EAAKuB,MAAMO,GAChB0U,cAAexW,EAAKuB,MAAMiV,cAC1BiB,YAAa,KACbtC,KAAMnV,EAAKuB,MAAM4T,KAAOnV,EAAKuB,MAAM4T,KAAO,GAC1CiG,SAAUpb,EAAKuB,MAAMoW,OAAOC,EAAI,CAACA,EAAG5X,EAAKuB,MAAMoW,OAAOC,EAAGC,EAAG7X,EAAKuB,MAAMoW,OAAOE,GAAK,KACnFC,gBAAgB,EAChBP,kBAAkB,EAClB8D,aAAa,EACbC,QAAStb,EAAKuB,MAAM+Z,QAAUtb,EAAKuB,MAAM+Z,QAAU,QAGvDC,qBAAuB,SAAAxb,GAEnB,IAAMyb,EAAyB,CAC3B1Z,GAAI9B,EAAK1C,MAAMwE,GACf0Q,cAAexS,EAAK1C,MAAMkV,cAC1B7Q,KAAM,QACNoV,OAAQ,KACRuE,QAAStb,EAAK1C,MAAMge,QACpB3D,OAAOjZ,OAAAyE,EAAA,EAAAzE,CAAA,GAAKsB,EAAK1C,MAAM8d,WAG3Blb,EAAaC,KAAK,uBAAuB,CACrCoV,eAAgBiG,EAChBhJ,cAAexS,EAAK1C,MAAMkV,cAC1B1Q,GAAI9B,EAAK1C,MAAMwE,GACfsW,cAAepY,EAAK1C,MAAM6X,OAE9BnV,EAAKC,SAALvB,OAAAyE,EAAA,EAAAzE,CAAA,GAAkBsB,EAAK1C,MAAvB,CAA8Bia,kBAAkB,KAChDxX,EAAMsI,qBAGVgQ,WAAa,SAAAtY,GACT,GAAgC,IAA5BA,EAAMuY,YAAYC,MAAa,OAAO,EAC1C,IAAMC,EAAUxY,EAAKyb,SAASxG,wBAExByD,EACIF,EAAQvB,KADZyB,EAEGF,EAAQrB,IACNqB,EAAQG,MAAQH,EAAQvB,KACvBuB,EAAQI,OAASJ,EAAQrB,IAGrCnX,EAAKC,SAALvB,OAAAyE,EAAA,EAAAzE,CAAA,GACOsB,EAAK1C,MADZ,CAEIma,YAAa,CAACG,EAAG7X,EAAM8Y,QAAUH,EAAYb,EAAG9X,EAAM+Y,QAAUJ,GAChEZ,gBAAiB9X,EAAK1C,MAAMwa,kBAGhC/X,EAAMsI,qBAGV0Q,mBAAqB,SAAC7B,EAAQE,GAE1B,IAAMoB,EAAUxY,EAAKyb,SAASxG,wBAExB+D,EAAa,IAAMR,EAAQpE,OAC3B6E,EAAcjZ,EAAKuB,MAAMiV,cAAcrC,MAAQqE,EAAQrE,MAO7D,OALIiD,EAJkB,IAIMA,EAJN,GAKlBA,EAAS4B,IAAY5B,EAAS4B,GAC9B9B,EANkB,IAMMA,EANN,GAOlBA,EAAS+B,IAAa/B,EAAS+B,GAE5B,CAACrB,EAAGV,EAAQW,EAAGT,MAG1B8B,MAAQ,SAACC,EAAMC,GACX,MAAO,CACHxB,EAAG,EACHC,EAAG,MAGXwB,KAAO,SAACzB,EAAEC,GAAH,OAAS7X,EAAKC,SAALvB,OAAAyE,EAAA,EAAAzE,CAAA,GAAkBsB,EAAK1C,MAAvB,CAA8B8d,SAAU,CAACxD,EAAGA,EAAGC,EAAGA,SAElE6D,UAAY,SAAA3b,GAER,GAAIC,EAAK1C,MAAMwa,gBAAkB9X,EAAK1C,MAAMia,iBAAiB,CAEzD,IAAIgC,EAAQxZ,EAAM8Y,QAAW7Y,EAAKuB,MAAMiV,cAAcS,KAAQjX,EAAK1C,MAAM4X,cACrEsE,EAAQzZ,EAAM+Y,QAAW9Y,EAAKuB,MAAMiV,cAAcW,IAAMnX,EAAK1C,MAAM4X,cAEnEgC,EAASqC,EAAQvZ,EAAK1C,MAAMma,YAAYG,EAAI5X,EAAKkZ,QAAQtB,EACzDR,EAASoC,EAAQxZ,EAAK1C,MAAMma,YAAYI,EAAI7X,EAAKkZ,QAAQrB,EAEzDF,EAAS3X,EAAK+Y,mBAAmB7B,EAAOE,GAExCqC,EAA+B,IAAX9B,EAAOC,EAAU5X,EAAK1C,MAAMkZ,cAAcrC,MAC9DuF,EAA+B,IAAX/B,EAAOE,EAAU7X,EAAK1C,MAAMkZ,cAAcpC,OAElEpU,EAAKqZ,KAAKI,EAAkBE,QAAQ,GAAK,IAC/BD,EAAkBC,QAAQ,GAAK,KAE7C5Z,EAAMsI,qBAGVuR,cAAgB,SAAA7Z,GACRC,EAAK1C,MAAMwa,iBACX9X,EAAKC,SAALvB,OAAAyE,EAAA,EAAAzE,CAAA,GAAkBsB,EAAK1C,MAAvB,CAA8Bwa,gBAAgB,KAC9C5X,EAAaC,KAAb,sBAAAoN,OAAwCvN,EAAK1C,MAAMwE,IAAM9B,EAAK1C,MAAM8d,WAExErb,EAAMsI,qBAGVsT,WAAa,SAAA5b,GAAS,IACXoM,EAAUpM,EAAVoM,OACPnM,EAAKC,SAALvB,OAAAyE,EAAA,EAAAzE,CAAA,GAAkBsB,EAAK1C,MAAvB,CAA8Bge,QAASnP,QAG3C2N,eAAiB,SAAA/Z,GAEb,GAAIA,EAAMga,WAA8B,MAAlBha,EAAMia,OAAiB,CACzC,IAAIC,EAAUja,EAAK1C,MAAM6X,KAAO,EAChC8E,EAAUA,EAAU,IAAM,IAAMA,EAChCja,EAAKC,SAALvB,OAAAyE,EAAA,EAAAzE,CAAA,GAAkBsB,EAAK1C,MAAvB,CAA6B6X,KAAM8E,KACnC/Z,EAAaC,KAAK,kBAAmB8Z,GAGzC,GAAIla,EAAMga,UAA6B,MAAjBha,EAAMia,OAAgB,CACxC,IAAIC,EAAUja,EAAK1C,MAAM6X,KAAO,EAC/B8E,EAAUA,GAAW,EAAI,EAAIA,EAC7Bja,EAAKC,SAALvB,OAAAyE,EAAA,EAAAzE,CAAA,GAAkBsB,EAAK1C,MAAvB,CAA6B6X,KAAM8E,KACnC/Z,EAAaC,KAAK,kBAAmB8Z,GAE1Cla,EAAMsI,qBAGV6R,SAAW,SAAAna,GAAS,IACToV,EAAQpV,EAARoV,KACFnV,EAAK1C,MAAMka,YAMTtX,EAAakB,IAAb,iBAAAmM,OAAkCvN,EAAK1C,MAAMkV,eAAgBxS,EAAKka,UALzEla,EAAKC,SAALvB,OAAAyE,EAAA,EAAAzE,CAAA,GACOsB,EAAK1C,MADZ,CAEIka,aAAa,EACbtC,cAAenV,EAAMmV,cAAgB,EACrCsB,cAAe,CAACrC,MAAOgB,EAAKhB,MAAOC,OAAQe,EAAKf,cAIxDqH,SAAW,OACXG,kBAAoB,SAAA1U,GAAI,OAAIlH,EAAKyb,SAAWvU,KAyD5CjG,kBAAoB,WAChBf,EAAagB,GAAb,uBAAAqM,OAAuCvN,EAAK1C,MAAMwE,IAAM9B,EAAK2b,YAC7Dzb,EAAagB,GAAb,iBAAAqM,OAAiCvN,EAAK1C,MAAMkV,eAAiBxS,EAAKka,aAGtE/Y,qBAAuB,WACnBjB,EAAakB,IAAb,iBAAAmM,OAAkCvN,EAAK1C,MAAMkV,eAAgBxS,EAAKka,UAClEha,EAAakB,IAAb,uBAAAmM,OAAwCvN,EAAK1C,MAAMwE,IAAM9B,EAAK2b,qFA7D9D,IAAMzP,EAAM,iCAEZ,MAAwB,QAApBtN,KAAK2C,MAAM6N,KAEPhP,EAAAC,EAAAC,cAACqa,GAAD,CACIlT,IAAO7I,KAAKgd,kBACZjb,QAAS/B,KAAK2c,qBACdnB,YAAexb,KAAKyZ,WACpBgC,YAAczb,KAAK8c,UACnBpB,aAAgB1b,KAAKgb,cACrBW,UAAa3b,KAAKgb,cAClBY,YAAe5b,KAAKyG,KACpBoV,QAAW7b,KAAKkb,eAChB9C,OAAUpY,KAAKtB,MAAMwa,eACrBZ,OAAUtY,KAAKtB,MAAM8d,SAAWxc,KAAKtB,MAAM8d,SAASxD,EAAI,KACxDR,OAAUxY,KAAKtB,MAAM8d,SAAWxc,KAAKtB,MAAM8d,SAASvD,EAAI,MAE1DjZ,KAAKtB,MAAMwa,eAQG,KAPZ1X,EAAAC,EAAAC,cAAC2a,GAAD,CACIpU,IAAMjI,KAAKtB,MAAMge,QAAUpP,EAAMtN,KAAKtB,MAAMge,QAAU,KACtDD,YAAezc,KAAKtB,MAAM+d,YAC1BlH,MAASvV,KAAKtB,MAAM6W,MACpBC,OAAUxV,KAAKtB,MAAM8W,OACrB2C,OAAUnY,KAAKtB,MAAMge,QACrBO,iBAAe,KAKA,eAApBjd,KAAK2C,MAAM6N,KAEdhP,EAAAC,EAAAC,cAACqa,GAAD,CACIlT,IAAO7I,KAAKgd,kBACZ5E,OAAUpY,KAAKtB,MAAMwa,eACrBZ,OAAUtY,KAAKtB,MAAM8d,SAAWxc,KAAKtB,MAAM8d,SAASxD,EAAI,KACxDR,OAAUxY,KAAKtB,MAAM8d,SAAWxc,KAAKtB,MAAM8d,SAASvD,EAAI,KACxDzI,KAAQxQ,KAAK2C,MAAM6N,MAErBxQ,KAAKtB,MAAMwa,eASG,KARZ1X,EAAAC,EAAAC,cAAC2a,GAAD,CACIpU,IAAMjI,KAAKtB,MAAMge,QAAUpP,EAAMtN,KAAKtB,MAAMge,QAAU,KACtDD,YAAezc,KAAKtB,MAAM+d,YAC1BlH,MAASvV,KAAKtB,MAAM6W,MACpBC,OAAUxV,KAAKtB,MAAM8W,OACrB2C,OAAUnY,KAAKtB,MAAMge,QACrBlM,KAAQxQ,KAAK2C,MAAM6N,KACnByM,iBAAe,UAjBxB,SAzLcjb,IAAMa,sWCtBnC,IAAMqa,GAAa9H,KAAOC,IAAI4C,MAAM,SAAAtV,GAAK,MAAK,CAC1CuV,MAAO,CACHC,OAAQxV,EAAMyV,OAAS,OAAS,KAChCC,KAAM1V,EAAM2V,OAAS3V,EAAM2V,OAAS,MACpCC,IAAM5V,EAAM6V,OAAS7V,EAAM6V,OAAS,QAJzBpD,CAAH+H,KAMH,SAAAxa,GAAK,OAAIA,EAAM4T,KAAO5T,EAAM4T,KAAK6G,EAAI,IAAM,OAC1C,SAAAza,GAAK,OAAIA,EAAM4T,KAAO5T,EAAM4T,KAAK8G,EAAI,IAAM,QAInDC,GAAalI,KAAOmI,IAAVC,KAGD,SAAA7a,GAAK,OAAIA,EAAM2W,SACT,SAAA3W,GAAK,OAAIA,EAAM0W,eAoRrBoE,8MApQX/e,MAAQ,CACJwE,GAAI9B,EAAKuB,MAAMO,GACfyV,kBAAkB,EAClBC,aAAa,EACbU,QAASlY,EAAKuB,MAAM2W,SAAW,EAC/BD,aAAcjY,EAAKuB,MAAM0W,cAAgB,EACzCzB,cAAexW,EAAKuB,MAAMiV,cAC1BhE,cAAexS,EAAKuB,MAAMiR,cAC1B7L,KAAM3G,EAAKuB,MAAMoF,KACjBwO,KAAMnV,EAAKuB,MAAM4T,KAAOnV,EAAKuB,MAAM4T,KAAO,CAAC6G,EAAG,GAAIC,EAAG,IACrDxE,YAAa,KACbC,SAAU1X,EAAKuB,MAAMoW,OAAOC,EAAI,CAACA,EAAG5X,EAAKuB,MAAMoW,OAAOC,EAAGC,EAAG7X,EAAKuB,MAAMoW,OAAOE,GAAK,KACnFC,gBAAgB,KAGpBC,qBAAuB,SAAAhY,GAEnB,IAAMiY,EAAyB,CAC3BlW,GAAI9B,EAAK1C,MAAMwE,GACf0Q,cAAexS,EAAK1C,MAAMkV,cAC1B2C,KAAKzW,OAAAyE,EAAA,EAAAzE,CAAA,GAAKsB,EAAK1C,MAAM6X,MACrBxT,KAAM,QACNsW,aAAcjY,EAAK1C,MAAM2a,aACzBC,QAASlY,EAAK1C,MAAM4a,QACpBnB,OAAQ,KACRoB,MAAOnY,EAAK1C,MAAMqJ,KAClBgR,OAAOjZ,OAAAyE,EAAA,EAAAzE,CAAA,GAAKsB,EAAK1C,MAAMoa,WAG3BxX,EAAaC,KAAb,uBAAyC,CACrCoV,eAAgByC,EAChBxF,cAAexS,EAAK1C,MAAMkV,cAC1B1Q,GAAI9B,EAAK1C,MAAMwE,GACfsW,cAAepY,EAAK1C,MAAM6X,OAE9BnV,EAAKC,SAALvB,OAAAyE,EAAA,EAAAzE,CAAA,GAAkBsB,EAAK1C,MAAvB,CAA8Bia,kBAAkB,KAChDxX,EAAMsI,qBAGVgQ,WAAa,SAAAtY,GACT,GAAgC,IAA5BA,EAAMuY,YAAYC,MAAa,OAAO,EAC1C,IAAMC,EAAUxY,EAAKsc,SAASrH,wBAExByD,EACIF,EAAQvB,KADZyB,EAEGF,EAAQrB,IACNqB,EAAQG,MAAQH,EAAQvB,KACvBuB,EAAQI,OAASJ,EAAQrB,IAGrCnX,EAAKC,SAALvB,OAAAyE,EAAA,EAAAzE,CAAA,GACOsB,EAAK1C,MADZ,CAEIma,YAAa,CAACG,EAAG7X,EAAM8Y,QAAUH,EAAYb,EAAG9X,EAAM+Y,QAAUJ,GAChEZ,gBAAiB9X,EAAK1C,MAAMwa,kBAGhC/X,EAAMsI,qBAGV0Q,mBAAqB,SAAC7B,EAAQE,GAE1B,IAAMoB,EAAUxY,EAAKsc,SAASrH,wBAExB+D,EAAa,IAAMR,EAAQpE,OAC3B6E,EAAcjZ,EAAKuB,MAAMiV,cAAcrC,MAAQqE,EAAQrE,MAO7D,OALIiD,EAJkB,IAIMA,EAJN,GAKlBA,EAAS4B,IAAY5B,EAAS4B,GAC9B9B,EANkB,IAMMA,EANN,GAOlBA,EAAS+B,IAAa/B,EAAS+B,GAE5B,CAACrB,EAAGV,EAAQW,EAAGT,MAG1B8B,MAAQ,SAACC,EAAMC,GACX,MAAO,CACHxB,EAAG,EACHC,EAAG,MAGXwB,KAAO,SAACzB,EAAEC,GAAH,OAAS7X,EAAKC,SAALvB,OAAAyE,EAAA,EAAAzE,CAAA,GAAkBsB,EAAK1C,MAAvB,CAA8Boa,SAAU,CAACE,EAAGA,EAAGC,EAAGA,SAElEyB,SAAW,SAAAvZ,GAEP,GAAIC,EAAK1C,MAAMwa,gBAAkB9X,EAAK1C,MAAMia,iBAAiB,CAEzD,IAAIgC,EAAQxZ,EAAM8Y,QAAW7Y,EAAKuB,MAAMiV,cAAcS,KAAQjX,EAAK1C,MAAM4X,cACrEsE,EAAQzZ,EAAM+Y,QAAW9Y,EAAKuB,MAAMiV,cAAcW,IAAMnX,EAAK1C,MAAM4X,cAEnEgC,EAASqC,EAAQvZ,EAAK1C,MAAMma,YAAYG,EAAI5X,EAAKkZ,QAAQtB,EACzDR,EAASoC,EAAQxZ,EAAK1C,MAAMma,YAAYI,EAAI7X,EAAKkZ,QAAQrB,EAEzDF,EAAS3X,EAAK+Y,mBAAmB7B,EAAOE,GAExCqC,EAA+B,IAAX9B,EAAOC,EAAU5X,EAAK1C,MAAMkZ,cAAcrC,MAC9DuF,EAA+B,IAAX/B,EAAOE,EAAU7X,EAAK1C,MAAMkZ,cAAcpC,OAElEpU,EAAKqZ,KAAKI,EAAkBE,QAAQ,GAAK,IAC/BD,EAAkBC,QAAQ,GAAK,KAE7C5Z,EAAMsI,qBAGVuR,cAAgB,SAAA7Z,GACRC,EAAK1C,MAAMwa,iBACX9X,EAAKC,SAALvB,OAAAyE,EAAA,EAAAzE,CAAA,GAAkBsB,EAAK1C,MAAvB,CAA8Bwa,gBAAgB,KAC9C5X,EAAaC,KAAb,sBAAAoN,OAAwCvN,EAAK1C,MAAMwE,IAAM9B,EAAK1C,MAAMoa,WAExE3X,EAAMsI,qBAGVwR,gBAAkB,SAAA9Z,GAAS,IAChB6L,EAAW7L,EAAX6L,QACP5L,EAAKC,SAALvB,OAAAyE,EAAA,EAAAzE,CAAA,GAAkBsB,EAAK1C,MAAvB,CAA8BqJ,KAAMiF,QAGxC2Q,SAAW,SAAA3H,GAAa,IACbT,EAASS,EAATT,MACPnU,EAAKC,SAALvB,OAAAyE,EAAA,EAAAzE,CAAA,GAAkBsB,EAAK1C,MAAvB,CACI6X,KAAKzW,OAAAyE,EAAA,EAAAzE,CAAA,GACEsB,EAAK1C,MAAM6X,KADd,CAEA6G,EAAG7H,UAKfqI,UAAY,SAAA5H,GAAa,IACdR,EAAUQ,EAAVR,OACPpU,EAAKC,SAALvB,OAAAyE,EAAA,EAAAzE,CAAA,GAAkBsB,EAAK1C,MAAvB,CACI6X,KAAKzW,OAAAyE,EAAA,EAAAzE,CAAA,GACEsB,EAAK1C,MAAM6X,KADd,CAEA8G,EAAG7H,UAKf0F,eAAiB,SAAA/Z,GAEb,GAAIA,EAAMga,WAA8B,MAAlBha,EAAMia,OAAiB,CACzC,IAAIC,EAAUja,EAAK1C,MAAM6X,KAAO,EAChC8E,EAAUA,EAAU,IAAM,IAAMA,EAChCja,EAAKC,SAALvB,OAAAyE,EAAA,EAAAzE,CAAA,GAAkBsB,EAAK1C,MAAvB,CAA6B6X,KAAM8E,KACnC/Z,EAAaC,KAAb,kBAAAoN,OAAoCvN,EAAK1C,MAAMwE,IAAMmY,GAGzD,GAAIla,EAAMga,UAA6B,MAAjBha,EAAMia,OAAgB,CACxC,IAAIC,EAAUja,EAAK1C,MAAM6X,KAAO,EAC/B8E,EAAUA,GAAW,EAAI,EAAIA,EAC7Bja,EAAKC,SAALvB,OAAAyE,EAAA,EAAAzE,CAAA,GAAkBsB,EAAK1C,MAAvB,CAA6B6X,KAAM8E,KACnC/Z,EAAaC,KAAb,kBAAAoN,OAAoCvN,EAAK1C,MAAMwE,IAAMmY,GAE1Dla,EAAMsI,qBAGV6R,SAAW,SAAAna,GAAS,IACToV,EAAQpV,EAARoV,KACFnV,EAAK1C,MAAMka,YAMTtX,EAAakB,IAAb,iBAAAmM,OAAkCvN,EAAK1C,MAAMkV,eAAgBxS,EAAKka,UALzEla,EAAKC,SAALvB,OAAAyE,EAAA,EAAAzE,CAAA,GACOsB,EAAK1C,MADZ,CAEIka,aAAa,EACbtC,cAAenV,EAAMmV,cAAgB,EACrCsB,cAAe,CAACrC,MAAOgB,EAAKhB,MAAOC,OAAQe,EAAKf,cAIxDqI,gBAAkB,SAAA7H,GACd5U,EAAKC,SAALvB,OAAAyE,EAAA,EAAAzE,CAAA,GAAkBsB,EAAK1C,MAAvB,CAA8B6X,KAAMP,EAAUO,WAGlDuH,gBAAkB,SAAA9H,GAElB,IAAI+H,EAAS/H,EAAUqD,aAAe,KAAYrD,EAAUqD,aAC5D0E,EAAS/H,EAAUoE,WAAa,EAAI,EAAIpE,EAAUqD,aAC9CjY,EAAKC,SAALvB,OAAAyE,EAAA,EAAAzE,CAAA,GACOsB,EAAK1C,MADZ,CAEI2a,aAAc0E,QAItBC,WAAa,SAAAhI,GACT,IAAIsD,EAAUtD,EAAUsD,QAAU,GAAQtD,EAAUsD,QACpDA,EAAUtD,EAAUsD,QAAU,EAAI,EAAItD,EAAUsD,QAC5ClY,EAAKC,SAALvB,OAAAyE,EAAA,EAAAzE,CAAA,GACOsB,EAAK1C,MADZ,CAEI4a,QAASA,QAIrBoE,SAAW,OACXO,kBAAoB,SAAA3V,GAAI,OAAIlH,EAAKsc,SAAWpV,KAkD5CjG,kBAAoB,WAChBf,EAAagB,GAAb,uBAAAqM,OAAuCvN,EAAK1C,MAAMwE,IAAM9B,EAAK6Z,iBAC7D3Z,EAAagB,GAAb,kBAAAqM,OAAkCvN,EAAK1C,MAAMwE,IAAM9B,EAAKyc,iBACxDvc,EAAagB,GAAb,kBAAAqM,OAAkCvN,EAAK1C,MAAMwE,IAAM9B,EAAK4c,YACxD1c,EAAagB,GAAb,uBAAAqM,OAAuCvN,EAAK1C,MAAMwE,IAAK9B,EAAK0c,iBAC5Dxc,EAAagB,GAAb,iBAAAqM,OAAiCvN,EAAK1C,MAAMkV,eAAiBxS,EAAKka,UAClEha,EAAagB,GAAb,gBAAAqM,OAAgCvN,EAAK1C,MAAMwE,IAAM9B,EAAKuc,UACtDrc,EAAagB,GAAb,iBAAAqM,OAAiCvN,EAAK1C,MAAMwE,IAAM9B,EAAKwc,cAG3Drb,qBAAuB,WACnBjB,EAAakB,IAAb,iBAAAmM,OAAkCvN,EAAK1C,MAAMkV,eAAgBxS,EAAKka,UAClEha,EAAakB,IAAb,kBAAAmM,OAAmCvN,EAAK1C,MAAMwE,IAAM9B,EAAKyc,iBACzDvc,EAAakB,IAAb,kBAAAmM,OAAmCvN,EAAK1C,MAAMwE,IAAM9B,EAAK4c,YACzD1c,EAAakB,IAAb,uBAAAmM,OAAwCvN,EAAK1C,MAAMwE,IAAK9B,EAAK0c,iBAC7Dxc,EAAakB,IAAb,uBAAAmM,OAAwCvN,EAAK1C,MAAMwE,IAAM9B,EAAK6Z,iBAC9D3Z,EAAakB,IAAb,gBAAAmM,OAAiCvN,EAAK1C,MAAMwE,IAAM9B,EAAKuc,UACvDrc,EAAakB,IAAb,iBAAAmM,OAAkCvN,EAAK1C,MAAMwE,IAAM9B,EAAKwc,oFA/DxD,MAAwB,QAApB5d,KAAK2C,MAAM6N,KAEPhP,EAAAC,EAAAC,cAACwb,GAAD,CACArU,IAAO7I,KAAKie,kBACZ1H,KAAQvW,KAAKtB,MAAM6X,KACnBxU,QAAW/B,KAAKmZ,qBAChBqC,YAAexb,KAAKyZ,WACpBgC,YAAczb,KAAK0a,SACnBgB,aAAgB1b,KAAKgb,cACrBW,UAAa3b,KAAKgb,cAClBY,YAAe5b,KAAKyG,KACpBoV,QAAW7b,KAAKkb,eAChB5C,OAAUtY,KAAKtB,MAAMoa,SAAW9Y,KAAKtB,MAAMoa,SAASE,EAAI,KACxDR,OAAUxY,KAAKtB,MAAMoa,SAAW9Y,KAAKtB,MAAMoa,SAASG,EAAI,KACxDb,OAAUpY,KAAKtB,MAAMwa,eACrB4C,8BAAA,GAEIta,EAAAC,EAAAC,cAAC4b,GAAD,CACIY,uBAAA,EACA7E,aAAgBrZ,KAAKtB,MAAM2a,aAC3BC,QAAWtZ,KAAKtB,MAAM4a,QACtBrR,IAAOjI,KAAKtB,MAAMqJ,KAClBG,IAAM,SAIS,eAApBlI,KAAK2C,MAAM6N,KAEdhP,EAAAC,EAAAC,cAACwb,GAAD,CACArU,IAAO7I,KAAKie,kBACZ1H,KAAQvW,KAAKtB,MAAM6X,KACnB+B,OAAUtY,KAAKtB,MAAMoa,SAAW9Y,KAAKtB,MAAMoa,SAASE,EAAI,KACxDR,OAAUxY,KAAKtB,MAAMoa,SAAW9Y,KAAKtB,MAAMoa,SAASG,EAAI,KACxDb,OAAUpY,KAAKtB,MAAMwa,gBAEjB1X,EAAAC,EAAAC,cAAC4b,GAAD,CACIjE,aAAgBrZ,KAAKtB,MAAM2a,aAC3BC,QAAWtZ,KAAKtB,MAAM4a,QACtBrR,IAAOjI,KAAKtB,MAAMqJ,KAClBG,IAAM,cAbf,SAtOKlG,IAAMa,ueCnB1B,IAAMsb,GAAc/I,KAAOC,IAAI4C,MAAM,SAAAtV,GAAK,MAAK,CAC3CuV,MAAO,CACHC,OAAQxV,EAAMyV,OAAS,OAAS,KAChCC,KAAM1V,EAAM2V,OAAS3V,EAAM2V,OAAS,MACpCC,IAAM5V,EAAM6V,UAJApD,CAAHgJ,KAOA,SAAAzb,GAAK,OAAIA,EAAM4T,KAAO5T,EAAM4T,KAAO,SACvC,SAAA5T,GAAK,OAAIA,EAAM0b,YAMtBC,GAAYlJ,KAAOmJ,EAAVC,KAGI,SAAA7b,GAAK,OAAIA,EAAM8b,OA2PnBC,8MAtOXhgB,MAAQ,CACJwE,GAAI9B,EAAKuB,MAAMO,GACfyV,kBAAkB,EAClBgG,YAAY,EACZC,OAAQxd,EAAKuB,MAAMiV,cACnBhE,cAAexS,EAAKuB,MAAMiR,cAC1BiL,UAAWzd,EAAKuB,MAAM2Q,MACtBwL,SAAU1d,EAAKuB,MAAMoc,UAAY3d,EAAKuB,MAAM4T,KAC5CsC,YAAa,KACbmG,SAAU5d,EAAKuB,MAAMoW,OACrB0F,KAAMrd,EAAKuB,MAAM8b,KAAOrd,EAAKuB,MAAM8b,KAAO,QAC1CvF,gBAAgB,EAChB+F,YAAa7d,EAAKuB,MAAMC,SAAWxB,EAAKuB,MAAMC,SAAW,KACzD0T,cAAe,EACfsC,aAAa,KAGjBsG,qBAAuB,SAAA/d,GAElB,IAAMge,EAAwB,CAC3Bjc,GAAI9B,EAAK1C,MAAMwE,GACf0Q,cAAexS,EAAK1C,MAAMkV,cAC1B7Q,KAAM,OACN0b,KAAMrd,EAAK1C,MAAM+f,KACjBnL,MAAOlS,EAAK1C,MAAMmgB,UAClBE,SAAU3d,EAAK1C,MAAMogB,SACrBpC,QAAStb,EAAK1C,MAAMugB,YACpBlG,OAAOjZ,OAAAyE,EAAA,EAAAzE,CAAA,GAAKsB,EAAK1C,MAAM0gB,UAE3B9d,EAAaC,KAAb,uBAAyC,CACjCwB,KAAM,OACN6Q,cAAexS,EAAK1C,MAAMkV,cAC1B1Q,GAAI9B,EAAK1C,MAAMwE,GACfyT,eAAgBwI,EAChB3F,cAAepY,EAAK1C,MAAMogB,WAElC1d,EAAKC,SAALvB,OAAAyE,EAAA,EAAAzE,CAAA,GAAkBsB,EAAK1C,MAAvB,CAA8Bia,kBAAkB,KAChDxX,EAAMsI,qBAGV4V,gBAAkB,SAAApJ,GACU,kBAAbA,GACP7U,EAAKC,SAALvB,OAAAyE,EAAA,EAAAzE,CAAA,GACOsB,EAAK1C,MADZ,CAEImgB,UAAW5I,QAIvBqJ,eAAiB,SAAAC,GACbne,EAAKC,SAALvB,OAAAyE,EAAA,EAAAzE,CAAA,GAAkBsB,EAAK1C,MAAvB,CAA8BogB,SAAUS,EAAUhJ,WAEtD+E,SAAW,SAAAna,GAAS,IACToV,EAAQpV,EAARoV,KACFnV,EAAK1C,MAAMka,YAMTtX,EAAakB,IAAb,iBAAAmM,OAAkCvN,EAAK1C,MAAMkV,eAAgBxS,EAAKka,UALzEla,EAAKC,SAALvB,OAAAyE,EAAA,EAAAzE,CAAA,GACOsB,EAAK1C,MADZ,CAEIka,aAAa,EACbtC,cAAenV,EAAMmV,cACrBsI,OAAQ,CAACrJ,MAAOgB,EAAKhB,MAAOC,OAAQe,EAAKf,cAIjDgK,kBAAoB,SAAAC,IACGA,EAAa/C,SAAoC,KAAzB+C,EAAa/C,UAEpDtb,EAAKC,SAALvB,OAAAyE,EAAA,EAAAzE,CAAA,GACOsB,EAAK1C,MADZ,CAEIugB,YAAaQ,EAAa/C,cAItCjD,WAAa,SAAAtY,GACT,GAAgC,IAA5BA,EAAMuY,YAAYC,MAAa,OAAO,EAC1C,IAAMC,EAAUxY,EAAKse,QAAQrJ,wBAEvByD,EACIF,EAAQvB,KADZyB,EAEGF,EAAQrB,IACNqB,EAAQG,MAAQH,EAAQvB,KACvBuB,EAAQI,OAASJ,EAAQrB,IAGrCnX,EAAKC,SAALvB,OAAAyE,EAAA,EAAAzE,CAAA,GACOsB,EAAK1C,MADZ,CAEIma,YAAa,CAACG,EAAG7X,EAAM8Y,QAAUH,EAAYb,EAAG9X,EAAM+Y,QAAUJ,GAChEZ,gBAAiB9X,EAAK1C,MAAMwa,kBAGhC/X,EAAMsI,qBAGVkW,QAAU,SAAA3J,GACN5U,EAAKC,SAALvB,OAAAyE,EAAA,EAAAzE,CAAA,GACOsB,EAAK1C,MADZ,CAEI+f,KAAMzI,EAAUyI,WAIxBtE,mBAAqB,SAAC7B,EAAQE,GAE1B,IAAMoB,EAAUxY,EAAKse,QAAQrJ,wBAEvB+D,EAAa,IAAMR,EAAQpE,OAC3B6E,EAAcjZ,EAAKuB,MAAMiV,cAAcrC,MAAQqE,EAAQrE,MAO7D,OALIiD,EAJkB,IAIMA,EAJN,GAKlBA,EAAS4B,IAAY5B,EAAS4B,GAC9B9B,EANkB,IAMMA,EANN,GAOlBA,EAAS+B,IAAa/B,EAAS+B,GAE5B,CAACrB,EAAGV,EAAQW,EAAGT,MAG1B8B,MAAQ,SAACC,EAAMC,GACX,MAAO,CACHxB,EAAG,EACHC,EAAG,MAGXwB,KAAO,SAACzB,EAAEC,GAAH,OAAS7X,EAAKC,SAALvB,OAAAyE,EAAA,EAAAzE,CAAA,GAAkBsB,EAAK1C,MAAvB,CAA8BsgB,SAAU,CAAChG,EAAGA,EAAGC,EAAGA,SAElEyB,SAAW,SAAAvZ,GAEP,GAAIC,EAAK1C,MAAMwa,gBAAkB9X,EAAK1C,MAAMia,iBAAiB,CAGzD,IAAIiH,EAA0C,IAA7Bxe,EAAK1C,MAAM4X,cAAsB,EAAIlV,EAAK1C,MAAM4X,cAC7DqE,EAAQxZ,EAAM8Y,QAAW7Y,EAAKuB,MAAMiV,cAAcS,KAAQuH,EAC1DhF,EAAQzZ,EAAM+Y,QAAW9Y,EAAKuB,MAAMiV,cAAcW,IAAMqH,EAExDtH,EAASqC,EAAQvZ,EAAK1C,MAAMma,YAAYG,EAAI5X,EAAKkZ,QAAQtB,EACzDR,EAASoC,EAAQxZ,EAAK1C,MAAMma,YAAYI,EAAI7X,EAAKkZ,QAAQrB,EAEzDF,EAAS3X,EAAK+Y,mBAAmB7B,EAAOE,GAExCqC,EAA+B,IAAX9B,EAAOC,EAAU5X,EAAK1C,MAAMkgB,OAAOrJ,MACvDuF,EAA+B,IAAX/B,EAAOE,EAAU7X,EAAK1C,MAAMkgB,OAAOpJ,OAE3DpU,EAAKqZ,KAAKI,EAAkBE,QAAQ,GAAK,IAC/BD,EAAkBC,QAAQ,GAAK,KAE7C5Z,EAAMsI,qBAGVuR,cAAgB,SAAA7Z,GACRC,EAAK1C,MAAMwa,iBACX9X,EAAKC,SAALvB,OAAAyE,EAAA,EAAAzE,CAAA,GAAkBsB,EAAK1C,MAAvB,CAA8Bwa,gBAAgB,KAC9C5X,EAAaC,KAAb,sBAAAoN,OAAwCvN,EAAK1C,MAAMwE,IAAM9B,EAAK1C,MAAMsgB,WAExE7d,EAAMsI,qBAGVyR,eAAiB,SAAA/Z,GAEb,GAAIA,EAAMga,WAA8B,MAAlBha,EAAMia,OAAiB,CACzC,IAAIC,EAAUja,EAAK1C,MAAMogB,SAAW,EACpCzD,EAAUA,EAAU,IAAM,IAAMA,EAChCja,EAAKC,SAALvB,OAAAyE,EAAA,EAAAzE,CAAA,GAAkBsB,EAAK1C,MAAvB,CAA6BogB,SAAUzD,KACvC/Z,EAAaC,KAAb,kBAAAoN,OAAoCvN,EAAK1C,MAAMwE,IAAMmY,GAGzD,GAAIla,EAAMga,UAA6B,MAAjBha,EAAMia,OAAgB,CACxC,IAAIC,EAAUja,EAAK1C,MAAMogB,SAAW,EACnCzD,EAAUA,GAAW,GAAK,GAAKA,EAC/Bja,EAAKC,SAALvB,OAAAyE,EAAA,EAAAzE,CAAA,GAAkBsB,EAAK1C,MAAvB,CAA6BogB,SAAUzD,KACvC/Z,EAAaC,KAAb,kBAAAoN,OAAoCvN,EAAK1C,MAAMwE,IAAMmY,GAE1Dla,EAAMsI,qBAGViW,QAAU,OACVG,iBAAmB,SAAAvX,GAAI,OAAIlH,EAAKse,QAAUpX,KA0C1CjG,kBAAoB,WAChBf,EAAagB,GAAb,uBAAAqM,OAAuCvN,EAAK1C,MAAMwE,IAAM9B,EAAKie,iBAC7D/d,EAAagB,GAAb,eAAAqM,OAA+BvN,EAAK1C,MAAMwE,IAAM9B,EAAKue,SACrDre,EAAagB,GAAb,kBAAAqM,OAAkCvN,EAAK1C,MAAMwE,IAAM9B,EAAKke,gBACxDhe,EAAagB,GAAb,yBAAAqM,OAAyCvN,EAAK1C,MAAMwE,IAAM9B,EAAKoe,mBAC/Dle,EAAagB,GAAb,iBAAAqM,OAAiCvN,EAAK1C,MAAMkV,eAAgBxS,EAAKka,aAGrE/Y,qBAAuB,WACnBjB,EAAakB,IAAb,uBAAAmM,OAAwCvN,EAAK1C,MAAMwE,IAAM9B,EAAKie,iBAC9D/d,EAAakB,IAAb,eAAAmM,OAAgCvN,EAAK1C,MAAMwE,IAAM9B,EAAKue,SACtDre,EAAakB,IAAb,kBAAAmM,OAAmCvN,EAAK1C,MAAMwE,IAAM9B,EAAKke,gBACzDhe,EAAakB,IAAb,yBAAAmM,OAA0CvN,EAAK1C,MAAMwE,IAAM9B,EAAKoe,mBAChEle,EAAakB,IAAb,iBAAAmM,OAAkCvN,EAAK1C,MAAMkV,eAAgBxS,EAAKka,mFAlDlE,MAAwB,QAApBtb,KAAK2C,MAAM6N,KAEPhP,EAAAC,EAAAC,cAACyc,GAAD,CACItV,IAAQ7I,KAAK6f,iBACb9d,QAAS/B,KAAKkf,qBACdb,UAAare,KAAKtB,MAAMmgB,UAAY7e,KAAKtB,MAAMmgB,UAAY,MAC3DtI,KAAQvW,KAAKtB,MAAMogB,SAAW9e,KAAKtB,MAAMogB,SAAW,KAAO,QAC3DtD,YAAexb,KAAKyZ,WACpBgC,YAAczb,KAAK0a,SACnBgB,aAAgB1b,KAAKgb,cACrBW,UAAa3b,KAAKgb,cAClBa,QAAW7b,KAAKkb,eAChB5C,OAAUtY,KAAKtB,MAAMsgB,SAAWhf,KAAKtB,MAAMsgB,SAAShG,EAAI,KACxDR,OAAUxY,KAAKtB,MAAMsgB,SAAWhf,KAAKtB,MAAMsgB,SAAS/F,EAAI,KACxDb,OAAUpY,KAAKtB,MAAMwa,eACrB4G,sBAAA,GAEAte,EAAAC,EAAAC,cAAC4c,GAAD,CAAWG,KAAQze,KAAKtB,MAAM+f,MAAOze,KAAKtB,MAAMugB,cAG7B,eAApBjf,KAAK2C,MAAM6N,KAEdhP,EAAAC,EAAAC,cAACyc,GAAD,CACItV,IAAQ7I,KAAK6f,iBACbxB,UAAare,KAAKtB,MAAMmgB,UAAY7e,KAAKtB,MAAMmgB,UAAY,MAC3DtI,KAAQvW,KAAKtB,MAAMogB,SAAW9e,KAAKtB,MAAMogB,SAAW,KAAO,QAC3DxG,OAAUtY,KAAKtB,MAAMsgB,SAAWhf,KAAKtB,MAAMsgB,SAAShG,EAAI,KACxDR,OAAUxY,KAAKtB,MAAMsgB,SAAWhf,KAAKtB,MAAMsgB,SAAS/F,EAAI,KACxDb,OAAUpY,KAAKtB,MAAMwa,gBAErB1X,EAAAC,EAAAC,cAAC4c,GAAD,CAAWG,KAAQze,KAAKtB,MAAM+f,MAAOze,KAAKtB,MAAMugB,mBAVrD,SAjNajd,IAAMa,eC6CnBkd,GArEW,SAAApd,GAEtB,MAAmB,SAAfA,EAAMI,KACCvB,EAAAC,EAAAC,cAACse,GAAD,CACK3N,IAAG,OAAA1D,OAAWhM,EAAMO,IACpB0Q,cAAiBjR,EAAMiR,cACvBgE,cAAa9X,OAAAyE,EAAA,EAAAzE,CAAA,GAAQ6C,EAAMiV,eAC3B1U,GAAMP,EAAMO,GACZqT,KAAQ5T,EAAM4T,KAAO5T,EAAM4T,KAAO5T,EAAMoc,SACxCzL,MAAS3Q,EAAM2Q,MACfgG,QAAW3W,EAAM2W,QACjBP,OAAMjZ,OAAAyE,EAAA,EAAAzE,CAAA,GAAQ6C,EAAMoW,QACpB0F,KAAQ9b,EAAM8b,KACdjO,KAAQ7N,EAAM6N,MAEb7N,EAAM+Z,SAGJ,eAAf/Z,EAAMI,KACCvB,EAAAC,EAAAC,cAAC6V,GAAD,CACK3D,cAAiBjR,EAAMiR,cACvBN,MAAS3Q,EAAM2Q,MACfiC,MAAS5S,EAAM4S,MACfC,OAAU7S,EAAM6S,OAChBe,KAAQ5T,EAAM4T,KACdrT,GAAMP,EAAMO,GACZmP,IAAG,KAAA1D,OAAShM,EAAMO,IAClBsN,KAAQ7N,EAAM6N,OAGX,UAAf7N,EAAMI,KACCvB,EAAAC,EAAAC,cAACue,GAAD,CACKrM,cAAiBjR,EAAMiR,cACvByF,aAAgB1W,EAAM0W,cAAgB,EACtCC,QAAW3W,EAAM2W,QACjB/C,KAAQ5T,EAAM4T,KAAO5T,EAAM4T,KAAO,CAAC6G,EAAG,GAAIC,EAAG,IAC7CtV,KAAQpF,EAAMoF,KAAOpF,EAAMoF,KAAOpF,EAAM4W,MACxCR,OAAMjZ,OAAAyE,EAAA,EAAAzE,CAAA,GAAQ6C,EAAMoW,QACpBnB,cAAa9X,OAAAyE,EAAA,EAAAzE,CAAA,GAAQ6C,EAAMiV,eAC3B1U,GAAMP,EAAMO,GACZmP,IAAG,QAAA1D,OAAYhM,EAAMO,IACrBsN,KAAQ7N,EAAM6N,OAIX,UAAf7N,EAAMI,KACCvB,EAAAC,EAAAC,cAACwe,GAAD,CACK7N,IAAG,QAAA1D,OAAYhM,EAAMO,IACrBA,GAAMP,EAAMO,GACZwZ,QAAW/Z,EAAM+Z,QACjB9I,cAAiBjR,EAAMiR,cACvBgE,cAAa9X,OAAAyE,EAAA,EAAAzE,CAAA,GAAQ6C,EAAMiV,eAC3B7P,KAAQpF,EAAMoF,KAAOpF,EAAMoF,KAAOpF,EAAM+Z,QACxC3D,OAAMjZ,OAAAyE,EAAA,EAAAzE,CAAA,GAAQ6C,EAAMoW,QACpBvI,KAAQ7N,EAAM6N,OAEP,UAAf7N,EAAMI,KACCvB,EAAAC,EAAAC,cAACye,GAAD,CACKvM,cAAiBjR,EAAMiR,cACvB2C,KAAQ5T,EAAM4T,KAAO5T,EAAM4T,KAAO5T,EAAMoc,SACxChX,KAAQpF,EAAMoF,KAAOpF,EAAMoF,KAAOpF,EAAM4W,MACxCR,OAAMjZ,OAAAyE,EAAA,EAAAzE,CAAA,GAAQ6C,EAAMoW,QACpBnB,cAAa9X,OAAAyE,EAAA,EAAAzE,CAAA,GAAQ6C,EAAMiV,eAC3B1U,GAAMP,EAAMO,GACZmP,IAAG,QAAA1D,OAAYhM,EAAMO,IACrBsN,KAAQ7N,EAAM6N,YAT9B,GCnDF4P,8MAMF1hB,MAAQ,CACJ6E,UAAW8c,SAASjf,EAAKuB,MAAM9E,MAAMyiB,OAAOC,OAC5C/P,KAAM,aACNgQ,cAAc,EACdC,kBAAkB,EAClB3I,kBAAmB,MAGvB4I,eAAiB,SAAAC,GAAS,IAEjB7I,EAAqB1W,EAAK1C,MAA1BoZ,kBACD8I,EAAc,GAElBD,EAAMpP,QAAQ,SAAA7M,GAEN,IAAIkT,EAAgB,CAChBrC,MAAOnU,EAAKyf,QAAQta,KAAKgP,MACzBC,OAAQpU,EAAKyf,QAAQta,KAAKiP,OAC1B+C,IAAKnX,EAAKyf,QAAQta,KAAKgS,IACvBF,KAAMjX,EAAKyf,QAAQta,KAAK8R,MAExB9N,EACA/I,EAAAC,EAAAC,cAACof,GAADhhB,OAAA6H,OAAA,CACIiQ,cAAa9X,OAAAyE,EAAA,EAAAzE,CAAA,GAAQ8X,GACrBpH,KAAQpP,EAAK1C,MAAM8R,MACf9L,EAHR,CAII2N,IAAG,GAAA1D,OAAOjK,EAAK3B,MAAZ4L,OAAmBjK,EAAKxB,OAG7B6d,EAAa,CACf7d,GAAIwB,EAAKxB,GACT0Q,cAAelP,EAAKkP,cACpBrJ,UAAWA,GAEfqW,EAAYpP,KAAKuP,KAErB3f,EAAKC,SAALvB,OAAAyE,EAAA,EAAAzE,CAAA,GACOsB,EAAK1C,MADZ,CAEI+hB,kBAAkB,EAClB3I,kBAAiB,GAAAnJ,OAAA7O,OAAA0D,EAAA,EAAA1D,CAAMgY,GAAsB8I,SAIzDC,QAAU,OACVG,kBAAqB,SAAA1Y,GAAI,OAAIA,EAC7BlH,EAAKyf,QAAU,CAACta,KAAM+B,EAAK+N,wBAAyB/N,KAAMA,GAAQA,KAqClE2Y,mBAAqB,SAACC,EAAWC,GAAc,IACtC1J,EAAYrW,EAAKuB,MAAjB8U,SACAL,EAAuBK,EAAvBL,oBAEL,GAAIK,EAAS/T,SAAW0T,EAAoBpT,YAAa,CACrD,IAAM6K,EAAW4I,EAAS5T,SAASuG,KAAK,SAAA1F,GAAI,OAAIA,EAAKxB,KAAO9B,EAAK1C,MAAM6E,YACnEsL,EACJzN,EAAKuB,MAAM8C,SAASxC,EAAyB,CACzCC,GAAI2L,EAAQ3L,GACZC,YAAa0L,EAAQ9L,KACrBK,gBAAgBtD,OAAA0D,EAAA,EAAA1D,CAAK+O,EAAQzL,iBAC7BC,WAAWvD,OAAA0D,EAAA,EAAA1D,CAAK+O,EAAQxL,eAEvBjC,EAAKC,SAALvB,OAAAyE,EAAA,EAAAzE,CAAA,GAAkBsB,EAAK1C,MAAvB,CAA8B8hB,cAAc,KAGjDpf,EAAK1C,MAAM+hB,kBAAoBrJ,EAAoBpT,aACnD5C,EAAKsf,eAAetJ,EAAoB/T,eAKhDhB,kBAAoB,WAAM,IACjBoV,EAAYrW,EAAKuB,MAAjB8U,SACAL,EAAuBK,EAAvBL,oBAEL,GAAIK,EAAS/T,SAAW0T,EAAoBpT,YAAa,CACrD,IAAM6K,EAAW4I,EAAS5T,SAASuG,KAAK,SAAA1F,GAAI,OAAIA,EAAKxB,KAAO9B,EAAK1C,MAAM6E,YACvEnC,EAAKuB,MAAM8C,SAASxC,EAAyB,CACzCC,GAAI2L,EAAQ3L,GACZE,gBAAgBtD,OAAA0D,EAAA,EAAA1D,CAAK+O,EAAQzL,iBAC7BD,YAAa0L,EAAQ9L,KACrBM,WAAWvD,OAAA0D,EAAA,EAAA1D,CAAK+O,EAAQxL,mBAMpCd,qBAAuB,WAEFnB,EAAKuB,MAAjB8U,SACQ/T,QAAStC,EAAKuB,MAAM8C,SAAS3C,GAAkB,6EA5ExD,IAEG2U,EAAYzX,KAAK2C,MAAjB8U,SACAL,EAAuBK,EAAvBL,oBACDS,EAAUT,EAAoBhU,gBAEpC,OAAIpD,KAAKtB,MAAM8hB,aAAqBhf,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAUC,GAAK,aAE/C6V,EAAS/T,QAAU0T,EAAoBpT,YAEvCxC,EAAAC,EAAAC,cAACqR,EAAA,SAAD,KACIvR,EAAAC,EAAAC,cAACsT,GAAD,CAAQ3C,IAAM,SAAStJ,MAAQ,gBAC/BvH,EAAAC,EAAAC,cAAA,OACImH,IAAO7I,KAAKghB,kBACZlf,UAAY,aACZuQ,IAAM,cAEJrS,KAAKtB,MAAM+hB,iBASP,KARF5I,EAAQzT,QACJ5C,EAAAC,EAAAC,cAAC0f,GAAD,CACI/O,IAAM,UACN7B,KAAQxQ,KAAKtB,MAAM8R,KACnB4G,oBAAuBA,EACvBU,kBAAqB9X,KAAKtB,MAAMoZ,kBAChCD,QAAWA,MAOvB7X,KAAK2C,MAAM1C,SAAS6U,iBACpBtT,EAAAC,EAAAC,cAACkG,EAAD,CAASyK,IAAM,SAAStK,KAAO,mBAAmBhF,KAAO,eADZvB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAUC,GAAK,aApFvDI,IAAMa,eAiJdgH,eAXO,SAACnL,GACrB,MAAO,CACH+Y,SAAU,CACN/T,OAAQhF,EAAM8F,QAAQd,OACtBC,OAAQjF,EAAM8F,QAAQb,OACtBE,SAAS/D,OAAA0D,EAAA,EAAA1D,CAAKpB,EAAM8F,QAAQX,UAC7BuT,oBAAoBtX,OAAAyE,EAAA,EAAAzE,CAAA,GAAKpB,EAAMwF,YAKzB2F,CAAyBrC,EAAa4Y,KC9GxC5Y,wNA7BX9I,MAAQ,CACJV,OAAQoD,EAAKuB,MAAM3E,gFAInB,GAAIgC,KAAK2C,MAAM1C,SAAS6U,iBAAkB,KAC9B9W,EAAWgC,KAAKtB,MAAhBV,OACR,OACIwD,EAAAC,EAAAC,cAACqR,EAAA,SAAD,KACIvR,EAAAC,EAAAC,cAACsT,GAAD,CAAQjM,MAAS/K,EAAO+K,QACxBvH,EAAAC,EAAAC,cAAA,WAASI,UAAY,SACjBN,EAAAC,EAAAC,cAAA,OAAKI,UAAY,aACbN,EAAAC,EAAAC,cAAA,OAAKI,UAAY,UACbN,EAAAC,EAAAC,cAAA,OAAKI,UAAY,eACjBN,EAAAC,EAAAC,cAAA,OAAKwG,IAAM,MAAMpG,UAAY,YAAYmG,IAAO7I,+BAC5CoC,EAAAC,EAAAC,cAAA,KAAGI,UAAW,aAAYN,EAAAC,EAAAC,cAAA,0BAA1B,IAAmD1D,EAAOqjB,MAAMC,WAChE9f,EAAAC,EAAAC,cAAA,KAAGI,UAAY,QAAON,EAAAC,EAAAC,cAAA,qBAAtB,IAA0C1D,EAAOqjB,MAAME,WAO5E,OAAO/f,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAUC,GAAO,aAjCnBI,IAAMa,0BCeX2e,GAtBU,SAAC9c,GAAD,sBAAAU,EAAAtF,OAAAuF,EAAA,EAAAvF,CAAAwF,EAAA7D,EAAA8D,KAAU,SAAAC,EAAOC,EAASC,EAAhBC,GAAA,IAAA1F,EAAAwhB,EAAA,OAAAnc,EAAA7D,EAAAmE,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAA2B9F,EAA3B0F,EAA2B1F,SACtDwhB,EAAc/c,EAAKb,SAASY,IAAI,SAAA4F,GAKhC,OAJIA,EAAQnH,KAAOwB,EAAKnB,YACpB8G,EAAQhH,WAARvD,OAAA0D,EAAA,EAAA1D,CAAyB4E,EAAKrB,YAC9BgH,EAAQjH,gBAARtD,OAAA0D,EAAA,EAAA1D,CAA8B4E,EAAKtB,kBAEhCiH,IANoBxE,EAAAE,KAAA,EAQzB9F,EAASE,GAAG+F,WAAW,SAASC,IAAIzB,EAAKd,KAAK1C,OAAO,CACvD2C,SAAY6d,KAAKC,MAAMD,KAAKE,UAAUH,MAEzCrjB,KAAK,SAAA6H,GACF,IAAIoE,EAAU3F,EAAKb,SAASuG,KAAK,SAAAW,GAAM,OAAIA,EAAO7H,KAAOwB,EAAKnB,YAC9DkC,EAASnC,EAAyB,CAC9BD,WAAWvD,OAAA0D,EAAA,EAAA1D,CAAKuK,EAAQhH,YACxBE,UAAWmB,EAAKnB,UAChBH,gBAAiBsB,EAAKtB,qBAG7BpE,MAAM,SAAAC,GAAK,OAAIwG,EAAS3B,EAAY7E,EAAMuH,YAnBZ,wBAAAX,EAAAY,SAAAjB,MAAV,gBAAAkB,EAAAC,EAAAC,GAAA,OAAAxB,EAAAyB,MAAA7G,KAAAmE,YAAA,WC6BV0d,OA1Bf,SAAgBlf,GAAM,IAAAkF,EAELC,mBAASnF,EAAM6N,MAAvBA,EAFa1Q,OAAAkI,EAAA,EAAAlI,CAAA+H,EAAA,MAAAoD,EAGLnD,mBAASnF,EAAMoF,MAAvBA,EAHajI,OAAAkI,EAAA,EAAAlI,CAAAmL,EAAA,MAUlB,OAEIzJ,EAAAC,EAAAC,cAAA,OAAKK,QAPW,SAAAZ,GAChBG,EAAaC,KAAK,YAAa,CAAE+C,QAAQ,EAAO0N,OAAQ,OACxD7Q,EAAMsI,mBAKuB3H,UAAY,UAC3B,UAAT0O,EAAmBhP,EAAAC,EAAAC,cAAA,OAAKuG,IAAOF,EAAMG,IAAM,cAE5C1G,EAAAC,EAAAC,cAAA,UACAuG,IAAG,iCAAA0G,OAAoChM,EAAM4K,QAC7CxE,MAAQ,UACR+Y,YAAY,IAAIC,MAAM,0EACtBC,iBAAe,MCeZC,WArCU,SAAAtf,GAAS,IAGzBoc,EAAYpc,EAAMgU,eAAlBoI,SACAhG,EAAUpW,EAAMgU,eAAhBoC,OAEL,OACIvX,EAAAC,EAAAC,cAACqR,EAAA,SAAD,KACIvR,EAAAC,EAAAC,cAAA,KAAGI,UAAY,kBAAf,cACAN,EAAAC,EAAAC,cAAA,QAAMI,UAAY,mBACjBiX,EAAOC,EACJD,EAAOC,EAAI,MAAQD,EAAOE,EAAI,oBAElCzX,EAAAC,EAAAC,cAAA,KAAGI,UAAY,kBAAf,UACAN,EAAAC,EAAAC,cAAA,SACIoM,SAAYnL,EAAMuf,UAClBnf,KAAK,SACLwQ,IAAM,KAAKC,IAAM,MACjB2O,aAAgBpD,GAAsB,MAE1Cvd,EAAAC,EAAAC,cAAA,KAAGI,UAAY,kBAAf,aACAN,EAAAC,EAAAC,cAAA,SACIK,QAAWY,EAAMoM,SACjBjN,UAAY,oBACZiB,KAAK,SACL0F,MAAQ,iBAEZjH,EAAAC,EAAAC,cAAA,SACIK,QAAWY,EAAMyf,SACjBtgB,UAAY,yCACZiB,KAAK,SACL0F,MAAQ,cCoDT4Z,GAnFU,SAAA1f,GAAS,IAEzBoW,EAAUpW,EAAMgU,eAAhBoC,OACAxC,EAAQ5T,EAAMgU,eAAdJ,KACD+L,EAAUtgB,IAAM0M,YACpB,OACIlN,EAAAC,EAAAC,cAACqR,EAAA,SAAD,KACAvR,EAAAC,EAAAC,cAAA,KAAGI,UAAY,kBAAf,cACAN,EAAAC,EAAAC,cAAA,QAAMI,UAAY,mBACjBiX,EAAOC,EACJD,EAAOC,EAAI,MAAQD,EAAOE,EAAI,oBAElCzX,EAAAC,EAAAC,cAAA,KAAGI,UAAY,kBAAf,aACAN,EAAAC,EAAAC,cAAA,OAAKI,UAAY,gBACbN,EAAAC,EAAAC,cAAA,SACII,UAAY,gBACZgM,SAAYnL,EAAM4f,WAClBxf,KAAK,SACLwQ,IAAM,KAAKC,IAAM,MACjB/K,MAAS8N,EAAK6G,EAAI7G,EAAK6G,EAAI,KAE/B5b,EAAAC,EAAAC,cAAA,SACII,UAAY,gBACZgM,SAAYnL,EAAM6f,YAClBzf,KAAK,SACLwQ,IAAM,KAAKC,IAAM,MACjB/K,MAAS8N,EAAK8G,EAAI9G,EAAK8G,EAAI,MAGnC7b,EAAAC,EAAAC,cAAA,KAAGI,UAAY,kBAAf,mBACIN,EAAAC,EAAAC,cAAA,SACIoM,SAAYnL,EAAM8f,kBAClB3gB,UAAY,uBACZiB,KAAK,SACL0F,MAAS9F,EAAMgU,eAAe0C,aAClB1W,EAAMgU,eAAe0C,aAAe,GAEhD9F,IAAM,KAAKC,IAAM,QAErBhS,EAAAC,EAAAC,cAAA,KAAGI,UAAY,2CAAf,aACAN,EAAAC,EAAAC,cAAA,SACIoM,SAAYnL,EAAM+f,aAClB5gB,UAAY,oBACZiB,KAAK,SACL0F,MAAS9F,EAAMgU,eAAe2C,QAC1B3W,EAAMgU,eAAe2C,QAAU,EAEnCqJ,KAAO,MACPpP,IAAM,IAAIC,IAAM,MAEpBhS,EAAAC,EAAAC,cAAA,KAAGI,UAAY,2CAAf,YACAN,EAAAC,EAAAC,cAAA,OAAKI,UAAY,cACjBN,EAAAC,EAAAC,cAAA,SACImH,IAAOyZ,EACPxgB,UAAY,YACZgM,SAAYnL,EAAMigB,WAClBC,OAAO,UACP9f,KAAK,SAELvB,EAAAC,EAAAC,cAAA,SAEQI,UAAY,oBACZiB,KAAO,SACP0F,MAAQ,kBAGpBjH,EAAAC,EAAAC,cAAA,SACIK,QAAWY,EAAMoM,SACjBjN,UAAY,oBACZiB,KAAK,SACL0F,MAAQ,iBAEZjH,EAAAC,EAAAC,cAAA,SACIK,QAAWY,EAAMyf,SACjBtgB,UAAY,yCACZiB,KAAK,SACL0F,MAAQ,sBCxCTqa,GAnCe,SAAAngB,GAAS,IAE5BogB,EAAmBjb,mBAASnF,EAAMgU,gBAAlCoM,gBACHzP,EAAQ,KAKZ,MAJ+B,kBAApByP,GACPA,EAAgBC,eAAe,WAC/B1P,EAAQyP,EAAgBzP,OAGxB9R,EAAAC,EAAAC,cAACqR,EAAA,SAAD,KACAvR,EAAAC,EAAAC,cAAA,KAAGI,UAAY,kBAAf,WACAN,EAAAC,EAAAC,cAAA,SACIK,QAAWY,EAAMsgB,WACjBnhB,UAAY,sBACZiB,KAAO,SACP0F,MAAQ,eAEN9F,EAAMugB,kBACJ1hB,EAAAC,EAAAC,cAACyhB,GAAA,aAAD,CACIC,iBAAkBzgB,EAAM0gB,uBACxB/P,MAASA,GAAgB,QAE3B,KAEN9R,EAAAC,EAAAC,cAAA,SACIK,QAAWY,EAAMoM,SACjBjN,UAAY,oBACZiB,KAAO,SACP0F,MAAQ,uBCoCT6a,GAhES,SAAA3gB,GAAS,IAEpBugB,EAAqBvgB,EAAM4gB,gBAA3BL,kBACAxG,EAAW/Z,EAAMgU,eAAjB+F,QACAqC,EAAYpc,EAAMgU,eAAlBoI,SACAhG,EAAUpW,EAAMgU,eAAhBoC,OACAzF,EAAS3Q,EAAMgU,eAAfrD,MACDkQ,EAAuB,KAAZ9G,EAAiB,QAAU,GAE1C,OACIlb,EAAAC,EAAAC,cAACqR,EAAA,SAAD,KACAvR,EAAAC,EAAAC,cAAA,KAAGI,UAAY,kBAAf,cACAN,EAAAC,EAAAC,cAAA,QAAMI,UAAY,mBACjBiX,EAAOC,EACJD,EAAOC,EAAI,MAAQD,EAAOE,EAAI,oBAElCzX,EAAAC,EAAAC,cAAA,KAAGI,UAAY,kBAAf,WACAN,EAAAC,EAAAC,cAAA,SACIK,QAAWY,EAAMsgB,WACjBnhB,UAAY,gBACZiB,KAAO,SACP0F,MAAQ,eAEZjH,EAAAC,EAAAC,cAAA,KAAGI,UAAY,kBAAf,eACAN,EAAAC,EAAAC,cAAA,SACIoM,SAAYnL,EAAMuf,UAClBnf,KAAK,SACLwQ,IAAM,KAAKC,IAAM,MACjB/K,MAASsW,GAAsB,MAE7BmE,EACE1hB,EAAAC,EAAAC,cAACyhB,GAAA,aAAD,CACAC,iBAAkBzgB,EAAM0gB,uBACxB/P,MAASA,GAAe,QAEtB,KAEN9R,EAAAC,EAAAC,cAAA,KAAGI,UAAY,kBAAf,UACAN,EAAAC,EAAAC,cAAA,UAAQ+G,MAAS9F,EAAMgU,eAAe8H,KAAM3Q,SAAYnL,EAAM8gB,WAC9DjiB,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,wBACAF,EAAAC,EAAAC,cAAA,wBACAF,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,wBAEJF,EAAAC,EAAAC,cAAA,KAAGI,UAAY,kBAAf,aACAN,EAAAC,EAAAC,cAAA,SACIoM,SAAYnL,EAAM+gB,aAClBC,UAAY,MACZ5gB,KAAO,OACP0F,MAASiU,GAAoB8G,IAEjChiB,EAAAC,EAAAC,cAAA,SACIK,QAAWY,EAAMyf,SACjBtgB,UAAY,yCACZiB,KAAK,SACL0F,MAAQ,aCwUTmb,8MAhXXllB,MAAQ,CACJ6kB,gBAAgBzjB,OAAAyE,EAAA,EAAAzE,CAAA,GAAKsB,EAAKuB,MAAM4gB,iBAChC5M,eAAgBvV,EAAKuB,MAAMgU,eAC3BzH,OAAQ,QAGZ2U,MAAQ,OAERC,WAAa,SAAAvE,GACTne,EAAKC,SAALvB,OAAAyE,EAAA,EAAAzE,CAAA,GACOsB,EAAK1C,MADZ,CAEI6kB,gBAAgBzjB,OAAAyE,EAAA,EAAAzE,CAAA,GAAKsB,EAAK1C,MAAM6kB,iBAChC5M,eAAe7W,OAAAyE,EAAA,EAAAzE,CAAA,GACRsB,EAAK1C,MAAMiY,eADJ,CAEVoI,SAAUQ,UAKtBwE,WAAa,SAAA5iB,GACTG,EAAaC,KAAK,kBAAmB,CAACyiB,OAAO,OAGjDC,QAAU,SAAA9iB,GAAS,IACV+B,EAAM9B,EAAK1C,MAAMiY,eAAjBzT,GACDqT,EAAOpV,EAAM6Q,OAAOvJ,MAAQ,IAAM,IAAMtH,EAAM6Q,OAAOvJ,MACzDrH,EAAKC,SAALvB,OAAAyE,EAAA,EAAAzE,CAAA,GACOsB,EAAK1C,MADZ,CAEI6kB,gBAAgBzjB,OAAAyE,EAAA,EAAAzE,CAAA,GAAKsB,EAAK1C,MAAM6kB,iBAChC5M,eAAe7W,OAAAyE,EAAA,EAAAzE,CAAA,GAAKsB,EAAK1C,MAAMiY,eAAjB,CAAgCoI,SAAUxI,MAExD,kBAAMjV,EAAaC,KAAb,kBAAAoN,OAAoCzL,GAAM,CAC5C0Q,cAAexS,EAAK1C,MAAMuY,kBAAmBV,KAAMA,SAK/DoJ,QAAU,SAAAxe,GAAS,IACV+B,EAAM9B,EAAK1C,MAAMiY,eAAjBzT,GACDghB,EAAW/iB,EAAM6Q,OAAOvJ,MAC5BrH,EAAKC,SAALvB,OAAAyE,EAAA,EAAAzE,CAAA,GACOsB,EAAK1C,MADZ,CAEI6kB,gBAAgBzjB,OAAAyE,EAAA,EAAAzE,CAAA,GAAKsB,EAAK1C,MAAM6kB,iBAChC5M,eAAe7W,OAAAyE,EAAA,EAAAzE,CAAA,GAAKsB,EAAK1C,MAAMiY,eAAjB,CAAgC8H,KAAMyF,MAEpD,kBAAM5iB,EAAaC,KAAb,eAAAoN,OAAiCzL,GAAM,CACzC0Q,cAAexS,EAAK1C,MAAMuY,kBAAmBwH,KAAMyF,SAK/DC,iBAAmB,SAAAnO,GAEf5U,EAAKC,SAALvB,OAAAyE,EAAA,EAAAzE,CAAA,GACOsB,EAAK1C,MADZ,CAEIiY,eAAe7W,OAAAyE,EAAA,EAAAzE,CAAA,GACRsB,EAAK1C,MAAMiY,eADJ,CAEV+F,QAAS1G,EAAUzI,eAK/BwP,WAAa,SAAA5b,GAAS,IACb+B,EAAM9B,EAAK1C,MAAMiY,eAAjBzT,GACDkhB,EAAejjB,EAAM6Q,OAAOvJ,MAChCrH,EAAKC,SAALvB,OAAAyE,EAAA,EAAAzE,CAAA,GACOsB,EAAK1C,MADZ,CAEI6kB,gBAAgBzjB,OAAAyE,EAAA,EAAAzE,CAAA,GAAKsB,EAAK1C,MAAM6kB,iBAChC5M,eAAe7W,OAAAyE,EAAA,EAAAzE,CAAA,GAAKsB,EAAK1C,MAAMiY,eAAjB,CAAgC+F,QAAS0H,MAEvD,kBAAM9iB,EAAaC,KAAb,yBAAAoN,OAA2CzL,GAAK,CAClD0Q,cAAexS,EAAK1C,MAAMuY,kBAAmByF,QAAS0H,MAG1DjjB,GAAOA,EAAMsI,qBAGrBkU,SAAW,SAAAxc,GAAS,IACT+B,EAAM9B,EAAK1C,MAAMiY,eAAjBzT,GACDqS,EAAQpU,EAAM6Q,OAAOvJ,MAC3BrH,EAAKC,SAALvB,OAAAyE,EAAA,EAAAzE,CAAA,GACOsB,EAAK1C,MADZ,CAEIiY,eAAe7W,OAAAyE,EAAA,EAAAzE,CAAA,GAAKsB,EAAK1C,MAAMiY,eAAjB,CACVJ,KAAKzW,OAAAyE,EAAA,EAAAzE,CAAA,GACEsB,EAAK1C,MAAMiY,eAAeJ,KAD7B,CAEA6G,EAAG7H,QAGX,kBAAMjU,EAAaC,KAAb,gBAAAoN,OAAkCzL,GAAK,CAACqS,MAAOA,MAErDpU,GAAOA,EAAMsI,qBAGrBmU,UAAY,SAAAzc,GAAS,IACV+B,EAAM9B,EAAK1C,MAAMiY,eAAjBzT,GACDsS,EAASrU,EAAM6Q,OAAOvJ,MAC5BrH,EAAKC,SAALvB,OAAAyE,EAAA,EAAAzE,CAAA,GACOsB,EAAK1C,MADZ,CAEIiY,eAAe7W,OAAAyE,EAAA,EAAAzE,CAAA,GAAKsB,EAAK1C,MAAMiY,eAAjB,CACVJ,KAAKzW,OAAAyE,EAAA,EAAAzE,CAAA,GACEsB,EAAK1C,MAAMiY,eAAeJ,KAD7B,CAEA8G,EAAG7H,QAGX,kBAAMlU,EAAaC,KAAb,iBAAAoN,OAAmCzL,GAAK,CAACsS,OAAQA,MAEvDrU,GAAOA,EAAMsI,qBAGrB4a,eAAiB,SAAArO,GACRA,GACL5U,EAAKC,SAALvB,OAAAyE,EAAA,EAAAzE,CAAA,GACOsB,EAAK1C,MADZ,CAEIiY,eAAe7W,OAAAyE,EAAA,EAAAzE,CAAA,GACRsB,EAAK1C,MAAMiY,eADJ,CAEVoC,OAAOjZ,OAAAyE,EAAA,EAAAzE,CAAA,GACAsB,EAAK1C,MAAMiY,eAAeoC,OAD3B,CAEFC,EAAGhD,EAAUgD,EACbC,EAAGjD,EAAUiD,YAM7BqL,SAAW,SAAAnjB,GACPC,EAAKC,SAALvB,OAAAyE,EAAA,EAAAzE,CAAA,GAAkBsB,EAAK1C,MAAvB,CACI6kB,gBAAgBzjB,OAAAyE,EAAA,EAAAzE,CAAA,GACTsB,EAAK1C,MAAM6kB,gBADH,CAEXL,mBAAmB9hB,EAAK1C,MAAM6kB,gBAAgBL,uBAGlD/hB,GAAOA,EAAMsI,qBAGrBuU,WAAa,SAAA7c,GAAS,IACb+B,EAAM9B,EAAK1C,MAAMiY,eAAjBzT,GACDoW,EAAUnY,EAAM6Q,OAAOvJ,MAE3BrH,EAAKC,SAALvB,OAAAyE,EAAA,EAAAzE,CAAA,GACOsB,EAAK1C,MADZ,CAEIiY,eAAe7W,OAAAyE,EAAA,EAAAzE,CAAA,GAAKsB,EAAK1C,MAAMiY,eAAjB,CAAgC2C,QAASA,MAE1D,kBAAMhY,EAAaC,KAAb,kBAAAoN,OAAoCzL,GAAM,CAACoW,QAASA,SAG/DwE,gBAAkB,SAAA3c,GAAS,IAClB+B,EAAM9B,EAAK1C,MAAMiY,eAAjBzT,GACD6a,EAAS5c,EAAM6Q,OAAOvJ,MAE1BrH,EAAKC,SAALvB,OAAAyE,EAAA,EAAAzE,CAAA,GACOsB,EAAK1C,MADZ,CAEIiY,eAAe7W,OAAAyE,EAAA,EAAAzE,CAAA,GAAKsB,EAAK1C,MAAMiY,eAAjB,CAAgC0C,aAAc0E,MAE/D,kBAAMzc,EAAaC,KAAb,uBAAAoN,OAAyCzL,GAAM,CAACmW,aAAc0E,SAGzEwG,kBAAoB,SAAAvO,GAAa,IACtB9G,EAAU8G,EAAV9G,OACgB,UAAnB8G,EAAUxF,KACdpP,EAAKC,SAALvB,OAAAyE,EAAA,EAAAzE,CAAA,GACOsB,EAAK1C,MADZ,CAEIiY,eAAe7W,OAAAyE,EAAA,EAAAzE,CAAA,GACRsB,EAAK1C,MAAMiY,eADJ,CAEVtD,gBAAiBnE,EAAOlC,aAI5B5L,EAAKC,SAALvB,OAAAyE,EAAA,EAAAzE,CAAA,GACOsB,EAAK1C,MADZ,CAEIiY,eAAe7W,OAAAyE,EAAA,EAAAzE,CAAA,GACRsB,EAAK1C,MAAMiY,eADJ,CAEV4C,MAAOrK,EAAOlC,gBAM9BwX,qBAAuB,SAAArjB,GAAS,IAErBsjB,EAAOtjB,EAAPsjB,IACHxO,EAAQ,OAAAtH,OAAU8V,EAAIC,EAAd,KAAA/V,OAAmB8V,EAAIE,EAAvB,KAAAhW,OAA4B8V,EAAIG,EAAhC,KAAAjW,OAAqC8V,EAAIhjB,EAAzC,KAEPyB,EAAM9B,EAAK1C,MAAMiY,eAAjBzT,GACkC,eAAnC9B,EAAK1C,MAAMiY,eAAe5T,KAC1B3B,EAAKC,SAALvB,OAAAyE,EAAA,EAAAzE,CAAA,GACOsB,EAAK1C,MADZ,CAEIiY,eAAe7W,OAAAyE,EAAA,EAAAzE,CAAA,GAAKsB,EAAK1C,MAAMiY,eAAjB,CAAgCrD,MAAO2C,MACtD,kBAAM3U,EAAaC,KAAb,6BAAAoN,OAA+CzL,GAC5C,CAAC+S,SAAU7U,EAAK1C,MAAMiY,eAAerD,UAIT,SAAnClS,EAAK1C,MAAMiY,eAAe5T,MAC/B3B,EAAKC,SAALvB,OAAAyE,EAAA,EAAAzE,CAAA,GACOsB,EAAK1C,MADZ,CAEIiY,eAAe7W,OAAAyE,EAAA,EAAAzE,CAAA,GAAKsB,EAAK1C,MAAMiY,eAAjB,CAAgCrD,MAAO2C,MAEzD,kBAAM3U,EAAaC,KAAb,uBAAAoN,OAAyCzL,GAAM+S,QAK7D4O,oBAAsB,SAAA1jB,GAClBG,EAAaC,KAAK,4BAAlBzB,OAAAyE,EAAA,EAAAzE,CAAA,GACOsB,EAAK1C,MAAMiY,eADlB,CAEIzT,GAAI9B,EAAK1C,MAAMiY,eAAezT,GAC9BH,KAAM3B,EAAK1C,MAAMiY,eAAe5T,QAEhC5B,GAAOA,EAAMsI,qBAGrBqb,YAAc,SAAA3jB,GACNC,EAAKyiB,OAAOkB,aAAa3jB,EAAKyiB,OAClCziB,EAAKyiB,MAAQmB,WAAW,WACpB1jB,EAAaC,KAAK,4BAAlBzB,OAAAyE,EAAA,EAAAzE,CAAA,GACOsB,EAAK1C,MAAMiY,eADlB,CAEIzT,GAAI9B,EAAK1C,MAAMiY,eAAezT,GAC9BH,KAAM3B,EAAK1C,MAAMiY,eAAe5T,QAEpCzB,EAAaC,KAAK,wBAAwB,IAC3C,KACHD,EAAaC,KAAK,wBAAwB,GACtCJ,GAAOA,EAAMsI,qBAGrBwb,gBAAkB,SAAA9jB,GACdG,EAAaC,KAAK,uBAAwB,CACtC2B,GAAI9B,EAAK1C,MAAMiY,eAAezT,GAC9B0Q,cAAexS,EAAK1C,MAAMiY,eAAe/C,cACzC7Q,KAAM3B,EAAK1C,MAAMiY,eAAe5T,UAIxC2N,OAAS,SAAAvP,GAAS,IAET+B,EAAM9B,EAAK1C,MAAMiY,eAAjBzT,GACL5B,EAAaC,KAAK,qBAAsB,CAACiJ,YAAatH,EAAIsN,KAAMpP,EAAK1C,MAAMiY,eAAe5T,OAE1F5B,EAAMsI,qBAGVyb,SAAW,SAAA/jB,GAAS,IACX+B,EAAM9B,EAAK1C,MAAMiY,eAAjBzT,GACL,IACI,IAAIqW,EAAQpY,EAAM6Q,OAAOmT,MAAM,GAC3BC,EAAS,IAAIC,WACjB,GAAsB,MAAlB9L,EAAMxW,KAAK,GAAY,MAAM,IAAI2F,MAAM,gBAC3C0c,EAAOE,cAAc/L,GACrB6L,EAAOG,OAAS,WACZjkB,EAAaC,KAAb,uBAAAoN,OAAyCzL,GAAK,CAAE8J,QAASoY,EAAOI,SAChEpkB,EAAKmjB,kBAAkB,CAACrV,OAAQ,CAAElC,QAASoY,EAAOI,QAAUhV,KAAM,WAEtE4U,EAAOK,QAAU,WACb7mB,QAAQK,MAAMmmB,EAAOnmB,QAE3B,MAAOA,GACLL,QAAQK,MAAMA,EAAMuH,SAGxBrF,EAAMsI,qBAGVic,qBAAuB,SAAC3iB,GAChB,OAAQA,GACJ,IAAK,OACF,OACCvB,EAAAC,EAAAC,cAACikB,GAAD,CACIpC,gBAAezjB,OAAAyE,EAAA,EAAAzE,CAAA,GAAQsB,EAAK1C,MAAM6kB,iBAClC5M,eAAc7W,OAAAyE,EAAA,EAAAzE,CAAA,GAAQsB,EAAK1C,MAAMiY,gBACjCsM,WAAc7hB,EAAKkjB,SACnBpC,UAAa9gB,EAAK6iB,QAClBZ,uBAA0BjiB,EAAKojB,qBAC/Bd,aAAgBtiB,EAAK2b,WACrB0G,UAAariB,EAAKue,QAClB+C,aAAgBthB,EAAK4c,WACrBoE,SAAYhhB,EAAK6jB,kBAGzB,IAAK,aACD,OACIzjB,EAAAC,EAAAC,cAACkkB,GAAD,CACI1C,kBAAqB9hB,EAAK1C,MAAM6kB,gBAAgBL,kBAChDvM,eAAc7W,OAAAyE,EAAA,EAAAzE,CAAA,GAAQsB,EAAK1C,MAAMiY,gBACjCsM,WAAc7hB,EAAKkjB,SACnBjB,uBAA0BjiB,EAAKojB,qBAC/BzV,SAAY3N,EAAKsP,SAG7B,IAAK,QACG,OACIlP,EAAAC,EAAAC,cAACmkB,GAAD,CACItC,gBAAezjB,OAAAyE,EAAA,EAAAzE,CAAA,GAAQsB,EAAK1C,MAAM6kB,iBAClC5M,eAAc7W,OAAAyE,EAAA,EAAAzE,CAAA,GAAQsB,EAAK1C,MAAMiY,gBACjC5H,SAAY3N,EAAKsP,OACjBwR,UAAa9gB,EAAK6iB,QAClBxB,kBAAqBrhB,EAAK0c,gBAC1B4E,aAAgBthB,EAAK4c,WACrBuE,WAAcnhB,EAAKuc,SACnB6E,YAAephB,EAAKwc,UACpBgF,WAAcxhB,EAAK8jB,SACnB9C,SAAYhhB,EAAK6jB,kBAGjC,IAAK,QACG,OACIzjB,EAAAC,EAAAC,cAACokB,GAAD,CACIvC,gBAAezjB,OAAAyE,EAAA,EAAAzE,CAAA,GAAQsB,EAAK1C,MAAM6kB,iBAClC5M,eAAc7W,OAAAyE,EAAA,EAAAzE,CAAA,GAAQsB,EAAK1C,MAAMiY,gBACjC5H,SAAY3N,EAAKsP,OACjB0R,SAAYhhB,EAAK6jB,kBAGjC,QAAS,OAAOzjB,EAAAC,EAAAC,cAAA,KAAGI,UAAY,sBAAf,wBAiC5Bmf,mBAAqB,SAAC8E,EAAUC,GACxBA,EAASrP,iBAAmBvV,EAAK1C,MAAMiY,gBAC3CvV,EAAK0jB,iBAGTziB,kBAAoB,SAAAlB,GAChBG,EAAagB,GAAG,2BAA4BlB,EAAKyjB,qBACjDvjB,EAAagB,GAAb,iBAAkClB,EAAK+iB,kBACvC7iB,EAAagB,GAAb,kBAAAqM,OAAkCvN,EAAK1C,MAAMiY,eAAezT,IAAM9B,EAAK0iB,YACvExiB,EAAagB,GAAG,+BAAgClB,EAAKmjB,mBACrDjjB,EAAagB,GAAb,sBAAAqM,OAAsCvN,EAAK1C,MAAMiY,eAAezT,IAAM9B,EAAKijB,mBAG/E9hB,qBAAuB,SAAApB,GACfC,EAAKyiB,OAAOkB,aAAa3jB,EAAKyiB,OAClCviB,EAAakB,IAAI,2BAA4BpB,EAAKyjB,qBAClDvjB,EAAakB,IAAb,iBAAmCpB,EAAK+iB,kBACxC7iB,EAAakB,IAAb,kBAAAmM,OAAmCvN,EAAK1C,MAAMiY,eAAezT,IAAM9B,EAAK0iB,YACxExiB,EAAakB,IAAI,+BAAgCpB,EAAKmjB,mBACtDjjB,EAAakB,IAAb,sBAAAmM,OAAuCvN,EAAK1C,MAAMiY,eAAezT,IAAM9B,EAAKijB,yFAhDxE,IACE4B,EAAqBjmB,KAAKtB,MAAM6kB,gBAAhC0C,iBACN,OACIzkB,EAAAC,EAAAC,cAACqR,EAAA,SAAD,KACIvR,EAAAC,EAAAC,cAAA,OAAMI,UAAY,mBACdN,EAAAC,EAAAC,cAAA,UACIK,QAAW/B,KAAK+jB,WAChBjiB,UAAY,yBAEZN,EAAAC,EAAAC,cAAC+K,EAAD,CAAM1E,KAAO,oBAEjBvG,EAAAC,EAAAC,cAAA,yBAEIukB,EACAzkB,EAAAC,EAAAC,cAAA,KAAGI,UAAY,iBAAiB9B,KAAKtB,MAAMiY,eAAe5T,MACxD,KAGFkjB,EACAzkB,EAAAC,EAAAC,cAAA,OAAKI,UAAY,cACZ9B,KAAK0lB,qBAAqB1lB,KAAKtB,MAAMiY,eAAe5T,OAEvD,cAzVKf,IAAMa,eCqBtBqjB,GA9BS,SAAAvjB,GAEpB,OACInB,EAAAC,EAAAC,cAACqR,EAAA,SAAD,CAAUV,IAAM,mBACR1P,EAAMwjB,YAAY7hB,QACd9C,EAAAC,EAAAC,cAAC0kB,GAAD,CACI/T,IAAM,cACN7B,KAAQ7N,EAAMwjB,YAAY3V,KAC1BzI,KAAQpF,EAAMwjB,YAAYnU,OAC1BzE,OAAU5K,EAAMwjB,YAAY5Y,SAGpC5K,EAAM0jB,aACF7kB,EAAAC,EAAAC,cAACuT,GAAD,CACIzK,YAAe7H,EAAMgU,eAAezT,GACpC0L,gBAAmBjM,EAAMiM,gBACzByD,IAAM,cAAc5C,SAAW,WAGvCjO,EAAAC,EAAAC,cAAC4kB,GAAD,CACIjU,IAAG,mBAAA1D,OAAuBhM,EAAMgU,eAAezT,IAC/C+T,kBAAqBtU,EAAMsU,kBAC3BN,eAAc7W,OAAAyE,EAAA,EAAAzE,CAAA,GAAQ6C,EAAMgU,gBAC5B4P,gBAAoB5jB,EAAM4jB,gBAC1BhD,gBAAmB5gB,EAAM4gB,oBCiN9BiD,sNAvNX9nB,MAAQ,CACJ8R,KAAMpP,EAAKuB,MAAM6N,KACjBoH,cAAc9X,OAAAyE,EAAA,EAAAzE,CAAA,GAAKsB,EAAKuB,MAAMiV,eAC9B7O,MAAO,WAGX0d,QAAU,SAAAtlB,GACN,IAAI+B,EAAKuQ,KAAKE,SAASoH,QAAQ,GAEzBoE,EAAwB,CAC1Bpc,KAAM,OACN0b,KAAM,QACNnL,MAAO,KACPgG,QAAS,EACTyF,SAAU,KACVrC,QAAS,KACT3D,OAAQ,CAACC,EAAG,KAAMC,EAAG,MACrB/V,GAAIA,EACJ0Q,cAAexS,EAAKuB,MAAMsU,mBAE9B3V,EAAaC,KAAK,uBAAuB,CACrCmlB,kBAAmBvH,EACnBpc,KAAMoc,EAAsBpc,KAC5BwH,UAAW/I,EAAAC,EAAAC,cAACse,GAADlgB,OAAA6H,OAAA,CACK0K,IAAG,OAAA1D,OAAWzL,GACdsN,KAAO,OACH2O,EAHT,CAIKvH,cAAa9X,OAAAyE,EAAA,EAAAzE,CAAA,GAAQsB,EAAKuB,MAAMiV,eAChC1U,GAAMA,IALX,WAQf/B,EAAMsI,qBAGVkd,cAAgB,SAAAxlB,GACZ,IAAI+B,EAAKuQ,KAAKE,SAASoH,QAAQ,GAEzBrE,EAA8B,CAChCxT,GAAIA,EACJH,KAAM,aACNuQ,MAAO,KACPD,gBAAiB,KACjBO,cAAexS,EAAK1C,MAAMuY,mBAG9B3V,EAAaC,KAAK,uBAAuB,CACrCmlB,kBAAmBhQ,EACnB3T,KAAM2T,EAA4B3T,KAClCwH,UAAW/I,EAAAC,EAAAC,cAAC6V,GAADzX,OAAA6H,OAAA,CACKiM,cAAiBxS,EAAKuB,MAAMsU,mBACxBP,EAFT,CAGKrE,IAAG,KAAA1D,OAASzL,GACZA,GAAMA,OAI1B/B,EAAMsI,qBAGVmd,SAAW,SAAAzlB,GACP,IAAI+B,EAAKuQ,KAAKE,SAASoH,QAAQ,GAEzB3B,EAAyB,CAC3BC,aAAc,EACdtW,KAAM,QACNwT,KAAM,CAAC6G,EAAG,GAAIC,EAAG,IACjB/D,QAAS,EACTnB,OAAQ,KACRoB,MAAO,wBACPR,OAAQ,CAACC,EAAG,KAAMC,EAAG,MACrB/V,GAAIA,EACJ0Q,cAAexS,EAAKuB,MAAMsU,mBAE9B3V,EAAaC,KAAK,uBAAuB,CACrCmlB,kBAAmBtN,EACnBrW,KAAMqW,EAAuBrW,KAC7BwH,UAAW/I,EAAAC,EAAAC,cAACue,GAADngB,OAAA6H,OAAA,CACK0K,IAAG,QAAA1D,OAAYzL,GACf0U,cAAiBxW,EAAKuB,MAAMiV,cAC5B1U,GAAMA,EACNsN,KAAO,MACPzI,KAAQ,yBACJqR,EANT,CAOKrW,KAAO,aAE3B5B,EAAMsI,qBAGVod,SAAW,SAAA1lB,GACP,IAAI+B,EAAKuQ,KAAKE,SAASoH,QAAQ,GAExB6B,EAAyB,CAC5B7Z,KAAM,QACNwT,KAAM,KACNmG,QAAS,KACT3D,OAAQ,CAACC,EAAG,KAAMC,EAAG,MACrB/V,GAAIA,EACJ0Q,cAAexS,EAAKuB,MAAMsU,mBAG9B3V,EAAaC,KAAK,uBAAwB,CACtCmlB,kBAAmB9J,EACnB7Z,KAAM6Z,EAAuB7Z,KAC7BwH,UAAW/I,EAAAC,EAAAC,cAACwe,GAADpgB,OAAA6H,OAAA,CACK0K,IAAG,QAAA1D,OAAYzL,GACf0Q,cAAiBxS,EAAKuB,MAAMsU,kBAC5BW,cAAiBxW,EAAKuB,MAAMiV,cAC5B8E,QAAW,KACXxZ,GAAMA,EACN6E,KAAQ,yBACJ6U,EAPT,CAQK7Z,KAAO,QACPyN,KAAO,WAG3BrP,EAAMsI,qBAGVqd,SAAW,SAAA3lB,GACP,IAAI+B,EAAKuQ,KAAKE,SAASoH,QAAQ,GAExBgM,EAAyB,CAC5BhkB,KAAM,QACNwT,KAAM,KACNmG,QAAS,KACT3D,OAAQ,CAACC,EAAG,KAAMC,EAAG,MACrB/V,GAAIA,EACJ0Q,cAAexS,EAAKuB,MAAMsU,mBAG9B3V,EAAaC,KAAK,uBAAwB,CACtCmlB,kBAAmBK,EACnBhkB,KAAMgkB,EAAuBhkB,KAC7BwH,UAAW/I,EAAAC,EAAAC,cAACye,GAADrgB,OAAA6H,OAAA,CACK0K,IAAG,QAAA1D,OAAYzL,GACf0Q,cAAiBxS,EAAKuB,MAAMsU,kBAC5BW,cAAiBxW,EAAKuB,MAAMiV,cAC5B1U,GAAMA,EACN8jB,UAAY,UACRD,EANT,CAOKhkB,KAAO,QACPyN,KAAO,WAG3BrP,EAAMsI,qBAGVwd,WAAa,SAAA9lB,GACT,IAAI+B,EAAKuQ,KAAKE,SAASoH,QAAQ,GAEzBrE,EAA8B,CAChCpD,MAAO,KACPD,gBAAiB,KACjBO,cAAa,UAAAjF,OAAYzL,GACzBA,GAAE,UAAAyL,OAAYzL,GACdH,KAAM,cAEVzB,EAAaC,KAAK,kBAAmB,CACjCmlB,kBAAmBhQ,EACnBnM,UAAW/I,EAAAC,EAAAC,cAAC6V,GAADzX,OAAA6H,OAAA,GACS+O,EADT,CAEKrE,IAAG,KAAA1D,OAASzL,GACZA,GAAMA,EACNqS,MAAQ,OACRC,OAAS,QACTzS,KAAO,aACPyN,KAAO,WAG3BrP,EAAMsI,2FAIN,MAAwB,UAApBzJ,KAAKtB,MAAM8R,KAEPhP,EAAAC,EAAAC,cAAA,OAAKI,UAAY,kBACbN,EAAAC,EAAAC,cAAA,UACIK,QAAW/B,KAAK4mB,SAChB9kB,UAAY,mCAEZN,EAAAC,EAAAC,cAAA,sBAEJF,EAAAC,EAAAC,cAAA,UACIK,QAAW/B,KAAKymB,QAChB3kB,UAAY,kCACZN,EAAAC,EAAAC,cAAA,qBAEJF,EAAAC,EAAAC,cAAA,UACIK,QAAW/B,KAAK8mB,SAChBzY,SAA6C,WAAjCrO,KAAK2C,MAAMsU,kBACvBnV,UAAY,oCACZN,EAAAC,EAAAC,cAAA,uBAEJF,EAAAC,EAAAC,cAAA,UAAQK,QAAW/B,KAAK6mB,SACpB/kB,UAAY,mCAEZN,EAAAC,EAAAC,cAAA,uBAIe,YAApB1B,KAAKtB,MAAM8R,KAEdhP,EAAAC,EAAAC,cAAA,OAAKI,UAAY,eACbN,EAAAC,EAAAC,cAAA,UACIK,QAAW/B,KAAKinB,WAChBnlB,UAAY,wCAEZN,EAAAC,EAAAC,cAAA,kCAPT,SAnNSM,IAAMa,gBCyDfqkB,8MAtDXxoB,MAAQ,CACJyoB,mBAAmB,EACnBlQ,kBAAmB7V,EAAKuB,MAAMsU,kBAC9BmQ,OAAQ,EACRC,OAAQ,EACRC,QAAS,MACTC,QAAS,IACTC,cAAe,WAGnBC,cAAgB,SAAAtmB,GACZC,EAAKC,SAAS,CAAC8lB,mBAAmB/lB,EAAK1C,MAAMyoB,oBAC7ChmB,EAAMsI,qBAgCVwX,mBAAqB,WACb7f,EAAKuB,MAAMsU,oBAAsB7V,EAAK1C,MAAMuY,mBAC5C7V,EAAKC,SAALvB,OAAAyE,EAAA,EAAAzE,CAAA,GACOsB,EAAK1C,MADZ,CAEIuY,kBAAmB7V,EAAKuB,MAAMsU,8FAhCtC,OACIzV,EAAAC,EAAAC,cAACqR,EAAA,SAAD,KAEIvR,EAAAC,EAAAC,cAAA,OACAmH,IAAO7I,KAAK0nB,YACZ5lB,UAAY,2BACZC,QAAW/B,KAAKynB,eAEZjmB,EAAAC,EAAAC,cAAC+K,EAAD,CACI1K,QAAW/B,KAAKynB,cAChB3lB,UAAY,YACZiG,KAAO,uBAET/H,KAAKtB,MAAMyoB,kBACT3lB,EAAAC,EAAAC,cAACimB,GAAD,CACItV,IAAG,aAAA1D,OAAiB3O,KAAKtB,MAAMuY,mBAC/BzG,KAAO,QACPyG,kBAAqBjX,KAAKtB,MAAMuY,kBAChCW,cAAiB5X,KAAK2C,MAAMiV,cAC5BD,gBAAmB3X,KAAK2C,MAAMgV,kBAC7B,cA5CH3V,IAAMa,eCoB1B+kB,sNAYFlpB,MAAQ,CACA6E,UAAW8c,SAASjf,EAAKuB,MAAM9E,MAAMyiB,OAAOC,OAC5CvJ,WAAW,EACXtL,UAAU,EACVsT,SAAU,EACVyB,kBAAkB,EAClBD,cAAc,EACd7J,eAAgB,GAChBU,aAAc,GACdkM,gBAAiB,CACbL,mBAAmB,EACnB+C,kBAAkB,GAEtB4B,aAAc,CACVC,SAAU,IACVC,MAAO,GACPC,QAAQ,EACRC,QAAS,IAEbhR,kBAAoB,KACpB7H,YAAY,EACZiX,aAAa,EACbzX,gBAAiB,KACjBuX,YAAa,CAAC7hB,QAAQ,EAAOiV,MAAO,KAAM/I,KAAM,MAChDoH,cAAe,QAGvBsQ,cAAgB,SAAAC,GACZ,IAAMC,EAAWD,EAAUnF,eAAe,QAC1C5hB,EAAKC,SAALvB,OAAAyE,EAAA,EAAAzE,CAAA,GACOsB,EAAK1C,MADZ,CAEI2nB,aAAcjlB,EAAK1C,MAAM2nB,YACzBzX,gBAAiBwZ,EAAWD,EAAU3X,KAAO,WAIrD6X,aAAe,SAAAF,GAEX/mB,EAAKC,SAALvB,OAAAyE,EAAA,EAAAzE,CAAA,GACOsB,EAAK1C,MADZ,CAEIynB,YAAYrmB,OAAAyE,EAAA,EAAAzE,CAAA,GACLsB,EAAK1C,MAAMynB,YADP,CAEP7hB,OAAQ6jB,EAAU7jB,OAClB0N,OAAQmW,EAAUnW,OAClBxB,KAAM2X,EAAU3X,KAChBjD,OAAQ4a,EAAU5a,eAK9B+a,aAAe,SAAAH,GAEPA,EAAUnR,WACd5V,EAAKC,SAALvB,OAAAyE,EAAA,EAAAzE,CAAA,GACOsB,EAAK1C,MADZ,CAEIsY,UAAWmR,EAAUnR,UACrBC,kBAAmBkR,EAAUvU,cAC7BxE,YAAY,QAKpBmZ,eAAiB,SAAAJ,GACO/mB,EAAK1C,MAAMiY,eAAezT,KAAOilB,EAAUxR,eAAezT,IAE1E9B,EAAKC,SAALvB,OAAAyE,EAAA,EAAAzE,CAAA,GACOsB,EAAK1C,MADZ,CAEIuY,kBAAmBkR,EAAUvU,cAC7B+C,eAAe7W,OAAAyE,EAAA,EAAAzE,CAAA,GACRsB,EAAK1C,MAAMiY,eACXwR,EAAUxR,gBAEjB4M,gBAAgBzjB,OAAAyE,EAAA,EAAAzE,CAAA,GACTsB,EAAK1C,MAAM6kB,gBADH,CAEX0C,kBAAkB,UAKlClC,WAAa,SAAAoE,GAET/mB,EAAKC,SAALvB,OAAAyE,EAAA,EAAAzE,CAAA,GACOsB,EAAK1C,MADZ,CAEI6kB,gBAAgBzjB,OAAAyE,EAAA,EAAAzE,CAAA,GACTsB,EAAK1C,MAAM6kB,gBADH,CAEXL,mBAAmB,EACnB+C,iBAAkBkC,EAAUnE,cAKxCiB,gBAAkB,SAAAjP,GAAa,IACtBoB,EAAuBhW,EAAKuB,MAAM8U,SAAlCL,oBACAC,EAAgBjW,EAAK1C,MAArB2Y,aAEC9Q,EAAO,CACTrD,GAAI9B,EAAK1C,MAAM6E,UACfK,IAAKxC,EAAKuB,MAAM8U,SAAS9T,OACzB6G,YAAawL,EAAU9S,GACvBE,gBAAgBtD,OAAA0D,EAAA,EAAA1D,CAAKsX,EAAoBhU,iBACzCL,KAAMiT,EAAUjT,MAGpB3B,EAAKuB,MAAM8C,SAASqE,EAAiCvD,IACpDnI,KAAK,SAAA8E,GACF,GAAW,OAAPA,EAAY,CACb,IAAMslB,EAAgBnR,EAAa/M,OAAO,SAAA5F,GAAI,OAAIA,EAAKxB,KAAOA,IACjE9B,EAAKC,SAALvB,OAAAyE,EAAA,EAAAzE,CAAA,GACOsB,EAAK1C,MADZ,CAEI2Y,aAAcmR,WAM1BC,oBAAsB,SAAA9H,GAAS,IAEtBtJ,EAAgBjW,EAAK1C,MAArB2Y,aACDqR,EAAmB,GAEvB/H,EAAMpP,QAAQ,SAAA7M,GACV,GAAkB,eAAdA,EAAK3B,KAAsB,CAC3B,IAAI6U,EAAgB,CAChBrC,MAAOnU,EAAKunB,cAAcpiB,KAAKgP,MAC/BC,OAAQpU,EAAKunB,cAAcpiB,KAAKiP,OAChC+C,IAAKnX,EAAKunB,cAAcpiB,KAAKgS,IAC7BF,KAAMjX,EAAKunB,cAAcpiB,KAAK8R,MAE9B9N,EACA/I,EAAAC,EAAAC,cAACof,GAADhhB,OAAA6H,OAAA,CACIiQ,cAAa9X,OAAAyE,EAAA,EAAAzE,CAAA,GAAQ8X,IACjBlT,EAFR,CAGI8L,KAAO,MACP6B,IAAG,GAAA1D,OAAOjK,EAAK3B,MAAZ4L,OAAmBjK,EAAKxB,OAG7B6d,EAAa,CACf7d,GAAIwB,EAAKxB,GACT0Q,cAAelP,EAAKkP,cACpBrJ,UAAWA,GAEfme,EAAiBlX,KAAKuP,MAG1B3f,EAAKC,SAALvB,OAAAyE,EAAA,EAAAzE,CAAA,GACOsB,EAAK1C,MADZ,CAEI+hB,kBAAkB,EAClBpJ,aAAY,GAAA1I,OAAA7O,OAAA0D,EAAA,EAAA1D,CAAMuX,GAAiBqR,SAI/CE,aAAe,SAAAT,GAAa,IACnB9Q,EAAgBjW,EAAK1C,MAArB2Y,aACAqP,EAAqByB,EAArBzB,kBAEC3F,EAAa,CACf7d,GAAIwjB,EAAkBxjB,GACtB0Q,cAAe8S,EAAkB9S,cACjCrJ,UAAW4d,EAAU5d,WAErBnJ,EAAKC,SAALvB,OAAAyE,EAAA,EAAAzE,CAAA,GACOsB,EAAK1C,MADZ,CAEI2Y,aAAY,GAAA1I,OAAA7O,OAAA0D,EAAA,EAAA1D,CAAMuX,GAAN,CAAoB0J,UAI5C8H,qBAAuB,SAAAV,GAAa,IACzB/Q,EAAuBhW,EAAKuB,MAAM8U,SAAlCL,oBACAK,EAAYrW,EAAKuB,MAAjB8U,SACHqR,GAAkB,EAChBlI,EAAcxJ,EAAoB/T,WAAWoB,IAAI,SAAAC,GACnD,OAAIA,EAAKxB,KAAOilB,EAAUjlB,IAAM4lB,GAAkB,EAAahpB,OAAAyE,EAAA,EAAAzE,CAAA,GAAIqoB,IAC5DzjB,IAGNokB,GAAiBlI,EAAYpP,KAAK2W,GAEvC/mB,EAAKuB,MAAM8C,SAAS+b,GAAiB,CACjC5d,IAAK6T,EAAS9T,OACdE,SAAS/D,OAAA0D,EAAA,EAAA1D,CAAK2X,EAAS5T,UACvBR,WAAYud,EACZxd,gBAAgBtD,OAAA0D,EAAA,EAAA1D,CAAKsX,EAAoBhU,iBACzCG,UAAWnC,EAAK1C,MAAM6E,aAEzBnF,KAAK,kBAAMgD,EAAKC,SAALvB,OAAAyE,EAAA,EAAAzE,CAAA,GAAkBsB,EAAK1C,MAAvB,CAA6BgN,UAAU,UAGvDid,cAAgB,OAChBI,iBAAmB,SAAAzgB,GAAI,OAAIA,EACvBlH,EAAKunB,cAAgB,CAACpiB,KAAM+B,EAAK+N,wBAAyB/N,KAAMA,GAAQA,KAE5E0gB,cAAgB,SAAAhT,GAAa,IAElByB,EAAYrW,EAAKuB,MAAjB8U,SACAL,EAAuBK,EAAvBL,oBAEPhW,EAAKuB,MAAM8C,SAAS+b,GAAiB,CAC7B5d,IAAK6T,EAAS9T,OACdE,SAAS/D,OAAA0D,EAAA,EAAA1D,CAAK2X,EAAS5T,UACvBR,WAAU,GAAAsL,OAAA7O,OAAA0D,EAAA,EAAA1D,CAAMsX,EAAoB/T,YAA1B,CACE2S,EAAUU,8BACtBtT,gBAAe,GAAAuL,OAAA7O,OAAA0D,EAAA,EAAA1D,CACRsX,EAAoBhU,iBADZ,CAEX4S,EAAUU,4BAA4BxT,KAE1CK,UAAWnC,EAAK1C,MAAM6E,aAE7BnF,KAAK,WACFgD,EAAKC,SAALvB,OAAAyE,EAAA,EAAAzE,CAAA,GACOsB,EAAK1C,MADZ,CAEI2Y,aAAY,GAAA1I,OAAA7O,OAAA0D,EAAA,EAAA1D,CACLsB,EAAK1C,MAAM2Y,cADN,CAERrB,EAAUzL,oBAM1B0e,aAAe,SAAA9nB,GACX,IAAKC,EAAK1C,MAAM2nB,YAAY,KAElB6C,EADoB9nB,EAAKuB,MAAM8U,SAASL,oBAAvChU,gBACuBgB,OAAO,EAC/B+kB,EAAW/nB,EAAK1C,MAAMsgB,SAAWkK,GAAS/nB,EAAMia,OAAS,EACzDgO,EAASjoB,EAAMia,OAAS,GAAKha,EAAK1C,MAAMsgB,SAAW,EAErDpH,EAAgB,CAChBrC,MAAOnU,EAAKunB,cAAcpiB,KAAKgP,MAC/BC,OAAQpU,EAAKunB,cAAcpiB,KAAKiP,OAChC+C,IAAKnX,EAAKunB,cAAcpiB,KAAKgS,IAC7BF,KAAMjX,EAAKunB,cAAcpiB,KAAK8R,MAG9B8Q,EACA/nB,EAAKC,SAALvB,OAAAyE,EAAA,EAAAzE,CAAA,GACOsB,EAAK1C,MADZ,CAEIsgB,SAAU5d,EAAK1C,MAAMsgB,SAAW,EAChCpH,cAAeA,IAChB,kBAAMyR,YAASC,SAAT,UAAA3a,OAA4BvN,EAAK1C,MAAMsgB,UAAW5d,EAAK1C,MAAMmpB,gBAC9DuB,IACoB,IAAxBhoB,EAAK1C,MAAMsgB,SACX5d,EAAKC,SAALvB,OAAAyE,EAAA,EAAAzE,CAAA,GACOsB,EAAK1C,MADZ,CAEIsgB,SAAU5d,EAAK1C,MAAMsgB,SAAW,EAChCpH,cAAeA,IAChB,kBAAM2R,iBAAOC,gBAEhBpoB,EAAKC,SAALvB,OAAAyE,EAAA,EAAAzE,CAAA,GACOsB,EAAK1C,MADZ,CAEIsgB,SAAU5d,EAAK1C,MAAMsgB,SAAW,EAChCpH,cAAeA,IAChB,kBAAMyR,YAASC,SAAT,UAAA3a,OAA4BvN,EAAK1C,MAAMsgB,UAAW5d,EAAK1C,MAAMmpB,qBAoDtF5G,mBAAqB,SAACC,GAAc,IAE3BzJ,EAAYrW,EAAKuB,MAAjB8U,SACAL,EAAuBK,EAAvBL,oBACCqJ,EAAmBrf,EAAK1C,MAAM+hB,iBAChC7I,EAAgB,KAUpB,GARIxW,EAAKunB,eAA8C,OAA7BvnB,EAAK1C,MAAMkZ,gBACjCA,EAAgB,CACZrC,MAAOnU,EAAKunB,cAAcpiB,KAAKgP,MAC/BC,OAAQpU,EAAKunB,cAAcpiB,KAAKiP,OAChC+C,IAAKnX,EAAKunB,cAAcpiB,KAAKgS,IAC7BF,KAAMjX,EAAKunB,cAAcpiB,KAAK8R,OAGlCZ,EAAS/T,SAAW0T,EAAoBpT,YAAa,CACrD,IAAM6K,EAAW4I,EAAS5T,SAASuG,KAAK,SAAA1F,GAAI,OAAIA,EAAKxB,KAAO9B,EAAK1C,MAAM6E,YACvEsL,EACAzN,EAAKuB,MAAM8C,SAASxC,EAAyB,CACzCC,GAAI2L,EAAQ3L,GACZC,YAAa0L,EAAQ9L,KACrBK,gBAAgBtD,OAAA0D,EAAA,EAAA1D,CAAK+O,EAAQzL,iBAC7BC,WAAWvD,OAAA0D,EAAA,EAAA1D,CAAK+O,EAAQxL,eACtBjC,EAAKC,SAALvB,OAAAyE,EAAA,EAAAzE,CAAA,GAAkBsB,EAAK1C,MAAvB,CAA8B8hB,cAAc,EAAM5I,cAAeA,KAEvER,EAAoBpT,aAAeyc,IACF,OAA7Brf,EAAK1C,MAAMkZ,eAA4C,OAAlBA,EACzCxW,EAAKC,SAALvB,OAAAyE,EAAA,EAAAzE,CAAA,GACOsB,EAAK1C,MADZ,CAEIkZ,cAAeA,IAChB,kBAAMxW,EAAKqnB,oBAAL3oB,OAAA0D,EAAA,EAAA1D,CAA6BsX,EAAoB/T,eACrDjC,EAAKqnB,oBAAL3oB,OAAA0D,EAAA,EAAA1D,CAA6BsX,EAAoB/T,iBAI9DhB,kBAAoB,WAAM,IACjBoV,EAAYrW,EAAKuB,MAAjB8U,SACAL,EAAuBK,EAAvBL,oBAEL,GAAIK,EAAS/T,SAAW0T,EAAoBpT,YAAa,CAErD,IAAM6K,EAAW4I,EAAS5T,SAASuG,KAAK,SAAA1F,GAAI,OAAIA,EAAKxB,KAAO9B,EAAK1C,MAAM6E,YACvEnC,EAAKuB,MAAM8C,SAASxC,EAAyB,CACzCC,GAAI2L,EAAQ3L,GACZE,gBAAgBtD,OAAA0D,EAAA,EAAA1D,CAAK+O,EAAQzL,iBAC7BD,YAAa0L,EAAQ9L,KACrBM,WAAWvD,OAAA0D,EAAA,EAAA1D,CAAK+O,EAAQxL,eAIhC/B,EAAagB,GAAG,uBAAwBlB,EAAKwnB,cAC7CtnB,EAAagB,GAAG,uBAAwBlB,EAAK6jB,iBAC7C3jB,EAAagB,GAAG,kBAAmBlB,EAAK4nB,eACxC1nB,EAAagB,GAAG,4BAA6BlB,EAAKynB,sBAClDvnB,EAAagB,GAAG,kBAAmBlB,EAAK2iB,YACxCziB,EAAagB,GAAG,qBAAsBlB,EAAK8mB,eAC3C5mB,EAAagB,GAAG,uBAAwBlB,EAAKmnB,gBAC7CjnB,EAAagB,GAAG,YAAalB,EAAKinB,cAClC/mB,EAAagB,GAAG,gBAAiBlB,EAAKknB,iBAG1C/lB,qBAAuB,WAEFnB,EAAKuB,MAAjB8U,SACQ/T,QAAStC,EAAKuB,MAAM8C,SAAS3C,GAAkB,IAE5DxB,EAAakB,IAAI,uBAAwBpB,EAAKwnB,cAC9CtnB,EAAakB,IAAI,uBAAwBpB,EAAK6jB,iBAC9C3jB,EAAakB,IAAI,kBAAmBpB,EAAK4nB,eACzC1nB,EAAakB,IAAI,4BAA6BpB,EAAKynB,sBACnDvnB,EAAakB,IAAI,qBAAsBpB,EAAK8mB,eAC5C5mB,EAAakB,IAAI,kBAAmBpB,EAAK2iB,YACzCziB,EAAakB,IAAI,uBAAwBpB,EAAKmnB,gBAC9CjnB,EAAakB,IAAI,YAAapB,EAAKinB,cACnC/mB,EAAakB,IAAI,gBAAiBpB,EAAKknB,uFArHvC,GAAItoB,KAAKtB,MAAM8hB,aAAc,OAAOhf,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAUC,GAAK,aAF/C,IAIGqkB,EAAoBjmB,KAAKtB,MAAM6kB,gBAA/B0C,iBACAxO,EAAYzX,KAAK2C,MAAjB8U,SACAL,EAAuBK,EAAvBL,oBACDS,EAAUT,EAAoBhU,gBAEpC,OAAIqU,EAAS/T,QAAU0T,EAAoBpT,YAGnCxC,EAAAC,EAAAC,cAACqR,EAAA,SAAD,KACIvR,EAAAC,EAAAC,cAACsT,GAAD,CAAQ3C,IAAM,SAAStJ,MAAQ,gBAC/BvH,EAAAC,EAAAC,cAAA,OACImH,IAAO7I,KAAK+oB,iBACZlN,QAAW7b,KAAKipB,aAChBxN,YAAezb,KAAKypB,eACpB3nB,UAAY,QACZuQ,IAAM,SAEJrS,KAAKtB,MAAMsY,WACbxV,EAAAC,EAAAC,cAACgoB,GAAD,CACIrX,IAAM,cACN4E,kBAAqBjX,KAAKtB,MAAMuY,kBAChCU,gBAAmBP,EAAoB/T,WAAWe,OAClDgL,WAAcpP,KAAKtB,MAAM0Q,WACzBwI,cAAiB5X,KAAKtB,MAAMkZ,gBAG5BpW,EAAAC,EAAAC,cAACimB,GAAD,CACItV,IAAM,YACNsX,aAAiD,EAAjC3pB,KAAKtB,MAAM2Y,aAAajT,OACxCoM,KAAO,UACP1O,UAAY,SAEnBmkB,GAAoBzkB,EAAAC,EAAAC,cAACkoB,GAAD9pB,OAAA6H,OAAA,CAAiB0K,IAAM,SAAYrS,KAAKtB,QAC5DmZ,EAAQzT,QAAU5C,EAAAC,EAAAC,cAAC0f,GAADthB,OAAA6H,OAAA,CAAS6I,KAAO,MAAM6B,IAAM,WAAcrS,KAAKtB,MAA/C,CAAsD+Y,SAAYA,OAIzFzX,KAAK2C,MAAM1C,SAAS6U,iBACpBtT,EAAAC,EAAAC,cAACkG,EAAD,CAASyK,IAAM,SAAStK,KAAO,mBAAmBhF,KAAO,UADZvB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAUC,GAAK,aAtT5DI,IAAMa,gBAoZXgH,eAXS,SAACnL,GACrB,MAAO,CACH+Y,SAAU,CACN/T,OAAQhF,EAAM8F,QAAQd,OACtBC,OAAQjF,EAAM8F,QAAQb,OACtBE,SAAS/D,OAAA0D,EAAA,EAAA1D,CAAKpB,EAAM8F,QAAQX,UAC7BuT,oBAAoBtX,OAAAyE,EAAA,EAAAzE,CAAA,GAAKpB,EAAMwF,YAK3B2F,CAAyBrC,EAAaogB,KC5Z/CiC,8MAQFnrB,MAAQ,CACJuB,SAAUmB,EAAKuB,MAAM1C,SACrB6pB,mBAAmB,sFAGJ,IAAAxd,EAAAtM,KAEfA,KAAK2C,MAAM1C,SAASC,KAAK6pB,mBAAmB,SAAC3jB,GxCjBtB,IAACxC,EwCmBf0I,EAAK5N,MAAMorB,oBACR1jB,GAAMkG,EAAK3J,MAAM8C,UxCpBL7B,EwCoBqCwC,EAAKxC,IxCpB3C,eAAAmG,EAAAjK,OAAAuF,EAAA,EAAAvF,CAAAwF,EAAA7D,EAAA8D,KAAS,SAAAyE,EAAOvE,EAASC,EAAhBuE,GAAA,IAAAhK,EAAA,OAAAqF,EAAA7D,EAAAmE,KAAA,SAAAsE,GAAA,cAAAA,EAAApE,KAAAoE,EAAAnE,MAAA,cAA2B9F,EAA3BgK,EAA2BhK,SAA3BiK,EAAAnE,KAAA,EAC1B9F,EAASE,GAAG+F,WAAW,SAASC,IAAIvC,GAAKyC,MAC9CjI,KAAK,SAAAkI,GACF,IAAIF,EAAOE,EAAQC,OACnBd,EAAShC,EAAe,CAACG,IAAKA,EAAKC,SAAS/D,OAAA0D,EAAA,EAAA1D,CAAKsG,EAAKvC,eAEzD7E,MAAM,SAACC,GACJL,QAAQK,MAAMA,EAAMuH,SACpBf,EAAS3B,EAAY7E,EAAMuH,YARC,wBAAA0D,EAAAzD,SAAAuD,MAAT,gBAAAW,EAAAC,EAAAC,GAAA,OAAAd,EAAAlD,MAAA7G,KAAAmE,YAAA,KwCqBfmI,EAAKjL,SAALvB,OAAAyE,EAAA,EAAAzE,CAAA,GAAkBwM,EAAK5N,MAAvB,CAA8BorB,mBAAmB,yCAKrD,IAAAE,EAAAhqB,KACJ,OAAIA,KAAKtB,MAAMorB,kBAEPtoB,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACIH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACIoG,KAAQ,IAAKkiB,OAAK,EAClBC,OAAU,SAACvnB,GAAD,OAAWnB,EAAAC,EAAAC,cAACyoB,EAAUxnB,MAEpCnB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOoG,KAAO,YAAYkiB,OAAK,EAAC1f,UAAaqK,KAC7CpT,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACIoG,KAAQ,iBACRmiB,OAAU,SAACvnB,GAAD,OAAWnB,EAAAC,EAAAC,cAAC0oB,GAADtqB,OAAA6H,OAAA,GAAWhF,EAAX,CAAkB3E,OAAUgsB,EAAKrnB,MAAM3E,aAEhEwD,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOoG,KAAQ,wBAAyBkiB,OAAK,EAAC1f,UAAaqd,KAC3DpmB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOoG,KAAQ,mCAAoCkiB,OAAK,EAAC1f,UAAa6V,KACtE5e,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOoG,KAAQ,IAAKwC,UAAazB,IACjCtH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOoG,KAAQ,aAAcwC,UAAavJ,KAIxCQ,EAAAC,EAAAC,cAACkG,EAAD,CAAQG,KAAS,mBAAoBhF,KAAO,uBA5ChDf,IAAMa,eAgDTgH,iBAAUrC,EAAaqiB,YClDtC5pB,EAASoqB,YAAY,WACrB,IAAMrsB,GAAS4B,EAAQ,KAEvB0qB,IAASJ,OACD1oB,EAAAC,EAAAC,cAAC6oB,EAAA,EAAD,KACI/oB,EAAAC,EAAAC,cAAC8oB,EAAD,KACIhpB,EAAAC,EAAAC,cAAC+F,EAAgBgjB,SAAjB,CAA0BhiB,MAASxI,GAC/BuB,EAAAC,EAAAC,cAACgpB,EAAA,EAAD,CAAUzlB,MAASA,GACfzD,EAAAC,EAAAC,cAACipB,GAAD,CAAK3sB,OAAUA,SAK/B4sB,SAASC,eAAe,SpDRzB,SAAkB7sB,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAI6sB,IAAI1rB,eAAwB1B,OAAOC,SAASotB,MACpDC,SAAWttB,OAAOC,SAASqtB,OAIvC,OAGFttB,OAAOutB,iBAAiB,OAAQ,WAC9B,IAAMltB,EAAK,GAAA4Q,OAAMvP,eAAN,sBAEP5B,GA6DV,SAAiCO,EAAOC,GAEtCktB,MAAMntB,GACHK,KAAK,SAAA6H,GAEJ,IAAMklB,EAAcllB,EAASmlB,QAAQ/kB,IAAI,gBAEnB,MAApBJ,EAASmL,QACO,MAAf+Z,IAA8D,IAAvCA,EAAYE,QAAQ,cAG5CptB,UAAUC,cAAcotB,MAAMltB,KAAK,SAAAC,GACjCA,EAAaktB,aAAantB,KAAK,WAC7BV,OAAOC,SAAS6tB,aAKpB1tB,EAAgBC,EAAOC,KAG1BgB,MAAM,WACLJ,QAAQC,IACN,mEAlFA4sB,CAAwB1tB,EAAOC,GAI/BC,UAAUC,cAAcotB,MAAMltB,KAAK,WACjCQ,QAAQC,IAAI,oEAIdf,EAAgBC,EAAOC,MoDd/BE","file":"static/js/main.cb81379f.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log('This web app is being served cache-first by a service worker.');\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","// setings in root folder / firebase.env\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n    databaseURL: process.env.REACT_APP_DATABASE_URL,\r\n    projectId: process.env.REACT_APP_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n    appId: process.env.REACT_APP_APPID\r\n};\r\n\r\nexport default firebaseConfig;","import * as firebase from 'firebase/app';\r\nimport firebaseConfig from './firebaseConfig';\r\n\r\nconst auth = require('firebase/auth');\r\nconst firestore = require('firebase/firestore');\r\n\r\nclass Firebase {\r\n\r\n    constructor(firebaseConfig){\r\n        firebase.initializeApp(firebaseConfig);\r\n        this.auth = firebase.auth();\r\n        this.db = firebase.firestore();\r\n    }\r\n\r\n    saveSession(rules){\r\n        return this.auth.setPersistence(firebase.auth.Auth.Persistence[rules]);\r\n    }\r\n\r\n    login(email, password){\r\n        try {\r\n            return this.auth.signInWithEmailAndPassword(email, password);\r\n        } catch (error) {\r\n            console.error(error);\r\n            return null;\r\n        }\r\n    }\r\n\r\n    registration(email, password){\r\n        return this.auth.createUserWithEmailAndPassword(email, password)\r\n    }\r\n\r\n    signOut(){\r\n        return this.auth.signOut()\r\n    }\r\n\r\n    getCurrentUser() {\r\n        return this.auth.currentUser\r\n    }\r\n}\r\n\r\nlet firebaseInterface = new Firebase(firebaseConfig);\r\n\r\nexport default firebaseInterface;\r\n\r\nexport { auth, firestore };\r\n\r\n","import {EventEmitter} from 'events';\r\n\r\nconst stream = new EventEmitter();\r\nexport default stream;","import React from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\nimport eventEmitter from '../../EventEmitter';\r\n\r\nimport './errorPage.scss';\r\n\r\n\r\nclass ErrorPage extends React.Component {\r\n\r\n    state = {\r\n        redirect: false,\r\n    }\r\n\r\n    update = event => {\r\n       this.setState({redirect: true},\r\n        () => eventEmitter.emit('EventErrorCatchUpdate'));\r\n    }\r\n\r\n    render(){\r\n        if (this.state.redirect) return <Redirect to = '/' />\r\n        return (\r\n        <div class = 'container'>\r\n            <div class = 'flex-column'>\r\n                <h1>Application crash</h1>\r\n                <button className = 'button_updateApp' onClick = {this.update}>Update</button>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ErrorPage;","\r\nimport React from 'react';\r\nimport eventEmitter from '../../EventEmitter';\r\nimport ErrorPage from './ErrorPage';\r\n\r\nclass ErrorBoundary extends React.PureComponent {\r\n\r\n      state = { \r\n        hasError: false,\r\n      };\r\n\r\n    static getDerivedStateFromError(error) {\r\n        console.log(error);\r\n      // Обновить состояние с тем, чтобы следующий рендер показал запасной UI.\r\n      return { hasError: true};\r\n    }\r\n\r\n    updateApplication = event => {\r\n      this.setState({hasError: false});\r\n    };\r\n  \r\n    componentDidCatch(error, info) {\r\n      // Можно также сохранить информацию об ошибке в соответствующую службу журнала ошибок\r\n     console.error(error + \",\" + info);\r\n    }\r\n  \r\n    render() {\r\n      if (this.state.hasError) return <ErrorPage />\r\n      return this.props.children;\r\n    }\r\n\r\n    componentDidMount = () => {\r\n      eventEmitter.on('EventErrorCatchUpdate',this.updateApplication);\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n      eventEmitter.off('EventErrorCatchUpdate',this.updateApplication);\r\n    }\r\n  }\r\n\r\n  export default ErrorBoundary;","const CREATE_PROJECT = 'CREATE_PROJECT';\r\nconst LOAD_UPDATE_PROJECT = \"LOAD_UPDATE_PROJECT\";\r\nconst LOAD_CURRENT = 'LOAD_CURRENT';\r\nconst LOG_OUT_CABINET = 'LOG_OUT_CABINET';\r\nconst LOAD_USER_CABINET = 'LOAD_USER_CABINET';\r\nconst ERROR_CABINET = 'ERROR_CABINET';\r\nconst EXIT_PROJECT = 'EXIT_PROJECT';\r\n\r\nconst createProjectAction = (state) => {\r\n    return {\r\n        type: CREATE_PROJECT,\r\n        projects: state,\r\n    }\r\n}\r\n\r\nconst exitProjectAction = (state) => {\r\n    return {\r\n        type: EXIT_PROJECT,\r\n        exit: state\r\n    }\r\n}\r\n\r\nconst loadCurrentProjectAction = (state) => {\r\n    return {\r\n        type: LOAD_CURRENT,\r\n        id: state.id,\r\n        typeProject: state.typeProject,\r\n        sectionsProject: state.sectionsProject,\r\n        components: state.components\r\n    }\r\n}\r\n\r\nconst loadUpdateCurrentProject = (state) => {\r\n    return {\r\n        type: LOAD_UPDATE_PROJECT,\r\n        idProject: state.idProject,\r\n        sectionsProject: [...state.sectionsProject],\r\n        components: [...state.components]\r\n    }\r\n}\r\n\r\nconst loadUserAction = (state) => {\r\n    return {\r\n        type: LOAD_USER_CABINET,\r\n        active: true,\r\n        idUser: state.uid,\r\n        error: '',\r\n        projects: state.projects\r\n    }\r\n}\r\n\r\nconst logOutAction = (state) => {\r\n\r\n    return {\r\n        type: LOG_OUT_CABINET,\r\n        active: false,\r\n        idUser: null,\r\n        error: '',\r\n        projects: []\r\n    }\r\n}\r\n\r\nconst errorAction = (state) => {\r\n    return {\r\n        type: ERROR_CABINET,\r\n        error: state\r\n    }\r\n}\r\n\r\nexport {\r\n    CREATE_PROJECT, createProjectAction, /* cabinet */\r\n    LOAD_USER_CABINET, loadUserAction, /* cabinet */\r\n    LOG_OUT_CABINET, logOutAction, /* cabinet */\r\n    LOAD_CURRENT, loadCurrentProjectAction, /* builder */\r\n    LOAD_UPDATE_PROJECT, loadUpdateCurrentProject,\r\n    EXIT_PROJECT, exitProjectAction,\r\n    ERROR_CABINET, errorAction, /* both */\r\n}","import {LOAD_CURRENT,LOAD_UPDATE_PROJECT, EXIT_PROJECT} from './actions';\r\n\r\nconst initialState = {\r\n    loadProject: false,\r\n    idProject: null,\r\n    typeProject: null,\r\n    components: [],\r\n    sectionsProject: [],\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n    switch (action.type){\r\n\r\n        case LOAD_CURRENT: {\r\n            return {\r\n                ...state,\r\n                loadProject: true,\r\n                idProject: action.id,\r\n                typeProject: action.typeProject,\r\n                components: [...action.components],\r\n                sectionsProject: [...action.sectionsProject]\r\n            }\r\n        }\r\n\r\n        case LOAD_UPDATE_PROJECT: {\r\n            return {\r\n                ...state,\r\n                components: [...action.components],\r\n                sectionsProject: [...action.sectionsProject]\r\n            }\r\n        }\r\n\r\n        case EXIT_PROJECT: {\r\n            if (action.exit)\r\n            return {\r\n                ...state,\r\n                loadProject: false,\r\n                idProject: null,\r\n                typeProject: null,\r\n                components: []\r\n            }\r\n            else return state;\r\n        }\r\n        default: return state;\r\n    }\r\n};","import {LOAD_USER_CABINET, LOG_OUT_CABINET, ERROR_CABINET, CREATE_PROJECT, LOAD_UPDATE_PROJECT} from './actions';\r\n\r\nconst initialState = {\r\n    active: false,\r\n    idUser: null,\r\n    projects: [],\r\n    error: null,\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case LOAD_USER_CABINET: {\r\n\r\n            return {\r\n                ...state,\r\n                active: action.active,\r\n                idUser: action.idUser,\r\n                projects: [...action.projects]\r\n            }\r\n        }\r\n\r\n        case CREATE_PROJECT: {\r\n            return {\r\n                ...state,\r\n                projects: [...action.projects]\r\n            }\r\n        }\r\n\r\n        case LOAD_UPDATE_PROJECT: {\r\n            return {\r\n                ...state,\r\n                projects: state.projects.map(item => {\r\n                    if (item.id === action.idProject)\r\n                        item.components = [...action.components]\r\n                return item;\r\n                })\r\n            }\r\n        }\r\n\r\n        case LOG_OUT_CABINET: {\r\n            return {\r\n                ...state,\r\n                active: false,\r\n                idUser: null,\r\n                projects: []\r\n            }\r\n        }\r\n\r\n        case ERROR_CABINET: {\r\n            return {\r\n                ...state,\r\n                error: action.error\r\n            }\r\n        }\r\n        default: return state;\r\n    }\r\n}\r\n\r\n","import {combineReducers} from 'redux';\r\nimport reducerBuilder from './reducerBuilder';\r\nimport reducerCabinet from './reducerCabinet';\r\n\r\nexport default combineReducers({\r\n    builder: reducerBuilder,\r\n    cabinet: reducerCabinet,\r\n});","import {createStore, applyMiddleware, compose} from 'redux';\r\nimport firebase from  '../Firebase/Firebase';\r\nimport thunk from 'redux-thunk';\r\nimport combineReducers from './reducers';\r\n\r\nconst composeEnhancers =\r\n  typeof window === 'object' &&\r\n  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?\r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\r\n    }) : compose;\r\n\r\nconst middleware = composeEnhancers(\r\n  applyMiddleware(thunk.withExtraArgument({firebase})));\r\n\r\nconst store = createStore(combineReducers, middleware);\r\nexport default store;","import {loadUserAction, errorAction, logOutAction} from '../actions';\r\n\r\nconst middlewareLogin = (email,password) => async (dispatch,getState, {firebase}) => {\r\n        await firebase.login(email,password)\r\n        .then(response =>{\r\n            firebase.db.collection(\"users\").doc(response.user.uid).get()\r\n            .then(docUser => {\r\n                let user = docUser.data();\r\n                dispatch(loadUserAction({uid: docUser.id, projects: [...user.projects]}))\r\n            })\r\n        })\r\n        .catch((error) => {\r\n            console.error(error.message);\r\n            dispatch(errorAction(error.message));\r\n        });\r\n    }\r\n\r\nconst middlewareLoadUserData = (uid) => async (dispatch,getState, {firebase}) => {\r\n        await firebase.db.collection(\"users\").doc(uid).get()\r\n        .then(docUser => {\r\n            let user = docUser.data();\r\n            dispatch(loadUserAction({uid: uid, projects: [...user.projects]}))\r\n        })\r\n        .catch((error) => {\r\n            console.error(error.message);\r\n            dispatch(errorAction(error.message));\r\n        });\r\n    }\r\n\r\nconst middlewareLogOutUser = (uid) => async (dispatch,getState, {firebase}) => {\r\n    await firebase.signOut()\r\n    .then (response => {\r\n        dispatch(logOutAction());\r\n    })\r\n    .catch((error) => {\r\n        console.error(error.message);\r\n        dispatch(errorAction(error.message));\r\n    });\r\n}\r\nexport {\r\n    middlewareLogin,middlewareLoadUserData, middlewareLogOutUser\r\n}","import React from 'react';\r\nimport firebase from './Firebase';\r\nconst firebaseContext = React.createContext(firebase);\r\nexport default firebaseContext;","import React from 'react';\r\nimport firebaseContext from '../Firebase/firebaseContext';\r\n\r\n\r\nconst withFirebase = Component => props => {\r\n        return (\r\n            <firebaseContext.Consumer>\r\n                {firebase => <Component {...props} firebase = {firebase} /> }\r\n            </firebaseContext.Consumer>\r\n        )\r\n};\r\n\r\n\r\nexport default withFirebase;","import React,{useState} from 'react';\r\n\r\nexport default function(props) {\r\n    const [path] = useState(props.path ? props.path : '/img/loading.gif');\r\n    return (\r\n            <div className = 'loaderBox'>\r\n                <img className = 'loader' src = {path} alt = 'loader'></img> \r\n                <p>Loading {props.type}</p>\r\n            </div>\r\n    )\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport eventEmitter from '../../EventEmitter';\r\nimport './registration.scss';\r\n\r\nimport withFirebase from '../../components/firebaseHOC';\r\n\r\n\r\nclass Registration extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        firebase: PropTypes.object.isRequired, /** @firebase class for use firebase functions */\r\n    }\r\n\r\n    state = {\r\n        firebase: this.props.firebase,\r\n        error: null,\r\n    }\r\n\r\n    emailRef = null;\r\n    passwordRef = null;\r\n\r\n    setRefEmail = (node) => this.emailRef = node;\r\n    setRefPassword = (node) => this.passwordRef = node;\r\n\r\n    createUser = event => {\r\n\r\n        const email = this.emailRef ? this.emailRef.value : null;\r\n        const password = this.passwordRef ? this.passwordRef.value : null;\r\n        const { firebase } = this.props;\r\n\r\n        if (password && email)\r\n        firebase.registration(email, password)\r\n        .then(response => {\r\n            if (!response) throw new Error('Ivaid registration')\r\n            firebase.db.collection(\"users\").doc(response.user.uid).set({\r\n                'projects': [],\r\n                'email': email,\r\n            }).then(() => eventEmitter.emit('EventRegistrationCorrect', response))\r\n        })\r\n        .catch((error) => {\r\n        console.error(error.message);\r\n        this.setState({error: error.message});\r\n        });\r\n        else  return this.setState({error: 'invalid user data'});\r\n    };\r\n\r\n    render(){\r\n        let  { error } = this.state;\r\n        return (\r\n            <div className = 'RegistrationBox'>\r\n                <div  className = 'RegistrationForm'>\r\n                    <h3>Registration</h3>\r\n                    <form autoComplete = 'off' className = 'RegForm'>\r\n                        { error ?\r\n                            <p className = 'error'>{error}</p>\r\n                            : null\r\n                        }\r\n                        <span>E-mail</span>\r\n                        <input ref = {this.setRefEmail} type = 'text' />\r\n                        <span>Password</span>\r\n                        <input className = 'password' autoComplete = \"off\" ref = {this.setRefPassword} type = 'password' />\r\n                        <input onClick = {this.createUser}\r\n                                className = 'loginButton'\r\n                                type = 'button'\r\n                                value = 'registration'\r\n                        />\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\nexport default withFirebase(Registration);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport eventEmitter from '../../EventEmitter';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nimport {middlewareLogin} from '../../redux/middleware/loadUserMiddleware';\r\n\r\nimport Loader from '../../components/loading/Loader';\r\nimport Registration from '../../components/Registration/Registration';\r\n\r\nimport {connect} from 'react-redux';\r\n\r\nimport './index.scss';\r\n\r\nclass Index extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        active: PropTypes.bool, /** @active - status firebase auth */\r\n        dispatch: PropTypes.func.isRequired, /** @dispatch - redux */\r\n        history: PropTypes.object.isRequired, /** @Router HTML5 history */\r\n        location: PropTypes.object.isRequired, /** @Router */\r\n        match: PropTypes.object.isRequired, /** @Router */\r\n        wrongEnter: PropTypes.string, /** @Error about invalid enter */\r\n        config: PropTypes.object, /** @config - app settings */\r\n    }\r\n\r\n    state = {\r\n        title:  \"Constructor\",\r\n        registrationActive: false,\r\n        regStatus: false,\r\n        wrongEnter: false,\r\n        error: ''\r\n    }\r\n\r\n    emailImput = null;\r\n    passwordImput = null;\r\n\r\n    statusRegistration = event => {\r\n        event.additionalUserInfo.isNewUser ?\r\n            this.setState({\r\n                ...this.state,\r\n                regStatus: true,\r\n                registrationActive: false,\r\n                error: 'Account create!'\r\n            })\r\n        : console.error('error registration');\r\n    }\r\n\r\n    showBox = event => {\r\n        this.setState ({\r\n            ...this.state,\r\n        registrationActive: this.state.registrationActive ? false : true\r\n        });\r\n        event.stopPropagation();\r\n    }\r\n\r\n    authTo = event => {\r\n            if (this.emailImput && this.passwordImput)\r\n            this.props.dispatch(middlewareLogin(this.emailImput.value, this.passwordImput.value));\r\n            event.stopPropagation();\r\n    }\r\n\r\n    emailRef = node => this.emailImput = node;\r\n    passwordRef = node => this.passwordImput = node;\r\n\r\n    render(){\r\n\r\n        if (this.props.active) return <Redirect to = { '/Cabinet'} />\r\n        else if (!this.props.active) {\r\n            return (\r\n                <div className = 'LoginPage flex-column'>\r\n                        <h1>{this.state.title}</h1>\r\n                        <div className = 'LoginBox'>\r\n                            <div className = 'LoginForm'>\r\n                                <h3>Connect form</h3>\r\n                                {\r\n                                    this.props.wrongEnter || this.state.regStatus ?\r\n                                    <p className = 'error'>{this.props.wrongEnter}</p>\r\n                                    : null\r\n                                }\r\n                                <p>E-mail</p>\r\n                                <input ref = {this.emailRef} type = 'text' />\r\n                                <p>Password</p>\r\n                                <input ref = {this.passwordRef} type = 'password' />\r\n                                <input \r\n                                    onClick = {this.authTo} \r\n                                    className = 'loginButton enterInput'\r\n                                    type = 'button'\r\n                                    value = 'enter' />\r\n                                <input\r\n                                    onClick = {this.showBox}\r\n                                    className = {this.state.registrationActive ?\r\n                                        `loginButton registration selected` : 'loginButton registration'}\r\n                                    type = 'button'\r\n                                    value = 'registration'\r\n                                    />\r\n                            </div>\r\n                        </div>\r\n                        {\r\n                            this.state.registrationActive ?\r\n                            <Registration />\r\n                            : null\r\n                        }\r\n                </div>\r\n            )\r\n        } else  return <Loader path = '/img/loading.gif' type = 'session' />\r\n    }\r\n\r\n    componentDidMount = (e) => {\r\n        eventEmitter.on('EventRegistrationCorrect', this.statusRegistration);\r\n    }\r\n    componentWillUnmount = (e) => {\r\n        eventEmitter.off('EventRegistrationCorrect', this.statusRegistration);\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        active: state.cabinet.active, \r\n        wrongEnter: state.cabinet.error\r\n    }\r\n  }\r\n\r\nexport default connect(mapStateToProps)(Index);","\r\nimport {errorAction, loadUserAction, loadUpdateCurrentProject} from '../actions';\r\n\r\nconst middlewareDelete = item => async (dispatch,getState, {firebase}) => {\r\n    await firebase.db.collection('users').doc(item.uid).get()\r\n    .then(user => user.data())\r\n    .then(data => {\r\n        return {id: data.id, projects: data.projects.filter(itemdb => itemdb.id !== item.id)};\r\n    })\r\n    .then(data => {\r\n        firebase.db.collection(\"users\").doc(item.uid).update({\r\n            \"projects\": data.projects\r\n        })\r\n        .then(response => {\r\n            dispatch(loadUserAction({uid: data.id, projects: data.projects}));\r\n        });\r\n    })\r\n    .catch((error) => {\r\n        console.error(error.message);\r\n        dispatch(errorAction(error.message));\r\n    });\r\n}\r\n\r\nconst middlewareDeleteProjectComponent = item => async (dispatch, getState, {firebase}) => {\r\n    await firebase.db.collection('users').doc(item.uid).get()\r\n    .then(user => user.data())\r\n    .then(data => {\r\n        const userProjects = [...data.projects];\r\n        const findProject = userProjects.find(project => item.id === project.id);\r\n        if (!findProject) throw new Error('No found project');\r\n        findProject.components = findProject.components.filter(component =>\r\n            component.id !== item.idComponent\r\n        );\r\n        return {dataUpdate: data, findProject: findProject};\r\n    })\r\n    .then(data => {\r\n        let {dataUpdate} = data;\r\n        let {findProject} = data;\r\n        firebase.db.collection(\"users\").doc(item.uid).update({\r\n            \"projects\": dataUpdate.projects\r\n        })\r\n        .then(response => {\r\n            dispatch(loadUpdateCurrentProject({\r\n                components: [...findProject.components],\r\n                idProject: item.id,\r\n                sectionsProject: [...item.sectionsProject],\r\n            }))\r\n        });\r\n    })\r\n    .catch(error => {\r\n        console.error(error.message);\r\n        dispatch(errorAction(error.message));\r\n        return null;\r\n    });\r\n\r\n    return item.idComponent;\r\n}\r\n\r\nexport {middlewareDeleteProjectComponent};\r\nexport default middlewareDelete;\r\n","import React, {useState} from 'react';\r\n\r\nimport './icon.scss';\r\n\r\nfunction Icon(props){\r\n    const [path] = useState(props.path);\r\n    const [className] = useState(props.className ? props.className : null);\r\n    const [draggable] = useState(props.draggable ? true : false);\r\n\r\n    return (\r\n    <img\r\n        draggable = {draggable}\r\n        onClick = {props.onClick ? props.onClick : null}\r\n        className = {className}\r\n        title = {props.title ? props.title : null}\r\n        src = {process.env.PUBLIC_URL + path } alt = 'icon'>\r\n    </img>\r\n    )\r\n}\r\n\r\nexport default Icon;","import React from 'react';\r\n\r\nimport './Confirm.scss';\r\n\r\nconst Confirm = props => {\r\n\r\n    return (\r\n        <div className = 'wrapperConfirm'>\r\n            <div className = 'confirmSave'>\r\n                <span>Detected new changes</span>\r\n                <input\r\n                    className = 'saveCofirm'\r\n                    onClick = {props.cbSaveChanges}\r\n                    type = 'button'\r\n                    value = 'Save changes'\r\n                />\r\n                <input\r\n                    className = 'cancelCofirm'\r\n                    onClick = {props.cbCancelSave}\r\n                    type = 'button'\r\n                    value = 'Cancel'\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Confirm;","import React from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport './header.scss';\r\n\r\nimport {middlewareLogOutUser} from '../../redux/middleware/loadUserMiddleware';\r\nimport {connect} from 'react-redux';\r\nimport {Redirect, withRouter} from 'react-router-dom';\r\n\r\nimport eventEmitter from '../../EventEmitter.js';\r\nimport Icon from '../Icon/icon';\r\nimport Confirm from '../confirmBox/Confirm';\r\n\r\nconst iconPath = require('../../config.json').CabinetIcon;\r\n\r\nclass Header extends React.Component {\r\n\r\n    static propTypes = {\r\n        title: PropTypes.string.isRequired, /** @Config title app */\r\n        dispatch: PropTypes.func.isRequired, /** @dispatch redux */\r\n        history: PropTypes.object.isRequired, /** @Router HTML5 history */\r\n        location: PropTypes.object.isRequired, /** @Router */\r\n        match: PropTypes.object.isRequired, /** @Router */\r\n    };\r\n\r\n    state = {\r\n        title: this.props.title,\r\n        isChange: false,\r\n        redirectConfirm: false,\r\n        redirectAbout: {\r\n            path:  '/Cabinet/About',\r\n            redirectA: false,\r\n        },\r\n        redirectCabinet: {\r\n            path:  '/Cabinet',\r\n            redirectC: false,\r\n        }\r\n    };\r\n\r\n    confirm = event => {\r\n        this.setState({isChange: event});\r\n    }\r\n\r\n    confirmSaveDetectChanges = event => {\r\n        eventEmitter.emit('EventRedirectSaveChanges');\r\n        this.setState({\r\n            redirectConfirm: false,\r\n            redirectCabinet: {\r\n                ...this.state.redirectCabinet,\r\n                redirectC: true\r\n            }\r\n        });\r\n    };\r\n\r\n    logOut = event => {\r\n        if (this.props.idUser)\r\n            this.props.dispatch(middlewareLogOutUser(this.props.idUser));\r\n        event.stopPropagation();\r\n    };\r\n\r\n    redirectAbout = event => {\r\n        const isPath = this.props.location.pathname !== this.state.redirectAbout.path;\r\n        if (isPath && !this.state.isChange)\r\n           this.setState({\r\n                redirectConfirm: false,\r\n                redirectAbout: {\r\n                   ...this.state.redirectAbout,\r\n                   redirectA: true\r\n               }\r\n           });\r\n           else this.setState({redirectConfirm: true});\r\n        event.stopPropagation()\r\n    };\r\n\r\n    redirectCabinet = event => {\r\n        if (event !== 'cancelMode'){\r\n            const isPath = this.props.location.pathname !== this.state.redirectCabinet.path;\r\n            if (isPath && !this.state.isChange)\r\n            this.setState({\r\n                redirectConfirm: false,\r\n                redirectCabinet: {\r\n                    ...this.state.redirectCabinet,\r\n                    redirectC: true\r\n                }\r\n            });\r\n            else this.setState({redirectConfirm: true});\r\n            event.stopPropagation();\r\n\r\n        } else this.setState({\r\n            redirectConfirm: false,\r\n            redirectCabinet: {\r\n                ...this.state.redirectCabinet,\r\n                redirectC: true\r\n            }\r\n        });\r\n    }\r\n\r\n    add = event => {\r\n        eventEmitter.emit('EventChangeWorkMode',{action: 'newProject'});\r\n        event.stopPropagation()\r\n    };\r\n\r\n    render(){\r\n        let {redirectA} = this.state.redirectAbout;\r\n        let {redirectC} = this.state.redirectCabinet;\r\n\r\n        if (redirectA) return <Redirect to = {this.state.redirectAbout.path} />\r\n        if(redirectC) return <Redirect to = {this.state.redirectCabinet.path} />\r\n\r\n        return (\r\n            <React.Fragment>\r\n            {this.state.isChange && this.state.redirectConfirm ? \r\n                <Confirm \r\n                    cbSaveChanges = {this.confirmSaveDetectChanges}\r\n                    cbCancelSave = {() => this.redirectCabinet('cancelMode')}\r\n                /> : null}\r\n                <header>\r\n                    <div className = 'container'>\r\n                        <div className = 'flex-row'>\r\n                                <div onClick = {this.redirectCabinet} className = 'header__CabinetInfo'>\r\n                                    <Icon className ='mainIcon' path = {iconPath} />\r\n                                    <h3 className = 'tilteApp'>{this.state.title}</h3>\r\n                                </div>\r\n                                {this.props.location.pathname === '/Cabinet' ?\r\n                                    <div onClick = {this.add} className = 'header__newProject__AddButton'>\r\n                                        <Icon className = 'Cabinet' path = '/img/plus.png' />\r\n                                    </div>\r\n                                    : null\r\n                                }\r\n                                    <div  className = 'Navigator'>\r\n                                        <Icon className = 'about' onClick = {this.redirectAbout}\r\n                                            title = 'about'\r\n                                            path = '/img/about_logo.svg'\r\n                                        />\r\n                                        <Icon className = 'logoutButton'\r\n                                            onClick = {this.logOut}\r\n                                            title = 'logOut'\r\n                                            path = '/img/logOut.svg'\r\n                                        />\r\n                                    </div>\r\n                        </div>\r\n                </div>\r\n                </header>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n    componentWillMount = () => {\r\n        eventEmitter.on('EventRedirectConfirm', this.confirm);\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        eventEmitter.off('EventRedirectConfirm', this.confirm);\r\n    }\r\n}\r\n\r\nexport default connect()(withRouter(Header));","import React, {useState} from 'react';\r\nimport eventEmitter from '../../EventEmitter';\r\n\r\nconst ImageItem = props => {\r\n\r\n    const [id] = useState(props.id);\r\n    const [urlRegular] = useState(props.urls.regular);\r\n    const [urlFull] = useState(props.urls.full);\r\n    const [isFull] = useState(props.isFull);\r\n    const [urlContent] = useState(props.urlContent);\r\n\r\n    const showImageMenu = event => {\r\n       eventEmitter.emit(\"EventShowMenuImage\", {id: id, url: urlRegular, urlFull: urlFull, iframe: urlContent});\r\n    }\r\n\r\n\r\n    return (\r\n        <div className = {props.selected ? 'ItemBox selected' : 'ItemBox'}>\r\n            <img\r\n                className = 'ImageItem'\r\n                onClick = {showImageMenu}\r\n                src = {isFull ? urlFull : urlRegular}\r\n                alt = 'item'\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ImageItem;","import React from 'react';\r\n\r\nconst CreateProject = props => {\r\n\r\n    return (\r\n    <div className = 'Modal'>\r\n        <h3>Create new Project</h3>\r\n        { props.nameLength <= 3 ?\r\n            <span className = 'warning'>{props.warningLengthMin}</span> : null\r\n        }\r\n        { props.nameLength >= 20 ?\r\n            <span className = 'warning'>{props.warningLengthMax}</span> : null\r\n        }\r\n        <input\r\n            className = {props.typeClassName ? 'ready' : 'wrong'}\r\n            value = {props.name}\r\n            onChange = {props.cbValidateName}\r\n            type = 'text'\r\n            placeholder = \"Project name\"\r\n        />\r\n        { !props.validType ?\r\n            <span className = 'warning'>{props.warningType}</span> : null\r\n        }\r\n        <select onChange = {props.cbSelectOption} >\r\n            <option value = 'empty'>--------</option>\r\n            <option value = 'landing'>Landing</option>\r\n            <option value = 'portfolio'>Portfolio</option>\r\n        </select>\r\n        <input \r\n            onClick = {props.cbAddNewProject}\r\n            className = 'acceptButton'\r\n            disabled = {props.dissabled}\r\n            type = 'button'\r\n            value = 'Submit'\r\n        />\r\n        <input onClick = {props.cbCancel} type ='button' value = 'Cancel' />\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default CreateProject;","import React from 'react';\r\nimport Icon from '../../Icon/icon';\r\nimport Loader from '../../loading/Loader';\r\nconst SearchModal = props => {\r\n\r\n    const refSearch = React.createRef();\r\n\r\n    const search = event => {\r\n        let value = null;\r\n        refSearch.current.focus();\r\n        value = refSearch.current.value;\r\n\r\n        props.cbSearch(event,value,props.modalSearchMode);\r\n        event.stopPropagation();\r\n    }\r\n    return (\r\n\r\n        <React.Fragment>\r\n            <div className = 'Modal Modal-search'>\r\n            <h3>{`Search ${props.modalSearchMode}`}</h3>\r\n            { props.error ?\r\n                <span className = 'error'>{props.error}</span> : null\r\n            }\r\n                <input ref = {refSearch} type = 'text' placeholder = \"name\" />\r\n                    <input\r\n                        disabled = {props.dissabled}\r\n                        className = 'acceptButton'\r\n                        type = 'button'\r\n                        value = 'Search'\r\n                        onClick = {search}\r\n                    />\r\n                <input onClick = {props.cbCancel} type ='button' value = 'Cancel' />\r\n            <div className = 'searchResultBox'>\r\n                {props.view ? props.cbMakeImageResultBox([...props.images]) : null}\r\n                {props.loading ? <Loader type = 'images' /> : null}\r\n            </div>\r\n        </div>\r\n        {  props.menuActive ?\r\n            <div className = 'ActionModalSearch'>\r\n            <button onClick = {props.cbShowImage} className = 'actionModalSearch__view'>\r\n                <Icon path = '/img/view.png' />\r\n            </button>\r\n            <button onClick = {props.cbSetSelectedImage} className = 'actionModalSearch__settings'>\r\n                <Icon path = '/img/settings.png' />\r\n            </button>\r\n            </div>\r\n            : null\r\n        }\r\n    </React.Fragment>\r\n\r\n    )\r\n}\r\n\r\nexport default SearchModal;","import React,{Fragment} from 'react';\r\n\r\nimport isFetch from 'isomorphic-fetch';\r\nimport PropTypes from 'prop-types';\r\nimport eventEmitter from '../../EventEmitter.js';\r\n\r\nimport ImageItem from '../imageViewer/imageItem';\r\n\r\nimport CreateProject from './createProject/createProject';\r\nimport SearchModal from './Search/searchModal';\r\nimport './modal.scss';\r\n\r\nrequire('es6-promise').polyfill();\r\n\r\nclass ModalWindow extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        workMode: PropTypes.string.isRequired, /** @Mode for modal */\r\n        // idComponent: PropTypes.string || PropTypes.number /** @Id current user project */\r\n    }\r\n\r\n    state = {\r\n        workMode: this.props.workMode,\r\n        images: {\r\n            loading: false,\r\n            buttonSearchDisabled: false,\r\n            selectedItem: null, \r\n            showUrl: null, \r\n            images: null,\r\n            urlFull: null,\r\n            imageBoxView: false, \r\n            iframe: null,\r\n            error: ''\r\n        },\r\n        newProject: {\r\n            validateName: false,\r\n            validateType: false,\r\n            disabled: true,\r\n            name: '',\r\n            type: 'empty'\r\n        },\r\n        imageMenuActive: false,\r\n        warning: {\r\n            lengthMax: 'Max length: 20 symbols',\r\n            lengthMin: 'Min length: 4 symbol',\r\n            type: 'Select type of webpage',\r\n        }\r\n    }\r\n\r\n    inputSearch = null;\r\n    inputSelect = null;\r\n\r\n    searchData = (event,value, mode) => {\r\n\r\n        this.setState({...this.state, \r\n            images: {\r\n                ...this.state.inages,\r\n                loading: true,\r\n                buttonSearchDisabled: true\r\n            }\r\n        });\r\n\r\n        let search = null;\r\n        if (value) search = value;\r\n        else search = this.inputSearch.value;\r\n\r\n        if (mode !== 'media'){\r\n        const modeAPI = 'search/photos/?page=1&per_page=40&query=';\r\n        const api = `https://api.unsplash.com/${modeAPI}`;\r\n \r\n        isFetch(`${api + search}&client_id=${process.env.REACT_APP_UNSPLASH_TOKEN}`)\r\n        .then(response => {\r\n            if (response.ok) return response.json();\r\n            else throw new Error('request invalid');\r\n        })\r\n        .then(response => {\r\n            let {results} = response;\r\n            if (results.length)\r\n            this.setState({\r\n                ...this.state,\r\n                images: {\r\n                    ...this.state.images,\r\n                    loading: false,\r\n                    imageBoxView: true,\r\n                    error: '',\r\n                    images: [...results],\r\n                    buttonSearchDisabled: false\r\n                },\r\n            });\r\n            else throw new Error('Photos not found');\r\n        })\r\n        .catch(error => {\r\n            console.error(error.message);\r\n            this.setState({\r\n                ...this.state,\r\n                images: {\r\n                    ...this.state.images,\r\n                    buttonSearchDisabled: false,\r\n                    loading: false,\r\n                    error: error.message},\r\n                imageBoxView: false,\r\n            });\r\n        });\r\n        } else this.searchYouTubeAPI(search);\r\n    }\r\n\r\n    \r\n    searchYouTubeAPI = (search) => {\r\n\r\n        const API = `https://www.googleapis.com/youtube/v3/search?part=snippet`;\r\n        const RAITE = `&maxResults=25&order=date&q=${search}`;\r\n        const KEY = `&key=${process.env.REACT_APP_YOUTUBE_SEARCH_TOKEN}`;\r\n        isFetch(API + RAITE + KEY)\r\n        .then(res => {\r\n            if (res.ok)\r\n            return res.json();\r\n            else throw new Error (`Error ${res.status}`);\r\n        })\r\n        .then(res => {\r\n            const arrayItems = [];\r\n            res.items.forEach(item => {\r\n                arrayItems.push({\r\n                    urls: { regular: item.snippet.thumbnails.high.url },\r\n                    videoId: item.id.videoId\r\n                })\r\n            });\r\n            return arrayItems;\r\n        })\r\n        .then(results => {\r\n            this.setState({\r\n                ...this.state,\r\n                images: {\r\n                    ...this.state.images,\r\n                    loading: false,\r\n                    imageBoxView: true,\r\n                    error: '',\r\n                    images: [...results],\r\n                    buttonSearchDisabled: false\r\n                },\r\n            });\r\n        })\r\n        .catch(error => console.error(error));\r\n    }\r\n\r\n    showMenuImage = event => {\r\n        this.setState({\r\n            ...this.state, \r\n            imageMenuActive: true,\r\n            images: {\r\n                ...this.state.images,\r\n                selectedItem: event.id, \r\n                showUrl: event.url,\r\n                urlFull: event.urlFull,\r\n                iframe: event.iframe\r\n\r\n            }\r\n        });\r\n    }\r\n\r\n    showImage = event => {\r\n\r\n        const {showUrl, iframe} = this.state.images;\r\n\r\n        eventEmitter.emit(\"EventView\", {\r\n            action: true, \r\n            target: showUrl ? showUrl : null,\r\n            iframe: iframe,\r\n            mode: this.props.modalSearchMode\r\n        });\r\n        event.stopPropagation();\r\n    }\r\n\r\n    setSelectedImage = event => {\r\n\r\n        let data = {...this.state.images};\r\n        if (this.props.modalSearchMode === 'background'){\r\n            eventEmitter.emit(`EventSetBackgroundImage${this.props.idComponent}`,data);\r\n            eventEmitter.emit(`EventSetBImageInstumentPanel`,{images: data, mode: this.props.modalSearchMode});\r\n        } else if (this.props.modalSearchMode === 'image'){\r\n            eventEmitter.emit(`EventSetCurrentImage${this.props.idComponent}`, data);\r\n            eventEmitter.emit(`EventSetBImageInstumentPanel`, {images: data,  mode: this.props.modalSearchMode });\r\n        } else if (this.props.modalSearchMode === 'media'){\r\n            eventEmitter.emit(`EventSetContentMedia${this.props.idComponent}`,{\r\n                    iframe: data.iframe,\r\n                    mode: this.props.modalSearchMode\r\n                }\r\n            );\r\n            eventEmitter.emit(`EventSetIframe`, {iframe: data.iframe});\r\n        }\r\n\r\n        event.stopPropagation();\r\n    };\r\n\r\n    makeImageResultBox = (items) => {\r\n        if (!items) return null;\r\n\r\n        return items.map((item,i) =>{\r\n           return <ImageItem \r\n                key = {`item${i}`} \r\n                id = {i}\r\n                urlContent = {item.videoId ? item.videoId : null}\r\n                selected = {this.state.images.selectedItem === i ? true : false} \r\n                isFull = {false}\r\n                urls = {{...item.urls}} \r\n            />\r\n        });\r\n    }\r\n\r\n    addNewProject = event => {\r\n        let mode = this.state[this.state.workMode];\r\n        if (mode.validateType &&  mode.validateName) {\r\n            eventEmitter.emit('EventAddProject',\r\n            {\r\n                title: this.state[this.state.workMode].name,\r\n                type: this.state[this.state.workMode].type\r\n            });\r\n\r\n            eventEmitter.emit('EventChangeWorkMode',{action: 'default'});\r\n        }\r\n    }\r\n\r\n    selectOption = event => {\r\n\r\n        let inputs = {...this.state[this.state.workMode]};\r\n        inputs.type = event.target.value;\r\n        inputs.validateType = inputs.type !== 'empty';\r\n        inputs.disabled = inputs.validateType && inputs.validateName ? false : true;\r\n        this.setState({\r\n            ...this.state,\r\n            [this.state.workMode]: inputs\r\n        });\r\n    }\r\n\r\n    validateName = event => {\r\n\r\n        let inputs = {...this.state[this.state.workMode]};\r\n        inputs.name = event.target.value;\r\n        let lengthInput = inputs.name.length;\r\n        inputs.validateName = lengthInput >= 4 && lengthInput < 20 ? true : false;\r\n        inputs.disabled = inputs.validateType && inputs.validateName ? false : true;\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            [this.state.workMode]: inputs\r\n        })\r\n    };\r\n\r\n    cancel = event => {\r\n\r\n        if (this.state.workMode === 'Search')\r\n            eventEmitter.emit(\"EventModalSearchOn\", {action: 'offline', mode: null});\r\n        else  eventEmitter.emit('EventChangeWorkMode',{action: 'default'});\r\n    }\r\n\r\n    refSelect = (node) => this.inputSelect = node;\r\n    refSearch = node => this.inputSearch = node;\r\n\r\n    render(){\r\n        switch (this.state.workMode){\r\n            case 'newProject':\r\n                return <CreateProject\r\n                            dissabled = {this.state[this.state.workMode].disabled}\r\n                            nameLength = {this.state[this.state.workMode].name.length}\r\n                            name = {this.state[this.state.workMode].name}\r\n                            validType = {this.state[this.state.workMode].validateType}\r\n                            warningType = {this.state.warning.type}\r\n                            typeClassName = {this.state[this.state.workMode].validateName}\r\n                            warningLengthMin = {this.state.warning.lengthMin}\r\n                            warningLengthMax = {this.state.warning.lengthMax}\r\n                            cbValidateName = {this.validateName}\r\n                            cbSelectOption = {this.selectOption}\r\n                            cbAddNewProject = {this.addNewProject}\r\n                            cbCancel = {this.cancel}\r\n                        />\r\n            case 'Search':\r\n                    return (\r\n                        <SearchModal\r\n                            images = {this.state.images['images']}\r\n                            loading = {this.state.images.loading}\r\n                            view = {this.state.images.imageBoxView}\r\n                            dissabled = {this.state.images.buttonSearchDisabled}\r\n                            error = {this.state.images.error}\r\n                            cbCancel = {this.cancel}\r\n                            menuActive = {this.state.imageMenuActive}\r\n                            cbMakeImageResultBox = {this.makeImageResultBox}\r\n                            cbShowImage = {this.showImage}\r\n                            cbSetSelectedImage = {this.setSelectedImage}\r\n                            modalSearchMode = {this.props.modalSearchMode}\r\n                            cbSearch = {this.searchData}\r\n                        />\r\n                    )\r\n\r\n            default: return <Fragment></Fragment>\r\n        }\r\n    }\r\n\r\n    componentDidMount = event => {\r\n        if (this.state.workMode === 'Search')\r\n            eventEmitter.on('EventShowMenuImage', this.showMenuImage);\r\n    }\r\n\r\n    componentWillUnmount = event => {\r\n        if (this.state.workMode === 'Search')\r\n            eventEmitter.off('EventShowMenuImage', this.showMenuImage);\r\n    }\r\n}\r\n\r\nexport default ModalWindow;\r\n\r\n","import {createProjectAction, errorAction} from '../actions';\r\n\r\n\r\nfunction random(min,max){\r\n    return `${Math.floor(min + Math.random() * (max-min))}`\r\n}\r\n\r\n\r\nconst middlewareCreateProject = (uid, list, title, type) => async (dispatch,getState, {firebase}) => {\r\n    let lastProject = [...list];\r\n    const lastIndex = lastProject.length  ? lastProject[lastProject.length-1].id + 1 : 0;\r\n    const sectionsProject = [];\r\n    if (type === 'portfolio') sectionsProject.push(\"Header\");\r\n    else sectionsProject.push(\"Header\");\r\n    const header = {\r\n        backgroundImage: null,\r\n        color: null,\r\n        id: `MainBackgroundHeader${random(0,10000)}`,\r\n        targetSection: \"Header\",\r\n        type: \"background\"\r\n    }\r\n\r\n    lastProject.push({\r\n        id: lastIndex,\r\n        title: title,\r\n        type: type,\r\n        components: [header],\r\n        sectionsProject: [...sectionsProject],\r\n    });\r\n\r\n    await firebase.db.collection(\"users\").doc(uid).update({\r\n        'projects': lastProject,\r\n    })\r\n    .then (() => dispatch(createProjectAction(lastProject)))\r\n    .catch(error => {\r\n        console.error(error.message);\r\n        dispatch(errorAction(error.message));\r\n    })\r\n};\r\n\r\nexport {\r\n    middlewareCreateProject\r\n}","import React, {useState} from 'react';\r\nimport eventEmitter from '../../EventEmitter';\r\nimport {withRouter, Redirect} from 'react-router-dom';\r\n\r\nfunction Item(props) {\r\n\r\n    const [path] = useState( `/Cabinet/Build/${props.id}`);\r\n    const [productionPath] = useState(`/Cabinet/Build/${props.id}/Production/`);\r\n\r\n    let [canBuild,setCanBuild] = useState(false);\r\n    let [canProd, setCanProd] = useState(false);\r\n\r\n    const [id] = useState(props.id);\r\n    const [name] = useState(props.name);\r\n    const [type] = useState(props.type);\r\n\r\n\r\n    const build = event => {\r\n        if(props.location.pathname !== path)\r\n            setCanBuild(true);\r\n        event.stopPropagation();\r\n    };\r\n\r\n    const showProduction = event => {\r\n        if(props.location.pathname !== path)\r\n        setCanProd(true);\r\n        event.stopPropagation();\r\n    };\r\n\r\n    const deleteItem = event => {\r\n        eventEmitter.emit('EventDeleteItem',{\r\n            id: props.id,\r\n            name: props.name,\r\n            type: props.type\r\n        });\r\n        event.stopPropagation();\r\n    };\r\n\r\n\r\n    if (canBuild) return <Redirect to = {path} />\r\n    else if (canProd) return <Redirect to = {productionPath} />\r\n    else return (\r\n            <div className = 'item' data-id = {id}>\r\n                <p className = 'ProjectName'>{name}</p>\r\n                <p className = 'ProjectType'>{type}</p>\r\n                <div className = 'projectController'>\r\n                    <input \r\n                        onClick = {build} \r\n                        className = 'projectControllerButton_enter' \r\n                        type = 'button' \r\n                        value = 'enter build' />\r\n                    <input onClick = {deleteItem} \r\n                        className = 'projectControllerButton_delete' \r\n                        type = 'button' \r\n                        value = 'delete' />\r\n                </div>\r\n                <input onClick = {showProduction} \r\n                    className = 'productionButton' \r\n                    type = 'button' \r\n                    value = 'Production' />\r\n            </div>\r\n        )\r\n}\r\n\r\nexport default withRouter(Item);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport {middlewareCreateProject} from '../../redux/middleware/createProjectMiddleware';\r\n\r\nimport './list.scss';\r\n\r\nimport Item from './Item';\r\nimport eventEmitter from '../../EventEmitter.js';\r\n\r\nclass List extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        dispatch: PropTypes.func.isRequired, /** @dispatch redux */\r\n        idUser: PropTypes.string.isRequired, /** @UID current user */\r\n        list: PropTypes.array.isRequired, /** @List user projects */\r\n    }\r\n\r\n    state = {\r\n        redirect: false,\r\n    }\r\n\r\n    addNewProject = (item) => {\r\n        if (this.props.idUser) {\r\n            this.props.dispatch(middlewareCreateProject(\r\n                    this.props.idUser,\r\n                    this.props.list,\r\n                    item.title,\r\n                    item.type\r\n                ));\r\n        } else this.setState({...this.state, redirect: true});\r\n    }\r\n\r\n\r\n    makeList = (list) => {\r\n\r\n        return list.map (project => {\r\n\r\n            return(\r\n                <Item\r\n                    key = {project.id}\r\n                    id = {project.id}\r\n                    name = {project.title}\r\n                    type = {project.type}\r\n                />\r\n            )\r\n        });\r\n    }\r\n\r\n    render(){\r\n        if (this.state.redirect)\r\n            return <Redirect to = { '/'} />\r\n            else return (\r\n                    <div className = 'projectsList__list'>\r\n                        {this.makeList([...this.props.list])}\r\n                    </div>\r\n                )\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        eventEmitter.on('EventAddProject',this.addNewProject);\r\n    }\r\n\r\n      componentWillUnmount = () => {\r\n        eventEmitter.off('EventAddProject',this.addNewProject);\r\n      }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        idUser: state.cabinet.idUser,\r\n        list: [...state.cabinet.projects]\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(List);","import React from 'react';\r\n\r\nimport List from '../List/List.jsx';\r\n\r\nimport './ProjectsSection.scss';\r\n\r\nconst ProjectsSection = props => {\r\n\r\n        return (\r\n                <section className = 'projectsList'>\r\n                    <div className = 'container'>\r\n                        <div className = 'flex-column'>\r\n                            <div className = 'projectsList__about'>\r\n                                <h3>Your Projects</h3>\r\n                            </div>\r\n                            {List ? <List /> : null}\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n        )\r\n\r\n}\r\n\r\nexport default ProjectsSection;","import React,{Fragment} from 'react';\nimport PropTypes from 'prop-types';\nimport eventEmitter from '../../EventEmitter.js';\nimport {Redirect} from 'react-router-dom';\nimport withFirebase from '../../components/firebaseHOC';\n\nimport {middlewareLogOutUser} from '../../redux/middleware/loadUserMiddleware';\nimport middlewareDelete from '../../redux/middleware/middlewareDelete';\nimport Loader from '../../components/loading/Loader';\nimport {connect} from 'react-redux';\n\nimport Header from '../../components/header/Header';\nimport Modal from '../../components/modalWindow/ModalWindow';\nimport ProjectsSection from '../../components/ProjectsSection/ProjectsSection';\n\nimport './Cabinet.scss';\n\nconst title = require('../../config.json').title;\n\nclass Cabinet extends React.PureComponent {\n\n  static propTypes = {\n    firebase: PropTypes.object.isRequired, /** @firebase class for use firebase functions */\n    active: PropTypes.bool, /** @active - status firebase auth */\n    dispatch: PropTypes.func.isRequired, /** @dispatch - redux */\n    history: PropTypes.object.isRequired, /** @Router HTML5 history */\n    location: PropTypes.object.isRequired, /** @Router */\n    match: PropTypes.object.isRequired, /** @Router */\n    idUser: PropTypes.string, /** @Session user id from redux */\n    projects: PropTypes.arrayOf(PropTypes.object).isRequired /** @Projects array with user projects from redux */\n  }\n\n  state = {\n    workMode: 'default',\n  }\n\n  logOut = () => {\n    this.props.dispatch(middlewareLogOutUser(this.props.idUser));\n  }\n\n  deletItem = event => {\n    this.props.dispatch(middlewareDelete({...event, uid: this.props.firebase.getCurrentUser().uid}));\n  };\n\n  changeWorkMode = event => {\n    this.setState ({\n      ...this.state,\n      workMode: event.action,\n    });\n  };\n\n  render(){\n\n    if (this.props.active){\n      return (\n        <Fragment>\n          <Header title = {title} idUser = {this.props.idUser} />\n          <div className = 'Cabinet'>\n            {(this.state.workMode === 'newProject') ? <Modal workMode = {this.state.workMode} /> : null}\n              <ProjectsSection />\n            </div>\n        </Fragment>\n      )\n    } else if (!this.props.firebase.getCurrentUser()) return <Redirect to = { '/'} />\n    else return <Loader path = '/img/loading.gif' type = 'Cabinet' />\n  }\n\n\n  componentDidMount = () => {\n    eventEmitter.on('EventDeleteItem', this.deletItem);\n    eventEmitter.on('EventChangeWorkMode', this.changeWorkMode);\n  };\n\n  componentWillUnmount = () => {\n    eventEmitter.off('EventDeleteItem', this.deletItem);\n    eventEmitter.off('EventChangeWorkMode', this.changeWorkMode);\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    idUser: state.cabinet.idUser,\n    projects: [...state.cabinet.projects],\n    active: state.cabinet.active\n  }\n};\n\nexport default connect(mapStateToProps)(withFirebase(Cabinet));\n","import React, {useEffect, useState} from 'react';\r\nimport eventEmitter from '../../../EventEmitter';\r\nimport styled from 'styled-components';\r\n\r\n\r\nconst Background = styled.div`\r\n    position: relative;\r\n    width: ${props => props.width};\r\n    height: ${props => props.height};\r\n    background-size: cover;\r\n    background-color: ${props => props.backgroundColor};\r\n    background-image: url(${props => props.backgroundImage});\r\n`;\r\n\r\nconst BackgroundComponent = props => {\r\n\r\n    const [id] = useState(props.id);\r\n    const [targetSection] = useState(props.targetSection);\r\n    let boxComponent = React.createRef();\r\n\r\n    let [backgroundColor, setBgColor] = useState(props.background || props.color);\r\n    let [backgroundImage, setImage] = useState(props.backgroundImage ? props.backgroundImage : null);\r\n\r\n    let [width] = useState(props.width ? props.width : '100%');\r\n    let [height] = useState(props.height ? props.height : '100%');\r\n\r\n\r\n    const saveDataParent = () => {\r\n        boxComponent.current.focus();\r\n        let boxInform =  boxComponent.current.getBoundingClientRect();\r\n        eventEmitter.emit(`EventSaveWidth${targetSection}`,{\r\n            sectionNumber: props.sectionNumber,\r\n            size: {width: boxInform.width, height: boxInform.height}\r\n        });\r\n    }\r\n\r\n    const openBgInstruments = event => {\r\n\r\n        const componentsPatternBackground = {\r\n            id: id,\r\n            targetSection: targetSection,\r\n            type: 'background',\r\n            color: backgroundColor,\r\n            backgroundImage: backgroundImage,\r\n        }\r\n        eventEmitter.emit('EventInstrumentPanel',{\r\n            componentStats: componentsPatternBackground,\r\n            targetSection: targetSection,\r\n            type: 'background',\r\n            id: id,\r\n        });\r\n        event.stopPropagation();\r\n    }\r\n\r\n    const changeColor = eventItem => {\r\n        setBgColor(eventItem.colorRGB);\r\n    }\r\n\r\n    const setBackgroundImage = event => {\r\n        const {urlFull} = event;\r\n        setImage(urlFull);\r\n    };\r\n\r\n\r\n    const didUpdate = () => {\r\n        saveDataParent();\r\n        eventEmitter.on(`EventChangeColorBackground${id}`, changeColor);\r\n        eventEmitter.on(`EventSetBackgroundImage${id}`, setBackgroundImage);\r\n        return () => {\r\n            eventEmitter.off(`EventChangeColorBackground${id}`, changeColor);\r\n            eventEmitter.off(`EventSetBackgroundImage${id}`, setBackgroundImage);\r\n        }\r\n    }\r\n\r\n    useEffect(didUpdate);\r\n\r\n    if (props.mode === 'dev'){\r\n        return (\r\n            <Background\r\n                ref  = {boxComponent}\r\n                onDoubleClick={openBgInstruments}\r\n                data-name = {targetSection}\r\n                backgroundColor = {backgroundColor ? backgroundColor : props.background}\r\n                backgroundImage = {backgroundImage ? backgroundImage : props.backgroundImage}\r\n                width = {width}\r\n                height = {height}\r\n            >\r\n                {props.children}\r\n            </Background>\r\n        )\r\n    } else if (props.mode === 'production'){\r\n        return (\r\n            <Background\r\n                ref  = {boxComponent}\r\n                data-name = {targetSection}\r\n                backgroundColor = {props.background}\r\n                backgroundImage = {props.backgroundImage}\r\n                width = {width}\r\n                height = {height}\r\n            >\r\n                {props.children}\r\n            </Background>\r\n        )\r\n    }\r\n}\r\n\r\nexport default BackgroundComponent;","import React, {Fragment} from 'react';\r\nimport eventEmitter from '../../../EventEmitter';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport BackgroundComponent from '../components/Background';\r\nimport Loader from '../../loading/Loader';\r\n\r\nimport './MainBackground.scss';\r\n\r\n\r\nclass MainBackground extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        children: PropTypes.object.isRequired, /** @Object with name */\r\n        countComponents: PropTypes.number.isRequired, /** @Number last project */\r\n        menuActive: PropTypes.bool, /** @Bool active menu or unactive */\r\n        id: PropTypes.string.isRequired, /** @id current project */\r\n    };\r\n\r\n    state = {\r\n        targetSection: this.props.id,\r\n        editRedy: false,\r\n        component: null,\r\n        children: null,\r\n    };\r\n\r\n    changeMode = () => {\r\n        if (!this.state.editStart || this.props.id !== this.props.editComponentName) {\r\n            this.setState({\r\n                ...this.state,\r\n                editStart: true\r\n            }, () =>\r\n            eventEmitter.emit('EventModeEdit', {\r\n                ...this.state,\r\n                editStart: true,\r\n                targetSection: this.state.targetSection,\r\n            }));\r\n        }\r\n    };\r\n\r\n    refSection = null;\r\n    refSectionFunc = node => node ? this.refSection = {data: node.getBoundingClientRect(), node: node} : node;\r\n\r\n    render() {\r\n\r\n        if (this.props.mode === 'dev'){\r\n            let props = this.props.currentProjectsData.components.find(item => item.targetSection === this.props.id) || null;\r\n            let children = this.props.componentJSX.filter(item => item.targetSection === this.props.id)\r\n            \r\n            if (props)\r\n            return (\r\n                <Fragment>\r\n                    <section className = {`element${this.props.sectionNumber}`} ref={this.refSectionFunc}\r\n                    data-class = 'editable' onClick = {this.changeMode}>\r\n                        <BackgroundComponent \r\n                            mode = {this.props.mode} \r\n                            {...props} sectionNumber = {this.props.sectionNumber} \r\n                        >\r\n                            {children.map(item => item.component) || null}\r\n                        </BackgroundComponent>\r\n                        {!this.state.editStart && \r\n                            <div className = 'warningEdit'><p>Click for start edit</p></div>\r\n                        }\r\n                    </section>\r\n                </Fragment>\r\n            );\r\n        } else if (this.props.mode === 'production'){\r\n            let props = this.props.currentProjectsData.components.find(item => item.targetSection === this.props.id) || null;\r\n            let children = this.props.componentJSX.filter(item => item.targetSection === this.props.id)\r\n\r\n            if (props)\r\n            return (\r\n                <Fragment>\r\n                    <section ref={this.refSectionFunc} data-class = 'production'>\r\n                        <BackgroundComponent {...props}\r\n                            mode = {this.props.mode}\r\n                            sectionNumber = {this.props.sectionNumber} \r\n                        >\r\n                            {children.map(item => item.component) || null}\r\n                        </BackgroundComponent>\r\n                    </section>\r\n                </Fragment>\r\n            );\r\n        }\r\n        else return <Loader type = {`${this.props.mode} components`} />;\r\n    }\r\n}\r\nexport default MainBackground;","import React from 'react';\r\nimport MainBackground from './MainBackground/MainBackground';\r\n\r\n\r\nconst Section = props => {\r\n\r\n    if (props.mode === 'dev'){\r\n    const {currentProjectsData} = props.userData;\r\n    const section = currentProjectsData.sectionsProject;\r\n            return section.map((item,i) => {\r\n                return (\r\n                        <MainBackground\r\n                            key = {item}\r\n                            componentJSX = {[...props.componentJSX]}\r\n                            currentProjectsData = {{...currentProjectsData}}\r\n                            editComponentName = {props.editComponentName}\r\n                            countComponents = {props.componentJSX.length}\r\n                            menuActive = {props.menuActive}\r\n                            sizeParentBox = {props.sizeParentBox}\r\n                            id = {item}\r\n                            sectionNumber = {i}\r\n                            mode = {props.mode}\r\n                        >\r\n                            {{targetSection: props.editComponentName}}\r\n                        </MainBackground>\r\n                );\r\n            });\r\n    } else if (props.mode === 'production'){\r\n       const {section} = props;\r\n       const {currentProjectsData} = props;\r\n        return section.map((item,i) => {\r\n            return (\r\n                    <MainBackground\r\n                        key = {item}\r\n                        componentJSX = {[...props.componentsProdJSX]}\r\n                        currentProjectsData = {{...currentProjectsData}}\r\n                        editComponentName = {props.editComponentName}\r\n                        countComponents = {props.componentsProdJSX.length}\r\n                        sizeParentBox = {props.sizeParentBox}\r\n                        id = {item}\r\n                        mode = {props.mode}\r\n                    >\r\n                        {{targetSection: props.editComponentName}}\r\n                    </MainBackground>\r\n            );\r\n        });\r\n    }\r\n}\r\n\r\nexport default Section;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport eventEmitter from '../../../EventEmitter';\r\nimport styled from 'styled-components';\r\n\r\n\r\nconst InputComponent = styled.input.attrs(props => ({\r\n    style: {\r\n        zIndex: props.indexZ ? '9999' : null,\r\n        left: props.coordX ? props.coordX : '45%',\r\n        top:  props.coordY ? props.coordY : '0%',\r\n}}))`\r\n    width: ${props => props.size ? props.size + '%' : null};\r\n    height: ${props => props.size ? props.size + 20 + '%' :  null};\r\n    position: absolute;\r\n    pointer-events: none;\r\n`;\r\n\r\n\r\nclass Input extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        id: PropTypes.oneOfType([\r\n            PropTypes.string,\r\n            PropTypes.number\r\n        ]).isRequired,\r\n        targetSection: PropTypes.string.isRequired,\r\n        sizeParentBox: PropTypes.object.isRequired,\r\n    }\r\n\r\n    state = {\r\n        id: this.props.id,\r\n        istrumentsActive: false,\r\n        getSizeBool: false,\r\n        sizeParentBox: this.props.sizeParentBox,\r\n        targetSection: this.props.targetSection,\r\n        path: this.props.path,\r\n        size: this.props.size ? this.props.size : null,\r\n        shiftCoords: null,\r\n        posImage: this.props.coords.x ? {x: this.props.coords.x, y: this.props.coords.y} : null,\r\n        startDragNdrop: false,\r\n    }\r\n\r\n    openImageInstruments = event => {\r\n\r\n        const componentsPatternImage = {\r\n            id: this.state.id,\r\n            targetSection: this.state.targetSection,\r\n            type: 'image',\r\n            borderRadius: null,\r\n            opacity: 1,\r\n            zIndex: null,\r\n            image: this.state.path,\r\n            coords: {...this.state.posImage}, // x, y\r\n        }\r\n\r\n        eventEmitter.emit(`EventInstrumentPanel`,{\r\n            componentStats: componentsPatternImage,\r\n            targetSection: this.state.targetSection,\r\n            id: this.state.id,\r\n            sizeTextValue: this.state.size\r\n        });\r\n        this.setState({...this.state, istrumentsActive: true});\r\n        event.stopPropagation();\r\n    };\r\n\r\n    saveCoords = event => {\r\n        if (event.nativeEvent.which !== 1) return false;\r\n        const element = this.refInput.getBoundingClientRect();\r\n\r\n        const cords = {\r\n            left: element.left,\r\n            top: element.top,\r\n            width: element.right - element.left,\r\n            height: element.bottom - element.top\r\n        }\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            shiftCoords: {x: event.clientX - cords.left, y: event.clientY - cords.top},\r\n            startDragNdrop: !this.state.startDragNdrop ? true : false\r\n        });\r\n\r\n        event.stopPropagation();\r\n    };\r\n\r\n    checkPivotPosition = (coordX, coordY) => {\r\n\r\n        const element = this.refInput.getBoundingClientRect();\r\n        const borderTopLeft = 0;\r\n        const borderDown = 800 - element.height;\r\n        const borderRight = this.props.sizeParentBox.width - element.width;\r\n\r\n        if (coordY < borderTopLeft) coordY = borderTopLeft;\r\n        if (coordY > borderDown) coordY = borderDown;\r\n        if (coordX < borderTopLeft) coordX = borderTopLeft;\r\n        if (coordX > borderRight) coordX = borderRight;\r\n\r\n        return {x: coordX, y: coordY};\r\n    }\r\n\r\n    delta = (trans,transT) => {\r\n        return {\r\n            x: 0,\r\n            y: 0,\r\n        }\r\n    }\r\n    move = (x,y) => this.setState({...this.state, posImage: {x: x, y: y}});\r\n\r\n    moveText = event => {\r\n\r\n        if (this.state.startDragNdrop && this.state.istrumentsActive){\r\n\r\n            let xItem = event.clientX - this.props.sizeParentBox.left;\r\n            let yItem = event.clientY - this.props.sizeParentBox.top;\r\n\r\n            let coordX = xItem - this.state.shiftCoords.x + this.delta().x;\r\n            let coordY = yItem - this.state.shiftCoords.y + this.delta().y;\r\n\r\n            let coords = this.checkPivotPosition(coordX,coordY);\r\n\r\n            let convertToPercentX = coords.x * 100 / this.state.sizeParentBox.width;\r\n            let convertToPercentY = coords.y * 100 / this.state.sizeParentBox.height;\r\n\r\n            this.move(convertToPercentX.toFixed(2) + '%',\r\n                      convertToPercentY.toFixed(2) + '%');\r\n    }\r\n        event.stopPropagation();\r\n    };\r\n\r\n    stopDragNdrop = event => {\r\n        if (this.state.startDragNdrop) {\r\n            this.setState({...this.state, startDragNdrop: false})\r\n            eventEmitter.emit(`EventUpdatePosition${this.state.id}`, this.state.posImage);\r\n        }\r\n        event.stopPropagation();\r\n    };\r\n\r\n    setCurrentImage = event => {\r\n        const {urlFull} = event;\r\n        this.setState({...this.state, path: urlFull});\r\n    };\r\n\r\n    weelResizeText = event => {\r\n\r\n        if (event.shiftKey && event.deltaY === -100) {\r\n            let counter = this.state.size + 1;\r\n            counter = counter > 100 ? 100 : counter;\r\n            this.setState({...this.state,size: counter});\r\n            eventEmitter.emit('EventupdateSize', counter);\r\n        }\r\n\r\n        if (event.shiftKey && event.deltaY === 100) {\r\n            let counter = this.state.size - 1;\r\n             counter = counter <= 0 ? 0 : counter;\r\n             this.setState({...this.state,size: counter});\r\n             eventEmitter.emit('EventupdateSize', counter);\r\n            }\r\n        event.stopPropagation();\r\n    };\r\n\r\n    saveSize = event => {\r\n        const {size} = event;\r\n        if (!this.state.getSizeBool){\r\n        this.setState({\r\n            ...this.state,\r\n            getSizeBool: true,\r\n            sectionNumber: event.sectionNumber + 1,\r\n            sizeParentBox: {width: size.width, height: size.height}});\r\n        } else eventEmitter.off(`EventSaveWidth${this.state.targetSection}`,this.saveSize);\r\n    }\r\n\r\n    refInput = null;\r\n    refInputComponent = node => this.refInput = node;\r\n\r\n    render(){\r\n            return (\r\n                <InputComponent\r\n                    type = 'button'\r\n                    value = 'Input'\r\n                    ref = {this.refInputComponent}\r\n                    size = {this.state.size}\r\n                    onClick = {this.openImageInstruments}\r\n                    onMouseDown = {this.saveCoords}\r\n                    onMouseMove= {this.moveText}\r\n                    onMouseLeave = {this.stopDragNdrop}\r\n                    onMouseUp = {this.stopDragNdrop}\r\n                    onDragStart = {this.stop}\r\n                    onWheel = {this.weelResizeText}\r\n                    coordX = {this.state.posImage ? this.state.posImage.x : null}\r\n                    coordY = {this.state.posImage ? this.state.posImage.y : null}\r\n                    indexZ = {this.state.startDragNdrop}\r\n                    data-imagecomponentwrapper\r\n                />\r\n            )\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        eventEmitter.on(`EventSetCurrentImage${this.state.id}`, this.setCurrentImage);\r\n        eventEmitter.on(`EventSaveWidth${this.state.targetSection}`, this.saveSize);\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        eventEmitter.off(`EventSaveWidth${this.state.targetSection}`,this.saveSize);\r\n        eventEmitter.off(`EventSetCurrentImage${this.state.id}`, this.setCurrentImage);\r\n    }\r\n}\r\n\r\nexport default Input;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport eventEmitter from '../../../EventEmitter';\r\nimport styled from 'styled-components';\r\n\r\nconst WrapperMedia = styled.div.attrs(props => ({\r\n    style: {\r\n        zIndex: props.indexZ ? '9999' : null,\r\n        left: props.coordX ? props.coordX : '45%',\r\n        top:  props.coordY ? props.coordY : '0%',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        padding: props.mode === 'dev' ? '40px' : null\r\n}}))`\r\n    width: 30%;\r\n    height: 50%;\r\n    position: absolute;\r\n    background: ${props => props.mode === 'dev' ? `url(/img/media.svg)` : null};\r\n    border: ${props => props.mode === 'dev' ? `1px solid red` : null};\r\n    padding: 10px;\r\n`;\r\nconst Media = styled.iframe`\r\n    width: 100%;\r\n    height: 100%;\r\n    z-index: ${props => props.zIndex ? '0' : '-1'};\r\n`;\r\n\r\nclass MediaComponent extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        id: PropTypes.oneOfType([\r\n            PropTypes.string,\r\n            PropTypes.number\r\n        ]).isRequired,\r\n        targetSection: PropTypes.string.isRequired,\r\n        sizeParentBox: PropTypes.object.isRequired,\r\n        content: PropTypes.string,\r\n    }\r\n\r\n    state = {\r\n        targetSection: this.props.targetSection,\r\n        id : this.props.id,\r\n        sizeParentBox: this.props.sizeParentBox,\r\n        shiftCoords: null,\r\n        size: this.props.size ? this.props.size : 30,\r\n        posMedia: this.props.coords.x ? {x: this.props.coords.x, y: this.props.coords.y} : null,\r\n        startDragNdrop: false,\r\n        istrumentsActive: false,\r\n        drawContent: false,\r\n        content: this.props.content ? this.props.content : null\r\n    }\r\n\r\n    openMediaInstruments = event => {\r\n\r\n        const componentsPatternMedia = {\r\n            id: this.state.id,\r\n            targetSection: this.state.targetSection,\r\n            type: 'media',\r\n            zIndex: null,\r\n            content: this.state.content,\r\n            coords: {...this.state.posMedia}, // x, y\r\n        }\r\n\r\n        eventEmitter.emit('EventInstrumentPanel',{\r\n            componentStats: componentsPatternMedia,\r\n            targetSection: this.state.targetSection,\r\n            id: this.state.id,\r\n            sizeTextValue: this.state.size\r\n        });\r\n        this.setState({...this.state, istrumentsActive: true});\r\n        event.stopPropagation();\r\n    }\r\n\r\n    saveCoords = event => {\r\n        if (event.nativeEvent.which !== 1) return false;\r\n        const element = this.refMedia.getBoundingClientRect();\r\n\r\n        const cords = {\r\n            left: element.left,\r\n            top: element.top,\r\n            width: element.right - element.left,\r\n            height: element.bottom - element.top\r\n        }\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            shiftCoords: {x: event.clientX - cords.left, y: event.clientY - cords.top},\r\n            startDragNdrop: !this.state.startDragNdrop ? true : false\r\n        });\r\n\r\n        event.stopPropagation();\r\n    };\r\n\r\n    checkPivotPosition = (coordX, coordY) => {\r\n\r\n        const element = this.refMedia.getBoundingClientRect();\r\n        const borderTopLeft = 0;\r\n        const borderDown = 800 - element.height;\r\n        const borderRight = this.props.sizeParentBox.width - element.width;\r\n\r\n        if (coordY < borderTopLeft) coordY = borderTopLeft;\r\n        if (coordY > borderDown) coordY = borderDown;\r\n        if (coordX < borderTopLeft) coordX = borderTopLeft;\r\n        if (coordX > borderRight) coordX = borderRight;\r\n\r\n        return {x: coordX, y: coordY};\r\n    }\r\n\r\n    delta = (trans,transT) => {\r\n        return {\r\n            x: 0,\r\n            y: 0,\r\n        }\r\n    }\r\n    move = (x,y) => this.setState({...this.state, posMedia: {x: x, y: y}});\r\n\r\n    moveMedia = event => {\r\n\r\n        if (this.state.startDragNdrop && this.state.istrumentsActive){\r\n\r\n            let xItem = event.clientX - (this.props.sizeParentBox.left  * this.state.sectionNumber);\r\n            let yItem = event.clientY - (this.props.sizeParentBox.top * this.state.sectionNumber);\r\n\r\n            let coordX = xItem - this.state.shiftCoords.x + this.delta().x;\r\n            let coordY = yItem - this.state.shiftCoords.y + this.delta().y;\r\n\r\n            let coords = this.checkPivotPosition(coordX,coordY);\r\n\r\n            let convertToPercentX = coords.x * 100 / this.state.sizeParentBox.width;\r\n            let convertToPercentY = coords.y * 100 / this.state.sizeParentBox.height;\r\n\r\n            this.move(convertToPercentX.toFixed(2) + '%',\r\n                      convertToPercentY.toFixed(2) + '%');\r\n    }\r\n        event.stopPropagation();\r\n    };\r\n\r\n    stopDragNdrop = event => {\r\n        if (this.state.startDragNdrop) {\r\n            this.setState({...this.state, startDragNdrop: false})\r\n            eventEmitter.emit(`EventUpdatePosition${this.state.id}`, this.state.posMedia);\r\n        }\r\n        event.stopPropagation();\r\n    };\r\n\r\n    setContent = event => {\r\n        const {iframe} = event;\r\n        this.setState({...this.state, content: iframe});\r\n    };\r\n\r\n    weelResizeText = event => {\r\n\r\n        if (event.shiftKey && event.deltaY === -100) {\r\n            let counter = this.state.size + 1;\r\n            counter = counter > 100 ? 100 : counter;\r\n            this.setState({...this.state,size: counter});\r\n            eventEmitter.emit('EventupdateSize', counter);\r\n        }\r\n\r\n        if (event.shiftKey && event.deltaY === 100) {\r\n            let counter = this.state.size - 1;\r\n             counter = counter <= 0 ? 0 : counter;\r\n             this.setState({...this.state,size: counter});\r\n             eventEmitter.emit('EventupdateSize', counter);\r\n            }\r\n        event.stopPropagation();\r\n    };\r\n\r\n    saveSize = event => {\r\n        const {size} = event;\r\n        if (!this.state.getSizeBool){\r\n        this.setState({\r\n            ...this.state,\r\n            getSizeBool: true,\r\n            sectionNumber: event.sectionNumber + 1,\r\n            sizeParentBox: {width: size.width, height: size.height}});\r\n        } else eventEmitter.off(`EventSaveWidth${this.state.targetSection}`,this.saveSize);\r\n    }\r\n\r\n    refMedia = null;\r\n    refMediaComponent = node => this.refMedia = node;\r\n\r\n    render(){\r\n        const url = 'https://www.youtube.com/embed/';\r\n\r\n        if (this.props.mode === 'dev'){\r\n            return (\r\n                <WrapperMedia\r\n                    ref = {this.refMediaComponent}\r\n                    onClick={this.openMediaInstruments}\r\n                    onMouseDown = {this.saveCoords}\r\n                    onMouseMove= {this.moveMedia}\r\n                    onMouseLeave = {this.stopDragNdrop}\r\n                    onMouseUp = {this.stopDragNdrop}\r\n                    onDragStart = {this.stop}\r\n                    onWheel = {this.weelResizeText}\r\n                    indexZ = {this.state.startDragNdrop}\r\n                    coordX = {this.state.posMedia ? this.state.posMedia.x : null}\r\n                    coordY = {this.state.posMedia ? this.state.posMedia.y : null}\r\n                >\r\n                {!this.state.startDragNdrop ? \r\n                    <Media\r\n                        src= {this.state.content ? url + this.state.content : null }\r\n                        drawContent = {this.state.drawContent}\r\n                        width = {this.state.width} \r\n                        height = {this.state.height}\r\n                        zIndex = {this.state.content}\r\n                        allowfullscreen\r\n                    ></Media> : null\r\n                }\r\n                </WrapperMedia>\r\n            )\r\n        } else if (this.props.mode === 'production'){\r\n            return (\r\n                <WrapperMedia\r\n                    ref = {this.refMediaComponent}\r\n                    indexZ = {this.state.startDragNdrop}\r\n                    coordX = {this.state.posMedia ? this.state.posMedia.x : null}\r\n                    coordY = {this.state.posMedia ? this.state.posMedia.y : null}\r\n                    mode = {this.props.mode}\r\n                >\r\n                {!this.state.startDragNdrop ? \r\n                    <Media\r\n                        src= {this.state.content ? url + this.state.content : null }\r\n                        drawContent = {this.state.drawContent}\r\n                        width = {this.state.width} \r\n                        height = {this.state.height}\r\n                        zIndex = {this.state.content}\r\n                        mode = {this.props.mode}\r\n                        allowfullscreen\r\n                    ></Media> : null\r\n                }\r\n                </WrapperMedia>\r\n            )\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        eventEmitter.on(`EventSetContentMedia${this.state.id}`, this.setContent);\r\n        eventEmitter.on(`EventSaveWidth${this.state.targetSection}`, this.saveSize);\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        eventEmitter.off(`EventSaveWidth${this.state.targetSection}`,this.saveSize);\r\n        eventEmitter.off(`EventSetContentMedia${this.state.id}`, this.setContent);\r\n    }\r\n}\r\n\r\nexport default MediaComponent;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport eventEmitter from '../../../EventEmitter';\r\nimport styled from 'styled-components';\r\n\r\n\r\nconst WrapperImg = styled.div.attrs(props => ({\r\n    style: {\r\n        zIndex: props.indexZ ? '9999' : null,\r\n        left: props.coordX ? props.coordX : '45%',\r\n        top:  props.coordY ? props.coordY : '0%',\r\n}}))`\r\n    width: ${props => props.size ? props.size.w + '%' : '30%'};\r\n    height: ${props => props.size ? props.size.h + '%' : '50%'};\r\n    position: absolute;\r\n`;\r\n\r\nconst ImageStyle = styled.img`\r\n    width: 100%;\r\n    height: 100%;\r\n    opacity: ${props => props.opacity};\r\n    border-radius: ${props => props.borderRadius}px;\r\n    pointer-events: none;\r\n    position: absolute;\r\n`;\r\n\r\nclass Image extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        id: PropTypes.oneOfType([\r\n            PropTypes.string,\r\n            PropTypes.number\r\n        ]).isRequired,\r\n        targetSection: PropTypes.string.isRequired,\r\n        sizeParentBox: PropTypes.object.isRequired,\r\n    }\r\n\r\n    state = {\r\n        id: this.props.id,\r\n        istrumentsActive: false,\r\n        getSizeBool: false,\r\n        opacity: this.props.opacity || 1,\r\n        borderRadius: this.props.borderRadius || 0,\r\n        sizeParentBox: this.props.sizeParentBox,\r\n        targetSection: this.props.targetSection,\r\n        path: this.props.path,\r\n        size: this.props.size ? this.props.size : {w: 30, h: 50},\r\n        shiftCoords: null,\r\n        posImage: this.props.coords.x ? {x: this.props.coords.x, y: this.props.coords.y} : null,\r\n        startDragNdrop: false,\r\n    }\r\n\r\n    openImageInstruments = event => {\r\n\r\n        const componentsPatternImage = {\r\n            id: this.state.id,\r\n            targetSection: this.state.targetSection,\r\n            size: {...this.state.size},\r\n            type: 'image',\r\n            borderRadius: this.state.borderRadius,\r\n            opacity: this.state.opacity,\r\n            zIndex: null,\r\n            image: this.state.path,\r\n            coords: {...this.state.posImage}, // x, y\r\n        }\r\n\r\n        eventEmitter.emit(`EventInstrumentPanel`,{\r\n            componentStats: componentsPatternImage,\r\n            targetSection: this.state.targetSection,\r\n            id: this.state.id,\r\n            sizeTextValue: this.state.size\r\n        });\r\n        this.setState({...this.state, istrumentsActive: true});\r\n        event.stopPropagation();\r\n    };\r\n\r\n    saveCoords = event => {\r\n        if (event.nativeEvent.which !== 1) return false;\r\n        const element = this.refImage.getBoundingClientRect();\r\n\r\n        const cords = {\r\n            left: element.left,\r\n            top: element.top,\r\n            width: element.right - element.left,\r\n            height: element.bottom - element.top\r\n        }\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            shiftCoords: {x: event.clientX - cords.left, y: event.clientY - cords.top},\r\n            startDragNdrop: !this.state.startDragNdrop ? true : false\r\n        });\r\n\r\n        event.stopPropagation();\r\n    };\r\n\r\n    checkPivotPosition = (coordX, coordY) => {\r\n\r\n        const element = this.refImage.getBoundingClientRect();\r\n        const borderTopLeft = 0;\r\n        const borderDown = 800 - element.height;\r\n        const borderRight = this.props.sizeParentBox.width - element.width;\r\n\r\n        if (coordY < borderTopLeft) coordY = borderTopLeft;\r\n        if (coordY > borderDown) coordY = borderDown;\r\n        if (coordX < borderTopLeft) coordX = borderTopLeft;\r\n        if (coordX > borderRight) coordX = borderRight;\r\n\r\n        return {x: coordX, y: coordY};\r\n    }\r\n\r\n    delta = (trans,transT) => {\r\n        return {\r\n            x: 0,\r\n            y: 0,\r\n        }\r\n    }\r\n    move = (x,y) => this.setState({...this.state, posImage: {x: x, y: y}});\r\n\r\n    moveText = event => {\r\n\r\n        if (this.state.startDragNdrop && this.state.istrumentsActive){\r\n\r\n            let xItem = event.clientX - (this.props.sizeParentBox.left  * this.state.sectionNumber);\r\n            let yItem = event.clientY - (this.props.sizeParentBox.top * this.state.sectionNumber);\r\n\r\n            let coordX = xItem - this.state.shiftCoords.x + this.delta().x;\r\n            let coordY = yItem - this.state.shiftCoords.y + this.delta().y;\r\n\r\n            let coords = this.checkPivotPosition(coordX,coordY);\r\n\r\n            let convertToPercentX = coords.x * 100 / this.state.sizeParentBox.width;\r\n            let convertToPercentY = coords.y * 100 / this.state.sizeParentBox.height;\r\n\r\n            this.move(convertToPercentX.toFixed(2) + '%',\r\n                      convertToPercentY.toFixed(2) + '%');\r\n    }\r\n        event.stopPropagation();\r\n    };\r\n\r\n    stopDragNdrop = event => {\r\n        if (this.state.startDragNdrop) {\r\n            this.setState({...this.state, startDragNdrop: false})\r\n            eventEmitter.emit(`EventUpdatePosition${this.state.id}`, this.state.posImage);\r\n        }\r\n        event.stopPropagation();\r\n    };\r\n\r\n    setCurrentImage = event => {\r\n        const {urlFull} = event;\r\n        this.setState({...this.state, path: urlFull});\r\n    };\r\n\r\n    setWidth = eventItem => {\r\n        const {width} = eventItem;\r\n        this.setState({...this.state, \r\n            size: {\r\n                ...this.state.size,\r\n                w: width,\r\n            }\r\n        });\r\n    }\r\n\r\n    setHeight = eventItem => {\r\n        const {height} = eventItem;\r\n        this.setState({...this.state, \r\n            size: {\r\n                ...this.state.size,\r\n                h: height,\r\n            }\r\n        });\r\n    }\r\n\r\n    weelResizeText = event => {\r\n\r\n        if (event.shiftKey && event.deltaY === -100) {\r\n            let counter = this.state.size + 1;\r\n            counter = counter > 100 ? 100 : counter;\r\n            this.setState({...this.state,size: counter});\r\n            eventEmitter.emit(`EventupdateSize${this.state.id}`, counter);\r\n        }\r\n\r\n        if (event.shiftKey && event.deltaY === 100) {\r\n            let counter = this.state.size - 1;\r\n             counter = counter <= 0 ? 0 : counter;\r\n             this.setState({...this.state,size: counter});\r\n             eventEmitter.emit(`EventupdateSize${this.state.id}`, counter);\r\n            }\r\n        event.stopPropagation();\r\n    };\r\n\r\n    saveSize = event => {\r\n        const {size} = event;\r\n        if (!this.state.getSizeBool){\r\n        this.setState({\r\n            ...this.state,\r\n            getSizeBool: true,\r\n            sectionNumber: event.sectionNumber + 1,\r\n            sizeParentBox: {width: size.width, height: size.height}});\r\n        } else eventEmitter.off(`EventSaveWidth${this.state.targetSection}`,this.saveSize);\r\n    }\r\n\r\n    changeSizeImage = eventItem => {\r\n        this.setState({...this.state, size: eventItem.size});\r\n    };\r\n\r\n    setBorderRadius = eventItem => {\r\n\r\n    let radius = eventItem.borderRadius > 200 ? 200 : eventItem.borderRadius;\r\n    radius = eventItem.borderDown < 0 ? 0 : eventItem.borderRadius;\r\n        this.setState({\r\n            ...this.state,\r\n            borderRadius: radius\r\n        });\r\n    };\r\n\r\n    setOpacity = eventItem => {\r\n        let opacity = eventItem.opacity > 1 ? 1 : eventItem.opacity;\r\n        opacity = eventItem.opacity < 0 ? 0 : eventItem.opacity;\r\n            this.setState({\r\n                ...this.state,\r\n                opacity: opacity\r\n            });\r\n    }\r\n \r\n    refImage = null;\r\n    refImageComponent = node => this.refImage = node;\r\n\r\n    render(){\r\n\r\n        if (this.props.mode === 'dev'){\r\n            return (\r\n                <WrapperImg\r\n                ref = {this.refImageComponent}\r\n                size = {this.state.size}\r\n                onClick = {this.openImageInstruments}\r\n                onMouseDown = {this.saveCoords}\r\n                onMouseMove= {this.moveText}\r\n                onMouseLeave = {this.stopDragNdrop}\r\n                onMouseUp = {this.stopDragNdrop}\r\n                onDragStart = {this.stop}\r\n                onWheel = {this.weelResizeText}\r\n                coordX = {this.state.posImage ? this.state.posImage.x : null}\r\n                coordY = {this.state.posImage ? this.state.posImage.y : null}\r\n                indexZ = {this.state.startDragNdrop}\r\n                data-imagecomponentwrapper\r\n                >\r\n                    <ImageStyle\r\n                        data-imagecomponent\r\n                        borderRadius = {this.state.borderRadius}\r\n                        opacity = {this.state.opacity}\r\n                        src = {this.state.path}\r\n                        alt = 'img'\r\n                    />\r\n                </WrapperImg>\r\n            )\r\n        } else if (this.props.mode === 'production'){\r\n            return (\r\n                <WrapperImg\r\n                ref = {this.refImageComponent}\r\n                size = {this.state.size}\r\n                coordX = {this.state.posImage ? this.state.posImage.x : null}\r\n                coordY = {this.state.posImage ? this.state.posImage.y : null}\r\n                indexZ = {this.state.startDragNdrop}\r\n                >\r\n                    <ImageStyle\r\n                        borderRadius = {this.state.borderRadius}\r\n                        opacity = {this.state.opacity}\r\n                        src = {this.state.path}\r\n                        alt = 'img'\r\n                    />\r\n                </WrapperImg>\r\n            )\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        eventEmitter.on(`EventSetCurrentImage${this.state.id}`, this.setCurrentImage);\r\n        eventEmitter.on(`EventChangeSize${this.state.id}`, this.changeSizeImage);\r\n        eventEmitter.on(`EventSetOpacity${this.state.id}`, this.setOpacity);\r\n        eventEmitter.on(`EventSetBorderRadius${this.state.id}`,this.setBorderRadius);\r\n        eventEmitter.on(`EventSaveWidth${this.state.targetSection}`, this.saveSize);\r\n        eventEmitter.on(`EventSetWidth${this.state.id}`, this.setWidth);\r\n        eventEmitter.on(`EventSetHeight${this.state.id}`, this.setHeight);\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        eventEmitter.off(`EventSaveWidth${this.state.targetSection}`,this.saveSize);\r\n        eventEmitter.off(`EventChangeSize${this.state.id}`, this.changeSizeImage);\r\n        eventEmitter.off(`EventSetOpacity${this.state.id}`, this.setOpacity);\r\n        eventEmitter.off(`EventSetBorderRadius${this.state.id}`,this.setBorderRadius);\r\n        eventEmitter.off(`EventSetCurrentImage${this.state.id}`, this.setCurrentImage);\r\n        eventEmitter.off(`EventSetWidth${this.state.id}`, this.setWidth);\r\n        eventEmitter.off(`EventSetHeight${this.state.id}`, this.setHeight);\r\n    }\r\n}\r\n\r\nexport default Image;","\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport eventEmitter from '../../../EventEmitter';\r\nimport styled from 'styled-components';\r\nimport './components.scss';\r\n\r\nconst WrapperText = styled.div.attrs(props => ({\r\n    style: {\r\n        zIndex: props.indexZ ? '9999' : null,\r\n        left: props.coordX ? props.coordX : '50%',\r\n        top:  props.coordY,\r\n}}))`\r\n    position: absolute;\r\n    font-size: ${props => props.size ? props.size : '120px'};\r\n    color: ${props => props.textColor};\r\n    text-align: center;\r\n    margin: 0;\r\n    word-break: break-all;\r\n`;\r\n\r\nconst TextStyle = styled.p`\r\n    width: 100%;\r\n    height: 100%;\r\n    font-family: ${props => props.font};\r\n    text-align: center;\r\n    margin: 0;\r\n    -moz-user-select: none;\r\n    -khtml-user-select: none;\r\n    user-select: none;\r\n`;\r\n\r\nclass TextComponent extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        id: PropTypes.oneOfType([\r\n            PropTypes.string,\r\n            PropTypes.number\r\n        ]).isRequired,\r\n        targetSection: PropTypes.string.isRequired,\r\n        sizeParentBox: PropTypes.object.isRequired,\r\n        children: PropTypes.string,\r\n        mode: PropTypes.string.isRequired,\r\n    }\r\n\r\n    state = {\r\n        id: this.props.id,\r\n        istrumentsActive: false,\r\n        isHaveSize: false,\r\n        parent: this.props.sizeParentBox,\r\n        targetSection: this.props.targetSection,\r\n        colorText: this.props.color,\r\n        sizeText: this.props.fontSize || this.props.size,\r\n        shiftCoords: null,\r\n        position: this.props.coords,\r\n        font: this.props.font ? this.props.font : 'Arial',\r\n        startDragNdrop: false,\r\n        contentText: this.props.children ? this.props.children : null,\r\n        sectionNumber: 0,\r\n        getSizeBool: false\r\n    }\r\n\r\n    openTitleInstruments = event => {\r\n\r\n         const componentsPatternText = {\r\n            id: this.state.id,\r\n            targetSection: this.state.targetSection,\r\n            type: 'text',\r\n            font: this.state.font,\r\n            color: this.state.colorText,\r\n            fontSize: this.state.sizeText,\r\n            content: this.state.contentText,\r\n            coords: {...this.state.posText}, // x, y\r\n        };\r\n        eventEmitter.emit(`EventInstrumentPanel`,{\r\n                type: 'text',\r\n                targetSection: this.state.targetSection,\r\n                id: this.state.id,\r\n                componentStats: componentsPatternText,\r\n                sizeTextValue: this.state.sizeText\r\n        });\r\n        this.setState({...this.state, istrumentsActive: true});\r\n        event.stopPropagation();\r\n    }\r\n\r\n    changeColorText = colorRGB => {\r\n        if (typeof colorRGB === 'string')\r\n            this.setState({\r\n                ...this.state,\r\n                colorText: colorRGB\r\n            });\r\n    };\r\n\r\n    changeSizeText = eventSize => {\r\n        this.setState({...this.state, sizeText: eventSize.size});\r\n    };\r\n    saveSize = event => {\r\n        const {size} = event;\r\n        if (!this.state.getSizeBool){\r\n        this.setState({\r\n            ...this.state,\r\n            getSizeBool: true,\r\n            sectionNumber: event.sectionNumber,\r\n            parent: {width: size.width, height: size.height}});\r\n        } else eventEmitter.off(`EventSaveWidth${this.state.targetSection}`,this.saveSize);\r\n    }\r\n\r\n    changeContentText = eventContent => {\r\n        let booldContent = eventContent.content || eventContent.content === '';\r\n        if (booldContent)\r\n            this.setState({\r\n                ...this.state,\r\n                contentText: eventContent.content\r\n            });\r\n    };\r\n\r\n    saveCoords = event => {\r\n        if (event.nativeEvent.which !== 1) return false;\r\n        const element = this.refText.getBoundingClientRect();\r\n\r\n        const cords = {\r\n            left: element.left,\r\n            top: element.top,\r\n            width: element.right - element.left,\r\n            height: element.bottom - element.top\r\n        }\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            shiftCoords: {x: event.clientX - cords.left, y: event.clientY - cords.top},\r\n            startDragNdrop: !this.state.startDragNdrop ? true : false\r\n        });\r\n\r\n        event.stopPropagation();\r\n    };\r\n\r\n    setFont = eventItem => {\r\n        this.setState({\r\n            ...this.state,\r\n            font: eventItem.font\r\n        });\r\n    };\r\n\r\n    checkPivotPosition = (coordX, coordY) => {\r\n\r\n        const element = this.refText.getBoundingClientRect();\r\n        const borderTopLeft = 0;\r\n        const borderDown = 800 - element.height;\r\n        const borderRight = this.props.sizeParentBox.width - element.width;\r\n\r\n        if (coordY < borderTopLeft) coordY = borderTopLeft;\r\n        if (coordY > borderDown) coordY = borderDown;\r\n        if (coordX < borderTopLeft) coordX = borderTopLeft;\r\n        if (coordX > borderRight) coordX = borderRight;\r\n\r\n        return {x: coordX, y: coordY};\r\n    }\r\n\r\n    delta = (trans,transT) => {\r\n        return {\r\n            x: 0,\r\n            y: 0,\r\n        }\r\n    }\r\n    move = (x,y) => this.setState({...this.state, position: {x: x, y: y}});\r\n\r\n    moveText = event => {\r\n\r\n        if (this.state.startDragNdrop && this.state.istrumentsActive){\r\n\r\n \r\n            let sectionNum = this.state.sectionNumber === 0 ? 1 : this.state.sectionNumber;\r\n            let xItem = event.clientX - (this.props.sizeParentBox.left  * sectionNum);\r\n            let yItem = event.clientY - (this.props.sizeParentBox.top * sectionNum);\r\n\r\n            let coordX = xItem - this.state.shiftCoords.x + this.delta().x;\r\n            let coordY = yItem - this.state.shiftCoords.y + this.delta().y;\r\n\r\n            let coords = this.checkPivotPosition(coordX,coordY);\r\n\r\n            let convertToPercentX = coords.x * 100 / this.state.parent.width;\r\n            let convertToPercentY = coords.y * 100 / this.state.parent.height;\r\n\r\n            this.move(convertToPercentX.toFixed(2) + '%',\r\n                      convertToPercentY.toFixed(2) + '%');\r\n    }\r\n        event.stopPropagation();\r\n    };\r\n\r\n    stopDragNdrop = event => {\r\n        if (this.state.startDragNdrop) {\r\n            this.setState({...this.state, startDragNdrop: false})\r\n            eventEmitter.emit(`EventUpdatePosition${this.state.id}`, this.state.position);\r\n        }\r\n        event.stopPropagation();\r\n    };\r\n\r\n    weelResizeText = event => {\r\n\r\n        if (event.shiftKey && event.deltaY === -100) {\r\n            let counter = this.state.sizeText + 1;\r\n            counter = counter > 200 ? 200 : counter;\r\n            this.setState({...this.state,sizeText: counter});\r\n            eventEmitter.emit(`EventupdateSize${this.state.id}`, counter);\r\n        }\r\n\r\n        if (event.shiftKey && event.deltaY === 100) {\r\n            let counter = this.state.sizeText - 1;\r\n             counter = counter <= 10 ? 10 : counter;\r\n             this.setState({...this.state,sizeText: counter});\r\n             eventEmitter.emit(`EventupdateSize${this.state.id}`, counter);\r\n            }\r\n        event.stopPropagation();\r\n    };\r\n\r\n    refText = null;\r\n    refTextComponent = node => this.refText = node;\r\n\r\n\r\n    render(){\r\n\r\n        if (this.props.mode === 'dev'){\r\n            return (\r\n                <WrapperText\r\n                    ref  = {this.refTextComponent}\r\n                    onClick={this.openTitleInstruments}\r\n                    textColor = {this.state.colorText ? this.state.colorText : 'red'}\r\n                    size = {this.state.sizeText ? this.state.sizeText + 'px' : '120px'}\r\n                    onMouseDown = {this.saveCoords}\r\n                    onMouseMove= {this.moveText}\r\n                    onMouseLeave = {this.stopDragNdrop}\r\n                    onMouseUp = {this.stopDragNdrop}\r\n                    onWheel = {this.weelResizeText}\r\n                    coordX = {this.state.position ? this.state.position.x : null}\r\n                    coordY = {this.state.position ? this.state.position.y : null}\r\n                    indexZ = {this.state.startDragNdrop}\r\n                    data-textcomponent\r\n                >\r\n                    <TextStyle font = {this.state.font}>{this.state.contentText}</TextStyle>\r\n                </WrapperText>\r\n            ) \r\n        } else if (this.props.mode === 'production'){\r\n            return (\r\n                <WrapperText\r\n                    ref  = {this.refTextComponent}\r\n                    textColor = {this.state.colorText ? this.state.colorText : 'red'}\r\n                    size = {this.state.sizeText ? this.state.sizeText + 'px' : '120px'}\r\n                    coordX = {this.state.position ? this.state.position.x : null}\r\n                    coordY = {this.state.position ? this.state.position.y : null}\r\n                    indexZ = {this.state.startDragNdrop}\r\n                >\r\n                    <TextStyle font = {this.state.font}>{this.state.contentText}</TextStyle>\r\n                </WrapperText>\r\n            )\r\n        }\r\n\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        eventEmitter.on(`EventChangeColorText${this.state.id}`, this.changeColorText);\r\n        eventEmitter.on(`EventSetFont${this.state.id}`, this.setFont);\r\n        eventEmitter.on(`EventChangeSize${this.state.id}`, this.changeSizeText);\r\n        eventEmitter.on(`EventChangeContentText${this.state.id}`, this.changeContentText);\r\n        eventEmitter.on(`EventSaveWidth${this.state.targetSection}`,this.saveSize);\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        eventEmitter.off(`EventChangeColorText${this.state.id}`, this.changeColorText);\r\n        eventEmitter.off(`EventSetFont${this.state.id}`, this.setFont);\r\n        eventEmitter.off(`EventChangeSize${this.state.id}`, this.changeSizeText);\r\n        eventEmitter.off(`EventChangeContentText${this.state.id}`, this.changeContentText);\r\n        eventEmitter.off(`EventSaveWidth${this.state.targetSection}`,this.saveSize);\r\n    }\r\n}\r\n\r\nexport default TextComponent;","import React from 'react';\r\n\r\nimport Input from '../buildComponents/components/Input';\r\nimport Media from '../buildComponents/components/Media';\r\nimport Image from '../buildComponents/components/Image';\r\nimport TextComponent from '../buildComponents/components/Text';\r\nimport BackgroundComponent from '../buildComponents/components/Background';\r\n\r\nconst BuilderComponents = props => {\r\n\r\n    if (props.type === 'text')\r\n        return <TextComponent\r\n                    key = {`text${props.id}`}\r\n                    targetSection = {props.targetSection}\r\n                    sizeParentBox = {{...props.sizeParentBox}}\r\n                    id = {props.id}\r\n                    size = {props.size ? props.size : props.fontSize}\r\n                    color = {props.color}\r\n                    opacity = {props.opacity}\r\n                    coords = {{...props.coords}}\r\n                    font = {props.font}\r\n                    mode = {props.mode}\r\n                >\r\n                    {props.content}\r\n                </TextComponent>\r\n\r\n    if (props.type === 'background')\r\n        return <BackgroundComponent\r\n                    targetSection = {props.targetSection}\r\n                    color = {props.color}\r\n                    width = {props.width}\r\n                    height = {props.height}\r\n                    size = {props.size}\r\n                    id = {props.id}\r\n                    key = {`bg${props.id}`}\r\n                    mode = {props.mode}\r\n                />;\r\n\r\n    if (props.type === 'image'){\r\n        return <Image\r\n                    targetSection = {props.targetSection}\r\n                    borderRadius = {props.borderRadius || 0}\r\n                    opacity = {props.opacity}\r\n                    size = {props.size ? props.size : {w: 30, h: 50}}\r\n                    path = {props.path ? props.path : props.image}\r\n                    coords = {{...props.coords}}\r\n                    sizeParentBox = {{...props.sizeParentBox}}\r\n                    id = {props.id}\r\n                    key = {`image${props.id}`}\r\n                    mode = {props.mode}\r\n                />\r\n    }\r\n\r\n    if (props.type === 'media')\r\n        return <Media\r\n                    key = {`media${props.id}`}\r\n                    id = {props.id}\r\n                    content = {props.content}\r\n                    targetSection = {props.targetSection}\r\n                    sizeParentBox = {{...props.sizeParentBox}}\r\n                    path = {props.path ? props.path : props.content}\r\n                    coords = {{...props.coords}}\r\n                    mode = {props.mode}\r\n                />\r\n        if (props.type === 'input')\r\n            return <Input\r\n                        targetSection = {props.targetSection}\r\n                        size = {props.size ? props.size : props.fontSize}\r\n                        path = {props.path ? props.path : props.image}\r\n                        coords = {{...props.coords}}\r\n                        sizeParentBox = {{...props.sizeParentBox}}\r\n                        id = {props.id}\r\n                        key = {`input${props.id}`}\r\n                        mode = {props.mode}\r\n                    />\r\n};\r\n\r\nexport default BuilderComponents;","import React,{Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport {Redirect} from 'react-router-dom';\r\nimport {loadCurrentProjectAction, exitProjectAction} from '../../redux/actions';\r\n\r\nimport Section from '../../components/buildComponents/section';\r\nimport BuilderComponents from '../../components/componentsBuilder/BuilderComponents';\r\nimport Loader from '../../components/loading/Loader';\r\nimport Header from '../../components/header/Header';\r\nimport withFirebase from '../../components/firebaseHOC';\r\nimport {connect} from 'react-redux';\r\n\r\nclass Production extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        firebase: PropTypes.object,\r\n    }\r\n\r\n    state = {\r\n        idProject: parseInt(this.props.match.params.param),\r\n        mode: 'production',\r\n        projectEmpty: false,\r\n        isLoadComponents: true,\r\n        componentsProdJSX: []\r\n    }\r\n\r\n    makeProduction = array => {\r\n\r\n        let {componentsProdJSX} = this.state;\r\n        let _components = [];\r\n\r\n        array.forEach(item => {\r\n\r\n                let sizeParentBox = {\r\n                    width: this.prodRef.data.width,\r\n                    height: this.prodRef.data.height,\r\n                    top: this.prodRef.data.top,\r\n                    left: this.prodRef.data.left,\r\n                }\r\n                let component =\r\n                    <BuilderComponents\r\n                        sizeParentBox = {{...sizeParentBox}}\r\n                        mode = {this.state.mode}\r\n                        {...item}\r\n                        key = {`${item.type}${item.id}`}\r\n                    />;\r\n\r\n                const patternJSX = {\r\n                    id: item.id,\r\n                    targetSection: item.targetSection,\r\n                    component: component\r\n                };\r\n                _components.push(patternJSX);\r\n        });\r\n            this.setState({\r\n                ...this.state,\r\n                isLoadComponents: false,\r\n                componentsProdJSX: [...componentsProdJSX, ..._components],\r\n            });\r\n    };\r\n\r\n    prodRef = null;\r\n    mainProductionRef  = node => node ?\r\n    this.prodRef = {data: node.getBoundingClientRect(), node: node} : node;\r\n\r\n    render(){\r\n\r\n        const {userData} = this.props;\r\n        const {currentProjectsData} = userData;\r\n        const section = currentProjectsData.sectionsProject;\r\n\r\n        if (this.state.projectEmpty) return <Redirect to = '/Cabinet' />\r\n\r\n        if (userData.active && currentProjectsData.loadProject){\r\n            return (\r\n            <Fragment>\r\n                <Header key = 'Header' title = \"Constructor\" />\r\n                <div\r\n                    ref = {this.mainProductionRef}\r\n                    className = 'Production'\r\n                    key = 'Production'\r\n                    >\r\n                    {!this.state.isLoadComponents ?\r\n                        section.length &&\r\n                            <Section \r\n                                key = 'section'\r\n                                mode = {this.state.mode}\r\n                                currentProjectsData = {currentProjectsData}\r\n                                componentsProdJSX = {this.state.componentsProdJSX}\r\n                                section = {section}\r\n                            />\r\n                        : null\r\n                    }\r\n                </div>\r\n            </Fragment>\r\n            )\r\n        } else if (!this.props.firebase.getCurrentUser()) return <Redirect to = '/' />\r\n        else return <Loader  key = 'Loader' path = '/img/loading.gif' type = 'production' />\r\n    }\r\n\r\n    componentDidUpdate = (prevProps, prevState) => {\r\n        let {userData} = this.props;\r\n        let {currentProjectsData} = userData;\r\n\r\n        if (userData.active && !currentProjectsData.loadProject) {\r\n            const current =  userData.projects.find(item => item.id === this.state.idProject)\r\n            if (current)\r\n            this.props.dispatch(loadCurrentProjectAction({\r\n                id: current.id,\r\n                typeProject: current.type,\r\n                sectionsProject: [...current.sectionsProject],\r\n                components: [...current.components]\r\n            }))\r\n            else this.setState({...this.state, projectEmpty: true});\r\n        }\r\n\r\n        if (this.state.isLoadComponents && currentProjectsData.loadProject) \r\n            this.makeProduction(currentProjectsData.components);\r\n\r\n    }\r\n\r\n\r\n    componentDidMount = () => {\r\n        let {userData} = this.props;\r\n        let {currentProjectsData} = userData;\r\n\r\n        if (userData.active && !currentProjectsData.loadProject) {\r\n            const current =  userData.projects.find(item => item.id === this.state.idProject)\r\n            this.props.dispatch(loadCurrentProjectAction({\r\n                id: current.id,\r\n                sectionsProject: [...current.sectionsProject],\r\n                typeProject: current.type,\r\n                components: [...current.components]\r\n            }));\r\n        };\r\n\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n\r\n        let {userData} = this.props;\r\n        if (userData.active)  this.props.dispatch(exitProjectAction(true));\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        userData: {\r\n            active: state.cabinet.active,\r\n            idUser: state.cabinet.idUser,\r\n            projects: [...state.cabinet.projects],\r\n           currentProjectsData: {...state.builder}\r\n        },\r\n    }\r\n};\r\n\r\n  export default connect(mapStateToProps)(withFirebase(Production));","import React, {Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nimport withFirebase from '../../components/firebaseHOC';\r\nimport Header from '../../components/header/Header';\r\n\r\nimport './about.scss';\r\n\r\nclass About extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        config: PropTypes.object.isRequired, /** @Config app */\r\n        firebase: PropTypes.object.isRequired, /** @firebase class for use firebase functions */\r\n        history: PropTypes.object, /** @Router HTML5 history */\r\n        location: PropTypes.object, /** @Router */\r\n        match: PropTypes.object, /** @Router */\r\n    }\r\n\r\n    state = {\r\n        config: this.props.config\r\n    };\r\n\r\n    render(){\r\n        if (this.props.firebase.getCurrentUser()) {\r\n            const { config } = this.state;\r\n            return (\r\n                <Fragment>\r\n                    <Header title = {config.title} />\r\n                    <section className = 'About'>\r\n                        <div className = 'container'>\r\n                            <div className = 'col-12'>\r\n                                <div className = 'information'>\r\n                                <img alt = 'img' className = 'logoAbout' src = {process.env.PUBLIC_URL + '/img/about.jpg'}/>\r\n                                    <p className ='developer'><span>Developer:</span> {config.about.developer}</p>\r\n                                    <p className = 'year'><span>Year:</span> {config.about.year}</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </section>\r\n                </Fragment>\r\n            )\r\n        } else return <Redirect to = { '/'} />\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default withFirebase(About);","import {errorAction, loadUpdateCurrentProject} from '../actions';\r\n\r\nconst updateMiddleware = (item) => async (dispatch,getState, {firebase}) => {\r\n    let newProjects = item.projects.map(project => {\r\n        if (project.id === item.idProject) {\r\n            project.components = [...item.components]\r\n            project.sectionsProject = [...item.sectionsProject]\r\n        }\r\n        return project;\r\n    });\r\n    await firebase.db.collection(\"users\").doc(item.uid).update({\r\n        'projects': JSON.parse(JSON.stringify(newProjects))\r\n    })\r\n    .then(response => {\r\n        let project = item.projects.find(itemdb => itemdb.id === item.idProject);\r\n        dispatch(loadUpdateCurrentProject({\r\n            components: [...project.components],\r\n            idProject: item.idProject,\r\n            sectionsProject: item.sectionsProject,\r\n        }))\r\n    })\r\n    .catch(error => dispatch(errorAction(error.message)));\r\n};\r\n\r\nexport default updateMiddleware;","import React,{useState} from 'react';\r\nimport eventEmitter from '../../EventEmitter';\r\n\r\nimport './Viewer.scss';\r\n\r\nfunction Viewer(props){\r\n\r\n    let [mode] = useState(props.mode);\r\n    let [path] = useState(props.path);\r\n\r\n    const closeViewer = event => {\r\n        eventEmitter.emit(\"EventView\", { action: false, target: null});\r\n        event.stopPropagation();\r\n    }\r\n\r\n    return (\r\n        \r\n        <div onClick = {closeViewer} className = 'Viewer'>\r\n            {mode === 'image' ? <img src = {path} alt = 'fullImage' /> \r\n            : \r\n            <iframe \r\n            src= {`https://www.youtube.com/embed/${props.iframe}`}\r\n            title = 'youtube'\r\n            frameBorder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" \r\n            allowFullScreen>\r\n            </iframe>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Viewer;","import React,{Fragment} from 'react';\r\n\r\nconst MediaInstruments = props => {\r\n\r\n    // let {content} = props.componentStats;\r\n    let {fontSize} = props.componentStats;\r\n    let {coords} = props.componentStats;\r\n\r\n    return (\r\n        <Fragment>\r\n            <p className = 'titleInstument'>Position: </p>\r\n            <span className = 'textCoordsPanel'>\r\n            {coords.x ?\r\n                coords.x + ' / ' + coords.y : ' drop for active'}\r\n            </span>\r\n            <p className = 'titleInstument'>Size: </p>\r\n            <input \r\n                onChange = {props.cbSetSize}\r\n                type=\"number\"\r\n                min = '10' max = '200'\r\n                defaultValue = {fontSize ? fontSize : 120}\r\n            />\r\n            <p className = 'titleInstument'>Content: </p>\r\n            <input \r\n                onClick = {props.cbSearch}\r\n                className = 'ImageSearchButton'\r\n                type=\"button\"\r\n                value = 'search media'\r\n            />\r\n            <input \r\n                onClick = {props.cbDelete}\r\n                className = 'instrumentPanel__deleteComponentButton'\r\n                type=\"button\"\r\n                value = 'delete'\r\n            />\r\n        </Fragment>\r\n    )\r\n};\r\n\r\nexport default MediaInstruments;","import React, {Fragment} from 'react';\r\n\r\nconst ImageInstruments = props => {\r\n\r\n    let {coords} = props.componentStats;\r\n    let {size} = props.componentStats;\r\n    let fileRef = React.createRef();\r\n    return (\r\n        <Fragment>\r\n        <p className = 'titleInstument'>Position: </p>\r\n        <span className = 'textCoordsPanel'>\r\n        {coords.x ?\r\n            coords.x + ' / ' + coords.y : ' drop for active'}\r\n        </span>\r\n        <p className = 'titleInstument'>Size (%):</p>\r\n        <div className = 'panel__sizes'>\r\n            <input\r\n                className = 'button_switch'\r\n                onChange = {props.cbSetWidth}\r\n                type=\"number\"\r\n                min = '10' max = '100'\r\n                value = {size.w ? size.w : 30}\r\n            />\r\n            <input \r\n                className = 'button_switch'\r\n                onChange = {props.cbSetHeight}\r\n                type=\"number\"\r\n                min = '10' max = '100'\r\n                value = {size.h ? size.h : 30}\r\n            />\r\n        </div>\r\n        <p className = 'titleInstument'>Border radius: </p>\r\n            <input\r\n                onChange = {props.cbSetBorderRadius}\r\n                className = 'button_switch radius'\r\n                type=\"number\"\r\n                value = {props.componentStats.borderRadius ?\r\n                            props.componentStats.borderRadius : 10\r\n                        }\r\n                min = '10' max = '200'\r\n            />\r\n            <p className = 'titleInstument titleInstrument__opacity'>Opacity: </p>\r\n            <input \r\n                onChange = {props.cbSetOpacity}\r\n                className = 'ImageSearchButton'\r\n                type=\"number\"\r\n                value = {props.componentStats.opacity ?\r\n                    props.componentStats.opacity : 1\r\n                }\r\n                step = '0.1'\r\n                min = '0' max = '1'\r\n            />\r\n            <p className = 'titleInstument titleInstrument__opacity'>Loader: </p>\r\n            <div className = 'fileLoader'>\r\n            <input\r\n                ref = {fileRef}\r\n                className = 'fileInput'\r\n                onChange = {props.cbLoadFile}\r\n                accept=\"image/*\"\r\n                type=\"file\"\r\n            />\r\n                <input\r\n                        // onClick = {simulateClickFile}\r\n                        className = 'ImageSearchButton'\r\n                        type = 'button'\r\n                        value = 'loading file'\r\n                />\r\n            </div>\r\n            <input \r\n                onClick = {props.cbSearch}\r\n                className = 'ImageSearchButton'\r\n                type=\"button\"\r\n                value = 'search image'\r\n            />\r\n            <input \r\n                onClick = {props.cbDelete}\r\n                className = 'instrumentPanel__deleteComponentButton'\r\n                type=\"button\"\r\n                value = 'delete'\r\n            />\r\n        </Fragment>\r\n    )\r\n\r\n}\r\n\r\nexport default ImageInstruments;","import React, {Fragment,useState} from 'react';\r\nimport {SketchPicker} from 'react-color';\r\n\r\nconst BackgroundInstruments = props => {\r\n\r\n    const {componentsStats} = useState(props.componentStats);\r\n    let color = null;\r\n    if (typeof componentsStats === 'object' &&\r\n        componentsStats.hasOwnProperty('color'))\r\n        color = componentsStats.color;\r\n\r\n    return (\r\n        <Fragment>\r\n        <p className = 'titleInstument'>Color: </p>\r\n        <input\r\n            onClick = {props.cbSetColor}\r\n            className = 'button_switch Color'\r\n            type = 'button'\r\n            value = 'color pick'\r\n        />\r\n            { props.colorPickerActive ?\r\n                <SketchPicker\r\n                    onChangeComplete={props.cbHandleChangeComplete}\r\n                    color = {color ? color : 'red'}\r\n                />\r\n                : null\r\n            }\r\n            <input \r\n                onClick = {props.cbSearch}\r\n                className = 'ImageSearchButton'\r\n                type = 'button'\r\n                value = 'background-image'\r\n            />\r\n        </Fragment>\r\n    )\r\n\r\n}\r\n\r\nexport default BackgroundInstruments;","import React,{Fragment} from 'react';\r\nimport {SketchPicker} from 'react-color';\r\n\r\nconst TextInstruments = props => {\r\n\r\n        let {colorPickerActive} = props.instrumentPanel;\r\n        let {content} = props.componentStats;\r\n        let {fontSize} = props.componentStats;\r\n        let {coords} = props.componentStats;\r\n        let {color} = props.componentStats;\r\n        let _content = content !== '' ? 'Title' : '';\r\n\r\n        return (\r\n            <Fragment>\r\n            <p className = 'titleInstument'>Position: </p>\r\n            <span className = 'textCoordsPanel'>\r\n            {coords.x ?\r\n                coords.x + ' / ' + coords.y : ' drop for active'}\r\n            </span>\r\n            <p className = 'titleInstument'>Color: </p>\r\n            <input \r\n                onClick = {props.cbSetColor}\r\n                className = 'button_switch'\r\n                type = 'button'\r\n                value = 'color pick'\r\n            />\r\n            <p className = 'titleInstument'>Text size: </p>\r\n            <input \r\n                onChange = {props.cbSetSize}\r\n                type=\"number\"\r\n                min = '10' max = '200'\r\n                value = {fontSize ? fontSize : 120}\r\n            />\r\n                { colorPickerActive ?\r\n                    <SketchPicker\r\n                    onChangeComplete={props.cbHandleChangeComplete}\r\n                    color = {color ? color: 'red'}\r\n                    />\r\n                    : null\r\n                }\r\n                <p className = 'titleInstument'>Font: </p>\r\n                <select value = {props.componentStats.font} onChange = {props.cbSetFont}>\r\n                <option>Arial</option>\r\n                <option>Times</option>\r\n                <option>Georgia</option>\r\n                <option>Impact</option>\r\n                <option>Tahoma</option>\r\n                <option>Verdana</option>\r\n                <option>Comic</option>\r\n                </select>\r\n            <p className = 'titleInstument'>Content: </p>\r\n            <input\r\n                onChange = {props.cbSetContent}\r\n                maxLength = '100'\r\n                type = 'text'\r\n                value = {content ? content : _content}\r\n            />\r\n            <input \r\n                onClick = {props.cbDelete}\r\n                className = 'instrumentPanel__deleteComponentButton'\r\n                type=\"button\"\r\n                value = 'delete'\r\n            />\r\n            </Fragment>\r\n        )\r\n}\r\n\r\nexport default TextInstruments;","import React, {Fragment} from 'react';\r\nimport eventEmitter from '../../EventEmitter';\r\nimport PropTypes from 'prop-types';\r\nimport './instrumentsPanel.scss';\r\n\r\nimport MediaInstruments from './MediaTools/MediaInstruments';\r\nimport ImageInstruments from './ImageTools/ImageInstruments';\r\nimport BackgroundInstruments from './BackgroundTools/BackgroundInstruments';\r\nimport TextInstruments from './TextTools/TextInstruments';\r\n\r\n\r\nimport Icon from '../Icon/icon';\r\n\r\n\r\nclass InstrumentsPanel extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        instrumentPanel:  PropTypes.object.isRequired, /** @Settings for panel and data about component */\r\n        editComponentName: PropTypes.string /** @Name editable component */\r\n    };\r\n\r\n    state = {\r\n        instrumentPanel: {...this.props.instrumentPanel},\r\n        componentStats: this.props.componentStats,\r\n        images: null,\r\n    };\r\n\r\n    timer = null;\r\n\r\n    updateSize = eventSize => {\r\n        this.setState({\r\n            ...this.state,\r\n            instrumentPanel: {...this.state.instrumentPanel},\r\n            componentStats: {\r\n                ...this.state.componentStats,\r\n                fontSize: eventSize\r\n            }\r\n        });\r\n    };\r\n\r\n    closePanel = event => {\r\n        eventEmitter.emit('EventClosePanel', {close: false});\r\n    };\r\n\r\n    setSize = event => {\r\n        let {id} = this.state.componentStats;\r\n        let size = event.target.value > 200 ? 200 : event.target.value;\r\n        this.setState({\r\n            ...this.state, \r\n            instrumentPanel: {...this.state.instrumentPanel},\r\n            componentStats: {...this.state.componentStats,fontSize: size}\r\n        },\r\n            () => eventEmitter.emit(`EventChangeSize${id}`, {\r\n                targetSection: this.state.editComponentName, size: size \r\n            })\r\n        );\r\n    };\r\n\r\n    setFont = event => {\r\n        let {id} = this.state.componentStats;\r\n        let fontName = event.target.value;\r\n        this.setState({\r\n            ...this.state, \r\n            instrumentPanel: {...this.state.instrumentPanel},\r\n            componentStats: {...this.state.componentStats,font: fontName}\r\n        },\r\n            () => eventEmitter.emit(`EventSetFont${id}`, {\r\n                targetSection: this.state.editComponentName, font: fontName\r\n            })\r\n        );\r\n    }\r\n\r\n    setIframeContent = eventItem => {\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            componentStats:{\r\n                ...this.state.componentStats,\r\n                content: eventItem.iframe\r\n            }\r\n        });\r\n    }\r\n\r\n    setContent = event => {\r\n        let {id} = this.state.componentStats;\r\n        let contentValue = event.target.value;\r\n        this.setState({\r\n            ...this.state, \r\n            instrumentPanel: {...this.state.instrumentPanel},\r\n            componentStats: {...this.state.componentStats,content: contentValue}\r\n        },\r\n            () => eventEmitter.emit(`EventChangeContentText${id}`,{\r\n                targetSection: this.state.editComponentName, content: contentValue\r\n            })\r\n        );\r\n        if (event) event.stopPropagation();\r\n    };\r\n\r\n    setWidth = event => {\r\n        const {id} = this.state.componentStats;\r\n        const width = event.target.value;\r\n        this.setState({\r\n            ...this.state,\r\n            componentStats: {...this.state.componentStats,\r\n                size: {\r\n                    ...this.state.componentStats.size,\r\n                    w: width\r\n                }}\r\n        },\r\n            () => eventEmitter.emit(`EventSetWidth${id}`,{width: width}));\r\n\r\n        if (event) event.stopPropagation();\r\n    };\r\n\r\n    setHeight = event => {\r\n        const {id} = this.state.componentStats;\r\n        const height = event.target.value;\r\n        this.setState({\r\n            ...this.state,\r\n            componentStats: {...this.state.componentStats,\r\n                size: {\r\n                    ...this.state.componentStats.size,\r\n                    h: height\r\n                }}\r\n        },\r\n            () => eventEmitter.emit(`EventSetHeight${id}`,{height: height}));\r\n\r\n        if (event) event.stopPropagation();\r\n    }\r\n\r\n    updatePosition = eventItem => {\r\n        if (!eventItem) return;\r\n        this.setState({\r\n            ...this.state, \r\n            componentStats: {\r\n                ...this.state.componentStats,\r\n                coords: {\r\n                    ...this.state.componentStats.coords,\r\n                    x: eventItem.x,\r\n                    y: eventItem.y\r\n                }\r\n            }\r\n        });\r\n    };\r\n\r\n    setColor = event => {\r\n        this.setState({...this.state,\r\n            instrumentPanel:{\r\n                ...this.state.instrumentPanel,\r\n                colorPickerActive: this.state.instrumentPanel.colorPickerActive ? false : true\r\n            }\r\n        });\r\n        if (event) event.stopPropagation();\r\n    };\r\n\r\n    setOpacity = event => {\r\n        let {id} = this.state.componentStats;\r\n        let opacity = event.target.value;\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            componentStats: {...this.state.componentStats,opacity: opacity}\r\n        },\r\n         () => eventEmitter.emit(`EventSetOpacity${id}`, {opacity: opacity}));\r\n    };\r\n\r\n    setBorderRadius = event => {\r\n        let {id} = this.state.componentStats;\r\n        let radius = event.target.value;\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            componentStats: {...this.state.componentStats,borderRadius: radius}\r\n        },\r\n         () => eventEmitter.emit(`EventSetBorderRadius${id}`, {borderRadius: radius}));\r\n    };\r\n\r\n    updateBimageStats = eventItem => {\r\n        const {images} = eventItem;\r\n        if (eventItem.mode !== 'image')\r\n        this.setState({\r\n            ...this.state,\r\n            componentStats:{\r\n                ...this.state.componentStats,\r\n                backgroundImage: images.urlFull\r\n            }\r\n        });\r\n        else {\r\n            this.setState({\r\n                ...this.state,\r\n                componentStats:{\r\n                    ...this.state.componentStats,\r\n                    image: images.urlFull\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    handleChangeComplete = event => {\r\n\r\n        const {rgb} = event;\r\n        let colorRGB = `rgb(${rgb.r},${rgb.g},${rgb.b},${rgb.a})`;\r\n\r\n        let {id} = this.state.componentStats;\r\n        if (this.state.componentStats.type === 'background'){\r\n            this.setState({\r\n                ...this.state,\r\n                componentStats: {...this.state.componentStats,color: colorRGB}\r\n            }, () => eventEmitter.emit(`EventChangeColorBackground${id}`,\r\n                        {colorRGB: this.state.componentStats.color}\r\n                    ));\r\n        }\r\n\r\n        else if (this.state.componentStats.type === 'text') {\r\n            this.setState({\r\n                ...this.state,\r\n                componentStats: {...this.state.componentStats,color: colorRGB}\r\n            },\r\n            () => eventEmitter.emit(`EventChangeColorText${id}`, colorRGB));\r\n        }\r\n\r\n    };\r\n\r\n    redirectSaveChanges = event => {\r\n        eventEmitter.emit(\"EventSaveChangesComponent\", {\r\n            ...this.state.componentStats,\r\n            id: this.state.componentStats.id,\r\n            type: this.state.componentStats.type,\r\n        });\r\n        if (event) event.stopPropagation();\r\n    }\r\n\r\n    saveChanges = event => {\r\n        if (this.timer) clearTimeout(this.timer);\r\n        this.timer = setTimeout(() => {\r\n            eventEmitter.emit(\"EventSaveChangesComponent\", {\r\n                ...this.state.componentStats,\r\n                id: this.state.componentStats.id,\r\n                type: this.state.componentStats.type,\r\n            });\r\n            eventEmitter.emit('EventRedirectConfirm', false);\r\n        }, 2000);\r\n        eventEmitter.emit('EventRedirectConfirm', true);\r\n        if (event) event.stopPropagation();\r\n    }\r\n\r\n    deleteComponent = event => {\r\n        eventEmitter.emit('EventDeleteComponent', {\r\n            id: this.state.componentStats.id,\r\n            targetSection: this.state.componentStats.targetSection,\r\n            type: this.state.componentStats.type\r\n        });\r\n    };\r\n\r\n    search = event => {\r\n\r\n        let {id} = this.state.componentStats;\r\n        eventEmitter.emit('EventModalSearchOn', {idComponent: id, mode: this.state.componentStats.type});\r\n\r\n        event.stopPropagation();\r\n    };\r\n\r\n    loadFile = event => {\r\n        let {id} = this.state.componentStats;\r\n        try {\r\n            let image = event.target.files[0];\r\n            let reader = new FileReader();\r\n            if (image.type[0] !== 'i') throw new Error('Invalid file');\r\n            reader.readAsDataURL(image);\r\n            reader.onload = () => {\r\n                eventEmitter.emit(`EventSetCurrentImage${id}`,{ urlFull: reader.result });\r\n                this.updateBimageStats({images: { urlFull: reader.result }, mode: 'image'});\r\n            }\r\n            reader.onerror = () => {\r\n                console.error(reader.error);\r\n            }\r\n        } catch (error) {\r\n            console.error(error.message);\r\n        }\r\n\r\n        event.stopPropagation();\r\n    }\r\n\r\n    makePanelInstruments = (type) => {\r\n            switch (type){\r\n                case 'text':\r\n                   return(\r\n                    <TextInstruments\r\n                        instrumentPanel = {{...this.state.instrumentPanel}}\r\n                        componentStats = {{...this.state.componentStats}}\r\n                        cbSetColor = {this.setColor}\r\n                        cbSetSize = {this.setSize}\r\n                        cbHandleChangeComplete = {this.handleChangeComplete}\r\n                        cbSetContent = {this.setContent}\r\n                        cbSetFont = {this.setFont}\r\n                        cbSetOpacity = {this.setOpacity}\r\n                        cbDelete = {this.deleteComponent}\r\n                    />\r\n                   )\r\n                case 'background':\r\n                    return (\r\n                        <BackgroundInstruments\r\n                            colorPickerActive = {this.state.instrumentPanel.colorPickerActive}\r\n                            componentStats = {{...this.state.componentStats}}\r\n                            cbSetColor = {this.setColor}\r\n                            cbHandleChangeComplete = {this.handleChangeComplete}\r\n                            cbSearch = {this.search}\r\n                        />\r\n                    )\r\n                case 'image':\r\n                        return (\r\n                            <ImageInstruments\r\n                                instrumentPanel = {{...this.state.instrumentPanel}}\r\n                                componentStats = {{...this.state.componentStats}}\r\n                                cbSearch = {this.search}\r\n                                cbSetSize = {this.setSize}\r\n                                cbSetBorderRadius = {this.setBorderRadius}\r\n                                cbSetOpacity = {this.setOpacity}\r\n                                cbSetWidth = {this.setWidth}\r\n                                cbSetHeight = {this.setHeight}\r\n                                cbLoadFile = {this.loadFile}\r\n                                cbDelete = {this.deleteComponent}\r\n                            />\r\n                        )\r\n                case 'media':\r\n                        return (\r\n                            <MediaInstruments\r\n                                instrumentPanel = {{...this.state.instrumentPanel}}\r\n                                componentStats = {{...this.state.componentStats}}\r\n                                cbSearch = {this.search}\r\n                                cbDelete = {this.deleteComponent}\r\n                            />\r\n                            )\r\n                default: return <p className = 'warningInstruments'>No found element</p>\r\n            }\r\n    };\r\n\r\n    render(){\r\n        let { instrumentActive } = this.state.instrumentPanel;\r\n        return (\r\n            <Fragment>\r\n                <div  className = 'instumentsPanel'>\r\n                    <button\r\n                        onClick = {this.closePanel}\r\n                        className = 'closeInstrumentsPanel'\r\n                    >\r\n                        <Icon path = '/img/close.svg' />\r\n                    </button>\r\n                    <h3>Instruments</h3>\r\n                    {\r\n                        instrumentActive ? \r\n                        <p className = 'TextComponent'>{this.state.componentStats.type}</p>\r\n                        : null\r\n                    }\r\n                    {\r\n                        instrumentActive ?\r\n                        <div className = 'instuments'>\r\n                            {this.makePanelInstruments(this.state.componentStats.type)}\r\n                        </div>\r\n                        : null\r\n                    }\r\n                </div>\r\n            </Fragment>\r\n        )\r\n    };\r\n\r\n    componentDidUpdate = (oldProps, oldState) => {\r\n        if (oldState.componentStats !== this.state.componentStats)\r\n        this.saveChanges();\r\n    };\r\n\r\n    componentDidMount = event => {\r\n        eventEmitter.on('EventRedirectSaveChanges', this.redirectSaveChanges);\r\n        eventEmitter.on(`EventSetIframe`, this.setIframeContent);\r\n        eventEmitter.on(`EventupdateSize${this.state.componentStats.id}`, this.updateSize);\r\n        eventEmitter.on(\"EventSetBImageInstumentPanel\", this.updateBimageStats);\r\n        eventEmitter.on(`EventUpdatePosition${this.state.componentStats.id}`, this.updatePosition);\r\n    };\r\n\r\n    componentWillUnmount = event => {\r\n        if (this.timer) clearTimeout(this.timer);\r\n        eventEmitter.off('EventRedirectSaveChanges', this.redirectSaveChanges);\r\n        eventEmitter.off(`EventSetIframe`, this.setIframeContent);\r\n        eventEmitter.off(`EventupdateSize${this.state.componentStats.id}`, this.updateSize);\r\n        eventEmitter.off(\"EventSetBImageInstumentPanel\", this.updateBimageStats);\r\n        eventEmitter.off(`EventUpdatePosition${this.state.componentStats.id}`, this.updatePosition);\r\n    };\r\n};\r\n\r\nexport default InstrumentsPanel;","import React,{Fragment} from 'react';\r\nimport Viewer from '../imageViewer/Viewer';\r\nimport InstrumentsPanel from '../../components/instrumentsPanel/InstrumentsPanel';\r\nimport ModalWindow from '../../components/modalWindow/ModalWindow';\r\n\r\nconst AdditionalTools = props => {\r\n\r\n    return (\r\n        <Fragment key = 'AdditionalBuild'>\r\n            {   props.modalViewer.action &&\r\n                    <Viewer \r\n                        key = 'ImageViewer' \r\n                        mode = {props.modalViewer.mode} \r\n                        path = {props.modalViewer.target}\r\n                        iframe = {props.modalViewer.iframe}\r\n                    />\r\n            }\r\n            {   props.modalSearch &&\r\n                    <ModalWindow\r\n                        idComponent = {props.componentStats.id}\r\n                        modalSearchMode = {props.modalSearchMode}\r\n                        key = 'ModalWindow' workMode = 'Search' \r\n                    />\r\n            }\r\n                <InstrumentsPanel\r\n                    key = {`InstrumentsPanel${props.componentStats.id}`}\r\n                    editComponentName = {props.editComponentName}\r\n                    componentStats = {{...props.componentStats}}\r\n                    mainBuilderData =  {props.mainBuilderData}\r\n                    instrumentPanel = {props.instrumentPanel}\r\n                />\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default AdditionalTools;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Input from '../buildComponents/components/Input';\r\nimport Media from '../buildComponents/components/Media';\r\nimport Image from '../buildComponents/components/Image';\r\nimport TextComponent from '../buildComponents/components/Text';\r\nimport BackgroundComponent from '../buildComponents/components/Background';\r\n\r\nimport eventEmitter from '../../EventEmitter';\r\nimport './buildMenu.scss';\r\n\r\nclass BuildMenu extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        mode: PropTypes.string.isRequired, /** @String work mode component */\r\n        editComponentName: PropTypes.string,\r\n        countSection: PropTypes.number, /** @Number for new section id */\r\n        countComponents: PropTypes.number, /** @Number last project */\r\n        sizeParentBox: PropTypes.object /** @Object with width and height parent(bg) */\r\n    }\r\n\r\n\r\n    state = {\r\n        mode: this.props.mode,\r\n        sizeParentBox: {...this.props.sizeParentBox},\r\n        title: 'Title'\r\n    }\r\n\r\n    addText = event => {\r\n        let id = Math.random().toFixed(3);\r\n\r\n        const componentsPatternText = {\r\n            type: 'text',\r\n            font: 'Arial',\r\n            color: null,\r\n            opacity: 1,\r\n            fontSize: null,\r\n            content: null,\r\n            coords: {x: null, y: null}, // x, y\r\n            id: id,\r\n            targetSection: this.props.editComponentName,\r\n        };\r\n        eventEmitter.emit('EventBuildComponents',{\r\n            componentsPattern: componentsPatternText,\r\n            type: componentsPatternText.type,\r\n            component: <TextComponent\r\n                            key = {`text${id}`}\r\n                            mode = 'dev'\r\n                            {...componentsPatternText}\r\n                            sizeParentBox = {{...this.props.sizeParentBox}}\r\n                            id = {id}\r\n                        >Title</TextComponent>\r\n        });\r\n        event.stopPropagation();\r\n    }\r\n\r\n    addBackground = event => {\r\n        let id = Math.random().toFixed(3);\r\n\r\n        const componentsPatternBackground = {\r\n            id: id,\r\n            type: 'background',\r\n            color: null,\r\n            backgroundImage: null,\r\n            targetSection: this.state.editComponentName,\r\n        };\r\n\r\n        eventEmitter.emit('EventBuildComponents',{\r\n            componentsPattern: componentsPatternBackground,\r\n            type: componentsPatternBackground.type,\r\n            component: <BackgroundComponent\r\n                            targetSection = {this.props.editComponentName}\r\n                            {...componentsPatternBackground}\r\n                            key = {`bg${id}`}\r\n                            id = {id}\r\n                        />\r\n        });\r\n\r\n        event.stopPropagation();\r\n    }\r\n\r\n    addImage = event => {\r\n        let id = Math.random().toFixed(3);\r\n\r\n        const componentsPatternImage = {\r\n            borderRadius: 0,\r\n            type: 'image',\r\n            size: {w: 30, h: 50},\r\n            opacity: 1,\r\n            zIndex: null,\r\n            image: '/img/photoPattern.svg',\r\n            coords: {x: null, y: null}, // x, y\r\n            id: id,\r\n            targetSection: this.props.editComponentName,\r\n        };\r\n        eventEmitter.emit('EventBuildComponents',{\r\n            componentsPattern: componentsPatternImage,\r\n            type: componentsPatternImage.type,\r\n            component: <Image\r\n                            key = {`image${id}`}\r\n                            sizeParentBox = {this.props.sizeParentBox}\r\n                            id = {id}\r\n                            mode = 'dev'\r\n                            path = {'/img/photoPattern.svg'}\r\n                            {...componentsPatternImage}\r\n                            type = 'image' />\r\n        });\r\n        event.stopPropagation();\r\n    }\r\n\r\n    addMedia = event => {\r\n        let id = Math.random().toFixed(3);\r\n\r\n        const  componentsPatternMedia = {\r\n            type: 'media',\r\n            size: null,\r\n            content: null,\r\n            coords: {x: null, y: null}, // x, y\r\n            id: id,\r\n            targetSection: this.props.editComponentName,\r\n        };\r\n\r\n        eventEmitter.emit('EventBuildComponents', {\r\n            componentsPattern: componentsPatternMedia,\r\n            type: componentsPatternMedia.type,\r\n            component: <Media\r\n                            key = {`media${id}`}\r\n                            targetSection = {this.props.editComponentName}\r\n                            sizeParentBox = {this.props.sizeParentBox}\r\n                            content = {null}\r\n                            id = {id}\r\n                            path = {'/img/photoPattern.mp4'}\r\n                            {...componentsPatternMedia}\r\n                            type = 'media'\r\n                            mode = 'dev'\r\n                        />\r\n        });\r\n        event.stopPropagation();\r\n    }\r\n\r\n    addInput = event => {\r\n        let id = Math.random().toFixed(3);\r\n\r\n        const  componentsPatternInput = {\r\n            type: 'input',\r\n            size: null,\r\n            content: null,\r\n            coords: {x: null, y: null}, // x, y\r\n            id: id,\r\n            targetSection: this.props.editComponentName,\r\n        };\r\n\r\n        eventEmitter.emit('EventBuildComponents', {\r\n            componentsPattern: componentsPatternInput,\r\n            type: componentsPatternInput.type,\r\n            component: <Input\r\n                            key = {`input${id}`}\r\n                            targetSection = {this.props.editComponentName}\r\n                            sizeParentBox = {this.props.sizeParentBox}\r\n                            id = {id}\r\n                            inputType = 'button'\r\n                            {...componentsPatternInput}\r\n                            type = 'input'\r\n                            mode = 'dev'\r\n                        />\r\n        });\r\n        event.stopPropagation();\r\n    }\r\n\r\n    addSection = event => {\r\n        let id = Math.random().toFixed(3);\r\n\r\n        const componentsPatternBackground = {\r\n            color: null,\r\n            backgroundImage: null,\r\n            targetSection: `Section${id}`,\r\n            id: `Section${id}`,\r\n            type: 'background',\r\n        };\r\n        eventEmitter.emit('EventNewSection', {\r\n            componentsPattern: componentsPatternBackground,\r\n            component: <BackgroundComponent\r\n                            {...componentsPatternBackground}\r\n                            key = {`bg${id}`}\r\n                            id = {id}\r\n                            width = '100%'\r\n                            height = '800px'\r\n                            type = 'background'\r\n                            mode = 'dev'\r\n                        />\r\n        });\r\n        event.stopPropagation();\r\n    }\r\n\r\n    render(){\r\n        if (this.state.mode === 'build'){\r\n            return (\r\n                <div className = 'ComponentsMenu'>\r\n                    <button \r\n                        onClick = {this.addImage} \r\n                        className = 'ImageTool CompoentnsMenu_button' \r\n                    >\r\n                        <span>Image</span>\r\n                    </button>\r\n                    <button \r\n                        onClick = {this.addText} \r\n                        className = 'TextTool CompoentnsMenu_button' >\r\n                        <span>Text</span>\r\n                    </button>\r\n                    <button\r\n                        onClick = {this.addInput}\r\n                        disabled = {this.props.editComponentName !== 'Header' ? false : true}\r\n                        className = 'ButtonTool CompoentnsMenu_button' >\r\n                        <span>Button</span>\r\n                    </button>\r\n                    <button onClick = {this.addMedia}\r\n                        className = 'VideoTool CompoentnsMenu_button'\r\n                    >\r\n                        <span>Video</span>\r\n                    </button>\r\n                </div>\r\n            )\r\n        } else if (this.state.mode === 'section') {\r\n            return (\r\n                <div className = 'sectionMode'>\r\n                    <button\r\n                        onClick = {this.addSection}\r\n                        className = 'newSectionTool CompoentnsMenu_button'\r\n                    >\r\n                        <span>New section</span>\r\n                    </button>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default BuildMenu;","import React,{Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Icon from '../Icon/icon';\r\nimport BuildMenu from '../componentsBuildMenu/BuildMenu';\r\n\r\n\r\nclass Controllers extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        countComponents: PropTypes.number.isRequired, /** @number last project id */\r\n        sizeParentBox: PropTypes.object, /** @Object with width and height parent(bg) */\r\n        menuActive: PropTypes.bool, /** @Bool value active menu or unactive */\r\n    }\r\n\r\n    state = {\r\n        viewComponentMenu: false,\r\n        editComponentName: this.props.editComponentName,\r\n        shiftX: 0,\r\n        shiftY: 0,\r\n        coordsX: '50%',\r\n        coordsY: '0',\r\n        shadowDisplay: 'block'\r\n    }\r\n\r\n    componentMenu = event => {\r\n        this.setState({viewComponentMenu: this.state.viewComponentMenu ? false : true});\r\n        event.stopPropagation();\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <Fragment>\r\n            {\r\n                <div\r\n                ref = {this.refControll}\r\n                className = 'ControllersEditComponent'\r\n                onClick = {this.componentMenu}\r\n                >\r\n                    <Icon\r\n                        onClick = {this.componentMenu}\r\n                        className = 'addButton'\r\n                        path = '/img/addButton.png'\r\n                    />\r\n                    { this.state.viewComponentMenu ?\r\n                        <BuildMenu\r\n                            key = {`buildMenu ${this.state.editComponentName}`}\r\n                            mode = 'build'\r\n                            editComponentName = {this.state.editComponentName}\r\n                            sizeParentBox = {this.props.sizeParentBox}\r\n                            countComponents = {this.props.countComponents}\r\n                        /> : null\r\n                    }\r\n                </div>\r\n            }\r\n            </Fragment>\r\n        )\r\n    }\r\n\r\n    componentDidUpdate = () => {\r\n        if (this.props.editComponentName !== this.state.editComponentName)\r\n            this.setState({\r\n                ...this.state,\r\n                editComponentName: this.props.editComponentName\r\n            })\r\n    }\r\n\r\n}\r\n\r\nexport default Controllers;","import React,{Fragment} from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport {Redirect} from 'react-router-dom';\r\nimport eventEmitter from '../../EventEmitter';\r\n\r\n\r\nimport {animateScroll as scroll, scroller } from \"react-scroll\";\r\n\r\nimport {loadCurrentProjectAction, exitProjectAction} from '../../redux/actions';\r\n\r\nimport {middlewareDeleteProjectComponent} from '../../redux/middleware/middlewareDelete';\r\nimport updateMiddleware from '../../redux/middleware/updateMiddleware';\r\nimport withFirebase from '../../components/firebaseHOC';\r\nimport {connect} from 'react-redux';\r\n\r\nimport AdditionalTools from '../../components/additionalTools/additionalTools';\r\nimport BuilderComponents from '../../components/componentsBuilder/BuilderComponents';\r\nimport Controllers from '../../components/controllers/controllers';\r\nimport Loader from '../../components/loading/Loader';\r\nimport Header from '../../components/header/Header';\r\nimport Section from '../../components/buildComponents/section';\r\nimport BuildMenu from '../../components/componentsBuildMenu/BuildMenu';\r\n\r\nimport './build.scss';\r\n\r\n\r\nclass Build extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        firebase: PropTypes.object.isRequired, /** @firebase class for use firebase functions */\r\n        active: PropTypes.bool, /** @active - status firebase auth */\r\n        dispatch: PropTypes.func.isRequired, /** @dispatch - redux */\r\n        history: PropTypes.object, /** @Router HTML5 history */\r\n        location: PropTypes.object, /** @Router */\r\n        match: PropTypes.object.isRequired, /** @Router */\r\n        userData: PropTypes.object.isRequired, /** @UserData data about projects,user and current edit prject */\r\n    }\r\n\r\n    state = {\r\n            idProject: parseInt(this.props.match.params.param),\r\n            editStart: false,\r\n            isChange: false,\r\n            position: 0,\r\n            isLoadComponents: true,\r\n            projectEmpty: false,\r\n            componentStats: {},\r\n            componentJSX: [],\r\n            instrumentPanel: {\r\n                colorPickerActive: false,\r\n                instrumentActive: false,\r\n            },\r\n            scrollConfig: {\r\n                duration: 1000,\r\n                delay: 50,\r\n                smooth: true,\r\n                offset: -60, // Scrolls to element -80 pixels down the page\r\n            },\r\n            editComponentName:  null,\r\n            menuActive: false,\r\n            modalSearch: false,\r\n            modalSearchMode: null,\r\n            modalViewer: {action: false, image: null, mode: null },\r\n            sizeParentBox: null,\r\n        }\r\n\r\n    modalSearchOn = itemEvent => {\r\n        const modeHave = itemEvent.hasOwnProperty('mode');\r\n        this.setState({\r\n            ...this.state, \r\n            modalSearch: !this.state.modalSearch,\r\n            modalSearchMode: modeHave ? itemEvent.mode : null\r\n        });\r\n    }\r\n\r\n    ViewerSwitch = itemEvent => {\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            modalViewer: {\r\n                ...this.state.modalViewer,\r\n                action: itemEvent.action,\r\n                target: itemEvent.target,\r\n                mode: itemEvent.mode,\r\n                iframe: itemEvent.iframe\r\n            }\r\n        });\r\n    };\r\n\r\n    workModeEdit = itemEvent => {\r\n\r\n        if (itemEvent.editStart)\r\n        this.setState({\r\n            ...this.state,\r\n            editStart: itemEvent.editStart,\r\n            editComponentName: itemEvent.targetSection,\r\n            menuActive: true,\r\n        });\r\n\r\n    }\r\n\r\n    openInstrument = itemEvent => {\r\n            const idEqual = this.state.componentStats.id === itemEvent.componentStats.id;\r\n            if (!idEqual)\r\n            this.setState({\r\n                ...this.state,\r\n                editComponentName: itemEvent.targetSection,\r\n                componentStats: {\r\n                    ...this.state.componentStats,\r\n                    ...itemEvent.componentStats\r\n                },\r\n                instrumentPanel: {\r\n                    ...this.state.instrumentPanel,\r\n                    instrumentActive: true,\r\n                }\r\n            });\r\n    }\r\n\r\n    closePanel = itemEvent => {\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            instrumentPanel: {\r\n                ...this.state.instrumentPanel,\r\n                colorPickerActive: false,\r\n                instrumentActive: itemEvent.close\r\n            }\r\n        });\r\n    };\r\n\r\n    deleteComponent = eventItem => {\r\n        let {currentProjectsData} = this.props.userData;\r\n        let {componentJSX} = this.state;\r\n\r\n        const data = {\r\n            id: this.state.idProject,\r\n            uid: this.props.userData.idUser,\r\n            idComponent: eventItem.id,\r\n            sectionsProject: [...currentProjectsData.sectionsProject],\r\n            type: eventItem.type\r\n        }\r\n\r\n        this.props.dispatch(middlewareDeleteProjectComponent(data))\r\n        .then(id => {\r\n            if (id !== null){\r\n               const _componentJSX = componentJSX.filter(item => item.id !== id);\r\n            this.setState({\r\n                ...this.state,\r\n                componentJSX: _componentJSX\r\n            });\r\n        }\r\n        });\r\n    }\r\n\r\n    addComponentsFromBD = array => {\r\n\r\n        let {componentJSX} = this.state;\r\n        let componentsFromDB = [];\r\n\r\n        array.forEach(item => {\r\n            if (item.type !== 'background'){\r\n                let sizeParentBox = {\r\n                    width: this.mainComponent.data.width,\r\n                    height: this.mainComponent.data.height,\r\n                    top: this.mainComponent.data.top,\r\n                    left: this.mainComponent.data.left,\r\n                }\r\n                let component =\r\n                    <BuilderComponents\r\n                        sizeParentBox = {{...sizeParentBox}}\r\n                        {...item}\r\n                        mode = 'dev'\r\n                        key = {`${item.type}${item.id}`}\r\n                    />;\r\n\r\n                const patternJSX = {\r\n                    id: item.id,\r\n                    targetSection: item.targetSection,\r\n                    component: component\r\n                };\r\n                componentsFromDB.push(patternJSX);\r\n            }\r\n        });\r\n            this.setState({\r\n                ...this.state,\r\n                isLoadComponents: false,\r\n                componentJSX: [...componentJSX, ...componentsFromDB],\r\n            });\r\n    };\r\n\r\n    addComponent = itemEvent => {\r\n        let {componentJSX} = this.state;\r\n        let {componentsPattern} = itemEvent;\r\n\r\n        const patternJSX = {\r\n            id: componentsPattern.id,\r\n            targetSection: componentsPattern.targetSection,\r\n            component: itemEvent.component\r\n        };\r\n            this.setState({\r\n                ...this.state,\r\n                componentJSX: [...componentJSX, patternJSX],\r\n            });\r\n    };\r\n\r\n    saveChangesComponent = itemEvent => {\r\n        const {currentProjectsData} = this.props.userData;\r\n        const {userData} = this.props;\r\n        let findCurrentItem = false;\r\n        const _components = currentProjectsData.components.map(item => {\r\n            if (item.id === itemEvent.id) { findCurrentItem = true; return {...itemEvent}; }\r\n            return item;\r\n        });\r\n\r\n        if (!findCurrentItem) _components.push(itemEvent);\r\n\r\n        this.props.dispatch(updateMiddleware({\r\n            uid: userData.idUser,\r\n            projects: [...userData.projects],\r\n            components: _components,\r\n            sectionsProject: [...currentProjectsData.sectionsProject],\r\n            idProject: this.state.idProject\r\n        }))\r\n        .then(() => this.setState({...this.state,isChange: false}));\r\n    };\r\n\r\n    mainComponent = null;\r\n    mainRefComponent = node => node ?\r\n        this.mainComponent = {data: node.getBoundingClientRect(), node: node} : node;\r\n\r\n    addNewSection = eventItem => {\r\n\r\n        const {userData} = this.props;\r\n        const {currentProjectsData} = userData;\r\n\r\n        this.props.dispatch(updateMiddleware({\r\n                uid: userData.idUser,\r\n                projects: [...userData.projects],\r\n                components: [...currentProjectsData.components,\r\n                            eventItem.componentsPatternBackground],\r\n                sectionsProject: [\r\n                    ...currentProjectsData.sectionsProject,\r\n                    eventItem.componentsPatternBackground.id\r\n                ],\r\n                idProject: this.state.idProject\r\n        }))\r\n        .then(() => {\r\n            this.setState({\r\n                ...this.state,\r\n                componentJSX:[\r\n                    ...this.state.componentJSX,\r\n                    eventItem.component\r\n                ]\r\n            })\r\n        });\r\n}\r\n\r\n    moveLocation = event => {\r\n        if (!this.state.modalSearch){ \r\n            const {sectionsProject} = this.props.userData.currentProjectsData;\r\n            const count = sectionsProject.length-1;\r\n            const moveDown = this.state.position < count && event.deltaY > 0;\r\n            const moveUp = event.deltaY < 0 && this.state.position > 0;\r\n\r\n            let sizeParentBox = {\r\n                width: this.mainComponent.data.width,\r\n                height: this.mainComponent.data.height,\r\n                top: this.mainComponent.data.top,\r\n                left: this.mainComponent.data.left,\r\n            }\r\n\r\n            if (moveDown){\r\n                this.setState({\r\n                    ...this.state,\r\n                    position: this.state.position + 1,\r\n                    sizeParentBox: sizeParentBox\r\n                }, () => scroller.scrollTo(`element${this.state.position}`,this.state.scrollConfig));\r\n            }  else if (moveUp){\r\n                if (this.state.position === 1){\r\n                    this.setState({\r\n                        ...this.state,\r\n                        position: this.state.position - 1,\r\n                        sizeParentBox: sizeParentBox\r\n                    }, () => scroll.scrollToTop());\r\n                } else {\r\n                    this.setState({\r\n                        ...this.state,\r\n                        position: this.state.position - 1,\r\n                        sizeParentBox: sizeParentBox\r\n                    }, () => scroller.scrollTo(`element${this.state.position}`,this.state.scrollConfig));\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    render(){\r\n\r\n        if (this.state.projectEmpty) return <Redirect to = '/Cabinet' />\r\n\r\n        const {instrumentActive} = this.state.instrumentPanel;\r\n        const {userData} = this.props;\r\n        const {currentProjectsData} = userData;\r\n        const section = currentProjectsData.sectionsProject;\r\n\r\n        if (userData.active && currentProjectsData.loadProject){\r\n\r\n            return (\r\n                <Fragment>\r\n                    <Header key = 'Header' title = \"Constructor\"  />\r\n                    <div\r\n                        ref = {this.mainRefComponent} \r\n                        onWheel = {this.moveLocation}\r\n                        onMouseMove = {this.showAddSection} \r\n                        className = 'Build' \r\n                        key = 'Build'\r\n                    >\r\n                        { this.state.editStart &&\r\n                        <Controllers\r\n                            key = 'controllers'\r\n                            editComponentName = {this.state.editComponentName}\r\n                            countComponents = {currentProjectsData.components.length}\r\n                            menuActive = {this.state.menuActive}\r\n                            sizeParentBox = {this.state.sizeParentBox}\r\n                        />\r\n                        }\r\n                            <BuildMenu\r\n                                key = 'buildMenu'\r\n                                countSection = {this.state.componentJSX.length * 5}\r\n                                mode = \"section\"\r\n                                className = 'menu'\r\n                            />\r\n                        {instrumentActive && <AdditionalTools key = 'tools' {...this.state} />}\r\n                        {section.length && <Section mode = 'dev' key = 'section' {...this.state} userData = {userData} />}\r\n                    </div>\r\n                </Fragment>\r\n            )\r\n        } else if (!this.props.firebase.getCurrentUser()) return <Redirect to = '/' />\r\n        else return <Loader  key = 'Loader' path = '/img/loading.gif' type = 'build' />\r\n    }\r\n\r\n    componentDidUpdate = (prevProps) => {\r\n\r\n        let {userData} = this.props;\r\n        let {currentProjectsData} = userData;\r\n        const isLoadComponents = this.state.isLoadComponents;\r\n        let sizeParentBox = null;\r\n\r\n        if (this.mainComponent && this.state.sizeParentBox === null)\r\n            sizeParentBox = {\r\n                width: this.mainComponent.data.width,\r\n                height: this.mainComponent.data.height,\r\n                top: this.mainComponent.data.top,\r\n                left: this.mainComponent.data.left,\r\n            }\r\n\r\n        if (userData.active && !currentProjectsData.loadProject) {\r\n            const current =  userData.projects.find(item => item.id === this.state.idProject)\r\n            current ?\r\n            this.props.dispatch(loadCurrentProjectAction({\r\n                id: current.id,\r\n                typeProject: current.type,\r\n                sectionsProject: [...current.sectionsProject],\r\n                components: [...current.components]\r\n            })) : this.setState({...this.state, projectEmpty: true, sizeParentBox: sizeParentBox});\r\n        }\r\n        if (currentProjectsData.loadProject && isLoadComponents) {\r\n            if (this.state.sizeParentBox === null && sizeParentBox !== null)\r\n            this.setState({\r\n                ...this.state,\r\n                sizeParentBox: sizeParentBox\r\n            }, () => this.addComponentsFromBD([...currentProjectsData.components]));\r\n            else this.addComponentsFromBD([...currentProjectsData.components]);\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        let {userData} = this.props;\r\n        let {currentProjectsData} = userData;\r\n\r\n        if (userData.active && !currentProjectsData.loadProject) {\r\n\r\n            const current =  userData.projects.find(item => item.id === this.state.idProject)\r\n            this.props.dispatch(loadCurrentProjectAction({\r\n                id: current.id,\r\n                sectionsProject: [...current.sectionsProject],\r\n                typeProject: current.type,\r\n                components: [...current.components]\r\n            }));\r\n        };\r\n\r\n        eventEmitter.on('EventBuildComponents', this.addComponent);\r\n        eventEmitter.on('EventDeleteComponent', this.deleteComponent);\r\n        eventEmitter.on('EventNewSection', this.addNewSection);\r\n        eventEmitter.on('EventSaveChangesComponent', this.saveChangesComponent);\r\n        eventEmitter.on('EventClosePanel', this.closePanel);\r\n        eventEmitter.on('EventModalSearchOn', this.modalSearchOn);\r\n        eventEmitter.on('EventInstrumentPanel', this.openInstrument);\r\n        eventEmitter.on('EventView', this.ViewerSwitch);\r\n        eventEmitter.on('EventModeEdit', this.workModeEdit);\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n\r\n        let {userData} = this.props;\r\n        if (userData.active)  this.props.dispatch(exitProjectAction(true));\r\n\r\n        eventEmitter.off('EventBuildComponents', this.addComponent);\r\n        eventEmitter.off('EventDeleteComponent', this.deleteComponent);\r\n        eventEmitter.off('EventNewSection', this.addNewSection);\r\n        eventEmitter.off('EventSaveChangesComponent', this.saveChangesComponent);\r\n        eventEmitter.off('EventModalSearchOn', this.modalSearchOn);\r\n        eventEmitter.off('EventClosePanel', this.closePanel);\r\n        eventEmitter.off('EventInstrumentPanel', this.openInstrument);\r\n        eventEmitter.off('EventView', this.ViewerSwitch);\r\n        eventEmitter.off('EventModeEdit', this.workModeEdit);\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        userData: {\r\n            active: state.cabinet.active,\r\n            idUser: state.cabinet.idUser,\r\n            projects: [...state.cabinet.projects],\r\n           currentProjectsData: {...state.builder}\r\n        },\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(withFirebase(Build));\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport {Route, Switch} from 'react-router-dom';\r\n\r\nimport {middlewareLoadUserData} from './redux/middleware/loadUserMiddleware';\r\nimport {connect} from 'react-redux';\r\nimport withFirebase from './components/firebaseHOC';\r\nimport Loader from './components/loading/Loader';\r\n\r\nimport Index from './Pages/Index/Index';\r\nimport Cabinet from './Pages/Cabinet/Cabinet';\r\nimport Production from './Pages/Production/Production';\r\nimport About from './Pages/About/About';\r\nimport Build from './Pages/Build/Build';\r\nimport ErrorPage from './components/ErrorCatch/ErrorPage';\r\n\r\n// require('es6-promise').polyfill();\r\n\r\nclass App extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        config: PropTypes.object.isRequired, /** @Config app */\r\n        firebase: PropTypes.object.isRequired, /** @firebase class for use firebase functions */\r\n        dispatch: PropTypes.func.isRequired, /** @dispatch - redux */\r\n    }\r\n\r\n    state = {\r\n        firebase: this.props.firebase,\r\n        firebaseLoadState: false,\r\n    }\r\n\r\n    componentDidMount(){\r\n\r\n        this.props.firebase.auth.onAuthStateChanged((user) => {\r\n\r\n            if (!this.state.firebaseLoadState){\r\n                if (user) this.props.dispatch(middlewareLoadUserData(user.uid));\r\n                this.setState({...this.state, firebaseLoadState: true});\r\n            }\r\n        });\r\n    }\r\n\r\n    render(){\r\n        if (this.state.firebaseLoadState){\r\n        return (\r\n                <Switch>\r\n                    <Route\r\n                        path = {'/'} exact\r\n                        render = {(props) => <Index {...props} />}\r\n                    />\r\n                    <Route path = '/Cabinet/' exact component = {Cabinet}/>\r\n                    <Route\r\n                        path = {'/Cabinet/About'}\r\n                        render = {(props) => <About {...props} config = {this.props.config} />}\r\n                    />\r\n                    <Route path = {'/Cabinet/Build/:param'} exact component = {Build}/>\r\n                    <Route path = {'/Cabinet/Build/:param/Production'} exact component = {Production} />\r\n                    <Route path = {'*'} component = {Index} />\r\n                    <Route path = {'/crashPage'} component = {ErrorPage} />\r\n                </Switch>\r\n\r\n        )\r\n        } else return <Loader path = { '/img/loading.gif'} type = 'application' />\r\n    }\r\n}\r\n\r\nexport default connect()(withFirebase(App));","\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\n\nimport firebase from './Firebase/Firebase';\nimport ErrorBoundary from './components/ErrorCatch/ErrorBoundary';\nimport {HashRouter } from 'react-router-dom';\nimport {Provider} from 'react-redux';\nimport store from './redux/store';\nimport App from './App.jsx';\nimport 'normalize.css';\n\nimport firebaseContext from './Firebase/firebaseContext';\n\n\n\nfirebase.saveSession('SESSION');\nconst config = require('./config.json');\n\nReactDOM.render(\n        <HashRouter>\n            <ErrorBoundary>\n                <firebaseContext.Provider value = {firebase}>\n                    <Provider store = {store}>\n                        <App config = {config} />\n                    </Provider>\n                </firebaseContext.Provider>\n            </ErrorBoundary>\n        </HashRouter>,\n        document.getElementById('root')\n);\n\nserviceWorker.register();\n\n"],"sourceRoot":""}