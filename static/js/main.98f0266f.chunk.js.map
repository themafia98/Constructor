{"version":3,"sources":["serviceWorker.js","EventEmitter.js","components/ErrorCatch/ErrorPage.jsx","components/ErrorCatch/ErrorBoundary.jsx","Firebase/firebaseConfig.js","Firebase/Firebase.js","redux/actions.js","redux/reducerBuilder.js","redux/reducerCabinet.js","redux/reducers.js","redux/store.js","redux/middleware/loadUserMiddleware.js","components/firebaseHOC.jsx","components/loading/Loader.jsx","components/Registration/Registration.jsx","Pages/Index/Index.jsx","redux/middleware/middlewareDelete.js","components/Icon/icon.jsx","components/header/Header.jsx","components/imageViewer/imageItem.jsx","components/modalWindow/ModalWindow.jsx","redux/middleware/createProjectMiddleware.js","components/List/Item.jsx","components/List/List.jsx","components/ProjectsSection/ProjectsSection.jsx","Pages/Cabinet/Cabinet.jsx","Pages/About/About.jsx","redux/middleware/updateMiddleware.js","components/imageViewer/imageViewer.jsx","components/instrumentsPanel/InstrumentsPanel.jsx","components/buildComponents/components/Background.jsx","components/buildComponents/components/Text.jsx","components/componentsBuildMenu/BuildMenu.jsx","components/controllers/controllers.jsx","components/buildComponents/header/headerBuild.jsx","Pages/Build/Build.jsx","App.jsx","index.js"],"names":["Boolean","window","location","hostname","match","stream","EventEmitter","ErrorPage","state","redirect","update","event","_this","setState","eventEmitter","emit","console","log","this","react_default","a","createElement","react_router","to","class","onClick","React","Component","ErrorBoundary","hasError","updateApplication","componentDidMount","on","componentWillUnmount","off","error","info","ErrorCatch_ErrorPage","props","children","PureComponent","firebaseConfig","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","interfaceFirebase","require","Firebase","Object","classCallCheck","firebase","auth","db","rules","setPersistence","Auth","Persistence","email","password","signInWithEmailAndPassword","createUserWithEmailAndPassword","signOut","currentUser","saveSession","exitProjectAction","type","exit","loadCurrentProjectAction","id","typeProject","component","loadUserAction","active","idUser","uid","projects","errorAction","initialState","loadProject","haveUpdateLoading","idProject","combineReducers","builder","arguments","length","undefined","action","objectSpread","toConsumableArray","cabinet","map","item","middleware","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","thunk","withExtraArgument","reduxCatch","getState","lastAction","dispatch","debug","store","createStore","middlewareLogin","_ref2","asyncToGenerator","regenerator_default","mark","_callee","_ref","wrap","_context","prev","next","login","then","response","collection","doc","user","get","docUser","data","catch","message","stop","_x","_x2","_x3","apply","middlewareLogOutUser","_ref6","_callee3","_ref5","_context3","_x7","_x8","_x9","withFirebase","assign","Loader","_useState","useState","path","slicedToArray","className","src","alt","emailRef","passwordRef","setRefEmail","node","setRefPassword","createUser","value","registration","set","autoComplete","ref","Index","title","registrationActive","regStatus","wrongEnter","statusRegistration","additionalUserInfo","isNewUser","showBox","authTo","emailImput","passwordImput","e","currentSelected","components_Registration_Registration","connect","middlewareDelete","filter","itemdb","Icon","_useState3","_useState5","draggable","iconPath","CabinetIcon","Header","redirectAbout","redirectA","redirectCabinet","redirectC","logOut","stopPropagation","pathname","add","icon","withRouter","ImageItem","urls","regular","urlRegular","full","urlFull","_useState7","isFull","selected","url","ModalWindow","workMode","images","buttonSearchDisabled","selectedItem","showUrl","imageBoxView","newProject","validateName","validateType","disabled","name","imageMenuActive","warning","lengthMax","lengthMin","inputSearch","inputSelect","searchBackground","search","inages","isFetch","concat","ok","json","Error","results","showMenuImage","showImage","target","setSelectedImage","idComponent","makeImageResultBox","items","i","imageItem","key","addNewProject","mode","selectOption","inputs","defineProperty","lengthInput","cancel","refSelect","refSearch","onChange","placeholder","react","middlewareCreateProject","list","lastProject","lastIndex","push","_useState4","canBuild","setCanBuild","_useState9","data-id","List","makeList","project","List_Item","ProjectsSection","components_List_List","Cabinet","deletItem","getCurrentUser","changeWorkMode","header_Header","modalWindow_ModalWindow","components_ProjectsSection_ProjectsSection","config","about","developer","year","updateMiddleware","newProjects","JSON","parse","stringify","find","ImageViewer","InstrumentsPanel","instrumentPanel","componentsStats","content","fontSize","color","backgroundImage","image","coords","left","top","updateSizeText","eventSize","closePanel","close","setSize","size","setContent","contentValue","updatePosition","eventItem","x","y","setColor","colorPickerActive","updateBimageStats","handleChangeComplete","rgb","colorRGB","r","g","b","saveChanges","searchImage","makePanelInstruments","min","max","lib","onChangeComplete","maxLength","defaultValue","componentDidUpdate","oldProps","oldState","targetBool","idBool","instrumentActive","Background","styled","div","_templateObject","backgroundColor","BackgroundComponent","count","setCount","boxComponent","createRef","background","_useState6","setBgColor","_useState8","setImage","changeColor","setBackgroundImage","useEffect","current","focus","boxInform","getBoundingClientRect","width","height","saveWidth","Title","h1","attrs","style","display","shadowDisplay","coordX","coordY","Text_templateObject","textColor","TextComponent","sizeParenBox","colorText","setColorText","sizeText","setSizeText","_useState10","contentText","setText","_useState11","_useState12","shiftCoords","setShiftCoords","_useState13","_useState14","dragNdrop","setDragNdrop","changeColorText","changeSizeText","changeContentText","eventContent","moveText","pageX","pageY","position","sizeTextValue","onMouseDown","rect","onDrag","onDragEnd","onWheel","shiftKey","deltaY","counter","BuildMenu","addText","countComponents","Text","addBackground","components_Background","ControllersBox","controllers_templateObject","Controllers","viewComponentMenu","shiftX","shiftY","coordsX","coordsY","componentMenu","saveCoords","controlBox","drag","refControll","menuActive","componentsBuildMenu_BuildMenu","HeaderBuild","changeMode","editStart","currentTarget","refBox","refBackground","build","componentJSX","readyBuild","controllers","mainWidth","mainBoxWidth","mainHeight","mainBoxHeight","Build","parseInt","params","param","editComponent","edit","changeEdit","modalSearch","modalImageViewer","modalSearchOn","imageViewerSwitch","workModeEdit","itemEvent","openInstrument","targetEqual","instumentActive","addHeaderComponent","saveChangesComponent","componentSaveInBase","currentProject","imageViewer_imageViewer","instrumentsPanel_InstrumentsPanel","header_headerBuild","prevProps","prevState","_this2","App","firebaseLoadState","onAuthStateChanged","_ref4","_callee2","_ref3","_context2","_x4","_x5","_x6","_this3","exact","render","Pages_Index_Index","Pages_About_About","ReactDOM","react_router_dom","ErrorCatch_ErrorBoundary","es","src_App","document","getElementById","navigator","serviceWorker","ready","unregister"],"mappings":"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","file":"static/js/main.98f0266f.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {EventEmitter} from 'events';\r\nconst stream = new EventEmitter();\r\nexport default stream;","import React from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\nimport eventEmitter from '../../EventEmitter';\r\n\r\nimport './errorPage.scss';\r\n\r\n\r\nclass ErrorPage extends React.Component {\r\n\r\n    state = {\r\n        redirect: false,\r\n    }\r\n\r\n    update = event => {\r\n       this.setState({redirect: true},\r\n        () => eventEmitter.emit('EventErrorCatchUpdate'));\r\n    }\r\n\r\n    render(){\r\n        console.log('error');\r\n        if (this.state.redirect) return <Redirect to = '/' />\r\n        return (\r\n        <div class = 'container'>\r\n            <div class = 'flex-column'>\r\n                <h1>Application crash</h1>\r\n                <button onClick = {this.update}>Update</button>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ErrorPage;","\r\n\r\nimport React from 'react';\r\nimport eventEmitter from '../../EventEmitter';\r\nimport ErrorPage from './ErrorPage';\r\nclass ErrorBoundary extends React.PureComponent {\r\n\r\n      state = { \r\n        hasError: false,\r\n      };\r\n\r\n    static getDerivedStateFromError(error) {\r\n        console.log(error);\r\n      // Обновить состояние с тем, чтобы следующий рендер показал запасной UI.\r\n      return { hasError: true};\r\n    }\r\n\r\n    updateApplication = event => {\r\n      this.setState({hasError: false});\r\n    };\r\n  \r\n    componentDidCatch(error, info) {\r\n      // Можно также сохранить информацию об ошибке в соответствующую службу журнала ошибок\r\n     console.error(error + \",\" + info);\r\n    }\r\n  \r\n    render() {\r\n      if (this.state.hasError) return <ErrorPage />\r\n      return this.props.children;\r\n    }\r\n\r\n    componentDidMount = () => {\r\n      eventEmitter.on('EventErrorCatchUpdate',this.updateApplication);\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n      eventEmitter.off('EventErrorCatchUpdate',this.updateApplication);\r\n    }\r\n  }\r\n\r\n  export default ErrorBoundary;","// setings in root folder / firebase.env\r\nconsole.log('config');\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n    databaseURL: process.env.REACT_APP_DATABASE_URL,\r\n    projectId: process.env.REACT_APP_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n    appId: process.env.REACT_APP_APPID\r\n};\r\n\r\nexport {firebaseConfig}","import * as firebase from 'firebase/app';\r\nimport {firebaseConfig} from './firebaseConfig';\r\n\r\nconst auth = require('firebase/auth');\r\nconst firestore = require('firebase/firestore');\r\n\r\nclass Firebase {\r\n\r\n        constructor(){\r\n                firebase.initializeApp(firebaseConfig);\r\n                this.auth = firebase.auth();\r\n                this.db = firebase.firestore();\r\n        }\r\n\r\n        saveSession(rules){\r\n                return this.auth.setPersistence(firebase.auth.Auth.Persistence[rules]);\r\n        }\r\n\r\n        login(email, password){\r\n                return this.auth.signInWithEmailAndPassword(email, password);\r\n        }\r\n\r\n        registration(email, password){\r\n                return this.auth.createUserWithEmailAndPassword(email, password)\r\n        }\r\n\r\n        signOut(){\r\n                return this.auth.signOut()\r\n        }\r\n\r\n        getCurrentUser() {\r\n                return this.auth.currentUser\r\n        }\r\n}\r\n\r\nlet interfaceFirebase = new Firebase();\r\ninterfaceFirebase.saveSession('SESSION');\r\n\r\nexport default interfaceFirebase;\r\n\r\nexport { auth, firestore };\r\n\r\n","const CREATE_PROJECT = 'CREATE_PROJECT';\r\nconst LOAD_UPDATE_PROJECT = \"LOAD_UPDATE_PROJECT\";\r\nconst LOAD_CURRENT = 'LOAD_CURRENT';\r\nconst LOG_OUT_CABINET = 'LOG_OUT_CABINET';\r\nconst LOAD_USER_CABINET = 'LOAD_USER_CABINET';\r\nconst ERROR_CABINET = 'ERROR_CABINET';\r\nconst EXIT_PROJECT = 'EXIT_PROJECT';\r\n\r\nconst createProjectAction = (state) => {\r\n    return {\r\n        type: CREATE_PROJECT,\r\n        projects: state,\r\n    }\r\n}\r\n\r\nconst exitProjectAction = (state) => {\r\n    return {\r\n        type: EXIT_PROJECT,\r\n        exit: state\r\n    }\r\n}\r\n\r\nconst loadCurrentProjectAction = (state) => {\r\n    return {\r\n        type: LOAD_CURRENT,\r\n        id: state.id,\r\n        typeProject: state.typeProject,\r\n        component: state.component\r\n    }\r\n}\r\n\r\nconst loadUpdateCurrentProject = (state) => {\r\n    return {\r\n        type: LOAD_UPDATE_PROJECT,\r\n        idProject: state.idProject,\r\n        component: state.component\r\n    }\r\n}\r\n\r\nconst loadUserAction = (state) => {\r\n    return {\r\n        type: LOAD_USER_CABINET,\r\n        active: true,\r\n        idUser: state.uid,\r\n        error: '',\r\n        projects: state.projects\r\n    }\r\n}\r\n\r\nconst logOutAction = (state) => {\r\n\r\n    return {\r\n        type: LOG_OUT_CABINET,\r\n        active: false,\r\n        idUser: null,\r\n        error: '',\r\n        projects: []\r\n    }\r\n}\r\n\r\nconst errorAction = (state) => {\r\n    return {\r\n        type: ERROR_CABINET,\r\n        error: state\r\n    }\r\n}\r\n\r\nexport {\r\n    CREATE_PROJECT, createProjectAction, /* cabinet */\r\n    LOAD_USER_CABINET, loadUserAction, /* cabinet */\r\n    LOG_OUT_CABINET, logOutAction, /* cabinet */\r\n    LOAD_CURRENT, loadCurrentProjectAction, /* builder */\r\n    LOAD_UPDATE_PROJECT, loadUpdateCurrentProject,\r\n    EXIT_PROJECT, exitProjectAction,\r\n    ERROR_CABINET, errorAction, /* both */\r\n}","import {LOAD_CURRENT,LOAD_UPDATE_PROJECT, EXIT_PROJECT} from './actions';\r\n\r\nconst initialState = {\r\n    loadProject: false,\r\n    haveUpdateLoading: true,\r\n    idProject: null,\r\n    typeProject: null,\r\n    component: []\r\n};\r\nexport default (state = initialState, action) => {\r\n    switch (action.type){\r\n\r\n        case LOAD_CURRENT: {\r\n            return {\r\n                ...state,\r\n                haveUpdateLoading: state.haveUpdateLoading ? false : true,\r\n                loadProject: true,\r\n                idProject: action.id,\r\n                typeProject: action.typeProject,\r\n                component: [...action.component]\r\n            }\r\n        }\r\n\r\n        case LOAD_UPDATE_PROJECT: {\r\n            return {\r\n                ...state,\r\n                haveUpdateLoading: false,\r\n                component: [...action.component]\r\n            }\r\n        }\r\n\r\n        case EXIT_PROJECT: {\r\n            if (action.exit)\r\n            return {\r\n                ...state,\r\n                haveUpdateLoading: true,\r\n                loadProject: false,\r\n                idProject: null,\r\n                typeProject: null,\r\n                component: []\r\n            }\r\n            else return state;\r\n        }\r\n        default: return state;\r\n    }\r\n};","import {LOAD_USER_CABINET, LOG_OUT_CABINET, ERROR_CABINET, CREATE_PROJECT, LOAD_UPDATE_PROJECT} from './actions';\r\n\r\nconst initialState = {\r\n    active: false,\r\n    idUser: null,\r\n    projects: [],\r\n    error: null,\r\n    //dateConnect: new Date(Date.now()).toLocaleString().replace(/\\s/ig,'').split(','),\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case LOAD_USER_CABINET: {\r\n\r\n            return {\r\n                ...state,\r\n                active: action.active,\r\n                idUser: action.idUser,\r\n                projects: [...action.projects]\r\n            }\r\n        }\r\n\r\n        case CREATE_PROJECT: {\r\n            return {\r\n                ...state,\r\n                projects: [...action.projects]\r\n            }\r\n        }\r\n\r\n        case LOAD_UPDATE_PROJECT: {\r\n            return {\r\n                ...state,\r\n                projects: state.projects.map(item => {\r\n                    if (item.id === action.idProject)\r\n                        item.component = [...action.component]\r\n                return item;\r\n                })\r\n            }\r\n        }\r\n\r\n        case LOG_OUT_CABINET: {\r\n            return {\r\n                ...state,\r\n                active: false,\r\n                idUser: null,\r\n                projects: []\r\n            }\r\n        }\r\n\r\n        case ERROR_CABINET: {\r\n            return {\r\n                ...state,\r\n                error: action.error\r\n            }\r\n        }\r\n        default: return state;\r\n    }\r\n}\r\n\r\n","import {combineReducers} from 'redux';\r\nimport reducerBuilder from './reducerBuilder';\r\nimport reducerCabinet from './reducerCabinet';\r\n\r\nexport default combineReducers({\r\n    builder: reducerBuilder,\r\n    cabinet: reducerCabinet,\r\n});","import {createStore, applyMiddleware, compose} from 'redux';\r\nimport firebase from  '../Firebase/Firebase';\r\nimport reduxCatch from 'redux-catch';\r\nimport thunk from 'redux-thunk';\r\nimport combineReducers from './reducers';\r\n\r\nconst composeEnhancers =\r\n  typeof window === 'object' &&\r\n  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?\r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\r\n    }) : compose;\r\n\r\n    function errorHandler(error, getState, lastAction, dispatch) {\r\n      console.error(error);\r\n      console.debug('current state', getState());\r\n      console.debug('last action was', lastAction);\r\n      // optionally dispatch an action due to the error using the dispatch parameter\r\n    }\r\n\r\nconst middleware = composeEnhancers(\r\n  applyMiddleware(thunk.withExtraArgument({firebase})),\r\n  applyMiddleware(reduxCatch(errorHandler))\r\n);\r\nconst store = createStore(combineReducers, middleware);\r\n\r\n\r\nexport default store;","import {loadUserAction, errorAction, logOutAction} from '../actions';\r\n\r\nconst middlewareLogin = (email,password) => async (dispatch,getState, {firebase}) => {\r\n        await firebase.login(email,password)\r\n        .then(response =>{\r\n            firebase.db.collection(\"users\").doc(response.user.uid).get()\r\n            .then(docUser => {\r\n                let user = docUser.data();\r\n                dispatch(loadUserAction({uid: docUser.id, projects: [...user.projects]}))\r\n            })\r\n        })\r\n        .catch((error) => {\r\n            console.error(error.message);\r\n            dispatch(errorAction(error.message));\r\n        });\r\n    }\r\n\r\nconst middlewareLoadUserData = (uid) => async (dispatch,getState, {firebase}) => {\r\n        await firebase.db.collection(\"users\").doc(uid).get()\r\n        .then(docUser => {\r\n            let user = docUser.data();\r\n            dispatch(loadUserAction({uid: uid, projects: [...user.projects]}))\r\n        })\r\n        .catch((error) => {\r\n            console.error(error.message);\r\n            dispatch(errorAction(error.message));\r\n        });\r\n    }\r\n\r\nconst middlewareLogOutUser = (uid) => async (dispatch,getState, {firebase}) => {\r\n    await firebase.signOut()\r\n    .then (response => {\r\n        dispatch(logOutAction());\r\n    })\r\n    .catch((error) => {\r\n        console.error(error.message);\r\n        dispatch(errorAction(error.message));\r\n    });\r\n}\r\nexport {\r\n    middlewareLogin,middlewareLoadUserData, middlewareLogOutUser\r\n}","import React from 'react';\r\nimport firebase from '../Firebase/Firebase';\r\n\r\nconst withFirebase = Component => props => (\r\n    <Component firebase = {firebase} {...props} />\r\n);\r\n\r\nexport default withFirebase;","import React,{useState} from 'react';\r\n\r\nexport default function(props) {\r\n    const [path] = useState(props.path);\r\n    return (\r\n            <div className = 'loaderBox'>\r\n                <img className = 'loader' src = {path} alt = 'loader'></img> \r\n                <p>Loading {props.type}</p>\r\n            </div>\r\n    )\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport eventEmitter from '../../EventEmitter';\r\nimport './registration.scss';\r\n\r\nimport withFirebase from '../../components/firebaseHOC';\r\n\r\n\r\nclass Registration extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        firebase: PropTypes.object.isRequired,\r\n    }\r\n\r\n    state = {\r\n        firebase: this.props.firebase,\r\n        error: null,\r\n    }\r\n\r\n    emailRef = null;\r\n    passwordRef = null;\r\n\r\n    setRefEmail = (node) => this.emailRef = node;\r\n    setRefPassword = (node) => this.passwordRef = node;\r\n\r\n    createUser = (event) => {\r\n\r\n        const email = this.emailRef.value;\r\n        const password = this.passwordRef.value;\r\n        const { firebase } = this.props;\r\n\r\n        firebase.registration(email, password)\r\n        .then(response => {\r\n            firebase.db.collection(\"users\").doc(response.user.uid).set({\r\n                'projects': [],\r\n                'email': email,\r\n            }).then(() => eventEmitter.emit('EventRegistrationCorrect', response))\r\n        })\r\n        .catch((error) => {\r\n        console.error(error.message);\r\n        this.setState({error: error.message});\r\n        });\r\n    };\r\n\r\n    render(){\r\n        let  { error } = this.state;\r\n\r\n        return (\r\n            <div className = 'RegistrationBox'>\r\n                <div  className = 'RegistrationForm'>\r\n                    <h3>Registration</h3>\r\n                    <form autoComplete = 'off' className = 'RegForm'>\r\n                        { error ?\r\n                            <p className = 'error'>{error}</p>\r\n                            : null\r\n                        }\r\n                        <span>E-mail</span>\r\n                        <input ref = {this.setRefEmail} type = 'text' />\r\n                        <span>Password</span>\r\n                        <input  autoComplete = \"off\" ref = {this.setRefPassword} type = 'password' />\r\n                        <input onClick = {this.createUser}\r\n                                className = 'loginButton'\r\n                                type = 'button'\r\n                                value = 'registration'\r\n                        />\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\nexport default withFirebase(Registration);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport eventEmitter from '../../EventEmitter';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nimport {middlewareLogin} from '../../redux/middleware/loadUserMiddleware';\r\n\r\nimport Loader from '../../components/loading/Loader';\r\nimport Registration from '../../components/Registration/Registration';\r\n\r\nimport {connect} from 'react-redux';\r\n\r\nimport './index.scss';\r\n\r\nclass Index extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        config: PropTypes.object,\r\n    }\r\n\r\n    state = {\r\n        title:  \"Constructor\",\r\n        registrationActive: false,\r\n        regStatus: false,\r\n        wrongEnter: false,\r\n        error: ''\r\n    }\r\n\r\n    statusRegistration = (event) => {\r\n        event.additionalUserInfo.isNewUser ?\r\n        this.setState({...this.state,\r\n                        regStatus: true,\r\n                        registrationActive: false,\r\n                        error: 'Account create!'\r\n                    })\r\n        : console.error('error registration');\r\n    }\r\n\r\n    showBox = (event) => {\r\n        this.setState ({\r\n            ...this.state,\r\n        registrationActive: this.state.registrationActive ? false : true\r\n        })\r\n    }\r\n\r\n    authTo = (event) => {\r\n            this.props.dispatch(middlewareLogin(this.emailImput.value, this.passwordImput.value));\r\n}\r\n    emailImput = null;\r\n    passwordImput = null;\r\n    emailRef = (node) => this.emailImput = node;\r\n    passwordRef = (node) => this.passwordImput = node;\r\n\r\n    render(){\r\n        console.log('index render');\r\n        if (this.props.active) return <Redirect to = { '/Cabinet'} />\r\n        else if (!this.props.active) {\r\n            let currentSelected = this.state.registrationActive;\r\n            return (\r\n                <div className = 'LoginPage flex-column'>\r\n                        <h1>{this.state.title}</h1>\r\n                        <div className = 'LoginBox'>\r\n                            <div className = 'LoginForm'>\r\n                                <h3>Connect form</h3>\r\n                                {\r\n                                    this.props.wrongEnter || this.state.regStatus ?\r\n                                    <p className = 'error'>{this.props.wrongEnter}</p>\r\n                                    : null\r\n                                }\r\n                                <p>E-mail</p>\r\n                                <input ref = {this.emailRef} type = 'text' />\r\n                                <p>Password</p>\r\n                                <input ref = {this.passwordRef} type = 'password' />\r\n                                <input \r\n                                    onClick = {this.authTo} \r\n                                    className = 'loginButton'\r\n                                    type = 'button'\r\n                                    value = 'enter' />\r\n                                <input\r\n                                    onClick = {this.showBox}\r\n                                    className = {currentSelected ? `loginButton selected`\r\n                                        : 'loginButton'}\r\n                                    type = 'button'\r\n                                    value = 'registration'\r\n                                    />\r\n                            </div>\r\n                        </div>\r\n                        {\r\n                            this.state.registrationActive ?\r\n                            <Registration auth = {this.props.auth} />\r\n                            : null\r\n                        }\r\n                </div>\r\n            )\r\n        } else  return <Loader path = '/img/loading.gif' type = 'session' />\r\n    }\r\n\r\n    componentDidMount = (e) => {\r\n        eventEmitter.on('EventRegistrationCorrect', this.statusRegistration);\r\n    }\r\n    componentWillUnmount = (e) => {\r\n        eventEmitter.off('EventRegistrationCorrect', this.statusRegistration);\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        active: state.cabinet.active, \r\n        wrongEnter: state.cabinet.error\r\n    }\r\n  }\r\n\r\nexport default connect(mapStateToProps)(Index);","\r\nimport {errorAction, loadUserAction} from '../actions';\r\n\r\nconst middlewareDelete = item => async (dispatch,getState, {firebase}) => {\r\n    console.log('middleware');\r\n    await firebase.db.collection('users').doc(item.uid).get()\r\n    .then(user => user.data())\r\n    .then(data => {\r\n        return {id: data.id, projects: data.projects.filter(itemdb => itemdb.id !== item.id)};\r\n    })\r\n    .then(data => {\r\n        firebase.db.collection(\"users\").doc(item.uid).update({\r\n            \"projects\": data.projects\r\n        })\r\n        .then(response => {\r\n            dispatch(loadUserAction({uid: data.id, projects: data.projects}));\r\n        });\r\n    })\r\n    .catch((error) => {\r\n        console.error(error.message);\r\n        dispatch(errorAction(error.message));\r\n    });\r\n}\r\n\r\nexport default middlewareDelete;\r\n","import React, {useState} from 'react';\r\n\r\n\r\nfunction Icon(props){\r\n    const [path] = useState(props.path);\r\n    const [className] = useState(props.className ? props.className : null);\r\n    const [draggable] = useState(props.draggable ? true : false);\r\n    console.log('Icon');\r\n    return (\r\n    <img\r\n        draggable = {draggable}\r\n        onClick = {props.onClick ? props.onClick : null}\r\n        className = {className}\r\n        title = {props.title ? props.title : null}\r\n        src = {process.env.PUBLIC_URL + path } alt = 'icon'>\r\n    </img>\r\n    )\r\n}\r\n\r\nexport default Icon;","import React from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport './header.scss';\r\n\r\nimport {middlewareLogOutUser} from '../../redux/middleware/loadUserMiddleware';\r\nimport {connect} from 'react-redux';\r\nimport {Redirect, withRouter} from 'react-router-dom';\r\n\r\nimport eventEmitter from '../../EventEmitter.js';\r\nimport Icon from '../Icon/icon';\r\n\r\n\r\nconst iconPath = require('../../config.json').CabinetIcon;\r\n\r\nclass Header extends React.Component {\r\n\r\n    static propTypes = {\r\n        title: PropTypes.string.isRequired,\r\n    };\r\n\r\n    state = {\r\n        title: this.props.title,\r\n        redirectAbout: {\r\n            path:  '/Cabinet/About',\r\n            redirectA: false,\r\n        },\r\n        redirectCabinet: {\r\n            path:  '/Cabinet',\r\n            redirectC: false,\r\n        }\r\n    };\r\n\r\n    logOut = event => {\r\n        this.props.dispatch(middlewareLogOutUser(this.props.idUser));\r\n        event.stopPropagation();\r\n    };\r\n\r\n    redirectAbout = event => {\r\n        if (this.props.location.pathname !== this.state.redirectAbout.path)\r\n           this.setState({\r\n               redirectAbout: {\r\n                   ...this.state.redirectAbout,\r\n                   redirectA: true\r\n               }\r\n           });\r\n        event.stopPropagation()\r\n    };\r\n\r\n    redirectCabinet = event => {\r\n        if (this.props.location.pathname !== this.state.redirectCabinet.path)\r\n        this.setState({\r\n            redirectCabinet: {\r\n                ...this.state.redirectCabinet,\r\n                redirectC: true\r\n            }\r\n        });\r\n        event.stopPropagation()\r\n    }\r\n\r\n    add = (e) => {\r\n        eventEmitter.emit('EventChangeWorkMode',{action: 'newProject'});\r\n    };\r\n\r\n    render(){\r\n\r\n        let {redirectA} = this.state.redirectAbout;\r\n        let {redirectC} = this.state.redirectCabinet;\r\n\r\n        if (redirectA) return <Redirect to = {this.state.redirectAbout.path} />\r\n        if(redirectC) return <Redirect to = {this.state.redirectCabinet.path} />\r\n        console.log('heade');\r\n        return (\r\n            <header>\r\n                <div className = 'container'>\r\n                    <div className = 'flex-row'>\r\n                            <div onClick = {this.redirectCabinet} className = 'header__CabinetInfo'>\r\n                                <Icon path = {iconPath} />\r\n                                <h3 className = 'tilteApp'>{this.state.title}</h3>\r\n                            </div>\r\n                            {this.props.location.pathname === '/Cabinet' ?\r\n                                <div onClick = {this.add} className = 'header__newProject__AddButton'>\r\n                                    <Icon path = '/img/plus.png' />\r\n                                </div>\r\n                                : null\r\n                            }\r\n                                <div  className = 'Navigator'>\r\n                                    <Icon onClick = {this.redirectAbout} title = 'about' path = '/img/about_logo.svg' />\r\n                                    <Icon onClick = {this.logOut} title = 'logOut' path = '/img/logOut.svg' />\r\n                                </div>\r\n                    </div>\r\n               </div>\r\n            </header>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect()(withRouter(Header));","import React, {useState} from 'react';\r\nimport eventEmitter from '../../EventEmitter';\r\n\r\nconst ImageItem = props => {\r\n\r\n    const [id] = useState(props.id);\r\n    const [urlRegular] = useState(props.urls.regular);\r\n    const [urlFull] = useState(props.urls.full);\r\n    const [isFull] = useState(props.isFull);\r\n\r\n    const showImageMenu = event => {\r\n       eventEmitter.emit(\"EventShowMenuImage\", {id: id, url: urlRegular, urlFull: urlFull});\r\n    }\r\n\r\n\r\n    return (\r\n        <div className = {props.selected ? 'ItemBox selected' : 'ItemBox'}>\r\n            <img\r\n                onClick = {showImageMenu}\r\n                src = {isFull ? urlFull : urlRegular}\r\n                alt = 'item'\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ImageItem;","import React,{Fragment} from 'react';\r\nimport isFetch from 'isomorphic-fetch';\r\nimport PropTypes from 'prop-types';\r\nimport eventEmitter from '../../EventEmitter.js';\r\n\r\nimport ImageItem from '../imageViewer/imageItem';\r\nimport Icon from '../Icon/icon';\r\n\r\nimport './modal.scss';\r\n\r\nclass ModalWindow extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        workMode: PropTypes.string.isRequired,\r\n        idComponent: PropTypes.string || PropTypes.number\r\n    }\r\n\r\n    state = {\r\n        workMode: this.props.workMode,\r\n        images: {\r\n            buttonSearchDisabled: false,\r\n            selectedItem: null, \r\n            showUrl: null, \r\n            images: null,\r\n            urlFull: null,\r\n            imageBoxView: false, \r\n            error: ''\r\n        },\r\n        newProject: {\r\n            validateName: false,\r\n            validateType: false,\r\n            disabled: true,\r\n            name: '',\r\n            type: 'empty'\r\n        },\r\n        imageMenuActive: false,\r\n        warning: {\r\n            lengthMax: 'Max length: 20 symbols',\r\n            lengthMin: 'Min length: 4 symbol',\r\n            type: 'Select type of webpage',\r\n        }\r\n    }\r\n\r\n    inputSearch = null;\r\n    inputSelect = null;\r\n\r\n    searchBackground = event => {\r\n\r\n        const api = 'https://api.unsplash.com/search/photos/?page=1&per_page=40&query=';\r\n        const search = this.inputSearch.value;\r\n\r\n        this.setState({...this.state, images: {...this.state.inages, buttonSearchDisabled: true}})\r\n\r\n        isFetch(`${api + search}&client_id=${process.env.REACT_APP_UNSPLASH_TOKEN}`)\r\n        .then(response => {\r\n            if (response.ok) return response.json();\r\n            else throw new Error('request invalid');\r\n        })\r\n        .then(response => {\r\n\r\n            let {results} = response;\r\n            if (results.length)\r\n            this.setState({\r\n                ...this.state,\r\n                images: {\r\n                    ...this.state.images,\r\n                    imageBoxView: true,\r\n                    error: '',\r\n                    images: [...results],\r\n                    buttonSearchDisabled: false\r\n                },\r\n            });\r\n            else throw new Error('Photos not found');\r\n        })\r\n        .catch(error => {\r\n            console.error(error.message);\r\n            this.setState({\r\n                ...this.state,\r\n                images: {...this.state.images, error: error.message},\r\n                imageBoxView: false,\r\n                buttonSearchDisabled: false\r\n            });\r\n        });\r\n    }\r\n\r\n    showMenuImage = event => {\r\n        this.setState({\r\n            ...this.state, \r\n            imageMenuActive: true,\r\n            images: {\r\n                ...this.state.images,\r\n                selectedItem: event.id, \r\n                showUrl: event.url,\r\n                urlFull: event.urlFull\r\n\r\n            }\r\n        });\r\n    }\r\n\r\n    showImage = event => {\r\n\r\n        const {showUrl} = this.state.images;\r\n        eventEmitter.emit(\"EventImageView\", {action: true, target: showUrl ? showUrl : null});\r\n        event.stopPropagation();\r\n    }\r\n\r\n    setSelectedImage = event => {\r\n\r\n        let images = {...this.state.images};\r\n        eventEmitter.emit(`EventSetBackgroundImage${this.props.idComponent}`,images);\r\n        eventEmitter.emit(`EventSetBImageInstumentPanel`,images);\r\n        event.stopPropagation();\r\n    };\r\n\r\n    makeImageResultBox = (items) => {\r\n        if (!items) return null;\r\n        console.log('item');\r\n        return items.map((item,i) =>{\r\n           return <ImageItem \r\n                key = {`item${i}`} \r\n                id = {i}\r\n                selected = {this.state.images.selectedItem === i ? true : false} \r\n                isFull = {false}\r\n                urls = {{...item.urls}} \r\n            />\r\n        });\r\n    }\r\n\r\n    addNewProject = (event) => {\r\n        let mode = this.state[this.state.workMode];\r\n        if (mode.validateType &&  mode.validateName) {\r\n            eventEmitter.emit('EventAddProject',\r\n            {\r\n                title: this.state[this.state.workMode].name,\r\n                type: this.state[this.state.workMode].type\r\n            });\r\n\r\n            eventEmitter.emit('EventChangeWorkMode',{action: 'default'});\r\n        }\r\n    }\r\n\r\n    selectOption = (event) => {\r\n\r\n        let inputs = {...this.state[this.state.workMode]};\r\n        inputs.type = event.target.value;\r\n        inputs.validateType = inputs.type !== 'empty';\r\n        inputs.disabled = inputs.validateType && inputs.validateName ? false : true;\r\n        this.setState({\r\n            ...this.state,\r\n            [this.state.workMode]: inputs\r\n        });\r\n    }\r\n\r\n    validateName = (event) => {\r\n\r\n        let inputs = {...this.state[this.state.workMode]};\r\n        inputs.name = event.target.value;\r\n        let lengthInput = inputs.name.length;\r\n        inputs.validateName = lengthInput >= 4 && lengthInput < 20 ? true : false;\r\n        inputs.disabled = inputs.validateType && inputs.validateName ? false : true;\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            [this.state.workMode]: inputs\r\n        })\r\n    };\r\n\r\n    cancel = (event) => {\r\n\r\n        if (this.state.workMode === 'Search')\r\n            eventEmitter.emit(\"EventModalSearchOn\");\r\n        else  eventEmitter.emit('EventChangeWorkMode',{action: 'default'});\r\n    }\r\n\r\n    refSelect = (node) => this.inputSelect = node;\r\n    refSearch = node => this.inputSearch = node;\r\n\r\n    render(){\r\n\r\n        switch (this.state.workMode){\r\n            case 'newProject':\r\n                return (\r\n                    <div className = 'Modal'>\r\n                        <h3>Create new Project</h3>\r\n                        { this.state[this.state.workMode].name.length <= 3 ?\r\n                            <span className = 'warning'>{this.state.warning.lengthMin}</span> : null\r\n                        }\r\n                        { this.state[this.state.workMode].name.length >= 20 ?\r\n                            <span className = 'warning'>{this.state.warning.lengthMax}</span> : null\r\n                        }\r\n                        <input\r\n                            className = {this.state[this.state.workMode].validateName ? 'ready' : 'wrong'}\r\n                            value = {this.state[this.state.workMode].name}\r\n                            onChange = {this.validateName}\r\n                            type = 'text'\r\n                            placeholder = \"Project name\"\r\n                        />\r\n                        { !this.state[this.state.workMode].validateType ?\r\n                            <span className = 'warning'>{this.state.warning.type}</span> : null\r\n                        }\r\n                        <select onChange = {this.selectOption} >\r\n                            <option value = 'empty'>--------</option>\r\n                            <option value = 'landing'>Landing</option>\r\n                            <option value = 'portfolio'>Portfolio</option>\r\n                        </select>\r\n                        <input \r\n                            onClick = {this.addNewProject}\r\n                            className = 'acceptButton'\r\n                            disabled = {this.state[this.state.workMode].disabled}\r\n                            type = 'button'\r\n                            value = 'Submit'\r\n                        />\r\n                            <input onClick = {this.cancel} type ='button' value = 'Cancel' />\r\n                    </div>\r\n                )\r\n            case 'Search':\r\n                console.log('Search render');\r\n                return (\r\n                    <Fragment>\r\n                        <div className = 'Modal Modal-search'>\r\n                            <h3>Search background image</h3>\r\n                            { this.state.images.error ?\r\n                                <span className = 'error'>{this.state.images.error}</span> : null\r\n                            }\r\n                            <input ref = {this.refSearch} type = 'text' placeholder = \"Photo name\" />\r\n                            <input \r\n                                disabled = {this.state.images.buttonSearchDisabled} \r\n                                className = 'acceptButton' \r\n                                type = 'button' \r\n                                value = 'Search'\r\n                                onClick = {this.searchBackground}\r\n                            />\r\n                            <input onClick = {this.cancel} type ='button' value = 'Cancel' />\r\n                            {\r\n                                this.state.images.imageBoxView ?\r\n                                <div className = 'searchResultBox'>\r\n                                    {this.makeImageResultBox([...this.state.images['images']])}\r\n                                </div>\r\n                                : null\r\n                            }\r\n                        </div>\r\n                        {  this.state.imageMenuActive ?\r\n                            <div className = 'ActionModalSearch'>\r\n                            <button onClick = {this.showImage} className = 'actionModalSearch__view'>\r\n                                <Icon path = '/img/view.png' />\r\n                            </button>\r\n                            <button onClick = {this.setSelectedImage} className = 'actionModalSearch__settings'>\r\n                                <Icon path = '/img/settings.png' />\r\n                            </button>\r\n                            </div>\r\n                            : null\r\n                        }\r\n                    </Fragment>\r\n                )\r\n            default: return <Fragment></Fragment>\r\n        }\r\n    }\r\n\r\n    componentDidMount = event => {\r\n        if (this.state.workMode === 'Search')\r\n            eventEmitter.on('EventShowMenuImage', this.showMenuImage);\r\n    }\r\n\r\n    componentWillUnmount = event => {\r\n        if (this.state.workMode === 'Search')\r\n            eventEmitter.off('EventShowMenuImage', this.showMenuImage);\r\n    }\r\n}\r\n\r\nexport default ModalWindow;\r\n\r\n","import {createProjectAction, errorAction} from '../actions';\r\n\r\n\r\nconst middlewareCreateProject = (uid, list, title, type) => async (dispatch,getState, {firebase}) => {\r\n    let lastProject = [...list];\r\n    const lastIndex = lastProject.length  ? lastProject[lastProject.length-1].id + 1 : 0;\r\n    lastProject.push({\"id\": lastIndex, \"title\": title, \"type\": type, component: []});\r\n\r\n    await firebase.db.collection(\"users\").doc(uid).update({\r\n        'projects': lastProject,\r\n    })\r\n    .then (() => dispatch(createProjectAction(lastProject)))\r\n    .catch(error => {\r\n        console.error(error.message);\r\n        dispatch(errorAction(error.message));\r\n    })\r\n};\r\n\r\nexport {\r\n    middlewareCreateProject\r\n}","import React, {useState} from 'react';\r\nimport eventEmitter from '../../EventEmitter';\r\nimport {withRouter, Redirect} from 'react-router-dom';\r\n\r\nfunction Item(props) {\r\n\r\n    const [path] = useState( `/Cabinet/Build/${props.id}`);\r\n\r\n    let [canBuild,setCanBuild] = useState(false);\r\n\r\n    const [id] = useState(props.id);\r\n    const [name] = useState(props.name);\r\n    const [type] = useState(props.type);\r\n\r\n\r\n    const build = event => {\r\n        if(props.location.pathname !== path)\r\n            setCanBuild(true);\r\n        event.stopPropagation();\r\n    };\r\n\r\n    const deleteItem = event => {\r\n        eventEmitter.emit('EventDeleteItem',{id: props.id, name: props.name, type: props.type});\r\n        event.stopPropagation();\r\n    };\r\n\r\n    if (canBuild) return <Redirect to = {path} />\r\n    else return (\r\n            <div className = 'item' data-id = {id}>\r\n                <p className = 'ProjectName'>{name}</p>\r\n                <p className = 'ProjectType'>{type}</p>\r\n                <div className = 'projectController'>\r\n                <input onClick = {build} className = 'projectControllerButton_enter' type = 'button' value = 'enter build' />\r\n                <input onClick = {deleteItem} className = 'projectControllerButton_delete' type = 'button' value = 'delete' />\r\n                </div>\r\n            </div>\r\n        )\r\n}\r\n\r\nexport default withRouter(Item);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport {middlewareCreateProject} from '../../redux/middleware/createProjectMiddleware';\r\n\r\nimport './list.scss';\r\n\r\nimport Item from './Item';\r\nimport eventEmitter from '../../EventEmitter.js';\r\n\r\nclass List extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        children: PropTypes.shape({\r\n            projects: PropTypes.array.isRequired,\r\n           count: PropTypes.number.isRequired,\r\n        }),\r\n        list: PropTypes.array.isRequired,\r\n    }\r\n\r\n    state = {\r\n        redirect: false,\r\n    }\r\n\r\n    addNewProject = (item) => {\r\n        if (this.props.idUser) {\r\n            this.props.dispatch(middlewareCreateProject(this.props.idUser, this.props.list, item.title, item.type));\r\n        } else this.setState({...this.state, redirect: true});\r\n    }\r\n\r\n\r\n    makeList = (list) => {\r\n\r\n        return list.map (project => {\r\n\r\n            return(\r\n                <Item\r\n                    key = {project.id}\r\n                    id = {project.id}\r\n                    name = {project.title}\r\n                    type = {project.type}\r\n                />\r\n            )\r\n        });\r\n    }\r\n\r\n    render(){\r\n        if (this.state.redirect)\r\n            return <Redirect to = { '/'} />\r\n            else return (\r\n                    <div className = 'projectsList__list'>\r\n                        {this.makeList([...this.props.list])}\r\n                    </div>\r\n                )\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        eventEmitter.on('EventAddProject',this.addNewProject);\r\n    }\r\n\r\n      componentWillUnmount = () => {\r\n        eventEmitter.off('EventAddProject',this.addNewProject);\r\n      }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        idUser: state.cabinet.idUser,\r\n        list: [...state.cabinet.projects]\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(List);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nimport List from '../List/List.jsx';\r\n\r\nimport './ProjectsSection.scss';\r\n\r\nclass ProjectsSection extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        projects: PropTypes.array,\r\n    }\r\n\r\n    render(){\r\n        return (\r\n                <section className = 'projectsList'>\r\n                <div className = 'container'>\r\n                <div className = 'flex-column'>\r\n                        <div className = 'projectsList__about'>\r\n                            <h3>Your Projects</h3>\r\n                        </div>\r\n                        <List />\r\n                    </div>\r\n                </div>\r\n                </section>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default ProjectsSection;","import React,{Fragment} from 'react';\nimport PropTypes from 'prop-types';\nimport eventEmitter from '../../EventEmitter.js';\nimport {Redirect} from 'react-router-dom';\nimport withFirebase from '../../components/firebaseHOC';\n\nimport {middlewareLogOutUser} from '../../redux/middleware/loadUserMiddleware';\nimport middlewareDelete from '../../redux/middleware/middlewareDelete';\nimport Loader from '../../components/loading/Loader';\nimport {connect} from 'react-redux';\n\nimport Header from '../../components/header/Header';\nimport Modal from '../../components/modalWindow/ModalWindow';\nimport ProjectsSection from '../../components/ProjectsSection/ProjectsSection';\n\nimport './Cabinet.scss';\n\nconst title = require('../../config.json').title;\n\nclass Cabinet extends React.PureComponent {\n\n  static propTypes = {\n    firebase: PropTypes.object.isRequired\n  }\n\n  state = {\n    workMode: 'default',\n  }\n\n  logOut = event => {\n    this.props.dispatch(middlewareLogOutUser(this.props.idUser));\n  }\n\n  deletItem = event => {\n    this.props.dispatch(middlewareDelete({...event, uid: this.props.firebase.getCurrentUser().uid}));\n  }\n\n  changeWorkMode = event => {\n    this.setState ({\n      ...this.state,\n      workMode: event.action,\n    });\n  }\n\n  render(){\n    if (this.props.active){\n      console.log('CAbinet');\n      return (\n        <Fragment>\n          <Header title = {title} idUser = {this.props.idUser} />\n          {(this.state.workMode === 'newProject') ? <Modal workMode = {this.state.workMode} /> : null}\n            <ProjectsSection />\n        </Fragment>\n      )\n    } else if (!this.props.firebase.getCurrentUser()) return <Redirect to = { '/'} />\n    else return <Loader path = '/img/loading.gif' type = 'Cabinet' />\n    }\n\n\n  componentDidMount = () => {\n    eventEmitter.on('EventDeleteItem', this.deletItem);\n    eventEmitter.on('EventChangeWorkMode', this.changeWorkMode);\n  }\n\n  componentWillUnmount = () => {\n    eventEmitter.off('EventDeleteItem', this.deletItem);\n    eventEmitter.off('EventChangeWorkMode', this.changeWorkMode);\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    idUser: state.cabinet.idUser,\n    projects: [...state.cabinet.projects],\n    active: state.cabinet.active\n  }\n}\n\n\n\nexport default connect(mapStateToProps)(withFirebase(Cabinet));\n","import React, {Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nimport withFirebase from '../../components/firebaseHOC';\r\nimport Header from '../../components/header/Header';\r\n\r\nimport './about.scss';\r\n\r\nclass About extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        config: PropTypes.object.isRequired,\r\n        firebase: PropTypes.object.isRequired,\r\n    }\r\n\r\n    state = {\r\n        config: this.props.config\r\n    };\r\n\r\n    render(){\r\n        if (this.props.firebase.getCurrentUser()) {\r\n            const { config } = this.state;\r\n            return (\r\n                <Fragment>\r\n                    <Header title = {config.title} />\r\n                    <section className = 'About'>\r\n                        <div className = 'container'>\r\n                            <div className = 'col-12'>\r\n                                <div className = 'information'>\r\n                                <img alt = 'img' className = 'logoAbout' src = {process.env.PUBLIC_URL + '/img/about.jpg'}/>\r\n                                    <p className ='developer'><span>Developer:</span> {config.about.developer}</p>\r\n                                    <p className = 'year'><span>Year:</span> {config.about.year}</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </section>\r\n                </Fragment>\r\n            )\r\n        } else return <Redirect to = { '/'} />\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default withFirebase(About);","import {errorAction, loadUpdateCurrentProject} from '../actions';\r\n\r\nconst updateMiddleware = (item) => async (dispatch,getState, {firebase}) => {\r\n    console.log('update');\r\n\r\n    let newProjects = item.projects.map(project => {\r\n        if (project.id === item.idProject) { project.component = [...item.component] }\r\n        return project;\r\n    });\r\n    await firebase.db.collection(\"users\").doc(item.uid).update({\r\n        'projects': JSON.parse(JSON.stringify(newProjects))\r\n    })\r\n    .then(response => {\r\n        let project = item.projects.find(itemdb => itemdb.id === item.idProject);\r\n        dispatch(loadUpdateCurrentProject({component: [...project.component], idProject: item.idProject}))\r\n    })\r\n    .catch(error => dispatch(errorAction(error.message)));\r\n};\r\n\r\nexport default updateMiddleware;","import React,{useState} from 'react';\r\nimport eventEmitter from '../../EventEmitter';\r\n\r\nimport './imageViewer.scss';\r\n\r\nfunction ImageViewer(props){\r\n\r\n    let [path] = useState(props.path);\r\n\r\n    const closeViewer = event => {\r\n        eventEmitter.emit(\"EventImageView\", { action: false, target: null});\r\n        event.stopPropagation();\r\n    }\r\n\r\n    return (\r\n        <div onClick = {closeViewer} className = 'ImageViewer'>\r\n            <img src = {path} alt = 'fullImage' />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ImageViewer;","import React, {Fragment} from 'react';\r\nimport eventEmitter from '../../EventEmitter';\r\nimport PropTypes from 'prop-types';\r\nimport { SketchPicker } from 'react-color';\r\nimport './instrumentsPanel.scss';\r\n\r\nimport Icon from '../Icon/icon';\r\n\r\nclass InstrumentsPanel extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        instrumentPanel:  PropTypes.object.isRequired,\r\n        editComponent: PropTypes.object.isRequired\r\n    };\r\n\r\n    state = {\r\n        instrumentPanel: {...this.props.instrumentPanel},\r\n        componentsStats: {\r\n            content: null,\r\n            fontSize: null,\r\n            color: null,\r\n            backgroundImage: null,\r\n            image: null,\r\n            coords: {left: null, top: null} // x, y\r\n        },\r\n        images: null,\r\n    };\r\n\r\n    updateSizeText = eventSize => {\r\n        this.setState({\r\n            ...this.state, \r\n            instrumentPanel: {...this.state.instrumentPanel},\r\n            componentsStats: {...this.state.componentsStats, fontSize: eventSize}\r\n        });\r\n    };\r\n\r\n    closePanel = event => {\r\n        eventEmitter.emit('EventClosePanel', {close: false});\r\n    };\r\n\r\n    setSize = event => {\r\n        // let {fontSize} = this.state.componentsStats;\r\n        let {idComponent} = this.state.instrumentPanel;\r\n        let size = event.target.value > 200 ? 200 : event.target.value;\r\n        this.setState({\r\n            ...this.state, \r\n            instrumentPanel: {...this.state.instrumentPanel},\r\n            componentsStats: {...this.state.componentsStats,fontSize: size}\r\n        },\r\n            () => eventEmitter.emit(`EventChangeSizeText${idComponent}`, {size: size })\r\n        );\r\n\r\n        event.stopPropagation();\r\n    };\r\n\r\n    setContent = event => {\r\n        let {idComponent} = this.state.instrumentPanel;\r\n        let contentValue = event.target.value;\r\n        this.setState({\r\n            ...this.state, \r\n            instrumentPanel: {...this.state.instrumentPanel},\r\n            componentsStats: {...this.state.componentsStats,content: contentValue}\r\n        },\r\n        () => eventEmitter.emit(`EventChangeContentText${idComponent}`,{content: contentValue}));\r\n        event.stopPropagation();\r\n    };\r\n\r\n    updatePosition = eventItem => {\r\n\r\n        this.setState({\r\n            ...this.state, \r\n            componentsStats: {\r\n                ...this.state.componentsStats,\r\n                coords: {\r\n                    ...this.state.componentsStats.coords,\r\n                    left: eventItem.x,\r\n                    top: eventItem.y\r\n                }\r\n            }\r\n        });\r\n    };\r\n\r\n    setColor = event => {\r\n        this.setState({...this.state,\r\n            instrumentPanel:{\r\n                ...this.state.instrumentPanel,\r\n                colorPickerActive: this.state.instrumentPanel.colorPickerActive ? false : true\r\n            }\r\n        });\r\n        event.stopPropagation();\r\n    };\r\n\r\n    updateBimageStats = eventItem => {\r\n        const {urlFull} = eventItem;\r\n        this.setState({\r\n            ...this.state,\r\n            componentsStats:{\r\n                ...this.state.componentsStats,\r\n                backgroundImage: urlFull\r\n            }\r\n        });\r\n    };\r\n\r\n    handleChangeComplete = event => {\r\n\r\n        const {rgb} = event;\r\n        let colorRGB = `rgb(${rgb.r},${rgb.g},${rgb.b},${rgb.a})`;\r\n\r\n        let {idComponent} = this.state.instrumentPanel;\r\n        if (this.state.instrumentPanel.target === 'background'){\r\n            this.setState({\r\n                ...this.state,\r\n                componentsStats: {...this.state.componentsStats,color: colorRGB}\r\n            }, () => eventEmitter.emit(`EventChangeColorBackground${idComponent}`, colorRGB));\r\n        }\r\n\r\n        else if (this.state.instrumentPanel.target === 'text') {\r\n            this.setState({\r\n                ...this.state,\r\n                componentsStats: {...this.state.componentsStats,color: colorRGB}\r\n            },\r\n            () => eventEmitter.emit(`EventChangeColorText${idComponent}`, colorRGB));\r\n        }\r\n\r\n    };\r\n\r\n    saveChanges = event => {\r\n        eventEmitter.emit(\"EventSaveChangesComponent\", {\r\n            ...this.state.componentsStats,\r\n            type: this.state.instrumentPanel.target\r\n        });\r\n\r\n        event.stopPropagation();\r\n    }\r\n\r\n    searchImage = event => {\r\n\r\n        let {idComponent} = this.state.instrumentPanel;\r\n        eventEmitter.emit('EventModalSearchOn', {idComponent: idComponent});\r\n\r\n        event.stopPropagation();\r\n    };\r\n\r\n    makePanelInstruments = (type) => {\r\n\r\n        let {colorPickerActive} = this.state.instrumentPanel;\r\n        let {fontSize} = this.state.componentsStats;\r\n            switch (type){\r\n                case 'text':\r\n                    return (\r\n                        <Fragment>\r\n                        <p className = 'titleInstument'>Color: </p>\r\n                        <input onClick = {this.setColor} className = 'button_switchColor' type = 'button' value = 'color pick' />\r\n                        <p className = 'titleInstument'>Text size: </p>\r\n                        <input \r\n                            onChange = {this.setSize} \r\n                            type=\"number\"\r\n                            min = '10' max = '200'\r\n                            value = {fontSize ? fontSize : 120 }\r\n                        />\r\n                            { colorPickerActive ?\r\n                                <SketchPicker\r\n                                onChangeComplete={this.handleChangeComplete}\r\n                                />\r\n                                : null\r\n                            }\r\n                        <p className = 'titleInstument'>Content: </p>\r\n                        <input onChange = {this.setContent} maxLength = '20' type = 'text' defaultValue = 'Title' />\r\n                        <input onClick = {this.saveChanges} className = 'saveButtonInstument' type = 'button' value = 'save changes' />\r\n                        </Fragment>\r\n                )\r\n                case 'background': \r\n                    return (\r\n                        <Fragment>\r\n                        <p className = 'titleInstument'>Color: </p>\r\n                        <input onClick = {this.setColor} className = 'button_switchColor' type = 'button' value = 'color pick' />\r\n                            { colorPickerActive ?\r\n                                <SketchPicker\r\n                                onChangeComplete={this.handleChangeComplete}\r\n                                />\r\n                                : null\r\n                            }\r\n                            <input onClick = {this.searchImage} className = 'ImageSearchButton' type = 'button' value = 'background-image' />\r\n                            <input onClick = {this.saveChanges} className = 'saveButtonInstument' type = 'button' value = 'save changes' />\r\n                        </Fragment>\r\n                    )\r\n                default: return <p className = 'warningInstruments'>Select elements for accses edit instruments</p>\r\n            }\r\n    };\r\n\r\n    componentDidUpdate = (oldProps, oldState) => {\r\n        let targetBool = oldState.instrumentPanel.target !== this.props.instrumentPanel.target;\r\n        let idBool = oldState.instrumentPanel.idComponent !== this.props.instrumentPanel.idComponent;\r\n        console.log(this.props.instrumentPanel);\r\n        if (idBool || targetBool)\r\n            this.setState({\r\n                ...this.state,\r\n                instrumentPanel: {...this.props.instrumentPanel, colorPickerActive: false},\r\n                componentsStats: {\r\n                    content: null, fontSize: null, color: null,\r\n                    backgroundImage: null, image: null,\r\n                    coords: {left: null, top: null} // x, y\r\n                },\r\n            })\r\n    };\r\n\r\n    componentDidMount = event => {\r\n        eventEmitter.on(\"EventUpdateSizeText\", this.updateSizeText);\r\n        eventEmitter.on(\"EventSetBImageInstumentPanel\", this.updateBimageStats);\r\n        eventEmitter.on(\"EventUpdatePosition\", this.updatePosition);\r\n    };\r\n\r\n    componentWillUnmount = event => {\r\n        eventEmitter.off(\"EventUpdateSizeText\", this.updateSizeText);\r\n        eventEmitter.off(\"EventUpdatePosition\", this.updatePosition);\r\n    };\r\n\r\n    render(){\r\n        let { instrumentActive } = this.state.instrumentPanel;\r\n        return (\r\n            <Fragment>\r\n                <div  className = 'instumentsPanel'>\r\n                <button onClick = {this.closePanel} className = 'closeInstrumentsPanel'><Icon path = '/img/close.svg' /></button>\r\n                    <h3>Instruments</h3>\r\n                    {\r\n                        instrumentActive ? \r\n                        <p className = 'TextComponent'>{this.state.instrumentPanel.target}</p>\r\n                        : null\r\n                    }\r\n                    {\r\n                        instrumentActive ?\r\n                        <div  className= 'instuments'>{this.makePanelInstruments(this.state.instrumentPanel.target)}</div>\r\n                        : null\r\n                    }\r\n                </div>\r\n            </Fragment>\r\n        )\r\n    };\r\n};\r\n\r\nexport default InstrumentsPanel;","import React, {useEffect, useState} from 'react';\r\nimport eventEmitter from '../../../EventEmitter';\r\nimport styled from 'styled-components';\r\n\r\n\r\nconst Background = styled.div`\r\n    position: relative;\r\n    width: 100%;\r\n    height: 95vh;\r\n    background-size: cover;\r\n    background-color: ${props => props.backgroundColor};\r\n    background-image: url(${props => props.backgroundImage});\r\n`;\r\n\r\nconst BackgroundComponent = props => {\r\n\r\n    const [id] = useState(props.id);\r\n\r\n    const [count, setCount] = useState(0);\r\n    let boxComponent = React.createRef();\r\n\r\n    let [backgroundColor, setBgColor] = useState(props.background);\r\n    let [backgroundImage, setImage] = useState(props.backgroundImage ? props.backgroundImage : null);\r\n\r\n    const saveWidth = event => {\r\n        setCount(count + 1);\r\n        boxComponent.current.focus();\r\n        let boxInform =  boxComponent.current.getBoundingClientRect();\r\n        eventEmitter.emit('EventSaveWidth', {width: boxInform.width, height: boxInform.height});\r\n    }\r\n\r\n    const openBgInstruments = event => {\r\n        console.log(Background);\r\n        eventEmitter.emit('EventInstrumentPanel',{\r\n            target: 'background',\r\n            id: id,\r\n        });\r\n        event.stopPropagation();\r\n    }\r\n\r\n    const changeColor = color => {\r\n        setBgColor(color);\r\n    }\r\n\r\n    const setBackgroundImage = event => {\r\n        const {urlFull} = event;\r\n        setImage(urlFull);\r\n    };\r\n\r\n    const didUpdate = () => {\r\n        console.log('didUpdate');\r\n        if (count === 0 ) saveWidth();\r\n        eventEmitter.on(`EventChangeColorBackground${id}`, changeColor);\r\n        eventEmitter.on(`EventSetBackgroundImage${id}`, setBackgroundImage);\r\n        return () => {\r\n            eventEmitter.off(`EventChangeColorBackground${id}`, changeColor);\r\n            eventEmitter.off(`EventSetBackgroundImage${id}`, setBackgroundImage);\r\n        }\r\n    }\r\n\r\n    useEffect(didUpdate);\r\n    return (\r\n        <Background\r\n            ref  = {boxComponent}\r\n            onClick={openBgInstruments}\r\n            backgroundColor = {backgroundColor}\r\n            backgroundImage = {backgroundImage}\r\n        >\r\n            {props.children}\r\n        </Background>\r\n    )\r\n}\r\n\r\nexport default BackgroundComponent;","\r\nimport React, {useEffect, useState} from 'react';\r\nimport eventEmitter from '../../../EventEmitter';\r\nimport styled from 'styled-components';\r\n\r\n\r\nconst Title = styled.h1.attrs(props => ({\r\n    style: {\r\n        display: props.shadowDisplay ? 'none' : 'block',\r\n        left: props.coordX ? props.coordX : '50%',\r\n        top:  props.coordY,\r\n}}))`\r\n    position: absolute;\r\n    transform: translate(-50%);\r\n    font-size: ${props => props.size};\r\n    color: ${props => props.textColor};\r\n    text-align: center;\r\n    margin: 0;\r\n`;\r\n\r\n// left: ${props => props.coordX ? props.coordX : '50%'};\r\n// top:  ${props => props.coordY};\r\n\r\nconst TextComponent = props =>  {\r\n\r\n    const [id] = useState(props.id);\r\n\r\n    console.log ('text');\r\n    const [sizeParenBox] = useState({...props.sizeParenBox});\r\n\r\n    let [colorText, setColorText] = useState(props.color);\r\n    let [sizeText, setSizeText] = useState(props.size ? props.size : 120);\r\n    let [contentText, setText] = useState(props.children);\r\n    const [shiftCoords, setShiftCoords] = useState(null)\r\n    const [dragNdrop, setDragNdrop] = useState(null);\r\n\r\n    const openTitleInstruments = event => {\r\n\r\n        eventEmitter.emit(`EventInstrumentPanel`,{\r\n            target: 'text',\r\n            id: id,\r\n            sizeTextValue: sizeText\r\n        });\r\n        event.stopPropagation();\r\n    }\r\n\r\n    const changeColorText = color => {\r\n        setColorText(color);\r\n    }\r\n\r\n    const changeSizeText = eventSize => {\r\n        const {size} = eventSize;\r\n        setSizeText(size);\r\n    }\r\n\r\n    const changeContentText = eventContent => {\r\n        const {content} = eventContent;\r\n        setText(content);\r\n    }\r\n\r\n\r\n    const didUpdate = event => {\r\n        eventEmitter.on(`EventChangeColorText${id}`, changeColorText);\r\n        eventEmitter.on(`EventChangeSizeText${id}`, changeSizeText);\r\n        eventEmitter.on(`EventChangeContentText${id}`, changeContentText);\r\n        return () => {\r\n            eventEmitter.off(`EventChangeColorText${id}`, changeColorText);\r\n            eventEmitter.off(`EventChangeSizeText${id}`, changeSizeText);\r\n            eventEmitter.off(`EventChangeContentText${id}`, changeContentText);\r\n        }\r\n    }\r\n\r\n    const saveCoords = event => {\r\n\r\n        let rect = event.target.getBoundingClientRect();\r\n        let left = rect.left;\r\n        let top = rect.top;\r\n        let width = rect.width;\r\n        let height = rect.height;\r\n        setShiftCoords({x: event.pageX - left - width/2, y: event.pageY - top + height/2.8});\r\n\r\n        event.stopPropagation();\r\n    }\r\n\r\n    const moveText = event => {\r\n\r\n        let coordX = event.pageX - shiftCoords.x;\r\n        let coordY = event.pageY - shiftCoords.y;\r\n        console.log(Title);\r\n        coordX = coordX <= 130 ? 130 : coordX;\r\n        coordY = coordY <= 0 ? 0 : coordY;\r\n        console.log(sizeParenBox);\r\n        let convertToPercentX = (coordX * 100) / sizeParenBox.width;\r\n        let convertToPercentY = (coordY * 100) / sizeParenBox.height;\r\n\r\n        const position = {\r\n            x: convertToPercentX + '%', \r\n            y: convertToPercentY + '%', \r\n            shadowDisplay: event.type === 'drag' ? true : false\r\n        };\r\n        setDragNdrop(position);\r\n        \r\n        if (event.type === 'dragend') \r\n            eventEmitter.emit('EventUpdatePosition', position);\r\n        event.stopPropagation();\r\n    }\r\n\r\n    const weelResizeText = event => {\r\n\r\n        if (event.shiftKey && event.deltaY === -100) {\r\n            let counter = sizeText + 1;\r\n            counter = counter > 200 ? 200 : counter;\r\n            setSizeText(counter);\r\n            eventEmitter.emit('EventUpdateSizeText', counter);\r\n        }\r\n\r\n        if (event.shiftKey && event.deltaY === 100) {\r\n            let counter = sizeText - 1;\r\n             counter = counter <= 10 ? 10 : counter;\r\n             setSizeText(counter);\r\n             eventEmitter.emit('EventUpdateSizeText', counter);\r\n            }\r\n        event.stopPropagation();\r\n    }\r\n    useEffect(didUpdate);\r\n\r\n    return (\r\n        <Title\r\n            onClick={openTitleInstruments}\r\n            textColor = {colorText ? colorText : 'red'}\r\n            size = {sizeText ? sizeText + 'px' : '120px'}\r\n            draggable = {true}\r\n            onMouseDown = {saveCoords}\r\n            onDrag   = {moveText}\r\n            onDragEnd = {moveText}\r\n            onWheel = {weelResizeText}\r\n            coordX = {dragNdrop ? dragNdrop.x : null}\r\n            coordY = {dragNdrop ? dragNdrop.y : null}\r\n            shadowDisplay = {dragNdrop ? dragNdrop.shadowDisplay : false}\r\n        >\r\n            {contentText}\r\n        </Title>\r\n    )\r\n}\r\n\r\nexport default TextComponent;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport TextComponent from '../buildComponents/components/Text';\r\nimport BackgroundComponent from '../buildComponents/components/Background';\r\n\r\nimport eventEmitter from '../../EventEmitter';\r\n\r\nimport './buildMenu.scss';\r\n\r\nclass BuildMenu extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        component: PropTypes.object\r\n    }\r\n\r\n    state = {\r\n        component: {...this.props.component},\r\n        sizeParenBox: {...this.props.sizeParenBox},\r\n        title: 'Title'\r\n    }\r\n\r\n    addText = event => {\r\n        let id = this.props.countComponents;\r\n        let component = [<TextComponent sizeParenBox = {{...this.props.sizeParenBox}} id = {id} key = {`text${id}`}>{this.state.title}</TextComponent>];\r\n        eventEmitter.emit('EventBuildHeaderComponents',{target: 'Header', type: 'text', component: component});\r\n        event.stopPropagation();\r\n    }\r\n\r\n    addBackground = event => {\r\n        let id = this.props.countComponents;\r\n        let background = [<BackgroundComponent id = {id} key = {`bg${id}`}/>];\r\n        eventEmitter.emit('EventBuildHeaderComponents',{target: 'Header', type: 'background', component: background});\r\n\r\n        event.stopPropagation();\r\n    }\r\n\r\n    render(){\r\n        console.log('menuBuild');\r\n        return (\r\n            <div className = 'ComponentsMenu'>\r\n                <button onClick = {this.addBackground} className = 'ImageTool CompoentnsMenu_button' ><span>Image</span></button>\r\n                <button onClick = {this.addText} className = 'TextTool CompoentnsMenu_button' ><span>Text</span></button>\r\n                <button \r\n                    disabled = {this.state.component.name !== 'Header' ? false : true}\r\n                    className = 'ButtonTool CompoentnsMenu_button' >\r\n                    <span>Button</span>\r\n                </button>\r\n                <button className = 'VideoTool CompoentnsMenu_button' ><span>Video</span></button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default BuildMenu;","import React,{Fragment} from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Icon from '../Icon/icon';\r\nimport BuildMenu from '../componentsBuildMenu/BuildMenu';\r\n\r\n\r\nconst ControllersBox = styled.div\r\n    .attrs(props =>({\r\n        style: {\r\n                left: props.coordX,\r\n                top: props.coordY,\r\n        }\r\n    })) `\r\n    position: absolute;\r\n    display: ${props => props.shadowDisplay}\r\n    `;\r\n\r\nclass Controllers extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        menuActive: PropTypes.bool,\r\n    }\r\n\r\n    state = {\r\n        viewComponentMenu: false,\r\n        shiftX: 0,\r\n        shiftY: 0,\r\n        coordsX: '50%',\r\n        coordsY: '0',\r\n        shadowDisplay: 'block'\r\n    }\r\n\r\n    componentMenu = (event) => {\r\n        this.setState({viewComponentMenu: this.state.viewComponentMenu ? false : true});\r\n        event.stopPropagation();\r\n    }\r\n\r\n    saveCoords = event => {\r\n        let left = this.controlBox.getBoundingClientRect().left;\r\n        let top = this.controlBox.getBoundingClientRect().top;\r\n        this.setState({...this.state, shiftX: event.pageX - left, \r\n        shiftY: event.pageY - top + 55 });\r\n\r\n        event.stopPropagation();\r\n    }\r\n\r\n    drag = event => {\r\n        if (!this.state.viewComponentMenu)\r\n            this.setState({\r\n                ...this.state,\r\n                coordsX: event.pageX - this.state.shiftX + 'px', \r\n                coordsY: event.pageY - this.state.shiftY + 'px',\r\n                shadowDisplay: event.type === 'drag' ? 'none' : 'block'\r\n            });\r\n        event.stopPropagation();\r\n    }\r\n\r\n    controlBox = null;\r\n    refControll = (node) => this.controlBox = node;\r\n\r\n\r\n    render(){\r\n        console.log('controllers');\r\n        return (\r\n            <Fragment>\r\n            { this.props.menuActive ?\r\n                <ControllersBox\r\n                ref = {this.refControll}\r\n                className = 'ControllersEditComponent'\r\n                coordX = {this.state.coordsX}\r\n                coordY = {this.state.coordsY}\r\n                draggable = {!this.state.viewComponentMenu}\r\n                onMouseDown = {this.saveCoords}\r\n                onClick = {this.componentMenu}\r\n                onDrag   = {this.drag}\r\n                onDragEnd = {this.drag}\r\n                shadowDisplay = {this.state.shadowDisplay}\r\n                >\r\n                    <Icon\r\n                        draggable = {true}\r\n                        onClick = {this.componentMenu}\r\n                        className = 'addButton'\r\n                        path = '/img/addButton.png'\r\n                    />\r\n                    {this.state.viewComponentMenu ? \r\n                        <BuildMenu\r\n                            sizeParenBox = {this.props.sizeParenBox}\r\n                            countComponents = {this.props.countComponents}\r\n                            component = {{...this.props.component}}\r\n                        /> : null\r\n                    }\r\n                </ControllersBox>\r\n                : null\r\n            }\r\n            </Fragment>\r\n        )\r\n    }\r\n\r\n    componentDidUpdate = () => {\r\n        console.log('componentDidUpdate controllers');\r\n    }\r\n    \r\n    componentDidMount = () => {\r\n        console.log('componentDidMount controllers');\r\n    }\r\n    \r\n}\r\n\r\nexport default Controllers;","import React, {Fragment} from 'react';\r\nimport eventEmitter from '../../../EventEmitter';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nimport BackgroundComponent from '../../buildComponents/components/Background';\r\nimport Controllers from '../../controllers/controllers';\r\n\r\n\r\nimport './headerBuild.scss';\r\n\r\nclass HeaderBuild extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        id: PropTypes.number.isRequired,\r\n    }\r\n\r\n    state = {\r\n        idProject: this.props.id,\r\n        component: {...this.props.children},\r\n        sizeParenBox: null,\r\n    }\r\n\r\n    saveWidth = eventItem => {\r\n        this.setState({sizeParenBox: {...eventItem}});\r\n    };\r\n\r\n\r\n    changeMode = (event) => {\r\n        if (!this.props.editStart) {\r\n            let rect = event.currentTarget.getBoundingClientRect();\r\n            const width = rect.width;\r\n            const height = rect.height;\r\n        eventEmitter.emit('EventModeEdit', {...this.state, width: width, height: height});\r\n        }\r\n    }\r\n\r\n    refBox = null;\r\n    refBackground = node => this.refBox = node;\r\n\r\n    render() {\r\n\r\n        console.log('header');\r\n        console.log(this.props);\r\n        return (\r\n            <Fragment>\r\n                <div onClick = {this.changeMode} className = 'Header'>\r\n                    <BackgroundComponent id = 'MainBackgroundHeader' background = 'grey'>\r\n                    {  this.props.children.build.componentJSX && this.props.children.build.type === 'text'  ?\r\n                            this.props.children.build.componentJSX : null\r\n                    }\r\n                    </BackgroundComponent>\r\n                    {!this.props.editStart ? <p className = 'warningEdit'>Click for start edit</p> : null}\r\n                    {!this.state.readyBuild ? \r\n                        <Controllers\r\n                            countComponents = {this.props.countComponents}\r\n                            menuActive = {this.props.menuActive}\r\n                            component = {{...this.state.component}}\r\n                            sizeParenBox = {this.state.sizeParenBox}\r\n                            mainWidth = {this.props.children.mainBoxWidth}\r\n                            mainHeight = {this.props.children.mainBoxHeight}\r\n\r\n                        />\r\n                        : null}\r\n                </div>\r\n            </Fragment>\r\n        )\r\n    }\r\n\r\n    componentDidMount = event => {\r\n        eventEmitter.on('EventSaveWidth', this.saveWidth);\r\n    }\r\n\r\n    componentWillUnmount = event => {\r\n        eventEmitter.off('EventSaveWidth', this.saveWidth);\r\n    }\r\n}\r\nexport default HeaderBuild;","import React,{Fragment} from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport {Redirect} from 'react-router-dom';\r\nimport eventEmitter from '../../EventEmitter';\r\n\r\nimport {loadCurrentProjectAction, exitProjectAction} from '../../redux/actions';\r\nimport updateMiddleware from '../../redux/middleware/updateMiddleware';\r\nimport withFirebase from '../../components/firebaseHOC';\r\nimport {connect} from 'react-redux';\r\n\r\nimport ImageViewer from '../../components/imageViewer/imageViewer';\r\nimport Loader from '../../components/loading/Loader';\r\nimport Header from '../../components/header/Header';\r\nimport InstrumentsPanel from '../../components/instrumentsPanel/InstrumentsPanel';\r\nimport ModalWindow from '../../components/modalWindow/ModalWindow';\r\nimport HeaderBuild from '../../components/buildComponents/header/headerBuild';\r\n\r\nimport './build.scss';\r\n\r\n\r\nclass Build extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        param: PropTypes.string,\r\n        match: PropTypes.shape({\r\n            params: PropTypes.shape({\r\n                param: PropTypes.string.isRequired\r\n            }).isRequired\r\n        }).isRequired\r\n    }\r\n\r\n    state = {\r\n            idProject: parseInt(this.props.match.params.param),\r\n            editComponent: {\r\n                name: null,\r\n                build: {\r\n                    name: null,\r\n                    target: null,\r\n                    type: null,\r\n                    mainBoxWidth: null,\r\n                    mainBoxHeight: null,\r\n                    component: [],\r\n                    componentJSX: []\r\n                },\r\n                edit: false\r\n            },\r\n            changeEdit: false,\r\n            instrumentPanel: {\r\n                colorPickerActive: false,\r\n                instrumentActive: false,\r\n                target: '',\r\n                idComponent: null,\r\n            },\r\n            menuActive: false,\r\n            editStart: false,\r\n            modalSearch: false,\r\n            modalImageViewer: {action: false, image: null },\r\n        }\r\n\r\n    modalSearchOn = event => {\r\n        this.setState({...this.state, modalSearch: this.state.modalSearch ? false : true});\r\n    }\r\n\r\n    imageViewerSwitch = event => {\r\n        this.setState({\r\n            ...this.state,\r\n            modalImageViewer: {\r\n                ...this.state.modalImageViewer, \r\n                action: event.action, \r\n                target: event.target\r\n            }\r\n        });\r\n    };\r\n\r\n    workModeEdit = itemEvent => {\r\n        if (!this.state.editStart || this.state.changeEdit)\r\n        this.setState({\r\n            ...this.state,\r\n            idProject: itemEvent.idProject,\r\n            editComponent: {\r\n                ...itemEvent.component,\r\n                mainBoxWidth: itemEvent.width,\r\n                mainBoxHeight: itemEvent.height\r\n            },\r\n            menuActive: true,\r\n            editStart: true\r\n        });\r\n\r\n    }\r\n\r\n    openInstrument = itemEvent => {\r\n        let targetEqual = this.state.instrumentPanel.target !== itemEvent.target;\r\n        let {instumentActive} = this.state.instrumentPanel;\r\n        if (targetEqual && this.state.editStart && !instumentActive)\r\n        this.setState({\r\n            ...this.state,\r\n            instrumentPanel: {\r\n                ...this.state.instrumentPanel,\r\n                instrumentActive: true,\r\n                sizeTextValue: itemEvent.sizeTextValue,\r\n                idComponent: itemEvent.id,\r\n                target: itemEvent.target\r\n            }\r\n        })\r\n    }\r\n\r\n    closePanel = event => {\r\n        this.setState({\r\n            ...this.state,\r\n            instrumentPanel: {\r\n                ...this.state.instrumentPanel,\r\n                colorPickerActive: false,\r\n                instrumentActive: event.close\r\n            }\r\n        });\r\n    };\r\n\r\n    addHeaderComponent = itemEvent => {\r\n\r\n        let {componentJSX} = this.state.editComponent.build;\r\n        this.setState({\r\n            ...this.state,\r\n            editComponent: {\r\n                ...this.state.editComponent,\r\n                build: {\r\n                    ...this.state.editComponent.build,\r\n                    target: itemEvent.target,\r\n                    type: itemEvent.type,\r\n                    componentJSX: [...componentJSX, ...itemEvent.component]},\r\n            },\r\n        });\r\n    };\r\n\r\n    saveChangesComponent = itemEvent => {\r\n        console.log(itemEvent);\r\n        let componentSaveInBase = {...itemEvent, name: this.state.editComponent.name};\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            editComponent: {\r\n                ...this.state.editComponent,\r\n                build: {\r\n                    ...this.state.editComponent.build,\r\n                    component: [...this.state.editComponent.build.component, componentSaveInBase]\r\n                }\r\n            }\r\n        }, () => (\r\n        this.props.dispatch(updateMiddleware({\r\n            uid: this.props.idUser,\r\n            projects: [...this.props.currentProject],\r\n            component: [...this.state.editComponent.build.component],\r\n            idProject: this.state.idProject}))\r\n        ));\r\n    };\r\n\r\n\r\n    render(){\r\n        console.log('render build');\r\n        let instrumentActive = this.state.instrumentPanel.instrumentActive;\r\n        if (this.props.active && this.props.loadProject){\r\n            console.log('build');\r\n            return (\r\n                    <Fragment key = 'build'>\r\n                    {   this.state.modalImageViewer.action ?\r\n                        <ImageViewer key = 'ImageViewer' path = {this.state.modalImageViewer.target} /> : null\r\n                    }\r\n                    {this.state.modalSearch ?\r\n                        <ModalWindow\r\n                            idComponent = {this.state.instrumentPanel.idComponent}\r\n                            key = 'ModalWindow' workMode = 'Search' /> : null\r\n                    }\r\n                    { instrumentActive ?\r\n                        <InstrumentsPanel\r\n                            key = 'InstrumentsPanel'\r\n                            editComponent =  {{...this.state.editComponent}}\r\n                            instrumentPanel = {{...this.state.instrumentPanel}}\r\n                        />\r\n                        : null\r\n                    }\r\n                        <Header key = 'Header' title = \"Constructor\"  />\r\n                        <HeaderBuild\r\n                                key = 'HeaderBuild'\r\n                                editStart = {this.state.editStart}\r\n                                countComponents = {this.state.editComponent.build.componentJSX.length}\r\n                                menuActive = {this.state.menuActive}\r\n                                id = {this.state.idProject}\r\n                        >\r\n                            {{...this.state.editComponent, name: 'Header'}}\r\n                        </HeaderBuild>\r\n                    </Fragment>\r\n            )\r\n        } else if (!this.props.firebase.getCurrentUser()) return <Redirect to = { '/'} />\r\n        else return <Loader  key = 'Loader' path = '/img/loading.gif' type = 'build' />\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        console.log('componentDidUpdate');\r\n        if (prevProps.loadProject === this.props.loadProject && this.props.haveUpdateLoading) {\r\n            console.log('componentDidUpdate build dispatch');\r\n            let current =  this.props.currentProject.find(item => item.id === this.state.idProject)\r\n            this.props.dispatch(loadCurrentProjectAction({\r\n                id: current.id,\r\n                typeProject: current.type,\r\n                component: [...current.component]\r\n            }))\r\n        }\r\n    }\r\n    \r\n\r\n    componentDidMount = () => {\r\n        console.log('componentDidMount build');\r\n        if (this.props.active && !this.props.loadProject && this.props.haveUpdateLoading) {\r\n            console.log('componentDidMount build dispatch');\r\n            let current =  this.props.currentProject.find(item => item.id === this.state.idProject)\r\n            this.props.dispatch(loadCurrentProjectAction({\r\n                id: current.id,\r\n                typeProject: current.type,\r\n                component: [...current.component]\r\n            }))\r\n        };\r\n        eventEmitter.on('EventBuildHeaderComponents', this.addHeaderComponent);\r\n        eventEmitter.on('EventSaveChangesComponent', this.saveChangesComponent);\r\n        eventEmitter.on('EventClosePanel', this.closePanel);\r\n        eventEmitter.on('EventModalSearchOn', this.modalSearchOn);\r\n        eventEmitter.on('EventInstrumentPanel', this.openInstrument);\r\n        eventEmitter.on('EventImageView', this.imageViewerSwitch);\r\n        eventEmitter.on('EventModeEdit', this.workModeEdit);\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        console.log('componentWillUnmount');\r\n        if (this.props.active)  this.props.dispatch(exitProjectAction(true));\r\n        eventEmitter.off('EventBuildHeaderComponents', this.addHeaderComponent);\r\n        eventEmitter.off('EventSaveChangesComponent', this.saveChangesComponent);\r\n        eventEmitter.off('EventModalSearchOn', this.modalSearchOn);\r\n        eventEmitter.off('EventClosePanel', this.closePanel);\r\n        eventEmitter.off('EventInstrumentPanel', this.openInstrument);\r\n        eventEmitter.off('EventImageView', this.imageViewerSwitch);\r\n        eventEmitter.off('EventModeEdit', this.workModeEdit);\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n\r\n    console.log(\"mapStateToProps\" + state);\r\n    return {\r\n        ...state.builder,\r\n        active: state.cabinet.active,\r\n        idUser: state.cabinet.idUser,\r\n        currentProject: state.cabinet.projects\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(withFirebase(Build));","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport {Route, Switch} from 'react-router-dom';\r\n\r\nimport {middlewareLoadUserData} from './redux/middleware/loadUserMiddleware';\r\nimport {connect} from 'react-redux';\r\nimport withFirebase from './components/firebaseHOC';\r\nimport Loader from './components/loading/Loader';\r\n\r\nimport Index from './Pages/Index/Index';\r\nimport Cabinet from './Pages/Cabinet/Cabinet';\r\nimport About from './Pages/About/About';\r\nimport Build from './Pages/Build/Build';\r\nimport ErrorPage from './components/ErrorCatch/ErrorPage';\r\n\r\n// require('es6-promise').polyfill();\r\n\r\nclass App extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        config: PropTypes.object.isRequired,\r\n        firebase: PropTypes.object.isRequired,\r\n    }\r\n\r\n    state = {\r\n        firebase: this.props.firebase,\r\n        firebaseLoadState: false,\r\n    }\r\n\r\n    componentDidMount(){\r\n\r\n        this.props.firebase.auth.onAuthStateChanged((user) => {\r\n            \r\n            if (!this.state.firebaseLoadState){\r\n                if (user){console.log('load'); this.props.dispatch(middlewareLoadUserData(user.uid)); }\r\n                this.setState({...this.state, firebaseLoadState: true});\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    render(){\r\n        if (this.state.firebaseLoadState){\r\n            console.log('app');\r\n        return (\r\n                <Switch>\r\n                    <Route\r\n                        path = {'/'} exact\r\n                        render = {(props) => <Index {...props} />}\r\n                    />\r\n                    <Route path = '/Cabinet/' exact component = {Cabinet}/>\r\n                    <Route\r\n                        path = {'/Cabinet/About'}\r\n                        render = {(props) => <About {...props} config = {this.props.config} />}\r\n                    />\r\n                    <Route path = {'/Cabinet/Build/:param'} component = {Build}/>\r\n                    <Route path = {'*'} component = {Index} />\r\n                    <Route path = {'/crashPage'} component = {ErrorPage} />\r\n                </Switch>\r\n\r\n        )\r\n        } else return <Loader path = { '/img/loading.gif'} type = 'application' />\r\n    }\r\n}\r\n\r\n// const mapStateToProps = (state) => {\r\n//     return {\r\n//       active: state.cabinet.active\r\n//     }\r\n//   }\r\n\r\nexport default connect()(withFirebase(App));","\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\n\nimport ErrorBoundary from './components/ErrorCatch/ErrorBoundary';\nimport {HashRouter } from 'react-router-dom';\nimport {Provider} from 'react-redux';\nimport store from './redux/store';\nimport App from './App.jsx';\nimport 'normalize.css';\n\n\nconst config = require('./config.json');\n\nconsole.log('test production');\nReactDOM.render(\n        <HashRouter>\n            <ErrorBoundary>\n                <Provider store = {store}>\n                    <App config = {config} />\n                </Provider>\n            </ErrorBoundary>\n        </HashRouter >,\n        document.getElementById('root')\n);\n\nserviceWorker.unregister();\n\n"],"sourceRoot":""}