{"version":3,"sources":["serviceWorker.js","EventEmitter.js","components/ErrorCatch/ErrorPage.jsx","components/ErrorCatch/ErrorBoundary.jsx","Firebase/firebaseConfig.js","Firebase/Firebase.js","redux/actions.js","redux/reducerBuilder.js","redux/reducerCabinet.js","redux/reducers.js","redux/store.js","redux/middleware/loadUserMiddleware.js","components/firebaseHOC.jsx","components/loading/Loader.jsx","components/Registration/Registration.jsx","Pages/Index/Index.jsx","redux/middleware/middlewareDelete.js","components/Icon/icon.jsx","components/header/Header.jsx","components/imageViewer/imageItem.jsx","components/modalWindow/ModalWindow.jsx","redux/middleware/createProjectMiddleware.js","components/List/Item.jsx","components/List/List.jsx","components/ProjectsSection/ProjectsSection.jsx","Pages/Cabinet/Cabinet.jsx","Pages/About/About.jsx","redux/middleware/updateMiddleware.js","components/imageViewer/imageViewer.jsx","components/instrumentsPanel/InstrumentsPanel.jsx","components/buildComponents/components/Background.jsx","components/buildComponents/components/Text.jsx","components/componentsBuildMenu/BuildMenu.jsx","components/controllers/controllers.jsx","components/buildComponents/header/headerBuild.jsx","Pages/Build/Build.jsx","App.jsx","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","stream","EventEmitter","ErrorPage","redirect","update","event","_this","setState","eventEmitter","emit","this","react_default","a","createElement","react_router","to","class","className","onClick","React","Component","ErrorBoundary","hasError","updateApplication","componentDidMount","on","componentWillUnmount","off","info","ErrorCatch_ErrorPage","props","children","PureComponent","firebaseConfig","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","interfaceFirebase","require","Firebase","Object","classCallCheck","firebase","auth","db","rules","setPersistence","Auth","Persistence","email","password","signInWithEmailAndPassword","createUserWithEmailAndPassword","signOut","currentUser","saveSession","exitProjectAction","type","exit","loadCurrentProjectAction","id","typeProject","component","loadUserAction","active","idUser","uid","projects","errorAction","initialState","loadProject","haveUpdateLoading","idProject","combineReducers","builder","arguments","length","undefined","action","objectSpread","toConsumableArray","cabinet","map","item","middleware","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","thunk","withExtraArgument","reduxCatch","getState","lastAction","dispatch","debug","store","createStore","middlewareLogin","_ref2","asyncToGenerator","regenerator_default","mark","_callee","_ref","wrap","_context","prev","next","login","response","collection","doc","user","get","docUser","data","message","stop","_x","_x2","_x3","apply","middlewareLogOutUser","_ref6","_callee3","_ref5","_context3","_x7","_x8","_x9","withFirebase","assign","Loader","_useState","useState","path","slicedToArray","src","alt","emailRef","passwordRef","setRefEmail","node","setRefPassword","createUser","value","set","autoComplete","ref","Index","title","registrationActive","regStatus","wrongEnter","statusRegistration","additionalUserInfo","isNewUser","showBox","authTo","emailImput","passwordImput","e","currentSelected","components_Registration_Registration","connect","middlewareDelete","filter","itemdb","Icon","_useState3","_useState5","draggable","iconPath","CabinetIcon","Header","redirectAbout","redirectA","redirectCabinet","redirectC","logOut","stopPropagation","pathname","add","icon","withRouter","ImageItem","urls","regular","urlRegular","full","urlFull","_useState7","isFull","selected","url","ModalWindow","workMode","images","buttonSearchDisabled","selectedItem","showUrl","imageBoxView","newProject","validateName","validateType","disabled","name","imageMenuActive","warning","lengthMax","lengthMin","inputSearch","inputSelect","searchBackground","search","inages","isFetch","concat","ok","json","Error","results","showMenuImage","showImage","target","setSelectedImage","idComponent","makeImageResultBox","items","i","imageItem","key","addNewProject","mode","selectOption","inputs","defineProperty","lengthInput","cancel","refSelect","refSearch","onChange","placeholder","react","middlewareCreateProject","list","lastProject","lastIndex","push","_useState4","canBuild","setCanBuild","_useState9","data-id","List","makeList","project","List_Item","ProjectsSection","components_List_List","Cabinet","deletItem","getCurrentUser","changeWorkMode","header_Header","modalWindow_ModalWindow","components_ProjectsSection_ProjectsSection","about","developer","year","updateMiddleware","newProjects","JSON","parse","stringify","find","ImageViewer","InstrumentsPanel","instrumentPanel","componentsStats","content","fontSize","color","backgroundImage","image","coords","left","top","updateSizeText","eventSize","closePanel","close","setSize","size","setContent","contentValue","updatePosition","eventItem","x","y","setColor","colorPickerActive","updateBimageStats","handleChangeComplete","rgb","colorRGB","r","g","b","saveChanges","searchImage","makePanelInstruments","min","max","lib","onChangeComplete","maxLength","defaultValue","componentDidUpdate","oldProps","oldState","targetBool","instrumentActive","Background","styled","div","_templateObject","backgroundColor","BackgroundComponent","count","setCount","boxComponent","createRef","background","_useState6","setBgColor","_useState8","setImage","changeColor","setBackgroundImage","useEffect","current","focus","boxInform","getBoundingClientRect","width","height","saveWidth","Title","h1","attrs","style","display","shadowDisplay","coordX","coordY","Text_templateObject","textColor","TextComponent","sizeParenBox","colorText","setColorText","sizeText","setSizeText","_useState10","contentText","setText","_useState11","_useState12","shiftCoords","setShiftCoords","_useState13","_useState14","dragNdrop","setDragNdrop","changeColorText","changeSizeText","changeContentText","eventContent","moveText","pageX","pageY","position","sizeTextValue","onMouseDown","rect","onDrag","onDragEnd","onWheel","shiftKey","deltaY","counter","BuildMenu","addText","countComponents","Text","addBackground","components_Background","ControllersBox","controllers_templateObject","Controllers","viewComponentMenu","shiftX","shiftY","coordsX","coordsY","componentMenu","saveCoords","controlBox","drag","refControll","menuActive","componentsBuildMenu_BuildMenu","HeaderBuild","changeMode","editStart","currentTarget","refBox","refBackground","build","componentJSX","readyBuild","controllers","mainWidth","mainBoxWidth","mainHeight","mainBoxHeight","Build","parseInt","params","param","editComponent","edit","changeEdit","modalSearch","modalImageViewer","modalSearchOn","imageViewerSwitch","workModeEdit","itemEvent","openInstrument","targetEqual","instumentActive","addHeaderComponent","saveChangesComponent","componentSaveInBase","currentProject","imageViewer_imageViewer","instrumentsPanel_InstrumentsPanel","header_headerBuild","prevProps","prevState","_this2","App","firebaseLoadState","onAuthStateChanged","_ref4","_callee2","_ref3","_context2","_x4","_x5","_x6","_this3","exact","render","Pages_Index_Index","Pages_About_About","ReactDOM","react_router_dom","ErrorCatch_ErrorBoundary","es","src_App","document","getElementById","URL","href","origin","addEventListener","fetch","contentType","headers","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.ef5d655e.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log('This web app is being served cache-first by a service worker.');\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {EventEmitter} from 'events';\r\nconst stream = new EventEmitter();\r\nexport default stream;","import React from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\nimport eventEmitter from '../../EventEmitter';\r\n\r\nimport './errorPage.scss';\r\n\r\n\r\nclass ErrorPage extends React.Component {\r\n\r\n    state = {\r\n        redirect: false,\r\n    }\r\n\r\n    update = event => {\r\n       this.setState({redirect: true},\r\n        () => eventEmitter.emit('EventErrorCatchUpdate'));\r\n    }\r\n\r\n    render(){\r\n        if (this.state.redirect) return <Redirect to = '/' />\r\n        return (\r\n        <div class = 'container'>\r\n            <div class = 'flex-column'>\r\n                <h1>Application crash</h1>\r\n                <button className = 'button_updateApp' onClick = {this.update}>Update</button>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ErrorPage;","\r\n\r\nimport React from 'react';\r\nimport eventEmitter from '../../EventEmitter';\r\nimport ErrorPage from './ErrorPage';\r\nclass ErrorBoundary extends React.PureComponent {\r\n\r\n      state = { \r\n        hasError: false,\r\n      };\r\n\r\n    static getDerivedStateFromError(error) {\r\n        console.log(error);\r\n      // Обновить состояние с тем, чтобы следующий рендер показал запасной UI.\r\n      return { hasError: true};\r\n    }\r\n\r\n    updateApplication = event => {\r\n      this.setState({hasError: false});\r\n    };\r\n  \r\n    componentDidCatch(error, info) {\r\n      // Можно также сохранить информацию об ошибке в соответствующую службу журнала ошибок\r\n     console.error(error + \",\" + info);\r\n    }\r\n  \r\n    render() {\r\n      if (this.state.hasError) return <ErrorPage />\r\n      return this.props.children;\r\n    }\r\n\r\n    componentDidMount = () => {\r\n      eventEmitter.on('EventErrorCatchUpdate',this.updateApplication);\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n      eventEmitter.off('EventErrorCatchUpdate',this.updateApplication);\r\n    }\r\n  }\r\n\r\n  export default ErrorBoundary;","// setings in root folder / firebase.env\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n    databaseURL: process.env.REACT_APP_DATABASE_URL,\r\n    projectId: process.env.REACT_APP_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n    appId: process.env.REACT_APP_APPID\r\n};\r\n\r\nexport {firebaseConfig}","import * as firebase from 'firebase/app';\r\nimport {firebaseConfig} from './firebaseConfig';\r\n\r\nconst auth = require('firebase/auth');\r\nconst firestore = require('firebase/firestore');\r\n\r\nclass Firebase {\r\n\r\n        constructor(){\r\n                firebase.initializeApp(firebaseConfig);\r\n                this.auth = firebase.auth();\r\n                this.db = firebase.firestore();\r\n        }\r\n\r\n        saveSession(rules){\r\n                return this.auth.setPersistence(firebase.auth.Auth.Persistence[rules]);\r\n        }\r\n\r\n        login(email, password){\r\n                return this.auth.signInWithEmailAndPassword(email, password);\r\n        }\r\n\r\n        registration(email, password){\r\n                return this.auth.createUserWithEmailAndPassword(email, password)\r\n        }\r\n\r\n        signOut(){\r\n                return this.auth.signOut()\r\n        }\r\n\r\n        getCurrentUser() {\r\n                return this.auth.currentUser\r\n        }\r\n}\r\n\r\nlet interfaceFirebase = new Firebase();\r\ninterfaceFirebase.saveSession('SESSION');\r\n\r\nexport default interfaceFirebase;\r\n\r\nexport { auth, firestore };\r\n\r\n","const CREATE_PROJECT = 'CREATE_PROJECT';\r\nconst LOAD_UPDATE_PROJECT = \"LOAD_UPDATE_PROJECT\";\r\nconst LOAD_CURRENT = 'LOAD_CURRENT';\r\nconst LOG_OUT_CABINET = 'LOG_OUT_CABINET';\r\nconst LOAD_USER_CABINET = 'LOAD_USER_CABINET';\r\nconst ERROR_CABINET = 'ERROR_CABINET';\r\nconst EXIT_PROJECT = 'EXIT_PROJECT';\r\n\r\nconst createProjectAction = (state) => {\r\n    return {\r\n        type: CREATE_PROJECT,\r\n        projects: state,\r\n    }\r\n}\r\n\r\nconst exitProjectAction = (state) => {\r\n    return {\r\n        type: EXIT_PROJECT,\r\n        exit: state\r\n    }\r\n}\r\n\r\nconst loadCurrentProjectAction = (state) => {\r\n    return {\r\n        type: LOAD_CURRENT,\r\n        id: state.id,\r\n        typeProject: state.typeProject,\r\n        component: state.component\r\n    }\r\n}\r\n\r\nconst loadUpdateCurrentProject = (state) => {\r\n    return {\r\n        type: LOAD_UPDATE_PROJECT,\r\n        idProject: state.idProject,\r\n        component: state.component\r\n    }\r\n}\r\n\r\nconst loadUserAction = (state) => {\r\n    return {\r\n        type: LOAD_USER_CABINET,\r\n        active: true,\r\n        idUser: state.uid,\r\n        error: '',\r\n        projects: state.projects\r\n    }\r\n}\r\n\r\nconst logOutAction = (state) => {\r\n\r\n    return {\r\n        type: LOG_OUT_CABINET,\r\n        active: false,\r\n        idUser: null,\r\n        error: '',\r\n        projects: []\r\n    }\r\n}\r\n\r\nconst errorAction = (state) => {\r\n    return {\r\n        type: ERROR_CABINET,\r\n        error: state\r\n    }\r\n}\r\n\r\nexport {\r\n    CREATE_PROJECT, createProjectAction, /* cabinet */\r\n    LOAD_USER_CABINET, loadUserAction, /* cabinet */\r\n    LOG_OUT_CABINET, logOutAction, /* cabinet */\r\n    LOAD_CURRENT, loadCurrentProjectAction, /* builder */\r\n    LOAD_UPDATE_PROJECT, loadUpdateCurrentProject,\r\n    EXIT_PROJECT, exitProjectAction,\r\n    ERROR_CABINET, errorAction, /* both */\r\n}","import {LOAD_CURRENT,LOAD_UPDATE_PROJECT, EXIT_PROJECT} from './actions';\r\n\r\nconst initialState = {\r\n    loadProject: false,\r\n    haveUpdateLoading: true,\r\n    idProject: null,\r\n    typeProject: null,\r\n    component: []\r\n};\r\nexport default (state = initialState, action) => {\r\n    switch (action.type){\r\n\r\n        case LOAD_CURRENT: {\r\n            return {\r\n                ...state,\r\n                haveUpdateLoading: state.haveUpdateLoading ? false : true,\r\n                loadProject: true,\r\n                idProject: action.id,\r\n                typeProject: action.typeProject,\r\n                component: [...action.component]\r\n            }\r\n        }\r\n\r\n        case LOAD_UPDATE_PROJECT: {\r\n            return {\r\n                ...state,\r\n                haveUpdateLoading: false,\r\n                component: [...action.component]\r\n            }\r\n        }\r\n\r\n        case EXIT_PROJECT: {\r\n            if (action.exit)\r\n            return {\r\n                ...state,\r\n                haveUpdateLoading: true,\r\n                loadProject: false,\r\n                idProject: null,\r\n                typeProject: null,\r\n                component: []\r\n            }\r\n            else return state;\r\n        }\r\n        default: return state;\r\n    }\r\n};","import {LOAD_USER_CABINET, LOG_OUT_CABINET, ERROR_CABINET, CREATE_PROJECT, LOAD_UPDATE_PROJECT} from './actions';\r\n\r\nconst initialState = {\r\n    active: false,\r\n    idUser: null,\r\n    projects: [],\r\n    error: null,\r\n    //dateConnect: new Date(Date.now()).toLocaleString().replace(/\\s/ig,'').split(','),\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case LOAD_USER_CABINET: {\r\n\r\n            return {\r\n                ...state,\r\n                active: action.active,\r\n                idUser: action.idUser,\r\n                projects: [...action.projects]\r\n            }\r\n        }\r\n\r\n        case CREATE_PROJECT: {\r\n            return {\r\n                ...state,\r\n                projects: [...action.projects]\r\n            }\r\n        }\r\n\r\n        case LOAD_UPDATE_PROJECT: {\r\n            return {\r\n                ...state,\r\n                projects: state.projects.map(item => {\r\n                    if (item.id === action.idProject)\r\n                        item.component = [...action.component]\r\n                return item;\r\n                })\r\n            }\r\n        }\r\n\r\n        case LOG_OUT_CABINET: {\r\n            return {\r\n                ...state,\r\n                active: false,\r\n                idUser: null,\r\n                projects: []\r\n            }\r\n        }\r\n\r\n        case ERROR_CABINET: {\r\n            return {\r\n                ...state,\r\n                error: action.error\r\n            }\r\n        }\r\n        default: return state;\r\n    }\r\n}\r\n\r\n","import {combineReducers} from 'redux';\r\nimport reducerBuilder from './reducerBuilder';\r\nimport reducerCabinet from './reducerCabinet';\r\n\r\nexport default combineReducers({\r\n    builder: reducerBuilder,\r\n    cabinet: reducerCabinet,\r\n});","import {createStore, applyMiddleware, compose} from 'redux';\r\nimport firebase from  '../Firebase/Firebase';\r\nimport reduxCatch from 'redux-catch';\r\nimport thunk from 'redux-thunk';\r\nimport combineReducers from './reducers';\r\n\r\nconst composeEnhancers =\r\n  typeof window === 'object' &&\r\n  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?\r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\r\n    }) : compose;\r\n\r\n    function errorHandler(error, getState, lastAction, dispatch) {\r\n      console.error(error);\r\n      console.debug('current state', getState());\r\n      console.debug('last action was', lastAction);\r\n      // optionally dispatch an action due to the error using the dispatch parameter\r\n    }\r\n\r\nconst middleware = composeEnhancers(\r\n  applyMiddleware(thunk.withExtraArgument({firebase})),\r\n  applyMiddleware(reduxCatch(errorHandler))\r\n);\r\nconst store = createStore(combineReducers, middleware);\r\n\r\n\r\nexport default store;","import {loadUserAction, errorAction, logOutAction} from '../actions';\r\n\r\nconst middlewareLogin = (email,password) => async (dispatch,getState, {firebase}) => {\r\n        await firebase.login(email,password)\r\n        .then(response =>{\r\n            firebase.db.collection(\"users\").doc(response.user.uid).get()\r\n            .then(docUser => {\r\n                let user = docUser.data();\r\n                dispatch(loadUserAction({uid: docUser.id, projects: [...user.projects]}))\r\n            })\r\n        })\r\n        .catch((error) => {\r\n            console.error(error.message);\r\n            dispatch(errorAction(error.message));\r\n        });\r\n    }\r\n\r\nconst middlewareLoadUserData = (uid) => async (dispatch,getState, {firebase}) => {\r\n        await firebase.db.collection(\"users\").doc(uid).get()\r\n        .then(docUser => {\r\n            let user = docUser.data();\r\n            dispatch(loadUserAction({uid: uid, projects: [...user.projects]}))\r\n        })\r\n        .catch((error) => {\r\n            console.error(error.message);\r\n            dispatch(errorAction(error.message));\r\n        });\r\n    }\r\n\r\nconst middlewareLogOutUser = (uid) => async (dispatch,getState, {firebase}) => {\r\n    await firebase.signOut()\r\n    .then (response => {\r\n        dispatch(logOutAction());\r\n    })\r\n    .catch((error) => {\r\n        console.error(error.message);\r\n        dispatch(errorAction(error.message));\r\n    });\r\n}\r\nexport {\r\n    middlewareLogin,middlewareLoadUserData, middlewareLogOutUser\r\n}","import React from 'react';\r\nimport firebase from '../Firebase/Firebase';\r\n\r\nconst withFirebase = Component => props => (\r\n    <Component firebase = {firebase} {...props} />\r\n);\r\n\r\nexport default withFirebase;","import React,{useState} from 'react';\r\n\r\nexport default function(props) {\r\n    const [path] = useState(props.path);\r\n    return (\r\n            <div className = 'loaderBox'>\r\n                <img className = 'loader' src = {path} alt = 'loader'></img> \r\n                <p>Loading {props.type}</p>\r\n            </div>\r\n    )\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport eventEmitter from '../../EventEmitter';\r\nimport './registration.scss';\r\n\r\nimport withFirebase from '../../components/firebaseHOC';\r\n\r\n\r\nclass Registration extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        firebase: PropTypes.object.isRequired,\r\n    }\r\n\r\n    state = {\r\n        firebase: this.props.firebase,\r\n        error: null,\r\n    }\r\n\r\n    emailRef = null;\r\n    passwordRef = null;\r\n\r\n    setRefEmail = (node) => this.emailRef = node;\r\n    setRefPassword = (node) => this.passwordRef = node;\r\n\r\n    createUser = (event) => {\r\n\r\n        const email = this.emailRef.value;\r\n        const password = this.passwordRef.value;\r\n        const { firebase } = this.props;\r\n\r\n        firebase.registration(email, password)\r\n        .then(response => {\r\n            firebase.db.collection(\"users\").doc(response.user.uid).set({\r\n                'projects': [],\r\n                'email': email,\r\n            }).then(() => eventEmitter.emit('EventRegistrationCorrect', response))\r\n        })\r\n        .catch((error) => {\r\n        console.error(error.message);\r\n        this.setState({error: error.message});\r\n        });\r\n    };\r\n\r\n    render(){\r\n        let  { error } = this.state;\r\n\r\n        return (\r\n            <div className = 'RegistrationBox'>\r\n                <div  className = 'RegistrationForm'>\r\n                    <h3>Registration</h3>\r\n                    <form autoComplete = 'off' className = 'RegForm'>\r\n                        { error ?\r\n                            <p className = 'error'>{error}</p>\r\n                            : null\r\n                        }\r\n                        <span>E-mail</span>\r\n                        <input ref = {this.setRefEmail} type = 'text' />\r\n                        <span>Password</span>\r\n                        <input  autoComplete = \"off\" ref = {this.setRefPassword} type = 'password' />\r\n                        <input onClick = {this.createUser}\r\n                                className = 'loginButton'\r\n                                type = 'button'\r\n                                value = 'registration'\r\n                        />\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\nexport default withFirebase(Registration);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport eventEmitter from '../../EventEmitter';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nimport {middlewareLogin} from '../../redux/middleware/loadUserMiddleware';\r\n\r\nimport Loader from '../../components/loading/Loader';\r\nimport Registration from '../../components/Registration/Registration';\r\n\r\nimport {connect} from 'react-redux';\r\n\r\nimport './index.scss';\r\n\r\nclass Index extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        config: PropTypes.object,\r\n    }\r\n\r\n    state = {\r\n        title:  \"Constructor\",\r\n        registrationActive: false,\r\n        regStatus: false,\r\n        wrongEnter: false,\r\n        error: ''\r\n    }\r\n\r\n    statusRegistration = (event) => {\r\n        event.additionalUserInfo.isNewUser ?\r\n        this.setState({...this.state,\r\n                        regStatus: true,\r\n                        registrationActive: false,\r\n                        error: 'Account create!'\r\n                    })\r\n        : console.error('error registration');\r\n    }\r\n\r\n    showBox = (event) => {\r\n        this.setState ({\r\n            ...this.state,\r\n        registrationActive: this.state.registrationActive ? false : true\r\n        })\r\n    }\r\n\r\n    authTo = (event) => {\r\n            this.props.dispatch(middlewareLogin(this.emailImput.value, this.passwordImput.value));\r\n}\r\n    emailImput = null;\r\n    passwordImput = null;\r\n    emailRef = (node) => this.emailImput = node;\r\n    passwordRef = (node) => this.passwordImput = node;\r\n\r\n    render(){\r\n        if (this.props.active) return <Redirect to = { '/Cabinet'} />\r\n        else if (!this.props.active) {\r\n            let currentSelected = this.state.registrationActive;\r\n            return (\r\n                <div className = 'LoginPage flex-column'>\r\n                        <h1>{this.state.title}</h1>\r\n                        <div className = 'LoginBox'>\r\n                            <div className = 'LoginForm'>\r\n                                <h3>Connect form</h3>\r\n                                {\r\n                                    this.props.wrongEnter || this.state.regStatus ?\r\n                                    <p className = 'error'>{this.props.wrongEnter}</p>\r\n                                    : null\r\n                                }\r\n                                <p>E-mail</p>\r\n                                <input ref = {this.emailRef} type = 'text' />\r\n                                <p>Password</p>\r\n                                <input ref = {this.passwordRef} type = 'password' />\r\n                                <input \r\n                                    onClick = {this.authTo} \r\n                                    className = 'loginButton'\r\n                                    type = 'button'\r\n                                    value = 'enter' />\r\n                                <input\r\n                                    onClick = {this.showBox}\r\n                                    className = {currentSelected ? `loginButton selected`\r\n                                        : 'loginButton'}\r\n                                    type = 'button'\r\n                                    value = 'registration'\r\n                                    />\r\n                            </div>\r\n                        </div>\r\n                        {\r\n                            this.state.registrationActive ?\r\n                            <Registration auth = {this.props.auth} />\r\n                            : null\r\n                        }\r\n                </div>\r\n            )\r\n        } else  return <Loader path = '/img/loading.gif' type = 'session' />\r\n    }\r\n\r\n    componentDidMount = (e) => {\r\n        eventEmitter.on('EventRegistrationCorrect', this.statusRegistration);\r\n    }\r\n    componentWillUnmount = (e) => {\r\n        eventEmitter.off('EventRegistrationCorrect', this.statusRegistration);\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        active: state.cabinet.active, \r\n        wrongEnter: state.cabinet.error\r\n    }\r\n  }\r\n\r\nexport default connect(mapStateToProps)(Index);","\r\nimport {errorAction, loadUserAction} from '../actions';\r\n\r\nconst middlewareDelete = item => async (dispatch,getState, {firebase}) => {\r\n    await firebase.db.collection('users').doc(item.uid).get()\r\n    .then(user => user.data())\r\n    .then(data => {\r\n        return {id: data.id, projects: data.projects.filter(itemdb => itemdb.id !== item.id)};\r\n    })\r\n    .then(data => {\r\n        firebase.db.collection(\"users\").doc(item.uid).update({\r\n            \"projects\": data.projects\r\n        })\r\n        .then(response => {\r\n            dispatch(loadUserAction({uid: data.id, projects: data.projects}));\r\n        });\r\n    })\r\n    .catch((error) => {\r\n        console.error(error.message);\r\n        dispatch(errorAction(error.message));\r\n    });\r\n}\r\n\r\nexport default middlewareDelete;\r\n","import React, {useState} from 'react';\r\n\r\n\r\nfunction Icon(props){\r\n    const [path] = useState(props.path);\r\n    const [className] = useState(props.className ? props.className : null);\r\n    const [draggable] = useState(props.draggable ? true : false);\r\n\r\n    return (\r\n    <img\r\n        draggable = {draggable}\r\n        onClick = {props.onClick ? props.onClick : null}\r\n        className = {className}\r\n        title = {props.title ? props.title : null}\r\n        src = {process.env.PUBLIC_URL + path } alt = 'icon'>\r\n    </img>\r\n    )\r\n}\r\n\r\nexport default Icon;","import React from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport './header.scss';\r\n\r\nimport {middlewareLogOutUser} from '../../redux/middleware/loadUserMiddleware';\r\nimport {connect} from 'react-redux';\r\nimport {Redirect, withRouter} from 'react-router-dom';\r\n\r\nimport eventEmitter from '../../EventEmitter.js';\r\nimport Icon from '../Icon/icon';\r\n\r\n\r\nconst iconPath = require('../../config.json').CabinetIcon;\r\n\r\nclass Header extends React.Component {\r\n\r\n    static propTypes = {\r\n        title: PropTypes.string.isRequired,\r\n    };\r\n\r\n    state = {\r\n        title: this.props.title,\r\n        redirectAbout: {\r\n            path:  '/Cabinet/About',\r\n            redirectA: false,\r\n        },\r\n        redirectCabinet: {\r\n            path:  '/Cabinet',\r\n            redirectC: false,\r\n        }\r\n    };\r\n\r\n    logOut = event => {\r\n        this.props.dispatch(middlewareLogOutUser(this.props.idUser));\r\n        event.stopPropagation();\r\n    };\r\n\r\n    redirectAbout = event => {\r\n        if (this.props.location.pathname !== this.state.redirectAbout.path)\r\n           this.setState({\r\n               redirectAbout: {\r\n                   ...this.state.redirectAbout,\r\n                   redirectA: true\r\n               }\r\n           });\r\n        event.stopPropagation()\r\n    };\r\n\r\n    redirectCabinet = event => {\r\n        if (this.props.location.pathname !== this.state.redirectCabinet.path)\r\n        this.setState({\r\n            redirectCabinet: {\r\n                ...this.state.redirectCabinet,\r\n                redirectC: true\r\n            }\r\n        });\r\n        event.stopPropagation()\r\n    }\r\n\r\n    add = (e) => {\r\n        eventEmitter.emit('EventChangeWorkMode',{action: 'newProject'});\r\n    };\r\n\r\n    render(){\r\n\r\n        let {redirectA} = this.state.redirectAbout;\r\n        let {redirectC} = this.state.redirectCabinet;\r\n\r\n        if (redirectA) return <Redirect to = {this.state.redirectAbout.path} />\r\n        if(redirectC) return <Redirect to = {this.state.redirectCabinet.path} />\r\n\r\n        return (\r\n            <header>\r\n                <div className = 'container'>\r\n                    <div className = 'flex-row'>\r\n                            <div onClick = {this.redirectCabinet} className = 'header__CabinetInfo'>\r\n                                <Icon path = {iconPath} />\r\n                                <h3 className = 'tilteApp'>{this.state.title}</h3>\r\n                            </div>\r\n                            {this.props.location.pathname === '/Cabinet' ?\r\n                                <div onClick = {this.add} className = 'header__newProject__AddButton'>\r\n                                    <Icon path = '/img/plus.png' />\r\n                                </div>\r\n                                : null\r\n                            }\r\n                                <div  className = 'Navigator'>\r\n                                    <Icon onClick = {this.redirectAbout} title = 'about' path = '/img/about_logo.svg' />\r\n                                    <Icon onClick = {this.logOut} title = 'logOut' path = '/img/logOut.svg' />\r\n                                </div>\r\n                    </div>\r\n               </div>\r\n            </header>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect()(withRouter(Header));","import React, {useState} from 'react';\r\nimport eventEmitter from '../../EventEmitter';\r\n\r\nconst ImageItem = props => {\r\n\r\n    const [id] = useState(props.id);\r\n    const [urlRegular] = useState(props.urls.regular);\r\n    const [urlFull] = useState(props.urls.full);\r\n    const [isFull] = useState(props.isFull);\r\n\r\n    const showImageMenu = event => {\r\n       eventEmitter.emit(\"EventShowMenuImage\", {id: id, url: urlRegular, urlFull: urlFull});\r\n    }\r\n\r\n\r\n    return (\r\n        <div className = {props.selected ? 'ItemBox selected' : 'ItemBox'}>\r\n            <img\r\n                onClick = {showImageMenu}\r\n                src = {isFull ? urlFull : urlRegular}\r\n                alt = 'item'\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ImageItem;","import React,{Fragment} from 'react';\r\nimport isFetch from 'isomorphic-fetch';\r\nimport PropTypes from 'prop-types';\r\nimport eventEmitter from '../../EventEmitter.js';\r\n\r\nimport ImageItem from '../imageViewer/imageItem';\r\nimport Icon from '../Icon/icon';\r\n\r\nimport './modal.scss';\r\n\r\nclass ModalWindow extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        workMode: PropTypes.string.isRequired,\r\n        idComponent: PropTypes.string || PropTypes.number\r\n    }\r\n\r\n    state = {\r\n        workMode: this.props.workMode,\r\n        images: {\r\n            buttonSearchDisabled: false,\r\n            selectedItem: null, \r\n            showUrl: null, \r\n            images: null,\r\n            urlFull: null,\r\n            imageBoxView: false, \r\n            error: ''\r\n        },\r\n        newProject: {\r\n            validateName: false,\r\n            validateType: false,\r\n            disabled: true,\r\n            name: '',\r\n            type: 'empty'\r\n        },\r\n        imageMenuActive: false,\r\n        warning: {\r\n            lengthMax: 'Max length: 20 symbols',\r\n            lengthMin: 'Min length: 4 symbol',\r\n            type: 'Select type of webpage',\r\n        }\r\n    }\r\n\r\n    inputSearch = null;\r\n    inputSelect = null;\r\n\r\n    searchBackground = event => {\r\n\r\n        const api = 'https://api.unsplash.com/search/photos/?page=1&per_page=40&query=';\r\n        const search = this.inputSearch.value;\r\n\r\n        this.setState({...this.state, images: {...this.state.inages, buttonSearchDisabled: true}})\r\n\r\n        isFetch(`${api + search}&client_id=${process.env.REACT_APP_UNSPLASH_TOKEN}`)\r\n        .then(response => {\r\n            if (response.ok) return response.json();\r\n            else throw new Error('request invalid');\r\n        })\r\n        .then(response => {\r\n\r\n            let {results} = response;\r\n            if (results.length)\r\n            this.setState({\r\n                ...this.state,\r\n                images: {\r\n                    ...this.state.images,\r\n                    imageBoxView: true,\r\n                    error: '',\r\n                    images: [...results],\r\n                    buttonSearchDisabled: false\r\n                },\r\n            });\r\n            else throw new Error('Photos not found');\r\n        })\r\n        .catch(error => {\r\n            console.error(error.message);\r\n            this.setState({\r\n                ...this.state,\r\n                images: {...this.state.images, error: error.message},\r\n                imageBoxView: false,\r\n                buttonSearchDisabled: false\r\n            });\r\n        });\r\n    }\r\n\r\n    showMenuImage = event => {\r\n        this.setState({\r\n            ...this.state, \r\n            imageMenuActive: true,\r\n            images: {\r\n                ...this.state.images,\r\n                selectedItem: event.id, \r\n                showUrl: event.url,\r\n                urlFull: event.urlFull\r\n\r\n            }\r\n        });\r\n    }\r\n\r\n    showImage = event => {\r\n\r\n        const {showUrl} = this.state.images;\r\n        eventEmitter.emit(\"EventImageView\", {action: true, target: showUrl ? showUrl : null});\r\n        event.stopPropagation();\r\n    }\r\n\r\n    setSelectedImage = event => {\r\n\r\n        let images = {...this.state.images};\r\n        eventEmitter.emit(`EventSetBackgroundImage${this.props.idComponent}`,images);\r\n        eventEmitter.emit(`EventSetBImageInstumentPanel`,images);\r\n        event.stopPropagation();\r\n    };\r\n\r\n    makeImageResultBox = (items) => {\r\n        if (!items) return null;\r\n\r\n        return items.map((item,i) =>{\r\n           return <ImageItem \r\n                key = {`item${i}`} \r\n                id = {i}\r\n                selected = {this.state.images.selectedItem === i ? true : false} \r\n                isFull = {false}\r\n                urls = {{...item.urls}} \r\n            />\r\n        });\r\n    }\r\n\r\n    addNewProject = (event) => {\r\n        let mode = this.state[this.state.workMode];\r\n        if (mode.validateType &&  mode.validateName) {\r\n            eventEmitter.emit('EventAddProject',\r\n            {\r\n                title: this.state[this.state.workMode].name,\r\n                type: this.state[this.state.workMode].type\r\n            });\r\n\r\n            eventEmitter.emit('EventChangeWorkMode',{action: 'default'});\r\n        }\r\n    }\r\n\r\n    selectOption = (event) => {\r\n\r\n        let inputs = {...this.state[this.state.workMode]};\r\n        inputs.type = event.target.value;\r\n        inputs.validateType = inputs.type !== 'empty';\r\n        inputs.disabled = inputs.validateType && inputs.validateName ? false : true;\r\n        this.setState({\r\n            ...this.state,\r\n            [this.state.workMode]: inputs\r\n        });\r\n    }\r\n\r\n    validateName = (event) => {\r\n\r\n        let inputs = {...this.state[this.state.workMode]};\r\n        inputs.name = event.target.value;\r\n        let lengthInput = inputs.name.length;\r\n        inputs.validateName = lengthInput >= 4 && lengthInput < 20 ? true : false;\r\n        inputs.disabled = inputs.validateType && inputs.validateName ? false : true;\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            [this.state.workMode]: inputs\r\n        })\r\n    };\r\n\r\n    cancel = (event) => {\r\n\r\n        if (this.state.workMode === 'Search')\r\n            eventEmitter.emit(\"EventModalSearchOn\");\r\n        else  eventEmitter.emit('EventChangeWorkMode',{action: 'default'});\r\n    }\r\n\r\n    refSelect = (node) => this.inputSelect = node;\r\n    refSearch = node => this.inputSearch = node;\r\n\r\n    render(){\r\n\r\n        switch (this.state.workMode){\r\n            case 'newProject':\r\n                return (\r\n                    <div className = 'Modal'>\r\n                        <h3>Create new Project</h3>\r\n                        { this.state[this.state.workMode].name.length <= 3 ?\r\n                            <span className = 'warning'>{this.state.warning.lengthMin}</span> : null\r\n                        }\r\n                        { this.state[this.state.workMode].name.length >= 20 ?\r\n                            <span className = 'warning'>{this.state.warning.lengthMax}</span> : null\r\n                        }\r\n                        <input\r\n                            className = {this.state[this.state.workMode].validateName ? 'ready' : 'wrong'}\r\n                            value = {this.state[this.state.workMode].name}\r\n                            onChange = {this.validateName}\r\n                            type = 'text'\r\n                            placeholder = \"Project name\"\r\n                        />\r\n                        { !this.state[this.state.workMode].validateType ?\r\n                            <span className = 'warning'>{this.state.warning.type}</span> : null\r\n                        }\r\n                        <select onChange = {this.selectOption} >\r\n                            <option value = 'empty'>--------</option>\r\n                            <option value = 'landing'>Landing</option>\r\n                            <option value = 'portfolio'>Portfolio</option>\r\n                        </select>\r\n                        <input \r\n                            onClick = {this.addNewProject}\r\n                            className = 'acceptButton'\r\n                            disabled = {this.state[this.state.workMode].disabled}\r\n                            type = 'button'\r\n                            value = 'Submit'\r\n                        />\r\n                            <input onClick = {this.cancel} type ='button' value = 'Cancel' />\r\n                    </div>\r\n                )\r\n            case 'Search':\r\n                return (\r\n                    <Fragment>\r\n                        <div className = 'Modal Modal-search'>\r\n                            <h3>Search background image</h3>\r\n                            { this.state.images.error ?\r\n                                <span className = 'error'>{this.state.images.error}</span> : null\r\n                            }\r\n                            <input ref = {this.refSearch} type = 'text' placeholder = \"Photo name\" />\r\n                            <input \r\n                                disabled = {this.state.images.buttonSearchDisabled} \r\n                                className = 'acceptButton' \r\n                                type = 'button' \r\n                                value = 'Search'\r\n                                onClick = {this.searchBackground}\r\n                            />\r\n                            <input onClick = {this.cancel} type ='button' value = 'Cancel' />\r\n                            {\r\n                                this.state.images.imageBoxView ?\r\n                                <div className = 'searchResultBox'>\r\n                                    {this.makeImageResultBox([...this.state.images['images']])}\r\n                                </div>\r\n                                : null\r\n                            }\r\n                        </div>\r\n                        {  this.state.imageMenuActive ?\r\n                            <div className = 'ActionModalSearch'>\r\n                            <button onClick = {this.showImage} className = 'actionModalSearch__view'>\r\n                                <Icon path = '/img/view.png' />\r\n                            </button>\r\n                            <button onClick = {this.setSelectedImage} className = 'actionModalSearch__settings'>\r\n                                <Icon path = '/img/settings.png' />\r\n                            </button>\r\n                            </div>\r\n                            : null\r\n                        }\r\n                    </Fragment>\r\n                )\r\n            default: return <Fragment></Fragment>\r\n        }\r\n    }\r\n\r\n    componentDidMount = event => {\r\n        if (this.state.workMode === 'Search')\r\n            eventEmitter.on('EventShowMenuImage', this.showMenuImage);\r\n    }\r\n\r\n    componentWillUnmount = event => {\r\n        if (this.state.workMode === 'Search')\r\n            eventEmitter.off('EventShowMenuImage', this.showMenuImage);\r\n    }\r\n}\r\n\r\nexport default ModalWindow;\r\n\r\n","import {createProjectAction, errorAction} from '../actions';\r\n\r\n\r\nconst middlewareCreateProject = (uid, list, title, type) => async (dispatch,getState, {firebase}) => {\r\n    let lastProject = [...list];\r\n    const lastIndex = lastProject.length  ? lastProject[lastProject.length-1].id + 1 : 0;\r\n    lastProject.push({\"id\": lastIndex, \"title\": title, \"type\": type, component: []});\r\n\r\n    await firebase.db.collection(\"users\").doc(uid).update({\r\n        'projects': lastProject,\r\n    })\r\n    .then (() => dispatch(createProjectAction(lastProject)))\r\n    .catch(error => {\r\n        console.error(error.message);\r\n        dispatch(errorAction(error.message));\r\n    })\r\n};\r\n\r\nexport {\r\n    middlewareCreateProject\r\n}","import React, {useState} from 'react';\r\nimport eventEmitter from '../../EventEmitter';\r\nimport {withRouter, Redirect} from 'react-router-dom';\r\n\r\nfunction Item(props) {\r\n\r\n    const [path] = useState( `/Cabinet/Build/${props.id}`);\r\n\r\n    let [canBuild,setCanBuild] = useState(false);\r\n\r\n    const [id] = useState(props.id);\r\n    const [name] = useState(props.name);\r\n    const [type] = useState(props.type);\r\n\r\n\r\n    const build = event => {\r\n        if(props.location.pathname !== path)\r\n            setCanBuild(true);\r\n        event.stopPropagation();\r\n    };\r\n\r\n    const deleteItem = event => {\r\n        eventEmitter.emit('EventDeleteItem',{id: props.id, name: props.name, type: props.type});\r\n        event.stopPropagation();\r\n    };\r\n\r\n    if (canBuild) return <Redirect to = {path} />\r\n    else return (\r\n            <div className = 'item' data-id = {id}>\r\n                <p className = 'ProjectName'>{name}</p>\r\n                <p className = 'ProjectType'>{type}</p>\r\n                <div className = 'projectController'>\r\n                <input onClick = {build} className = 'projectControllerButton_enter' type = 'button' value = 'enter build' />\r\n                <input onClick = {deleteItem} className = 'projectControllerButton_delete' type = 'button' value = 'delete' />\r\n                </div>\r\n            </div>\r\n        )\r\n}\r\n\r\nexport default withRouter(Item);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport {middlewareCreateProject} from '../../redux/middleware/createProjectMiddleware';\r\n\r\nimport './list.scss';\r\n\r\nimport Item from './Item';\r\nimport eventEmitter from '../../EventEmitter.js';\r\n\r\nclass List extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        children: PropTypes.shape({\r\n            projects: PropTypes.array.isRequired,\r\n           count: PropTypes.number.isRequired,\r\n        }),\r\n        list: PropTypes.array.isRequired,\r\n    }\r\n\r\n    state = {\r\n        redirect: false,\r\n    }\r\n\r\n    addNewProject = (item) => {\r\n        if (this.props.idUser) {\r\n            this.props.dispatch(middlewareCreateProject(this.props.idUser, this.props.list, item.title, item.type));\r\n        } else this.setState({...this.state, redirect: true});\r\n    }\r\n\r\n\r\n    makeList = (list) => {\r\n\r\n        return list.map (project => {\r\n\r\n            return(\r\n                <Item\r\n                    key = {project.id}\r\n                    id = {project.id}\r\n                    name = {project.title}\r\n                    type = {project.type}\r\n                />\r\n            )\r\n        });\r\n    }\r\n\r\n    render(){\r\n        if (this.state.redirect)\r\n            return <Redirect to = { '/'} />\r\n            else return (\r\n                    <div className = 'projectsList__list'>\r\n                        {this.makeList([...this.props.list])}\r\n                    </div>\r\n                )\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        eventEmitter.on('EventAddProject',this.addNewProject);\r\n    }\r\n\r\n      componentWillUnmount = () => {\r\n        eventEmitter.off('EventAddProject',this.addNewProject);\r\n      }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        idUser: state.cabinet.idUser,\r\n        list: [...state.cabinet.projects]\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(List);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nimport List from '../List/List.jsx';\r\n\r\nimport './ProjectsSection.scss';\r\n\r\nclass ProjectsSection extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        projects: PropTypes.array,\r\n    }\r\n\r\n    render(){\r\n        return (\r\n                <section className = 'projectsList'>\r\n                <div className = 'container'>\r\n                <div className = 'flex-column'>\r\n                        <div className = 'projectsList__about'>\r\n                            <h3>Your Projects</h3>\r\n                        </div>\r\n                        <List />\r\n                    </div>\r\n                </div>\r\n                </section>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default ProjectsSection;","import React,{Fragment} from 'react';\nimport PropTypes from 'prop-types';\nimport eventEmitter from '../../EventEmitter.js';\nimport {Redirect} from 'react-router-dom';\nimport withFirebase from '../../components/firebaseHOC';\n\nimport {middlewareLogOutUser} from '../../redux/middleware/loadUserMiddleware';\nimport middlewareDelete from '../../redux/middleware/middlewareDelete';\nimport Loader from '../../components/loading/Loader';\nimport {connect} from 'react-redux';\n\nimport Header from '../../components/header/Header';\nimport Modal from '../../components/modalWindow/ModalWindow';\nimport ProjectsSection from '../../components/ProjectsSection/ProjectsSection';\n\nimport './Cabinet.scss';\n\nconst title = require('../../config.json').title;\n\nclass Cabinet extends React.PureComponent {\n\n  static propTypes = {\n    firebase: PropTypes.object.isRequired\n  }\n\n  state = {\n    workMode: 'default',\n  }\n\n  logOut = event => {\n    this.props.dispatch(middlewareLogOutUser(this.props.idUser));\n  }\n\n  deletItem = event => {\n    this.props.dispatch(middlewareDelete({...event, uid: this.props.firebase.getCurrentUser().uid}));\n  }\n\n  changeWorkMode = event => {\n    this.setState ({\n      ...this.state,\n      workMode: event.action,\n    });\n  }\n\n  render(){\n    if (this.props.active){\n      return (\n        <Fragment>\n          <Header title = {title} idUser = {this.props.idUser} />\n          {(this.state.workMode === 'newProject') ? <Modal workMode = {this.state.workMode} /> : null}\n            <ProjectsSection />\n        </Fragment>\n      )\n    } else if (!this.props.firebase.getCurrentUser()) return <Redirect to = { '/'} />\n    else return <Loader path = '/img/loading.gif' type = 'Cabinet' />\n    }\n\n\n  componentDidMount = () => {\n    eventEmitter.on('EventDeleteItem', this.deletItem);\n    eventEmitter.on('EventChangeWorkMode', this.changeWorkMode);\n  }\n\n  componentWillUnmount = () => {\n    eventEmitter.off('EventDeleteItem', this.deletItem);\n    eventEmitter.off('EventChangeWorkMode', this.changeWorkMode);\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    idUser: state.cabinet.idUser,\n    projects: [...state.cabinet.projects],\n    active: state.cabinet.active\n  }\n}\n\n\n\nexport default connect(mapStateToProps)(withFirebase(Cabinet));\n","import React, {Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nimport withFirebase from '../../components/firebaseHOC';\r\nimport Header from '../../components/header/Header';\r\n\r\nimport './about.scss';\r\n\r\nclass About extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        config: PropTypes.object.isRequired,\r\n        firebase: PropTypes.object.isRequired,\r\n    }\r\n\r\n    state = {\r\n        config: this.props.config\r\n    };\r\n\r\n    render(){\r\n        if (this.props.firebase.getCurrentUser()) {\r\n            const { config } = this.state;\r\n            return (\r\n                <Fragment>\r\n                    <Header title = {config.title} />\r\n                    <section className = 'About'>\r\n                        <div className = 'container'>\r\n                            <div className = 'col-12'>\r\n                                <div className = 'information'>\r\n                                <img alt = 'img' className = 'logoAbout' src = {process.env.PUBLIC_URL + '/img/about.jpg'}/>\r\n                                    <p className ='developer'><span>Developer:</span> {config.about.developer}</p>\r\n                                    <p className = 'year'><span>Year:</span> {config.about.year}</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </section>\r\n                </Fragment>\r\n            )\r\n        } else return <Redirect to = { '/'} />\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default withFirebase(About);","import {errorAction, loadUpdateCurrentProject} from '../actions';\r\n\r\nconst updateMiddleware = (item) => async (dispatch,getState, {firebase}) => {\r\n    let newProjects = item.projects.map(project => {\r\n        if (project.id === item.idProject) { project.component = [...item.component] }\r\n        return project;\r\n    });\r\n    await firebase.db.collection(\"users\").doc(item.uid).update({\r\n        'projects': JSON.parse(JSON.stringify(newProjects))\r\n    })\r\n    .then(response => {\r\n        let project = item.projects.find(itemdb => itemdb.id === item.idProject);\r\n        dispatch(loadUpdateCurrentProject({component: [...project.component], idProject: item.idProject}))\r\n    })\r\n    .catch(error => dispatch(errorAction(error.message)));\r\n};\r\n\r\nexport default updateMiddleware;","import React,{useState} from 'react';\r\nimport eventEmitter from '../../EventEmitter';\r\n\r\nimport './imageViewer.scss';\r\n\r\nfunction ImageViewer(props){\r\n\r\n    let [path] = useState(props.path);\r\n\r\n    const closeViewer = event => {\r\n        eventEmitter.emit(\"EventImageView\", { action: false, target: null});\r\n        event.stopPropagation();\r\n    }\r\n\r\n    return (\r\n        <div onClick = {closeViewer} className = 'ImageViewer'>\r\n            <img src = {path} alt = 'fullImage' />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ImageViewer;","import React, {Fragment} from 'react';\r\nimport eventEmitter from '../../EventEmitter';\r\nimport PropTypes from 'prop-types';\r\nimport { SketchPicker } from 'react-color';\r\nimport './instrumentsPanel.scss';\r\n\r\nimport Icon from '../Icon/icon';\r\n\r\nclass InstrumentsPanel extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        instrumentPanel:  PropTypes.object.isRequired,\r\n        editComponent: PropTypes.object.isRequired\r\n    };\r\n\r\n    state = {\r\n        instrumentPanel: {...this.props.instrumentPanel},\r\n        componentsStats: {\r\n            content: null,\r\n            fontSize: null,\r\n            color: null,\r\n            backgroundImage: null,\r\n            image: null,\r\n            coords: {left: null, top: null} // x, y\r\n        },\r\n        images: null,\r\n    };\r\n\r\n    updateSizeText = eventSize => {\r\n        this.setState({\r\n            ...this.state, \r\n            instrumentPanel: {...this.state.instrumentPanel},\r\n            componentsStats: {...this.state.componentsStats, fontSize: eventSize}\r\n        });\r\n    };\r\n\r\n    closePanel = event => {\r\n        eventEmitter.emit('EventClosePanel', {close: false});\r\n    };\r\n\r\n    setSize = event => {\r\n        // let {fontSize} = this.state.componentsStats;\r\n        let {idComponent} = this.state.instrumentPanel;\r\n        let size = event.target.value > 200 ? 200 : event.target.value;\r\n        this.setState({\r\n            ...this.state, \r\n            instrumentPanel: {...this.state.instrumentPanel},\r\n            componentsStats: {...this.state.componentsStats,fontSize: size}\r\n        },\r\n            () => eventEmitter.emit(`EventChangeSizeText${idComponent}`, {size: size })\r\n        );\r\n\r\n        event.stopPropagation();\r\n    };\r\n\r\n    setContent = event => {\r\n        let {idComponent} = this.state.instrumentPanel;\r\n        let contentValue = event.target.value;\r\n        this.setState({\r\n            ...this.state, \r\n            instrumentPanel: {...this.state.instrumentPanel},\r\n            componentsStats: {...this.state.componentsStats,content: contentValue}\r\n        },\r\n        () => eventEmitter.emit(`EventChangeContentText${idComponent}`,{content: contentValue}));\r\n        event.stopPropagation();\r\n    };\r\n\r\n    updatePosition = eventItem => {\r\n\r\n        this.setState({\r\n            ...this.state, \r\n            componentsStats: {\r\n                ...this.state.componentsStats,\r\n                coords: {\r\n                    ...this.state.componentsStats.coords,\r\n                    left: eventItem.x,\r\n                    top: eventItem.y\r\n                }\r\n            }\r\n        });\r\n    };\r\n\r\n    setColor = event => {\r\n        this.setState({...this.state,\r\n            instrumentPanel:{\r\n                ...this.state.instrumentPanel,\r\n                colorPickerActive: this.state.instrumentPanel.colorPickerActive ? false : true\r\n            }\r\n        });\r\n        event.stopPropagation();\r\n    };\r\n\r\n    updateBimageStats = eventItem => {\r\n        const {urlFull} = eventItem;\r\n        this.setState({\r\n            ...this.state,\r\n            componentsStats:{\r\n                ...this.state.componentsStats,\r\n                backgroundImage: urlFull\r\n            }\r\n        });\r\n    };\r\n\r\n    handleChangeComplete = event => {\r\n\r\n        const {rgb} = event;\r\n        let colorRGB = `rgb(${rgb.r},${rgb.g},${rgb.b},${rgb.a})`;\r\n\r\n        let {idComponent} = this.state.instrumentPanel;\r\n        if (this.state.instrumentPanel.target === 'background'){\r\n            this.setState({\r\n                ...this.state,\r\n                componentsStats: {...this.state.componentsStats,color: colorRGB}\r\n            }, () => eventEmitter.emit(`EventChangeColorBackground${idComponent}`, colorRGB));\r\n        }\r\n\r\n        else if (this.state.instrumentPanel.target === 'text') {\r\n            this.setState({\r\n                ...this.state,\r\n                componentsStats: {...this.state.componentsStats,color: colorRGB}\r\n            },\r\n            () => eventEmitter.emit(`EventChangeColorText${idComponent}`, colorRGB));\r\n        }\r\n\r\n    };\r\n\r\n    saveChanges = event => {\r\n        eventEmitter.emit(\"EventSaveChangesComponent\", {\r\n            ...this.state.componentsStats,\r\n            type: this.state.instrumentPanel.target\r\n        });\r\n\r\n        event.stopPropagation();\r\n    }\r\n\r\n    searchImage = event => {\r\n\r\n        let {idComponent} = this.state.instrumentPanel;\r\n        eventEmitter.emit('EventModalSearchOn', {idComponent: idComponent});\r\n\r\n        event.stopPropagation();\r\n    };\r\n\r\n    makePanelInstruments = (type) => {\r\n\r\n        let {colorPickerActive} = this.state.instrumentPanel;\r\n        let {fontSize} = this.state.componentsStats;\r\n            switch (type){\r\n                case 'text':\r\n                    return (\r\n                        <Fragment>\r\n                        <p className = 'titleInstument'>Color: </p>\r\n                        <input onClick = {this.setColor} className = 'button_switchColor' type = 'button' value = 'color pick' />\r\n                        <p className = 'titleInstument'>Text size: </p>\r\n                        <input \r\n                            onChange = {this.setSize} \r\n                            type=\"number\"\r\n                            min = '10' max = '200'\r\n                            value = {fontSize ? fontSize : 120 }\r\n                        />\r\n                            { colorPickerActive ?\r\n                                <SketchPicker\r\n                                onChangeComplete={this.handleChangeComplete}\r\n                                />\r\n                                : null\r\n                            }\r\n                        <p className = 'titleInstument'>Content: </p>\r\n                        <input onChange = {this.setContent} maxLength = '20' type = 'text' defaultValue = 'Title' />\r\n                        <input onClick = {this.saveChanges} className = 'saveButtonInstument' type = 'button' value = 'save changes' />\r\n                        </Fragment>\r\n                )\r\n                case 'background': \r\n                    return (\r\n                        <Fragment>\r\n                        <p className = 'titleInstument'>Color: </p>\r\n                        <input onClick = {this.setColor} className = 'button_switchColor' type = 'button' value = 'color pick' />\r\n                            { colorPickerActive ?\r\n                                <SketchPicker\r\n                                onChangeComplete={this.handleChangeComplete}\r\n                                />\r\n                                : null\r\n                            }\r\n                            <input onClick = {this.searchImage} className = 'ImageSearchButton' type = 'button' value = 'background-image' />\r\n                            <input onClick = {this.saveChanges} className = 'saveButtonInstument' type = 'button' value = 'save changes' />\r\n                        </Fragment>\r\n                    )\r\n                default: return <p className = 'warningInstruments'>Select elements for accses edit instruments</p>\r\n            }\r\n    };\r\n\r\n    componentDidUpdate = (oldProps, oldState) => {\r\n        let targetBool = oldState.instrumentPanel.target !== this.props.instrumentPanel.target;\r\n        let idBool = oldState.instrumentPanel.idComponent !== this.props.instrumentPanel.idComponent;\r\n        if (idBool || targetBool)\r\n            this.setState({\r\n                ...this.state,\r\n                instrumentPanel: {...this.props.instrumentPanel, colorPickerActive: false},\r\n                componentsStats: {\r\n                    content: null, fontSize: null, color: null,\r\n                    backgroundImage: null, image: null,\r\n                    coords: {left: null, top: null} // x, y\r\n                },\r\n            })\r\n    };\r\n\r\n    componentDidMount = event => {\r\n        eventEmitter.on(\"EventUpdateSizeText\", this.updateSizeText);\r\n        eventEmitter.on(\"EventSetBImageInstumentPanel\", this.updateBimageStats);\r\n        eventEmitter.on(\"EventUpdatePosition\", this.updatePosition);\r\n    };\r\n\r\n    componentWillUnmount = event => {\r\n        eventEmitter.off(\"EventUpdateSizeText\", this.updateSizeText);\r\n        eventEmitter.off(\"EventUpdatePosition\", this.updatePosition);\r\n    };\r\n\r\n    render(){\r\n        let { instrumentActive } = this.state.instrumentPanel;\r\n        return (\r\n            <Fragment>\r\n                <div  className = 'instumentsPanel'>\r\n                <button onClick = {this.closePanel} className = 'closeInstrumentsPanel'><Icon path = '/img/close.svg' /></button>\r\n                    <h3>Instruments</h3>\r\n                    {\r\n                        instrumentActive ? \r\n                        <p className = 'TextComponent'>{this.state.instrumentPanel.target}</p>\r\n                        : null\r\n                    }\r\n                    {\r\n                        instrumentActive ?\r\n                        <div  className= 'instuments'>{this.makePanelInstruments(this.state.instrumentPanel.target)}</div>\r\n                        : null\r\n                    }\r\n                </div>\r\n            </Fragment>\r\n        )\r\n    };\r\n};\r\n\r\nexport default InstrumentsPanel;","import React, {useEffect, useState} from 'react';\r\nimport eventEmitter from '../../../EventEmitter';\r\nimport styled from 'styled-components';\r\n\r\n\r\nconst Background = styled.div`\r\n    position: relative;\r\n    width: 100%;\r\n    height: 95vh;\r\n    background-size: cover;\r\n    background-color: ${props => props.backgroundColor};\r\n    background-image: url(${props => props.backgroundImage});\r\n`;\r\n\r\nconst BackgroundComponent = props => {\r\n\r\n    const [id] = useState(props.id);\r\n\r\n    const [count, setCount] = useState(0);\r\n    let boxComponent = React.createRef();\r\n\r\n    let [backgroundColor, setBgColor] = useState(props.background);\r\n    let [backgroundImage, setImage] = useState(props.backgroundImage ? props.backgroundImage : null);\r\n\r\n    const saveWidth = event => {\r\n        setCount(count + 1);\r\n        boxComponent.current.focus();\r\n        let boxInform =  boxComponent.current.getBoundingClientRect();\r\n        eventEmitter.emit('EventSaveWidth', {width: boxInform.width, height: boxInform.height});\r\n    }\r\n\r\n    const openBgInstruments = event => {\r\n        eventEmitter.emit('EventInstrumentPanel',{\r\n            target: 'background',\r\n            id: id,\r\n        });\r\n        event.stopPropagation();\r\n    }\r\n\r\n    const changeColor = color => {\r\n        setBgColor(color);\r\n    }\r\n\r\n    const setBackgroundImage = event => {\r\n        const {urlFull} = event;\r\n        setImage(urlFull);\r\n    };\r\n\r\n    const didUpdate = () => {\r\n        if (count === 0 ) saveWidth();\r\n        eventEmitter.on(`EventChangeColorBackground${id}`, changeColor);\r\n        eventEmitter.on(`EventSetBackgroundImage${id}`, setBackgroundImage);\r\n        return () => {\r\n            eventEmitter.off(`EventChangeColorBackground${id}`, changeColor);\r\n            eventEmitter.off(`EventSetBackgroundImage${id}`, setBackgroundImage);\r\n        }\r\n    }\r\n\r\n    useEffect(didUpdate);\r\n    return (\r\n        <Background\r\n            ref  = {boxComponent}\r\n            onClick={openBgInstruments}\r\n            backgroundColor = {backgroundColor}\r\n            backgroundImage = {backgroundImage}\r\n        >\r\n            {props.children}\r\n        </Background>\r\n    )\r\n}\r\n\r\nexport default BackgroundComponent;","\r\nimport React, {useEffect, useState} from 'react';\r\nimport eventEmitter from '../../../EventEmitter';\r\nimport styled from 'styled-components';\r\n\r\n\r\nconst Title = styled.h1.attrs(props => ({\r\n    style: {\r\n        display: props.shadowDisplay ? 'none' : 'block',\r\n        left: props.coordX ? props.coordX : '50%',\r\n        top:  props.coordY,\r\n}}))`\r\n    position: absolute;\r\n    transform: translate(-50%);\r\n    font-size: ${props => props.size};\r\n    color: ${props => props.textColor};\r\n    text-align: center;\r\n    margin: 0;\r\n`;\r\n\r\n// left: ${props => props.coordX ? props.coordX : '50%'};\r\n// top:  ${props => props.coordY};\r\n\r\nconst TextComponent = props =>  {\r\n\r\n    const [id] = useState(props.id);\r\n\r\n    const [sizeParenBox] = useState({...props.sizeParenBox});\r\n\r\n    let [colorText, setColorText] = useState(props.color);\r\n    let [sizeText, setSizeText] = useState(props.size ? props.size : 120);\r\n    let [contentText, setText] = useState(props.children);\r\n    const [shiftCoords, setShiftCoords] = useState(null)\r\n    const [dragNdrop, setDragNdrop] = useState(null);\r\n\r\n    const openTitleInstruments = event => {\r\n\r\n        eventEmitter.emit(`EventInstrumentPanel`,{\r\n            target: 'text',\r\n            id: id,\r\n            sizeTextValue: sizeText\r\n        });\r\n        event.stopPropagation();\r\n    }\r\n\r\n    const changeColorText = color => {\r\n        setColorText(color);\r\n    }\r\n\r\n    const changeSizeText = eventSize => {\r\n        const {size} = eventSize;\r\n        setSizeText(size);\r\n    }\r\n\r\n    const changeContentText = eventContent => {\r\n        const {content} = eventContent;\r\n        setText(content);\r\n    }\r\n\r\n\r\n    const didUpdate = event => {\r\n        eventEmitter.on(`EventChangeColorText${id}`, changeColorText);\r\n        eventEmitter.on(`EventChangeSizeText${id}`, changeSizeText);\r\n        eventEmitter.on(`EventChangeContentText${id}`, changeContentText);\r\n        return () => {\r\n            eventEmitter.off(`EventChangeColorText${id}`, changeColorText);\r\n            eventEmitter.off(`EventChangeSizeText${id}`, changeSizeText);\r\n            eventEmitter.off(`EventChangeContentText${id}`, changeContentText);\r\n        }\r\n    }\r\n\r\n    const saveCoords = event => {\r\n\r\n        let rect = event.target.getBoundingClientRect();\r\n        let left = rect.left;\r\n        let top = rect.top;\r\n        let width = rect.width;\r\n        let height = rect.height;\r\n        setShiftCoords({x: event.pageX - left - width/2, y: event.pageY - top + height/2.8});\r\n\r\n        event.stopPropagation();\r\n    }\r\n\r\n    const moveText = event => {\r\n\r\n        let coordX = event.pageX - shiftCoords.x;\r\n        let coordY = event.pageY - shiftCoords.y;\r\n\r\n        coordX = coordX <= 130 ? 130 : coordX;\r\n        coordY = coordY <= 0 ? 0 : coordY;\r\n\r\n        let convertToPercentX = (coordX * 100) / sizeParenBox.width;\r\n        let convertToPercentY = (coordY * 100) / sizeParenBox.height;\r\n\r\n        const position = {\r\n            x: convertToPercentX + '%', \r\n            y: convertToPercentY + '%', \r\n            shadowDisplay: event.type === 'drag' ? true : false\r\n        };\r\n        setDragNdrop(position);\r\n        \r\n        if (event.type === 'dragend') \r\n            eventEmitter.emit('EventUpdatePosition', position);\r\n        event.stopPropagation();\r\n    }\r\n\r\n    const weelResizeText = event => {\r\n\r\n        if (event.shiftKey && event.deltaY === -100) {\r\n            let counter = sizeText + 1;\r\n            counter = counter > 200 ? 200 : counter;\r\n            setSizeText(counter);\r\n            eventEmitter.emit('EventUpdateSizeText', counter);\r\n        }\r\n\r\n        if (event.shiftKey && event.deltaY === 100) {\r\n            let counter = sizeText - 1;\r\n             counter = counter <= 10 ? 10 : counter;\r\n             setSizeText(counter);\r\n             eventEmitter.emit('EventUpdateSizeText', counter);\r\n            }\r\n        event.stopPropagation();\r\n    }\r\n    useEffect(didUpdate);\r\n\r\n    return (\r\n        <Title\r\n            onClick={openTitleInstruments}\r\n            textColor = {colorText ? colorText : 'red'}\r\n            size = {sizeText ? sizeText + 'px' : '120px'}\r\n            draggable = {true}\r\n            onMouseDown = {saveCoords}\r\n            onDrag   = {moveText}\r\n            onDragEnd = {moveText}\r\n            onWheel = {weelResizeText}\r\n            coordX = {dragNdrop ? dragNdrop.x : null}\r\n            coordY = {dragNdrop ? dragNdrop.y : null}\r\n            shadowDisplay = {dragNdrop ? dragNdrop.shadowDisplay : false}\r\n        >\r\n            {contentText}\r\n        </Title>\r\n    )\r\n}\r\n\r\nexport default TextComponent;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport TextComponent from '../buildComponents/components/Text';\r\nimport BackgroundComponent from '../buildComponents/components/Background';\r\n\r\nimport eventEmitter from '../../EventEmitter';\r\n\r\nimport './buildMenu.scss';\r\n\r\nclass BuildMenu extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        component: PropTypes.object\r\n    }\r\n\r\n    state = {\r\n        component: {...this.props.component},\r\n        sizeParenBox: {...this.props.sizeParenBox},\r\n        title: 'Title'\r\n    }\r\n\r\n    addText = event => {\r\n        let id = this.props.countComponents;\r\n        let component = [<TextComponent sizeParenBox = {{...this.props.sizeParenBox}} id = {id} key = {`text${id}`}>{this.state.title}</TextComponent>];\r\n        eventEmitter.emit('EventBuildHeaderComponents',{target: 'Header', type: 'text', component: component});\r\n        event.stopPropagation();\r\n    }\r\n\r\n    addBackground = event => {\r\n        let id = this.props.countComponents;\r\n        let background = [<BackgroundComponent id = {id} key = {`bg${id}`}/>];\r\n        eventEmitter.emit('EventBuildHeaderComponents',{target: 'Header', type: 'background', component: background});\r\n\r\n        event.stopPropagation();\r\n    }\r\n\r\n    render(){\r\n\r\n        return (\r\n            <div className = 'ComponentsMenu'>\r\n                <button onClick = {this.addBackground} className = 'ImageTool CompoentnsMenu_button' ><span>Image</span></button>\r\n                <button onClick = {this.addText} className = 'TextTool CompoentnsMenu_button' ><span>Text</span></button>\r\n                <button \r\n                    disabled = {this.state.component.name !== 'Header' ? false : true}\r\n                    className = 'ButtonTool CompoentnsMenu_button' >\r\n                    <span>Button</span>\r\n                </button>\r\n                <button className = 'VideoTool CompoentnsMenu_button' ><span>Video</span></button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default BuildMenu;","import React,{Fragment} from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Icon from '../Icon/icon';\r\nimport BuildMenu from '../componentsBuildMenu/BuildMenu';\r\n\r\n\r\nconst ControllersBox = styled.div\r\n    .attrs(props =>({\r\n        style: {\r\n                left: props.coordX,\r\n                top: props.coordY,\r\n        }\r\n    })) `\r\n    position: absolute;\r\n    display: ${props => props.shadowDisplay}\r\n    `;\r\n\r\nclass Controllers extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        menuActive: PropTypes.bool,\r\n    }\r\n\r\n    state = {\r\n        viewComponentMenu: false,\r\n        shiftX: 0,\r\n        shiftY: 0,\r\n        coordsX: '50%',\r\n        coordsY: '0',\r\n        shadowDisplay: 'block'\r\n    }\r\n\r\n    componentMenu = (event) => {\r\n        this.setState({viewComponentMenu: this.state.viewComponentMenu ? false : true});\r\n        event.stopPropagation();\r\n    }\r\n\r\n    saveCoords = event => {\r\n        let left = this.controlBox.getBoundingClientRect().left;\r\n        let top = this.controlBox.getBoundingClientRect().top;\r\n        this.setState({...this.state, shiftX: event.pageX - left, \r\n        shiftY: event.pageY - top + 55 });\r\n\r\n        event.stopPropagation();\r\n    }\r\n\r\n    drag = event => {\r\n        if (!this.state.viewComponentMenu)\r\n            this.setState({\r\n                ...this.state,\r\n                coordsX: event.pageX - this.state.shiftX + 'px', \r\n                coordsY: event.pageY - this.state.shiftY + 'px',\r\n                shadowDisplay: event.type === 'drag' ? 'none' : 'block'\r\n            });\r\n        event.stopPropagation();\r\n    }\r\n\r\n    controlBox = null;\r\n    refControll = (node) => this.controlBox = node;\r\n\r\n\r\n    render(){\r\n\r\n        return (\r\n            <Fragment>\r\n            { this.props.menuActive ?\r\n                <ControllersBox\r\n                ref = {this.refControll}\r\n                className = 'ControllersEditComponent'\r\n                coordX = {this.state.coordsX}\r\n                coordY = {this.state.coordsY}\r\n                draggable = {!this.state.viewComponentMenu}\r\n                onMouseDown = {this.saveCoords}\r\n                onClick = {this.componentMenu}\r\n                onDrag   = {this.drag}\r\n                onDragEnd = {this.drag}\r\n                shadowDisplay = {this.state.shadowDisplay}\r\n                >\r\n                    <Icon\r\n                        draggable = {true}\r\n                        onClick = {this.componentMenu}\r\n                        className = 'addButton'\r\n                        path = '/img/addButton.png'\r\n                    />\r\n                    {this.state.viewComponentMenu ? \r\n                        <BuildMenu\r\n                            sizeParenBox = {this.props.sizeParenBox}\r\n                            countComponents = {this.props.countComponents}\r\n                            component = {{...this.props.component}}\r\n                        /> : null\r\n                    }\r\n                </ControllersBox>\r\n                : null\r\n            }\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Controllers;","import React, {Fragment} from 'react';\r\nimport eventEmitter from '../../../EventEmitter';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nimport BackgroundComponent from '../../buildComponents/components/Background';\r\nimport Controllers from '../../controllers/controllers';\r\n\r\n\r\nimport './headerBuild.scss';\r\n\r\nclass HeaderBuild extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        id: PropTypes.number.isRequired,\r\n    }\r\n\r\n    state = {\r\n        idProject: this.props.id,\r\n        component: {...this.props.children},\r\n        sizeParenBox: null,\r\n    }\r\n\r\n    saveWidth = eventItem => {\r\n        this.setState({sizeParenBox: {...eventItem}});\r\n    };\r\n\r\n\r\n    changeMode = (event) => {\r\n        if (!this.props.editStart) {\r\n            let rect = event.currentTarget.getBoundingClientRect();\r\n            const width = rect.width;\r\n            const height = rect.height;\r\n        eventEmitter.emit('EventModeEdit', {...this.state, width: width, height: height});\r\n        }\r\n    }\r\n\r\n    refBox = null;\r\n    refBackground = node => this.refBox = node;\r\n\r\n    render() {\r\n\r\n        return (\r\n            <Fragment>\r\n                <div onClick = {this.changeMode} className = 'Header'>\r\n                    <BackgroundComponent id = 'MainBackgroundHeader' background = 'grey'>\r\n                    {  this.props.children.build.componentJSX && this.props.children.build.type === 'text'  ?\r\n                            this.props.children.build.componentJSX : null\r\n                    }\r\n                    </BackgroundComponent>\r\n                    {!this.props.editStart ? <p className = 'warningEdit'>Click for start edit</p> : null}\r\n                    {!this.state.readyBuild ? \r\n                        <Controllers\r\n                            countComponents = {this.props.countComponents}\r\n                            menuActive = {this.props.menuActive}\r\n                            component = {{...this.state.component}}\r\n                            sizeParenBox = {this.state.sizeParenBox}\r\n                            mainWidth = {this.props.children.mainBoxWidth}\r\n                            mainHeight = {this.props.children.mainBoxHeight}\r\n\r\n                        />\r\n                        : null}\r\n                </div>\r\n            </Fragment>\r\n        )\r\n    }\r\n\r\n    componentDidMount = event => {\r\n        eventEmitter.on('EventSaveWidth', this.saveWidth);\r\n    }\r\n\r\n    componentWillUnmount = event => {\r\n        eventEmitter.off('EventSaveWidth', this.saveWidth);\r\n    }\r\n}\r\nexport default HeaderBuild;","import React,{Fragment} from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport {Redirect} from 'react-router-dom';\r\nimport eventEmitter from '../../EventEmitter';\r\n\r\nimport {loadCurrentProjectAction, exitProjectAction} from '../../redux/actions';\r\nimport updateMiddleware from '../../redux/middleware/updateMiddleware';\r\nimport withFirebase from '../../components/firebaseHOC';\r\nimport {connect} from 'react-redux';\r\n\r\nimport ImageViewer from '../../components/imageViewer/imageViewer';\r\nimport Loader from '../../components/loading/Loader';\r\nimport Header from '../../components/header/Header';\r\nimport InstrumentsPanel from '../../components/instrumentsPanel/InstrumentsPanel';\r\nimport ModalWindow from '../../components/modalWindow/ModalWindow';\r\nimport HeaderBuild from '../../components/buildComponents/header/headerBuild';\r\n\r\nimport './build.scss';\r\n\r\n\r\nclass Build extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        param: PropTypes.string,\r\n        match: PropTypes.shape({\r\n            params: PropTypes.shape({\r\n                param: PropTypes.string.isRequired\r\n            }).isRequired\r\n        }).isRequired\r\n    }\r\n\r\n    state = {\r\n            idProject: parseInt(this.props.match.params.param),\r\n            editComponent: {\r\n                name: null,\r\n                build: {\r\n                    name: null,\r\n                    target: null,\r\n                    type: null,\r\n                    mainBoxWidth: null,\r\n                    mainBoxHeight: null,\r\n                    component: [],\r\n                    componentJSX: []\r\n                },\r\n                edit: false\r\n            },\r\n            changeEdit: false,\r\n            instrumentPanel: {\r\n                colorPickerActive: false,\r\n                instrumentActive: false,\r\n                target: '',\r\n                idComponent: null,\r\n            },\r\n            menuActive: false,\r\n            editStart: false,\r\n            modalSearch: false,\r\n            modalImageViewer: {action: false, image: null },\r\n        }\r\n\r\n    modalSearchOn = event => {\r\n        this.setState({...this.state, modalSearch: this.state.modalSearch ? false : true});\r\n    }\r\n\r\n    imageViewerSwitch = event => {\r\n        this.setState({\r\n            ...this.state,\r\n            modalImageViewer: {\r\n                ...this.state.modalImageViewer, \r\n                action: event.action, \r\n                target: event.target\r\n            }\r\n        });\r\n    };\r\n\r\n    workModeEdit = itemEvent => {\r\n        if (!this.state.editStart || this.state.changeEdit)\r\n        this.setState({\r\n            ...this.state,\r\n            idProject: itemEvent.idProject,\r\n            editComponent: {\r\n                ...itemEvent.component,\r\n                mainBoxWidth: itemEvent.width,\r\n                mainBoxHeight: itemEvent.height\r\n            },\r\n            menuActive: true,\r\n            editStart: true\r\n        });\r\n\r\n    }\r\n\r\n    openInstrument = itemEvent => {\r\n        let targetEqual = this.state.instrumentPanel.target !== itemEvent.target;\r\n        let {instumentActive} = this.state.instrumentPanel;\r\n        if (targetEqual && this.state.editStart && !instumentActive)\r\n        this.setState({\r\n            ...this.state,\r\n            instrumentPanel: {\r\n                ...this.state.instrumentPanel,\r\n                instrumentActive: true,\r\n                sizeTextValue: itemEvent.sizeTextValue,\r\n                idComponent: itemEvent.id,\r\n                target: itemEvent.target\r\n            }\r\n        })\r\n    }\r\n\r\n    closePanel = event => {\r\n        this.setState({\r\n            ...this.state,\r\n            instrumentPanel: {\r\n                ...this.state.instrumentPanel,\r\n                colorPickerActive: false,\r\n                instrumentActive: event.close\r\n            }\r\n        });\r\n    };\r\n\r\n    addHeaderComponent = itemEvent => {\r\n\r\n        let {componentJSX} = this.state.editComponent.build;\r\n        this.setState({\r\n            ...this.state,\r\n            editComponent: {\r\n                ...this.state.editComponent,\r\n                build: {\r\n                    ...this.state.editComponent.build,\r\n                    target: itemEvent.target,\r\n                    type: itemEvent.type,\r\n                    componentJSX: [...componentJSX, ...itemEvent.component]},\r\n            },\r\n        });\r\n    };\r\n\r\n    saveChangesComponent = itemEvent => {\r\n        let componentSaveInBase = {...itemEvent, name: this.state.editComponent.name};\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            editComponent: {\r\n                ...this.state.editComponent,\r\n                build: {\r\n                    ...this.state.editComponent.build,\r\n                    component: [...this.state.editComponent.build.component, componentSaveInBase]\r\n                }\r\n            }\r\n        }, () => (\r\n        this.props.dispatch(updateMiddleware({\r\n            uid: this.props.idUser,\r\n            projects: [...this.props.currentProject],\r\n            component: [...this.state.editComponent.build.component],\r\n            idProject: this.state.idProject}))\r\n        ));\r\n    };\r\n\r\n\r\n    render(){\r\n        let instrumentActive = this.state.instrumentPanel.instrumentActive;\r\n        if (this.props.active && this.props.loadProject){\r\n            return (\r\n                    <Fragment key = 'build'>\r\n                    {   this.state.modalImageViewer.action ?\r\n                        <ImageViewer key = 'ImageViewer' path = {this.state.modalImageViewer.target} /> : null\r\n                    }\r\n                    {this.state.modalSearch ?\r\n                        <ModalWindow\r\n                            idComponent = {this.state.instrumentPanel.idComponent}\r\n                            key = 'ModalWindow' workMode = 'Search' /> : null\r\n                    }\r\n                    { instrumentActive ?\r\n                        <InstrumentsPanel\r\n                            key = 'InstrumentsPanel'\r\n                            editComponent =  {{...this.state.editComponent}}\r\n                            instrumentPanel = {{...this.state.instrumentPanel}}\r\n                        />\r\n                        : null\r\n                    }\r\n                        <Header key = 'Header' title = \"Constructor\"  />\r\n                        <HeaderBuild\r\n                                key = 'HeaderBuild'\r\n                                editStart = {this.state.editStart}\r\n                                countComponents = {this.state.editComponent.build.componentJSX.length}\r\n                                menuActive = {this.state.menuActive}\r\n                                id = {this.state.idProject}\r\n                        >\r\n                            {{...this.state.editComponent, name: 'Header'}}\r\n                        </HeaderBuild>\r\n                    </Fragment>\r\n            )\r\n        } else if (!this.props.firebase.getCurrentUser()) return <Redirect to = { '/'} />\r\n        else return <Loader  key = 'Loader' path = '/img/loading.gif' type = 'build' />\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevProps.loadProject === this.props.loadProject && this.props.haveUpdateLoading) {\r\n            let current =  this.props.currentProject.find(item => item.id === this.state.idProject)\r\n            this.props.dispatch(loadCurrentProjectAction({\r\n                id: current.id,\r\n                typeProject: current.type,\r\n                component: [...current.component]\r\n            }))\r\n        }\r\n    }\r\n    \r\n\r\n    componentDidMount = () => {\r\n        if (this.props.active && !this.props.loadProject && this.props.haveUpdateLoading) {\r\n            let current =  this.props.currentProject.find(item => item.id === this.state.idProject)\r\n            this.props.dispatch(loadCurrentProjectAction({\r\n                id: current.id,\r\n                typeProject: current.type,\r\n                component: [...current.component]\r\n            }))\r\n        };\r\n        eventEmitter.on('EventBuildHeaderComponents', this.addHeaderComponent);\r\n        eventEmitter.on('EventSaveChangesComponent', this.saveChangesComponent);\r\n        eventEmitter.on('EventClosePanel', this.closePanel);\r\n        eventEmitter.on('EventModalSearchOn', this.modalSearchOn);\r\n        eventEmitter.on('EventInstrumentPanel', this.openInstrument);\r\n        eventEmitter.on('EventImageView', this.imageViewerSwitch);\r\n        eventEmitter.on('EventModeEdit', this.workModeEdit);\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        if (this.props.active)  this.props.dispatch(exitProjectAction(true));\r\n        eventEmitter.off('EventBuildHeaderComponents', this.addHeaderComponent);\r\n        eventEmitter.off('EventSaveChangesComponent', this.saveChangesComponent);\r\n        eventEmitter.off('EventModalSearchOn', this.modalSearchOn);\r\n        eventEmitter.off('EventClosePanel', this.closePanel);\r\n        eventEmitter.off('EventInstrumentPanel', this.openInstrument);\r\n        eventEmitter.off('EventImageView', this.imageViewerSwitch);\r\n        eventEmitter.off('EventModeEdit', this.workModeEdit);\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        ...state.builder,\r\n        active: state.cabinet.active,\r\n        idUser: state.cabinet.idUser,\r\n        currentProject: state.cabinet.projects\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(withFirebase(Build));","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport {Route, Switch} from 'react-router-dom';\r\n\r\nimport {middlewareLoadUserData} from './redux/middleware/loadUserMiddleware';\r\nimport {connect} from 'react-redux';\r\nimport withFirebase from './components/firebaseHOC';\r\nimport Loader from './components/loading/Loader';\r\n\r\nimport Index from './Pages/Index/Index';\r\nimport Cabinet from './Pages/Cabinet/Cabinet';\r\nimport About from './Pages/About/About';\r\nimport Build from './Pages/Build/Build';\r\nimport ErrorPage from './components/ErrorCatch/ErrorPage';\r\n\r\n// require('es6-promise').polyfill();\r\n\r\nclass App extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        config: PropTypes.object.isRequired,\r\n        firebase: PropTypes.object.isRequired,\r\n    }\r\n\r\n    state = {\r\n        firebase: this.props.firebase,\r\n        firebaseLoadState: false,\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.props.firebase.auth.onAuthStateChanged((user) => {\r\n            if (!this.state.firebaseLoadState)\r\n                if (user) this.props.dispatch(middlewareLoadUserData(user.uid));\r\n\r\n                this.setState({...this.state, firebaseLoadState: true});\r\n        });\r\n    };\r\n\r\n    render(){\r\n        if (this.state.firebaseLoadState){\r\n        return (\r\n                <Switch>\r\n                    <Route\r\n                        path = {'/'} exact\r\n                        render = {(props) => <Index {...props} />}\r\n                    />\r\n                    <Route path = '/Cabinet/' exact component = {Cabinet}/>\r\n                    <Route\r\n                        path = {'/Cabinet/About'}\r\n                        render = {(props) => <About {...props} config = {this.props.config} />}\r\n                    />\r\n                    <Route path = {'/Cabinet/Build/:param'} component = {Build}/>\r\n                    <Route path = {'*'} component = {Index} />\r\n                    <Route path = {'/crashPage'} component = {ErrorPage} />\r\n                </Switch>\r\n\r\n        )\r\n        } else return <Loader path = { '/img/loading.gif'} type = 'application' />\r\n    }\r\n}\r\n\r\n// const mapStateToProps = (state) => {\r\n//     return {\r\n//       active: state.cabinet.active\r\n//     }\r\n//   }\r\n\r\nexport default connect()(withFirebase(App));","\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\n\nimport ErrorBoundary from './components/ErrorCatch/ErrorBoundary';\nimport {HashRouter } from 'react-router-dom';\nimport {Provider} from 'react-redux';\nimport store from './redux/store';\nimport App from './App.jsx';\nimport 'normalize.css';\n\n\nconst config = require('./config.json');\n\nReactDOM.render(\n        <HashRouter>\n            <ErrorBoundary>\n                <Provider store = {store}>\n                    <App config = {config} />\n                </Provider>\n            </ErrorBoundary>\n        </HashRouter >,\n        document.getElementById('root')\n);\n\nserviceWorker.register();\n\n"],"sourceRoot":""}