{"version":3,"sources":["serviceWorker.js","Firebase/firebaseConfig.js","Firebase/Firebase.js","EventEmitter.js","components/ErrorCatch/ErrorPage.jsx","components/ErrorCatch/ErrorBoundary.jsx","redux/actions.js","redux/reducerBuilder.js","redux/reducerCabinet.js","redux/reducers.js","redux/store.js","redux/middleware/loadUserMiddleware.js","Firebase/firebaseContext.js","components/firebaseHOC.jsx","components/loading/Loader.jsx","components/AnimationText/AnimationTitle.jsx","components/Registration/Registration.jsx","Pages/Index/Index.jsx","redux/middleware/middlewareDelete.js","components/Icon/icon.jsx","components/confirmBox/Confirm.jsx","components/header/Header.jsx","components/imageViewer/imageItem.jsx","components/modalWindow/createProject/createProject.jsx","components/modalWindow/Search/searchModal.jsx","components/modalWindow/ModalWindow.jsx","redux/middleware/createProjectMiddleware.js","components/List/Item.jsx","components/List/List.jsx","components/ProjectsSection/ProjectsSection.jsx","Pages/Cabinet/Cabinet.jsx","components/buildComponents/components/Background.jsx","components/buildComponents/MainBackground/MainBackground.jsx","components/buildComponents/section.jsx","components/builderHOC.jsx","components/buildComponents/components/Input.jsx","components/buildComponents/components/Media.jsx","components/buildComponents/components/Image.jsx","components/buildComponents/components/Text.jsx","Pages/Production/Production.jsx","Pages/About/About.jsx","redux/middleware/updateMiddleware.js","components/imageViewer/Viewer.jsx","components/instrumentsPanel/InputTools/InputInstruments.jsx","components/instrumentsPanel/MediaTools/MediaInstruments.jsx","components/instrumentsPanel/ImageTools/ImageInstruments.jsx","components/instrumentsPanel/BackgroundTools/BackgroundInstruments.jsx","components/instrumentsPanel/TextTools/TextInstruments.jsx","components/instrumentsPanel/InstrumentsPanel.jsx","components/additionalTools/additionalTools.jsx","components/componentsBuildMenu/BuildMenu.jsx","components/controllers/controllers.jsx","Pages/Build/Build.jsx","components/scroll/ScrollMove.jsx","App.jsx","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","firebaseConfig","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firebaseInterface","require","Firebase","Object","classCallCheck","this","firebase","auth","db","rules","setPersistence","Auth","Persistence","email","password","signInWithEmailAndPassword","createUserWithEmailAndPassword","signOut","currentUser","stream","EventEmitter","controllerStream","ErrorPage","redirect","update","event","_this","setState","eventEmitter","emit","react_default","a","createElement","react_router","to","class","className","onClick","React","Component","ErrorBoundary","hasError","updateApplication","componentDidMount","on","componentWillUnmount","off","info","ErrorCatch_ErrorPage","props","children","PureComponent","exitProjectAction","type","exit","loadCurrentProjectAction","id","typeProject","sectionsProject","components","loadUpdateCurrentProject","idProject","toConsumableArray","loadUserAction","active","idUser","uid","projects","errorAction","initialState","loadProject","combineReducers","builder","arguments","length","undefined","action","objectSpread","cabinet","map","item","middleware","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","thunk","withExtraArgument","store","createStore","middlewareLogin","_ref2","asyncToGenerator","regenerator_default","mark","_callee","dispatch","getState","_ref","wrap","_context","prev","next","login","response","collection","doc","user","get","docUser","data","message","stop","_x","_x2","_x3","apply","middlewareLogOutUser","_ref6","_callee3","_ref5","_context3","_x7","_x8","_x9","firebaseContext","createContext","withFirebase","Firebase_firebaseContext","Consumer","assign","loading_Loader","_useState","useState","path","slicedToArray","_useState3","mode","concat","src","alt","AnimationTitle","styled","h3","_templateObject","color","AnimationText","tilteContent","content","split","currentTitle","positionTitle","directionAnimation","msAnimation","timerAnimation","animationTitle","timer","self","assertThisInitialized","setTimeout","tick","counter","word","_title","slice","e","clearTimeout","data-titlebuild","emailRef","passwordRef","setRefEmail","node","setRefPassword","createUser","value","Error","set","indexStream","autoComplete","ref","Index","Events","title","registrationActive","regStatus","wrongEnter","emailImput","passwordImput","statusRegistration","additionalUserInfo","isNewUser","showBox","stopPropagation","authTo","AnimationText_AnimationTitle","TransitionGroup","component","CSSTransition","timeout","unmountOnExit","classNames","components_Registration_Registration","connect","middlewareDeleteProjectComponent","_ref4","_callee2","_ref3","_context2","findProject","find","project","filter","idComponent","dataUpdate","abrupt","_x4","_x5","_x6","middlewareDelete","itemdb","Icon","_useState5","draggable","Confirm","cbSaveChanges","cbCancelSave","iconPath","CabinetIcon","Header","isChange","redirectConfirm","redirectAbout","redirectA","redirectCabinet","redirectC","confirm","false","confirmSaveDetectChanges","logOut","pathname","add","cabinetStream","componentWillMount","_this2","Fragment","components_confirmBox_Confirm","Icon_icon","withRouter","ImageItem","urls","regular","urlRegular","full","urlFull","_useState7","isFull","_useState9","urlContent","selected","url","iframe","CreateProject","isNumber","nameLength","warningLengthMin","warningLengthMax","validName","warningNumber","typeClassName","name","onChange","cbValidateName","placeholder","validType","warningType","cbSelectOption","cbAddNewProject","disabled","dissabled","cbCancel","loading","SearchModal","modalSearchMode","items","images","search","refSearch","cbSearch","refSearchFunc","componentDidUpdate","prevProps","haveUpdate","isSelected","selectedId","cbMakeImageResultBox","menuActive","cbShowImage","cbSetSelectedImage","polyfill","ModalWindow","workMode","buttonSearchDisabled","selectedItem","showUrl","imageBoxView","newProject","validateName","validateType","imageMenuActive","warning","lengthMax","lengthMin","inputSearch","inputSelect","searchData","inages","api","isFetch","ok","json","results","searchYouTubeAPI","RAITE","KEY","res","status","arrayItems","forEach","push","snippet","thumbnails","high","videoId","showMenuImage","showImage","_this$state$images","eventStreamBuild","target","setSelectedImage","makeImageResultBox","i","imageItem","key","addNewProject","selectOption","inputs","defineProperty","test","cancel","refSelect","createProject","searchModal","view","loader","react","middlewareCreateProject","list","lastProject","lastIndex","header","backgroundImage","backgroundColor","min","max","Math","floor","random","targetSection","productionPath","_useState6","canBuild","setCanBuild","_useState8","canProd","setCanProd","_useState11","_useState13","data-id","List","makeList","List_Item","ProjectsSection","components_List_List","Cabinet","deletItem","getCurrentUser","changeWorkMode","header_Header","modalWindow_ModalWindow","components_ProjectsSection_ProjectsSection","Background","div","Background_templateObject","width","height","BackgroundComponent","background","boxComponent","boxComponentRef","saveDataParent","boxInform","getBoundingClientRect","countSection","sectionNumber","size","openBgInstruments","componentsPatternBackground","componentStats","changeColor","eventItem","colorRGB","setBackgroundImage","onDoubleClick","data-name","MainBackground","editRedy","changeMode","editStart","editComponentName","refSection","refSectionFunc","currentProjectsData","componentJSX","needUpdate","countComponents","data-class","components_Background","Section","userData","buildComponents_MainBackground_MainBackground","sizeParentBox","section","componentsProdJSX","builderHOC","InputComponent","input","attrs","style","zIndex","indexZ","left","coordX","top","coordY","Input_templateObject","w","h","fontSize","borderRadius","ProductionStyle","_templateObject2","Input","istrumentsActive","getSizeBool","typeInput","shiftCoords","posInput","coords","x","y","startDragNdrop","openInputInstruments","componentsPatternImage","sizeTextValue","saveCoords","nativeEvent","which","element","refInput","cords","right","bottom","clientX","clientY","changeSize","eventSize","changeSizeText","setBorderRadius","radius","borderDown","changeContent","checkPivotPosition","borderRight","delta","trans","transT","move","moveInput","num","xItem","yItem","convertToPercentX","convertToPercentY","toFixed","stopDragNdrop","saveSize","setWidth","setType","setHeight","refInputComponent","onMouseDown","onMouseMove","onMouseLeave","onMouseUp","onDragStart","data-imagecomponentwrapper","WrapperMedia","display","justifyContent","alignItems","padding","Media_templateObject","Media","Media_templateObject2","_templateObject3","MediaComponent","posMedia","drawContent","openMediaInstruments","componentsPatternMedia","refMedia","moveMedia","setContent","refMediaComponent","allowfullscreen","Media_ProductionStyle","WrapperImg","Image_templateObject","ImageStyle","img","Image_templateObject2","opacity","Image_templateObject3","Image","image","posImage","openImageInstruments","refImage","moveText","setCurrentImage","changeSizeImage","setOpacity","refImageComponent","data-imagecomponent","Image_ProductionStyle","crossOrigin","WrapperText","Text_templateObject","textColor","TextStyle","p","Text_templateObject2","font","Text_templateObject3","TextComponent","isHaveSize","parent","colorText","sizeText","position","contentText","openTitleInstruments","componentsPatternText","posText","changeColorText","changeContentText","eventContent","refText","setFont","sectionNum","refTextComponent","data-textcomponent","Text_ProductionStyle","Production","parseInt","params","param","projectEmpty","isLoadComponents","makeProduction","array","_components","prodRef","patternJSX","mainProductionRef","prevState","current","buildComponents_section","About","about","developer","year","updateMiddleware","newProjects","JSON","parse","stringify","Viewer","frameBorder","allow","allowFullScreen","InputInstruments","colorPickerActive","instrumentPanel","_content","cbSetColor","lib","onChangeComplete","cbHandleChangeComplete","cbSetWidth","cbSetHeight","cbSetSize","cbSetBorderRadius","cbSetType","cbSetContent","maxLength","cbDelete","MediaInstruments","ImageInstruments","fileRef","createRef","cbSetOpacity","step","cbLoadFile","accept","BackgroundInstruments","TextInstruments","cbSetFont","InstrumentsPanel","closePanel","close","setSize","fontName","setIframeContent","contentValue","updatePosition","setColor","updateBimageStats","handleChangeComplete","rgb","r","g","b","redirectSaveChanges","ms","saveChanges","deleteComponent","loadFile","files","reader","FileReader","readAsDataURL","onload","result","onerror","makePanelInstruments","TextTools_TextInstruments","BackgroundTools_BackgroundInstruments","ImageTools_ImageInstruments","MediaTools_MediaInstruments","InputTools_InputInstruments","oldProps","oldState","instrumentActive","AdditionalTools","modalViewer","imageViewer_Viewer","modalSearch","instrumentsPanel_InstrumentsPanel","BuildMenu","addText","componentsPattern","Text","addBackground","addImage","components_Image","addMedia","components_Media","addInput","componentsPatternInput","components_Input","inputType","addSection","Controllers","viewComponentMenu","shiftX","shiftY","coordsX","coordsY","shadowDisplay","componentMenu","refControll","componentsBuildMenu_BuildMenu","Build","eventEmitterBuild","EventBuild","modalSearchOn","itemEvent","modeHave","hasOwnProperty","ViewerSwitch","workModeEdit","openInstrument","_componentJSX","addComponentsFromBD","componentsFromDB","mainComponent","addComponent","saveChangesComponent","findCurrentItem","mainRefComponent","addNewSection","showAddSection","controllers","additionalTools","ScrollMove","scrollConfig","duration","delay","smooth","offset","positionCount","setStates","blockMove","moveLocation","count","moveDown","deltaY","moveUp","scroller","scrollTo","scroll","scrollToTop","onWheel","onTouchStart","App","firebaseLoadState","onAuthStateChanged","_this3","exact","render","Pages_Index_Index","Pages_About_About","scroll_ScrollMove","Pages_Build_Build","saveSession","time","ReactDOM","react_router_dom","ErrorCatch_ErrorBoundary","Provider","es","src_App","document","getElementById","URL","href","origin","addEventListener","fetch","contentType","headers","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.092bfb20.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log('This web app is being served cache-first by a service worker.');\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","// setings in root folder / firebase.env\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n    databaseURL: process.env.REACT_APP_DATABASE_URL,\r\n    projectId: process.env.REACT_APP_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n    appId: process.env.REACT_APP_APPID\r\n};\r\n\r\nexport default firebaseConfig;","import * as firebase from 'firebase/app';\r\nimport firebaseConfig from './firebaseConfig';\r\n\r\nconst auth = require('firebase/auth');\r\nconst firestore = require('firebase/firestore');\r\n\r\nclass Firebase {\r\n\r\n    constructor(firebaseConfig){\r\n        firebase.initializeApp(firebaseConfig);\r\n        this.auth = firebase.auth();\r\n        this.db = firebase.firestore();\r\n    }\r\n\r\n    saveSession(rules){\r\n        return this.auth.setPersistence(firebase.auth.Auth.Persistence[rules]);\r\n    }\r\n\r\n    login(email, password){\r\n        try {\r\n            return this.auth.signInWithEmailAndPassword(email, password);\r\n        } catch (error) {\r\n            console.error(error);\r\n            return null;\r\n        }\r\n    }\r\n\r\n    registration(email, password){\r\n        return this.auth.createUserWithEmailAndPassword(email, password)\r\n    }\r\n\r\n    signOut(){\r\n        return this.auth.signOut()\r\n    }\r\n\r\n    getCurrentUser() {\r\n        return this.auth.currentUser\r\n    }\r\n}\r\n\r\nlet firebaseInterface = new Firebase(firebaseConfig);\r\n\r\nexport default firebaseInterface;\r\n\r\nexport { auth, firestore };\r\n\r\n","import {EventEmitter} from 'events';\r\n\r\nconst stream = new EventEmitter();\r\nconst controllerStream = new EventEmitter();\r\n\r\nexport {controllerStream};\r\nexport default stream;\r\n","import React from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\nimport eventEmitter from '../../EventEmitter';\r\n\r\nimport './errorPage.scss';\r\n\r\n\r\nclass ErrorPage extends React.Component {\r\n\r\n    state = {\r\n        redirect: false,\r\n    }\r\n\r\n    update = event => {\r\n       this.setState({redirect: true},\r\n        () => eventEmitter.emit('EventErrorCatchUpdate'));\r\n    }\r\n\r\n    render(){\r\n        if (this.state.redirect) return <Redirect to = '/' />\r\n        return (\r\n        <div class = 'container'>\r\n            <div class = 'flex-column'>\r\n                <h1>Application crash</h1>\r\n                <button className = 'button_updateApp' onClick = {this.update}>Update</button>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ErrorPage;","\r\nimport React from 'react';\r\nimport eventEmitter from '../../EventEmitter';\r\nimport ErrorPage from './ErrorPage';\r\n\r\nclass ErrorBoundary extends React.PureComponent {\r\n\r\n      state = { \r\n        hasError: false,\r\n      };\r\n\r\n    static getDerivedStateFromError(error) {\r\n        console.log(error);\r\n      // Обновить состояние с тем, чтобы следующий рендер показал запасной UI.\r\n      return { hasError: true};\r\n    }\r\n\r\n    updateApplication = event => {\r\n      this.setState({hasError: false});\r\n    };\r\n  \r\n    componentDidCatch(error, info) {\r\n      // Можно также сохранить информацию об ошибке в соответствующую службу журнала ошибок\r\n     console.error(error + \",\" + info);\r\n    }\r\n  \r\n    render() {\r\n      if (this.state.hasError) return <ErrorPage />\r\n      return this.props.children;\r\n    }\r\n\r\n    componentDidMount = () => {\r\n      eventEmitter.on('EventErrorCatchUpdate',this.updateApplication);\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n      eventEmitter.off('EventErrorCatchUpdate',this.updateApplication);\r\n    }\r\n  }\r\n\r\n  export default ErrorBoundary;","const CREATE_PROJECT = 'CREATE_PROJECT';\r\nconst LOAD_UPDATE_PROJECT = \"LOAD_UPDATE_PROJECT\";\r\nconst LOAD_CURRENT = 'LOAD_CURRENT';\r\nconst LOG_OUT_CABINET = 'LOG_OUT_CABINET';\r\nconst LOAD_USER_CABINET = 'LOAD_USER_CABINET';\r\nconst ERROR_CABINET = 'ERROR_CABINET';\r\nconst EXIT_PROJECT = 'EXIT_PROJECT';\r\n\r\nconst createProjectAction = (state) => {\r\n    return {\r\n        type: CREATE_PROJECT,\r\n        projects: state,\r\n    }\r\n}\r\n\r\nconst exitProjectAction = (state) => {\r\n    return {\r\n        type: EXIT_PROJECT,\r\n        exit: state\r\n    }\r\n}\r\n\r\nconst loadCurrentProjectAction = (state) => {\r\n    return {\r\n        type: LOAD_CURRENT,\r\n        id: state.id,\r\n        typeProject: state.typeProject,\r\n        sectionsProject: state.sectionsProject,\r\n        components: state.components\r\n    }\r\n}\r\n\r\nconst loadUpdateCurrentProject = (state) => {\r\n    return {\r\n        type: LOAD_UPDATE_PROJECT,\r\n        idProject: state.idProject,\r\n        sectionsProject: [...state.sectionsProject],\r\n        components: [...state.components]\r\n    }\r\n}\r\n\r\nconst loadUserAction = (state) => {\r\n    return {\r\n        type: LOAD_USER_CABINET,\r\n        active: true,\r\n        idUser: state.uid,\r\n        error: '',\r\n        projects: state.projects\r\n    }\r\n}\r\n\r\nconst logOutAction = (state) => {\r\n\r\n    return {\r\n        type: LOG_OUT_CABINET,\r\n        active: false,\r\n        idUser: null,\r\n        error: '',\r\n        projects: []\r\n    }\r\n}\r\n\r\nconst errorAction = (state) => {\r\n    return {\r\n        type: ERROR_CABINET,\r\n        error: state\r\n    }\r\n}\r\n\r\nexport {\r\n    CREATE_PROJECT, createProjectAction, /* cabinet */\r\n    LOAD_USER_CABINET, loadUserAction, /* cabinet */\r\n    LOG_OUT_CABINET, logOutAction, /* cabinet */\r\n    LOAD_CURRENT, loadCurrentProjectAction, /* builder */\r\n    LOAD_UPDATE_PROJECT, loadUpdateCurrentProject,\r\n    EXIT_PROJECT, exitProjectAction,\r\n    ERROR_CABINET, errorAction, /* both */\r\n}","import {LOAD_CURRENT,LOAD_UPDATE_PROJECT, EXIT_PROJECT} from './actions';\r\n\r\nconst initialState = {\r\n    loadProject: false,\r\n    idProject: null,\r\n    typeProject: null,\r\n    components: [],\r\n    sectionsProject: [],\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n    switch (action.type){\r\n\r\n        case LOAD_CURRENT: {\r\n            return {\r\n                ...state,\r\n                loadProject: true,\r\n                idProject: action.id,\r\n                typeProject: action.typeProject,\r\n                components: [...action.components],\r\n                sectionsProject: [...action.sectionsProject]\r\n            }\r\n        }\r\n\r\n        case LOAD_UPDATE_PROJECT: {\r\n            return {\r\n                ...state,\r\n                components: [...action.components],\r\n                sectionsProject: [...action.sectionsProject]\r\n            }\r\n        }\r\n\r\n        case EXIT_PROJECT: {\r\n            if (action.exit)\r\n            return {\r\n                ...state,\r\n                loadProject: false,\r\n                idProject: null,\r\n                typeProject: null,\r\n                components: []\r\n            }\r\n            else return state;\r\n        }\r\n        default: return state;\r\n    }\r\n};","import {LOAD_USER_CABINET, LOG_OUT_CABINET, ERROR_CABINET, CREATE_PROJECT, LOAD_UPDATE_PROJECT} from './actions';\r\n\r\nconst initialState = {\r\n    active: false,\r\n    idUser: null,\r\n    projects: [],\r\n    error: null,\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case LOAD_USER_CABINET: {\r\n\r\n            return {\r\n                ...state,\r\n                active: action.active,\r\n                idUser: action.idUser,\r\n                projects: [...action.projects]\r\n            }\r\n        }\r\n\r\n        case CREATE_PROJECT: {\r\n            return {\r\n                ...state,\r\n                projects: [...action.projects]\r\n            }\r\n        }\r\n\r\n        case LOAD_UPDATE_PROJECT: {\r\n            return {\r\n                ...state,\r\n                projects: state.projects.map(item => {\r\n                    if (item.id === action.idProject)\r\n                        item.components = [...action.components]\r\n                return item;\r\n                })\r\n            }\r\n        }\r\n\r\n        case LOG_OUT_CABINET: {\r\n            return {\r\n                ...state,\r\n                active: false,\r\n                idUser: null,\r\n                projects: []\r\n            }\r\n        }\r\n\r\n        case ERROR_CABINET: {\r\n            return {\r\n                ...state,\r\n                error: action.error\r\n            }\r\n        }\r\n        default: return state;\r\n    }\r\n}\r\n\r\n","import {combineReducers} from 'redux';\r\nimport reducerBuilder from './reducerBuilder';\r\nimport reducerCabinet from './reducerCabinet';\r\n\r\nexport default combineReducers({\r\n    builder: reducerBuilder,\r\n    cabinet: reducerCabinet,\r\n});","import {createStore, applyMiddleware, compose} from 'redux';\r\nimport firebase from  '../Firebase/Firebase';\r\nimport thunk from 'redux-thunk';\r\nimport combineReducers from './reducers';\r\n\r\nconst composeEnhancers =\r\n  typeof window === 'object' &&\r\n  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?\r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\r\n    }) : compose;\r\n\r\nconst middleware = composeEnhancers(\r\n  applyMiddleware(thunk.withExtraArgument({firebase})));\r\n\r\nconst store = createStore(combineReducers, middleware);\r\nexport default store;","import {loadUserAction, errorAction, logOutAction} from '../actions';\r\n\r\nconst middlewareLogin = (email,password) => async (dispatch,getState, {firebase}) => {\r\n        await firebase.login(email,password)\r\n        .then(response =>{\r\n            firebase.db.collection(\"users\").doc(response.user.uid).get()\r\n            .then(docUser => {\r\n                let user = docUser.data();\r\n                dispatch(loadUserAction({uid: docUser.id, projects: [...user.projects]}))\r\n            })\r\n        })\r\n        .catch((error) => {\r\n            console.error(error.message);\r\n            dispatch(errorAction(error.message));\r\n        });\r\n    }\r\n\r\nconst middlewareLoadUserData = (uid) => async (dispatch,getState, {firebase}) => {\r\n        await firebase.db.collection(\"users\").doc(uid).get()\r\n        .then(docUser => {\r\n            let user = docUser.data();\r\n            dispatch(loadUserAction({uid: uid, projects: [...user.projects]}))\r\n        })\r\n        .catch((error) => {\r\n            console.error(error.message);\r\n            dispatch(errorAction(error.message));\r\n        });\r\n    }\r\n\r\nconst middlewareLogOutUser = (uid) => async (dispatch,getState, {firebase}) => {\r\n    await firebase.signOut()\r\n    .then (response => {\r\n        dispatch(logOutAction());\r\n    })\r\n    .catch((error) => {\r\n        console.error(error.message);\r\n        dispatch(errorAction(error.message));\r\n    });\r\n}\r\nexport {\r\n    middlewareLogin,middlewareLoadUserData, middlewareLogOutUser\r\n}","import React from 'react';\r\nimport firebase from './Firebase';\r\nconst firebaseContext = React.createContext(firebase);\r\nexport default firebaseContext;","import React from 'react';\r\nimport firebaseContext from '../Firebase/firebaseContext';\r\n\r\n\r\nconst withFirebase = Component => props => {\r\n        return (\r\n            <firebaseContext.Consumer>\r\n                {firebase => <Component {...props} firebase = {firebase} /> }\r\n            </firebaseContext.Consumer>\r\n        )\r\n};\r\n\r\n\r\nexport default withFirebase;","import React,{useState} from 'react';\r\nimport './Loader.scss';\r\nexport default function(props) {\r\n    const [path] = useState(props.path ? props.path : '/img/loading.gif');\r\n    const [mode] = useState(props.mode ? props.mode : false);\r\n    return (\r\n            <div className = {`loaderBox ${mode && 'specialMode'}`}>\r\n                <img className = 'loader' src = {path} alt = 'loader'></img> \r\n                {!mode && <p>{`Loading ${props.type}`}</p>}\r\n            </div>\r\n    )\r\n}","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst AnimationTitle = styled.h3`\r\n    user-select: none;\r\n    transition: .4s linear all;\r\n    color: ${props => props.color === 'up' ? 'red' : 'blue'};\r\n`;\r\n\r\nclass AnimationText extends React.PureComponent {\r\n\r\n    state = {\r\n        tilteContent: this.props.content.split(''),\r\n        currentTitle: this.props.content[0],\r\n        positionTitle: 1,\r\n        directionAnimation: 'up',\r\n        msAnimation: this.props.msAnimation,\r\n    }\r\n\r\n    timerAnimation = null;\r\n\r\n    animationTitle = timer => {\r\n        let self = this;\r\n        timer = setTimeout( function tick(){\r\n            if (self.state.directionAnimation === 'up'){\r\n                let counter = self.state.tilteContent.length;\r\n                const word = counter > self.state.positionTitle ?\r\n                            self.state.tilteContent[self.state.positionTitle] :\r\n                            self.state.tilteContent[self.state.positionTitle-1];\r\n                self.setState({\r\n                    ...self.state,\r\n                    currentTitle: self.state.currentTitle + word,\r\n                    positionTitle: self.state.positionTitle + 1,\r\n                    directionAnimation: self.state.positionTitle === counter ? 'down' : 'up',\r\n                    msAnimation: self.state.positionTitle === counter ? 1000 : 150\r\n                });\r\n            }\r\n            if (self.state.directionAnimation === 'down'){\r\n                let _title = self.state.currentTitle;\r\n                const length = self.state.currentTitle.length;\r\n                _title = _title.slice(0,length - 1);\r\n                self.setState({\r\n                    ...self.state,\r\n                    currentTitle: _title,\r\n                    positionTitle: self.state.positionTitle - 1,\r\n                    directionAnimation: self.state.positionTitle === 2 ? 'up' : 'down',\r\n                    msAnimation: self.state.positionTitle === 2 ? 1000 : 150\r\n                });\r\n            }\r\n            timer = setTimeout(tick, self.state.msAnimation);\r\n        }, this.state.msAnimation);\r\n    }\r\n\r\n\r\n    render(){\r\n        return (\r\n            <AnimationTitle data-titlebuild color = {this.state.directionAnimation}>\r\n                {this.state.currentTitle}\r\n            </AnimationTitle>\r\n        )\r\n\r\n    }\r\n\r\n    componentDidMount = (e) => {\r\n        this.animationTitle(this.timerAnimation);\r\n    }\r\n\r\n    componentWillUnmount = (e) => {\r\n        if (this.timerAnimation) clearTimeout(this.timerAnimation);\r\n    }\r\n}\r\n\r\n\r\nexport default AnimationText;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './registration.scss';\r\n\r\nimport withFirebase from '../../components/firebaseHOC';\r\n\r\n\r\nclass Registration extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        firebase: PropTypes.object.isRequired, /** @firebase class for use firebase functions */\r\n        indexStream: PropTypes.object.isRequired /** @Events stream object */\r\n    }\r\n\r\n    state = {\r\n        firebase: this.props.firebase,\r\n        error: null,\r\n    }\r\n\r\n    emailRef = null;\r\n    passwordRef = null;\r\n\r\n    setRefEmail = (node) => this.emailRef = node;\r\n    setRefPassword = (node) => this.passwordRef = node;\r\n\r\n    createUser = event => {\r\n\r\n        const email = this.emailRef ? this.emailRef.value : null;\r\n        const password = this.passwordRef ? this.passwordRef.value : null;\r\n        const { firebase } = this.props;\r\n\r\n        if (password && email)\r\n        firebase.registration(email, password)\r\n        .then(response => {\r\n            if (!response) throw new Error('Ivaid registration')\r\n            firebase.db.collection(\"users\").doc(response.user.uid).set({\r\n                'projects': [],\r\n                'email': email,\r\n            }).then(() => this.props.indexStream.emit('EventRegistrationCorrect', response));\r\n        })\r\n        .catch((error) => {\r\n        console.error(error.message);\r\n        this.setState({error: error.message});\r\n        });\r\n        else  return this.setState({error: 'invalid user data'});\r\n    };\r\n\r\n    render(){\r\n        let  { error } = this.state;\r\n        return (\r\n            <div className ='RegistrationBox'>\r\n                <div  className = 'RegistrationForm'>\r\n                    <h3>Registration</h3>\r\n                    <form autoComplete = 'off' className = 'RegForm'>\r\n                        { error ?\r\n                            <p className = 'error'>{error}</p>\r\n                            : null\r\n                        }\r\n                        <span>E-mail</span>\r\n                        <input ref = {this.setRefEmail} type = 'text' />\r\n                        <span>Password</span>\r\n                        <input className = 'password' autoComplete = \"off\" ref = {this.setRefPassword} type = 'password' />\r\n                        <input onClick = {this.createUser}\r\n                                className = 'loginButton'\r\n                                type = 'button'\r\n                                value = 'registration'\r\n                        />\r\n                    </form>\r\n                </div>\r\n                </div>\r\n        )\r\n    }\r\n\r\n}\r\nexport default withFirebase(Registration);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Redirect} from 'react-router-dom';\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\r\nimport AnimationText from '../../components/AnimationText/AnimationTitle';\r\nimport Events from 'events';\r\nimport {middlewareLogin} from '../../redux/middleware/loadUserMiddleware';\r\n\r\nimport Loader from '../../components/loading/Loader';\r\nimport Registration from '../../components/Registration/Registration';\r\n\r\nimport {connect} from 'react-redux';\r\n\r\nimport './index.scss';\r\n\r\n\r\nclass Index extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        active: PropTypes.bool, /** @active - status firebase auth */\r\n        dispatch: PropTypes.func.isRequired, /** @dispatch - redux */\r\n        history: PropTypes.object.isRequired, /** @Router HTML5 history */\r\n        location: PropTypes.object.isRequired, /** @Router */\r\n        match: PropTypes.object.isRequired, /** @Router */\r\n        wrongEnter: PropTypes.string, /** @Error about invalid enter */\r\n        config: PropTypes.object, /** @config - app settings */\r\n    }\r\n\r\n    indexStream = new Events();\r\n\r\n    state = {\r\n        title:  \"Constructor\",\r\n        registrationActive: false,\r\n        regStatus: false,\r\n        wrongEnter: false,\r\n        error: '',\r\n    }\r\n\r\n    emailImput = null;\r\n    passwordImput = null;\r\n\r\n    statusRegistration = event => {\r\n        event.additionalUserInfo.isNewUser ?\r\n            this.setState({\r\n                ...this.state,\r\n                regStatus: true,\r\n                registrationActive: false,\r\n                error: 'Account create!'\r\n            })\r\n        : console.error('error registration');\r\n    }\r\n\r\n    showBox = event => {\r\n        this.setState ({\r\n            ...this.state,\r\n        registrationActive: this.state.registrationActive ? false : true\r\n        });\r\n        event.stopPropagation();\r\n    }\r\n\r\n    authTo = event => {\r\n            if (this.emailImput && this.passwordImput)\r\n            this.props.dispatch(middlewareLogin(this.emailImput.value, this.passwordImput.value));\r\n            event.stopPropagation();\r\n    }\r\n\r\n    emailRef = node => this.emailImput = node;\r\n    passwordRef = node => this.passwordImput = node;\r\n\r\n    render(){\r\n        console.log('render');\r\n        if (this.props.active) return <Redirect to = { '/Cabinet'} />\r\n        else if (!this.props.active) {\r\n            return (\r\n                <div className = 'LoginPage flex-column'>\r\n                <h1>{this.state.title}</h1>\r\n                        <div className = 'LoginBox'>\r\n                        <AnimationText\r\n                            content = 'Build your landing page!'\r\n                            msAnimation = {100}\r\n                        />\r\n                            <div className = 'LoginForm'>\r\n                                <h3>Connect form</h3>\r\n                                {\r\n                                    this.props.wrongEnter || this.state.regStatus ?\r\n                                    <p className = 'error'>{this.props.wrongEnter}</p>\r\n                                    : null\r\n                                }\r\n                                <p>E-mail</p>\r\n                                <input ref = {this.emailRef} type = 'text' />\r\n                                <p>Password</p>\r\n                                <input ref = {this.passwordRef} type = 'password' />\r\n                                <input \r\n                                    onClick = {this.authTo} \r\n                                    className = 'loginButton enterInput'\r\n                                    type = 'button'\r\n                                    value = 'enter' />\r\n                                <input\r\n                                    onClick = {this.showBox}\r\n                                    className = {this.state.registrationActive ?\r\n                                        `loginButton registration selected` : 'loginButton registration'}\r\n                                    type = 'button'\r\n                                    value = 'registration'\r\n                                    />\r\n                            </div>\r\n                        </div>\r\n                            <TransitionGroup component={null}>\r\n                            { this.state.registrationActive &&\r\n                                    <CSSTransition\r\n                                        timeout={300}\r\n                                        unmountOnExit\r\n                                        classNames=\"boxOpacity\">\r\n                                        <Registration  indexStream = {this.indexStream} />\r\n                                    </CSSTransition>\r\n                            }\r\n                            </TransitionGroup>\r\n                </div>\r\n            )\r\n        } else  return <Loader path = '/img/loading.gif' type = 'session' />\r\n    }\r\n\r\n    componentDidMount = (e) => {\r\n        this.indexStream.on('EventRegistrationCorrect', this.statusRegistration);\r\n    }\r\n    componentWillUnmount = (e) => {\r\n        this.indexStream.off('EventRegistrationCorrect', this.statusRegistration);\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        active: state.cabinet.active, \r\n        wrongEnter: state.cabinet.error\r\n    }\r\n  }\r\n\r\nexport default connect(mapStateToProps)(Index);","\r\nimport {errorAction, loadUserAction, loadUpdateCurrentProject} from '../actions';\r\n\r\nconst middlewareDelete = item => async (dispatch,getState, {firebase}) => {\r\n\r\n    await firebase.db.collection('users').doc(item.uid).get()\r\n    .then(user => user.data())\r\n    .then(data => {\r\n        return {id: item.uid, projects: data.projects.filter(itemdb => itemdb.id !== item.id)};\r\n    })\r\n    .then(data => {\r\n        firebase.db.collection(\"users\").doc(item.uid).update({\r\n            \"projects\": data.projects\r\n        })\r\n        .then(response => {\r\n            dispatch(loadUserAction({uid: item.uid, projects: data.projects}));\r\n        });\r\n    })\r\n    .catch((error) => {\r\n        console.error(error.message);\r\n        dispatch(errorAction(error.message));\r\n    });\r\n}\r\n\r\nconst middlewareDeleteProjectComponent = item => async (dispatch, getState, {firebase}) => {\r\n    await firebase.db.collection('users').doc(item.uid).get()\r\n    .then(user => user.data())\r\n    .then(data => {\r\n        const userProjects = [...data.projects];\r\n        const findProject = userProjects.find(project => item.id === project.id);\r\n        if (!findProject) throw new Error('No found project');\r\n        findProject.components = findProject.components.filter(component =>\r\n            component.id !== item.idComponent\r\n        );\r\n        return {dataUpdate: data, findProject: findProject};\r\n    })\r\n    .then(data => {\r\n        let {dataUpdate} = data;\r\n        let {findProject} = data;\r\n        firebase.db.collection(\"users\").doc(item.uid).update({\r\n            \"projects\": dataUpdate.projects\r\n        })\r\n        .then(response => {\r\n            dispatch(loadUpdateCurrentProject({\r\n                components: [...findProject.components],\r\n                idProject: item.id,\r\n                sectionsProject: [...item.sectionsProject],\r\n            }))\r\n        });\r\n    })\r\n    .catch(error => {\r\n        console.error(error.message);\r\n        dispatch(errorAction(error.message));\r\n        return null;\r\n    });\r\n\r\n    return item.idComponent;\r\n}\r\n\r\nexport {middlewareDeleteProjectComponent};\r\nexport default middlewareDelete;\r\n","import React, {useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './icon.scss';\r\n\r\nfunction Icon(props){\r\n    const [path] = useState(props.path);\r\n    const [className] = useState(props.className ? props.className : null);\r\n    const [draggable] = useState(props.draggable ? true : false);\r\n\r\n    return (\r\n    <img\r\n        draggable = {draggable}\r\n        onClick = {props.onClick ? props.onClick : null}\r\n        className = {className}\r\n        title = {props.title ? props.title : null}\r\n        src = {process.env.PUBLIC_URL + path } alt = 'icon'>\r\n    </img>\r\n    )\r\n}\r\n\r\nIcon.propTypes = {\r\n    path: PropTypes.string.isRequired, // icon path\r\n    className: PropTypes.string, // class\r\n    draggable: PropTypes.bool // draggable bool\r\n}\r\n\r\nexport default Icon;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './Confirm.scss';\r\n\r\nconst Confirm = props => {\r\n\r\n    return (\r\n        <div className = 'wrapperConfirm'>\r\n            <div className = 'confirmSave'>\r\n                <span>Detected new changes</span>\r\n                <input\r\n                    className = 'saveCofirm'\r\n                    onClick = {props.cbSaveChanges}\r\n                    type = 'button'\r\n                    value = 'Save changes'\r\n                />\r\n                <input\r\n                    className = 'cancelCofirm'\r\n                    onClick = {props.cbCancelSave}\r\n                    type = 'button'\r\n                    value = 'Cancel'\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nConfirm.propTypes = {\r\n    cbSaveChanges: PropTypes.func.isRequired, // callback\r\n    cbCancelSave: PropTypes.func.isRequired // callback\r\n}\r\n\r\nexport default Confirm;","import React from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport './header.scss';\r\n\r\nimport {middlewareLogOutUser} from '../../redux/middleware/loadUserMiddleware';\r\nimport {connect} from 'react-redux';\r\nimport {Redirect, withRouter} from 'react-router-dom';\r\n\r\nimport eventEmitter from '../../EventEmitter.js';\r\nimport Icon from '../Icon/icon';\r\nimport Confirm from '../confirmBox/Confirm';\r\n\r\nconst iconPath = require('../../config.json').CabinetIcon;\r\n\r\nclass Header extends React.Component {\r\n\r\n    static propTypes = {\r\n        title: PropTypes.string.isRequired, /** @Config title app */\r\n        cabinetStream: PropTypes.object, /** @Events stream cabinet */\r\n        dispatch: PropTypes.func.isRequired, /** @dispatch redux */\r\n        history: PropTypes.object.isRequired, /** @Router HTML5 history */\r\n        location: PropTypes.object.isRequired, /** @Router */\r\n        match: PropTypes.object.isRequired, /** @Router */\r\n    };\r\n\r\n    state = {\r\n        idUser: this.props.idUser,\r\n        title: this.props.title,\r\n        isChange: false,\r\n        redirectConfirm: false,\r\n        redirectAbout: {\r\n            path:  '/Cabinet/About',\r\n            redirectA: false,\r\n        },\r\n        redirectCabinet: {\r\n            path:  '/Cabinet',\r\n            redirectC: false,\r\n        }\r\n    };\r\n\r\n    confirm = event => {\r\n        if (typeof event !== 'object')\r\n        this.setState({isChange: event});\r\n        else this.setState({isChange: event.false, redirectConfirm: event.confirm});\r\n    }\r\n\r\n    confirmSaveDetectChanges = event => {\r\n        eventEmitter.emit('EventRedirectSaveChanges');\r\n        this.setState({\r\n            redirectConfirm: false,\r\n            redirectCabinet: {\r\n                ...this.state.redirectCabinet,\r\n                redirectC: true\r\n            }\r\n        });\r\n    };\r\n\r\n    logOut = event => {\r\n        if (this.state.idUser)\r\n            this.props.dispatch(middlewareLogOutUser(this.props.idUser));\r\n        event.stopPropagation();\r\n    };\r\n\r\n    redirectAbout = event => {\r\n        const isPath = this.props.location.pathname !== this.state.redirectAbout.path;\r\n        if (isPath && !this.state.isChange)\r\n           this.setState({\r\n                redirectConfirm: false,\r\n                redirectAbout: {\r\n                   ...this.state.redirectAbout,\r\n                   redirectA: true\r\n               }\r\n           });\r\n           else this.setState({redirectConfirm: true});\r\n        event.stopPropagation()\r\n    };\r\n\r\n    redirectCabinet = event => {\r\n        if (event !== 'cancelMode'){\r\n            const isPath = this.props.location.pathname !== this.state.redirectCabinet.path;\r\n            if (isPath && this.state.isChange === false)\r\n            this.setState({\r\n                redirectConfirm: false,\r\n                redirectCabinet: {\r\n                    ...this.state.redirectCabinet,\r\n                    redirectC: true\r\n                }\r\n            });\r\n            else if (!this.state.redirectConfirm) this.setState({redirectConfirm: true});\r\n            event.stopPropagation();\r\n\r\n        } else this.setState({\r\n            redirectConfirm: false,\r\n            redirectCabinet: {\r\n                ...this.state.redirectCabinet,\r\n                redirectC: true\r\n            }\r\n        });\r\n    }\r\n\r\n    add = event => {\r\n        this.props.cabinetStream.emit('EventChangeWorkMode',{action: 'newProject'});\r\n        event.stopPropagation()\r\n    };\r\n\r\n    render(){\r\n        let {redirectA} = this.state.redirectAbout;\r\n        let {redirectC} = this.state.redirectCabinet;\r\n\r\n        if (redirectA) return <Redirect to = {this.state.redirectAbout.path} />\r\n        if(redirectC) return <Redirect to = {this.state.redirectCabinet.path} />\r\n\r\n        return (\r\n            <React.Fragment>\r\n            {this.state.isChange && this.state.redirectConfirm ? \r\n                <Confirm \r\n                    cbSaveChanges = {this.confirmSaveDetectChanges}\r\n                    cbCancelSave = {() => this.redirectCabinet('cancelMode')}\r\n                /> : null}\r\n                <header>\r\n                    <div className = 'container'>\r\n                        <div className = 'flex-row'>\r\n                                <div onClick = {this.redirectCabinet} className = 'header__CabinetInfo'>\r\n                                    <Icon className ='mainIcon' path = {iconPath} />\r\n                                    <h3 className = 'tilteApp'>{this.state.title}</h3>\r\n                                </div>\r\n                                {this.props.location.pathname === '/Cabinet' ?\r\n                                    <div onClick = {this.add} className = 'header__newProject__AddButton'>\r\n                                        <Icon className = 'Cabinet' path = '/img/plus.png' />\r\n                                    </div>\r\n                                    : null\r\n                                }\r\n                                    <div  className = 'Navigator'>\r\n                                        <Icon className = 'about' onClick = {this.redirectAbout}\r\n                                            title = 'about'\r\n                                            path = '/img/about_logo.svg'\r\n                                        />\r\n                                        <Icon className = 'logoutButton'\r\n                                            onClick = {this.logOut}\r\n                                            title = 'logOut'\r\n                                            path = '/img/logOut.svg'\r\n                                        />\r\n                                    </div>\r\n                        </div>\r\n                </div>\r\n                </header>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n    componentWillMount = () => {\r\n        eventEmitter.on('EventRedirectConfirm', this.confirm);\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        eventEmitter.off('EventRedirectConfirm', this.confirm);\r\n    }\r\n}\r\n\r\nexport default connect()(withRouter(Header));","import React, {useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport eventEmitter from '../../EventEmitter';\r\n\r\nconst ImageItem = props => {\r\n\r\n    const [id] = useState(props.id);\r\n    const [urlRegular] = useState(props.urls.regular);\r\n    const [urlFull] = useState(props.urls.full);\r\n    const [isFull] = useState(props.isFull);\r\n    const [urlContent] = useState(props.urlContent);\r\n\r\n    const showImageMenu = event => {\r\n\r\n       eventEmitter.emit(\"EventShowMenuImage\",{\r\n            id: id,\r\n            url: urlRegular,\r\n            urlFull: urlFull,\r\n            iframe: urlContent\r\n        });\r\n\r\n        event.stopPropagation();\r\n    }\r\n\r\n    return (\r\n        <div className = {props.selected ? 'ItemBox selected' : 'ItemBox'}>\r\n            <img\r\n                className = 'ImageItem'\r\n                onClick = {showImageMenu}\r\n                src = {isFull ? urlFull : urlRegular}\r\n                alt = 'item'\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nImageItem.propTypes = {\r\n    id: PropTypes.oneOfType([\r\n        PropTypes.string,\r\n        PropTypes.number,\r\n    ]),\r\n    urls: PropTypes.object, // data with image path\r\n    isFull: PropTypes.bool, // mode view\r\n    urlContent: PropTypes.string // content path\r\n}\r\n\r\nexport default ImageItem;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Loader from '../../loading/Loader';\r\nconst CreateProject = props => {\r\n\r\n    let isNumber = props.nameLength >= 4 && props.nameLength <= 20;\r\n\r\n    return (\r\n    <div className = 'Modal'>\r\n        <h3>Create new Project</h3>\r\n        { props.nameLength <= 3 ?\r\n            <span className = 'warning'>{props.warningLengthMin}</span> : null\r\n        }\r\n        { props.nameLength >= 20 ?\r\n            <span className = 'warning'>{props.warningLengthMax}</span> : null\r\n        }\r\n        {\r\n            isNumber && !props.validName ?\r\n            <span className = 'warning'>{props.warningNumber}</span> : null\r\n        }\r\n        <input\r\n            className = {props.typeClassName ? 'ready' : 'wrong'}\r\n            value = {props.name}\r\n            onChange = {props.cbValidateName}\r\n            type = 'text'\r\n            placeholder = \"Project name\"\r\n        />\r\n        { !props.validType ?\r\n            <span className = 'warning'>{props.warningType}</span> : null\r\n        }\r\n        <select onChange = {props.cbSelectOption} >\r\n            <option value = 'empty'>--------</option>\r\n            <option value = 'landing'>Landing</option>\r\n        </select>\r\n        <input \r\n            onClick = {props.cbAddNewProject}\r\n            className = 'acceptButton'\r\n            disabled = {props.dissabled}\r\n            type = 'button'\r\n            value = 'Submit'\r\n        />\r\n        <input onClick = {props.cbCancel} type ='button' value = 'Cancel' />\r\n        {props.loading && <Loader mode = 'create' />}\r\n    </div>\r\n    )\r\n}\r\n\r\nCreateProject.propTypes = {\r\n    typeClassName: PropTypes.bool, // type color className\r\n    name: PropTypes.string, // name of project\r\n    warningType: PropTypes.string, // errors\r\n    warningLengthMax: PropTypes.string, // error max length\r\n    warningLengthMin: PropTypes.string, // error min length\r\n    dissabled: PropTypes.bool, // buttons dissabled\r\n    validType: PropTypes.bool, // valid or no\r\n    cbValidateName: PropTypes.func.isRequired, // callback validate\r\n    cbAddNewProject: PropTypes.func.isRequired, // callback add new project\r\n}\r\n\r\nexport default CreateProject;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport eventEmitter from '../../../EventEmitter';\r\nimport Icon from '../../Icon/icon';\r\nimport Loader from '../../loading/Loader';\r\n\r\nclass  SearchModal extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        modalSearchMode: PropTypes.string.isRequired, // search mode\r\n        error: PropTypes.string, // about error\r\n        dissabled: PropTypes.bool, // dissabled buttons\r\n        images: PropTypes.array, // array of images\r\n        cbCancel: PropTypes.func.isRequired, // callback cancel\r\n        cbShowImage: PropTypes.func.isRequired, // callback show image\r\n        cbSetSelectedImage: PropTypes.func.isRequired, // callback show image\r\n    }\r\n\r\n    state = {\r\n        mode: this.props.modalSearchMode,\r\n        items: this.props.images,\r\n    }\r\n\r\n    search = event => {\r\n        const value = this.refSearch ? this.refSearch.value : null;\r\n        this.props.cbSearch(event,value, this.props.modalSearchMode);\r\n        event.stopPropagation();\r\n    }\r\n\r\n    refSearch = null;\r\n    refSearchFunc = node => this.refSearch = node;\r\n\r\n    render(){\r\n        return (\r\n            <React.Fragment>\r\n                <div className = 'Modal Modal-search'>\r\n                <h3>{`Search ${this.props.modalSearchMode}`}</h3>\r\n                { this.props.error ?\r\n                    <span className = 'error'>{this.props.error}</span> : null\r\n                }\r\n                    <input ref = {this.refSearchFunc} type = 'text' placeholder = \"name\" />\r\n                        <input\r\n                            disabled = {this.props.dissabled}\r\n                            className = 'acceptButton'\r\n                            type = 'button'\r\n                            value = 'Search'\r\n                            onClick = {this.search}\r\n                        />\r\n                    <input onClick = {this.props.cbCancel} type ='button' value = 'Cancel' />\r\n                <div className = 'searchResultBox'>\r\n                    {this.state.items}\r\n                    {this.props.loading ? <Loader type = 'images' /> : null}\r\n                </div>\r\n                </div>\r\n                {  this.props.menuActive ?\r\n                    <div className = 'ActionModalSearch'>\r\n                    <button onClick = {this.props.cbShowImage} className = 'actionModalSearch__view'>\r\n                        <Icon path = '/img/view.png' />\r\n                    </button>\r\n                    <button onClick = {this.props.cbSetSelectedImage} className = 'actionModalSearch__settings'>\r\n                        <Icon path = '/img/settings.png' />\r\n                    </button>\r\n                    </div>\r\n                    : null\r\n                }\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n    componentDidUpdate = (prevProps) => {\r\n        const haveUpdate = prevProps.images !== this.props.images && this.props.images;\r\n        const isSelected = prevProps.selectedId !== this.props.selectedId;\r\n\r\n        if (haveUpdate || isSelected){\r\n            this.setState({\r\n                ...this.state,\r\n                items: this.props.cbMakeImageResultBox(this.props.images)\r\n            });\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        eventEmitter.emit('EventBlockScroll', 'window');\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        eventEmitter.emit('EventBlockScroll', 'default');\r\n    }\r\n}\r\n\r\nexport default SearchModal;","import React,{Fragment} from 'react';\r\n\r\nimport isFetch from 'isomorphic-fetch';\r\nimport PropTypes from 'prop-types';\r\nimport eventEmitter,{controllerStream} from '../../EventEmitter.js';\r\n\r\nimport ImageItem from '../imageViewer/imageItem';\r\n\r\nimport CreateProject from './createProject/createProject';\r\nimport SearchModal from './Search/searchModal';\r\nimport './modal.scss';\r\nrequire('es6-promise').polyfill();\r\n\r\nclass ModalWindow extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        workMode: PropTypes.string.isRequired, /** @Mode for modal */\r\n        cabinetStream: PropTypes.object, /** @Events stream cabinet */\r\n        eventStreamBuild: PropTypes.object, /** @Events stream build */\r\n        idComponent: PropTypes.oneOfType([\r\n            PropTypes.string,\r\n            PropTypes.number\r\n        ]) /** @Id current user project */\r\n    }\r\n\r\n    state = {\r\n        workMode: this.props.workMode,\r\n        loading: false,\r\n        items: [],\r\n        images: {\r\n            loading: false,\r\n            buttonSearchDisabled: false,\r\n            selectedItem: null, \r\n            showUrl: null, \r\n            images: null,\r\n            urlFull: null,\r\n            imageBoxView: false, \r\n            iframe: null,\r\n            error: ''\r\n        },\r\n        newProject: {\r\n            validateName: false,\r\n            validateType: false,\r\n            disabled: true,\r\n            name: '',\r\n            type: 'empty'\r\n        },\r\n        imageMenuActive: false,\r\n        warning: {\r\n            lengthMax: 'Max length: 20 laters',\r\n            warningNumber: `Don't use numbers`,\r\n            lengthMin: 'Min length: 4 letters',\r\n            type: 'Select type of webpage',\r\n        }\r\n    }\r\n\r\n    inputSearch = null;\r\n    inputSelect = null;\r\n\r\n    searchData = (event,value, mode) => {\r\n\r\n        this.setState({...this.state, \r\n            images: {\r\n                ...this.state.inages,\r\n                loading: true,\r\n                buttonSearchDisabled: true\r\n            }\r\n        });\r\n\r\n        let search = null;\r\n        if (value) search = value;\r\n        else search = this.inputSearch.value;\r\n\r\n        if (mode !== 'media'){\r\n        const modeAPI = 'search/photos/?page=1&per_page=40&query=';\r\n        const api = `https://api.unsplash.com/${modeAPI}`;\r\n \r\n        isFetch(`${api + search}&client_id=${process.env.REACT_APP_UNSPLASH_TOKEN}`)\r\n        .then(response => {\r\n            if (response.ok) return response.json();\r\n            else throw new Error('request invalid');\r\n        })\r\n        .then(response => {\r\n            let {results} = response;\r\n            if (results.length)\r\n            this.setState({\r\n                ...this.state,\r\n                images: {\r\n                    ...this.state.images,\r\n                    loading: false,\r\n                    imageBoxView: true,\r\n                    error: '',\r\n                    images: [...results],\r\n                    buttonSearchDisabled: false\r\n                },\r\n            });\r\n            else throw new Error('Photos not found');\r\n        })\r\n        .catch(error => {\r\n            console.error(error.message);\r\n            this.setState({\r\n                ...this.state,\r\n                images: {\r\n                    ...this.state.images,\r\n                    buttonSearchDisabled: false,\r\n                    loading: false,\r\n                    error: error.message},\r\n                imageBoxView: false,\r\n            });\r\n        });\r\n        } else this.searchYouTubeAPI(search);\r\n    }\r\n\r\n    \r\n    searchYouTubeAPI = (search) => {\r\n\r\n        const API = `https://www.googleapis.com/youtube/v3/search?part=snippet`;\r\n        const RAITE = `&maxResults=25&order=date&q=${search}`;\r\n        const KEY = `&key=${process.env.REACT_APP_YOUTUBE_SEARCH_TOKEN}`;\r\n        isFetch(API + RAITE + KEY)\r\n        .then(res => {\r\n            if (res.ok)\r\n            return res.json();\r\n            else throw new Error (`Error ${res.status}`);\r\n        })\r\n        .then(res => {\r\n            const arrayItems = [];\r\n            res.items.forEach(item => {\r\n                arrayItems.push({\r\n                    urls: { regular: item.snippet.thumbnails.high.url },\r\n                    videoId: item.id.videoId\r\n                })\r\n            });\r\n            return arrayItems;\r\n        })\r\n        .then(results => {\r\n            this.setState({\r\n                ...this.state,\r\n                images: {\r\n                    ...this.state.images,\r\n                    loading: false,\r\n                    imageBoxView: true,\r\n                    error: '',\r\n                    images: [...results],\r\n                    buttonSearchDisabled: false\r\n                },\r\n            });\r\n        })\r\n        .catch(error => console.error(error));\r\n    }\r\n\r\n    showMenuImage = event => {\r\n        this.setState({\r\n            ...this.state, \r\n            imageMenuActive: true,\r\n            images: {\r\n                ...this.state.images,\r\n                selectedItem: event.id, \r\n                showUrl: event.url,\r\n                urlFull: event.urlFull,\r\n                iframe: event.iframe\r\n\r\n            }\r\n        });\r\n    }\r\n\r\n    showImage = event => {\r\n\r\n        const {showUrl, iframe} = this.state.images;\r\n\r\n        this.props.eventStreamBuild.emit(\"EventView\", {\r\n            action: true, \r\n            target: showUrl ? showUrl : null,\r\n            iframe: iframe,\r\n            mode: this.props.modalSearchMode\r\n        });\r\n        event.stopPropagation();\r\n    }\r\n\r\n    setSelectedImage = event => {\r\n\r\n        let data = {...this.state.images};\r\n        if (this.props.modalSearchMode === 'background'){\r\n            controllerStream.emit(`EventSetBackgroundImage${this.props.idComponent}`,data);\r\n            eventEmitter.emit(`EventSetBImageInstumentPanel`,{images: data, mode: this.props.modalSearchMode});\r\n        } else if (this.props.modalSearchMode === 'image'){\r\n            controllerStream.emit(`EventSetCurrentImage${this.props.idComponent}`, data);\r\n            eventEmitter.emit(`EventSetBImageInstumentPanel`, {images: data,  mode: this.props.modalSearchMode });\r\n        } else if (this.props.modalSearchMode === 'media'){\r\n            controllerStream.emit(`EventSetContentMedia${this.props.idComponent}`,{\r\n                    iframe: data.iframe,\r\n                    mode: this.props.modalSearchMode\r\n                }\r\n            );\r\n            eventEmitter.emit(`EventSetIframe`, {iframe: data.iframe});\r\n        }\r\n\r\n        event.stopPropagation();\r\n    };\r\n\r\n    makeImageResultBox = (items) => {\r\n        if (!items) return null;\r\n        return items.map((item,i) =>{\r\n                return <ImageItem\r\n                            key = {`item${i}`}\r\n                            id = {i}\r\n                            urlContent = {item.videoId ? item.videoId : null}\r\n                            selected = {this.state.images.selectedItem === i ? true : false} \r\n                            isFull = {false}\r\n                            urls = {item.urls}\r\n                        />\r\n        });\r\n\r\n    }\r\n\r\n    addNewProject = event => {\r\n        let mode = this.state[this.state.workMode];\r\n        if (mode.validateType &&  mode.validateName) {\r\n\r\n            this.setState({\r\n                ...this.state,\r\n                loading: true,\r\n            });\r\n            this.props.cabinetStream.emit('EventAddProject',\r\n            {\r\n                title: this.state[this.state.workMode].name,\r\n                type: this.state[this.state.workMode].type\r\n            });\r\n\r\n            this.props.cabinetStream.emit('EventChangeWorkMode',{action: 'default'});\r\n        }\r\n    }\r\n\r\n    selectOption = event => {\r\n\r\n        let inputs = {...this.state[this.state.workMode]};\r\n        inputs.type = event.target.value;\r\n        inputs.validateType = inputs.type !== 'empty';\r\n        inputs.disabled = inputs.validateType && inputs.validateName ? false : true;\r\n        this.setState({\r\n            ...this.state,\r\n            [this.state.workMode]: inputs\r\n        });\r\n    }\r\n\r\n    validateName = event => {\r\n\r\n        let inputs = {...this.state[this.state.workMode]};\r\n        inputs.name = event.target.value;\r\n        inputs.validateName = /^\\D{4,20}$/i.test(inputs.name);\r\n        inputs.disabled = inputs.validateType && inputs.validateName ? false : true;\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            [this.state.workMode]: inputs\r\n        })\r\n    };\r\n\r\n    cancel = event => {\r\n\r\n        if (this.state.workMode === 'Search')\r\n        this.props.eventStreamBuild.emit(\"EventModalSearchOn\", {action: 'offline', mode: null});\r\n        else  this.props.cabinetStream.emit('EventChangeWorkMode',{action: 'default'});\r\n    }\r\n\r\n    refSelect = (node) => this.inputSelect = node;\r\n    refSearch = node => this.inputSearch = node;\r\n\r\n    render(){\r\n        switch (this.state.workMode){\r\n            case 'newProject':\r\n                return <CreateProject\r\n                            dissabled = {this.state[this.state.workMode].disabled}\r\n                            warningNumber = {this.state.warning.warningNumber}\r\n                            validName = {this.state[this.state.workMode].validateName}\r\n                            nameLength = {this.state[this.state.workMode].name.length}\r\n                            name = {this.state[this.state.workMode].name}\r\n                            validType = {this.state[this.state.workMode].validateType}\r\n                            warningType = {this.state.warning.type}\r\n                            typeClassName = {this.state[this.state.workMode].validateName}\r\n                            warningLengthMin = {this.state.warning.lengthMin}\r\n                            warningLengthMax = {this.state.warning.lengthMax}\r\n                            cbValidateName = {this.validateName}\r\n                            cbSelectOption = {this.selectOption}\r\n                            cbAddNewProject = {this.addNewProject}\r\n                            cbCancel = {this.cancel}\r\n                            loading = {this.state.loading}\r\n                        />\r\n            case 'Search':\r\n                    return (\r\n                        <div className = 'searchWrapper'> \r\n                            <SearchModal\r\n                                images = {this.state.images['images']}\r\n                                loading = {this.state.images.loading}\r\n                                view = {this.state.images.imageBoxView}\r\n                                dissabled = {this.state.images.buttonSearchDisabled}\r\n                                error = {this.state.images.error}\r\n                                cbCancel = {this.cancel}\r\n                                menuActive = {this.state.imageMenuActive}\r\n                                cbMakeImageResultBox = {this.makeImageResultBox}\r\n                                cbShowImage = {this.showImage}\r\n                                cbSetSelectedImage = {this.setSelectedImage}\r\n                                modalSearchMode = {this.props.modalSearchMode}\r\n                                cbSearch = {this.searchData}\r\n                                loader = {this.state.loading}\r\n                                selectedId = {this.state.images.selectedItem}\r\n                            />\r\n                        </div>\r\n                    )\r\n\r\n            default: return <Fragment></Fragment>\r\n        }\r\n    }\r\n\r\n    componentDidMount = event => {\r\n        if (this.state.workMode === 'Search')\r\n            eventEmitter.on('EventShowMenuImage', this.showMenuImage);\r\n    }\r\n\r\n    componentWillUnmount = event => {\r\n        if (this.state.workMode === 'Search')\r\n            eventEmitter.off('EventShowMenuImage', this.showMenuImage);\r\n    }\r\n}\r\n\r\nexport default ModalWindow;\r\n\r\n","import {createProjectAction, errorAction} from '../actions';\r\n\r\n\r\nfunction random(min,max){\r\n    return `${Math.floor(min + Math.random() * (max-min))}`\r\n}\r\n\r\n\r\nconst middlewareCreateProject = (uid, list, title, type) => async (dispatch,getState, {firebase}) => {\r\n    let lastProject = [...list];\r\n    const lastIndex = lastProject.length  ? lastProject[lastProject.length-1].id + 1 : 0;\r\n    const sectionsProject = [];\r\n    if (type === 'portfolio') sectionsProject.push(\"Header\");\r\n    else sectionsProject.push(\"Header\");\r\n    const header = {\r\n        backgroundImage: null,\r\n        backgroundColor: null,\r\n        id: `MainBackgroundHeader${random(0,10000)}`,\r\n        targetSection: \"Header\",\r\n        type: \"background\"\r\n    }\r\n\r\n    lastProject.push({\r\n        id: lastIndex,\r\n        title: title,\r\n        type: type,\r\n        components: [header],\r\n        sectionsProject: [...sectionsProject],\r\n    });\r\n\r\n    await firebase.db.collection(\"users\").doc(uid).update({\r\n        'projects': lastProject,\r\n    })\r\n    .then (() => dispatch(createProjectAction(lastProject)))\r\n    .catch(error => {\r\n        console.error(error.message);\r\n        dispatch(errorAction(error.message));\r\n    })\r\n};\r\n\r\nexport {\r\n    middlewareCreateProject\r\n}","import React, {useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {withRouter, Redirect} from 'react-router-dom';\r\n\r\nfunction Item(props) {\r\n\r\n    const [path] = useState( `/Cabinet/Build/${props.id}`);\r\n    const [productionPath] = useState(`/Cabinet/Build/${props.id}/Production/`);\r\n\r\n    let [canBuild,setCanBuild] = useState(false);\r\n    let [canProd, setCanProd] = useState(false);\r\n\r\n    const [id] = useState(props.id);\r\n    const [name] = useState(props.name);\r\n    const [type] = useState(props.type);\r\n\r\n\r\n    const build = event => {\r\n        if(props.location.pathname !== path)\r\n            setCanBuild(true);\r\n        event.stopPropagation();\r\n    };\r\n\r\n    const showProduction = event => {\r\n        if(props.location.pathname !== path)\r\n        setCanProd(true);\r\n        event.stopPropagation();\r\n    };\r\n\r\n    const deleteItem = event => {\r\n        props.cabinetStream.emit('EventDeleteItem',{\r\n            id: props.id,\r\n            name: props.name,\r\n            type: props.type\r\n        });\r\n        event.stopPropagation();\r\n    };\r\n\r\n\r\n    if (canBuild) return <Redirect to = {path} />\r\n    else if (canProd) return <Redirect to = {productionPath} />\r\n    else return (\r\n            <div className = 'item' data-id = {id}>\r\n                <p className = 'ProjectName'>{name}</p>\r\n                <p className = 'ProjectType'>{type}</p>\r\n                <div className = 'projectController'>\r\n                    <input \r\n                        onClick = {build} \r\n                        className = 'projectControllerButton_enter' \r\n                        type = 'button' \r\n                        value = 'enter build' />\r\n                    <input onClick = {deleteItem} \r\n                        className = 'projectControllerButton_delete' \r\n                        type = 'button' \r\n                        value = 'delete' />\r\n                </div>\r\n                <input onClick = {showProduction} \r\n                    className = 'productionButton' \r\n                    type = 'button' \r\n                    value = 'Production' />\r\n            </div>\r\n        )\r\n}\r\n\r\nItem.propTypes = {\r\n    id: PropTypes.number.isRequired, // id item\r\n    name: PropTypes.string.isRequired, // item name\r\n    type: PropTypes.string.isRequired, // item type\r\n}\r\n\r\nexport default withRouter(Item);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport {middlewareCreateProject} from '../../redux/middleware/createProjectMiddleware';\r\n\r\nimport './list.scss';\r\n\r\nimport Item from './Item';\r\n\r\nclass List extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        dispatch: PropTypes.func.isRequired, /** @dispatch redux */\r\n        idUser: PropTypes.string.isRequired, /** @UID current user */\r\n        list: PropTypes.array.isRequired, /** @List user projects */\r\n    }\r\n\r\n    state = {\r\n        redirect: false,\r\n    }\r\n\r\n    addNewProject = (item) => {\r\n        if (this.props.idUser) {\r\n            this.props.dispatch(middlewareCreateProject(\r\n                    this.props.idUser,\r\n                    this.props.list,\r\n                    item.title,\r\n                    item.type\r\n                ));\r\n        } else this.setState({...this.state, redirect: true});\r\n    }\r\n\r\n\r\n    makeList = (list) => {\r\n\r\n        return list.map (project => {\r\n\r\n            return(\r\n                <Item\r\n                    key = {project.id}\r\n                    id = {project.id}\r\n                    name = {project.title}\r\n                    type = {project.type}\r\n                    cabinetStream = {this.props.cabinetStream}\r\n                />\r\n            )\r\n        });\r\n    }\r\n\r\n    render(){\r\n        if (this.state.redirect)\r\n            return <Redirect to = { '/'} />\r\n            else return (\r\n                    <div className = 'projectsList__list'>\r\n                        {this.makeList([...this.props.list])}\r\n                    </div>\r\n                )\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.props.cabinetStream.on('EventAddProject',this.addNewProject);\r\n    }\r\n\r\n      componentWillUnmount = () => {\r\n        this.props.cabinetStream.off('EventAddProject',this.addNewProject);\r\n      }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        idUser: state.cabinet.idUser,\r\n        list: [...state.cabinet.projects]\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(List);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport List from '../List/List.jsx';\r\nimport './ProjectsSection.scss';\r\n\r\nconst ProjectsSection = props => {\r\n        return (\r\n            <section className = 'projectsList'>\r\n                <div className = 'container'>\r\n                    <div className = 'flex-column'>\r\n                        <div className = 'projectsList__about'>\r\n                            <h3>Your Projects</h3>\r\n                        </div>\r\n                        <List cabinetStream = {props.cabinetStream} />\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        )\r\n\r\n}\r\n\r\nProjectsSection.propTypes = {\r\n    cabinetStream: PropTypes.object /** @Events stream */\r\n}\r\n\r\nexport default ProjectsSection;","import React,{Fragment} from 'react';\nimport PropTypes from 'prop-types';\nimport Events from 'events';\nimport {Redirect} from 'react-router-dom';\nimport withFirebase from '../../components/firebaseHOC';\n\nimport {middlewareLogOutUser} from '../../redux/middleware/loadUserMiddleware';\nimport middlewareDelete from '../../redux/middleware/middlewareDelete';\nimport Loader from '../../components/loading/Loader';\nimport {connect} from 'react-redux';\n\nimport Header from '../../components/header/Header';\nimport Modal from '../../components/modalWindow/ModalWindow';\nimport ProjectsSection from '../../components/ProjectsSection/ProjectsSection';\n\nimport './Cabinet.scss';\n\nconst title = require('../../config.json').title;\n\nclass Cabinet extends React.PureComponent {\n\n  static propTypes = {\n    firebase: PropTypes.object.isRequired, /** @firebase class for use firebase functions */\n    active: PropTypes.bool, /** @active - status firebase auth */\n    dispatch: PropTypes.func.isRequired, /** @dispatch - redux */\n    history: PropTypes.object.isRequired, /** @Router HTML5 history */\n    location: PropTypes.object.isRequired, /** @Router */\n    match: PropTypes.object.isRequired, /** @Router */\n    idUser: PropTypes.string, /** @Session user id from redux */\n    projects: PropTypes.arrayOf(PropTypes.object).isRequired /** @Projects array with user projects from redux */\n  }\n\n  cabinetStream = new Events();\n\n  state = {\n    workMode: 'default',\n  }\n\n  logOut = () => {\n    this.props.dispatch(middlewareLogOutUser(this.props.idUser));\n  }\n\n  deletItem = event => {\n    this.props.dispatch(middlewareDelete({...event, uid: this.props.firebase.getCurrentUser().uid}));\n  };\n\n  changeWorkMode = event => {\n    this.setState ({\n      ...this.state,\n      workMode: event.action,\n    });\n  };\n\n  render(){\n\n    if (this.props.active){\n      return (\n        <Fragment>\n          <Header cabinetStream = {this.cabinetStream} title = {title} idUser = {this.props.idUser} />\n          <div className = 'Cabinet'>\n            {(this.state.workMode === 'newProject') ?\n              <Modal\n                cabinetStream = {this.cabinetStream}\n                workMode = {this.state.workMode} \n              />\n            : null}\n              <ProjectsSection cabinetStream = {this.cabinetStream} />\n            </div>\n        </Fragment>\n      )\n    } else if (!this.props.firebase.getCurrentUser()) return <Redirect to = { '/'} />\n    else return <Loader path = '/img/loading.gif' type = 'Cabinet' />\n  }\n\n\n  componentDidMount = () => {\n    this.cabinetStream.on('EventDeleteItem', this.deletItem);\n    this.cabinetStream.on('EventChangeWorkMode', this.changeWorkMode);\n  };\n\n  componentWillUnmount = () => {\n    this.cabinetStream.off('EventDeleteItem', this.deletItem);\n    this.cabinetStream.off('EventChangeWorkMode', this.changeWorkMode);\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    idUser: state.cabinet.idUser,\n    projects: [...state.cabinet.projects],\n    active: state.cabinet.active\n  }\n};\n\nexport default connect(mapStateToProps)(withFirebase(Cabinet));\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport eventEmitter,{controllerStream} from '../../../EventEmitter';\r\nimport styled from 'styled-components';\r\n\r\n\r\nconst Background = styled.div`\r\n    position: relative;\r\n    width: ${props => props.width || '100%'};\r\n    height: ${props => props.height || '100%'};\r\n    background-color: ${props => props.backgroundColor};\r\n    ${props => props.backgroundImage ? `background-image: url(${props.backgroundImage});` : null}\r\n    background-size: cover;\r\n`;\r\n\r\nclass BackgroundComponent extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        id: PropTypes.string.isRequired,\r\n        targetSection: PropTypes.string.isRequired,\r\n        background: PropTypes.string,\r\n        backgroundImage: PropTypes.string,\r\n        width: PropTypes.string,\r\n        height: PropTypes.string,\r\n        sectionNumber: PropTypes.number,\r\n        mode: PropTypes.string.isRequired\r\n    };\r\n\r\n    state = {\r\n        id: this.props.id,\r\n        targetSection: this.props.targetSection,\r\n        backgroundColor: this.props.background || this.props.color,\r\n        backgroundImage: this.props.backgroundImage,\r\n        width: this.props.width,\r\n        height: this.props.height\r\n    };\r\n\r\n    boxComponent = null; // ref\r\n    boxComponentRef = node => this.boxComponent = node;\r\n\r\n    saveDataParent = () => {\r\n        let boxInform =  this.boxComponent.getBoundingClientRect();\r\n        controllerStream.emit(`EventSaveWidth${this.state.targetSection}`,{\r\n            countSection: this.props.countSection,\r\n            sectionNumber: this.props.sectionNumber,\r\n            size: {width: boxInform.width, height: boxInform.height}\r\n        });\r\n    };\r\n\r\n    openBgInstruments = event => {\r\n\r\n        const componentsPatternBackground = {\r\n            id: this.state.id,\r\n            targetSection: this.state.targetSection,\r\n            type: 'background',\r\n            backgroundColor: this.state.backgroundColor,\r\n            backgroundImage: this.state.backgroundImage,\r\n        }\r\n        eventEmitter.emit('EventInstrumentPanel',{\r\n            componentStats: componentsPatternBackground,\r\n            targetSection: this.state.targetSection,\r\n            type: 'background',\r\n            id: this.state.id,\r\n        });\r\n        event.stopPropagation();\r\n    };\r\n\r\n    changeColor = eventItem => {\r\n        this.setState({\r\n            ...this.state,\r\n            backgroundColor: eventItem.colorRGB\r\n        });\r\n    };\r\n\r\n    setBackgroundImage = event => {\r\n        const {urlFull} = event;\r\n        this.setState({\r\n            ...this.state,\r\n            backgroundImage: urlFull,\r\n        });\r\n    };\r\n\r\n    render(){\r\n            if (this.props.mode === 'dev'){\r\n        return (\r\n            <Background\r\n                key = {this.state.id}\r\n                ref  = {this.boxComponentRef}\r\n                onDoubleClick={this.openBgInstruments}\r\n                data-name = {this.state.targetSection}\r\n                backgroundColor = {this.state.backgroundColor}\r\n                backgroundImage = {this.state.backgroundImage}\r\n                width = {this.state.width}\r\n                height = {this.state.height}\r\n            >\r\n                {this.props.children}\r\n            </Background>\r\n        )\r\n    } else if (this.props.mode === 'production'){\r\n\r\n        return (\r\n            <Background\r\n                key = {this.state.id}\r\n                ref  = {this.boxComponentRef}\r\n                data-name = {this.state.targetSection}\r\n                backgroundColor = {this.state.backgroundColor}\r\n                backgroundImage = {this.state.backgroundImage}\r\n                width = {this.state.width}\r\n                height = {this.state.height}\r\n            >\r\n            {this.props.children}\r\n            </Background>\r\n        )\r\n    }\r\n\r\n    }\r\n\r\n    componentDidUpdate = () => {\r\n        this.saveDataParent();\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.saveDataParent();\r\n        controllerStream.on(`EventChangeColorBackground${this.state.id}`, this.changeColor);\r\n        controllerStream.on(`EventSetBackgroundImage${this.state.id}`, this.setBackgroundImage);\r\n    };\r\n\r\n    componentWillUnmount = () => {\r\n        controllerStream.off(`EventChangeColorBackground${this.state.id}`, this.changeColor);\r\n        controllerStream.off(`EventSetBackgroundImage${this.state.id}`, this.setBackgroundImage);\r\n    };\r\n};\r\n\r\n\r\n\r\nexport default BackgroundComponent;","import React, {Fragment} from 'react';\r\nimport eventEmitter from '../../../EventEmitter';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport BackgroundComponent from '../components/Background';\r\nimport Loader from '../../loading/Loader';\r\n\r\nimport './MainBackground.scss';\r\n\r\nclass MainBackground extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        countComponents: PropTypes.number.isRequired, /** @Number last project */\r\n        menuActive: PropTypes.bool, /** @Bool active menu or unactive */\r\n        id: PropTypes.string.isRequired, /** @id current project */\r\n    };\r\n\r\n    state = {\r\n        targetSection: this.props.id,\r\n        editRedy: false,\r\n        component: null,\r\n        children: null,\r\n    };\r\n\r\n    changeMode = () => {\r\n        if (!this.state.editStart || this.props.id !== this.props.editComponentName) {\r\n            this.setState({\r\n                ...this.state,\r\n                editStart: true\r\n            }, () =>\r\n            eventEmitter.emit('EventModeEdit', {\r\n                ...this.state,\r\n                editStart: true,\r\n                targetSection: this.state.targetSection,\r\n            }));\r\n        }\r\n    };\r\n\r\n    refSection = null;\r\n    refSectionFunc = node => node ? this.refSection = {data: node.getBoundingClientRect(), node: node} : node;\r\n\r\n    render() {\r\n\r\n        if (this.props.mode === 'dev' && this.state.component){\r\n            return (\r\n                <Fragment>\r\n                    <section\r\n                        key = {this.props.sectionNumber}\r\n                        className = {`element${this.props.sectionNumber}`} \r\n                        ref={this.refSectionFunc}\r\n                        data-class = 'editable' \r\n                        onClick = {this.changeMode}\r\n                    >\r\n                        <BackgroundComponent \r\n                            mode = {this.props.mode}\r\n                            sectionNumber = {this.props.sectionNumber}\r\n                            countSection = {this.props.countSection}\r\n                            {...this.state.component}\r\n                        >\r\n                            {this.state.children || null}\r\n                        </BackgroundComponent>\r\n                        {!this.state.editStart &&\r\n                            <div className = 'warningEdit'><p>Click for start edit</p></div>\r\n                        }\r\n                    </section>\r\n                </Fragment>\r\n            );\r\n        } else if (this.props.mode === 'production' && this.state.component){\r\n            return (\r\n                <Fragment>\r\n                    <section \r\n                        key = {this.props.sectionNumber}\r\n                        ref={this.refSectionFunc} \r\n                        data-class = 'production'\r\n                    >\r\n                        <BackgroundComponent\r\n                            key = {this.props.sectionNumber}\r\n                            mode = {this.props.mode}\r\n                            sectionNumber = {this.props.sectionNumber}\r\n                            {...this.state.component}\r\n                        >\r\n                        {this.state.children || null}\r\n                        </BackgroundComponent>\r\n                    </section>\r\n                </Fragment>\r\n            );\r\n        }\r\n        else return <Loader type = {`${this.props.mode} components`} />;\r\n    }\r\n\r\n\r\n    componentDidMount = () => {\r\n        if (!this.state.component){\r\n            let component = this.props.currentProjectsData.components.find(item =>\r\n                                            item.targetSection === this.props.id);\r\n            const children = this.props.componentJSX.filter(item => \r\n                item.targetSection === this.props.id && item.id !== component.id)\r\n                            .map(item => item.component);\r\n           this.setState({\r\n               ...this.state,\r\n               component: component,\r\n               children: children,\r\n           });\r\n        }\r\n    }\r\n\r\n    componentDidUpdate = (prevProps) => {\r\n        const needUpdate = this.props.countComponents !== prevProps.countComponents;\r\n        if (!this.state.component){\r\n            let component = this.props.currentProjectsData.components.find(item =>\r\n                                            item.targetSection === this.props.id);\r\n            const children = this.props.componentJSX.filter(item => item.targetSection === this.props.id)\r\n                            .map(item => item.component);\r\n           this.setState({\r\n               ...this.state,\r\n               component: component,\r\n               children: children,\r\n           });\r\n        }\r\n        if (needUpdate){\r\n            const children = this.props.componentJSX.filter(item => item.targetSection === this.props.id)\r\n            children && this.setState({...this.state,children: children.map(item => item.component) });\r\n        }\r\n    }\r\n}\r\nexport default MainBackground;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport MainBackground from './MainBackground/MainBackground';\r\n\r\n\r\nconst Section = props => {\r\n    if (props.mode === 'dev'){\r\n    const {currentProjectsData} = props.userData;\r\n    const section = currentProjectsData.sectionsProject;\r\n\r\n            return section.map((item,i) => {\r\n                return (\r\n                        <MainBackground\r\n                            key = {item}\r\n                            componentJSX = {props.componentJSX}\r\n                            currentProjectsData = {currentProjectsData}\r\n                            editComponentName = {props.editComponentName}\r\n                            countComponents = {props.componentJSX.length}\r\n                            menuActive = {props.menuActive}\r\n                            sizeParentBox = {props.sizeParentBox}\r\n                            id = {item}\r\n                            countSection = {currentProjectsData.sectionsProject.length}\r\n                            sectionNumber = {i}\r\n                            mode = {props.mode}\r\n                        />\r\n                );\r\n            });\r\n    } else if (props.mode === 'production'){\r\n       const {section} = props;\r\n       const {currentProjectsData} = props;\r\n        return section.map((item,i) => {\r\n            return (\r\n                    <MainBackground\r\n                        key = {item}\r\n                        componentJSX = {props.componentsProdJSX}\r\n                        currentProjectsData = {currentProjectsData}\r\n                        editComponentName = {props.editComponentName}\r\n                        countComponents = {props.componentsProdJSX.length}\r\n                        sizeParentBox = {props.sizeParentBox}\r\n                        id = {item}\r\n                        sectionNumber = {i}\r\n                        mode = {props.mode}\r\n                    />\r\n            );\r\n        });\r\n    }\r\n}\r\n\r\nSection.propTypes = {\r\n    componentJSX: PropTypes.array, /// array with jsx components\r\n    editComponentName: PropTypes.string, // name current edit component\r\n    menuActive: PropTypes.bool, // build menu\r\n    mode: PropTypes.string.isRequired, // curent mode\r\n    sizeParentBox: PropTypes.object, // data with size main component\r\n    userData: PropTypes.object // users data\r\n}\r\n\r\nexport default Section;","import React from 'react';\r\n\r\nconst builderHOC = data => Component => {\r\n        return <Component key = { `${data.type}${data.id}`} {...data} />\r\n};\r\n\r\nexport default builderHOC;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport eventEmitter,{controllerStream} from '../../../EventEmitter';\r\nimport styled from 'styled-components';\r\n\r\n\r\nconst InputComponent = styled.input.attrs(props => {\r\n    if (props.mode !== 'production')\r\n    return ({\r\n        style: {\r\n            zIndex: props.indexZ ? '9999' : null,\r\n            left: props.coordX ? props.coordX : '45%',\r\n            top:  props.coordY ? props.coordY : '0%',\r\n        }\r\n    })\r\n})`\r\n    width: ${props => props.size ? props.size.w + 'px' : null};\r\n    color: white;\r\n    height: ${props => props.size ? props.size.h + 'px' : null};\r\n    font-size: ${props => props.fontSize ? props.fontSize + 'px' : null};\r\n    position: absolute;\r\n    background-color: ${props => props.color || null};\r\n    border: ${props => `1px solid ${props.color}`};\r\n    border-radius: ${props => props.borderRadius ? props.borderRadius + 'px' : null};\r\n    white-space: normal;\r\n    font-weight: bold;\r\n    transition: .3s transform linear;\r\n\r\n    :active {\r\n        border: ${props =>`2px dotted ${props.color}`};\r\n        transform: scale(1.05);\r\n    }\r\n`;\r\n\r\nconst ProductionStyle = styled(InputComponent)`\r\n    left: ${props => props.coordX ? props.coordX : '45%'};\r\n    top:  ${props => props.coordY ? props.coordY : '0%'};\r\n`;\r\n\r\n\r\nclass Input extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        id: PropTypes.oneOfType([\r\n            PropTypes.string,\r\n            PropTypes.number\r\n        ]).isRequired,\r\n        targetSection: PropTypes.string.isRequired,\r\n        sizeParentBox: PropTypes.object.isRequired,\r\n    }\r\n\r\n    state = {\r\n        id: this.props.id,\r\n        istrumentsActive: false,\r\n        getSizeBool: false,\r\n        countSection: 0,\r\n        borderRadius: this.props.borderRadius,\r\n        sectionNumber: 0,\r\n        typeInput: this.props.typeInput || 'button',\r\n        sizeParentBox: this.props.sizeParentBox,\r\n        targetSection: this.props.targetSection,\r\n        size: this.props.size && this.props.size.w ? this.props.size : {w: '100', h:'50'},\r\n        fontSize: this.props.fontSize || 20,\r\n        color: this.props.color || null,\r\n        shiftCoords: null,\r\n        content: this.props.content || 'Input',\r\n        posInput: this.props.coords.x ? {x: this.props.coords.x, y: this.props.coords.y} : null,\r\n        startDragNdrop: false,\r\n    }\r\n\r\n    openInputInstruments = event => {\r\n\r\n        const componentsPatternImage = {\r\n            id: this.state.id,\r\n            targetSection: this.state.targetSection,\r\n            typeInput: this.state.typeInput,\r\n            type: 'input',\r\n            color: this.state.color,\r\n            borderRadius: this.state.borderRadius,\r\n            zIndex: null,\r\n            size: {...this.state.size},\r\n            fontSize: this.state.fontSize,\r\n            content: this.state.content,\r\n            coords: {...this.state.posInput}, // x, y\r\n        }\r\n\r\n        eventEmitter.emit(`EventInstrumentPanel`,{\r\n            componentStats: componentsPatternImage,\r\n            targetSection: this.state.targetSection,\r\n            id: this.state.id,\r\n            sizeTextValue: this.state.size\r\n        });\r\n        this.setState({...this.state, istrumentsActive: true});\r\n        event.stopPropagation();\r\n    };\r\n\r\n    saveCoords = event => {\r\n        if (event.nativeEvent.which !== 1) return false;\r\n        const element = this.refInput.getBoundingClientRect();\r\n\r\n        const cords = {\r\n            left: element.left,\r\n            top: element.top,\r\n            width: element.right - element.left,\r\n            height: element.bottom - element.top\r\n        }\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            shiftCoords: {x: event.clientX - cords.left, y: event.clientY - cords.top},\r\n            startDragNdrop: !this.state.startDragNdrop ? true : false\r\n        });\r\n\r\n        event.stopPropagation();\r\n    };\r\n\r\n    changeSize = eventSize => {\r\n        this.setState({...this.state, size: eventSize.size});\r\n    };\r\n\r\n    changeColor = colorRGB => {\r\n\r\n        if (typeof colorRGB === 'string')\r\n            this.setState({\r\n                ...this.state,\r\n                color: colorRGB\r\n            });\r\n    };\r\n\r\n    changeSizeText = eventSize => {\r\n        this.setState({...this.state, fontSize: eventSize.size});\r\n    };\r\n\r\n    setBorderRadius = eventItem => {\r\n        console.log(eventItem);\r\n        let radius = eventItem.borderRadius > 200 ? 200 : eventItem.borderRadius;\r\n        radius = eventItem.borderDown < 0 ? 0 : eventItem.borderRadius;\r\n            this.setState({\r\n                ...this.state,\r\n                borderRadius: radius\r\n            });\r\n    };\r\n\r\n    changeContent = eventItem => {\r\n        let booldContent = eventItem.content || eventItem.content === '';\r\n        if (booldContent)\r\n            this.setState({\r\n                ...this.state,\r\n                content: eventItem.content\r\n            });\r\n    }\r\n\r\n\r\n\r\n    checkPivotPosition = (coordX, coordY) => {\r\n\r\n        const element = this.refInput.getBoundingClientRect();\r\n        const borderTopLeft = 0;\r\n        const borderDown = 800 - element.height;\r\n        const borderRight = this.props.sizeParentBox.width - element.width;\r\n\r\n        if (coordY < borderTopLeft) coordY = borderTopLeft;\r\n        if (coordY > borderDown) coordY = borderDown;\r\n        if (coordX < borderTopLeft) coordX = borderTopLeft;\r\n        if (coordX > borderRight) coordX = borderRight;\r\n\r\n        return {x: coordX, y: coordY};\r\n    }\r\n\r\n    delta = (trans,transT) => {\r\n        return {\r\n            x: 0,\r\n            y: 0,\r\n        }\r\n    }\r\n    move = (x,y) => this.setState({...this.state, posInput: {x: x, y: y}});\r\n\r\n    moveInput = event => {\r\n\r\n        if (this.state.startDragNdrop && this.state.istrumentsActive){\r\n            let num = this.state.sectionNumber;\r\n            if (this.state.sectionNumber === 1 && this.state.countSection-1 === this.state.sectionNumber)  \r\n                num = this.state.sectionNumber + 1;\r\n            let xItem = event.clientX - (this.props.sizeParentBox.left  * num);\r\n            let yItem = event.clientY - (this.props.sizeParentBox.top * num);\r\n\r\n            let coordX = xItem - this.state.shiftCoords.x + this.delta().x;\r\n            let coordY = yItem - this.state.shiftCoords.y + this.delta().y;\r\n\r\n            let coords = this.checkPivotPosition(coordX,coordY);\r\n\r\n            let convertToPercentX = coords.x * 100 / this.state.sizeParentBox.width;\r\n            let convertToPercentY = coords.y * 100 / this.state.sizeParentBox.height;\r\n\r\n            this.move(convertToPercentX.toFixed(2) + '%',\r\n                      convertToPercentY.toFixed(2) + '%');\r\n    }\r\n        event.stopPropagation();\r\n    };\r\n\r\n    stopDragNdrop = event => {\r\n        if (this.state.startDragNdrop) {\r\n            this.setState({...this.state, startDragNdrop: false})\r\n            controllerStream.emit(`EventUpdatePosition${this.state.id}`, this.state.posInput);\r\n        }\r\n        event.stopPropagation();\r\n    };\r\n    //currentProjectsData.sectionsProject.length\r\n\r\n    saveSize = event => {\r\n        const {size} = event;\r\n        if (!this.state.getSizeBool){\r\n        this.setState({\r\n            ...this.state,\r\n            getSizeBool: true,\r\n            countSection: event.countSection,\r\n            sectionNumber: event.sectionNumber,\r\n            sizeParentBox: {width: size.width, height: size.height}});\r\n        } else controllerStream.off(`EventSaveWidth${this.state.targetSection}`,this.saveSize);\r\n    }\r\n\r\n    setWidth = eventItem => {\r\n        const {width} = eventItem;\r\n        this.setState({...this.state, \r\n            size: {\r\n                ...this.state.size,\r\n                w: width,\r\n            }\r\n        });\r\n    }\r\n\r\n    setType = eventItem => {\r\n        this.setState({\r\n            ...this.state, \r\n            typeInput: eventItem\r\n        });\r\n    }\r\n\r\n    setHeight = eventItem => {\r\n        const {height} = eventItem;\r\n        this.setState({...this.state, \r\n            size: {\r\n                ...this.state.size,\r\n                h: height,\r\n            }\r\n        });\r\n    }\r\n\r\n    refInput = null;\r\n    refInputComponent = node => this.refInput = node;\r\n\r\n    render(){\r\n\r\n        if (this.props.mode === 'dev'){\r\n            return (\r\n                <InputComponent\r\n                    type = {this.state.typeInput}\r\n                    value = {this.state.content}\r\n                    ref = {this.refInputComponent}\r\n                    size = {this.state.size}\r\n                    color = {this.state.color}\r\n                    borderRadius = {this.state.borderRadius}\r\n                    fontSize = {this.state.fontSize}\r\n                    onClick = {this.openInputInstruments}\r\n                    onMouseDown = {this.saveCoords}\r\n                    onMouseMove= {this.moveInput}\r\n                    onMouseLeave = {this.stopDragNdrop}\r\n                    onMouseUp = {this.stopDragNdrop}\r\n                    onDragStart = {this.stop}\r\n                    coordX = {this.state.posInput ? this.state.posInput.x : null}\r\n                    coordY = {this.state.posInput ? this.state.posInput.y : null}\r\n                    indexZ = {this.state.startDragNdrop}\r\n                    data-imagecomponentwrapper\r\n                />\r\n            )\r\n        } else if (this.props.mode === 'production'){\r\n\r\n            return (\r\n                <ProductionStyle\r\n                    type = {this.state.typeInput}\r\n                    value = {this.state.content}\r\n                    ref = {this.refInputComponent}\r\n                    size = {this.state.size}\r\n                    color = {this.state.color}\r\n                    fontSize = {this.state.fontSize}\r\n                    borderRadius = {this.state.borderRadius}\r\n                    coordX = {this.state.posInput ? this.state.posInput.x : null}\r\n                    coordY = {this.state.posInput ? this.state.posInput.y : null}\r\n                    indexZ = {this.state.startDragNdrop}\r\n                    mode = {this.props.mode}\r\n                />\r\n            )\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        controllerStream.on(`EventSaveWidth${this.state.targetSection}`, this.saveSize);\r\n        controllerStream.on(`EventSetBorderRadius${this.state.id}`, this.setBorderRadius);\r\n        controllerStream.on(`EventChangecolor${this.state.id}`, this.changeColor);\r\n        controllerStream.on(`EventChangeSize${this.state.id}`, this.changeSize);\r\n        controllerStream.on(`EventChangeSizeText${this.state.id}`, this.changeSizeText);\r\n        controllerStream.on(`EventChangeContentText${this.state.id}`, this.changeContent);\r\n        controllerStream.on(`EventSetWidth${this.state.id}`, this.setWidth);\r\n        controllerStream.on(`EventSetType${this.state.id}`, this.setType);\r\n        controllerStream.on(`EventSetHeight${this.state.id}`, this.setHeight);\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        controllerStream.off(`EventSaveWidth${this.state.targetSection}`,this.saveSize);\r\n        controllerStream.off(`EventSetBorderRadius${this.state.id}`, this.setBorderRadius);\r\n        controllerStream.off(`EventChangeSize${this.state.id}`, this.changeSize);\r\n        controllerStream.off(`EventChangeSizeText${this.state.id}`, this.changeSizeText);\r\n        controllerStream.off(`EventChangeContentText${this.state.id}`, this.changeContent);\r\n        controllerStream.off(`EventChangecolor${this.state.id}`, this.changeColor);\r\n        controllerStream.off(`EventSetWidth${this.state.id}`, this.setWidth);\r\n        controllerStream.off(`EventSetType${this.state.id}`, this.setType);\r\n        controllerStream.off(`EventSetHeight${this.state.id}`, this.setHeight);\r\n    }\r\n}\r\n\r\nexport default Input;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport eventEmitter,{controllerStream} from '../../../EventEmitter';\r\nimport styled from 'styled-components';\r\n\r\nconst WrapperMedia = styled.div.attrs(props => {\r\n    if (props.mode !== 'production')\r\n    return ({\r\n        style: {\r\n            zIndex: props.indexZ ? '9999' : null,\r\n            left: props.coordX ? props.coordX : '45%',\r\n            top:  props.coordY ? props.coordY : '0%',\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            padding: props.mode === 'dev' ? '40px' : null\r\n        }\r\n    })\r\n})`\r\n    width: ${props => props.size.w ? props.size.w + '%' : '30%'};\r\n    height: ${props => props.size.h ? props.size.h + '%' : '50%'};\r\n    position: absolute;\r\n    background: ${props => props.mode === 'dev' ? `url(/img/media.svg)` : null};\r\n    background-size: cover;\r\n    border: ${props => props.mode === 'dev' ? `1px solid red` : null};\r\n    padding: 10px;\r\n`;\r\nconst Media = styled.iframe`\r\n    width: 100%;\r\n    height: 100%;\r\n    z-index: ${props => props.zIndex ? '0' : '-1'};\r\n`;\r\n\r\nconst ProductionStyle = styled(WrapperMedia)`\r\n    left: ${props => props.coordX ? props.coordX : '45%'};\r\n    top:  ${props => props.coordY ? props.coordY : '0%'};\r\n`;\r\n\r\nclass MediaComponent extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        id: PropTypes.oneOfType([\r\n            PropTypes.string,\r\n            PropTypes.number\r\n        ]).isRequired,\r\n        targetSection: PropTypes.string.isRequired,\r\n        sizeParentBox: PropTypes.object.isRequired,\r\n        content: PropTypes.string,\r\n    }\r\n\r\n    state = {\r\n        targetSection: this.props.targetSection,\r\n        id : this.props.id,\r\n        sizeParentBox: this.props.sizeParentBox,\r\n        shiftCoords: null,\r\n        countSection: 0,\r\n        size: this.props.size ? this.props.size : {w: null, h: null},\r\n        posMedia: this.props.coords.x ? {x: this.props.coords.x, y: this.props.coords.y} : null,\r\n        startDragNdrop: false,\r\n        istrumentsActive: false,\r\n        drawContent: false,\r\n        sectionNumber: this.props.sectionNumber,\r\n        content: this.props.content ? this.props.content : null\r\n    }\r\n\r\n    openMediaInstruments = event => {\r\n\r\n        const componentsPatternMedia = {\r\n            id: this.state.id,\r\n            size: this.state.size,\r\n            targetSection: this.state.targetSection,\r\n            type: 'media',\r\n            zIndex: null,\r\n            content: this.state.content,\r\n            coords: {...this.state.posMedia}, // x, y\r\n        }\r\n\r\n        eventEmitter.emit('EventInstrumentPanel',{\r\n            componentStats: componentsPatternMedia,\r\n            targetSection: this.state.targetSection,\r\n            id: this.state.id,\r\n            size: this.state.size,\r\n        });\r\n        this.setState({...this.state, istrumentsActive: true});\r\n        event.stopPropagation();\r\n    }\r\n\r\n    saveCoords = event => {\r\n        if (event.nativeEvent.which !== 1) return false;\r\n        const element = this.refMedia.getBoundingClientRect();\r\n        const cords = {\r\n            left: element.left,\r\n            top: element.top,\r\n            width: element.right - element.left,\r\n            height: element.bottom - element.top\r\n        }\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            shiftCoords: {x: event.clientX - cords.left, y: event.clientY - cords.top},\r\n            startDragNdrop: !this.state.startDragNdrop ? true : false\r\n        });\r\n\r\n        event.stopPropagation();\r\n    };\r\n\r\n    setWidth = eventItem => {\r\n        const {width} = eventItem;\r\n        this.setState({...this.state, \r\n            size: {\r\n                ...this.state.size,\r\n                w: width,\r\n            }\r\n        });\r\n    }\r\n\r\n    setHeight = eventItem => {\r\n        const {height} = eventItem;\r\n        this.setState({...this.state, \r\n            size: {\r\n                ...this.state.size,\r\n                h: height,\r\n            }\r\n        });\r\n    }\r\n\r\n    checkPivotPosition = (coordX, coordY) => {\r\n\r\n        const element = this.refMedia.getBoundingClientRect();\r\n        const borderTopLeft = 0;\r\n        const borderDown = 800 - element.height;\r\n        const borderRight = this.props.sizeParentBox.width - element.width;\r\n\r\n        if (coordY < borderTopLeft) coordY = borderTopLeft;\r\n        if (coordY > borderDown) coordY = borderDown;\r\n        if (coordX < borderTopLeft) coordX = borderTopLeft;\r\n        if (coordX > borderRight) coordX = borderRight;\r\n\r\n        return {x: coordX, y: coordY};\r\n    }\r\n\r\n    delta = (trans,transT) => {\r\n        return {\r\n            x: 0,\r\n            y: 0,\r\n        }\r\n    }\r\n    move = (x,y) => this.setState({...this.state, posMedia: {x: x, y: y}});\r\n\r\n    moveMedia = event => {\r\n\r\n        if (this.state.startDragNdrop && this.state.istrumentsActive){\r\n\r\n            let xItem = event.clientX - (this.props.sizeParentBox.left  * this.state.sectionNumber);\r\n            let yItem = event.clientY - (this.props.sizeParentBox.top * this.state.sectionNumber);\r\n\r\n            let coordX = xItem - this.state.shiftCoords.x + this.delta().x;\r\n            let coordY = yItem - this.state.shiftCoords.y + this.delta().y;\r\n\r\n            let coords = this.checkPivotPosition(coordX,coordY);\r\n\r\n            let convertToPercentX = coords.x * 100 / this.state.sizeParentBox.width;\r\n            let convertToPercentY = coords.y * 100 / this.state.sizeParentBox.height;\r\n\r\n            this.move(convertToPercentX.toFixed(2) + '%',\r\n                      convertToPercentY.toFixed(2) + '%');\r\n    }\r\n        event.stopPropagation();\r\n    };\r\n\r\n    stopDragNdrop = event => {\r\n        if (this.state.startDragNdrop) {\r\n            this.setState({...this.state, startDragNdrop: false})\r\n            controllerStream.emit(`EventUpdatePosition${this.state.id}`, this.state.posMedia);\r\n        }\r\n        event.stopPropagation();\r\n    };\r\n\r\n    setContent = event => {\r\n        const {iframe} = event;\r\n        this.setState({...this.state, content: iframe});\r\n    };\r\n\r\n\r\n    saveSize = event => {\r\n        const {size} = event;\r\n        if (!this.state.getSizeBool){\r\n        this.setState({\r\n            ...this.state,\r\n            getSizeBool: true,\r\n            countSection: event.countSection,\r\n            sectionNumber: event.sectionNumber + 1,\r\n            sizeParentBox: {width: size.width, height: size.height}});\r\n        } else controllerStream.off(`EventSaveWidth${this.state.targetSection}`,this.saveSize);\r\n    }\r\n\r\n    refMedia = null;\r\n    refMediaComponent = node => this.refMedia = node;\r\n\r\n    render(){\r\n        const url = 'https://www.youtube.com/embed/';\r\n\r\n        if (this.props.mode === 'dev'){\r\n            return (\r\n                <WrapperMedia\r\n                    ref = {this.refMediaComponent}\r\n                    onClick={this.openMediaInstruments}\r\n                    onMouseDown = {this.saveCoords}\r\n                    onMouseMove= {this.moveMedia}\r\n                    onMouseLeave = {this.stopDragNdrop}\r\n                    onMouseUp = {this.stopDragNdrop}\r\n                    onDragStart = {this.stop}\r\n                    mode = {this.props.mode}\r\n                    indexZ = {this.state.startDragNdrop}\r\n                    coordX = {this.state.posMedia ? this.state.posMedia.x : null}\r\n                    coordY = {this.state.posMedia ? this.state.posMedia.y : null}\r\n                    size = {this.state.size}\r\n                >\r\n                {!this.state.startDragNdrop ? \r\n                    <Media\r\n                        src= {this.state.content ? url + this.state.content : null }\r\n                        drawContent = {this.state.drawContent}\r\n                        width = {this.state.width} \r\n                        height = {this.state.height}\r\n                        zIndex = {this.state.content}\r\n                        allowfullscreen\r\n                    ></Media> : null\r\n                }\r\n                </WrapperMedia>\r\n            )\r\n        } else if (this.props.mode === 'production'){\r\n            return (\r\n                <ProductionStyle\r\n                    ref = {this.refMediaComponent}\r\n                    indexZ = {this.state.startDragNdrop}\r\n                    size = {this.state.size}\r\n                    coordX = {this.state.posMedia ? this.state.posMedia.x : null}\r\n                    coordY = {this.state.posMedia ? this.state.posMedia.y : null}\r\n                    mode = {this.props.mode}\r\n                >\r\n                {!this.state.startDragNdrop ? \r\n                    <Media\r\n                        src= {this.state.content ? url + this.state.content : null }\r\n                        drawContent = {this.state.drawContent}\r\n                        width = {this.state.width} \r\n                        height = {this.state.height}\r\n                        zIndex = {this.state.content}\r\n                        mode = {this.props.mode}\r\n                        allowfullscreen\r\n                    ></Media> : null\r\n                }\r\n                </ProductionStyle>\r\n            )\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        controllerStream.on(`EventSetContentMedia${this.state.id}`, this.setContent);\r\n        controllerStream.on(`EventSaveWidth${this.state.targetSection}`, this.saveSize);\r\n        controllerStream.on(`EventSetWidth${this.state.id}`, this.setWidth);\r\n        controllerStream.on(`EventSetHeight${this.state.id}`, this.setHeight); \r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        controllerStream.off(`EventSaveWidth${this.state.targetSection}`,this.saveSize);\r\n        controllerStream.off(`EventSetContentMedia${this.state.id}`, this.setContent);\r\n        controllerStream.off(`EventSetWidth${this.state.id}`, this.setWidth);\r\n        controllerStream.off(`EventSetHeight${this.state.id}`, this.setHeight); \r\n    }\r\n}\r\n\r\nexport default MediaComponent;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport eventEmitter,{controllerStream} from '../../../EventEmitter';\r\nimport styled from 'styled-components';\r\n\r\n\r\nconst WrapperImg = styled.div.attrs(props => {\r\n    if (props.mode !== 'production')\r\n    return ({\r\n        style: {\r\n            zIndex: props.indexZ ? '9999' : null,\r\n            left: props.coordX ? props.coordX : '45%',\r\n            top:  props.coordY ? props.coordY : '0',\r\n        }\r\n    })\r\n})`\r\n    width: ${props => props.size ? props.size.w + '%' : '30%'};\r\n    height: ${props => props.size ? props.size.h + '%' : '50%'};\r\n    position: absolute;\r\n`;\r\n\r\nconst ImageStyle = styled.img`\r\n    width: 100%;\r\n    height: 100%;\r\n    opacity: ${props => props.opacity};\r\n    border-radius: ${props => props.borderRadius}px;\r\n    pointer-events: none;\r\n    position: absolute;\r\n`;\r\n\r\nconst ProductionStyle = styled(WrapperImg)`\r\n    left: ${props => props.coordX ? props.coordX : '50%'};\r\n    top:  ${props => props.coordY};\r\n`;\r\n\r\nclass Image extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        id: PropTypes.oneOfType([\r\n            PropTypes.string,\r\n            PropTypes.number\r\n        ]).isRequired,\r\n        targetSection: PropTypes.string.isRequired,\r\n        sizeParentBox: PropTypes.object.isRequired,\r\n    }\r\n\r\n    state = {\r\n        id: this.props.id,\r\n        istrumentsActive: false,\r\n        getSizeBool: false,\r\n        countSection: 0,\r\n        opacity: this.props.opacity || 1,\r\n        sectionNumber: 0,\r\n        borderRadius: this.props.borderRadius || 0,\r\n        sizeParentBox: this.props.sizeParentBox,\r\n        targetSection: this.props.targetSection,\r\n        path: this.props.image ? this.props.image : this.props.path,\r\n        size: this.props.size ? this.props.size : {w: 30, h: 50},\r\n        shiftCoords: null,\r\n        posImage: this.props.coords.x ? {x: this.props.coords.x, y: this.props.coords.y} : null,\r\n        startDragNdrop: false,\r\n    }\r\n\r\n    openImageInstruments = event => {\r\n\r\n        const componentsPatternImage = {\r\n            id: this.state.id,\r\n            targetSection: this.state.targetSection,\r\n            size: {...this.state.size},\r\n            type: 'image',\r\n            borderRadius: this.state.borderRadius,\r\n            opacity: this.state.opacity,\r\n            zIndex: null,\r\n            image: this.state.path,\r\n            coords: {...this.state.posImage}, // x, y\r\n        }\r\n\r\n        eventEmitter.emit(`EventInstrumentPanel`,{\r\n            componentStats: componentsPatternImage,\r\n            targetSection: this.state.targetSection,\r\n            id: this.state.id,\r\n            sizeTextValue: this.state.size\r\n        });\r\n        this.setState({...this.state, istrumentsActive: true});\r\n        event.stopPropagation();\r\n    };\r\n\r\n    saveCoords = event => {\r\n        if (event.nativeEvent.which !== 1) return false;\r\n        const element = this.refImage.getBoundingClientRect();\r\n\r\n        const cords = {\r\n            left: element.left,\r\n            top: element.top,\r\n            width: element.right - element.left,\r\n            height: element.bottom - element.top\r\n        }\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            shiftCoords: {x: event.clientX - cords.left, y: event.clientY - cords.top},\r\n            startDragNdrop: !this.state.startDragNdrop ? true : false\r\n        });\r\n\r\n        event.stopPropagation();\r\n    };\r\n\r\n    checkPivotPosition = (coordX, coordY) => {\r\n\r\n        const element = this.refImage.getBoundingClientRect();\r\n        const borderTopLeft = 0;\r\n        const borderDown = 800 - element.height;\r\n        const borderRight = this.props.sizeParentBox.width - element.width;\r\n\r\n        if (coordY < borderTopLeft) coordY = borderTopLeft;\r\n        if (coordY > borderDown) coordY = borderDown;\r\n        if (coordX < borderTopLeft) coordX = borderTopLeft;\r\n        if (coordX > borderRight) coordX = borderRight;\r\n\r\n        return {x: coordX, y: coordY};\r\n    }\r\n\r\n    delta = (trans,transT) => {\r\n        return {\r\n            x: 0,\r\n            y: 0,\r\n        }\r\n    }\r\n    move = (x,y) => this.setState({...this.state, posImage: {x: x, y: y}});\r\n\r\n    moveText = event => {\r\n\r\n        if (this.state.startDragNdrop && this.state.istrumentsActive){\r\n\r\n            let xItem = event.clientX - (this.props.sizeParentBox.left  * this.state.sectionNumber);\r\n            let yItem = event.clientY - (this.props.sizeParentBox.top * this.state.sectionNumber);\r\n\r\n            let coordX = xItem - this.state.shiftCoords.x + this.delta().x;\r\n            let coordY = yItem - this.state.shiftCoords.y + this.delta().y;\r\n\r\n            let coords = this.checkPivotPosition(coordX,coordY);\r\n\r\n            let convertToPercentX = coords.x * 100 / this.state.sizeParentBox.width;\r\n            let convertToPercentY = coords.y * 100 / this.state.sizeParentBox.height;\r\n\r\n            this.move(convertToPercentX.toFixed(2) + '%',\r\n                      convertToPercentY.toFixed(2) + '%');\r\n    }\r\n        event.stopPropagation();\r\n    };\r\n\r\n    stopDragNdrop = event => {\r\n        if (this.state.startDragNdrop) {\r\n            this.setState({...this.state, startDragNdrop: false})\r\n            controllerStream.emit(`EventUpdatePosition${this.state.id}`, this.state.posImage);\r\n        }\r\n        event.stopPropagation();\r\n    };\r\n\r\n    setCurrentImage = event => {\r\n        const {urlFull} = event;\r\n        this.setState({...this.state, path: urlFull});\r\n    };\r\n\r\n    setWidth = eventItem => {\r\n        const {width} = eventItem;\r\n        this.setState({...this.state, \r\n            size: {\r\n                ...this.state.size,\r\n                w: width,\r\n            }\r\n        });\r\n    }\r\n\r\n    setHeight = eventItem => {\r\n        const {height} = eventItem;\r\n        this.setState({...this.state, \r\n            size: {\r\n                ...this.state.size,\r\n                h: height,\r\n            }\r\n        });\r\n    }\r\n\r\n    saveSize = event => {\r\n        const {size} = event;\r\n        if (!this.state.getSizeBool){\r\n        this.setState({\r\n            ...this.state,\r\n            getSizeBool: true,\r\n            countSection: event.countSection,\r\n            sectionNumber: event.sectionNumber,\r\n            sizeParentBox: {width: size.width, height: size.height}});\r\n        } else controllerStream.off(`EventSaveWidth${this.state.targetSection}`,this.saveSize);\r\n    }\r\n\r\n    changeSizeImage = eventItem => {\r\n        this.setState({...this.state, size: eventItem.size});\r\n    };\r\n\r\n    setBorderRadius = eventItem => {\r\n\r\n    let radius = eventItem.borderRadius > 200 ? 200 : eventItem.borderRadius;\r\n    radius = eventItem.borderDown < 0 ? 0 : eventItem.borderRadius;\r\n        this.setState({\r\n            ...this.state,\r\n            borderRadius: radius\r\n        });\r\n    };\r\n\r\n    setOpacity = eventItem => {\r\n        let opacity = eventItem.opacity > 1 ? 1 : eventItem.opacity;\r\n        opacity = eventItem.opacity < 0 ? 0 : eventItem.opacity;\r\n            this.setState({\r\n                ...this.state,\r\n                opacity: opacity\r\n            });\r\n    }\r\n \r\n    refImage = null;\r\n    refImageComponent = node => this.refImage = node;\r\n\r\n    render(){\r\n\r\n        if (this.props.mode === 'dev'){\r\n            return (\r\n                <WrapperImg\r\n                ref = {this.refImageComponent}\r\n                size = {this.state.size}\r\n                onClick = {this.openImageInstruments}\r\n                onMouseDown = {this.saveCoords}\r\n                onMouseMove= {this.moveText}\r\n                onMouseLeave = {this.stopDragNdrop}\r\n                onMouseUp = {this.stopDragNdrop}\r\n                onDragStart = {this.stop}\r\n                coordX = {this.state.posImage ? this.state.posImage.x : null}\r\n                coordY = {this.state.posImage ? this.state.posImage.y : null}\r\n                indexZ = {this.state.startDragNdrop}\r\n                data-imagecomponentwrapper\r\n                >\r\n                    <ImageStyle\r\n                        data-imagecomponent\r\n                        borderRadius = {this.state.borderRadius}\r\n                        opacity = {this.state.opacity}\r\n                        src = {this.state.path}\r\n                        alt = 'img'\r\n                    />\r\n                </WrapperImg>\r\n            )\r\n        } else if (this.props.mode === 'production'){\r\n            return (\r\n                <ProductionStyle\r\n                ref = {this.refImageComponent}\r\n                size = {this.state.size}\r\n                mode = {this.props.mode}\r\n                coordX = {this.state.posImage ? this.state.posImage.x : null}\r\n                coordY = {this.state.posImage ? this.state.posImage.y : null}\r\n                indexZ = {this.state.startDragNdrop}\r\n                >\r\n                    <ImageStyle\r\n                        borderRadius = {this.state.borderRadius}\r\n                        opacity = {this.state.opacity}\r\n                        crossOrigin = \"anonymous\"\r\n                        src = {this.state.path}\r\n                        alt = 'img'\r\n                    />\r\n                </ProductionStyle>\r\n            )\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        controllerStream.on(`EventSetCurrentImage${this.state.id}`, this.setCurrentImage);\r\n        controllerStream.on(`EventChangeSize${this.state.id}`, this.changeSizeImage);\r\n        controllerStream.on(`EventSetOpacity${this.state.id}`, this.setOpacity);\r\n        controllerStream.on(`EventSetBorderRadius${this.state.id}`,this.setBorderRadius);\r\n        controllerStream.on(`EventSetWidth${this.state.id}`, this.setWidth);\r\n        controllerStream.on(`EventSetHeight${this.state.id}`, this.setHeight); \r\n        controllerStream.on(`EventSaveWidth${this.state.targetSection}`, this.saveSize);\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n       \r\n        controllerStream.off(`EventChangeSize${this.state.id}`, this.changeSizeImage);\r\n        controllerStream.off(`EventSetOpacity${this.state.id}`, this.setOpacity);\r\n        controllerStream.off(`EventSetBorderRadius${this.state.id}`,this.setBorderRadius);\r\n        controllerStream.off(`EventSetCurrentImage${this.state.id}`, this.setCurrentImage);\r\n        controllerStream.off(`EventSetWidth${this.state.id}`, this.setWidth);\r\n        controllerStream.off(`EventSetHeight${this.state.id}`, this.setHeight); \r\n        controllerStream.off(`EventSaveWidth${this.state.targetSection}`,this.saveSize);\r\n    }\r\n}\r\n\r\nexport default Image;","\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport eventEmitter,{controllerStream} from '../../../EventEmitter';\r\nimport styled from 'styled-components';\r\nimport './components.scss';\r\n\r\n\r\n\r\nconst WrapperText = styled.div.attrs(props => {\r\n    if (props.mode !== 'production')\r\n    return ({\r\n        style: {\r\n            zIndex: props.indexZ ? '9999' : null,\r\n            left: props.coordX ? props.coordX : '50%',\r\n            top:  props.coordY,\r\n        }\r\n    })\r\n})`\r\n    position: absolute;\r\n    font-size: ${props => props.size ? props.size : '120px'};\r\n    color: ${props => props.textColor};\r\n    text-align: center;\r\n    margin: 0;\r\n    word-break: break-all;\r\n`;\r\n\r\nconst TextStyle = styled.p`\r\n    width: 100%;\r\n    height: 100%;\r\n    font-family: ${props => props.font};\r\n    text-align: center;\r\n    margin: 0;\r\n    user-select: none;\r\n`;\r\n\r\n\r\nconst ProductionStyle = styled(WrapperText)`\r\n    left: ${props => props.coordX ? props.coordX : '50%'};\r\n    top:  ${props => props.coordY};\r\n\r\n    @media ${`screen and (max-width: 500px)`} {\r\n        font-size: 50px;\r\n      }\r\n`;\r\n\r\nclass TextComponent extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        id: PropTypes.oneOfType([\r\n            PropTypes.string,\r\n            PropTypes.number\r\n        ]).isRequired,\r\n        targetSection: PropTypes.string.isRequired,\r\n        sizeParentBox: PropTypes.object.isRequired,\r\n        mode: PropTypes.string.isRequired,\r\n    }\r\n\r\n    state = {\r\n        id: this.props.id,\r\n        istrumentsActive: false,\r\n        isHaveSize: false,\r\n        parent: this.props.sizeParentBox,\r\n        targetSection: this.props.targetSection,\r\n        colorText: this.props.color,\r\n        sizeText: this.props.fontSize || this.props.size,\r\n        shiftCoords: null,\r\n        position: this.props.coords,\r\n        font: this.props.font ? this.props.font : 'Arial',\r\n        startDragNdrop: false,\r\n        contentText: this.props.content ? this.props.content : null,\r\n        countSection: 0,\r\n        sectionNumber: 0,\r\n        getSizeBool: false\r\n    }\r\n\r\n    openTitleInstruments = event => {\r\n\r\n         const componentsPatternText = {\r\n            id: this.state.id,\r\n            targetSection: this.state.targetSection,\r\n            type: 'text',\r\n            font: this.state.font,\r\n            color: this.state.colorText,\r\n            fontSize: this.state.sizeText,\r\n            content: this.state.contentText,\r\n            coords: {...this.state.posText}, // x, y\r\n        };\r\n        eventEmitter.emit(`EventInstrumentPanel`,{\r\n                type: 'text',\r\n                targetSection: this.state.targetSection,\r\n                id: this.state.id,\r\n                componentStats: componentsPatternText,\r\n                sizeTextValue: this.state.sizeText\r\n        });\r\n        this.setState({...this.state, istrumentsActive: true});\r\n        event.stopPropagation();\r\n    }\r\n\r\n    changeColorText = colorRGB => {\r\n        if (typeof colorRGB === 'string')\r\n            this.setState({\r\n                ...this.state,\r\n                colorText: colorRGB\r\n            });\r\n    };\r\n\r\n    changeSizeText = eventSize => {\r\n        this.setState({...this.state, sizeText: eventSize.size});\r\n    };\r\n\r\n    saveSize = event => {\r\n        const {size} = event;\r\n        if (!this.state.getSizeBool){\r\n        this.setState({\r\n            ...this.state,\r\n            getSizeBool: true,\r\n            countSection: event.countSection,\r\n            sectionNumber: event.sectionNumber,\r\n            parent: {width: size.width, height: size.height}});\r\n        } else controllerStream.off(`EventSaveWidth${this.state.targetSection}`,this.saveSize);\r\n    }\r\n\r\n    changeContentText = eventContent => {\r\n        let booldContent = eventContent.content || eventContent.content === '';\r\n        if (booldContent)\r\n            this.setState({\r\n                ...this.state,\r\n                contentText: eventContent.content\r\n            });\r\n    };\r\n\r\n    saveCoords = event => {\r\n        if (event.nativeEvent.which !== 1) return false;\r\n        const element = this.refText.getBoundingClientRect();\r\n\r\n        const cords = {\r\n            left: element.left,\r\n            top: element.top,\r\n            width: element.right - element.left,\r\n            height: element.bottom - element.top\r\n        }\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            shiftCoords: {x: event.clientX - cords.left, y: event.clientY - cords.top},\r\n            startDragNdrop: !this.state.startDragNdrop ? true : false\r\n        });\r\n\r\n        event.stopPropagation();\r\n    };\r\n\r\n    setFont = eventItem => {\r\n        this.setState({\r\n            ...this.state,\r\n            font: eventItem.font\r\n        });\r\n    };\r\n\r\n    checkPivotPosition = (coordX, coordY) => {\r\n\r\n        const element = this.refText.getBoundingClientRect();\r\n        const borderTopLeft = 0;\r\n        const borderDown = 800 - element.height;\r\n        const borderRight = this.props.sizeParentBox.width - element.width;\r\n\r\n        if (coordY < borderTopLeft) coordY = borderTopLeft;\r\n        if (coordY > borderDown) coordY = borderDown;\r\n        if (coordX < borderTopLeft) coordX = borderTopLeft;\r\n        if (coordX > borderRight) coordX = borderRight;\r\n\r\n        return {x: coordX, y: coordY};\r\n    }\r\n\r\n    delta = (trans,transT) => {\r\n        return {\r\n            x: 0,\r\n            y: 0,\r\n        }\r\n    }\r\n    move = (x,y) => this.setState({...this.state, position: {x: x, y: y}});\r\n\r\n    moveText = event => {\r\n\r\n        if (this.state.startDragNdrop && this.state.istrumentsActive){\r\n\r\n            let sectionNum = this.state.sectionNumber === 0 ? 1 : this.state.sectionNumber;\r\n            let xItem = event.clientX - (this.props.sizeParentBox.left  * sectionNum);\r\n            let yItem = event.clientY - (this.props.sizeParentBox.top * sectionNum);\r\n\r\n            let coordX = xItem - this.state.shiftCoords.x + this.delta().x;\r\n            let coordY = yItem - this.state.shiftCoords.y + this.delta().y;\r\n\r\n            let coords = this.checkPivotPosition(coordX,coordY);\r\n\r\n            let convertToPercentX = coords.x * 100 / this.state.parent.width;\r\n            let convertToPercentY = coords.y * 100 / this.state.parent.height;\r\n\r\n            this.move(convertToPercentX.toFixed(2) + '%',\r\n                      convertToPercentY.toFixed(2) + '%');\r\n    }\r\n        event.stopPropagation();\r\n    };\r\n\r\n    stopDragNdrop = event => {\r\n        if (this.state.startDragNdrop) {\r\n            this.setState({...this.state, startDragNdrop: false})\r\n            controllerStream.emit(`EventUpdatePosition${this.state.id}`, this.state.position);\r\n        }\r\n        event.stopPropagation();\r\n    };\r\n\r\n    refText = null;\r\n    refTextComponent = node => this.refText = node;\r\n\r\n\r\n    render(){\r\n        if (this.props.mode === 'dev'){\r\n            return (\r\n                <WrapperText\r\n                    ref  = {this.refTextComponent}\r\n                    onClick={this.openTitleInstruments}\r\n                    textColor = {this.state.colorText ? this.state.colorText : 'red'}\r\n                    size = {this.state.sizeText ? this.state.sizeText + 'px' : '120px'}\r\n                    onMouseDown = {this.saveCoords}\r\n                    onMouseMove= {this.moveText}\r\n                    onMouseLeave = {this.stopDragNdrop}\r\n                    onMouseUp = {this.stopDragNdrop}\r\n                    coordX = {this.state.position ? this.state.position.x : null}\r\n                    coordY = {this.state.position ? this.state.position.y : null}\r\n                    indexZ = {this.state.startDragNdrop}\r\n                    data-textcomponent\r\n                >\r\n                    <TextStyle font = {this.state.font}>{this.state.contentText}</TextStyle>\r\n                </WrapperText>\r\n            ) \r\n        } else if (this.props.mode === 'production'){\r\n            return (\r\n                <ProductionStyle\r\n                    ref  = {this.refTextComponent}\r\n                    mode = {this.props.mode}\r\n                    textColor = {this.state.colorText ? this.state.colorText : 'red'}\r\n                    size = {this.state.sizeText ? this.state.sizeText + 'px' : '120px'}\r\n                    coordX = {this.state.position ? this.state.position.x : null}\r\n                    coordY = {this.state.position ? this.state.position.y : null}\r\n                    indexZ = {this.state.startDragNdrop}\r\n                >\r\n                    <TextStyle font = {this.state.font}>{this.state.contentText}</TextStyle>\r\n                </ProductionStyle>\r\n            )\r\n        }\r\n\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        controllerStream.on(`EventChangeColorText${this.state.id}`, this.changeColorText);\r\n        controllerStream.on(`EventSetFont${this.state.id}`, this.setFont);\r\n        controllerStream.on(`EventChangeSize${this.state.id}`, this.changeSizeText);\r\n        controllerStream.on(`EventChangeContentText${this.state.id}`, this.changeContentText);\r\n        controllerStream.on(`EventSaveWidth${this.state.targetSection}`,this.saveSize);\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        controllerStream.off(`EventChangeColorText${this.state.id}`, this.changeColorText);\r\n        controllerStream.off(`EventSetFont${this.state.id}`, this.setFont);\r\n        controllerStream.off(`EventChangeSize${this.state.id}`, this.changeSizeText);\r\n        controllerStream.off(`EventChangeContentText${this.state.id}`, this.changeContentText);\r\n        controllerStream.off(`EventSaveWidth${this.state.targetSection}`,this.saveSize);\r\n    }\r\n}\r\n\r\nexport default TextComponent;","import React,{Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport {Redirect} from 'react-router-dom';\r\nimport {loadCurrentProjectAction, exitProjectAction} from '../../redux/actions';\r\n\r\nimport Section from '../../components/buildComponents/section';\r\nimport builderHOC from '../../components/builderHOC';\r\nimport Loader from '../../components/loading/Loader';\r\nimport Header from '../../components/header/Header';\r\nimport withFirebase from '../../components/firebaseHOC';\r\nimport {connect} from 'react-redux';\r\n\r\n\r\n\r\nimport Input from '../../components/buildComponents/components/Input';\r\nimport Media from '../../components/buildComponents/components/Media';\r\nimport Image from '../../components/buildComponents/components/Image';\r\nimport TextComponent from '../../components/buildComponents/components/Text';\r\nimport BackgroundComponent from '../../components/buildComponents/components/Background';\r\n\r\nimport './production.scss';\r\n\r\nclass Production extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        firebase: PropTypes.object,\r\n    }\r\n\r\n    state = {\r\n        idProject: parseInt(this.props.match.params.param),\r\n        mode: 'production',\r\n        projectEmpty: false,\r\n        isLoadComponents: true,\r\n        componentsProdJSX: []\r\n    }\r\n\r\n    makeProduction = array => {\r\n\r\n        let {componentsProdJSX} = this.state;\r\n        let _components = [];\r\n\r\n        array.forEach(item => {\r\n\r\n            let props = {\r\n                sizeParentBox: {\r\n                    width: this.prodRef.data.width,\r\n                    height: this.prodRef.data.height,\r\n                    top: this.prodRef.data.top,\r\n                    left: this.prodRef.data.left,\r\n                },\r\n                ...item,\r\n                mode: 'production',\r\n            }\r\n\r\n            let Component = null;\r\n                if (item.type === 'background') Component = BackgroundComponent;\r\n                else if (item.type === 'input') Component = Input;\r\n                else if (item.type === 'media') Component = Media;\r\n                else if (item.type === 'image') Component = Image;\r\n                else if (item.type === 'text') Component = TextComponent;\r\n\r\n            const patternJSX = {\r\n                id: item.id,\r\n                targetSection: item.targetSection,\r\n                component: builderHOC(props)(Component)\r\n            };\r\n                _components.push(patternJSX);\r\n        });\r\n            this.setState({\r\n                ...this.state,\r\n                isLoadComponents: false,\r\n                componentsProdJSX: [...componentsProdJSX, ..._components],\r\n            });\r\n    };\r\n\r\n    prodRef = null;\r\n    mainProductionRef  = node => node ?\r\n    this.prodRef = {data: node.getBoundingClientRect(), node: node} : node;\r\n\r\n    render(){\r\n\r\n        const {userData} = this.props;\r\n        const {currentProjectsData} = userData;\r\n        const section = currentProjectsData.sectionsProject;\r\n\r\n        if (this.state.projectEmpty) return <Redirect to = '/Cabinet' />\r\n\r\n        if (userData.active && currentProjectsData.loadProject){\r\n            return (\r\n            <Fragment>\r\n                <Header key = 'Header' title = \"Constructor\" idUser = {userData.idUser} />\r\n                <div\r\n                    ref = {this.mainProductionRef}\r\n                    className = 'Production'\r\n                    key = 'Production'\r\n                    >\r\n                    {!this.state.isLoadComponents ?\r\n                        section.length &&\r\n                            <Section \r\n                                key = 'section'\r\n                                mode = {this.state.mode}\r\n                                currentProjectsData = {currentProjectsData}\r\n                                componentsProdJSX = {this.state.componentsProdJSX}\r\n                                section = {section}\r\n                            />\r\n                        : null\r\n                    }\r\n                </div>\r\n            </Fragment>\r\n            )\r\n        } else if (!this.props.firebase.getCurrentUser()) return <Redirect to = '/' />\r\n        else return <Loader  key = 'Loader' path = '/img/loading.gif' type = 'production' />\r\n    }\r\n\r\n    componentDidUpdate = (prevProps, prevState) => {\r\n        let {userData} = this.props;\r\n        let {currentProjectsData} = userData;\r\n\r\n        if (userData.active && !currentProjectsData.loadProject) {\r\n            const current =  userData.projects.find(item => item.id === this.state.idProject)\r\n            if (current)\r\n            this.props.dispatch(loadCurrentProjectAction({\r\n                id: current.id,\r\n                typeProject: current.type,\r\n                sectionsProject: [...current.sectionsProject],\r\n                components: [...current.components]\r\n            }))\r\n            else this.setState({...this.state, projectEmpty: true});\r\n        }\r\n\r\n        if (this.state.isLoadComponents && currentProjectsData.loadProject) \r\n            this.makeProduction(currentProjectsData.components);\r\n\r\n    }\r\n\r\n\r\n    componentDidMount = () => {\r\n        let {userData} = this.props;\r\n        let {currentProjectsData} = userData;\r\n\r\n        if (userData.active && !currentProjectsData.loadProject) {\r\n            const current =  userData.projects.find(item => item.id === this.state.idProject)\r\n            this.props.dispatch(loadCurrentProjectAction({\r\n                id: current.id,\r\n                sectionsProject: [...current.sectionsProject],\r\n                typeProject: current.type,\r\n                components: [...current.components]\r\n            }));\r\n        };\r\n\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n\r\n        let {userData} = this.props;\r\n        if (userData.active)  this.props.dispatch(exitProjectAction(true));\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        userData: {\r\n            active: state.cabinet.active,\r\n            idUser: state.cabinet.idUser,\r\n            projects: [...state.cabinet.projects],\r\n           currentProjectsData: {...state.builder}\r\n        },\r\n    }\r\n};\r\n\r\n  export default connect(mapStateToProps)(withFirebase(Production));","import React, {Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\n\r\n\r\nimport withFirebase from '../../components/firebaseHOC';\r\n\r\nimport Header from '../../components/header/Header';\r\nimport Loader from '../../components/loading/Loader';\r\n\r\nimport './about.scss';\r\n\r\nclass About extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        config: PropTypes.object.isRequired, /** @Config app */\r\n        firebase: PropTypes.object.isRequired, /** @firebase class for use firebase functions */\r\n        history: PropTypes.object, /** @Router HTML5 history */\r\n        location: PropTypes.object, /** @Router */\r\n        match: PropTypes.object, /** @Router */\r\n    }\r\n\r\n    state = {\r\n        config: this.props.config\r\n    };\r\n\r\n    render(){\r\n\r\n        let user = this.props.firebase.getCurrentUser();\r\n        if (user && this.props.idUser) {\r\n            const { config } = this.state;\r\n            return (\r\n                <Fragment>\r\n                    <Header title = {config.title} idUser = {user.uid} />\r\n                    <section className = 'About'>\r\n                        <div className = 'container'>\r\n                            <div className = 'col-12'>\r\n                                <div className = 'information'>\r\n                                <img alt = 'img' className = 'logoAbout' src = {process.env.PUBLIC_URL + '/img/about.jpg'}/>\r\n                                    <p className ='developer'><span>Developer:</span> {config.about.developer}</p>\r\n                                    <p className = 'year'><span>Year:</span> {config.about.year}</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </section>\r\n                </Fragment>\r\n            )\r\n        } else if (!user) return <Redirect to = { '/'} />\r\n        else return <Loader path = '/img/loading.gif' type = 'About' />\r\n\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n      idUser: state.cabinet.idUser,\r\n    }\r\n  };\r\n\r\nexport default connect(mapStateToProps)(withFirebase(About));","import {errorAction, loadUpdateCurrentProject} from '../actions';\r\n\r\nconst updateMiddleware = (item) => async (dispatch,getState, {firebase}) => {\r\n \r\n    let newProjects = item.projects.map(project => {\r\n        if (project.id === item.idProject) {\r\n            project.components = [...item.components]\r\n            project.sectionsProject = [...item.sectionsProject]\r\n        }\r\n        return project;\r\n    });\r\n    await firebase.db.collection(\"users\").doc(item.uid).update({\r\n        'projects': JSON.parse(JSON.stringify(newProjects))\r\n    })\r\n    .then(response => {\r\n        let project = item.projects.find(itemdb => itemdb.id === item.idProject);\r\n        dispatch(loadUpdateCurrentProject({\r\n            components: [...project.components],\r\n            idProject: item.idProject,\r\n            sectionsProject: item.sectionsProject,\r\n        }))\r\n    })\r\n    .catch(error => dispatch(errorAction(error.message)));\r\n};\r\n\r\nexport default updateMiddleware;","import React,{useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Viewer.scss';\r\n\r\nfunction Viewer(props){\r\n\r\n    let [mode] = useState(props.mode);\r\n    let [path] = useState(props.path);\r\n\r\n    const closeViewer = event => {\r\n        props.eventStreamBuild.emit(\"EventView\", { action: false, target: null});\r\n        event.stopPropagation();\r\n    }\r\n\r\n    return (\r\n        \r\n        <div onClick = {closeViewer} className = 'Viewer'>\r\n            {(mode === 'image' || mode === 'background') ? <img src = {path} alt = 'fullImage' /> \r\n            : \r\n            <iframe \r\n            src= {`https://www.youtube.com/embed/${props.iframe}`}\r\n            title = 'youtube'\r\n            frameBorder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" \r\n            allowFullScreen>\r\n            </iframe>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nViewer.propTypes = {\r\n    eventStreamBuild: PropTypes.object.isRequired, // events stream\r\n    mode: PropTypes.string.isRequired, // use mode\r\n    path: PropTypes.string.isRequired // path to data component\r\n}\r\n\r\nexport default Viewer;","import React,{Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {SketchPicker} from 'react-color';\r\n\r\n\r\nconst InputInstruments = props => {\r\n\r\n    let {colorPickerActive} = props.instrumentPanel;\r\n    let {content} = props.componentStats;\r\n    let {fontSize} = props.componentStats;\r\n    let {coords} = props.componentStats;\r\n    let {size} = props.componentStats;\r\n\r\n    let _content = content !== '' ? 'Input' : '';\r\n\r\n    return (\r\n        <Fragment>\r\n            <p className = 'titleInstument'>Position: </p>\r\n            <span className = 'textCoordsPanel'>\r\n            {coords.x ?\r\n                coords.x + ' / ' + coords.y : ' drop for active'}\r\n            </span>\r\n            <p className = 'titleInstument'>Color: </p>\r\n            <input \r\n                onClick = {props.cbSetColor}\r\n                className = 'button_switch'\r\n                type = 'button'\r\n                value = 'color pick'\r\n            />\r\n                { colorPickerActive ?\r\n                    <div className ='wrapperColorPicker'>\r\n                        <SketchPicker\r\n                        onChangeComplete={props.cbHandleChangeComplete}\r\n                        color = {props.color ? props.color : 'white'}\r\n                        />\r\n                    </div>\r\n                    : null\r\n                }\r\n            <p className = 'titleInstument'>Size (%):</p>\r\n            <div className = 'panel__sizes'>\r\n                <input\r\n                    className = 'button_switch'\r\n                    onChange = {props.cbSetWidth}\r\n                    type=\"number\"\r\n                    min = '10' max = '200'\r\n                    value = {size.w ? size.w : 100}\r\n                />\r\n                <input \r\n                    className = 'button_switch'\r\n                    onChange = {props.cbSetHeight}\r\n                    type=\"number\"\r\n                    min = '10' max = '200'\r\n                    value = {size.h ? size.h : 50}\r\n                />\r\n            </div>\r\n            <p className = 'titleInstument'>Text size: </p>\r\n            <input \r\n                className = 'button_switch'\r\n                onChange = {props.cbSetSize}\r\n                type=\"number\"\r\n                min = '10' max = '200'\r\n                value = {fontSize ? fontSize : 21}\r\n            />\r\n            <p className = 'titleInstument'>Border radius: </p>\r\n            <input\r\n                onChange = {props.cbSetBorderRadius}\r\n                className = 'button_switch radius'\r\n                type=\"number\"\r\n                value = {props.componentStats.borderRadius ?\r\n                            props.componentStats.borderRadius : 10\r\n                        }\r\n                min = '10' max = '200'\r\n            />\r\n\r\n            <p className = 'titleInstument'>Type input: </p>\r\n            <select \r\n            value = {props.componentStats.typeInput} \r\n            onChange = {props.cbSetType}\r\n            className = 'button_switch'\r\n        >\r\n        <option>button</option>\r\n        <option>text</option>\r\n        <option>password</option>\r\n        </select>\r\n        />\r\n            <p className = 'titleInstument'>Content: </p>\r\n            <input\r\n            className = 'button_switch'\r\n            onChange = {props.cbSetContent}\r\n            maxLength = '100'\r\n            type = 'text'\r\n            value = {content ? content : _content}\r\n        />\r\n            <input \r\n                onClick = {props.cbDelete}\r\n                className = 'instrumentPanel__deleteComponentButton'\r\n                type=\"button\"\r\n                value = 'delete'\r\n            />\r\n        </Fragment>\r\n    )\r\n};\r\n\r\nInputInstruments.propTypes = {\r\n    componentStats: PropTypes.object.isRequired, // object with current component data\r\n    cbSetColor: PropTypes.func.isRequired, // callback set color\r\n    cbHandleChangeComplete: PropTypes.func.isRequired, // callback state color picker\r\n    cbSetWidth: PropTypes.func.isRequired, // callback set width\r\n    cbSetHeight: PropTypes.func.isRequired, // callback set height\r\n    cbSetSize: PropTypes.func.isRequired, // callback set size\r\n    cbSetBorderRadius: PropTypes.func.isRequired, // callback set border-radius\r\n    cbSetContent: PropTypes.func.isRequired, // callback set content input\r\n    cbDelete: PropTypes.func.isRequired, // callback delete\r\n}\r\n\r\nexport default InputInstruments;","import React,{Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst MediaInstruments = props => {\r\n\r\n    let {size} = props.componentStats;\r\n    let {coords} = props.componentStats;\r\n    console.log(props.componentStats);\r\n\r\n    return (\r\n        <Fragment>\r\n            <p className = 'titleInstument'>Position: </p>\r\n            <span className = 'textCoordsPanel'>\r\n            {coords.x ?\r\n                coords.x + ' / ' + coords.y : ' drop for active'}\r\n            </span>\r\n            <p className = 'titleInstument'>Size (%):</p>\r\n            <div className = 'panel__sizes'>\r\n                <input\r\n                    className = 'button_switch'\r\n                    onChange = {props.cbSetWidth}\r\n                    type=\"number\"\r\n                    min = '10' max = '100'\r\n                    value = {size.w ? size.w : 30}\r\n                />\r\n                <input \r\n                    className = 'button_switch'\r\n                    onChange = {props.cbSetHeight}\r\n                    type=\"number\"\r\n                    min = '10' max = '100'\r\n                    value = {size.h ? size.h : 50}\r\n                />\r\n            </div>\r\n            <p className = 'titleInstument'>Content: </p>\r\n            <input \r\n                onClick = {props.cbSearch}\r\n                className = 'ImageSearchButton'\r\n                type=\"button\"\r\n                value = 'search media'\r\n            />\r\n            <input \r\n                onClick = {props.cbDelete}\r\n                className = 'instrumentPanel__deleteComponentButton'\r\n                type=\"button\"\r\n                value = 'delete'\r\n            />\r\n        </Fragment>\r\n    )\r\n};\r\n\r\nMediaInstruments.propTypes = {\r\n    componentStats: PropTypes.object.isRequired, // object with current component data\r\n    cbSearch: PropTypes.func.isRequired, // callback search\r\n    cbSetWidth: PropTypes.func.isRequired, // callback set width\r\n    cbSetHeight: PropTypes.func.isRequired, // callback set height\r\n    cbDelete: PropTypes.func.isRequired, // callback delete\r\n}\r\n\r\nexport default MediaInstruments;","import React, {Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ImageInstruments = props => {\r\n\r\n    let {coords} = props.componentStats;\r\n    let {size} = props.componentStats;\r\n    let fileRef = React.createRef();\r\n    return (\r\n        <Fragment>\r\n        <p className = 'titleInstument'>Position: </p>\r\n        <span className = 'textCoordsPanel'>\r\n        {coords.x ?\r\n            coords.x + ' / ' + coords.y : ' drop for active'}\r\n        </span>\r\n        <p className = 'titleInstument'>Size (%):</p>\r\n        <div className = 'panel__sizes'>\r\n            <input\r\n                className = 'button_switch'\r\n                onChange = {props.cbSetWidth}\r\n                type=\"number\"\r\n                min = '10' max = '100'\r\n                value = {size.w ? size.w : 30}\r\n            />\r\n            <input \r\n                className = 'button_switch'\r\n                onChange = {props.cbSetHeight}\r\n                type=\"number\"\r\n                min = '10' max = '100'\r\n                value = {size.h ? size.h : 30}\r\n            />\r\n        </div>\r\n        <p className = 'titleInstument'>Border radius: </p>\r\n            <input\r\n                onChange = {props.cbSetBorderRadius}\r\n                className = 'button_switch radius'\r\n                type=\"number\"\r\n                value = {props.componentStats.borderRadius ?\r\n                            props.componentStats.borderRadius : 10\r\n                        }\r\n                min = '10' max = '200'\r\n            />\r\n            <p className = 'titleInstument titleInstrument__opacity'>Opacity: </p>\r\n            <input \r\n                onChange = {props.cbSetOpacity}\r\n                className = 'ImageSearchButton'\r\n                type=\"number\"\r\n                value = {props.componentStats.opacity ?\r\n                    props.componentStats.opacity : 1\r\n                }\r\n                step = '0.1'\r\n                min = '0' max = '1'\r\n            />\r\n            <p className = 'titleInstument titleInstrument__opacity'>Loader: </p>\r\n            <div className = 'fileLoader'>\r\n            <input\r\n                ref = {fileRef}\r\n                className = 'fileInput'\r\n                onChange = {props.cbLoadFile}\r\n                accept=\"image/*\"\r\n                type=\"file\"\r\n            />\r\n                <input\r\n                        // onClick = {simulateClickFile}\r\n                        className = 'ImageSearchButton'\r\n                        type = 'button'\r\n                        value = 'loading file'\r\n                />\r\n            </div>\r\n            <input \r\n                onClick = {props.cbSearch}\r\n                className = 'ImageSearchButton'\r\n                type=\"button\"\r\n                value = 'search image'\r\n            />\r\n            <input \r\n                onClick = {props.cbDelete}\r\n                className = 'instrumentPanel__deleteComponentButton'\r\n                type=\"button\"\r\n                value = 'delete'\r\n            />\r\n        </Fragment>\r\n    )\r\n\r\n}\r\n\r\nImageInstruments.propTypes = {\r\n    componentStats: PropTypes.object.isRequired, // object with current component data\r\n    cbSetWidth: PropTypes.func.isRequired, // callback set width\r\n    cbSetHeight: PropTypes.func.isRequired, // callback set height\r\n    cbSetBorderRadius: PropTypes.func.isRequired, // callback set border-radius\r\n    cbSetOpacity: PropTypes.func.isRequired, // callback set opacity\r\n    cbLoadFile: PropTypes.func.isRequired, // callback load file\r\n    cbSearch: PropTypes.func.isRequired, // callback search\r\n    cbDelete: PropTypes.func.isRequired, // callback delete\r\n}\r\n\r\nexport default ImageInstruments;","import React, {Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {SketchPicker} from 'react-color';\r\n\r\nconst BackgroundInstruments = props => {\r\n    return (\r\n        <Fragment>\r\n        <p className = 'titleInstument'>Color: </p>\r\n        <input\r\n            onClick = {props.cbSetColor}\r\n            className = 'button_switch Color'\r\n            type = 'button'\r\n            value = 'color pick'\r\n        />\r\n            { props.colorPickerActive ?\r\n                <SketchPicker\r\n                    onChangeComplete={props.cbHandleChangeComplete}\r\n                    color = {props.color ? props.color : 'white'}\r\n                />\r\n                : null\r\n            }\r\n            <input \r\n                onClick = {props.cbSearch}\r\n                className = 'ImageSearchButton'\r\n                type = 'button'\r\n                value = 'background-image'\r\n            />\r\n        </Fragment>\r\n    )\r\n\r\n}\r\n\r\nBackgroundInstruments.propTypes = {\r\n    componentStats: PropTypes.object.isRequired, // object with current component data\r\n    cbSetColor: PropTypes.func.isRequired, // callback set color\r\n    cbHandleChangeComplete: PropTypes.func.isRequired, // callback picker state change\r\n    cbSearch: PropTypes.func.isRequired, // callback search\r\n}\r\n\r\nexport default BackgroundInstruments;","import React,{Fragment} from 'react';\r\nimport {SketchPicker} from 'react-color';\r\n\r\nconst TextInstruments = props => {\r\n\r\n        let {colorPickerActive} = props.instrumentPanel;\r\n        let {content} = props.componentStats;\r\n        let {fontSize} = props.componentStats;\r\n        let {coords} = props.componentStats;\r\n        let _content = content !== '' ? 'Title' : '';\r\n\r\n        return (\r\n            <Fragment>\r\n            <p className = 'titleInstument'>Position: </p>\r\n            <span className = 'textCoordsPanel'>\r\n            {coords.x ?\r\n                coords.x + ' / ' + coords.y : ' drop for active'}\r\n            </span>\r\n            <p className = 'titleInstument'>Color: </p>\r\n            <input \r\n                onClick = {props.cbSetColor}\r\n                className = 'button_switch'\r\n                type = 'button'\r\n                value = 'color pick'\r\n            />\r\n            <p className = 'titleInstument'>Text size: </p>\r\n            <input \r\n                className = 'button_switch'\r\n                onChange = {props.cbSetSize}\r\n                type=\"number\"\r\n                min = '10' max = '200'\r\n                value = {fontSize ? fontSize : 120}\r\n            />\r\n                { colorPickerActive ?\r\n                    <SketchPicker\r\n                    onChangeComplete={props.cbHandleChangeComplete}\r\n                    color = {props.color ? props.color : 'red'}\r\n                    />\r\n                    : null\r\n                }\r\n                <p className = 'titleInstument'>Font: </p>\r\n                <select \r\n                    value = {props.componentStats.font} \r\n                    onChange = {props.cbSetFont}\r\n                    className = 'button_switch'\r\n                >\r\n                <option>Arial</option>\r\n                <option>Times</option>\r\n                <option>Georgia</option>\r\n                <option>Impact</option>\r\n                <option>Tahoma</option>\r\n                <option>Verdana</option>\r\n                <option>Comic</option>\r\n                </select>\r\n            <p className = 'titleInstument'>Content: </p>\r\n            <input\r\n                className = 'button_switch'\r\n                onChange = {props.cbSetContent}\r\n                maxLength = '100'\r\n                type = 'text'\r\n                value = {content ? content : _content}\r\n            />\r\n            <input \r\n                onClick = {props.cbDelete}\r\n                className = 'instrumentPanel__deleteComponentButton'\r\n                type=\"button\"\r\n                value = 'delete'\r\n            />\r\n            </Fragment>\r\n        )\r\n}\r\n\r\nexport default TextInstruments;","import React, {Fragment} from 'react';\r\nimport eventEmitter,{controllerStream} from '../../EventEmitter';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport InputInstruments from './InputTools/InputInstruments';\r\nimport MediaInstruments from './MediaTools/MediaInstruments';\r\nimport ImageInstruments from './ImageTools/ImageInstruments';\r\nimport BackgroundInstruments from './BackgroundTools/BackgroundInstruments';\r\nimport TextInstruments from './TextTools/TextInstruments';\r\n\r\nimport Icon from '../Icon/icon';\r\n\r\nimport './instrumentsPanel.scss';\r\n\r\n\r\nclass InstrumentsPanel extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        instrumentPanel:  PropTypes.object.isRequired, /** @Settings for panel and data about component */\r\n        editComponentName: PropTypes.string, /** @Name editable component */\r\n        eventStreamBuild: PropTypes.object.isRequired // stream events\r\n    };\r\n\r\n    state = {\r\n        instrumentPanel: {...this.props.instrumentPanel},\r\n        componentStats: this.props.componentStats,\r\n        images: null,\r\n    };\r\n\r\n\r\n    closePanel = event => {\r\n        this.props.eventStreamBuild.emit('EventClosePanel', {close: false});\r\n    };\r\n\r\n    setSize = event => {\r\n        let {id} = this.state.componentStats;\r\n        let size = event.target.value > 200 ? 200 : event.target.value;\r\n\r\n        if (this.state.componentStats.type !== 'input')\r\n        this.setState({\r\n            ...this.state, \r\n            instrumentPanel: {...this.state.instrumentPanel},\r\n            componentStats: {...this.state.componentStats,fontSize: size}\r\n        }, () => controllerStream.emit(`EventChangeSize${id}`, {\r\n                targetSection: this.state.editComponentName, size: size \r\n        }));\r\n        else this.setState({\r\n                ...this.state, \r\n                instrumentPanel: {...this.state.instrumentPanel},\r\n                componentStats: {...this.state.componentStats,fontSize: size}\r\n            }, () => controllerStream.emit(`EventChangeSizeText${id}`, {size: size}\r\n            ));\r\n    };\r\n\r\n    setFont = event => {\r\n        let {id} = this.state.componentStats;\r\n        let fontName = event.target.value;\r\n        this.setState({\r\n            ...this.state, \r\n            instrumentPanel: {...this.state.instrumentPanel},\r\n            componentStats: {...this.state.componentStats,font: fontName}\r\n        },\r\n            () => controllerStream.emit(`EventSetFont${id}`, {\r\n                targetSection: this.state.editComponentName, font: fontName\r\n            })\r\n        );\r\n    }\r\n\r\n    setIframeContent = eventItem => {\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            componentStats:{\r\n                ...this.state.componentStats,\r\n                content: eventItem.iframe\r\n            }\r\n        });\r\n    }\r\n\r\n    setContent = event => {\r\n        let {id} = this.state.componentStats;\r\n        let contentValue = event.target.value;\r\n        this.setState({\r\n            ...this.state, \r\n            instrumentPanel: {...this.state.instrumentPanel},\r\n            componentStats: {...this.state.componentStats,content: contentValue}\r\n        },\r\n            () => controllerStream.emit(`EventChangeContentText${id}`,{\r\n                targetSection: this.state.editComponentName, content: contentValue\r\n            })\r\n        );\r\n        if (event) event.stopPropagation();\r\n    };\r\n\r\n    setWidth = event => {\r\n        const {id} = this.state.componentStats;\r\n        const width = event.target.value;\r\n        this.setState({\r\n            ...this.state,\r\n            componentStats: {...this.state.componentStats,\r\n                size: {\r\n                    ...this.state.componentStats.size,\r\n                    w: width\r\n                }}\r\n        },\r\n            () => controllerStream.emit(`EventSetWidth${id}`,{width: width}));\r\n\r\n        if (event) event.stopPropagation();\r\n    };\r\n\r\n    setHeight = event => {\r\n        const {id} = this.state.componentStats;\r\n        const height = event.target.value;\r\n        this.setState({\r\n            ...this.state,\r\n            componentStats: {...this.state.componentStats,\r\n                size: {\r\n                    ...this.state.componentStats.size,\r\n                    h: height\r\n                }}\r\n        },\r\n            () => controllerStream.emit(`EventSetHeight${id}`,{height: height}));\r\n\r\n        if (event) event.stopPropagation();\r\n    }\r\n\r\n    updatePosition = eventItem => {\r\n        if (!eventItem) return;\r\n        this.setState({\r\n            ...this.state, \r\n            componentStats: {\r\n                ...this.state.componentStats,\r\n                coords: {\r\n                    ...this.state.componentStats.coords,\r\n                    x: eventItem.x,\r\n                    y: eventItem.y\r\n                }\r\n            }\r\n        });\r\n    };\r\n\r\n    setColor = event => {\r\n        this.setState({...this.state,\r\n            instrumentPanel:{\r\n                ...this.state.instrumentPanel,\r\n                colorPickerActive: this.state.instrumentPanel.colorPickerActive ? false : true\r\n            }\r\n        });\r\n        if (event) event.stopPropagation();\r\n    };\r\n\r\n    setType = event => {\r\n\r\n        let {id} = this.state.componentStats;\r\n        let typeInput = event.target.value;\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            componentStats: {\r\n                ...this.state.componentStats,\r\n                typeInput: typeInput\r\n            }\r\n        },\r\n         () => controllerStream.emit(`EventSetType${id}`, typeInput));\r\n        if (event) event.stopPropagation();\r\n    }\r\n\r\n    setOpacity = event => {\r\n        let {id} = this.state.componentStats;\r\n        let opacity = event.target.value;\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            componentStats: {...this.state.componentStats,opacity: opacity}\r\n        },\r\n         () => controllerStream.emit(`EventSetOpacity${id}`, {opacity: opacity}));\r\n    };\r\n\r\n    setBorderRadius = event => {\r\n        let {id} = this.state.componentStats;\r\n        let radius = event.target.value;\r\n\r\n        console.log(event);\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            componentStats: {...this.state.componentStats,borderRadius: radius}\r\n        },\r\n         () => controllerStream.emit(`EventSetBorderRadius${id}`, {borderRadius: radius}));\r\n    };\r\n\r\n    updateBimageStats = eventItem => {\r\n        const {images} = eventItem;\r\n        if (eventItem.mode !== 'image')\r\n        this.setState({\r\n            ...this.state,\r\n            componentStats:{\r\n                ...this.state.componentStats,\r\n                backgroundImage: images.urlFull\r\n            }\r\n        });\r\n        else {\r\n            this.setState({\r\n                ...this.state,\r\n                componentStats:{\r\n                    ...this.state.componentStats,\r\n                    image: images.urlFull\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    handleChangeComplete = event => {\r\n\r\n        const {rgb} = event;\r\n        let colorRGB = `rgb(${rgb.r},${rgb.g},${rgb.b},${rgb.a})`;\r\n\r\n        let {id} = this.state.componentStats;\r\n        if (this.state.componentStats.type === 'background'){\r\n            this.setState({\r\n                ...this.state,\r\n                componentStats: {...this.state.componentStats,color: colorRGB}\r\n            }, () => controllerStream.emit(`EventChangeColorBackground${id}`,\r\n                        {colorRGB: this.state.componentStats.color}\r\n                    ));\r\n        }\r\n\r\n        else if (this.state.componentStats.type === 'text') {\r\n            this.setState({\r\n                ...this.state,\r\n                componentStats: {...this.state.componentStats,color: colorRGB}\r\n            },\r\n            () => controllerStream.emit(`EventChangeColorText${id}`, colorRGB));\r\n        }\r\n\r\n        else if (this.state.componentStats.type === 'input') {\r\n            this.setState({\r\n                ...this.state,\r\n                componentStats: {...this.state.componentStats,color: colorRGB}\r\n            },\r\n            () => controllerStream.emit(`EventChangecolor${id}`, colorRGB));\r\n        }\r\n\r\n    };\r\n\r\n    redirectSaveChanges = event => {\r\n        this.props.eventStreamBuild.emit(\"EventSaveChangesComponent\", {\r\n            ...this.state.componentStats,\r\n            id: this.state.componentStats.id,\r\n            type: this.state.componentStats.type,\r\n            ms: 0\r\n        });\r\n        if (event) event.stopPropagation();\r\n    }\r\n\r\n    saveChanges = event => {\r\n\r\n        this.props.eventStreamBuild.emit(\"EventSaveChangesComponent\", {\r\n                ...this.state.componentStats,\r\n                id: this.state.componentStats.id,\r\n                type: this.state.componentStats.type,\r\n                ms: 1500,\r\n            });\r\n\r\n        eventEmitter.emit('EventRedirectConfirm', true);\r\n        if (event) event.stopPropagation();\r\n    }\r\n\r\n    deleteComponent = event => {\r\n        this.props.eventStreamBuild.emit('EventDeleteComponent', {\r\n            id: this.state.componentStats.id,\r\n            targetSection: this.state.componentStats.targetSection,\r\n            type: this.state.componentStats.type\r\n        });\r\n    };\r\n\r\n    search = event => {\r\n\r\n        let {id} = this.state.componentStats;\r\n        this.props.eventStreamBuild.emit('EventModalSearchOn', {idComponent: id, mode: this.state.componentStats.type});\r\n\r\n        event.stopPropagation();\r\n    };\r\n\r\n    loadFile = event => {\r\n        let {id} = this.state.componentStats;\r\n        try {\r\n            let image = event.target.files[0];\r\n            let reader = new FileReader();\r\n            if (image.type[0] !== 'i') throw new Error('Invalid file');\r\n            reader.readAsDataURL(image);\r\n            reader.onload = (e) => {\r\n                controllerStream.emit(`EventSetCurrentImage${id}`,{ urlFull: reader.result });\r\n                this.updateBimageStats({images: { urlFull: reader.result }, mode: 'image'});\r\n                e.stopPropagation();\r\n            }\r\n            reader.onerror = () => {\r\n                console.error(reader.error);\r\n            }\r\n        } catch (error) {\r\n            console.error(error.message);\r\n        }\r\n\r\n        event.stopPropagation();\r\n    }\r\n\r\n    makePanelInstruments = (type) => {\r\n            switch (type){\r\n                case 'text':\r\n                   return(\r\n                    <TextInstruments\r\n                        instrumentPanel = {{...this.state.instrumentPanel}}\r\n                        componentStats = {{...this.state.componentStats}}\r\n                        cbSetColor = {this.setColor}\r\n                        cbSetSize = {this.setSize}\r\n                        cbHandleChangeComplete = {this.handleChangeComplete}\r\n                        cbSetContent = {this.setContent}\r\n                        cbSetFont = {this.setFont}\r\n                        cbSetOpacity = {this.setOpacity}\r\n                        color = {this.state.componentStats.color}\r\n                        cbDelete = {this.deleteComponent}\r\n                    />\r\n                   )\r\n                case 'background':\r\n                    return (\r\n                        <BackgroundInstruments\r\n                            colorPickerActive = {this.state.instrumentPanel.colorPickerActive}\r\n                            componentStats = {{...this.state.componentStats}}\r\n                            cbSetColor = {this.setColor}\r\n                            color = {this.state.componentStats.color}\r\n                            cbHandleChangeComplete = {this.handleChangeComplete}\r\n                            cbSearch = {this.search}\r\n                        />\r\n                    )\r\n                case 'image':\r\n                        return (\r\n                            <ImageInstruments\r\n                                instrumentPanel = {{...this.state.instrumentPanel}}\r\n                                componentStats = {{...this.state.componentStats}}\r\n                                cbSearch = {this.search}\r\n                                cbSetSize = {this.setSize}\r\n                                cbSetBorderRadius = {this.setBorderRadius}\r\n                                cbSetOpacity = {this.setOpacity}\r\n                                cbSetWidth = {this.setWidth}\r\n                                cbSetHeight = {this.setHeight}\r\n                                cbLoadFile = {this.loadFile}\r\n                                cbDelete = {this.deleteComponent}\r\n                            />\r\n                        )\r\n                case 'media':\r\n                        return (\r\n                            <MediaInstruments\r\n                                instrumentPanel = {{...this.state.instrumentPanel}}\r\n                                componentStats = {{...this.state.componentStats}}\r\n                                cbSearch = {this.search}\r\n                                cbSetWidth = {this.setWidth}\r\n                                cbSetHeight = {this.setHeight}\r\n                                cbDelete = {this.deleteComponent}\r\n                            />\r\n                            )\r\n                case 'input':\r\n                        return (\r\n                            <InputInstruments\r\n                                instrumentPanel = {{...this.state.instrumentPanel}}\r\n                                componentStats = {{...this.state.componentStats}}\r\n                                cbSetColor = {this.setColor}\r\n                                cbSetBorderRadius = {this.setBorderRadius}\r\n                                cbHandleChangeComplete = {this.handleChangeComplete}\r\n                                cbSetSize = {this.setSize}\r\n                                cbSetWidth = {this.setWidth}\r\n                                cbSetHeight = {this.setHeight}\r\n                                color = {this.state.componentStats.color}\r\n                                cbSetContent = {this.setContent}\r\n                                cbSetType = {this.setType}\r\n                                cbDelete = {this.deleteComponent}\r\n                            />\r\n                        )\r\n                default: return <p className = 'warningInstruments'>No found element</p>\r\n            }\r\n    };\r\n\r\n    render(){\r\n        let { instrumentActive } = this.state.instrumentPanel;\r\n        return (\r\n            <Fragment>\r\n                <div  className = 'instumentsPanel'>\r\n                    <button\r\n                        onClick = {this.closePanel}\r\n                        className = 'closeInstrumentsPanel'\r\n                    >\r\n                        <Icon path = '/img/close.svg' />\r\n                    </button>\r\n                    <h3>Instruments</h3>\r\n                    {\r\n                        instrumentActive ? \r\n                        <p className = 'TextComponent'>{this.state.componentStats.type}</p>\r\n                        : null\r\n                    }\r\n                    {\r\n                        instrumentActive ?\r\n                        <div className = 'instuments'>\r\n                            {this.makePanelInstruments(this.state.componentStats.type)}\r\n                        </div>\r\n                        : null\r\n                    }\r\n                </div>\r\n            </Fragment>\r\n        )\r\n    };\r\n\r\n    componentDidUpdate = (oldProps, oldState) => {\r\n        if (oldState.componentStats !== this.state.componentStats)\r\n        this.saveChanges();\r\n    };\r\n\r\n    componentDidMount = event => {\r\n        eventEmitter.on('EventRedirectSaveChanges', this.redirectSaveChanges);\r\n        eventEmitter.on(\"EventSetBImageInstumentPanel\", this.updateBimageStats);\r\n        eventEmitter.on(`EventSetIframe`, this.setIframeContent);\r\n        controllerStream.on(`EventUpdatePosition${this.state.componentStats.id}`, this.updatePosition);\r\n    };\r\n\r\n    componentWillUnmount = event => {\r\n        if (this.timer) clearTimeout(this.timer);\r\n        eventEmitter.off('EventRedirectSaveChanges', this.redirectSaveChanges);\r\n        eventEmitter.off(\"EventSetBImageInstumentPanel\", this.updateBimageStats);\r\n        eventEmitter.off(`EventSetIframe`, this.setIframeContent);\r\n        controllerStream.off(`EventUpdatePosition${this.state.componentStats.id}`, this.updatePosition);\r\n    };\r\n};\r\n\r\nexport default InstrumentsPanel;","import React,{Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Viewer from '../imageViewer/Viewer';\r\nimport InstrumentsPanel from '../../components/instrumentsPanel/InstrumentsPanel';\r\nimport ModalWindow from '../../components/modalWindow/ModalWindow';\r\n\r\nconst AdditionalTools = props => {\r\n\r\n    return (\r\n        <Fragment key = 'AdditionalBuild'>\r\n            {   props.modalViewer.action &&\r\n                    <Viewer \r\n                        key = 'ImageViewer'\r\n                        eventStreamBuild = {props.eventStreamBuild}\r\n                        mode = {props.modalViewer.mode}\r\n                        path = {props.modalViewer.target}\r\n                        iframe = {props.modalViewer.iframe}\r\n                    />\r\n            }\r\n            {   props.modalSearch &&\r\n                    <ModalWindow\r\n                        eventStreamBuild = {props.eventStreamBuild}\r\n                        idComponent = {props.componentStats.id}\r\n                        modalSearchMode = {props.modalSearchMode}\r\n                        key = 'ModalWindow' workMode = 'Search'\r\n                    />\r\n            }\r\n                <InstrumentsPanel\r\n                    key = {`InstrumentsPanel${props.componentStats.id}`}\r\n                    eventStreamBuild = {props.eventStreamBuild}\r\n                    editComponentName = {props.editComponentName}\r\n                    componentStats = {props.componentStats}\r\n                    instrumentPanel = {props.instrumentPanel}\r\n                />\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nAdditionalTools.propTypes = {\r\n    eventStreamBuild: PropTypes.object.isRequired, // events stream\r\n    componentStats: PropTypes.object.isRequired, // current components data\r\n    instrumentPanel: PropTypes.object.isRequired, // instruments data\r\n    modalViewer: PropTypes.object.isRequired, // Viewer data\r\n}\r\n\r\nexport default AdditionalTools;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Input from '../buildComponents/components/Input';\r\nimport Media from '../buildComponents/components/Media';\r\nimport Image from '../buildComponents/components/Image';\r\nimport TextComponent from '../buildComponents/components/Text';\r\nimport BackgroundComponent from '../buildComponents/components/Background';\r\n\r\nimport './buildMenu.scss';\r\n\r\nclass BuildMenu extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        mode: PropTypes.string.isRequired, /** @String work mode component */\r\n        editComponentName: PropTypes.string,\r\n        eventStreamBuild: PropTypes.object, /** @Events stream build */\r\n        countSection: PropTypes.number, /** @Number for new section id */\r\n        countComponents: PropTypes.number, /** @Number last project */\r\n        sizeParentBox: PropTypes.object /** @Object with width and height parent(bg) */\r\n    }\r\n\r\n\r\n    state = {\r\n        mode: this.props.mode,\r\n        sizeParentBox: {...this.props.sizeParentBox},\r\n        title: 'Title'\r\n    }\r\n\r\n    addText = event => {\r\n        let id = Math.random().toFixed(3);\r\n\r\n        const componentsPatternText = {\r\n            type: 'text',\r\n            font: 'Arial',\r\n            color: null,\r\n            opacity: 1,\r\n            fontSize: null,\r\n            content: 'Title',\r\n            coords: {x: null, y: null}, // x, y\r\n            id: id,\r\n            targetSection: this.props.editComponentName,\r\n        };\r\n        this.props.eventStreamBuild.emit('EventBuildComponents',{\r\n            componentsPattern: componentsPatternText,\r\n            type: componentsPatternText.type,\r\n            component: <TextComponent\r\n                            key = {`text${id}`}\r\n                            mode = 'dev'\r\n                            {...componentsPatternText}\r\n                            sizeParentBox = {{...this.props.sizeParentBox}}\r\n                            id = {id}\r\n                        >Title</TextComponent>\r\n        });\r\n        event.stopPropagation();\r\n    }\r\n\r\n    addBackground = event => {\r\n        let id = Math.random().toFixed(3);\r\n\r\n        const componentsPatternBackground = {\r\n            id: id,\r\n            type: 'background',\r\n            backgroundColor: null,\r\n            backgroundImage: null,\r\n            targetSection: this.state.editComponentName,\r\n        };\r\n\r\n        this.props.eventStreamBuild.emit('EventBuildComponents',{\r\n            componentsPattern: componentsPatternBackground,\r\n            type: componentsPatternBackground.type,\r\n            component: <BackgroundComponent\r\n                            targetSection = {this.props.editComponentName}\r\n                            {...componentsPatternBackground}\r\n                            key = {`bg${id}`}\r\n                            id = {id}\r\n                        />\r\n        });\r\n\r\n        event.stopPropagation();\r\n    }\r\n\r\n    addImage = event => {\r\n        let id = Math.random().toFixed(3);\r\n\r\n        const componentsPatternImage = {\r\n            borderRadius: 0,\r\n            type: 'image',\r\n            size: {w: 30, h: 50},\r\n            opacity: 1,\r\n            zIndex: null,\r\n            image: '/img/photoPattern.svg',\r\n            coords: {x: null, y: null}, // x, y\r\n            id: id,\r\n            targetSection: this.props.editComponentName,\r\n        };\r\n        this.props.eventStreamBuild.emit('EventBuildComponents',{\r\n            componentsPattern: componentsPatternImage,\r\n            type: componentsPatternImage.type,\r\n            component: <Image\r\n                            key = {`image${id}`}\r\n                            sizeParentBox = {this.props.sizeParentBox}\r\n                            id = {id}\r\n                            mode = 'dev'\r\n                            path = {'/img/photoPattern.svg'}\r\n                            {...componentsPatternImage}\r\n                            type = 'image' />\r\n        });\r\n        event.stopPropagation();\r\n    }\r\n\r\n    addMedia = event => {\r\n        let id = Math.random().toFixed(3);\r\n\r\n        const  componentsPatternMedia = {\r\n            type: 'media',\r\n            size: {w: null, h: null},\r\n            content: null,\r\n            coords: {x: null, y: null}, // x, y\r\n            id: id,\r\n            targetSection: this.props.editComponentName,\r\n        };\r\n\r\n        this.props.eventStreamBuild.emit('EventBuildComponents', {\r\n            componentsPattern: componentsPatternMedia,\r\n            type: componentsPatternMedia.type,\r\n            component: <Media\r\n                            key = {`media${id}`}\r\n                            targetSection = {this.props.editComponentName}\r\n                            sizeParentBox = {this.props.sizeParentBox}\r\n                            content = {null}\r\n                            id = {id}\r\n                            path = {'/img/photoPattern.mp4'}\r\n                            {...componentsPatternMedia}\r\n                            type = 'media'\r\n                            mode = 'dev'\r\n                        />\r\n        });\r\n        event.stopPropagation();\r\n    }\r\n\r\n    addInput = event => {\r\n        let id = Math.random().toFixed(3);\r\n\r\n        const  componentsPatternInput = {\r\n            type: 'input',\r\n            size: {w: null, h: null},\r\n            typeInput: 'button',\r\n            color: null,\r\n            fontSize: null,\r\n            borderRadius: null,\r\n            content: null,\r\n            coords: {x: null, y: null}, // x, y\r\n            id: id,\r\n            targetSection: this.props.editComponentName,\r\n        };\r\n\r\n        this.props.eventStreamBuild.emit('EventBuildComponents', {\r\n            componentsPattern: componentsPatternInput,\r\n            type: componentsPatternInput.type,\r\n            component: <Input\r\n                            key = {`input${id}`}\r\n                            targetSection = {this.props.editComponentName}\r\n                            sizeParentBox = {this.props.sizeParentBox}\r\n                            id = {id}\r\n                            inputType = 'button'\r\n                            {...componentsPatternInput}\r\n                            type = 'input'\r\n                            mode = 'dev'\r\n                        />\r\n        });\r\n        event.stopPropagation();\r\n    }\r\n\r\n    addSection = event => {\r\n        let id = Math.random().toFixed(3);\r\n\r\n        const componentsPatternBackground = {\r\n            backgroundColor: null,\r\n            backgroundImage: null,\r\n            targetSection: `Section${id}`,\r\n            id: `Section${id}`,\r\n            type: 'background',\r\n        };\r\n        this.props.eventStreamBuild.emit('EventNewSection', {\r\n            componentsPattern: componentsPatternBackground,\r\n            component: <BackgroundComponent\r\n                            {...componentsPatternBackground}\r\n                            key = {`bg${id}`}\r\n                            id = {id}\r\n                            targetSection = {`Section${id}`}\r\n                            width = '100%'\r\n                            height = '800px'\r\n                            type = 'background'\r\n                            mode = 'dev'\r\n                        />\r\n        });\r\n        event.stopPropagation();\r\n    }\r\n\r\n    render(){\r\n\r\n        if (this.state.mode === 'build'){\r\n            return (\r\n                <div className = 'ComponentsMenu'>\r\n                    <button \r\n                        onClick = {this.addImage} \r\n                        className = 'ImageTool CompoentnsMenu_button' \r\n                    >\r\n                        <span>Image</span>\r\n                    </button>\r\n                    <button \r\n                        onClick = {this.addText} \r\n                        className = 'TextTool CompoentnsMenu_button' >\r\n                        <span>Text</span>\r\n                    </button>\r\n                    <button\r\n                        onClick = {this.addInput}\r\n                        disabled = {this.props.editComponentName !== 'Header' ? false : true}\r\n                        className = 'ButtonTool CompoentnsMenu_button' >\r\n                        <span>Button</span>\r\n                    </button>\r\n                    <button onClick = {this.addMedia}\r\n                        className = 'VideoTool CompoentnsMenu_button'\r\n                    >\r\n                        <span>Video</span>\r\n                    </button>\r\n                </div>\r\n            )\r\n        } else if (this.state.mode === 'section') {\r\n            return (\r\n                <div className = 'sectionMode'>\r\n                    <button\r\n                        onClick = {this.addSection}\r\n                        className = 'newSectionTool CompoentnsMenu_button'\r\n                    >\r\n                        <span>New section</span>\r\n                    </button>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default BuildMenu;","import React,{Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Icon from '../Icon/icon';\r\nimport BuildMenu from '../componentsBuildMenu/BuildMenu';\r\n\r\n\r\nclass Controllers extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        countComponents: PropTypes.number.isRequired, /** @number last project id */\r\n        sizeParentBox: PropTypes.object, /** @Object with width and height parent(bg) */\r\n        eventStreamBuild: PropTypes.object, /** @Events stream */\r\n        menuActive: PropTypes.bool, /** @Bool value active menu or unactive */\r\n    }\r\n\r\n    state = {\r\n        viewComponentMenu: false,\r\n        editComponentName: this.props.editComponentName,\r\n        shiftX: 0,\r\n        shiftY: 0,\r\n        coordsX: '50%',\r\n        coordsY: '0',\r\n        shadowDisplay: 'block'\r\n    }\r\n\r\n    componentMenu = event => {\r\n        this.setState({viewComponentMenu: this.state.viewComponentMenu ? false : true});\r\n        event.stopPropagation();\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <Fragment>\r\n            {\r\n                <div\r\n                ref = {this.refControll}\r\n                className = 'ControllersEditComponent'\r\n                onClick = {this.componentMenu}\r\n                >\r\n                    <Icon\r\n                        onClick = {this.componentMenu}\r\n                        className = 'addButton'\r\n                        path = '/img/addButton.png'\r\n                    />\r\n                    { this.state.viewComponentMenu ?\r\n                        <BuildMenu\r\n                            key = {`buildMenu ${this.state.editComponentName}`}\r\n                            mode = 'build'\r\n                            eventStreamBuild = {this.props.eventStreamBuild}\r\n                            editComponentName = {this.state.editComponentName}\r\n                            sizeParentBox = {this.props.sizeParentBox}\r\n                            countComponents = {this.props.countComponents}\r\n                        /> : null\r\n                    }\r\n                </div>\r\n            }\r\n            </Fragment>\r\n        )\r\n    }\r\n\r\n    componentDidUpdate = () => {\r\n        if (this.props.editComponentName !== this.state.editComponentName)\r\n            this.setState({\r\n                ...this.state,\r\n                editComponentName: this.props.editComponentName\r\n            })\r\n    }\r\n\r\n}\r\n\r\nexport default Controllers;","import React,{Fragment} from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport {Redirect} from 'react-router-dom';\r\nimport eventEmitter from '../../EventEmitter';\r\nimport EventBuild from 'events';\r\nimport {loadCurrentProjectAction, exitProjectAction} from '../../redux/actions';\r\n\r\nimport {middlewareDeleteProjectComponent} from '../../redux/middleware/middlewareDelete';\r\nimport updateMiddleware from '../../redux/middleware/updateMiddleware';\r\nimport withFirebase from '../../components/firebaseHOC';\r\nimport {connect} from 'react-redux';\r\n\r\nimport AdditionalTools from '../../components/additionalTools/additionalTools';\r\nimport builderHOC from '../../components/builderHOC';\r\nimport Controllers from '../../components/controllers/controllers';\r\nimport Loader from '../../components/loading/Loader';\r\nimport Header from '../../components/header/Header';\r\nimport Section from '../../components/buildComponents/section';\r\nimport BuildMenu from '../../components/componentsBuildMenu/BuildMenu';\r\n\r\nimport './build.scss';\r\n\r\nimport Input from '../../components/buildComponents/components/Input';\r\nimport Media from '../../components/buildComponents/components/Media';\r\nimport Image from '../../components/buildComponents/components/Image';\r\nimport TextComponent from '../../components/buildComponents/components/Text';\r\nimport BackgroundComponent from '../../components/buildComponents/components/Background';\r\n\r\nclass Build extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        firebase: PropTypes.object.isRequired, /** @firebase class for use firebase functions */\r\n        active: PropTypes.bool, /** @active - status firebase auth */\r\n        dispatch: PropTypes.func.isRequired, /** @dispatch - redux */\r\n        history: PropTypes.object, /** @Router HTML5 history */\r\n        location: PropTypes.object, /** @Router */\r\n        match: PropTypes.object.isRequired, /** @Router */\r\n        userData: PropTypes.object.isRequired, /** @UserData data about projects,user and current edit prject */\r\n    }\r\n\r\n    state = {\r\n            idProject: parseInt(this.props.match.params.param),\r\n            editStart: false,\r\n            isChange: false,\r\n            isLoadComponents: true,\r\n            projectEmpty: false,\r\n            componentStats: {},\r\n            componentJSX: [],\r\n            instrumentPanel: {\r\n                colorPickerActive: false,\r\n                instrumentActive: false,\r\n            },\r\n            editComponentName:  null,\r\n            menuActive: false,\r\n            modalSearch: false,\r\n            modalSearchMode: null,\r\n            modalViewer: {action: false, image: null, mode: null },\r\n            sizeParentBox: null,\r\n        }\r\n\r\n        eventEmitterBuild = new EventBuild(); // events stream for controllers\r\n        timer = null; // save timer\r\n\r\n    modalSearchOn = itemEvent => {\r\n        const modeHave = itemEvent.hasOwnProperty('mode');\r\n        this.setState({\r\n            ...this.state, \r\n            modalSearch: !this.state.modalSearch,\r\n            modalSearchMode: modeHave ? itemEvent.mode : null\r\n        });\r\n    }\r\n\r\n    ViewerSwitch = itemEvent => {\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            modalViewer: {\r\n                ...this.state.modalViewer,\r\n                action: itemEvent.action,\r\n                target: itemEvent.target,\r\n                mode: itemEvent.mode,\r\n                iframe: itemEvent.iframe\r\n            }\r\n        });\r\n    };\r\n\r\n    workModeEdit = itemEvent => {\r\n\r\n        if (itemEvent.editStart)\r\n        this.setState({\r\n            ...this.state,\r\n            editStart: itemEvent.editStart,\r\n            editComponentName: itemEvent.targetSection,\r\n            menuActive: true,\r\n        });\r\n\r\n    }\r\n\r\n    openInstrument = itemEvent => {\r\n            const idEqual = this.state.componentStats.id === itemEvent.componentStats.id;\r\n            if (!idEqual || !this.state.instrumentPanel.instrumentActive)\r\n            this.setState({\r\n                ...this.state,\r\n                editComponentName: itemEvent.targetSection,\r\n                componentStats: {\r\n                    ...this.state.componentStats,\r\n                    ...itemEvent.componentStats\r\n                },\r\n                instrumentPanel: {\r\n                    ...this.state.instrumentPanel,\r\n                    instrumentActive: true,\r\n                }\r\n            });\r\n    }\r\n\r\n    closePanel = itemEvent => {\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            instrumentPanel: {\r\n                ...this.state.instrumentPanel,\r\n                colorPickerActive: false,\r\n                instrumentActive: itemEvent.close\r\n            }\r\n        });\r\n    };\r\n\r\n    deleteComponent = eventItem => {\r\n        let {currentProjectsData} = this.props.userData;\r\n        let {componentJSX} = this.state;\r\n\r\n        const data = {\r\n            id: this.state.idProject,\r\n            uid: this.props.userData.idUser,\r\n            idComponent: eventItem.id,\r\n            sectionsProject: [...currentProjectsData.sectionsProject],\r\n            type: eventItem.type\r\n        }\r\n\r\n        this.props.dispatch(middlewareDeleteProjectComponent(data))\r\n        .then(id => {\r\n            if (id !== null){\r\n               const _componentJSX = componentJSX.filter(item => item.id !== id);\r\n            this.setState({\r\n                ...this.state,\r\n                componentJSX: _componentJSX\r\n            });\r\n        }\r\n        });\r\n    }\r\n\r\n    addComponentsFromBD = array => {\r\n\r\n        let {componentJSX} = this.state;\r\n        let componentsFromDB = [];\r\n\r\n        array.forEach(item => {\r\n            if (item.type !== 'background'){\r\n\r\n                let props = {\r\n                    sizeParentBox: {\r\n                        width: this.mainComponent.data.width,\r\n                        height: this.mainComponent.data.height,\r\n                        top: this.mainComponent.data.top,\r\n                        left: this.mainComponent.data.left,\r\n                    },\r\n                    ...item,\r\n                    mode: 'dev',\r\n                }\r\n                let Component = null;\r\n                    if (item.type === 'background') Component = BackgroundComponent;\r\n                    else if (item.type === 'input') Component = Input;\r\n                    else if (item.type === 'media') Component = Media;\r\n                    else if (item.type === 'image') Component = Image;\r\n                    else if (item.type === 'text') Component = TextComponent;\r\n                const patternJSX = {\r\n                    id: item.id,\r\n                    targetSection: item.targetSection,\r\n                    component: builderHOC(props)(Component)\r\n                };\r\n                componentsFromDB.push(patternJSX);\r\n            }\r\n        });\r\n            this.setState({\r\n                ...this.state,\r\n                isLoadComponents: false,\r\n                componentJSX: [...componentJSX, ...componentsFromDB],\r\n            });\r\n    };\r\n\r\n    addComponent = itemEvent => {\r\n        let {componentJSX} = this.state;\r\n        let {componentsPattern} = itemEvent;\r\n\r\n        const patternJSX = {\r\n            id: componentsPattern.id,\r\n            targetSection: componentsPattern.targetSection,\r\n            component: itemEvent.component\r\n        };\r\n            this.setState({\r\n                ...this.state,\r\n                componentJSX: [...componentJSX, patternJSX],\r\n            });\r\n    };\r\n\r\n    saveChangesComponent = itemEvent => {\r\n\r\n        const {ms} = itemEvent;\r\n        if (this.timer) clearTimeout(this.timer);\r\n\r\n        this.timer = setTimeout(() => {\r\n            const {currentProjectsData} = this.props.userData;\r\n            const {userData} = this.props;\r\n            let findCurrentItem = false;\r\n            const _components = currentProjectsData.components.map(item => {\r\n                if (item.id === itemEvent.id) { findCurrentItem = true; return {...itemEvent}; }\r\n                return item;\r\n            });\r\n\r\n            if (!findCurrentItem) _components.push(itemEvent);\r\n\r\n            this.props.dispatch(updateMiddleware({\r\n                uid: userData.idUser,\r\n                projects: [...userData.projects],\r\n                components: _components,\r\n                sectionsProject: [...currentProjectsData.sectionsProject],\r\n                idProject: this.state.idProject\r\n            })).then(() =>\r\n                eventEmitter.emit('EventRedirectConfirm', {false: false, confirm: false}));\r\n        },ms);\r\n    };\r\n\r\n    mainComponent = null;\r\n    mainRefComponent = node => node ?\r\n        this.mainComponent = {data: node.getBoundingClientRect(), node: node} : node;\r\n\r\n    addNewSection = eventItem => {\r\n\r\n        const {userData} = this.props;\r\n        const {currentProjectsData} = userData;\r\n\r\n        this.props.dispatch(updateMiddleware({\r\n                uid: userData.idUser,\r\n                projects: [...userData.projects],\r\n                components: [...currentProjectsData.components,\r\n                            eventItem.componentsPattern],\r\n                sectionsProject: [\r\n                    ...currentProjectsData.sectionsProject,\r\n                    eventItem.componentsPattern.id\r\n                ],\r\n                idProject: this.state.idProject\r\n        })).then(() => {\r\n            this.setState({\r\n                ...this.state,\r\n                componentJSX:[\r\n                    ...this.state.componentJSX,\r\n                    eventItem.component\r\n                ]\r\n            }, () => {\r\n                eventEmitter.emit('EventSetState', currentProjectsData.sectionsProject.length);\r\n            });\r\n        });\r\n}\r\n\r\n    render(){\r\n\r\n        if (this.state.projectEmpty) return <Redirect to = '/Cabinet' />\r\n\r\n        const {instrumentActive} = this.state.instrumentPanel;\r\n        const {userData} = this.props;\r\n        const {currentProjectsData} = userData;\r\n        const section = currentProjectsData.sectionsProject;\r\n\r\n        if (userData.active && currentProjectsData.loadProject){\r\n            return (\r\n                <Fragment>\r\n                    <Header key = 'Header' title = \"Constructor\" idUser = {userData.idUser}  />\r\n                    <div\r\n                        ref = {this.mainRefComponent} \r\n                        onMouseMove = {this.showAddSection} \r\n                        className = 'Build' \r\n                        key = 'Build'\r\n                    >\r\n                        { this.state.editStart &&\r\n                        <Controllers\r\n                            key = 'controllers'\r\n                            eventStreamBuild = {this.eventEmitterBuild}\r\n                            editComponentName = {this.state.editComponentName}\r\n                            countComponents = {currentProjectsData.components.length}\r\n                            menuActive = {this.state.menuActive}\r\n                            sizeParentBox = {this.state.sizeParentBox}\r\n                        />\r\n                        }\r\n                            <BuildMenu\r\n                                key = 'buildMenu'\r\n                                eventStreamBuild = {this.eventEmitterBuild}\r\n                                countSection = {this.state.componentJSX.length * 5}\r\n                                mode = \"section\"\r\n                                className = 'menu'\r\n                            />\r\n                        {instrumentActive && \r\n                            <AdditionalTools key = 'tools'\r\n                                eventStreamBuild = {this.eventEmitterBuild}\r\n                                modalViewer = {this.state.modalViewer}\r\n                                componentStats = {this.state.componentStats}\r\n                                editComponentName = {this.state.editComponentName}\r\n                                instrumentPanel = {this.state.instrumentPanel}\r\n                                modalSearchMode = {this.state.modalSearchMode}\r\n                                modalSearch = {this.state.modalSearch}\r\n                                \r\n                            />}\r\n                        {section.length &&\r\n                             <Section mode = 'dev' key = 'section'\r\n                                    componentJSX = {this.state.componentJSX}\r\n                                    editComponentName = {this.state.editComponentName}\r\n                                    menuActive = {this.state.menuActive}\r\n                                    sizeParentBox = {this.state.sizeParentBox}\r\n                                    userData = {userData}\r\n                                />\r\n                        }\r\n                    </div>\r\n                </Fragment>\r\n            )\r\n        } else if (!this.props.firebase.getCurrentUser()) return <Redirect to = '/' />\r\n        else return <Loader  key = 'Loader' path = '/img/loading.gif' type = 'build' />\r\n    }\r\n\r\n    componentDidUpdate = (prevProps) => {\r\n\r\n        let {userData} = this.props;\r\n        let {currentProjectsData} = userData;\r\n        const isLoadComponents = this.state.isLoadComponents;\r\n        let sizeParentBox = null;\r\n\r\n        if (this.mainComponent && this.state.sizeParentBox === null)\r\n            sizeParentBox = {\r\n                width: this.mainComponent.data.width,\r\n                height: this.mainComponent.data.height,\r\n                top: this.mainComponent.data.top,\r\n                left: this.mainComponent.data.left,\r\n            }\r\n\r\n        if (userData.active && !currentProjectsData.loadProject) {\r\n            const current =  userData.projects.find(item => item.id === this.state.idProject)\r\n            if (current){\r\n                this.props.dispatch(loadCurrentProjectAction({\r\n                    id: current.id,\r\n                    typeProject: current.type,\r\n                    sectionsProject: [...current.sectionsProject],\r\n                    components: [...current.components]\r\n                }))\r\n\r\n            } else this.setState({...this.state, projectEmpty: true, sizeParentBox: sizeParentBox});\r\n        }\r\n        if (currentProjectsData.loadProject && isLoadComponents) {\r\n            if (this.state.sizeParentBox === null && sizeParentBox !== null)\r\n            this.setState({\r\n                ...this.state,\r\n                sizeParentBox: sizeParentBox\r\n            }, () => this.addComponentsFromBD([...currentProjectsData.components]));\r\n            else this.addComponentsFromBD([...currentProjectsData.components]);\r\n            eventEmitter.emit('EventSetState',currentProjectsData.sectionsProject.length-1);\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        let {userData} = this.props;\r\n        let {currentProjectsData} = userData;\r\n\r\n        if (userData.active && !currentProjectsData.loadProject) {\r\n\r\n            const current =  userData.projects.find(item => item.id === this.state.idProject)\r\n            this.props.dispatch(loadCurrentProjectAction({\r\n                id: current.id,\r\n                sectionsProject: [...current.sectionsProject],\r\n                typeProject: current.type,\r\n                components: [...current.components]\r\n            }));\r\n        };\r\n\r\n        eventEmitter.on('EventInstrumentPanel', this.openInstrument);\r\n        eventEmitter.on('EventModeEdit', this.workModeEdit);\r\n        this.eventEmitterBuild.on('EventBuildComponents', this.addComponent);\r\n        this.eventEmitterBuild.on('EventDeleteComponent', this.deleteComponent);\r\n        this.eventEmitterBuild.on('EventNewSection', this.addNewSection);\r\n        this.eventEmitterBuild.on('EventSaveChangesComponent', this.saveChangesComponent);\r\n        this.eventEmitterBuild.on('EventClosePanel', this.closePanel);\r\n        this.eventEmitterBuild.on('EventModalSearchOn', this.modalSearchOn);\r\n        this.eventEmitterBuild.on('EventView', this.ViewerSwitch);\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n\r\n        let {userData} = this.props;\r\n        if (userData.active)  this.props.dispatch(exitProjectAction(true));\r\n\r\n        eventEmitter.off('EventInstrumentPanel', this.openInstrument);\r\n        eventEmitter.off('EventModeEdit', this.workModeEdit);\r\n        this.eventEmitterBuild.off('EventBuildComponents', this.addComponent);\r\n        this.eventEmitterBuild.off('EventDeleteComponent', this.deleteComponent);\r\n        this.eventEmitterBuild.off('EventNewSection', this.addNewSection);\r\n        this.eventEmitterBuild.off('EventSaveChangesComponent', this.saveChangesComponent);\r\n        this.eventEmitterBuild.off('EventModalSearchOn', this.modalSearchOn);\r\n        this.eventEmitterBuild.off('EventClosePanel', this.closePanel);\r\n        this.eventEmitterBuild.off('EventView', this.ViewerSwitch);\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        userData: {\r\n            active: state.cabinet.active,\r\n            idUser: state.cabinet.idUser,\r\n            projects: [...state.cabinet.projects],\r\n           currentProjectsData: {...state.builder}\r\n        },\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(withFirebase(Build));\r\n","import React from 'react';\r\nimport eventEmitter from '../../EventEmitter';\r\n\r\nimport {animateScroll as scroll, scroller } from \"react-scroll\";\r\n\r\nclass ScrollMove extends React.PureComponent {\r\n\r\n    state = {\r\n        mode: 'default',\r\n        scrollConfig: {\r\n            duration: 1000,\r\n            delay: 50,\r\n            smooth: true,\r\n            offset: -60, // Scrolls to element -80 pixels down the page\r\n        },\r\n        position: 0,\r\n        positionCount: null\r\n\r\n    }\r\n\r\n    setStates = event => {\r\n        this.setState({...this.state,positionCount: event});\r\n    }\r\n\r\n    blockMove = event => {\r\n        this.setState({...this.state, mode: event})\r\n    }\r\n\r\n    moveLocation = event => {\r\n\r\n        if (this.state.mode === 'default'){\r\n            const count = this.state.positionCount;\r\n            const moveDown = this.state.position < count && event.deltaY > 0;\r\n            const moveUp = event.deltaY < 0 && this.state.position > 0;\r\n            eventEmitter.emit('EventClosePanel',{close: false});\r\n\r\n            if (moveDown)\r\n                this.setState({ position: this.state.position + 1},\r\n                    () => scroller.scrollTo(`element${this.state.position}`,this.state.scrollConfig));\r\n                else if (moveUp){\r\n                    this.state.position === 1 &&\r\n                        this.setState({position: this.state.position - 1}, () => scroll.scrollToTop());\r\n                    this.state.position !== 1 &&\r\n                        this.setState({position: this.state.position - 1},\r\n                            () => scroller.scrollTo(`element${this.state.position}`,this.state.scrollConfig));\r\n                }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    render(){\r\n        return (\r\n            <div key = 'moveScroll' onWheel = {this.moveLocation} onTouchStart = {() => false}\r\n            >\r\n                {this.props.children}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        eventEmitter.on('EventBlockScroll', this.blockMove);\r\n        eventEmitter.on('EventSetState', this.setStates);\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        eventEmitter.off('EventBlockScroll', this.blockMove);\r\n        eventEmitter.off('EventSetState', this.setStates);\r\n    }\r\n}\r\n\r\nexport default ScrollMove;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport {Route, Switch} from 'react-router-dom';\r\n\r\nimport {middlewareLoadUserData} from './redux/middleware/loadUserMiddleware';\r\nimport {connect} from 'react-redux';\r\nimport withFirebase from './components/firebaseHOC';\r\nimport Loader from './components/loading/Loader';\r\n\r\nimport Index from './Pages/Index/Index';\r\nimport Cabinet from './Pages/Cabinet/Cabinet';\r\nimport Production from './Pages/Production/Production';\r\nimport About from './Pages/About/About';\r\nimport Build from './Pages/Build/Build';\r\nimport ErrorPage from './components/ErrorCatch/ErrorPage';\r\nimport ScrollMove from './components/scroll/ScrollMove';\r\n\r\nclass App extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        config: PropTypes.object.isRequired, /** @Config app */\r\n        firebase: PropTypes.object.isRequired, /** @firebase class for use firebase functions */\r\n        dispatch: PropTypes.func.isRequired, /** @dispatch - redux */\r\n    }\r\n\r\n    state = {\r\n        firebase: this.props.firebase,\r\n        firebaseLoadState: false,\r\n    }\r\n\r\n    componentDidMount(){\r\n\r\n        this.props.firebase.auth.onAuthStateChanged((user) => {\r\n\r\n            if (!this.state.firebaseLoadState){\r\n                if (user) this.props.dispatch(middlewareLoadUserData(user.uid));\r\n                this.setState({...this.state, firebaseLoadState: true});\r\n            }\r\n        });\r\n    }\r\n\r\n    render(){\r\n        if (this.state.firebaseLoadState){\r\n            return (\r\n                <Switch>\r\n                    <Route\r\n                        path = {'/'} exact\r\n                        render = {(props) => <Index {...props} />}\r\n                    />\r\n                    <Route path = '/Cabinet/' exact component = {Cabinet}/>\r\n                    <Route\r\n                        path = {'/Cabinet/About'}\r\n                        render = {(props) => <About {...props} config = {this.props.config} />}\r\n                    />\r\n                    <Route path = {'/Cabinet/Build/:param'} exact \r\n                        render = {(props) => <ScrollMove><Build {...props}></Build></ScrollMove>}\r\n                    />\r\n                    <Route path = {'/Cabinet/Build/:param/Production'} exact component = {Production} />\r\n                    <Route path = {'*'} component = {Index} />\r\n                    <Route path = {'/crashPage'} component = {ErrorPage} />\r\n                </Switch>\r\n            )\r\n        } else return <Loader path = { '/img/loading.gif'} type = 'application' />\r\n    }\r\n}\r\n\r\nexport default connect()(withFirebase(App));","\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\n\nimport firebase from './Firebase/Firebase';\nimport ErrorBoundary from './components/ErrorCatch/ErrorBoundary';\nimport {HashRouter } from 'react-router-dom';\nimport {Provider} from 'react-redux';\nimport store from './redux/store';\nimport App from './App.jsx';\nimport 'normalize.css';\n\nimport firebaseContext from './Firebase/firebaseContext';\n\nfirebase.saveSession('SESSION');\nconst config = require('./config.json');\nconsole.time();\nReactDOM.render(\n        <HashRouter>\n            <ErrorBoundary>\n                <firebaseContext.Provider value = {firebase}>\n                    <Provider store = {store}>\n                        <App config = {config} />\n                    </Provider>\n                </firebaseContext.Provider>\n            </ErrorBoundary>\n        </HashRouter>,\n        document.getElementById('root')\n);\n\n\nserviceWorker.register();\n\n"],"sourceRoot":""}