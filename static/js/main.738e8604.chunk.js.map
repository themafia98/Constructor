{"version":3,"sources":["serviceWorker.js","Firebase/firebaseConfig.js","Firebase/Firebase.js","EventEmitter.js","components/ErrorCatch/ErrorPage.jsx","components/ErrorCatch/ErrorBoundary.jsx","redux/actions.js","redux/reducerBuilder.js","redux/reducerCabinet.js","redux/reducers.js","redux/store.js","redux/middleware/loadUserMiddleware.js","Firebase/firebaseContext.js","components/withFirebase.jsx","components/loading/Loader.jsx","components/AnimationText/AnimationTitle.jsx","components/Registration/Registration.jsx","components/Icon/icon.jsx","Pages/Index/Index.jsx","redux/middleware/middlewareDelete.js","components/confirmBox/Confirm.jsx","components/header/Header.jsx","components/imageViewer/imageItem.jsx","components/modalWindow/createProject/createProject.jsx","components/modalWindow/Search/searchModal.jsx","components/modalWindow/ModalWindow.jsx","redux/middleware/createProjectMiddleware.js","components/List/Item.jsx","components/List/List.jsx","components/ProjectsSection/ProjectsSection.jsx","Pages/Cabinet/Cabinet.jsx","components/buildComponents/components/Background.jsx","components/buildComponents/MainBackground/MainBackground.jsx","components/buildComponents/section.jsx","components/buildComponents/components/Input.jsx","components/buildComponents/components/Media.jsx","components/buildComponents/components/Image.jsx","components/buildComponents/components/Text.jsx","components/builderHOC.jsx","Pages/Production/Production.jsx","Pages/About/About.jsx","redux/middleware/updateMiddleware.js","components/withScroll.jsx","components/imageViewer/Viewer.jsx","components/instrumentsPanel/InputTools/InputInstruments.jsx","components/instrumentsPanel/MediaTools/MediaInstruments.jsx","components/instrumentsPanel/ImageTools/ImageInstruments.jsx","components/instrumentsPanel/BackgroundTools/BackgroundInstruments.jsx","components/instrumentsPanel/TextTools/TextInstruments.jsx","components/instrumentsPanel/InstrumentsPanel.jsx","components/additionalTools/additionalTools.jsx","components/componentsBuildMenu/BuildMenu.jsx","components/controllers/controllers.jsx","Pages/Build/Build.jsx","components/SwitchContainer/Guides/OpenPanel.jsx","components/SwitchContainer/Guides/SearchGuide.jsx","components/SwitchContainer/Guides/AddComponents.jsx","components/SwitchContainer/Guides/AddNewSection.jsx","components/SwitchContainer/Guides/CreateNewProject.jsx","components/SwitchContainer/SwitchContainer.jsx","Pages/Guide/Guide.jsx","App.jsx","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","firebaseConfig","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firebaseInterface","require","Firebase","Object","classCallCheck","this","firebase","initializeApp","auth","db","firestore","lowConnection","enablePersistence","rules","setPersistence","Auth","Persistence","email","password","signInWithEmailAndPassword","createUserWithEmailAndPassword","signOut","currentUser","saveSession","session","stream","EventEmitter","controllerStream","ErrorPage","redirect","update","event","_this","setState","eventEmitter","emit","react_default","a","createElement","react_router","to","class","className","onClick","React","Component","ErrorBoundary","hasError","updateApplication","componentDidMount","on","componentWillUnmount","off","info","ErrorCatch_ErrorPage","props","children","PureComponent","exitProjectAction","type","exit","loadCurrentProjectAction","id","typeProject","sectionsProject","components","loadUpdateCurrentProject","idProject","toConsumableArray","loadUserAction","active","idUser","uid","projects","errorAction","initialState","loadProject","combineReducers","builder","arguments","length","undefined","action","_objectSpread","cabinet","reducerCabinet_objectSpread","map","item","middleware","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","thunk","withExtraArgument","store","createStore","middlewareLogin","_ref2","asyncToGenerator","regenerator_default","mark","_callee","dispatch","getState","_ref","isLogin","wrap","_context","prev","next","login","response","collection","doc","user","get","docUser","data","message","abrupt","stop","_x","_x2","_x3","apply","middlewareLogOutUser","_ref6","_callee3","_ref5","_context3","_x7","_x8","_x9","firebaseContext","createContext","withFirebase","Firebase_firebaseContext","Consumer","assign","loading_Loader","_useState","useState","path","slicedToArray","_useState3","mode","concat","src","alt","AnimationTitle","styled","h3","_templateObject","dir","AnimationText","tilteContent","content","split","currentTitle","positionTitle","directionAnimation","msAnimation","msTimeout","msPauseEnd","_isMounted","timerAnimation","animationTitle","timer","self","assertThisInitialized","setTimeout","tick","counter","word","AnimationTitle_objectSpread","_title","slice","e","clearTimeout","data-titlebuild","emailRef","passwordRef","setRefEmail","node","setRefPassword","createUser","value","Error","set","indexStream","autoComplete","placeholder","ref","Icon","_useState5","draggable","title","Index","Events","tryAuth","registrationActive","regStatus","wrongEnter","emailImput","passwordImput","statusRegistration","additionalUserInfo","isNewUser","Index_objectSpread","showBox","stopPropagation","authTo","componentDidUpdate","history","push","AnimationText_AnimationTitle","Icon_icon","TransitionGroup","component","CSSTransition","timeout","unmountOnExit","classNames","components_Registration_Registration","connect","middlewareDeleteProjectComponent","_ref4","_callee2","_ref3","_context2","findProject","find","project","filter","idComponent","section","dataUpdate","_x4","_x5","_x6","middlewareDelete","itemdb","Confirm","cbSaveChanges","cbCancelSave","iconPath","CabinetIcon","Header","isChange","redirectConfirm","redirectAbout","redirectA","redirectCabinet","redirectC","redirectGuide","redirectG","confirm","false","confirmSaveDetectChanges","Header_objectSpread","logOut","pathname","add","cabinetStream","componentDidlMount","_this2","Fragment","components_confirmBox_Confirm","index_es","icon","faBook","withRouter","ImageItem","selected","urls","regular","urlRegular","full","urlFull","_useState7","isFull","_useState9","urlContent","url","iframe","CreateProject","disabled","validateName","name","validateType","nameLength","isNumber","warningLengthMin","warningLengthMax","warningNumber","onChange","cbValidateName","warningType","cbSelectOption","cbAddNewProject","cbCancel","loading","SearchModal","modalSearchMode","items","images","search","refSearch","cbSearch","refSearchFunc","prevProps","prevState","contentPrev","haveUpdate","isSelected","selectedItem","_items","cbMakeImageResultBox","searchModal_objectSpread","dissabled","menuActive","cbShowImage","cbSetSelectedImage","ModalWindow","workMode","buttonSearchDisabled","showUrl","imageBoxView","newProject","imageMenuActive","warning","lengthMax","lengthMin","inputSearch","inputSelect","searchData","target","ModalWindow_objectSpread","api","isFetch","ok","json","results","searchYouTubeAPI","RAITE","KEY","res","status","arrayItems","forEach","snippet","thumbnails","high","videoId","showMenuImage","showImage","_this$state$images","eventStreamBuild","setSelectedImage","makeImageResultBox","i","imageItem","key","addNewProject","selectOption","inputs","defineProperty","test","cancel","refSelect","createProject","searchModal","loader","react","middlewareCreateProject","list","lastProject","lastIndex","header","backgroundImage","backgroundColor","min","Math","floor","random","targetSection","productionPath","_useState6","canBuild","setCanBuild","_useState8","canProd","setCanProd","_useState11","_useState13","data-id","List","List_objectSpread","makeList","List_Item","ProjectsSection","components_List_List","Cabinet","modalActive","deletItem","Cabinet_objectSpread","getCurrentUser","changeWorkMode","header_Header","in","appear","modalWindow_ModalWindow","components_ProjectsSection_ProjectsSection","Background","div","Background_templateObject","width","height","BackgroundComponent","background","color","boxComponent","boxComponentRef","saveDataParent","boxInform","getBoundingClientRect","countSection","sectionNumber","size","openBgInstruments","componentsPatternBackground","componentStats","changeColor","eventItem","Background_objectSpread","colorRGB","setBackgroundImage","onDoubleClick","data-name","MainBackground","editRedy","changeMode","editStart","editComponentName","MainBackground_objectSpread","refSection","refSectionFunc","currentProjectsData","componentJSX","needUpdate","countComponents","data-class","components_Background","Section","userData","buildComponents_MainBackground_MainBackground","sizeParentBox","componentsProdJSX","InputComponent","input","attrs","style","zIndex","indexZ","left","coordX","top","coordY","Input_templateObject","w","h","fontSize","borderRadius","ProductionStyle","_templateObject2","Input","istrumentsActive","getSizeBool","typeInput","shiftCoords","posInput","coords","x","y","startDragNdrop","openInputInstruments","componentsPatternImage","Input_objectSpread","sizeTextValue","saveCoords","nativeEvent","which","element","refInput","cords","right","bottom","clientX","clientY","changeSize","eventSize","changeSizeText","setBorderRadius","radius","borderDown","changeContent","checkPivotPosition","borderRight","move","moveInput","num","xItem","yItem","convertToPercentX","convertToPercentY","toFixed","stopDragNdrop","saveSize","setWidth","setType","setHeight","refInputComponent","onMouseDown","onMouseMove","onMouseLeave","onMouseUp","onDragStart","data-imagecomponentwrapper","WrapperMedia","display","justifyContent","alignItems","padding","Media_templateObject","Media","Media_templateObject2","_templateObject3","MediaComponent","posMedia","drawContent","openMediaInstruments","componentsPatternMedia","Media_objectSpread","refMedia","moveMedia","setContent","refMediaComponent","allowfullscreen","Media_ProductionStyle","WrapperImg","transform","rotate","scale","transition","Image_templateObject","ImageStyle","img","Image_templateObject2","opacity","Image_templateObject3","Image","transformValue","scaleValue","image","posImage","openImageInstruments","Image_objectSpread","refImage","rotateEvent","angle","scaleEvent","moveText","factorCoord","diffAngle","parseInt","xFacotr","yFactor","powHeight","pow","powWidth","pythagoras","sqrt","_angle","atan","_biasFactor","biasFactor","PI","sinX","sin","sinY","setCurrentImage","setOpacity","stopDrag","preventDefault","refImageComponent","data-imagecomponent","Image_ProductionStyle","crossOrigin","WrapperText","Text_templateObject","textColor","TextStyle","p","Text_templateObject2","font","Text_templateObject3","TextComponent","resizeStream","isHaveSize","parent","colorText","sizeText","position","contentText","openTitleInstruments","componentsPatternText","Text_objectSpread","changeColorText","changeContentText","eventContent","refText","resizeStart","classList","setFont","sectionNum","refTextComponent","data-textcomponent","Text_ProductionStyle","builderHOC","Production","params","param","projectEmpty","isLoadComponents","makeProduction","array","_components","itemHash","Production_objectSpread","patternJSX","prodRef","mainProductionRef","current","buildComponents_section","About","about","developer","year","updateMiddleware","newProjects","JSON","parse","stringify","withScroll","_React$PureComponent","ScrollMove","_getPrototypeOf2","_len","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","scrollConfig","duration","delay","smooth","offset","positionCount","setStates","withScroll_objectSpread","blockMove","moveLocation","count","moveDown","deltaY","moveUp","close","scroller","scrollTo","scroll","scrollToTop","inherits","createClass","onWheel","onTouchStart","Viewer","frameBorder","allow","allowFullScreen","InputInstruments","colorPickerActive","instrumentPanel","_content","cbSetColor","lib","onChangeComplete","cbHandleChangeComplete","cbSetWidth","max","cbSetHeight","cbSetSize","cbSetBorderRadius","cbSetType","cbSetContent","maxLength","cbDelete","MediaInstruments","ImageInstruments","fileRef","createRef","cbRotate","cbScale","step","cbSetOpacity","cbLoadFile","accept","BackgroundInstruments","TextInstruments","cbSetFont","InstrumentsPanel","InstrumentsPanel_objectSpread","closePanel","setSize","fontName","setIframeContent","contentValue","updatePosition","setColor","updateBimageStats","handleChangeComplete","rgb","r","g","b","redirectSaveChanges","ms","saveChanges","deleteComponent","loadFile","files","reader","FileReader","readAsDataURL","onload","result","onerror","makePanelInstruments","TextTools_TextInstruments","BackgroundTools_BackgroundInstruments","ImageTools_ImageInstruments","MediaTools_MediaInstruments","InputTools_InputInstruments","oldProps","oldState","instrumentActive","AdditionalTools","modal","modalSearch","modalViewer","modalSearchOn","itemEvent","additionalTools_objectSpread","ViewerSwitch","openInstrument","imageViewer_Viewer","instrumentsPanel_InstrumentsPanel","BuildMenu","BuildMenu_objectSpread","addText","componentsPattern","Text","addBackground","addImage","components_Image","addMedia","components_Media","addInput","componentsPatternInput","components_Input","inputType","addSection","Controllers","viewComponentMenu","shiftX","shiftY","coordsX","coordsY","shadowDisplay","componentMenu","controllers_objectSpread","refControll","componentsBuildMenu_BuildMenu","Build","eventEmitterBuild","EventBuild","workModeEdit","Build_objectSpread","_componentJSX","addComponentsFromBD","componentsFromDB","addComponent","saveChangesComponent","findCurrentItem","mainComponent","mainRefComponent","addNewSection","dist_default","ie","only","except","showAddSection","controllers_controllers","additionalTools","OpenPanel","SearchGuide","AddComponents","AddNewSection","CreateNewProject","SwitchContainer","refOP","SwitchContainer_objectSpread","refSE","refADD","refSN","refPR","refOpenPanel","refAdd","refProject","Guides_OpenPanel","Guides_SearchGuide","Guides_AddComponents","Guides_AddNewSection","Guides_CreateNewProject","Guide","components_SwitchContainer_SwitchContainer","App","firebaseLoadState","onAuthStateChanged","isError","App_objectSpread","_this3","exact","render","Pages_Index_Index","Pages_Cabinet_Cabinet","Pages_About_About","Pages_Guide_Guide","Pages_Build_Build","ReactDOM","react_router_dom","ErrorCatch_ErrorBoundary","Provider","es","src_App","document","getElementById","URL","href","origin","addEventListener","fetch","contentType","headers","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.738e8604.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","// setings in root folder .env\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n    databaseURL: process.env.REACT_APP_DATABASE_URL,\r\n    projectId: process.env.REACT_APP_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n    appId: process.env.REACT_APP_APPID\r\n};\r\n\r\nexport default firebaseConfig;","import firebase from 'firebase/app';\r\nimport firebaseConfig from './firebaseConfig';\r\nimport config from '../config.json';\r\nconst auth = require('firebase/auth');\r\nconst firestore = require('firebase/firestore');\r\n\r\nclass Firebase {\r\n\r\n    constructor(firebaseConfig){\r\n        /** Init firebase */\r\n\r\n        firebase.initializeApp(firebaseConfig);\r\n        this.auth = firebase.auth();\r\n        this.db = firebase.firestore();\r\n\r\n        if (config.firebase.lowConnection === 'true' \r\n        && (process.env.NODE_ENV === 'development' || process.env.NODE_ENV === 'production'))\r\n        this.db.enablePersistence() /** if user use low internet connection */\r\n    }\r\n\r\n    saveSession(rules){\r\n        /** Set forebase type session */\r\n        return this.auth.setPersistence(firebase.auth.Auth.Persistence[rules]);\r\n    }\r\n\r\n    login(email, password){\r\n        /** login firebase */\r\n        try {\r\n            return this.auth.signInWithEmailAndPassword(email, password);\r\n        } catch (error) {\r\n            console.error(error);\r\n            return null;\r\n        }\r\n    }\r\n\r\n    registration(email, password){\r\n        /** create new user */\r\n        return this.auth.createUserWithEmailAndPassword(email, password)\r\n    }\r\n\r\n    signOut(){\r\n        /** destroy session */\r\n        return this.auth.signOut()\r\n    }\r\n\r\n    getCurrentUser() {\r\n        /** get current user */\r\n            return this.auth.currentUser;\r\n    }\r\n}\r\nlet firebaseInterface = new Firebase(firebaseConfig);\r\n\r\nif (process.env.NODE_ENV === 'development' || process.env.NODE_ENV === 'production')\r\nfirebaseInterface.saveSession(config.firebase.session);\r\n\r\nexport default firebaseInterface;\r\nexport { auth, firestore };\r\n\r\n","import {EventEmitter} from 'events';\r\n\r\nconst stream = new EventEmitter(); /** @Events head event stream */\r\nconst controllerStream = new EventEmitter(); /** @Events for controllers */\r\n\r\nexport {controllerStream};\r\nexport default stream;\r\n","import React from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\nimport eventEmitter from '../../EventEmitter';\r\n\r\nimport './errorPage.scss';\r\n\r\n\r\nclass ErrorPage extends React.Component {\r\n\r\n    state = {\r\n        redirect: false,\r\n    }\r\n\r\n    update = event => {\r\n       this.setState({redirect: true},\r\n        () => eventEmitter.emit('EventErrorCatchUpdate'));\r\n    }\r\n\r\n    render(){\r\n        if (this.state.redirect) return <Redirect to = '/' />\r\n        return (\r\n        <div class = 'container'>\r\n            <div class = 'flex-column ErrorPage'>\r\n                <h1>Application crash</h1>\r\n                <button className = 'ErrorPage__button_updateApp' onClick = {this.update}>Update</button>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ErrorPage;","\r\nimport React from 'react';\r\nimport eventEmitter from '../../EventEmitter';\r\nimport ErrorPage from './ErrorPage';\r\n\r\nclass ErrorBoundary extends React.PureComponent {\r\n\r\n      state = { \r\n        hasError: false,\r\n      };\r\n\r\n    static getDerivedStateFromError(error) {\r\n        console.log(error);\r\n      // Обновить состояние с тем, чтобы следующий рендер показал запасной UI.\r\n      return { hasError: true};\r\n    }\r\n\r\n    updateApplication = event => {\r\n      this.setState({hasError: false});\r\n    };\r\n  \r\n    componentDidCatch(error, info) {\r\n      // Можно также сохранить информацию об ошибке в соответствующую службу журнала ошибок\r\n     console.error(error + \",\" + info);\r\n    }\r\n  \r\n    render() {\r\n      if (this.state.hasError) return <ErrorPage />\r\n      return this.props.children;\r\n    }\r\n\r\n    componentDidMount = () => {\r\n      eventEmitter.on('EventErrorCatchUpdate',this.updateApplication);\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n      eventEmitter.off('EventErrorCatchUpdate',this.updateApplication);\r\n    }\r\n  }\r\n\r\n  export default ErrorBoundary;","const CREATE_PROJECT = 'CREATE_PROJECT';\r\nconst LOAD_UPDATE_PROJECT = \"LOAD_UPDATE_PROJECT\";\r\nconst LOAD_CURRENT = 'LOAD_CURRENT';\r\nconst LOG_OUT_CABINET = 'LOG_OUT_CABINET';\r\nconst LOAD_USER_CABINET = 'LOAD_USER_CABINET';\r\nconst ERROR_CABINET = 'ERROR_CABINET';\r\nconst EXIT_PROJECT = 'EXIT_PROJECT';\r\n\r\nconst createProjectAction = (state) => {\r\n    /** action for create project */\r\n    return {\r\n        type: CREATE_PROJECT,\r\n        projects: state,\r\n    }\r\n}\r\n\r\nconst exitProjectAction = (state) => {\r\n       /** action for exit from editable or prod project */\r\n    return {\r\n        type: EXIT_PROJECT,\r\n        exit: state\r\n    }\r\n}\r\n\r\nconst loadCurrentProjectAction = (state) => {\r\n    /** action for load current editable or prod project */\r\n    return {\r\n        type: LOAD_CURRENT,\r\n        id: state.id,\r\n        typeProject: state.typeProject,\r\n        sectionsProject: state.sectionsProject,\r\n        components: state.components\r\n    }\r\n}\r\n\r\nconst loadUpdateCurrentProject = (state) => {\r\n    /** action for update editable project */\r\n    return {\r\n        type: LOAD_UPDATE_PROJECT,\r\n        idProject: state.idProject,\r\n        sectionsProject: [...state.sectionsProject],\r\n        components: [...state.components]\r\n    }\r\n}\r\n\r\nconst loadUserAction = (state) => {\r\n    /** action for load user data */\r\n    return {\r\n        type: LOAD_USER_CABINET,\r\n        active: true,\r\n        idUser: state.uid,\r\n        error: '',\r\n        projects: state.projects\r\n    }\r\n}\r\n\r\nconst logOutAction = (state) => {\r\n    /** action for clear session */\r\n    return {\r\n        type: LOG_OUT_CABINET,\r\n        active: false,\r\n        idUser: null,\r\n        error: '',\r\n        projects: []\r\n    }\r\n}\r\n\r\nconst errorAction = (state) => {\r\n    /** action catch errors */\r\n    return {\r\n        type: ERROR_CABINET,\r\n        error: state\r\n    }\r\n}\r\n\r\nexport {\r\n    CREATE_PROJECT, createProjectAction, /* cabinet */\r\n    LOAD_USER_CABINET, loadUserAction, /* cabinet */\r\n    LOG_OUT_CABINET, logOutAction, /* cabinet */\r\n    LOAD_CURRENT, loadCurrentProjectAction, /* builder */\r\n    LOAD_UPDATE_PROJECT, loadUpdateCurrentProject,\r\n    EXIT_PROJECT, exitProjectAction,\r\n    ERROR_CABINET, errorAction, /* both */\r\n}","import {LOAD_CURRENT,LOAD_UPDATE_PROJECT, EXIT_PROJECT} from './actions';\r\n\r\nconst initialState = { /** @Builder reducer for build mode */\r\n    loadProject: false,\r\n    idProject: null,\r\n    typeProject: null,\r\n    components: [],\r\n    sectionsProject: [],\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n    switch (action.type){\r\n\r\n        case LOAD_CURRENT: {\r\n            /** load data */\r\n            return {\r\n                ...state,\r\n                loadProject: true,\r\n                idProject: action.id,\r\n                typeProject: action.typeProject,\r\n                components: [...action.components],\r\n                sectionsProject: [...action.sectionsProject]\r\n            }\r\n        }\r\n\r\n        case LOAD_UPDATE_PROJECT: {\r\n             /** load update for project */\r\n            return {\r\n                ...state,\r\n                components: [...action.components],\r\n                sectionsProject: [...action.sectionsProject]\r\n            }\r\n        }\r\n\r\n        case EXIT_PROJECT: {\r\n             /** if user exit from edit mode */\r\n            if (action.exit)\r\n            return {\r\n                ...state,\r\n                loadProject: false,\r\n                idProject: null,\r\n                typeProject: null,\r\n                components: [],\r\n                sectionsProject: []\r\n            }\r\n            else return state;\r\n        }\r\n        default: return state;\r\n    }\r\n};","import {    LOAD_USER_CABINET, LOG_OUT_CABINET,\r\n            ERROR_CABINET, CREATE_PROJECT,\r\n            LOAD_UPDATE_PROJECT\r\n        } from './actions';\r\n\r\nconst initialState = { /** Cabinet reducer (root) */\r\n    active: false,\r\n    idUser: null,\r\n    projects: [],\r\n    error: null,\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case LOAD_USER_CABINET: {\r\n            /** load user data if user auth - true */\r\n            return {\r\n                ...state,\r\n                active: action.active,\r\n                idUser: action.idUser,\r\n                projects: [...action.projects]\r\n            }\r\n        }\r\n\r\n        case CREATE_PROJECT: {\r\n             /** create new project */\r\n            return {\r\n                ...state,\r\n                projects: [...action.projects]\r\n            }\r\n        }\r\n\r\n        case LOAD_UPDATE_PROJECT: {\r\n              /** update project in cabinet */\r\n            return {\r\n                ...state,\r\n                projects: state.projects.map(item => {\r\n                    if (item.id === action.idProject){\r\n                        item.components = [...action.components]\r\n                        item.sectionsProject = [...action.sectionsProject]\r\n                    }\r\n                return item;\r\n                })\r\n            }\r\n        }\r\n\r\n        case LOG_OUT_CABINET: {\r\n            /** clear session */\r\n            return {\r\n                ...state,\r\n                active: false,\r\n                idUser: null,\r\n                projects: []\r\n            }\r\n        }\r\n\r\n        case ERROR_CABINET: {\r\n            /** catch error in cabinet */\r\n            return {\r\n                ...state,\r\n                error: action.error\r\n            }\r\n        }\r\n        default: return state;\r\n    }\r\n}\r\n\r\n","import {combineReducers} from 'redux';\r\nimport reducerBuilder from './reducerBuilder';\r\nimport reducerCabinet from './reducerCabinet';\r\n\r\nexport default combineReducers({\r\n    builder: reducerBuilder,\r\n    cabinet: reducerCabinet,\r\n});","import {createStore, applyMiddleware, compose} from 'redux';\r\nimport firebase from  '../Firebase/Firebase';\r\nimport thunk from 'redux-thunk';\r\nimport combineReducers from './reducers';\r\n\r\n/** For devtools */\r\nconst composeEnhancers =\r\n  typeof window === 'object' &&\r\n  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?\r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\r\n    }) : compose;\r\n\r\nconst middleware = composeEnhancers( /** @Include moddleware */\r\n  applyMiddleware(thunk.withExtraArgument({firebase})));\r\n\r\nconst store = createStore(combineReducers, middleware);\r\nexport default store;","import {loadUserAction, errorAction, logOutAction} from '../actions';\r\n\r\nconst middlewareLogin = (email,password) => async (dispatch,getState, {firebase}) => {\r\n    /** Auth */\r\n    let isLogin = true;\r\n        await firebase.login(email,password)\r\n        .then(response =>{\r\n            firebase.db.collection(\"users\").doc(response.user.uid).get()\r\n            .then(docUser => {\r\n                let user = docUser.data();\r\n                /** Load user if auth - true */\r\n                dispatch(loadUserAction({uid: docUser.id, projects: [...user.projects]}))\r\n            })\r\n        })\r\n        .catch((error) => {\r\n            console.error(error.message);\r\n            dispatch(errorAction(error.message));\r\n        });\r\n        return isLogin;\r\n    }\r\n\r\nconst middlewareLoadUserData = (uid) => async (dispatch,getState, {firebase}) => {\r\n    /** Load user data */\r\n        let isError = null;\r\n        await firebase.db.collection(\"users\").doc(uid).get()\r\n        .then(docUser => {\r\n            let user = docUser.data();\r\n            /** load if user data found */\r\n            dispatch(loadUserAction({uid: uid, projects: [...user.projects]}))\r\n        })\r\n        .catch((error) => {\r\n            console.error(error.message);\r\n            dispatch(errorAction(error.message));\r\n            isError = true;\r\n        });\r\n\r\n        if (!isError) return true;\r\n        else return false;\r\n    }\r\n\r\nconst middlewareLogOutUser = (uid) => async (dispatch,getState, {firebase}) => {\r\n    /** disconnect from session */\r\n    await firebase.signOut()\r\n    .then (response => {\r\n        dispatch(logOutAction());\r\n    })\r\n    .catch((error) => {\r\n        console.error(error.message);\r\n        dispatch(errorAction(error.message));\r\n    });\r\n}\r\nexport {\r\n    middlewareLogin,middlewareLoadUserData, middlewareLogOutUser\r\n}","import React from 'react';\r\nimport firebase from './Firebase';\r\n/** @ContextAPI for firebase */\r\nconst firebaseContext = React.createContext(firebase);\r\nexport default firebaseContext;","import React from 'react';\r\nimport firebaseContext from '../Firebase/firebaseContext';\r\n\r\n\r\nconst withFirebase = Component => props => {\r\n\r\n    if (process.env.NODE_ENV === 'development' || process.env.NODE_ENV === 'production')\r\n        return ( /** Context API */\r\n            <firebaseContext.Consumer>\r\n                {firebase => <Component {...props} firebase = {firebase} /> }\r\n            </firebaseContext.Consumer>\r\n        )\r\n    else return <Component {...props} />;\r\n};\r\n\r\n\r\nexport default withFirebase;","import React,{useState} from 'react';\r\nimport './Loader.scss';\r\nexport default function(props) {\r\n  \r\n    const [path] = useState(props.path ? process.env.PUBLIC_URL + props.path : process.env.PUBLIC_URL + `/img/loading.gif`);\r\n    const [mode] = useState(props.mode ? props.mode : false);\r\n    return (\r\n            <div className = {`loaderBox ${mode && 'specialMode'}`}>\r\n                <img className = 'loader' src = {path} alt = 'loader'></img> \r\n                {!mode && <p>{`Loading ${props.type}`}</p>}\r\n            </div>\r\n    )\r\n}","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst AnimationTitle = styled.h3`\r\n    user-select: none;\r\n    transition: .4s linear all;\r\n    color: ${props => props.dir === 'up' ? 'red' : 'blue'};\r\n`;\r\n\r\nclass AnimationText extends React.PureComponent {\r\n\r\n    state = {\r\n        tilteContent: this.props.content.split(''),\r\n        currentTitle: this.props.content[0],\r\n        positionTitle: 1,\r\n        directionAnimation: 'up',\r\n        msAnimation: this.props.msAnimation,\r\n        msTimeout: this.props.msAnimation,\r\n        msPauseEnd: this.props.msPauseEnd,\r\n    }\r\n\r\n    _isMounted = false;\r\n    timerAnimation = null;\r\n\r\n    animationTitle = timer => {\r\n        let self = this;\r\n        if (this._isMounted)\r\n        timer = setTimeout( function tick(){\r\n\r\n            if (self._isMounted) {\r\n                if (self.state.directionAnimation === 'up'){\r\n                    let counter = self.state.tilteContent.length;\r\n                    const word = counter > self.state.positionTitle ?\r\n                                self.state.tilteContent[self.state.positionTitle] :\r\n                                self.state.tilteContent[self.state.positionTitle-1];\r\n                    self.setState({\r\n                        ...self.state,\r\n                        currentTitle: self.state.currentTitle + word,\r\n                        positionTitle: self.state.positionTitle + 1,\r\n                        directionAnimation: self.state.positionTitle === counter ? 'down' : 'up',\r\n                        msAnimation: self.state.positionTitle === counter ?\r\n                            self.state.msPauseEnd : self.state.msTimeout\r\n                    });\r\n                }\r\n                if (self.state.directionAnimation === 'down'){\r\n                    let _title = self.state.currentTitle;\r\n                    const length = self.state.currentTitle.length;\r\n                    _title = _title.slice(0,length - 1);\r\n                    self.setState({\r\n                        ...self.state,\r\n                        currentTitle: _title,\r\n                        positionTitle: self.state.positionTitle - 1,\r\n                        directionAnimation: self.state.positionTitle === 2 ? 'up' : 'down',\r\n                        msAnimation: self.state.positionTitle === 2 ?\r\n                            self.state.msPauseEnd : self.state.msTimeout\r\n                    });\r\n                }\r\n            timer = setTimeout(tick, self.state.msAnimation);\r\n            }\r\n        }, this.state.msAnimation);\r\n\r\n    }\r\n\r\n\r\n    render(){\r\n        return (\r\n            <AnimationTitle data-titlebuild dir = {this.state.directionAnimation}>\r\n                {this.state.currentTitle}\r\n            </AnimationTitle>\r\n        )\r\n\r\n    }\r\n\r\n    componentDidMount = (e) => {\r\n        this._isMounted = true;\r\n        this.animationTitle(this.timerAnimation);\r\n    }\r\n\r\n    componentWillUnmount = (e) => {\r\n        this._isMounted = false;\r\n        if (this.timerAnimation) clearTimeout(this.timerAnimation);\r\n    }\r\n}\r\n\r\n\r\nexport default AnimationText;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './registration.scss';\r\n\r\nimport withFirebase from '../withFirebase';\r\n\r\n\r\nclass Registration extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        firebase: PropTypes.object.isRequired, /** @firebase class for use firebase functions */\r\n        indexStream: PropTypes.object.isRequired /** @Events stream object */\r\n    }\r\n\r\n    state = {\r\n        firebase: this.props.firebase,\r\n        error: null,\r\n    }\r\n\r\n    emailRef = null;\r\n    passwordRef = null;\r\n\r\n    setRefEmail = (node) => this.emailRef = node;\r\n    setRefPassword = (node) => this.passwordRef = node;\r\n\r\n    createUser = event => {\r\n        /** try to create new user */\r\n        const email = this.emailRef ? this.emailRef.value : null;\r\n        const password = this.passwordRef ? this.passwordRef.value : null;\r\n        const { firebase } = this.props;\r\n\r\n        if (password && email)\r\n        firebase.registration(email, password)\r\n        .then(response => {\r\n            if (!response) throw new Error('Ivaid registration')\r\n            /** if response - true update data user else throw error */\r\n            firebase.db.collection(\"users\").doc(response.user.uid).set({\r\n                'projects': [],\r\n                'email': email,\r\n            }).then(() => this.props.indexStream.emit('EventRegistrationCorrect', response));\r\n        })\r\n        .catch((error) => {\r\n        console.error(error.message);\r\n        this.setState({error: error.message});\r\n        });\r\n        else  return this.setState({error: 'invalid user data'});\r\n    };\r\n\r\n    render(){\r\n        let  { error } = this.state;\r\n        return (\r\n            <div className ='RegistrationBox'>\r\n                <div  className = 'RegistrationBox__RegistrationForm'>\r\n                    <h3>Registration</h3>\r\n                    <form autoComplete = 'off' className = 'RegistrationForm__RegForm'>\r\n                        { error ?\r\n                            <p className = 'error'>{error}</p>\r\n                            : null\r\n                        }\r\n                        <span>E-mail</span>\r\n                        <input placeholder=\"email\" ref = {this.setRefEmail} type = 'text' />\r\n                        <span>Password</span>\r\n                        <input \r\n                            className = 'password' \r\n                            autoComplete = \"off\" \r\n                            ref = {this.setRefPassword} \r\n                            type = 'password' \r\n                            placeholder=\"password\"\r\n                        />\r\n                        <input onClick = {this.createUser}\r\n                                className = 'RegForm__loginButton'\r\n                                type = 'button'\r\n                                value = 'registration'\r\n                        />\r\n                    </form>\r\n                </div>\r\n                </div>\r\n        )\r\n    }\r\n\r\n}\r\nexport default withFirebase(Registration);\r\n","import React, {useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './icon.scss';\r\n\r\nfunction Icon(props){\r\n    const [path] = useState(props.path);\r\n    const [className] = useState(props.className ? props.className : null);\r\n    const [draggable] = useState(props.draggable ? true : false);\r\n\r\n    return (\r\n    <img\r\n        draggable = {draggable}\r\n        onClick = {props.onClick ? props.onClick : null}\r\n        className = {className}\r\n        title = {props.title ? props.title : null}\r\n        src = {process.env.PUBLIC_URL + path } alt = 'icon'>\r\n    </img>\r\n    )\r\n}\r\n\r\nIcon.propTypes = {\r\n    path: PropTypes.string.isRequired, // icon path\r\n    className: PropTypes.string, // class\r\n    draggable: PropTypes.bool // draggable bool\r\n}\r\n\r\nexport default Icon;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Redirect} from 'react-router-dom';\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\r\nimport AnimationText from '../../components/AnimationText/AnimationTitle';\r\nimport Events from 'events';\r\nimport {middlewareLogin} from '../../redux/middleware/loadUserMiddleware';\r\n\r\nimport Loader from '../../components/loading/Loader';\r\nimport Registration from '../../components/Registration/Registration';\r\n\r\nimport {connect} from 'react-redux';\r\n\r\nimport './index.scss';\r\nimport Icon from '../../components/Icon/icon';\r\n\r\n\r\nclass Index extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        active: PropTypes.bool, /** @active - status firebase auth */\r\n        dispatch: PropTypes.func.isRequired, /** @dispatch - redux */\r\n        history: PropTypes.object.isRequired, /** @Router HTML5 history */\r\n        location: PropTypes.object.isRequired, /** @Router */\r\n        match: PropTypes.object.isRequired, /** @Router */\r\n        wrongEnter: PropTypes.string, /** @Error about invalid enter */\r\n        config: PropTypes.object, /** @config - app settings */\r\n    }\r\n\r\n    indexStream = new Events();\r\n\r\n    state = {\r\n        title:  this.props.config.title,\r\n        tryAuth: false,\r\n        registrationActive: false,\r\n        regStatus: false,\r\n        wrongEnter: false,\r\n        error: '',\r\n    }\r\n\r\n    emailImput = null;\r\n    passwordImput = null;\r\n\r\n    statusRegistration = event => {\r\n        /** Update registration status */\r\n        event.additionalUserInfo.isNewUser ?\r\n            this.setState({\r\n                ...this.state,\r\n                regStatus: true,\r\n                registrationActive: false,\r\n                error: 'Account create!'\r\n            })\r\n        : console.error('error registration');\r\n    }\r\n\r\n    showBox = event => {\r\n         /** Show registration box */\r\n        try {\r\n            this.setState ({\r\n                ...this.state,\r\n            registrationActive: this.state.registrationActive ? false : true\r\n            });\r\n        } catch (e) {\r\n        console.error('animation fail');\r\n        }\r\n        event.stopPropagation();\r\n    }\r\n\r\n    authTo = event => {\r\n          /** Auth user */\r\n            if (this.emailImput && this.passwordImput)\r\n                    this.props.dispatch(middlewareLogin(this.emailImput.value, this.passwordImput.value))\r\n        event.stopPropagation();\r\n    }\r\n\r\n    emailRef = node => this.emailImput = node;\r\n    passwordRef = node => this.passwordImput = node;\r\n\r\n    render(){\r\n\r\n\r\n        if (!this.props.active){\r\n            return (\r\n                    <div className = 'LoginPage flex-column'>\r\n                        <h1>{this.state.title}</h1>\r\n                        <div className = 'LoginPage__LoginBox'>\r\n                            <AnimationText\r\n                                content = 'Build your landing page!'\r\n                                msPauseEnd = {1000}\r\n                                msAnimation = {150}\r\n                            />\r\n                            <form className = 'LoginBox__LoginForm'>\r\n                                <h3>Connect form</h3>\r\n                                {this.state.tryAuth &&\r\n                                <Icon\r\n                                    className = 'LoginBox__LoginForm__loader'\r\n                                    path = '/img/loading.gif'\r\n                                />\r\n                                }\r\n                                {(this.props.wrongEnter || this.state.regStatus) && !this.state.tryAuth ?\r\n                                    <p className = 'error'>{this.props.wrongEnter}</p>\r\n                                    : null\r\n                                }\r\n                                    <p>E-mail</p>\r\n                                    <input \r\n                                        autoComplete = 'off'\r\n                                        placeholder=\"email\" \r\n                                        ref = {this.emailRef}\r\n                                        type = 'text' \r\n                                    />\r\n                                    <p>Password</p>\r\n                                    <input \r\n                                        ref = {this.passwordRef} \r\n                                        type = 'password' \r\n                                        autoComplete = 'off'\r\n                                        placeholder=\"password\"\r\n                                    />\r\n                                    <input \r\n                                        onClick = {this.authTo} \r\n                                        className = 'LoginForm__loginButton enterInput'\r\n                                        type = 'button'\r\n                                        value = 'enter' />\r\n                                    <input\r\n                                        onClick = {this.showBox}\r\n                                        className = {this.state.registrationActive ?\r\n                                            `LoginForm__loginButton registration selected` : \r\n                                            'LoginForm__loginButton registration'\r\n                                        }\r\n                                        type = 'button'\r\n                                        value = 'registration'\r\n                                    />\r\n                            </form>\r\n                        </div>\r\n                            <TransitionGroup component={null}>\r\n                                {this.state.registrationActive &&\r\n                                    <CSSTransition\r\n                                        timeout={300}\r\n                                        unmountOnExit\r\n                                        classNames=\"RegAnim\">\r\n                                        <Registration  indexStream = {this.indexStream} />\r\n                                    </CSSTransition>\r\n                                }\r\n                            </TransitionGroup>\r\n                    </div>\r\n            )\r\n        }\r\n         else  return <Loader path = '/img/loading.gif' type = 'session' />\r\n    }\r\n\r\n    componentDidUpdate = () => {\r\n        console.log(this.props.active);\r\n        if (this.props.active) this.props.history.push('/Cabinet');\r\n    }\r\n\r\n    componentDidMount = (e) => {\r\n        if (this.props.active) this.props.history.push('/Cabinet');\r\n        this.indexStream.on('EventRegistrationCorrect', this.statusRegistration);\r\n    }\r\n    componentWillUnmount = (e) => {\r\n        this.indexStream.off('EventRegistrationCorrect', this.statusRegistration);\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        active: state.cabinet.active, \r\n        wrongEnter: state.cabinet.error\r\n    }\r\n  }\r\n\r\nexport default connect(mapStateToProps)(Index);","\r\nimport {errorAction, loadUserAction, loadUpdateCurrentProject} from '../actions';\r\nconst middlewareDelete = item => async (dispatch,getState, {firebase}) => {\r\n    /** Delete some components from project */\r\n    await firebase.db.collection('users').doc(item.uid).get()\r\n    .then(user => user.data())\r\n    .then(data => {\r\n        return {id: item.uid, projects: data.projects.filter(itemdb => itemdb.id !== item.id)};\r\n    })\r\n    .then(data => {\r\n        /** Load update in database */\r\n        firebase.db.collection(\"users\").doc(item.uid).update({\r\n            \"projects\": data.projects\r\n        })\r\n        .then(response => {\r\n            /** update user data */\r\n            dispatch(loadUserAction({uid: item.uid, projects: data.projects}));\r\n        });\r\n    })\r\n    .catch((error) => {\r\n        console.error(error.message);\r\n        dispatch(errorAction(error.message));\r\n    });\r\n}\r\n\r\nconst middlewareDeleteProjectComponent = item => async (dispatch, getState, {firebase}) => {\r\n    /** Delete project */\r\n    await firebase.db.collection('users').doc(item.uid).get()\r\n    .then(user => user.data())\r\n    .then(data => {\r\n        const userProjects = [...data.projects];\r\n        const findProject = userProjects.find(project => item.id === project.id);\r\n        if (!findProject) throw new Error('No found project');\r\n        findProject.components = findProject.components.filter(component =>\r\n            component.id !== item.idComponent\r\n        );\r\n\r\n        if (item && item.type === 'background'){\r\n            findProject.sectionsProject = findProject.sectionsProject.filter(section => {\r\n                return section !== item.idComponent;\r\n            });\r\n        }\r\n        return {dataUpdate: data, findProject: findProject};\r\n    })\r\n    .then(data => {\r\n        let {dataUpdate} = data;\r\n        let {findProject} = data;\r\n        /** update data in database */\r\n        firebase.db.collection(\"users\").doc(item.uid).update({\r\n            \"projects\": dataUpdate.projects\r\n        })\r\n        .then(response => {\r\n            /** update user data */\r\n            dispatch(loadUpdateCurrentProject({\r\n                components: [...findProject.components],\r\n                idProject: item.id,\r\n                sectionsProject: [...findProject.sectionsProject],\r\n            }))\r\n        });\r\n    })\r\n    .catch(error => {\r\n        console.error(error.message);\r\n        dispatch(errorAction(error.message));\r\n        return null;\r\n    });\r\n\r\n    return item.idComponent;\r\n}\r\n\r\nexport {middlewareDeleteProjectComponent};\r\nexport default middlewareDelete;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './Confirm.scss';\r\n\r\nconst Confirm = props => {\r\n\r\n    return (\r\n        <div className = 'wrapperConfirm'>\r\n            <div className = 'confirmSave'>\r\n                <span>Detected new changes</span>\r\n                <input\r\n                    className = 'saveCofirm'\r\n                    onClick = {props.cbSaveChanges}\r\n                    type = 'button'\r\n                    value = 'Save changes'\r\n                />\r\n                <input\r\n                    className = 'cancelCofirm'\r\n                    onClick = {props.cbCancelSave}\r\n                    type = 'button'\r\n                    value = 'Cancel'\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nConfirm.propTypes = {\r\n    cbSaveChanges: PropTypes.func.isRequired, // callback\r\n    cbCancelSave: PropTypes.func.isRequired // callback\r\n}\r\n\r\nexport default Confirm;","import React from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport './header.scss';\r\n\r\nimport {middlewareLogOutUser} from '../../redux/middleware/loadUserMiddleware';\r\nimport {connect} from 'react-redux';\r\nimport {Redirect, withRouter} from 'react-router-dom';\r\n\r\nimport eventEmitter from '../../EventEmitter.js';\r\nimport Icon from '../Icon/icon';\r\nimport Confirm from '../confirmBox/Confirm';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faBook } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst iconPath = require('../../config.json').CabinetIcon;\r\n\r\nclass Header extends React.Component {\r\n\r\n    static propTypes = {\r\n        title: PropTypes.string.isRequired, /** @Config title app */\r\n        cabinetStream: PropTypes.object, /** @Events stream cabinet */\r\n        dispatch: PropTypes.func.isRequired, /** @dispatch redux */\r\n        history: PropTypes.object.isRequired, /** @Router HTML5 history */\r\n        location: PropTypes.object.isRequired, /** @Router */\r\n        match: PropTypes.object, /** @Router */\r\n    };\r\n\r\n    state = {\r\n        idUser: this.props.idUser,\r\n        title: this.props.title,\r\n        isChange: false,\r\n        redirectConfirm: false,\r\n        redirectAbout: {\r\n            path:  '/Cabinet/About',\r\n            redirectA: false,\r\n        },\r\n        redirectCabinet: {\r\n            path:  '/Cabinet',\r\n            redirectC: false,\r\n        },\r\n        redirectGuide: {\r\n            path:  '/Cabinet/Guide',\r\n            redirectG: false,\r\n        }\r\n    };\r\n\r\n    confirm = event => {\r\n        if (typeof event !== 'object')\r\n        this.setState({isChange: event});\r\n        else this.setState({isChange: event.false, redirectConfirm: event.confirm});\r\n    }\r\n\r\n    confirmSaveDetectChanges = event => {\r\n        eventEmitter.emit('EventRedirectSaveChanges');\r\n        this.setState({\r\n            redirectConfirm: false,\r\n            redirectCabinet: {\r\n                ...this.state.redirectCabinet,\r\n                redirectC: true\r\n            }\r\n        });\r\n    };\r\n\r\n    logOut = event => {\r\n        if (this.state.idUser)\r\n            this.props.dispatch(middlewareLogOutUser(this.props.idUser));\r\n        event.stopPropagation();\r\n    };\r\n\r\n    redirectAbout = event => {\r\n        const isPath = this.props.location.pathname !== this.state.redirectAbout.path;\r\n        if (isPath && !this.state.isChange)\r\n           this.setState({\r\n                redirectConfirm: false,\r\n                redirectAbout: {\r\n                   ...this.state.redirectAbout,\r\n                   redirectA: true\r\n               }\r\n           }); else if (!this.state.redirectConfirm) \r\n                this.setState({redirectConfirm: true});\r\n        event.stopPropagation()\r\n    };\r\n\r\n    redirectGuide = event => {\r\n        const isPath = this.props.location.pathname !== this.state.redirectGuide.path;\r\n        if (isPath && !this.state.isChange)\r\n           this.setState({\r\n                redirectConfirm: false,\r\n                redirectGuide: {\r\n                   ...this.state.redirectGuide,\r\n                   redirectG: true\r\n               }\r\n           }); else if (!this.state.redirectConfirm) \r\n                this.setState({redirectConfirm: true});\r\n        event.stopPropagation()\r\n    };\r\n\r\n    redirectCabinet = event => {\r\n        if (event !== 'cancelMode'){\r\n            const isPath = this.props.location.pathname !== this.state.redirectCabinet.path;\r\n            if (isPath && this.state.isChange === false)\r\n            this.setState({\r\n                redirectConfirm: false,\r\n                redirectCabinet: {\r\n                    ...this.state.redirectCabinet,\r\n                    redirectC: true\r\n                }\r\n            });\r\n            else if (!this.state.redirectConfirm) this.setState({redirectConfirm: true});\r\n            event.stopPropagation();\r\n\r\n        } else this.setState({\r\n            redirectConfirm: false,\r\n            redirectCabinet: {\r\n                ...this.state.redirectCabinet,\r\n                redirectC: true\r\n            }\r\n        });\r\n    }\r\n\r\n    add = event => {\r\n        this.props.cabinetStream.emit('EventChangeWorkMode',{active: true, action: 'newProject'});\r\n        event.stopPropagation()\r\n    };\r\n\r\n    render(){\r\n        let {redirectA} = this.state.redirectAbout;\r\n        let {redirectC} = this.state.redirectCabinet;\r\n        let {redirectG} = this.state.redirectGuide;\r\n\r\n        if (redirectA) this.props.history.push(this.state.redirectAbout.path);\r\n        if (redirectC) this.props.history.push(this.state.redirectCabinet.path);\r\n        if (redirectG) this.props.history.push(this.state.redirectGuide.path);\r\n\r\n        return (\r\n            <React.Fragment>\r\n            {this.state.isChange && this.state.redirectConfirm ?\r\n                <Confirm \r\n                    cbSaveChanges = {this.confirmSaveDetectChanges}\r\n                    cbCancelSave = {() => this.redirectCabinet('cancelMode')}\r\n                /> : null}\r\n                <header>\r\n                    <div className = 'container'>\r\n                        <div className = 'flex-row'>\r\n                                <div onClick = {this.redirectCabinet} className = 'header__CabinetInfo'>\r\n                                    <Icon className ='mainIcon' path = {iconPath} />\r\n                                    <h3 className = 'tilteApp'>{this.state.title}</h3>\r\n                                </div>\r\n                                {this.props.location.pathname === '/Cabinet' ?\r\n                                    <div onClick = {this.add} className = 'header__newProject__AddButton'>\r\n                                        <Icon className = 'Cabinet' path = '/img/plus.png' />\r\n                                    </div>\r\n                                    : null\r\n                                }\r\n                                    <div  className = 'Navigator'>\r\n                                    <FontAwesomeIcon \r\n                                        className=\" about fas fa-2x fa-book\"  \r\n                                        icon = {faBook} \r\n                                        onClick = {this.redirectGuide} \r\n                                        />\r\n                                        <Icon className = 'about' onClick = {this.redirectAbout}\r\n                                            title = 'about'\r\n                                            path = '/img/about_logo.svg'\r\n                                        />\r\n                                        <Icon className = 'logoutButton'\r\n                                            onClick = {this.logOut}\r\n                                            title = 'logOut'\r\n                                            path = '/img/logOut.svg'\r\n                                        />\r\n                                    </div>\r\n                        </div>\r\n                </div>\r\n                </header>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n    componentDidlMount = () => {\r\n        eventEmitter.on('EventRedirectConfirm', this.confirm);\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        eventEmitter.off('EventRedirectConfirm', this.confirm);\r\n    }\r\n}\r\n\r\nexport default connect()(withRouter(Header));","import React, {useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport eventEmitter from '../../EventEmitter';\r\n\r\nconst ImageItem = props => {\r\n\r\n    const {selected} = props;\r\n    const [id] = useState(props.id);\r\n    const [urlRegular] = useState(props.urls.regular);\r\n    const [urlFull] = useState(props.urls.full);\r\n    const [isFull] = useState(props.isFull);\r\n    const [urlContent] = useState(props.urlContent);\r\n    const showImageMenu = event => {\r\n\r\n       eventEmitter.emit(\"EventShowMenuImage\",{\r\n            id: id,\r\n            url: urlRegular,\r\n            urlFull: urlFull,\r\n            iframe: urlContent\r\n        });\r\n        event.stopPropagation();\r\n    }\r\n\r\n    return (\r\n        <div className = {selected ? 'ItemBox selected' : 'ItemBox'}>\r\n            <img\r\n                className = 'ImageItem'\r\n                onClick = {showImageMenu}\r\n                src = {isFull ? urlFull : urlRegular}\r\n                alt = 'item'\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nImageItem.propTypes = {\r\n    id: PropTypes.oneOfType([\r\n        PropTypes.string,\r\n        PropTypes.number,\r\n    ]),\r\n    urls: PropTypes.object, // data with image path\r\n    isFull: PropTypes.bool, // mode view\r\n    urlContent: PropTypes.string // content path\r\n}\r\n\r\nexport default ImageItem;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Loader from '../../loading/Loader';\r\n\r\nconst CreateProject = props => {\r\n\r\n    const content = props.content; /** Content */\r\n    const {disabled,validateName,name,validateType} = content;\r\n    const nameLength = name.length; /** Length */\r\n\r\n\r\n    let isNumber = nameLength >= 4 && nameLength <= 20;\r\n\r\n    return (\r\n    <div className = 'Modal Modal__create'>\r\n        <h3>Create new Project</h3>\r\n        { nameLength <= 3 ?\r\n            <span className = 'warning'>{props.warningLengthMin}</span> : null\r\n        }\r\n        { nameLength >= 20 ?\r\n            <span className = 'warning'>{props.warningLengthMax}</span> : null\r\n        }\r\n        {\r\n            isNumber && !validateName ?\r\n            <span className = 'warning'>{props.warningNumber}</span> : null\r\n        }\r\n        <input\r\n            className = {validateName ? 'ready' : 'wrong'}\r\n            value = {props.name}\r\n            onChange = {props.cbValidateName}\r\n            type = 'text'\r\n            placeholder = \"Project name\"\r\n        />\r\n        { !validateType ?\r\n            <span className = 'warning'>{props.warningType}</span> : null\r\n        }\r\n        <select className = 'projectSelect' onChange = {props.cbSelectOption} >\r\n            <option value = 'empty'>--------</option>\r\n            <option value = 'landing'>Landing</option>\r\n        </select>\r\n        <input \r\n            onClick = {props.cbAddNewProject}\r\n            className = 'acceptButton'\r\n            disabled = {disabled}\r\n            type = 'button'\r\n            value = 'Submit'\r\n        />\r\n        <input onClick = {props.cbCancel} type ='button' value = 'Cancel' />\r\n        {props.loading && <Loader mode = 'create' />}\r\n    </div>\r\n    )\r\n}\r\n\r\nCreateProject.propTypes = {\r\n    content: PropTypes.object, // type color className\r\n    warningType: PropTypes.string, // errors\r\n    warningLengthMax: PropTypes.string, // error max length\r\n    warningLengthMin: PropTypes.string, // error min length\r\n    cbValidateName: PropTypes.func.isRequired, // callback validate\r\n    cbAddNewProject: PropTypes.func.isRequired, // callback add new project\r\n}\r\n\r\nexport default CreateProject;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport eventEmitter from '../../../EventEmitter';\r\nimport Icon from '../../Icon/icon';\r\nimport Loader from '../../loading/Loader';\r\n\r\nclass  SearchModal extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        modalSearchMode: PropTypes.string, // search mode\r\n        content: PropTypes.object, // with search data\r\n        cbCancel: PropTypes.func.isRequired, // callback cancel\r\n        cbShowImage: PropTypes.func.isRequired, // callback show image\r\n        cbSetSelectedImage: PropTypes.func.isRequired, // callback show image\r\n    }\r\n\r\n    state = {\r\n        mode: this.props.modalSearchMode,\r\n        items: this.props.images,\r\n    }\r\n\r\n    search = event => {\r\n        /** event search on */\r\n        const value = this.refSearch ? this.refSearch.value : null;\r\n        this.props.cbSearch(event,value, this.props.modalSearchMode);\r\n        event.stopPropagation();\r\n    }\r\n\r\n    refSearch = null;\r\n    refSearchFunc = node => this.refSearch = node;\r\n\r\n    render(){\r\n\r\n        let {content} = this.props;\r\n        return (\r\n            <React.Fragment>\r\n                <div className = 'Modal Modal-search'>\r\n                <h3>\r\n                {this.props.modalSearchMode ? \r\n                    `Search ${this.props.modalSearchMode}` : '' \r\n                }\r\n                </h3>\r\n                { this.props.error ?\r\n                    <span className = 'error'>{content.error}</span> : null\r\n                }\r\n                <div className = 'Modal-search__controllers'>\r\n                    <input ref = {this.refSearchFunc} type = 'text' />\r\n                        <input\r\n                            disabled = {content.dissabled}\r\n                            className = 'acceptButton'\r\n                            type = 'button'\r\n                            value = 'Search'\r\n                            onClick = {this.search}\r\n                        />\r\n                    <input onClick = {this.props.cbCancel} type ='button' value = 'Cancel' />\r\n                </div>\r\n                <div className = 'searchResultBox'>\r\n                    {this.state.items}\r\n                    {this.props.loading ? <Loader type = 'images' /> : null}\r\n                </div>\r\n                </div>\r\n                {  this.props.menuActive ?\r\n                    <div className = 'ActionModalSearch'>\r\n                    <button onClick = {this.props.cbShowImage} className = 'actionModalSearch__view'>\r\n                        <Icon path = '/img/view.png' />\r\n                    </button>\r\n                    <button onClick = {this.props.cbSetSelectedImage} className = 'actionModalSearch__settings'>\r\n                        <Icon path = '/img/settings.png' />\r\n                    </button>\r\n                    </div>\r\n                    : null\r\n                }\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n    componentDidUpdate = (prevProps,prevState) => {\r\n        let {content} = this.props;\r\n        let {content: contentPrev} = prevProps;\r\n        const haveUpdate = (contentPrev.images !== content.images && content.images);\r\n        const isSelected = contentPrev.selectedItem !== content.selectedItem;\r\n        /** update if selected */\r\n        if (haveUpdate || isSelected){\r\n            let _items = this.props.cbMakeImageResultBox(content.images);\r\n            this.setState({\r\n                ...this.state,\r\n                items: [..._items]\r\n            });\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        eventEmitter.emit('EventBlockScroll', 'window');\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        eventEmitter.emit('EventBlockScroll', 'default');\r\n    }\r\n}\r\n\r\nexport default SearchModal;","import React,{Fragment} from 'react';\r\n\r\nimport isFetch from 'isomorphic-fetch';\r\nimport PropTypes from 'prop-types';\r\nimport eventEmitter,{controllerStream} from '../../EventEmitter.js';\r\nimport ImageItem from '../imageViewer/imageItem';\r\n\r\nimport CreateProject from './createProject/createProject';\r\nimport SearchModal from './Search/searchModal';\r\nimport './modal.scss';\r\n\r\n\r\nclass ModalWindow extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        workMode: PropTypes.string.isRequired, /** @Mode for modal */\r\n        cabinetStream: PropTypes.object, /** @Events stream cabinet */\r\n        eventStreamBuild: PropTypes.object, /** @Events stream build */\r\n        idComponent: PropTypes.oneOfType([\r\n            PropTypes.string,\r\n            PropTypes.number\r\n        ]) /** @Id current user project */\r\n    }\r\n\r\n    state = {\r\n        workMode: this.props.workMode,\r\n        loading: false,\r\n        items: [],\r\n        images: {\r\n            loading: false,\r\n            buttonSearchDisabled: false,\r\n            selectedItem: null, \r\n            showUrl: null, \r\n            images: [],\r\n            urlFull: null,\r\n            imageBoxView: false, \r\n            iframe: null,\r\n            error: ''\r\n        },\r\n        newProject: {\r\n            validateName: false,\r\n            validateType: false,\r\n            disabled: true,\r\n            name: '',\r\n            type: 'empty'\r\n        },\r\n        imageMenuActive: false,\r\n        warning: {\r\n            lengthMax: 'Max length: 20 laters',\r\n            warningNumber: `Don't use numbers`,\r\n            lengthMin: 'Min length: 4 letters',\r\n            type: 'Select type of webpage',\r\n        }\r\n    }\r\n\r\n    inputSearch = null;\r\n    inputSelect = null;\r\n\r\n    searchData = (event,value, mode) => {\r\n        /** search images or media */\r\n        if (!event.target.value || !value) return;\r\n        this.setState({...this.state, \r\n            images: {\r\n                ...this.state.images,\r\n                loading: true,\r\n                buttonSearchDisabled: true\r\n            }\r\n        });\r\n\r\n        let search = null;\r\n        if (value) search = value;\r\n        else search = this.inputSearch.value;\r\n\r\n        if (mode !== 'media'){\r\n        const modeAPI = 'search/photos/?page=1&per_page=40&query=';\r\n        const api = `https://api.unsplash.com/${modeAPI}`;\r\n \r\n        isFetch(`${api + search}&client_id=${process.env.REACT_APP_UNSPLASH_TOKEN}`)\r\n        .then(response => {\r\n            if (response.ok) return response.json();\r\n            else throw new Error('request invalid');\r\n        })\r\n        .then(response => {\r\n            let {results} = response;\r\n            if (results.length) /** save results */\r\n            this.setState({\r\n                ...this.state,\r\n                images: {\r\n                    ...this.state.images,\r\n                    loading: false,\r\n                    imageBoxView: true,\r\n                    error: '',\r\n                    images: [...results],\r\n                    buttonSearchDisabled: false\r\n                },\r\n            });\r\n            else throw new Error('Photos not found');\r\n        })\r\n        .catch(error => {\r\n            console.error(error.message);\r\n            this.setState({\r\n                ...this.state,\r\n                images: {\r\n                    ...this.state.images,\r\n                    buttonSearchDisabled: false,\r\n                    loading: false,\r\n                    error: error.message},\r\n                imageBoxView: false,\r\n            });\r\n        });\r\n        } else this.searchYouTubeAPI(search);\r\n    }\r\n\r\n\r\n    searchYouTubeAPI = (search) => {\r\n        /** search media */\r\n        const API = `https://www.googleapis.com/youtube/v3/search?part=snippet`;\r\n        const RAITE = `&maxResults=25&order=date&q=${search}`;\r\n        const KEY = `&key=${process.env.REACT_APP_YOUTUBE_SEARCH_TOKEN}`;\r\n        isFetch(API + RAITE + KEY)\r\n        .then(res => {\r\n            if (res.ok)\r\n            return res.json();\r\n            else throw new Error (`Error ${res.status}`);\r\n        })\r\n        .then(res => {\r\n            const arrayItems = [];\r\n            res.items.forEach(item => {\r\n                arrayItems.push({\r\n                    urls: { regular: item.snippet.thumbnails.high.url },\r\n                    videoId: item.id.videoId\r\n                })\r\n            });\r\n            return arrayItems;\r\n        })\r\n        .then(results => {\r\n            this.setState({ /** save results */\r\n                ...this.state,\r\n                images: {\r\n                    ...this.state.images,\r\n                    loading: false,\r\n                    imageBoxView: true,\r\n                    error: '',\r\n                    images: [...results],\r\n                    buttonSearchDisabled: false\r\n                },\r\n            });\r\n        })\r\n        .catch(error => console.error(error));\r\n    }\r\n\r\n    showMenuImage = event => {\r\n        /** tools for show or set content */\r\n        this.setState({\r\n            ...this.state, \r\n            imageMenuActive: true,\r\n            images: {\r\n                ...this.state.images,\r\n                selectedItem: event.id, \r\n                showUrl: event.url,\r\n                urlFull: event.urlFull,\r\n                iframe: event.iframe\r\n\r\n            }\r\n        });\r\n    }\r\n\r\n    showImage = event => {\r\n        /** on viewer */\r\n        const {showUrl, iframe} = this.state.images;\r\n\r\n        this.props.eventStreamBuild.emit(\"EventView\", {\r\n            action: true, \r\n            target: showUrl ? showUrl : null,\r\n            iframe: iframe,\r\n            mode: this.props.modalSearchMode\r\n        });\r\n        event.stopPropagation();\r\n    }\r\n\r\n    setSelectedImage = event => {\r\n        /** set current selected content */\r\n        let data = {...this.state.images};\r\n        if (this.props.modalSearchMode === 'background'){\r\n            controllerStream.emit(`EventSetBackgroundImage${this.props.idComponent}`,data);\r\n            eventEmitter.emit(`EventSetBImageInstumentPanel`,{images: data, mode: this.props.modalSearchMode});\r\n        } else if (this.props.modalSearchMode === 'image'){\r\n            controllerStream.emit(`EventSetCurrentImage${this.props.idComponent}`, data);\r\n            eventEmitter.emit(`EventSetBImageInstumentPanel`, {images: data,  mode: this.props.modalSearchMode });\r\n        } else if (this.props.modalSearchMode === 'media'){\r\n            controllerStream.emit(`EventSetContentMedia${this.props.idComponent}`,{\r\n                    iframe: data.iframe,\r\n                    mode: this.props.modalSearchMode\r\n                }\r\n            );\r\n            eventEmitter.emit(`EventSetIframe`, {iframe: data.iframe});\r\n        }\r\n\r\n        event.stopPropagation();\r\n    };\r\n\r\n    makeImageResultBox = (items) => {\r\n        /** make results */\r\n        if (!items) return null;\r\n        return items.map((item,i) =>{\r\n                return <ImageItem\r\n                            key = {`item${item.videoId}${i}`}\r\n                            id = {i}\r\n                            urlContent = {item.videoId ? item.videoId : null}\r\n                            selected = {this.state.images.selectedItem === i ? true : false} \r\n                            isFull = {false}\r\n                            urls = {item.urls}\r\n                        />\r\n        });\r\n\r\n    }\r\n\r\n    addNewProject = event => {\r\n        /** create new projects modal */\r\n        let mode = this.state[this.state.workMode];\r\n        if (mode.validateType &&  mode.validateName) {\r\n\r\n            this.props.cabinetStream.emit('EventChangeWorkMode',{action: 'default', loading: true});\r\n\r\n            this.props.cabinetStream.emit('EventAddProject',\r\n            {\r\n                title: this.state[this.state.workMode].name,\r\n                type: this.state[this.state.workMode].type\r\n            });\r\n        }\r\n    }\r\n\r\n    selectOption = event => {\r\n        /** type project */\r\n        let inputs = {...this.state[this.state.workMode]};\r\n        inputs.type = event.target.value;\r\n        inputs.validateType = inputs.type !== 'empty';\r\n        inputs.disabled = inputs.validateType && inputs.validateName ? false : true;\r\n        this.setState({\r\n            ...this.state,\r\n            [this.state.workMode]: inputs\r\n        });\r\n    }\r\n\r\n    validateName = event => {\r\n        /** validate name project */\r\n        let inputs = {...this.state[this.state.workMode]};\r\n        inputs.name = event.target.value;\r\n        inputs.validateName = /^\\D{4,20}$/i.test(inputs.name);\r\n        inputs.disabled = inputs.validateType && inputs.validateName ? false : true;\r\n        this.setState({\r\n            ...this.state,\r\n            [this.state.workMode]: inputs\r\n        })\r\n    };\r\n\r\n    cancel = event => {\r\n        /** remove modal */\r\n        if (this.state.workMode === 'Search')\r\n        this.props.eventStreamBuild.emit(\"EventModalSearchOn\", {action: 'offline', mode: null});\r\n        else  this.props.cabinetStream.emit('EventChangeWorkMode',{active: false, action: 'default'});\r\n    }\r\n\r\n    refSelect = (node) => this.inputSelect = node;\r\n    refSearch = node => this.inputSearch = node;\r\n\r\n\r\n\r\n    render(){\r\n           switch (this.state.workMode){\r\n              \r\n            case 'newProject':\r\n                return (\r\n                        <CreateProject\r\n                                content = {this.state[this.state.workMode]}\r\n                                warningType = {this.state.warning.type}\r\n                                warningNumber = {this.state.warning.warningNumber}\r\n                                warningLengthMin = {this.state.warning.lengthMin}\r\n                                warningLengthMax = {this.state.warning.lengthMax}\r\n                                cbValidateName = {this.validateName}\r\n                                cbSelectOption = {this.selectOption}\r\n                                cbAddNewProject = {this.addNewProject}\r\n                                cbCancel = {this.cancel}\r\n                                loading = {this.state.loading}\r\n                        />\r\n                )\r\n            case 'Search':\r\n                    return (\r\n                            <div className = 'searchWrapper'> \r\n                                <SearchModal\r\n                                    content = {this.state.images}\r\n                                    cbCancel = {this.cancel}\r\n                                    menuActive = {this.state.imageMenuActive}\r\n                                    cbMakeImageResultBox = {this.makeImageResultBox}\r\n                                    cbShowImage = {this.showImage}\r\n                                    cbSetSelectedImage = {this.setSelectedImage}\r\n                                    modalSearchMode = {this.props.modalSearchMode}\r\n                                    cbSearch = {this.searchData}\r\n                                    loader = {this.state.loading}\r\n                                />\r\n                            </div>\r\n                    )\r\n\r\n            default: return <Fragment></Fragment>\r\n        }\r\n    }\r\n\r\n    componentDidMount = event => {\r\n        if (this.state.workMode === 'Search')\r\n            eventEmitter.on('EventShowMenuImage', this.showMenuImage);\r\n    }\r\n\r\n    componentWillUnmount = event => {\r\n        if (this.state.workMode === 'Search')\r\n            eventEmitter.off('EventShowMenuImage', this.showMenuImage);\r\n    }\r\n}\r\n\r\nexport default ModalWindow;\r\n\r\n","import {createProjectAction, errorAction} from '../actions';\r\n\r\n\r\nfunction random(min){ /** Generate keys */\r\n    return `${Math.floor(min + Math.random() * (10000-min))}`\r\n}\r\n\r\n\r\nconst middlewareCreateProject = (uid, list, title, type) => async (dispatch,getState, {firebase}) => {\r\n    /** Create new project */\r\n    let lastProject = [...list];\r\n    const lastIndex = lastProject.length  ? lastProject[lastProject.length-1].id + 1 : 0;\r\n    const sectionsProject = [];\r\n    if (type === 'portfolio') sectionsProject.push(\"Header\");\r\n    else sectionsProject.push(\"Header\");\r\n    const header = {\r\n        backgroundImage: null,\r\n        backgroundColor: null,\r\n        id: `MainBackgroundHeader${random(0)}`,\r\n        targetSection: \"Header\",\r\n        type: \"background\"\r\n    }\r\n\r\n    lastProject.push({\r\n        id: lastIndex,\r\n        title: title,\r\n        type: type,\r\n        components: [header],\r\n        sectionsProject: [...sectionsProject],\r\n    });\r\n    /** Load project in database */\r\n    await firebase.db.collection(\"users\").doc(uid).update({\r\n        'projects': lastProject,\r\n    })\r\n    .then (() => dispatch(createProjectAction(lastProject)))\r\n    .catch(error => {\r\n        console.error(error.message);\r\n        dispatch(errorAction(error.message));\r\n    })\r\n};\r\n\r\nexport {\r\n    middlewareCreateProject\r\n}","import React, {useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {withRouter, Redirect} from 'react-router-dom';\r\n\r\nfunction Item(props) {\r\n    /** Project item in cabinet */\r\n    const [path] = useState( `/Cabinet/Build/${props.id}`);\r\n    const [productionPath] = useState(`/Cabinet/Build/${props.id}/Production/`);\r\n\r\n    let [canBuild,setCanBuild] = useState(false);\r\n    let [canProd, setCanProd] = useState(false);\r\n\r\n    const [id] = useState(props.id);\r\n    const [name] = useState(props.name);\r\n    const [type] = useState(props.type);\r\n\r\n\r\n    const build = event => {\r\n        if(props.location.pathname !== path)\r\n            setCanBuild(true);\r\n        event.stopPropagation();\r\n    };\r\n\r\n    const showProduction = event => {\r\n        if(props.location.pathname !== path)\r\n        setCanProd(true);\r\n        event.stopPropagation();\r\n    };\r\n\r\n    const deleteItem = event => {\r\n        props.cabinetStream.emit('EventDeleteItem',{\r\n            id: props.id,\r\n            name: props.name,\r\n            type: props.type\r\n        });\r\n        event.stopPropagation();\r\n    };\r\n\r\n\r\n    if (canBuild) return <Redirect to = {path} />\r\n    else if (canProd) return <Redirect to = {productionPath} />\r\n    else return (\r\n            <div className = 'item' data-id = {id}>\r\n                <p className = 'ProjectName'>{name}</p>\r\n                <p className = 'ProjectType'>{type}</p>\r\n                <div className = 'projectController'>\r\n                    <input \r\n                        onClick = {build} \r\n                        className = 'projectControllerButton_enter' \r\n                        type = 'button' \r\n                        value = 'enter build' />\r\n                    <input onClick = {deleteItem} \r\n                        className = 'projectControllerButton_delete' \r\n                        type = 'button' \r\n                        value = 'delete' />\r\n                </div>\r\n                <input onClick = {showProduction} \r\n                    className = 'productionButton' \r\n                    type = 'button' \r\n                    value = 'Production' />\r\n            </div>\r\n        )\r\n}\r\n\r\nItem.propTypes = {\r\n    id: PropTypes.number.isRequired, // id item\r\n    name: PropTypes.string.isRequired, // item name\r\n    type: PropTypes.string.isRequired, // item type\r\n}\r\n\r\nexport default withRouter(Item);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport {middlewareCreateProject} from '../../redux/middleware/createProjectMiddleware';\r\n// import {CSSTransition, TransitionGroup} from 'react-transition-group';\r\nimport './list.scss';\r\n\r\nimport Item from './Item';\r\n\r\nclass List extends React.PureComponent {\r\n    /** List of projects items in cabinet */\r\n    static propTypes = {\r\n        dispatch: PropTypes.func.isRequired, /** @dispatch redux */\r\n        idUser: PropTypes.string.isRequired, /** @UID current user */\r\n        list: PropTypes.array.isRequired, /** @List user projects */\r\n    }\r\n\r\n    state = {\r\n        redirect: false,\r\n    }\r\n\r\n    addNewProject = (item) => {\r\n        if (this.props.idUser) {\r\n            this.props.dispatch(middlewareCreateProject(\r\n                    this.props.idUser,\r\n                    this.props.list,\r\n                    item.title,\r\n                    item.type\r\n                ));\r\n        } else this.setState({...this.state, redirect: true});\r\n    }\r\n\r\n\r\n    makeList = (list) => {\r\n\r\n        return list.map (project => {\r\n\r\n            return(\r\n                <Item\r\n                    key = {project.id}\r\n                    id = {project.id}\r\n                    name = {project.title}\r\n                    type = {project.type}\r\n                    cabinetStream = {this.props.cabinetStream}\r\n                />\r\n            )\r\n        });\r\n    }\r\n\r\n    render(){\r\n        if (this.state.redirect)\r\n            return <Redirect to = { '/'} />\r\n            else return (\r\n                    <div className = 'projectsList__list'>\r\n                        {this.makeList([...this.props.list])}\r\n                    </div>\r\n                )\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.props.cabinetStream.on('EventAddProject',this.addNewProject);\r\n    }\r\n\r\n      componentWillUnmount = () => {\r\n        this.props.cabinetStream.off('EventAddProject',this.addNewProject);\r\n      }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        idUser: state.cabinet.idUser,\r\n        list: [...state.cabinet.projects]\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(List);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport List from '../List/List.jsx';\r\nimport './ProjectsSection.scss';\r\n\r\nconst ProjectsSection = props => {\r\n        return (\r\n            <section className = 'projectsList'>\r\n                <div className = 'container'>\r\n                    <div className = 'flex-column'>\r\n                        <div className = 'projectsList__box'>\r\n                            <h3>Your Projects</h3>\r\n                        </div>\r\n                        <List cabinetStream = {props.cabinetStream} />\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        )\r\n\r\n}\r\n\r\nProjectsSection.propTypes = {\r\n    cabinetStream: PropTypes.object /** @Events stream */\r\n}\r\n\r\nexport default ProjectsSection;","import React,{Fragment} from 'react';\nimport PropTypes from 'prop-types';\nimport {connect} from 'react-redux';\nimport {Redirect} from 'react-router-dom';\nimport {CSSTransition} from 'react-transition-group';\n/* ------- Event stream ------- */\nimport Events from 'events';\n/* ------- HOC for het firebase controll object ------- */\nimport withFirebase from '../../components/withFirebase';\n/* ------- Moddlewares ------- */\nimport {middlewareLogOutUser} from '../../redux/middleware/loadUserMiddleware';\nimport middlewareDelete from '../../redux/middleware/middlewareDelete';\n/* ------- Child components ------- */\nimport Loader from '../../components/loading/Loader';\nimport Header from '../../components/header/Header';\nimport Modal from '../../components/modalWindow/ModalWindow';\nimport ProjectsSection from '../../components/ProjectsSection/ProjectsSection';\nimport './Cabinet.scss';\n\nclass Cabinet extends React.PureComponent {\n\n\tstatic propTypes = {\n\t\tfirebase: PropTypes.object.isRequired, /** @firebase class for use firebase functions */\n\t\tactive: PropTypes.bool, /** @active - status firebase auth */\n\t\tdispatch: PropTypes.func.isRequired, /** @dispatch - redux */\n\t\thistory: PropTypes.object.isRequired, /** @Router HTML5 history */\n\t\tlocation: PropTypes.object.isRequired, /** @Router */\n\t\tmatch: PropTypes.object.isRequired, /** @Router */\n\t\tidUser: PropTypes.string, /** @Session user id from redux */\n\t\tprojects: PropTypes.arrayOf(PropTypes.object).isRequired /** @Projects array with user projects from redux */\n\t}\n\n\tcabinetStream = new Events();\n\n\tstate = {\n\t\tloader: false,\n\t\tmodalActive: false,\n\t\tworkMode: 'default',\n\t}\n\n\tlogOut = () => {\n\t\t/** destroy session */\n\t\tthis.props.dispatch(middlewareLogOutUser(this.props.idUser));\n\t}\n\n\tdeletItem = event => {\n\t\t/** destroy project */\n\t\tthis.setState({\n\t\t\t...this.state,\n\t\t\tloader: true,\n\t\t});\n\t\tthis.props.dispatch(middlewareDelete({...event, uid: this.props.firebase.getCurrentUser().uid}));\n\t};\n\n\t\tchangeWorkMode = event => {\n\t\t/** workMode changes */\n\t\t\tthis.setState ({\n\t\t\t...this.state,\n\t\t\tmodalActive: event.active,\n\t\t\tworkMode: event.action,\n\t\t\tloader: event.loading || false,\n\t\t\t});\n\t\t}\n\n\n\trender(){\n\t\tconsole.log(this.props);\n\t\tif (this.props.active){\n\t\treturn (\n\t\t<Fragment>\n\t\t\t\t<Header cabinetStream = {this.cabinetStream} \n\t\t\t\t\ttitle = {this.props.config.title} \n\t\t\t\t\tidUser = {this.props.idUser} \n\t\t\t\t/>\n\t\t\t\t<div className = 'Cabinet'>\n\t\t\t\t{this.state.loader &&\n\t\t\t\t\t<Loader\n\t\t\t\t\tmode = 'abinet_action_loader'\n\t\t\t\t\ttype = 'data'\n\t\t\t\t\tpath = '/img/loading.gif'\n\t\t\t\t\t/>\n\t\t\t\t}\n\t\t\t\t<CSSTransition\n\t\t\t\t\tin={this.state.modalActive}\n\t\t\t\t\ttimeout={300}\n\t\t\t\t\tclassNames=\"modalAnimation\"\n\t\t\t\t\tunmountOnExit\n\t\t\t\t\tappear\n\t\t\t\t>\n\t\t\t\t<Modal\n\t\t\t\t\tcabinetStream = {this.cabinetStream}\n\t\t\t\t\tworkMode = {this.state.workMode} \n\t\t\t\t/>\n\t\t\t\t</CSSTransition>\n\t\t\t\t<ProjectsSection cabinetStream = {this.cabinetStream} />\n\t\t\t\t</div>\n\t\t\t</Fragment>\n\t\t)\n\t\t} else if (!this.props.firebase.getCurrentUser()) return <Redirect to = { '/'} />\n\t\telse return <Loader path = '/img/loading.gif' type = 'Cabinet' />\n\t}\n\n\tcomponentDidUpdate = (prevProps) => {\n\t\tif (prevProps.projects.length !== this.props.projects.length)\n\t\t\tthis.setState({\n\t\t\t\t...this.state,\n\t\t\t\tloader: false,\n\t\t\t});\n\t}\n\n\n\tcomponentDidMount = () => {\n\t\tthis.cabinetStream.on('EventDeleteItem', this.deletItem);\n\t\tthis.cabinetStream.on('EventChangeWorkMode', this.changeWorkMode);\n\t};\n\n\tcomponentWillUnmount = () => {\n\t\tthis.cabinetStream.off('EventDeleteItem', this.deletItem);\n\t\tthis.cabinetStream.off('EventChangeWorkMode', this.changeWorkMode);\n\t}\n}\n\n\tconst mapStateToProps = (state) => {\n\treturn {\n\t\tidUser: state.cabinet.idUser,\n\t\tprojects: [...state.cabinet.projects],\n\t\tactive: state.cabinet.active\n\t}\n\t};\n\n\texport default connect(mapStateToProps)(withFirebase(Cabinet));\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport eventEmitter,{controllerStream} from '../../../EventEmitter';\r\nimport styled from 'styled-components';\r\n\r\n\r\nconst Background = styled.div`\r\n    position: relative;\r\n    width: ${props => props.width || '100%'};\r\n    height: ${props => props.height || '100%'};\r\n    background-color: ${props => props.backgroundColor};\r\n    ${props => props.backgroundImage ? `background-image: url(${props.backgroundImage});` : null}\r\n    background-size: cover;\r\n`;\r\n\r\nclass BackgroundComponent extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        id: PropTypes.string.isRequired,\r\n        targetSection: PropTypes.string,\r\n        background: PropTypes.string,\r\n        backgroundImage: PropTypes.string,\r\n        width: PropTypes.string,\r\n        height: PropTypes.string,\r\n        sectionNumber: PropTypes.number,\r\n        mode: PropTypes.string.isRequired\r\n    };\r\n\r\n    state = {\r\n        id: this.props.id,\r\n        targetSection: this.props.targetSection,\r\n        backgroundColor: this.props.background || this.props.color,\r\n        backgroundImage: this.props.backgroundImage,\r\n        width: this.props.width,\r\n        height: this.props.height\r\n    };\r\n\r\n    boxComponent = null; // ref\r\n    boxComponentRef = node => this.boxComponent = node;\r\n\r\n    saveDataParent = () => {\r\n        /** \"memorize\" paren sizes  */\r\n        let boxInform =  this.boxComponent.getBoundingClientRect();\r\n        controllerStream.emit(`EventSaveWidth${this.state.targetSection}`,{\r\n            countSection: this.props.countSection,\r\n            sectionNumber: this.props.sectionNumber,\r\n            size: {width: boxInform.width, height: boxInform.height}\r\n        });\r\n    };\r\n\r\n    openBgInstruments = event => {\r\n        /** open panel instrument trigger */\r\n        const componentsPatternBackground = {\r\n            id: this.state.id,\r\n            targetSection: this.state.targetSection,\r\n            type: 'background',\r\n            backgroundColor: this.state.backgroundColor,\r\n            backgroundImage: this.state.backgroundImage,\r\n        }\r\n        eventEmitter.emit('EventInstrumentPanel',{\r\n            componentStats: componentsPatternBackground,\r\n            targetSection: this.state.targetSection,\r\n            type: 'background',\r\n            id: this.state.id,\r\n        });\r\n        event.stopPropagation();\r\n    };\r\n\r\n    changeColor = eventItem => {\r\n         /** change bg color */\r\n        this.setState({\r\n            ...this.state,\r\n            backgroundColor: eventItem.colorRGB\r\n        });\r\n    };\r\n\r\n    setBackgroundImage = event => {\r\n         /** change bg image */\r\n        const {urlFull} = event;\r\n        this.setState({\r\n            ...this.state,\r\n            backgroundImage: urlFull,\r\n        });\r\n    };\r\n\r\n    render(){\r\n            if (this.props.mode === 'dev'){\r\n        return (\r\n            <Background\r\n                key = {this.state.id}\r\n                ref  = {this.boxComponentRef}\r\n                onDoubleClick={this.openBgInstruments}\r\n                data-name = {this.state.targetSection}\r\n                backgroundColor = {this.state.backgroundColor}\r\n                backgroundImage = {this.state.backgroundImage}\r\n                width = {this.state.width}\r\n                height = {this.state.height}\r\n            >\r\n                {this.props.children}\r\n            </Background>\r\n        )\r\n    } else if (this.props.mode === 'production'){\r\n\r\n        return (\r\n            <Background\r\n                key = {this.state.id}\r\n                ref  = {this.boxComponentRef}\r\n                data-name = {this.state.targetSection}\r\n                backgroundColor = {this.state.backgroundColor}\r\n                backgroundImage = {this.state.backgroundImage}\r\n                width = {this.state.width}\r\n                height = {this.state.height}\r\n            >\r\n            {this.props.children}\r\n            </Background>\r\n        )\r\n    }\r\n\r\n    }\r\n\r\n    componentDidUpdate = () => {\r\n        this.saveDataParent();\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.saveDataParent();\r\n        controllerStream.on(`EventChangeColorBackground${this.state.id}`, this.changeColor);\r\n        controllerStream.on(`EventSetBackgroundImage${this.state.id}`, this.setBackgroundImage);\r\n    };\r\n\r\n    componentWillUnmount = () => {\r\n        controllerStream.off(`EventChangeColorBackground${this.state.id}`, this.changeColor);\r\n        controllerStream.off(`EventSetBackgroundImage${this.state.id}`, this.setBackgroundImage);\r\n    };\r\n};\r\n\r\n\r\n\r\nexport default BackgroundComponent;","import React, {Fragment} from 'react';\r\nimport eventEmitter from '../../../EventEmitter';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport BackgroundComponent from '../components/Background';\r\nimport Loader from '../../loading/Loader';\r\n\r\nimport './MainBackground.scss';\r\n\r\nclass MainBackground extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        countComponents: PropTypes.number.isRequired, /** @Number last project */\r\n        menuActive: PropTypes.bool, /** @Bool active menu or unactive */\r\n        id: PropTypes.string.isRequired, /** @id current project */\r\n    };\r\n\r\n    state = {\r\n        targetSection: this.props.id,\r\n        editRedy: false,\r\n        component: null,\r\n        children: null,\r\n    };\r\n\r\n    changeMode = () => {\r\n        if (!this.state.editStart || this.props.id !== this.props.editComponentName) {\r\n            this.setState({\r\n                ...this.state,\r\n                editStart: true\r\n            }, () =>\r\n            eventEmitter.emit('EventModeEdit', {\r\n                ...this.state,\r\n                editStart: true,\r\n                targetSection: this.state.targetSection,\r\n            }));\r\n        }\r\n    };\r\n\r\n    refSection = null;\r\n    refSectionFunc = node => node ? this.refSection = {data: node.getBoundingClientRect(), node: node} : node;\r\n\r\n    render() {\r\n\r\n        if (this.props.mode === 'dev' && this.state.component){\r\n            return (\r\n                <Fragment>\r\n                    <section\r\n                        key = {this.props.sectionNumber}\r\n                        className = {`element${this.props.sectionNumber}`} \r\n                        ref={this.refSectionFunc}\r\n                        data-class = 'editable' \r\n                        onClick = {this.changeMode}\r\n                    >\r\n                        <BackgroundComponent \r\n                            mode = {this.props.mode}\r\n                            sectionNumber = {this.props.sectionNumber}\r\n                            countSection = {this.props.countSection}\r\n                            {...this.state.component}\r\n                        >\r\n                            {this.state.children || null}\r\n                        </BackgroundComponent>\r\n                        {!this.state.editStart &&\r\n                            <div className = 'warningEdit'><p>Click for start edit</p></div>\r\n                        }\r\n                    </section>\r\n                </Fragment>\r\n            );\r\n        } else if (this.props.mode === 'production' && this.state.component){\r\n            return (\r\n                <Fragment>\r\n                    <section \r\n                        key = {this.props.sectionNumber}\r\n                        ref={this.refSectionFunc} \r\n                        data-class = 'production'\r\n                    >\r\n                        <BackgroundComponent\r\n                            key = {this.props.sectionNumber}\r\n                            mode = {this.props.mode}\r\n                            sectionNumber = {this.props.sectionNumber}\r\n                            {...this.state.component}\r\n                        >\r\n                        {this.state.children || null}\r\n                        </BackgroundComponent>\r\n                    </section>\r\n                </Fragment>\r\n            );\r\n        }\r\n        else return <Loader type = {`${this.props.mode} components`} />;\r\n    }\r\n\r\n\r\n    componentDidMount = () => {\r\n        if (!this.state.component){ /** create bg */\r\n            let component = this.props.currentProjectsData.components.find(item =>\r\n                                            item.targetSection === this.props.id);\r\n            const children = this.props.componentJSX.filter(item => \r\n                item.targetSection === this.props.id && item.id !== component.id)\r\n                            .map(item => item.component);\r\n           this.setState({\r\n               ...this.state,\r\n               component: component,\r\n               children: children,\r\n           });\r\n        }\r\n    }\r\n\r\n    componentDidUpdate = (prevProps) => {\r\n        const needUpdate = this.props.countComponents !== prevProps.countComponents;\r\n        if (!this.state.component){ /** if need create new section */\r\n            let component = this.props.currentProjectsData.components.find(item =>\r\n                                            item.targetSection === this.props.id);\r\n            const children = this.props.componentJSX.filter(item => item.targetSection === this.props.id)\r\n                            .map(item => item.component);\r\n           this.setState({\r\n               ...this.state,\r\n               component: component,\r\n               children: children,\r\n           });\r\n        }\r\n        if (needUpdate){\r\n            const children = this.props.componentJSX.filter(item => item.targetSection === this.props.id)\r\n            children && this.setState({...this.state,children: children.map(item => item.component) });\r\n        }\r\n    }\r\n}\r\nexport default MainBackground;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport MainBackground from './MainBackground/MainBackground';\r\n\r\n\r\nconst Section = props => {\r\n    if (props.mode === 'dev'){\r\n    const {currentProjectsData} = props.userData;\r\n    const section = currentProjectsData.sectionsProject;\r\n\r\n            return section.map((item,i) => {\r\n                return (\r\n                        <MainBackground\r\n                            key = {item}\r\n                            componentJSX = {props.componentJSX}\r\n                            currentProjectsData = {currentProjectsData}\r\n                            editComponentName = {props.editComponentName}\r\n                            countComponents = {props.componentJSX.length}\r\n                            menuActive = {props.menuActive}\r\n                            sizeParentBox = {props.sizeParentBox}\r\n                            id = {item}\r\n                            countSection = {currentProjectsData.sectionsProject.length}\r\n                            sectionNumber = {i}\r\n                            mode = {props.mode}\r\n                        />\r\n                );\r\n            });\r\n    } else if (props.mode === 'production'){\r\n       const {section} = props;\r\n       const {currentProjectsData} = props;\r\n        return section.map((item,i) => {\r\n            return (\r\n                    <MainBackground\r\n                        key = {item}\r\n                        componentJSX = {props.componentsProdJSX}\r\n                        currentProjectsData = {currentProjectsData}\r\n                        editComponentName = {props.editComponentName}\r\n                        countComponents = {props.componentsProdJSX.length}\r\n                        sizeParentBox = {props.sizeParentBox}\r\n                        id = {item}\r\n                        sectionNumber = {i}\r\n                        mode = {props.mode}\r\n                    />\r\n            );\r\n        });\r\n    }\r\n}\r\n\r\nSection.propTypes = {\r\n    componentJSX: PropTypes.array, /// array with jsx components\r\n    editComponentName: PropTypes.string, // name current edit component\r\n    menuActive: PropTypes.bool, // build menu\r\n    mode: PropTypes.string.isRequired, // curent mode\r\n    sizeParentBox: PropTypes.object, // data with size main component\r\n    userData: PropTypes.object // users data\r\n}\r\n\r\nexport default Section;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport eventEmitter,{controllerStream} from '../../../EventEmitter';\r\nimport styled from 'styled-components';\r\n\r\n\r\nconst InputComponent = styled.input.attrs(props => {\r\n    if (props.mode !== 'production')\r\n    return ({\r\n        style: {\r\n            zIndex: props.indexZ ? '9999' : null,\r\n            left: props.coordX ? props.coordX : '45%',\r\n            top:  props.coordY ? props.coordY : '0%',\r\n        }\r\n    })\r\n})`\r\n    width: ${props => props.size ? props.size.w + 'px' : null};\r\n    color: white;\r\n    height: ${props => props.size ? props.size.h + 'px' : null};\r\n    font-size: ${props => props.fontSize ? props.fontSize + 'px' : null};\r\n    position: absolute;\r\n    background-color: ${props => props.color || null};\r\n    border: ${props => `1px solid ${props.color}`};\r\n    border-radius: ${props => props.borderRadius ? props.borderRadius + 'px' : null};\r\n    white-space: normal;\r\n    font-weight: bold;\r\n    transition: .3s transform linear;\r\n\r\n    :active {\r\n        border: ${props =>`2px dotted ${props.color}`};\r\n        transform: scale(1.05);\r\n    }\r\n`;\r\n\r\nconst ProductionStyle = styled(InputComponent)`\r\n    left: ${props => props.coordX ? props.coordX : '45%'};\r\n    top:  ${props => props.coordY ? props.coordY : '0%'};\r\n`;\r\n\r\n\r\nclass Input extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        id: PropTypes.oneOfType([\r\n            PropTypes.string,\r\n            PropTypes.number\r\n        ]).isRequired,\r\n        targetSection: PropTypes.string,\r\n        sizeParentBox: PropTypes.object,\r\n    }\r\n\r\n    state = {\r\n        id: this.props.id,\r\n        istrumentsActive: false,\r\n        getSizeBool: false,\r\n        countSection: 0,\r\n        borderRadius: this.props.borderRadius,\r\n        sectionNumber: 0,\r\n        typeInput: this.props.typeInput || 'button',\r\n        sizeParentBox: this.props.sizeParentBox,\r\n        targetSection: this.props.targetSection,\r\n        size: this.props.size && this.props.size.w ? this.props.size : {w: '100', h:'50'},\r\n        fontSize: this.props.fontSize || 20,\r\n        color: this.props.color || null,\r\n        shiftCoords: null,\r\n        content: this.props.content || 'Input',\r\n        posInput: this.props.coords.x ? {x: this.props.coords.x, y: this.props.coords.y} : null,\r\n        startDragNdrop: false,\r\n    }\r\n\r\n    openInputInstruments = event => {\r\n\r\n        const componentsPatternImage = {\r\n            id: this.state.id,\r\n            targetSection: this.state.targetSection,\r\n            typeInput: this.state.typeInput,\r\n            type: 'input',\r\n            color: this.state.color,\r\n            borderRadius: this.state.borderRadius,\r\n            zIndex: null,\r\n            size: {...this.state.size},\r\n            fontSize: this.state.fontSize,\r\n            content: this.state.content,\r\n            coords: {...this.state.posInput}, // x, y\r\n        }\r\n\r\n        eventEmitter.emit(`EventInstrumentPanel`,{\r\n            componentStats: componentsPatternImage,\r\n            targetSection: this.state.targetSection,\r\n            id: this.state.id,\r\n            sizeTextValue: this.state.size\r\n        });\r\n        this.setState({...this.state, istrumentsActive: true});\r\n        event.stopPropagation();\r\n    };\r\n\r\n    saveCoords = event => {\r\n        if (event.nativeEvent.which !== 1) return false;\r\n        const element = this.refInput.getBoundingClientRect();\r\n\r\n        const cords = {\r\n            left: element.left,\r\n            top: element.top,\r\n            width: element.right - element.left,\r\n            height: element.bottom - element.top\r\n        }\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            shiftCoords: {x: event.clientX - cords.left, y: event.clientY - cords.top},\r\n            startDragNdrop: !this.state.startDragNdrop ? true : false\r\n        });\r\n\r\n        event.stopPropagation();\r\n    };\r\n\r\n    changeSize = eventSize => {\r\n        this.setState({...this.state, size: eventSize.size});\r\n    };\r\n\r\n    changeColor = colorRGB => {\r\n\r\n        if (typeof colorRGB === 'string')\r\n            this.setState({\r\n                ...this.state,\r\n                color: colorRGB\r\n            });\r\n    };\r\n\r\n    changeSizeText = eventSize => {\r\n        this.setState({...this.state, fontSize: eventSize.size});\r\n    };\r\n\r\n    setBorderRadius = eventItem => {\r\n        let radius = eventItem.borderRadius > 200 ? 200 : eventItem.borderRadius;\r\n        radius = eventItem.borderDown < 0 ? 0 : eventItem.borderRadius;\r\n            this.setState({\r\n                ...this.state,\r\n                borderRadius: radius\r\n            });\r\n    };\r\n\r\n    changeContent = eventItem => {\r\n        let booldContent = eventItem.content || eventItem.content === '';\r\n        if (booldContent)\r\n            this.setState({\r\n                ...this.state,\r\n                content: eventItem.content\r\n            });\r\n    }\r\n\r\n\r\n\r\n    checkPivotPosition = (coordX, coordY) => {\r\n\r\n        const element = this.refInput.getBoundingClientRect();\r\n        const borderTopLeft = 0;\r\n        const borderDown = 800 - element.height;\r\n        const borderRight = this.props.sizeParentBox.width - element.width;\r\n\r\n        if (coordY < borderTopLeft) coordY = borderTopLeft;\r\n        if (coordY > borderDown) coordY = borderDown;\r\n        if (coordX < borderTopLeft) coordX = borderTopLeft;\r\n        if (coordX > borderRight) coordX = borderRight;\r\n\r\n        return {x: coordX, y: coordY};\r\n    }\r\n\r\n\r\n    move = (x,y) => this.setState({...this.state, posInput: {x: x, y: y}});\r\n\r\n    moveInput = event => {\r\n\r\n        if (this.state.startDragNdrop && this.state.istrumentsActive){\r\n            let num = this.state.sectionNumber;\r\n            if (this.state.sectionNumber === 1 && this.state.countSection-1 === this.state.sectionNumber)  \r\n                num = this.state.sectionNumber + 1;\r\n            let xItem = event.clientX - (this.props.sizeParentBox.left  * num);\r\n            let yItem = event.clientY - (this.props.sizeParentBox.top * num);\r\n\r\n            let coordX = xItem - this.state.shiftCoords.x;\r\n            let coordY = yItem - this.state.shiftCoords.y;\r\n\r\n            let coords = this.checkPivotPosition(coordX,coordY);\r\n\r\n            let convertToPercentX = coords.x * 100 / this.state.sizeParentBox.width;\r\n            let convertToPercentY = coords.y * 100 / this.state.sizeParentBox.height;\r\n\r\n            this.move(convertToPercentX.toFixed(2) + '%',\r\n                      convertToPercentY.toFixed(2) + '%');\r\n    }\r\n        event.stopPropagation();\r\n    };\r\n\r\n    stopDragNdrop = event => {\r\n        if (this.state.startDragNdrop) {\r\n            this.setState({...this.state, startDragNdrop: false})\r\n            controllerStream.emit(`EventUpdatePosition${this.state.id}`, this.state.posInput);\r\n        }\r\n        event.stopPropagation();\r\n    };\r\n    //currentProjectsData.sectionsProject.length\r\n\r\n    saveSize = event => {\r\n        const {size} = event;\r\n        if (!this.state.getSizeBool){\r\n        this.setState({\r\n            ...this.state,\r\n            getSizeBool: true,\r\n            countSection: event.countSection,\r\n            sectionNumber: event.sectionNumber,\r\n            sizeParentBox: {width: size.width, height: size.height}});\r\n        } else controllerStream.off(`EventSaveWidth${this.state.targetSection}`,this.saveSize);\r\n    }\r\n\r\n    setWidth = eventItem => {\r\n        const {width} = eventItem;\r\n        this.setState({...this.state, \r\n            size: {\r\n                ...this.state.size,\r\n                w: width,\r\n            }\r\n        });\r\n    }\r\n\r\n    setType = eventItem => {\r\n        this.setState({\r\n            ...this.state, \r\n            typeInput: eventItem\r\n        });\r\n    }\r\n\r\n    setHeight = eventItem => {\r\n        const {height} = eventItem;\r\n        this.setState({...this.state, \r\n            size: {\r\n                ...this.state.size,\r\n                h: height,\r\n            }\r\n        });\r\n    }\r\n\r\n    refInput = null;\r\n    refInputComponent = node => this.refInput = node;\r\n\r\n    render(){\r\n\r\n        if (this.props.mode === 'dev'){\r\n            return (\r\n                <InputComponent\r\n                    type = {this.state.typeInput}\r\n                    value = {this.state.content}\r\n                    ref = {this.refInputComponent}\r\n                    size = {this.state.size}\r\n                    color = {this.state.color}\r\n                    borderRadius = {this.state.borderRadius}\r\n                    fontSize = {this.state.fontSize}\r\n                    onClick = {this.openInputInstruments}\r\n                    onMouseDown = {this.saveCoords}\r\n                    onMouseMove= {this.moveInput}\r\n                    onMouseLeave = {this.stopDragNdrop}\r\n                    onMouseUp = {this.stopDragNdrop}\r\n                    onDragStart = {this.stop}\r\n                    coordX = {this.state.posInput ? this.state.posInput.x : null}\r\n                    coordY = {this.state.posInput ? this.state.posInput.y : null}\r\n                    indexZ = {this.state.startDragNdrop}\r\n                    data-imagecomponentwrapper\r\n                />\r\n            )\r\n        } else if (this.props.mode === 'production'){\r\n\r\n            return (\r\n                <ProductionStyle\r\n                    type = {this.state.typeInput}\r\n                    value = {this.state.content}\r\n                    ref = {this.refInputComponent}\r\n                    size = {this.state.size}\r\n                    color = {this.state.color}\r\n                    fontSize = {this.state.fontSize}\r\n                    borderRadius = {this.state.borderRadius}\r\n                    coordX = {this.state.posInput ? this.state.posInput.x : null}\r\n                    coordY = {this.state.posInput ? this.state.posInput.y : null}\r\n                    indexZ = {this.state.startDragNdrop}\r\n                    mode = {this.props.mode}\r\n                />\r\n            )\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        controllerStream.on(`EventSaveWidth${this.state.targetSection}`, this.saveSize);\r\n        controllerStream.on(`EventSetBorderRadius${this.state.id}`, this.setBorderRadius);\r\n        controllerStream.on(`EventChangecolor${this.state.id}`, this.changeColor);\r\n        controllerStream.on(`EventChangeSize${this.state.id}`, this.changeSize);\r\n        controllerStream.on(`EventChangeSizeText${this.state.id}`, this.changeSizeText);\r\n        controllerStream.on(`EventChangeContentText${this.state.id}`, this.changeContent);\r\n        controllerStream.on(`EventSetWidth${this.state.id}`, this.setWidth);\r\n        controllerStream.on(`EventSetType${this.state.id}`, this.setType);\r\n        controllerStream.on(`EventSetHeight${this.state.id}`, this.setHeight);\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        controllerStream.off(`EventSaveWidth${this.state.targetSection}`,this.saveSize);\r\n        controllerStream.off(`EventSetBorderRadius${this.state.id}`, this.setBorderRadius);\r\n        controllerStream.off(`EventChangeSize${this.state.id}`, this.changeSize);\r\n        controllerStream.off(`EventChangeSizeText${this.state.id}`, this.changeSizeText);\r\n        controllerStream.off(`EventChangeContentText${this.state.id}`, this.changeContent);\r\n        controllerStream.off(`EventChangecolor${this.state.id}`, this.changeColor);\r\n        controllerStream.off(`EventSetWidth${this.state.id}`, this.setWidth);\r\n        controllerStream.off(`EventSetType${this.state.id}`, this.setType);\r\n        controllerStream.off(`EventSetHeight${this.state.id}`, this.setHeight);\r\n    }\r\n}\r\n\r\nexport default Input;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport eventEmitter,{controllerStream} from '../../../EventEmitter';\r\nimport styled from 'styled-components';\r\n\r\nconst WrapperMedia = styled.div.attrs(props => {\r\n    if (props.mode !== 'production')\r\n    return ({\r\n        style: {\r\n            zIndex: props.indexZ ? '9999' : null,\r\n            left: props.coordX ? props.coordX : '45%',\r\n            top:  props.coordY ? props.coordY : '0%',\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            padding: props.mode === 'dev' ? '40px' : null\r\n        }\r\n    })\r\n})`\r\n    width: ${props => props.size.w ? props.size.w + '%' : '30%'};\r\n    height: ${props => props.size.h ? props.size.h + '%' : '50%'};\r\n    position: absolute;\r\n    background: ${props => props.mode === 'dev' ? `url(${process.env.PUBLIC_URL}/img/media.svg)` : null};\r\n    background-size: cover;\r\n    border: ${props => props.mode === 'dev' ? `1px solid red` : null};\r\n    padding: 10px;\r\n`;\r\nconst Media = styled.iframe`\r\n    width: 100%;\r\n    height: 100%;\r\n    z-index: ${props => props.zIndex ? '0' : '-1'};\r\n`;\r\n\r\nconst ProductionStyle = styled(WrapperMedia)`\r\n    left: ${props => props.coordX ? props.coordX : '45%'};\r\n    top:  ${props => props.coordY ? props.coordY : '0%'};\r\n`;\r\n\r\nclass MediaComponent extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        id: PropTypes.oneOfType([\r\n            PropTypes.string,\r\n            PropTypes.number\r\n        ]).isRequired,\r\n        targetSection: PropTypes.string,\r\n        sizeParentBox: PropTypes.object,\r\n        content: PropTypes.string,\r\n    }\r\n\r\n    state = {\r\n        targetSection: this.props.targetSection,\r\n        id : this.props.id,\r\n        sizeParentBox: this.props.sizeParentBox,\r\n        shiftCoords: null,\r\n        countSection: 0,\r\n        size: this.props.size ? this.props.size : {w: null, h: null},\r\n        posMedia: this.props.coords.x ? {x: this.props.coords.x, y: this.props.coords.y} : null,\r\n        startDragNdrop: false,\r\n        istrumentsActive: false,\r\n        drawContent: false,\r\n        sectionNumber: this.props.sectionNumber,\r\n        content: this.props.content ? this.props.content : null\r\n    }\r\n\r\n    openMediaInstruments = event => {\r\n\r\n        const componentsPatternMedia = {\r\n            id: this.state.id,\r\n            size: this.state.size,\r\n            targetSection: this.state.targetSection,\r\n            type: 'media',\r\n            zIndex: null,\r\n            content: this.state.content,\r\n            coords: {...this.state.posMedia}, // x, y\r\n        }\r\n\r\n        eventEmitter.emit('EventInstrumentPanel',{\r\n            componentStats: componentsPatternMedia,\r\n            targetSection: this.state.targetSection,\r\n            id: this.state.id,\r\n            size: this.state.size,\r\n        });\r\n        this.setState({...this.state, istrumentsActive: true});\r\n        event.stopPropagation();\r\n    }\r\n\r\n    saveCoords = event => {\r\n        if (event.nativeEvent.which !== 1) return false;\r\n        const element = this.refMedia.getBoundingClientRect();\r\n        const cords = {\r\n            left: element.left,\r\n            top: element.top,\r\n            width: element.right - element.left,\r\n            height: element.bottom - element.top\r\n        }\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            shiftCoords: {x: event.clientX - cords.left, y: event.clientY - cords.top},\r\n            startDragNdrop: !this.state.startDragNdrop ? true : false\r\n        });\r\n\r\n        event.stopPropagation();\r\n    };\r\n\r\n    setWidth = eventItem => {\r\n        const {width} = eventItem;\r\n        this.setState({...this.state, \r\n            size: {\r\n                ...this.state.size,\r\n                w: width,\r\n            }\r\n        });\r\n    }\r\n\r\n    setHeight = eventItem => {\r\n        const {height} = eventItem;\r\n        this.setState({...this.state, \r\n            size: {\r\n                ...this.state.size,\r\n                h: height,\r\n            }\r\n        });\r\n    }\r\n\r\n    checkPivotPosition = (coordX, coordY) => {\r\n\r\n        const element = this.refMedia.getBoundingClientRect();\r\n        const borderTopLeft = 0;\r\n        const borderDown = 800 - element.height;\r\n        const borderRight = this.props.sizeParentBox.width - element.width;\r\n\r\n        if (coordY < borderTopLeft) coordY = borderTopLeft;\r\n        if (coordY > borderDown) coordY = borderDown;\r\n        if (coordX < borderTopLeft) coordX = borderTopLeft;\r\n        if (coordX > borderRight) coordX = borderRight;\r\n\r\n        return {x: coordX, y: coordY};\r\n    }\r\n\r\n\r\n    move = (x,y) => this.setState({...this.state, posMedia: {x: x, y: y}});\r\n\r\n    moveMedia = event => {\r\n\r\n        if (this.state.startDragNdrop && this.state.istrumentsActive){\r\n\r\n            let xItem = event.clientX - (this.props.sizeParentBox.left  * this.state.sectionNumber);\r\n            let yItem = event.clientY - (this.props.sizeParentBox.top * this.state.sectionNumber);\r\n\r\n            let coordX = xItem - this.state.shiftCoords.x;\r\n            let coordY = yItem - this.state.shiftCoords.y;\r\n\r\n            let coords = this.checkPivotPosition(coordX,coordY);\r\n\r\n            let convertToPercentX = coords.x * 100 / this.state.sizeParentBox.width;\r\n            let convertToPercentY = coords.y * 100 / this.state.sizeParentBox.height;\r\n\r\n            this.move(convertToPercentX.toFixed(2) + '%',\r\n                      convertToPercentY.toFixed(2) + '%');\r\n    }\r\n        event.stopPropagation();\r\n    };\r\n\r\n    stopDragNdrop = event => {\r\n        if (this.state.startDragNdrop) {\r\n            this.setState({...this.state, startDragNdrop: false})\r\n            controllerStream.emit(`EventUpdatePosition${this.state.id}`, this.state.posMedia);\r\n        }\r\n        event.stopPropagation();\r\n    };\r\n\r\n    setContent = event => {\r\n        const {iframe} = event;\r\n        this.setState({...this.state, content: iframe});\r\n    };\r\n\r\n\r\n    saveSize = event => {\r\n        const {size} = event;\r\n        if (!this.state.getSizeBool){\r\n        this.setState({\r\n            ...this.state,\r\n            getSizeBool: true,\r\n            countSection: event.countSection,\r\n            sectionNumber: event.sectionNumber + 1,\r\n            sizeParentBox: {width: size.width, height: size.height}});\r\n        } else controllerStream.off(`EventSaveWidth${this.state.targetSection}`,this.saveSize);\r\n    }\r\n\r\n    refMedia = null;\r\n    refMediaComponent = node => this.refMedia = node;\r\n\r\n    render(){\r\n        const url = 'https://www.youtube.com/embed/';\r\n\r\n        if (this.props.mode === 'dev'){\r\n            return (\r\n                <WrapperMedia\r\n                    ref = {this.refMediaComponent}\r\n                    onClick={this.openMediaInstruments}\r\n                    onMouseDown = {this.saveCoords}\r\n                    onMouseMove= {this.moveMedia}\r\n                    onMouseLeave = {this.stopDragNdrop}\r\n                    onMouseUp = {this.stopDragNdrop}\r\n                    onDragStart = {this.stop}\r\n                    mode = {this.props.mode}\r\n                    indexZ = {this.state.startDragNdrop}\r\n                    coordX = {this.state.posMedia ? this.state.posMedia.x : null}\r\n                    coordY = {this.state.posMedia ? this.state.posMedia.y : null}\r\n                    size = {this.state.size}\r\n                >\r\n                {!this.state.startDragNdrop ? \r\n                    <Media\r\n                        src= {this.state.content ? url + this.state.content : null }\r\n                        drawContent = {this.state.drawContent}\r\n                        width = {this.state.width} \r\n                        height = {this.state.height}\r\n                        zIndex = {this.state.content}\r\n                        allowfullscreen\r\n                    ></Media> : null\r\n                }\r\n                </WrapperMedia>\r\n            )\r\n        } else if (this.props.mode === 'production'){\r\n            return (\r\n                <ProductionStyle\r\n                    ref = {this.refMediaComponent}\r\n                    indexZ = {this.state.startDragNdrop}\r\n                    size = {this.state.size}\r\n                    coordX = {this.state.posMedia ? this.state.posMedia.x : null}\r\n                    coordY = {this.state.posMedia ? this.state.posMedia.y : null}\r\n                    mode = {this.props.mode}\r\n                >\r\n                {!this.state.startDragNdrop ? \r\n                    <Media\r\n                        src= {this.state.content ? url + this.state.content : null }\r\n                        drawContent = {this.state.drawContent}\r\n                        width = {this.state.width} \r\n                        height = {this.state.height}\r\n                        zIndex = {this.state.content}\r\n                        mode = {this.props.mode}\r\n                        allowfullscreen\r\n                    ></Media> : null\r\n                }\r\n                </ProductionStyle>\r\n            )\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        controllerStream.on(`EventSetContentMedia${this.state.id}`, this.setContent);\r\n        controllerStream.on(`EventSaveWidth${this.state.targetSection}`, this.saveSize);\r\n        controllerStream.on(`EventSetWidth${this.state.id}`, this.setWidth);\r\n        controllerStream.on(`EventSetHeight${this.state.id}`, this.setHeight); \r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        controllerStream.off(`EventSaveWidth${this.state.targetSection}`,this.saveSize);\r\n        controllerStream.off(`EventSetContentMedia${this.state.id}`, this.setContent);\r\n        controllerStream.off(`EventSetWidth${this.state.id}`, this.setWidth);\r\n        controllerStream.off(`EventSetHeight${this.state.id}`, this.setHeight); \r\n    }\r\n}\r\n\r\nexport default MediaComponent;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport eventEmitter,{controllerStream} from '../../../EventEmitter';\r\nimport styled from 'styled-components';\r\n\r\n\r\nconst WrapperImg = styled.div.attrs(props => {\r\n    if (props.mode !== 'production')\r\n    return ({\r\n        style: {\r\n            zIndex: props.indexZ ? '9999' : null,\r\n            transform: `rotateZ(${props.rotate}deg) scale(${props.scale})`,\r\n            left: props.coordX ? props.coordX : '45%',\r\n            top:  props.coordY ? props.coordY : '0',\r\n            transition: `transform  0.3s linear`,\r\n        }\r\n    })\r\n})`\r\n    width: ${props => props.size ? props.size.w + '%' : '30%'};\r\n    height: ${props => props.size ? props.size.h + '%' : '50%'};\r\n    position: absolute;\r\n`;\r\n\r\nconst ImageStyle = styled.img`\r\n    width: 100%;\r\n    height: 100%;\r\n    opacity: ${props => props.opacity};\r\n    border-radius: ${props => props.borderRadius}px;\r\n    position: absolute;\r\n`;\r\n\r\nconst ProductionStyle = styled(WrapperImg)`\r\n    left: ${props => props.coordX ? props.coordX : '50%'};\r\n    top:  ${props => props.coordY};\r\n    transform: rotate(${props => props.rotate}deg) scale(${props => props.scale});\r\n`;\r\n\r\nclass Image extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        id: PropTypes.oneOfType([\r\n            PropTypes.string,\r\n            PropTypes.number\r\n        ]).isRequired,\r\n        targetSection: PropTypes.string,\r\n        sizeParentBox: PropTypes.object,\r\n    }\r\n\r\n    state = {\r\n        id: this.props.id,\r\n        istrumentsActive: false,\r\n        getSizeBool: false,\r\n        countSection: 0,\r\n        opacity: this.props.opacity || 1,\r\n        transformValue: this.props.rotate || 0,\r\n        scaleValue: this.props.scale || 1,\r\n        sectionNumber: 0,\r\n        borderRadius: this.props.borderRadius || 0,\r\n        sizeParentBox: this.props.sizeParentBox,\r\n        targetSection: this.props.targetSection,\r\n        path: this.props.image ? this.props.image : this.props.path,\r\n        size: this.props.size ? this.props.size : {w: 30, h: 50},\r\n        shiftCoords: null,\r\n        posImage: this.props.coords.x ? {x: this.props.coords.x, y: this.props.coords.y} : null,\r\n        startDragNdrop: false,\r\n    }\r\n\r\n    openImageInstruments = event => {\r\n        /** open panel instruments */\r\n        const componentsPatternImage = {\r\n            id: this.state.id,\r\n            targetSection: this.state.targetSection,\r\n            size: {...this.state.size},\r\n            type: 'image',\r\n            rotate: this.state.transformValue,\r\n            scale: this.state.scaleValue,\r\n            borderRadius: this.state.borderRadius,\r\n            opacity: this.state.opacity,\r\n            zIndex: null,\r\n            image: this.state.path,\r\n            coords: {...this.state.posImage}, // x, y\r\n        }\r\n\r\n        eventEmitter.emit(`EventInstrumentPanel`,{\r\n            componentStats: componentsPatternImage,\r\n            targetSection: this.state.targetSection,\r\n            id: this.state.id,\r\n            sizeTextValue: this.state.size\r\n        });\r\n        this.setState({...this.state, istrumentsActive: true});\r\n        event.stopPropagation();\r\n    };\r\n\r\n    saveCoords = event => {\r\n          /** save current coords */\r\n        if (event.nativeEvent.which !== 1) return false;\r\n        const element = this.refImage.getBoundingClientRect();\r\n\r\n        const cords = {\r\n            left: element.left,\r\n            top: element.top,\r\n            width: element.right - element.left,\r\n            height: element.bottom - element.top\r\n        }\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            shiftCoords: {x: event.clientX - cords.left, y: event.clientY - cords.top},\r\n            startDragNdrop: !this.state.startDragNdrop ? true : false\r\n        });\r\n\r\n        event.stopPropagation();\r\n    };\r\n\r\n    checkPivotPosition = (coordX, coordY) => {\r\n          /** Checking the boundaries */\r\n        const element = this.refImage.getBoundingClientRect();\r\n        const borderTopLeft = 0;\r\n        const borderDown = 800 - element.height;\r\n        const borderRight = this.props.sizeParentBox.width - element.width;\r\n\r\n        if (coordY < borderTopLeft) coordY = borderTopLeft;\r\n        if (coordY > borderDown) coordY = borderDown;\r\n        if (coordX < borderTopLeft) coordX = borderTopLeft;\r\n        if (coordX > borderRight) coordX = borderRight;\r\n\r\n        return {x: coordX, y: coordY};\r\n    }\r\n\r\n    rotateEvent = eventItem => {\r\n         /** transform - rotate */\r\n        const angle = eventItem.angle;\r\n        this.setState({\r\n            ...this.state,\r\n            transformValue: angle,\r\n        });\r\n    }\r\n\r\n    scaleEvent = eventItem => {\r\n         /** transform - scale */\r\n        const scale = eventItem.scale;\r\n        this.setState({\r\n            ...this.state,\r\n            scaleValue: scale,\r\n        });\r\n    }\r\n\r\n    move = (x,y) => this.setState({...this.state, posImage: {x: x, y: y}});\r\n\r\n    moveText = event => {\r\n          /** move element event */\r\n        if (this.state.startDragNdrop && this.state.istrumentsActive){ /** if key down - false */\r\n            const element = this.refImage.getBoundingClientRect();\r\n            let xItem = event.clientX - (this.props.sizeParentBox.left  * this.state.sectionNumber);\r\n            let yItem = event.clientY - (this.props.sizeParentBox.top * this.state.sectionNumber);\r\n            let factorCoord = this.diffAngle(parseInt(this.state.transformValue),element.height,element.width);\r\n\r\n            let coordX = xItem - this.state.shiftCoords.x + factorCoord.xFacotr;\r\n            let coordY = yItem - 61 - this.state.shiftCoords.y + factorCoord.yFactor;\r\n\r\n            let coords = this.checkPivotPosition(coordX,coordY);\r\n\r\n            let convertToPercentX = coords.x * 100 / this.state.sizeParentBox.width;\r\n            let convertToPercentY = coords.y * 100 / this.state.sizeParentBox.height;\r\n\r\n            this.move(convertToPercentX.toFixed(2) + '%',\r\n                      convertToPercentY.toFixed(2) + '%');\r\n    }\r\n        event.stopPropagation();\r\n    };\r\n\r\n\r\n    diffAngle = (transform, height, width) => {\r\n          /** if user use transform rotate - coordinate recount */\r\n        let powHeight = height**2;\r\n        let powWidth =  width**2;\r\n\r\n        let pythagoras = Math.sqrt(powHeight + powWidth) / 2;\r\n        let _angle = Math.atan(height / width);\r\n        let angle = Math.atan(width / height);\r\n\r\n        let _biasFactor = 1;\r\n        let biasFactor = 1;\r\n\r\n        if (transform < 0 || transform > 180)\r\n            _biasFactor = - 1;\r\n        if (transform > 90 && transform < 270)\r\n            biasFactor= -1;\r\n\r\n        transform = transform * (Math.PI/180);\r\n\r\n        let sinX = Math.sin(biasFactor * angle + _biasFactor * transform);\r\n        let sinY = Math.sin(biasFactor* _angle + _biasFactor * transform);\r\n\r\n        let xFacotr = pythagoras*(-Math.sin(angle)+sinX);\r\n        let yFactor = pythagoras*(-Math.sin(_angle)+sinY);\r\n\r\n        return {xFacotr, yFactor}\r\n    };\r\n\r\n    stopDragNdrop = event => {\r\n        /** end move element */\r\n        if (this.state.startDragNdrop) {\r\n            this.setState({...this.state, startDragNdrop: false})\r\n            controllerStream.emit(`EventUpdatePosition${this.state.id}`, this.state.posImage);\r\n        }\r\n        event.stopPropagation();\r\n    };\r\n\r\n    setCurrentImage = event => {\r\n        /** set content */\r\n        const {urlFull} = event;\r\n        this.setState({...this.state, path: urlFull});\r\n    };\r\n\r\n    setWidth = eventItem => {\r\n        /** set size w */\r\n        const {width} = eventItem;\r\n        this.setState({...this.state, \r\n            size: {\r\n                ...this.state.size,\r\n                w: width,\r\n            }\r\n        });\r\n    }\r\n\r\n    setHeight = eventItem => {\r\n          /** set size h */\r\n        const {height} = eventItem;\r\n        this.setState({...this.state, \r\n            size: {\r\n                ...this.state.size,\r\n                h: height,\r\n            }\r\n        });\r\n    }\r\n\r\n    saveSize = event => {\r\n         /** save sizes  */\r\n        const {size} = event;\r\n        if (!this.state.getSizeBool){\r\n        this.setState({\r\n            ...this.state,\r\n            getSizeBool: true,\r\n            countSection: event.countSection,\r\n            sectionNumber: event.sectionNumber,\r\n            sizeParentBox: {width: size.width, height: size.height}});\r\n        } else controllerStream.off(`EventSaveWidth${this.state.targetSection}`,this.saveSize);\r\n    }\r\n\r\n    setBorderRadius = eventItem => {\r\n        //** saet border-radius */\r\n        let radius = eventItem.borderRadius > 200 ? 200 : eventItem.borderRadius;\r\n        radius = eventItem.borderDown < 0 ? 0 : eventItem.borderRadius;\r\n        this.setState({\r\n            ...this.state,\r\n            borderRadius: radius\r\n        });\r\n    };\r\n\r\n    setOpacity = eventItem => {\r\n        //** saet opacity */\r\n        let opacity = eventItem.opacity > 1 ? 1 : eventItem.opacity;\r\n        opacity = eventItem.opacity < 0 ? 0 : eventItem.opacity;\r\n            this.setState({\r\n                ...this.state,\r\n                opacity: opacity\r\n            });\r\n    }\r\n\r\n    stopDrag = event => {\r\n        event.preventDefault();\r\n    }\r\n \r\n    refImage = null;\r\n    refImageComponent = node => this.refImage = node;\r\n\r\n    render(){\r\n\r\n        if (this.props.mode === 'dev'){\r\n            return (\r\n                <WrapperImg\r\n                ref = {this.refImageComponent}\r\n                size = {this.state.size}\r\n                rotate = {this.state.transformValue}\r\n                scale = {this.state.scaleValue}\r\n                onClick = {this.openImageInstruments}\r\n                onMouseDown = {this.saveCoords}\r\n                onMouseMove= {this.moveText}\r\n                onMouseLeave = {this.stopDragNdrop}\r\n                onMouseUp = {this.stopDragNdrop}\r\n                onDragStart = {this.stopDrag}\r\n                coordX = {this.state.posImage ? this.state.posImage.x : null}\r\n                coordY = {this.state.posImage ? this.state.posImage.y : null}\r\n                indexZ = {this.state.startDragNdrop}\r\n                data-imagecomponentwrapper\r\n                >\r\n                    <ImageStyle\r\n                        data-imagecomponent\r\n                        borderRadius = {this.state.borderRadius}\r\n                        onDragStart = {this.stopDrag}\r\n                        opacity = {this.state.opacity}\r\n                        src = {this.state.path}\r\n                        alt = 'img'\r\n                    />\r\n                </WrapperImg>\r\n            )\r\n        } else if (this.props.mode === 'production'){\r\n            return (\r\n                <ProductionStyle\r\n                ref = {this.refImageComponent}\r\n                size = {this.state.size}\r\n                rotate = {this.state.transformValue}\r\n                scale = {this.state.scaleValue}\r\n                mode = {this.props.mode}\r\n                coordX = {this.state.posImage ? this.state.posImage.x : null}\r\n                coordY = {this.state.posImage ? this.state.posImage.y : null}\r\n                indexZ = {this.state.startDragNdrop}\r\n                >\r\n                    <ImageStyle\r\n                        borderRadius = {this.state.borderRadius}\r\n                        opacity = {this.state.opacity}\r\n                        crossOrigin = \"anonymous\"\r\n                        src = {this.state.path}\r\n                        alt = 'img'\r\n                    />\r\n                </ProductionStyle>\r\n            )\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        controllerStream.on(`EventSetCurrentImage${this.state.id}`, this.setCurrentImage);\r\n        controllerStream.on(`EventSetOpacity${this.state.id}`, this.setOpacity);\r\n        controllerStream.on(`EventSetBorderRadius${this.state.id}`,this.setBorderRadius);\r\n        controllerStream.on(`EventSetWidth${this.state.id}`, this.setWidth);\r\n        controllerStream.on(`EventSetHeight${this.state.id}`, this.setHeight); \r\n        controllerStream.on(`EventResize${this.state.id}`,this.rotateEvent);\r\n        controllerStream.on(`EventScale${this.state.id}`,this.scaleEvent);\r\n        controllerStream.on(`EventSaveWidth${this.state.targetSection}`, this.saveSize);\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n\r\n        controllerStream.off(`EventSetOpacity${this.state.id}`, this.setOpacity);\r\n        controllerStream.off(`EventSetBorderRadius${this.state.id}`,this.setBorderRadius);\r\n        controllerStream.off(`EventSetCurrentImage${this.state.id}`, this.setCurrentImage);\r\n        controllerStream.off(`EventSetWidth${this.state.id}`, this.setWidth);\r\n        controllerStream.off(`EventSetHeight${this.state.id}`, this.setHeight); \r\n        controllerStream.off(`EventResize${this.state.id}`,this.rotateEvent);\r\n        controllerStream.off(`EventScale${this.state.id}`,this.scaleEvent);\r\n        controllerStream.off(`EventSaveWidth${this.state.targetSection}`,this.saveSize);\r\n    }\r\n}\r\n\r\nexport default Image;","\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport eventEmitter,{controllerStream} from '../../../EventEmitter';\r\nimport Events from 'events';\r\nimport styled from 'styled-components';\r\n\r\nimport './components.scss';\r\n\r\n\r\n\r\nconst WrapperText = styled.div.attrs(props => {\r\n    if (props.mode !== 'production')\r\n    return ({\r\n        style: {\r\n            zIndex: props.indexZ ? '9999' : null,\r\n            transform: `rotateZ(${props.rotate}deg) scale(${props.scale})`,\r\n            left: props.coordX ? props.coordX : '50%',\r\n            top:  props.coordY,\r\n            transition: `transform  0.3s linear`,\r\n        }\r\n    })\r\n})`\r\n    position: absolute;\r\n    font-size: ${props => props.size ? props.size : '120px'};\r\n    color: ${props => props.textColor};\r\n    text-align: center;\r\n    margin: 0;\r\n    word-break: break-all;\r\n`;\r\n\r\nconst TextStyle = styled.p`\r\n    width: 100%;\r\n    height: 100%;\r\n    font-family: ${props => props.font};\r\n    text-align: center;\r\n    margin: 0;\r\n    user-select: none;\r\n`;\r\n\r\n\r\nconst ProductionStyle = styled(WrapperText)`\r\n    left: ${props => props.coordX ? props.coordX : '50%'};\r\n    top:  ${props => props.coordY};\r\n    transform: rotate(${props => props.rotate}deg) scale(${props => props.scale});\r\n`;\r\n\r\n\r\nclass TextComponent extends React.PureComponent {\r\n\r\n    resizeStream = new Events();\r\n\r\n    static propTypes = {\r\n        id: PropTypes.oneOfType([\r\n            PropTypes.string,\r\n            PropTypes.number\r\n        ]).isRequired,\r\n        targetSection: PropTypes.string,\r\n        sizeParentBox: PropTypes.object,\r\n        mode: PropTypes.string.isRequired,\r\n    }\r\n\r\n    state = {\r\n        id: this.props.id,\r\n        istrumentsActive: false,\r\n        isHaveSize: false,\r\n        parent: this.props.sizeParentBox,\r\n        targetSection: this.props.targetSection,\r\n        colorText: this.props.color,\r\n        sizeText: this.props.fontSize || this.props.size,\r\n        shiftCoords: null,\r\n        position: this.props.coords,\r\n        transformValue: this.props.rotate || 0,\r\n        scaleValue: this.props.scale || 1,\r\n        font: this.props.font ? this.props.font : 'Arial',\r\n        startDragNdrop: false,\r\n        contentText: this.props.content ? this.props.content : null,\r\n        countSection: 0,\r\n        sectionNumber: 0,\r\n        getSizeBool: false,\r\n    }\r\n\r\n    openTitleInstruments = event => {\r\n         const componentsPatternText = {\r\n            id: this.state.id,\r\n            targetSection: this.state.targetSection,\r\n            type: 'text',\r\n            rotate: this.state.transformValue,\r\n            scale: this.state.scaleValue,\r\n            font: this.state.font,\r\n            color: this.state.colorText,\r\n            fontSize: this.state.sizeText || 120,\r\n            content: this.state.contentText,\r\n            coords: {...this.state.position}, // x, y\r\n        };\r\n        eventEmitter.emit(`EventInstrumentPanel`,{\r\n                type: 'text',\r\n                targetSection: this.state.targetSection,\r\n                id: this.state.id,\r\n                componentStats: componentsPatternText,\r\n                sizeTextValue: this.state.sizeText\r\n        });\r\n        this.setState({...this.state, istrumentsActive: true});\r\n        event.stopPropagation();\r\n    }\r\n\r\n    changeColorText = colorRGB => {\r\n        if (typeof colorRGB === 'string')\r\n            this.setState({\r\n                ...this.state,\r\n                colorText: colorRGB\r\n            });\r\n    };\r\n\r\n    changeSizeText = eventSize => {\r\n        this.setState({...this.state, sizeText: eventSize.size});\r\n    };\r\n\r\n    saveSize = event => {\r\n        const {size} = event;\r\n        if (!this.state.getSizeBool){\r\n        this.setState({\r\n            ...this.state,\r\n            getSizeBool: true,\r\n            countSection: event.countSection,\r\n            sectionNumber: event.sectionNumber,\r\n            parent: {width: size.width, height: size.height}});\r\n        } else controllerStream.off(`EventSaveWidth${this.state.targetSection}`,this.saveSize);\r\n    }\r\n\r\n    changeContentText = eventContent => {\r\n        let booldContent = eventContent.content || eventContent.content === '';\r\n        if (booldContent)\r\n            this.setState({\r\n                ...this.state,\r\n                contentText: eventContent.content\r\n            });\r\n    };\r\n\r\n    saveCoords = event => {\r\n        const element = this.refText.getBoundingClientRect();\r\n        const cords = {\r\n            left: element.left,\r\n            top: element.top,\r\n            width: element.right - element.left,\r\n            height: element.bottom - element.top\r\n        }\r\n\r\n        const resizeStart = event.target.classList[0] === 'resizeDoted'\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            shiftCoords: {x: event.clientX - cords.left, y: event.clientY - cords.top},\r\n            startDragNdrop: !this.state.startDragNdrop ? true : false,\r\n            resizeStart: resizeStart,\r\n        });\r\n\r\n        event.stopPropagation();\r\n    };\r\n\r\n    setFont = eventItem => {\r\n        /** set type font */\r\n        this.setState({\r\n            ...this.state,\r\n            font: eventItem.font\r\n        });\r\n    };\r\n\r\n    checkPivotPosition = (coordX, coordY) => {\r\n        const element = this.refText.getBoundingClientRect();\r\n        const borderTopLeft = 0;\r\n        const borderDown = 800 - element.height;\r\n        const borderRight = this.props.sizeParentBox.width - element.width;\r\n\r\n        if (coordY < borderTopLeft) coordY = borderTopLeft;\r\n        if (coordY > borderDown) coordY = borderDown;\r\n        if (coordX < borderTopLeft) coordX = borderTopLeft;\r\n        if (coordX > borderRight) coordX = borderRight;\r\n\r\n        return {x: coordX, y: coordY};\r\n    }\r\n\r\n    move = (x,y) => this.setState({...this.state, position: {x: x, y: y}});\r\n\r\n    moveText = event => {\r\n        if (this.state.startDragNdrop && this.state.istrumentsActive){\r\n            const element = this.refText.getBoundingClientRect();\r\n            let sectionNum = this.state.sectionNumber === 0 ? 1 : this.state.sectionNumber;\r\n            let xItem = event.clientX - (this.props.sizeParentBox.left  * sectionNum);\r\n            let yItem = event.clientY - (this.props.sizeParentBox.top * sectionNum);\r\n            let factorCoord = this.diffAngle(parseInt(this.state.transformValue),element.height,element.width);\r\n\r\n            let coordX = xItem - this.state.shiftCoords.x + factorCoord.xFacotr;\r\n            let coordY = yItem - this.state.shiftCoords.y + factorCoord.yFactor;\r\n\r\n            let coords = this.checkPivotPosition(coordX,coordY);\r\n\r\n            let convertToPercentX = coords.x * 100 / this.state.parent.width;\r\n            let convertToPercentY = coords.y * 100 / this.state.parent.height;\r\n\r\n            this.move(convertToPercentX.toFixed(2) + '%',\r\n                      convertToPercentY.toFixed(2) + '%');\r\n        }\r\n        event.stopPropagation();\r\n    };\r\n\r\n\r\n    rotateEvent = eventItem => {\r\n        const angle = eventItem.angle;\r\n        this.setState({\r\n            ...this.state,\r\n            transformValue: angle,\r\n        });\r\n    }\r\n\r\n    scaleEvent = eventItem => {\r\n        const scale = eventItem.scale;\r\n        this.setState({\r\n            ...this.state,\r\n            scaleValue: scale,\r\n        });\r\n    }\r\n\r\n    diffAngle = (transform, height, width) => {\r\n\r\n        let powHeight = height**2;\r\n        let powWidth =  width**2;\r\n\r\n        let pythagoras = Math.sqrt(powHeight + powWidth) / 2;\r\n        let _angle = Math.atan(height / width);\r\n        let angle = Math.atan(width / height);\r\n\r\n        let _biasFactor = 1;\r\n        let biasFactor = 1;\r\n\r\n        if (transform < 0 || transform > 180)\r\n            _biasFactor = - 1;\r\n        if (transform > 90 && transform < 270)\r\n            biasFactor= -1;\r\n\r\n        transform = transform * (Math.PI/180);\r\n\r\n        let sinX = Math.sin(biasFactor * angle + _biasFactor * transform);\r\n        let sinY = Math.sin(biasFactor* _angle + _biasFactor * transform);\r\n\r\n        const xFacotr = pythagoras * (-Math.sin(angle) + sinX);\r\n        const yFactor = pythagoras * (-Math.sin(_angle) + sinY);\r\n\r\n        return {xFacotr, yFactor}\r\n    };\r\n\r\n\r\n    stopDragNdrop = event => {\r\n\r\n        if (this.state.startDragNdrop)\r\n            this.setState({...this.state, startDragNdrop: false},\r\n            () => controllerStream.emit(`EventUpdatePosition${this.state.id}`, this.state.position));\r\n        event.stopPropagation();\r\n    };\r\n\r\n    stopDrag = event => {\r\n        event.preventDefault();\r\n    }\r\n\r\n    refText = null;\r\n    refTextComponent = node => this.refText = node;\r\n\r\n\r\n    render(){\r\n        if (this.props.mode === 'dev'){\r\n            return (\r\n                <WrapperText\r\n                    ref  = {this.refTextComponent}\r\n                    onClick={this.openTitleInstruments}\r\n                    textColor = {this.state.colorText ? this.state.colorText : 'red'}\r\n                    size = {this.state.sizeText ? this.state.sizeText + 'px' : '120px'}\r\n                    onMouseDown = {this.saveCoords}\r\n                    onMouseMove= {this.moveText}\r\n                    onMouseLeave = {this.stopDragNdrop}\r\n                    onMouseUp = {this.stopDragNdrop}\r\n                    rotate = {this.state.transformValue}\r\n                    onDragStart = {this.stopDrag}\r\n                    scale = {this.state.scaleValue}\r\n                    coordX = {this.state.position ? this.state.position.x : null}\r\n                    coordY = {this.state.position ? this.state.position.y : null}\r\n                    indexZ = {this.state.startDragNdrop}\r\n                    data-textcomponent\r\n                >\r\n                    <TextStyle font = {this.state.font}>{this.state.contentText}</TextStyle>\r\n                </WrapperText>\r\n            ) \r\n        } else if (this.props.mode === 'production'){\r\n            return (\r\n                <ProductionStyle\r\n                    ref  = {this.refTextComponent}\r\n                    mode = {this.props.mode}\r\n                    scale = {this.state.scaleValue}\r\n                    rotate = {this.state.transformValue}\r\n                    textColor = {this.state.colorText ? this.state.colorText : 'red'}\r\n                    size = {this.state.sizeText ? this.state.sizeText + 'px' : '120px'}\r\n                    coordX = {this.state.position ? this.state.position.x : null}\r\n                    coordY = {this.state.position ? this.state.position.y : null}\r\n                    indexZ = {this.state.startDragNdrop}\r\n                >\r\n                    <TextStyle font = {this.state.font}>{this.state.contentText}</TextStyle>\r\n                </ProductionStyle>\r\n            )\r\n        }\r\n\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        controllerStream.on(`EventChangeColorText${this.state.id}`, this.changeColorText);\r\n        controllerStream.on(`EventSetFont${this.state.id}`, this.setFont);\r\n        controllerStream.on(`EventChangeSize${this.state.id}`, this.changeSizeText);\r\n        controllerStream.on(`EventChangeContentText${this.state.id}`, this.changeContentText);\r\n        controllerStream.on(`EventSaveWidth${this.state.targetSection}`,this.saveSize);\r\n        controllerStream.on(`EventResize${this.state.id}`,this.rotateEvent);\r\n        controllerStream.on(`EventScale${this.state.id}`,this.scaleEvent);\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        controllerStream.off(`EventChangeColorText${this.state.id}`, this.changeColorText);\r\n        controllerStream.off(`EventSetFont${this.state.id}`, this.setFont);\r\n        controllerStream.off(`EventChangeSize${this.state.id}`, this.changeSizeText);\r\n        controllerStream.off(`EventChangeContentText${this.state.id}`, this.changeContentText);\r\n        controllerStream.off(`EventSaveWidth${this.state.targetSection}`,this.saveSize);\r\n        controllerStream.off(`EventResize${this.state.id}`,this.rotateEvent);\r\n        controllerStream.on(`EventScale${this.state.id}`,this.scaleEvent);\r\n    }\r\n}\r\n\r\nexport default TextComponent;","import React from 'react';\r\n\r\nimport Input from './buildComponents/components/Input';\r\nimport Media from './buildComponents/components/Media';\r\nimport Image from './buildComponents/components/Image';\r\nimport TextComponent from './buildComponents/components/Text';\r\nimport BackgroundComponent from './buildComponents/components/Background';\r\n\r\nconst builderHOC = item => Component => {\r\n        /** Builder editable components */\r\n        if (item.type === 'background') Component = BackgroundComponent;\r\n        else if (item.type === 'input') Component = Input;\r\n        else if (item.type === 'media') Component = Media;\r\n        else if (item.type === 'image') Component = Image;\r\n        else if (item.type === 'text') Component = TextComponent;\r\n\r\n        return <Component key = { `${item.type}${item.id}`} {...item.props} />\r\n};\r\n\r\nexport default builderHOC;","import React,{Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\n/** Redux actions */\r\nimport {loadCurrentProjectAction, exitProjectAction} from '../../redux/actions';\r\n/* ------- Child components ------- */\r\nimport Section from '../../components/buildComponents/section';\r\nimport builderHOC from '../../components/builderHOC';\r\nimport Loader from '../../components/loading/Loader';\r\nimport Header from '../../components/header/Header';\r\n/* HOC */\r\nimport withFirebase from '../../components/withFirebase';\r\nimport './production.scss';\r\n\r\nclass Production extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        firebase: PropTypes.object,\r\n    }\r\n\r\n    state = {\r\n        idProject: parseInt(this.props.match.params.param), /** @Id project */\r\n        mode: 'production', /** @workMode */\r\n        projectEmpty: false, /** @Bool detected project undefiend */\r\n        isLoadComponents: true, /** @Bool load all necessary components  */\r\n        componentsProdJSX: [] /** @Array with JSX */\r\n    }\r\n\r\n    makeProduction = (array) => {\r\n        /* build components */\r\n        let {componentsProdJSX} = this.state;\r\n        let _components = [];\r\n\r\n        array.forEach(item => {\r\n\r\n            const itemHash = {\r\n                props: {\r\n                    ...item,\r\n                    mode: 'production',\r\n                },\r\n                type: item.type,\r\n                id: item.id,\r\n            }\r\n            const patternJSX = {\r\n                id: item.id,\r\n                targetSection: item.targetSection,\r\n                component: builderHOC(itemHash)(Fragment)\r\n            };\r\n                _components.push(patternJSX);\r\n        });\r\n            this.setState({\r\n                ...this.state,\r\n                isLoadComponents: false,\r\n                componentsProdJSX: [...componentsProdJSX, ..._components],\r\n            });\r\n    };\r\n\r\n    prodRef = null;\r\n    mainProductionRef  = node => node ?\r\n    this.prodRef = {data: node.getBoundingClientRect(), node: node} : node;\r\n\r\n    render(){\r\n\r\n        const {userData} = this.props;\r\n        const {currentProjectsData} = userData;\r\n        const section = currentProjectsData.sectionsProject;\r\n\r\n        if (this.state.projectEmpty) return <Redirect to = '/Cabinet' />\r\n\r\n        if (userData.active && currentProjectsData.loadProject){\r\n            return (\r\n                <Fragment>\r\n                    <Header key = 'Header' title = \"Constructor\" idUser = {userData.idUser} />\r\n                    <div\r\n                        ref = {this.mainProductionRef}\r\n                        className = 'Production'\r\n                        key = 'Production'\r\n                        >\r\n                        {!this.state.isLoadComponents ?\r\n                            section.length &&\r\n                                <Section \r\n                                    key = 'section'\r\n                                    mode = {this.state.mode}\r\n                                    currentProjectsData = {currentProjectsData}\r\n                                    componentsProdJSX = {this.state.componentsProdJSX}\r\n                                    section = {section}\r\n                                />\r\n                            : null\r\n                        }\r\n                    </div>\r\n                </Fragment>\r\n            )\r\n        } else if (!this.props.firebase.getCurrentUser()) return <Redirect to = '/' />\r\n        else return <Loader  key = 'Loader' path = '/img/loading.gif' type = 'production' />\r\n    }\r\n\r\n    componentDidUpdate = () => {\r\n        let {userData} = this.props;\r\n        let {currentProjectsData} = userData;\r\n\r\n        if (userData.active && !currentProjectsData.loadProject) {\r\n            /** load current project of user session active and load project - false */\r\n            const current =  userData.projects.find(item => item.id === this.state.idProject)\r\n            if (current)\r\n            this.props.dispatch(loadCurrentProjectAction({\r\n                id: current.id,\r\n                typeProject: current.type,\r\n                sectionsProject: [...current.sectionsProject],\r\n                components: [...current.components]\r\n            })) /* else redirect */\r\n            else this.setState({...this.state, projectEmpty: true});\r\n        }\r\n\r\n        if (this.state.isLoadComponents && currentProjectsData.loadProject)\r\n            /* if all components load build our JSX */\r\n            this.makeProduction(currentProjectsData.components);\r\n\r\n    }\r\n\r\n\r\n    componentDidMount = () => {\r\n        let {userData} = this.props;\r\n        let {currentProjectsData} = userData;\r\n\r\n        if (userData.active && !currentProjectsData.loadProject) {\r\n            /** if user active and project load - false */\r\n            const current =  userData.projects.find(item => item.id === this.state.idProject)\r\n            this.props.dispatch(loadCurrentProjectAction({\r\n                id: current.id,\r\n                sectionsProject: [...current.sectionsProject],\r\n                typeProject: current.type,\r\n                components: [...current.components]\r\n            })); /** else render loader */\r\n        };\r\n\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        let {userData} = this.props;\r\n        if (userData.active)  this.props.dispatch(exitProjectAction(true));\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        userData: {\r\n            active: state.cabinet.active,\r\n            idUser: state.cabinet.idUser,\r\n            projects: [...state.cabinet.projects],\r\n           currentProjectsData: {...state.builder}\r\n        },\r\n    }\r\n};\r\n\r\n  export default connect(mapStateToProps)(withFirebase(Production));","import React,{Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\n\r\n\r\nimport withFirebase from '../../components/withFirebase';\r\nimport Header from '../../components/header/Header';\r\nimport Loader from '../../components/loading/Loader';\r\n\r\nimport './about.scss';\r\n\r\nclass About extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        config: PropTypes.object.isRequired, /** @Config app */\r\n        firebase: PropTypes.object.isRequired, /** @firebase class for use firebase functions */\r\n        history: PropTypes.object, /** @Router HTML5 history */\r\n        location: PropTypes.object, /** @Router */\r\n        match: PropTypes.object, /** @Router */\r\n    }\r\n\r\n    state = {\r\n        config: this.props.config\r\n    };\r\n\r\n    render(){\r\n\r\n        let user = this.props.firebase.getCurrentUser();\r\n        if (user && this.props.idUser) {\r\n            const { config } = this.state;\r\n            return (\r\n                <Fragment>\r\n                    <Header title = {config.title} idUser = {user.uid} />\r\n                    <section className = 'About'>\r\n                        <div className = 'container'>\r\n                            <div className = 'col-12'>\r\n                                <div className = 'About__information'>\r\n                                <img alt = 'img'\r\n                                    className = 'information__logoAbout' \r\n                                    src = {process.env.PUBLIC_URL + '/img/about.jpg'}\r\n                                />\r\n                                    <p className ='developer'><span>Developer:</span>\r\n                                                            {config.about.developer}\r\n                                    </p>\r\n                                    <p className = 'year'><span>Year:</span> {config.about.year}</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </section>\r\n                </Fragment>\r\n            )\r\n        } else if (!user) return <Redirect to = { '/'} />\r\n        else return <Loader path = '/img/loading.gif' type = 'About' />\r\n\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n      idUser: state.cabinet.idUser,\r\n    }\r\n  };\r\n\r\nexport default connect(mapStateToProps)(withFirebase(About));","import {errorAction, loadUpdateCurrentProject} from '../actions';\r\n\r\nconst updateMiddleware = (item) => async (dispatch,getState, {firebase}) => {\r\n    /** Save new updates for projects */\r\n    let newProjects = item.projects.map(project => {\r\n        if (project.id === item.idProject) {\r\n            project.components = [...item.components]\r\n            project.sectionsProject = [...item.sectionsProject]\r\n        }\r\n        return project;\r\n    });\r\n    await firebase.db.collection(\"users\").doc(item.uid).update({\r\n        'projects': JSON.parse(JSON.stringify(newProjects))\r\n    })\r\n    .then(response => {\r\n        /** find and save updates */\r\n        let project = item.projects.find(itemdb => itemdb.id === item.idProject);\r\n        dispatch(loadUpdateCurrentProject({\r\n            components: [...project.components],\r\n            idProject: item.idProject,\r\n            sectionsProject: item.sectionsProject,\r\n        }))\r\n    })\r\n    .catch(error => dispatch(errorAction(error.message)));\r\n};\r\n\r\nexport default updateMiddleware;","import React from 'react';\r\nimport eventEmitter from '../EventEmitter';\r\nimport {animateScroll as scroll, scroller } from \"react-scroll\";\r\n\r\n\r\nconst withScroll = Component => {\r\n    return class ScrollMove extends React.PureComponent {\r\n\r\n        state = {\r\n            mode: 'default',\r\n            scrollConfig: {\r\n                duration: 1000,\r\n                delay: 50,\r\n                smooth: true,\r\n                offset: -60\r\n            },\r\n            position: 0,\r\n            positionCount: null\r\n\r\n        }\r\n\r\n        setStates = event => {\r\n            /** Count all positions */\r\n            this.setState({...this.state,positionCount: event});\r\n        }\r\n\r\n        blockMove = event => {\r\n            /** block for move */\r\n            this.setState({...this.state, mode: event})\r\n        }\r\n\r\n        moveLocation = event => {\r\n            /** Scrolling */\r\n            if (this.state.mode === 'default'){\r\n                const count = this.state.positionCount;\r\n                const moveDown = this.state.position < count && event.deltaY > 0;\r\n                const moveUp = event.deltaY < 0 && this.state.position > 0;\r\n                eventEmitter.emit('EventClosePanel',{close: false});\r\n\r\n                if (moveDown)\r\n                    this.setState({ position: this.state.position + 1},\r\n                        () => scroller.scrollTo(`element${this.state.position}`,this.state.scrollConfig));\r\n                    else if (moveUp){\r\n                        this.state.position === 1 &&\r\n                            this.setState({position: this.state.position - 1}, () => scroll.scrollToTop());\r\n                        this.state.position !== 1 &&\r\n                            this.setState({position: this.state.position - 1},\r\n                                () => scroller.scrollTo(`element${this.state.position}`,this.state.scrollConfig));\r\n                    }\r\n            }\r\n\r\n        }\r\n\r\n\r\n        render(){\r\n            return (\r\n                <React.Fragment>\r\n                        <div key = 'moveScroll' onWheel = {this.moveLocation} onTouchStart = {() => false}\r\n                        >\r\n                            {<Component {...this.props} />}\r\n                        </div>\r\n                </React.Fragment>\r\n            )\r\n        }\r\n\r\n        componentDidMount = () => {\r\n            eventEmitter.on('EventBlockScroll', this.blockMove);\r\n            eventEmitter.on('EventSetState', this.setStates);\r\n        }\r\n\r\n        componentWillUnmount = () => {\r\n            eventEmitter.off('EventBlockScroll', this.blockMove);\r\n            eventEmitter.off('EventSetState', this.setStates);\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport default withScroll;","import React,{useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Viewer.scss';\r\n\r\nfunction Viewer(props){\r\n\r\n    let [mode] = useState(props.mode);\r\n    let [path] = useState(props.path);\r\n\r\n    const closeViewer = event => {\r\n        props.eventStreamBuild.emit(\"EventView\", { action: false, target: null});\r\n        event.stopPropagation();\r\n    }\r\n\r\n    return (\r\n        \r\n        <div onClick = {closeViewer} className = 'Viewer'>\r\n            {(mode === 'image' || mode === 'background') ? <img src = {path} alt = 'fullImage' /> \r\n            : \r\n            <iframe \r\n            src= {`https://www.youtube.com/embed/${props.iframe}`}\r\n            title = 'youtube'\r\n            frameBorder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" \r\n            allowFullScreen>\r\n            </iframe>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nViewer.propTypes = {\r\n    eventStreamBuild: PropTypes.object.isRequired, // events stream\r\n    mode: PropTypes.string, // use mode\r\n    path: PropTypes.string // path to data component\r\n}\r\n\r\nexport default Viewer;","import React,{Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {SketchPicker} from 'react-color';\r\n\r\n\r\nconst InputInstruments = props => {\r\n\r\n    let {colorPickerActive} = props.instrumentPanel;\r\n    let {content} = props.componentStats;\r\n    let {fontSize} = props.componentStats;\r\n    let {coords} = props.componentStats;\r\n    let {size} = props.componentStats;\r\n\r\n    let _content = content !== '' ? 'Input' : '';\r\n\r\n    return (\r\n        <Fragment>\r\n            <p className = 'titleInstument'>Position: </p>\r\n            <span className = 'textCoordsPanel'>\r\n            {coords.x ?\r\n                coords.x + ' / ' + coords.y : ' drop for active'}\r\n            </span>\r\n            <p className = 'titleInstument'>Color: </p>\r\n            <div className = 'controllersText'>\r\n                <input \r\n                    onClick = {props.cbSetColor}\r\n                    className = 'button_switch color_switch'\r\n                    type = 'button'\r\n                    value = 'color pick'\r\n                />\r\n            </div>\r\n                { colorPickerActive ?\r\n                    <div className ='wrapperColorPicker'>\r\n                        <SketchPicker\r\n                        onChangeComplete={props.cbHandleChangeComplete}\r\n                        color = {props.color ? props.color : 'white'}\r\n                        />\r\n                    </div>\r\n                    : null\r\n                }\r\n            <p className = 'titleInstument'>Size (%):</p>\r\n            <div className = 'controllersText'>\r\n                <input\r\n                    className = 'button_switch'\r\n                    onChange = {props.cbSetWidth}\r\n                    type=\"number\"\r\n                    min = '10' max = '200'\r\n                    value = {size.w ? size.w : 100}\r\n                />\r\n                <input \r\n                    className = 'button_switch'\r\n                    onChange = {props.cbSetHeight}\r\n                    type=\"number\"\r\n                    min = '10' max = '200'\r\n                    value = {size.h ? size.h : 50}\r\n                />\r\n            </div>\r\n            <p className = 'titleInstument'>Text size: </p>\r\n            <input \r\n                className = 'button_switch'\r\n                onChange = {props.cbSetSize}\r\n                type=\"number\"\r\n                min = '10' max = '200'\r\n                value = {fontSize ? fontSize : 21}\r\n            />\r\n            <p className = 'titleInstument'>Border radius: </p>\r\n            <input\r\n                onChange = {props.cbSetBorderRadius}\r\n                className = 'button_switch radius'\r\n                type=\"number\"\r\n                value = {props.componentStats.borderRadius ?\r\n                            props.componentStats.borderRadius : 10\r\n                        }\r\n                min = '10' max = '200'\r\n            />\r\n\r\n            <p className = 'titleInstument'>Type input: </p>\r\n            <select \r\n            value = {props.componentStats.typeInput} \r\n            onChange = {props.cbSetType}\r\n            className = 'button_switch button_switch_type'>\r\n                <option>button</option>\r\n                <option>text</option>\r\n                <option>password</option>\r\n            </select>\r\n            <p className = 'titleInstument'>Content: </p>\r\n            <input\r\n            className = 'button_switch'\r\n            onChange = {props.cbSetContent}\r\n            maxLength = '100'\r\n            type = 'text'\r\n            value = {content ? content : _content}\r\n        />\r\n            <input \r\n                onClick = {props.cbDelete}\r\n                className = 'instrumentPanel__deleteComponentButton'\r\n                type=\"button\"\r\n                value = 'delete'\r\n            />\r\n        </Fragment>\r\n    )\r\n};\r\n\r\nInputInstruments.propTypes = {\r\n    componentStats: PropTypes.object.isRequired, // object with current component data\r\n    cbSetColor: PropTypes.func.isRequired, // callback set color\r\n    cbHandleChangeComplete: PropTypes.func.isRequired, // callback state color picker\r\n    cbSetWidth: PropTypes.func.isRequired, // callback set width\r\n    cbSetHeight: PropTypes.func.isRequired, // callback set height\r\n    cbSetSize: PropTypes.func.isRequired, // callback set size\r\n    cbSetBorderRadius: PropTypes.func.isRequired, // callback set border-radius\r\n    cbSetContent: PropTypes.func.isRequired, // callback set content input\r\n    cbDelete: PropTypes.func.isRequired, // callback delete\r\n}\r\n\r\nexport default InputInstruments;","import React,{Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst MediaInstruments = props => {\r\n\r\n    let {size} = props.componentStats;\r\n    let {coords} = props.componentStats;\r\n\r\n    return (\r\n        <Fragment>\r\n            <p className = 'titleInstument'>Position: </p>\r\n            <span className = 'textCoordsPanel'>\r\n            {coords.x ?\r\n                coords.x + ' / ' + coords.y : ' drop for active'}\r\n            </span>\r\n            <p className = 'titleInstument'>Size (%):</p>\r\n            <div className = 'controllersText media'>\r\n                <input\r\n                    className = 'button_switch'\r\n                    onChange = {props.cbSetWidth}\r\n                    type=\"number\"\r\n                    min = '10' max = '100'\r\n                    value = {size.w ? size.w : 30}\r\n                />\r\n                <input \r\n                    className = 'button_switch'\r\n                    onChange = {props.cbSetHeight}\r\n                    type=\"number\"\r\n                    min = '10' max = '100'\r\n                    value = {size.h ? size.h : 50}\r\n                />\r\n            </div>\r\n            <p className = 'titleInstument'>Content: </p>\r\n            <input \r\n                onClick = {props.cbSearch}\r\n                className = 'ImageSearchButton'\r\n                type=\"button\"\r\n                value = 'search media'\r\n            />\r\n            <input \r\n                onClick = {props.cbDelete}\r\n                className = 'instrumentPanel__deleteComponentButton'\r\n                type=\"button\"\r\n                value = 'delete'\r\n            />\r\n        </Fragment>\r\n    )\r\n};\r\n\r\nMediaInstruments.propTypes = {\r\n    componentStats: PropTypes.object.isRequired, // object with current component data\r\n    cbSearch: PropTypes.func.isRequired, // callback search\r\n    cbSetWidth: PropTypes.func.isRequired, // callback set width\r\n    cbSetHeight: PropTypes.func.isRequired, // callback set height\r\n    cbDelete: PropTypes.func.isRequired, // callback delete\r\n}\r\n\r\nexport default MediaInstruments;","import React, {Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ImageInstruments = props => {\r\n\r\n    let {coords} = props.componentStats;\r\n    let {size} = props.componentStats;\r\n    let {rotate} = props.componentStats;\r\n    let {scale} = props.componentStats;\r\n    let fileRef = React.createRef();\r\n    return (\r\n        <Fragment>\r\n        <p className = 'titleInstument'>Position: </p>\r\n        <span className = 'textCoordsPanel'>\r\n        {coords.x ?\r\n            coords.x + ' / ' + coords.y : ' drop for active'}\r\n        </span>\r\n        <p className = 'titleInstument'>Size (%):</p>\r\n        <div className = 'controllersText'>\r\n            <input\r\n                className = 'button_switch size'\r\n                onChange = {props.cbSetWidth}\r\n                type=\"number\"\r\n                min = '10' max = '100'\r\n                value = {size.w ? size.w : 30}\r\n            />\r\n            <input \r\n                className = 'button_switch size'\r\n                onChange = {props.cbSetHeight}\r\n                type=\"number\"\r\n                min = '10' max = '100'\r\n                value = {size.h ? size.h : 30}\r\n            />\r\n        </div>\r\n        <p className = 'titleInstument'>Rotate/Scale:</p>\r\n        <div className = 'controllersText'>\r\n            <input\r\n            className = 'button_switch rotate'\r\n            onChange = {props.cbRotate}\r\n            type=\"number\"\r\n            min = '0' max = '360'\r\n            value = {rotate ? rotate : 0}\r\n            />\r\n            <input\r\n            className = 'button_switch scale'\r\n            onChange = {props.cbScale}\r\n            type=\"number\"\r\n            step = '0.1'\r\n            min = '0' max = '2'\r\n            value = {scale ? scale : 1}\r\n            />\r\n        </div>\r\n        <p className = 'titleInstument'>Border radius: </p>\r\n            <input\r\n                onChange = {props.cbSetBorderRadius}\r\n                className = 'button_switch radius'\r\n                type=\"number\"\r\n                value = {props.componentStats.borderRadius ?\r\n                            props.componentStats.borderRadius : 10\r\n                        }\r\n                min = '10' max = '200'\r\n            />\r\n            <p className = 'titleInstument titleInstrument__opacity'>Opacity: </p>\r\n            <input \r\n                onChange = {props.cbSetOpacity}\r\n                className = 'ImageSearchButton'\r\n                type=\"number\"\r\n                value = {props.componentStats.opacity ?\r\n                    props.componentStats.opacity : 1\r\n                }\r\n                step = '0.1'\r\n                min = '0' max = '1'\r\n            />\r\n            <p className = 'titleInstument titleInstrument__opacity'>Loader: </p>\r\n            <div className = 'controllersText'>\r\n                <div className = 'fileLoader'>\r\n                    <input \r\n                        onClick = {props.cbSearch}\r\n                        className = 'ImageSearchButton file'\r\n                        type=\"button\"\r\n                        value = 'search image'\r\n                    />\r\n                    <input\r\n                        ref = {fileRef}\r\n                        className = 'fileInput'\r\n                        onChange = {props.cbLoadFile}\r\n                        accept=\"image/*\"\r\n                        type=\"file\"\r\n                    />\r\n                    <input\r\n                        className = 'ImageSearchButton file'\r\n                        type = 'button'\r\n                        value = 'loading file'\r\n                    />\r\n\r\n                </div>\r\n            </div>\r\n            <input \r\n                onClick = {props.cbDelete}\r\n                className = 'instrumentPanel__deleteComponentButton'\r\n                type=\"button\"\r\n                value = 'delete'\r\n            />\r\n        </Fragment>\r\n    )\r\n\r\n}\r\n\r\nImageInstruments.propTypes = {\r\n    componentStats: PropTypes.object.isRequired, // object with current component data\r\n    cbSetWidth: PropTypes.func.isRequired, // callback set width\r\n    cbSetHeight: PropTypes.func.isRequired, // callback set height\r\n    cbSetBorderRadius: PropTypes.func.isRequired, // callback set border-radius\r\n    cbSetOpacity: PropTypes.func.isRequired, // callback set opacity\r\n    cbLoadFile: PropTypes.func.isRequired, // callback load file\r\n    cbSearch: PropTypes.func.isRequired, // callback search\r\n    cbDelete: PropTypes.func.isRequired, // callback delete\r\n}\r\n\r\nexport default ImageInstruments;","import React, {Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {SketchPicker} from 'react-color';\r\n\r\nconst BackgroundInstruments = props => {\r\n    let  {targetSection} = props.componentStats;\r\n    return (\r\n        <Fragment>\r\n        <p className = 'titleInstument'>Color: </p>\r\n        <input\r\n            onClick = {props.cbSetColor}\r\n            className = 'button_switch Color'\r\n            type = 'button'\r\n            value = 'color pick'\r\n        />\r\n            { props.colorPickerActive ?\r\n                <SketchPicker\r\n                    onChangeComplete={props.cbHandleChangeComplete}\r\n                    color = {props.color ? props.color : 'white'}\r\n                />\r\n                : null\r\n            }\r\n            <input \r\n                onClick = {props.cbSearch}\r\n                className = 'ImageSearchButton'\r\n                type = 'button'\r\n                value = 'background-image'\r\n            />\r\n            <input\r\n                disabled = {targetSection === 'Header'}\r\n                onClick = {props.cbDelete}\r\n                className = 'instrumentPanel__deleteComponentButton'\r\n                type=\"button\"\r\n                value = 'delete'\r\n            />\r\n        </Fragment>\r\n    )\r\n\r\n}\r\n\r\nBackgroundInstruments.propTypes = {\r\n    componentStats: PropTypes.object.isRequired, // object with current component data\r\n    cbSetColor: PropTypes.func.isRequired, // callback set color\r\n    cbHandleChangeComplete: PropTypes.func.isRequired, // callback picker state change\r\n    cbSearch: PropTypes.func.isRequired, // callback search\r\n}\r\n\r\nexport default BackgroundInstruments;","import React,{Fragment} from 'react';\r\nimport {SketchPicker} from 'react-color';\r\n\r\nconst TextInstruments = props => {\r\n\r\n\r\n        let {colorPickerActive} = props.instrumentPanel;\r\n        let {content} = props.componentStats;\r\n        let {fontSize} = props.componentStats;\r\n        let {coords} = props.componentStats;\r\n        let {rotate} = props.componentStats;\r\n        let {scale} = props.componentStats;\r\n        let _content = content !== '' ? 'Title' : '';\r\n        return (\r\n            <Fragment>\r\n            <p className = 'titleInstument'>Position: </p>\r\n            <span className = 'textCoordsPanel'>\r\n            {coords.x ?\r\n                coords.x + ' / ' + coords.y : ' drop for active'}\r\n            </span>\r\n            <p className = 'titleInstument'>Rotate/Scale:</p>\r\n            <div className = 'controllersText'>\r\n                <input\r\n                className = 'button_switch rotate'\r\n                onChange = {props.cbRotate}\r\n                type=\"number\"\r\n                min = '0' max = '360'\r\n                value = {rotate ? rotate : 0}\r\n                />\r\n                <input\r\n                className = 'button_switch scale'\r\n                onChange = {props.cbScale}\r\n                type=\"number\"\r\n                step = '0.1'\r\n                min = '0' max = '2'\r\n                value = {scale ? scale : 1}\r\n                />\r\n            </div>\r\n            <p className = 'titleInstument'>Color: </p>\r\n            <input \r\n                onClick = {props.cbSetColor}\r\n                className = 'button_switch color'\r\n                type = 'button'\r\n                value = 'color pick'\r\n            />\r\n            <p className = 'titleInstument'>Text size: </p>\r\n            <input \r\n                className = 'button_switch size'\r\n                onChange = {props.cbSetSize}\r\n                type=\"number\"\r\n                min = '10' max = '200'\r\n                value = {fontSize ? fontSize : 120}\r\n            />\r\n                { colorPickerActive ?\r\n                    <div className ='wrapperColorPicker text'>\r\n                        <SketchPicker\r\n                            onChangeComplete={props.cbHandleChangeComplete}\r\n                            color = {props.color ? props.color : 'red'}\r\n                        />\r\n                    </div>\r\n                    : null\r\n                }\r\n                <p className = 'titleInstument'>Font: </p>\r\n                <select \r\n                    value = {props.componentStats.font} \r\n                    onChange = {props.cbSetFont}\r\n                    className = 'button_switch font'\r\n                >\r\n                <option>Arial</option>\r\n                <option>Times</option>\r\n                <option>Georgia</option>\r\n                <option>Impact</option>\r\n                <option>Tahoma</option>\r\n                <option>Verdana</option>\r\n                <option>Comic</option>\r\n                </select>\r\n            <p className = 'titleInstument'>Content: </p>\r\n            <input\r\n                className = 'button_switch content'\r\n                onChange = {props.cbSetContent}\r\n                maxLength = '100'\r\n                type = 'text'\r\n                value = {content ? content : _content}\r\n            />\r\n            <input \r\n                onClick = {props.cbDelete}\r\n                className = 'instrumentPanel__deleteComponentButton'\r\n                type=\"button\"\r\n                value = 'delete'\r\n            />\r\n            </Fragment>\r\n        )\r\n}\r\n\r\nexport default TextInstruments;","import React from 'react';\r\nimport eventEmitter,{controllerStream} from '../../EventEmitter';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport InputInstruments from './InputTools/InputInstruments';\r\nimport MediaInstruments from './MediaTools/MediaInstruments';\r\nimport ImageInstruments from './ImageTools/ImageInstruments';\r\nimport BackgroundInstruments from './BackgroundTools/BackgroundInstruments';\r\nimport TextInstruments from './TextTools/TextInstruments';\r\nimport Icon from '../Icon/icon';\r\n\r\nimport './instrumentsPanel.scss';\r\n\r\n\r\n\r\nclass InstrumentsPanel extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        instrumentPanel:  PropTypes.object.isRequired, /** @Settings for panel and data about component */\r\n        editComponentName: PropTypes.string, /** @Name editable component */\r\n        eventStreamBuild: PropTypes.object.isRequired // stream events\r\n    };\r\n\r\n    state = {\r\n        instrumentPanel: {...this.props.instrumentPanel},\r\n        componentStats: this.props.componentStats,\r\n        images: null,\r\n    };\r\n\r\n\r\n    closePanel = event => {\r\n        this.props.eventStreamBuild.emit('EventClosePanel', {close: false});\r\n    };\r\n\r\n    setSize = event => {\r\n        let {id} = this.state.componentStats;\r\n        let size = event.target.value > 200 ? 200 : event.target.value;\r\n\r\n        if (this.state.componentStats.type !== 'input')\r\n        this.setState({\r\n            ...this.state, \r\n            instrumentPanel: {...this.state.instrumentPanel},\r\n            componentStats: {...this.state.componentStats,fontSize: size}\r\n        }, () => controllerStream.emit(`EventChangeSize${id}`, {\r\n                targetSection: this.state.editComponentName, size: size \r\n        }));\r\n        else this.setState({\r\n                ...this.state, \r\n                instrumentPanel: {...this.state.instrumentPanel},\r\n                componentStats: {...this.state.componentStats,fontSize: size}\r\n            }, () => controllerStream.emit(`EventChangeSizeText${id}`, {size: size}\r\n            ));\r\n    };\r\n\r\n    setFont = event => {\r\n        let {id} = this.state.componentStats;\r\n        let fontName = event.target.value;\r\n        this.setState({\r\n            ...this.state, \r\n            instrumentPanel: {...this.state.instrumentPanel},\r\n            componentStats: {...this.state.componentStats,font: fontName}\r\n        },\r\n            () => controllerStream.emit(`EventSetFont${id}`, {\r\n                targetSection: this.state.editComponentName, font: fontName\r\n            })\r\n        );\r\n    }\r\n\r\n    rotate = event => {\r\n        let {id} = this.state.componentStats;\r\n        let angle = event.target.value;\r\n        this.setState({\r\n            ...this.state, \r\n            instrumentPanel: {...this.state.instrumentPanel},\r\n            componentStats: {...this.state.componentStats, rotate: angle}\r\n        },\r\n        () => controllerStream.emit(`EventResize${id}`,{angle: angle}));\r\n        event.stopPropagation();\r\n    }\r\n\r\n    scale = event => {\r\n        let {id} = this.state.componentStats;\r\n        let scale = event.target.value;\r\n        this.setState({\r\n            ...this.state, \r\n            instrumentPanel: {...this.state.instrumentPanel},\r\n            componentStats: {...this.state.componentStats, scale: scale}\r\n        },\r\n        () => controllerStream.emit(`EventScale${id}`,{scale: scale}));\r\n        event.stopPropagation();\r\n    }\r\n\r\n    setIframeContent = eventItem => {\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            componentStats:{\r\n                ...this.state.componentStats,\r\n                content: eventItem.iframe\r\n            }\r\n        });\r\n    }\r\n\r\n    setContent = event => {\r\n        let {id} = this.state.componentStats;\r\n        let contentValue = event.target.value;\r\n        this.setState({\r\n            ...this.state, \r\n            instrumentPanel: {...this.state.instrumentPanel},\r\n            componentStats: {...this.state.componentStats,content: contentValue}\r\n        },\r\n            () => controllerStream.emit(`EventChangeContentText${id}`,{\r\n                targetSection: this.state.editComponentName, content: contentValue\r\n            })\r\n        );\r\n        if (event) event.stopPropagation();\r\n    };\r\n\r\n    setWidth = event => {\r\n        const {id} = this.state.componentStats;\r\n        const width = event.target.value;\r\n        this.setState({\r\n            ...this.state,\r\n            componentStats: {...this.state.componentStats,\r\n                size: {\r\n                    ...this.state.componentStats.size,\r\n                    w: width\r\n                }}\r\n        },\r\n            () => controllerStream.emit(`EventSetWidth${id}`,{width: width}));\r\n\r\n        if (event) event.stopPropagation();\r\n    };\r\n\r\n    setHeight = event => {\r\n        const {id} = this.state.componentStats;\r\n        const height = event.target.value;\r\n        this.setState({\r\n            ...this.state,\r\n            componentStats: {...this.state.componentStats,\r\n                size: {\r\n                    ...this.state.componentStats.size,\r\n                    h: height\r\n                }}\r\n        },\r\n            () => controllerStream.emit(`EventSetHeight${id}`,{height: height}));\r\n\r\n        if (event) event.stopPropagation();\r\n    }\r\n\r\n    updatePosition = eventItem => {\r\n        if (!eventItem) return;\r\n        this.setState({\r\n            ...this.state, \r\n            componentStats: {\r\n                ...this.state.componentStats,\r\n                coords: {\r\n                    ...this.state.componentStats.coords,\r\n                    x: eventItem.x,\r\n                    y: eventItem.y\r\n                }\r\n            }\r\n        });\r\n    };\r\n\r\n    setColor = event => {\r\n        this.setState({...this.state,\r\n            instrumentPanel:{\r\n                ...this.state.instrumentPanel,\r\n                colorPickerActive: this.state.instrumentPanel.colorPickerActive ? false : true\r\n            }\r\n        });\r\n        if (event) event.stopPropagation();\r\n    };\r\n\r\n    setType = event => {\r\n\r\n        let {id} = this.state.componentStats;\r\n        let typeInput = event.target.value;\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            componentStats: {\r\n                ...this.state.componentStats,\r\n                typeInput: typeInput\r\n            }\r\n        },\r\n         () => controllerStream.emit(`EventSetType${id}`, typeInput));\r\n        if (event) event.stopPropagation();\r\n    }\r\n\r\n    setOpacity = event => {\r\n        let {id} = this.state.componentStats;\r\n        let opacity = event.target.value;\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            componentStats: {...this.state.componentStats,opacity: opacity}\r\n        },\r\n         () => controllerStream.emit(`EventSetOpacity${id}`, {opacity: opacity}));\r\n    };\r\n\r\n    setBorderRadius = event => {\r\n        let {id} = this.state.componentStats;\r\n        let radius = event.target.value;\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            componentStats: {...this.state.componentStats,borderRadius: radius}\r\n        },\r\n         () => controllerStream.emit(`EventSetBorderRadius${id}`, {borderRadius: radius}));\r\n    };\r\n\r\n    updateBimageStats = eventItem => {\r\n        const {images} = eventItem;\r\n        if (eventItem.mode !== 'image')\r\n        this.setState({\r\n            ...this.state,\r\n            componentStats:{\r\n                ...this.state.componentStats,\r\n                backgroundImage: images.urlFull\r\n            }\r\n        });\r\n        else {\r\n            this.setState({\r\n                ...this.state,\r\n                componentStats:{\r\n                    ...this.state.componentStats,\r\n                    image: images.urlFull\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    handleChangeComplete = event => {\r\n\r\n        const {rgb} = event;\r\n        let colorRGB = `rgb(${rgb.r},${rgb.g},${rgb.b},${rgb.a})`;\r\n\r\n        let {id} = this.state.componentStats;\r\n        if (this.state.componentStats.type === 'background'){\r\n            this.setState({\r\n                ...this.state,\r\n                componentStats: {...this.state.componentStats,color: colorRGB}\r\n            }, () => controllerStream.emit(`EventChangeColorBackground${id}`,\r\n                        {colorRGB: this.state.componentStats.color}\r\n                    ));\r\n        }\r\n\r\n        else if (this.state.componentStats.type === 'text') {\r\n            this.setState({\r\n                ...this.state,\r\n                componentStats: {...this.state.componentStats,color: colorRGB}\r\n            },\r\n            () => controllerStream.emit(`EventChangeColorText${id}`, colorRGB));\r\n        }\r\n\r\n        else if (this.state.componentStats.type === 'input') {\r\n            this.setState({\r\n                ...this.state,\r\n                componentStats: {...this.state.componentStats,color: colorRGB}\r\n            },\r\n            () => controllerStream.emit(`EventChangecolor${id}`, colorRGB));\r\n        }\r\n\r\n    };\r\n\r\n    redirectSaveChanges = event => {\r\n        this.props.eventStreamBuild.emit(\"EventSaveChangesComponent\", {\r\n            ...this.state.componentStats,\r\n            id: this.state.componentStats.id,\r\n            type: this.state.componentStats.type,\r\n            ms: 0\r\n        });\r\n        if (event) event.stopPropagation();\r\n    }\r\n\r\n    saveChanges = event => {\r\n\r\n        this.props.eventStreamBuild.emit(\"EventSaveChangesComponent\", {\r\n                ...this.state.componentStats,\r\n                id: this.state.componentStats.id,\r\n                type: this.state.componentStats.type,\r\n                ms: 1500,\r\n            });\r\n\r\n        eventEmitter.emit('EventRedirectConfirm', true);\r\n        if (event) event.stopPropagation();\r\n    }\r\n\r\n    deleteComponent = event => {\r\n        this.props.eventStreamBuild.emit('EventDeleteComponent', {\r\n            id: this.state.componentStats.id,\r\n            targetSection: this.state.componentStats.targetSection,\r\n            type: this.state.componentStats.type\r\n        });\r\n    };\r\n\r\n    search = event => {\r\n\r\n        let {id} = this.state.componentStats;\r\n        this.props.eventStreamBuild.emit('EventModalSearchOn',{\r\n            idComponent: id,\r\n            mode: this.state.componentStats.type\r\n        });\r\n\r\n        event.stopPropagation();\r\n    };\r\n\r\n    loadFile = event => {\r\n        let {id} = this.state.componentStats;\r\n        try {\r\n            let image = event.target.files[0];\r\n            let reader = new FileReader();\r\n            if (image.type[0] !== 'i') throw new Error('Invalid file');\r\n            reader.readAsDataURL(image);\r\n            reader.onload = (e) => {\r\n                controllerStream.emit(`EventSetCurrentImage${id}`,{ urlFull: reader.result });\r\n                this.updateBimageStats({images: { urlFull: reader.result }, mode: 'image'});\r\n                e.stopPropagation();\r\n            }\r\n            reader.onerror = () => {\r\n                console.error(reader.error);\r\n            }\r\n        } catch (error) {\r\n            console.error(error.message);\r\n        }\r\n\r\n        event.stopPropagation();\r\n    }\r\n\r\n    makePanelInstruments = (type) => {\r\n            switch (type){\r\n                case 'text':\r\n                   return(\r\n                    <TextInstruments\r\n                        instrumentPanel = {{...this.state.instrumentPanel}}\r\n                        componentStats = {{...this.state.componentStats}}\r\n                        cbSetColor = {this.setColor}\r\n                        cbSetSize = {this.setSize}\r\n                        cbHandleChangeComplete = {this.handleChangeComplete}\r\n                        cbSetContent = {this.setContent}\r\n                        cbSetFont = {this.setFont}\r\n                        cbSetOpacity = {this.setOpacity}\r\n                        color = {this.state.componentStats.color}\r\n                        cbDelete = {this.deleteComponent}\r\n                        cbRotate = {this.rotate}\r\n                        cbScale = {this.scale}\r\n                    />\r\n                   )\r\n                case 'background':\r\n                    return (\r\n                        <BackgroundInstruments\r\n                            colorPickerActive = {this.state.instrumentPanel.colorPickerActive}\r\n                            componentStats = {{...this.state.componentStats}}\r\n                            cbSetColor = {this.setColor}\r\n                            color = {this.state.componentStats.color}\r\n                            cbHandleChangeComplete = {this.handleChangeComplete}\r\n                            cbSearch = {this.search}\r\n                            cbDelete = {this.deleteComponent}\r\n                        />\r\n                    )\r\n                case 'image':\r\n                        return (\r\n                            <ImageInstruments\r\n                                instrumentPanel = {{...this.state.instrumentPanel}}\r\n                                componentStats = {{...this.state.componentStats}}\r\n                                cbSearch = {this.search}\r\n                                cbSetSize = {this.setSize}\r\n                                cbSetBorderRadius = {this.setBorderRadius}\r\n                                cbSetOpacity = {this.setOpacity}\r\n                                cbSetWidth = {this.setWidth}\r\n                                cbSetHeight = {this.setHeight}\r\n                                cbLoadFile = {this.loadFile}\r\n                                cbDelete = {this.deleteComponent}\r\n                                cbRotate = {this.rotate}\r\n                                cbScale = {this.scale}\r\n                            />\r\n                        )\r\n                case 'media':\r\n                        return (\r\n                            <MediaInstruments\r\n                                instrumentPanel = {{...this.state.instrumentPanel}}\r\n                                componentStats = {{...this.state.componentStats}}\r\n                                cbSearch = {this.search}\r\n                                cbSetWidth = {this.setWidth}\r\n                                cbSetHeight = {this.setHeight}\r\n                                cbDelete = {this.deleteComponent}\r\n                            />\r\n                            )\r\n                case 'input':\r\n                        return (\r\n                            <InputInstruments\r\n                                instrumentPanel = {{...this.state.instrumentPanel}}\r\n                                componentStats = {{...this.state.componentStats}}\r\n                                cbSetColor = {this.setColor}\r\n                                cbSetBorderRadius = {this.setBorderRadius}\r\n                                cbHandleChangeComplete = {this.handleChangeComplete}\r\n                                cbSetSize = {this.setSize}\r\n                                cbSetWidth = {this.setWidth}\r\n                                cbSetHeight = {this.setHeight}\r\n                                color = {this.state.componentStats.color}\r\n                                cbSetContent = {this.setContent}\r\n                                cbSetType = {this.setType}\r\n                                cbDelete = {this.deleteComponent}\r\n                            />\r\n                        )\r\n                default: return <p className = 'warningInstruments'>No found element</p>\r\n            }\r\n    };\r\n\r\n    render(){\r\n        let { instrumentActive } = this.state.instrumentPanel;\r\n        return (\r\n\r\n                <div  className = 'instumentsPanel'>\r\n                    <button\r\n                        onClick = {this.closePanel}\r\n                        className = 'closeInstrumentsPanel'\r\n                    >\r\n                        <Icon path = '/img/close.svg' />\r\n                    </button>\r\n                    <h3>Instruments</h3>\r\n                    {\r\n                        instrumentActive ? \r\n                        <p className = 'TextComponent'>{this.state.componentStats.type}</p>\r\n                        : null\r\n                    }\r\n                    {\r\n                        instrumentActive ?\r\n                        <div className = 'instuments'>\r\n                            {this.makePanelInstruments(this.state.componentStats.type)}\r\n                        </div>\r\n                        : null\r\n                    }\r\n                </div>\r\n        )\r\n    };\r\n\r\n    componentDidUpdate = (oldProps, oldState) => {\r\n        if (oldState.componentStats !== this.state.componentStats)\r\n        this.saveChanges();\r\n    };\r\n\r\n    componentDidMount = event => {\r\n        eventEmitter.on('EventRedirectSaveChanges', this.redirectSaveChanges);\r\n        eventEmitter.on(\"EventSetBImageInstumentPanel\", this.updateBimageStats);\r\n        eventEmitter.on(`EventSetIframe`, this.setIframeContent);\r\n        controllerStream.on(`EventUpdatePosition${this.state.componentStats.id}`, this.updatePosition);\r\n    };\r\n\r\n    componentWillUnmount = event => {\r\n        if (this.timer) clearTimeout(this.timer);\r\n        eventEmitter.off('EventRedirectSaveChanges', this.redirectSaveChanges);\r\n        eventEmitter.off(\"EventSetBImageInstumentPanel\", this.updateBimageStats);\r\n        eventEmitter.off(`EventSetIframe`, this.setIframeContent);\r\n        controllerStream.off(`EventUpdatePosition${this.state.componentStats.id}`, this.updatePosition);\r\n    };\r\n};\r\n\r\nexport default InstrumentsPanel;","import React,{Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Viewer from '../imageViewer/Viewer';\r\nimport InstrumentsPanel from '../../components/instrumentsPanel/InstrumentsPanel';\r\nimport ModalWindow from '../../components/modalWindow/ModalWindow';\r\nimport {CSSTransition} from 'react-transition-group';\r\n\r\nclass AdditionalTools extends React.PureComponent{\r\n\r\n    static propTypes = {\r\n        eventStreamBuild: PropTypes.object.isRequired, // events stream\r\n    }\r\n\r\n    state = {\r\n        modal: {\r\n            modalSearch: false, /** @bool active modal search image/media */\r\n            modalSearchMode: null, /** @String work mode of search modal */\r\n        },\r\n        modalViewer: {action: false, image: null, mode: null }, /** @Object data with viewer data */\r\n        instrumentPanel: { /** @Object with data controll instrument panel */\r\n            colorPickerActive: false,\r\n            instrumentActive: false,\r\n        },\r\n        componentStats: {}, /** @Object with data about components */\r\n        editComponentName:  this.props.editComponentName, /** @String | @null name current edit component */\r\n    }\r\n\r\n    modalSearchOn = itemEvent => {\r\n        this.setState({\r\n            ...this.state,\r\n            modal:{\r\n                ...this.state.modal,\r\n                modalSearch: !this.state.modal.modalSearch,\r\n                modalSearchMode: itemEvent.mode || null\r\n            }\r\n        });\r\n    }\r\n\r\n    ViewerSwitch = itemEvent => {\r\n        /* set settings for viewer */\r\n        this.setState({\r\n            ...this.state,\r\n            modalViewer: {\r\n                ...this.state.modalViewer,\r\n                action: itemEvent.action,\r\n                target: itemEvent.target,\r\n                mode: itemEvent.mode,\r\n                iframe: itemEvent.iframe\r\n            }\r\n        });\r\n    };\r\n\r\n    openInstrument = itemEvent => {\r\n        /* build instrument panel component */\r\n           const idEqual = this.state.componentStats.id === itemEvent.componentStats.id;\r\n           if (!idEqual || !this.state.instrumentPanel.instrumentActive)\r\n           this.setState({\r\n               ...this.state,\r\n               editComponentName: itemEvent.targetSection,\r\n               componentStats: {\r\n                   ...this.state.componentStats,\r\n                   ...itemEvent.componentStats\r\n               },\r\n               instrumentPanel: {\r\n                   ...this.state.instrumentPanel,\r\n                   instrumentActive: true,\r\n               }\r\n           });\r\n   }\r\n\r\n   closePanel = itemEvent => {\r\n        /* unmount unstrument panel component */\r\n       this.setState({\r\n           ...this.state,\r\n           instrumentPanel: {\r\n               ...this.state.instrumentPanel,\r\n               colorPickerActive: false,\r\n               instrumentActive: itemEvent.close\r\n           }\r\n       });\r\n   };\r\n\r\n    render(){\r\n        const props = this.props;\r\n        if (this.state.instrumentPanel.instrumentActive){\r\n            return (\r\n                <Fragment key = 'AdditionalBuild'>\r\n                    <CSSTransition\r\n                        in={this.state.modalViewer.action}\r\n                        timeout={300}\r\n                        classNames=\"modalAnimation\"\r\n                        unmountOnExit\r\n                        appear\r\n                    >\r\n                        <Viewer\r\n                            key = 'ImageViewer'\r\n                            eventStreamBuild = {props.eventStreamBuild}\r\n                            mode = {this.state.modalViewer.mode}\r\n                            path = {this.state.modalViewer.target}\r\n                            iframe = {this.state.modalViewer.iframe}\r\n                        />\r\n                    </CSSTransition>\r\n                    <CSSTransition\r\n                        in={this.state.modal.modalSearch}\r\n                        timeout={300}\r\n                        classNames=\"modalAnimation\"\r\n                        unmountOnExit\r\n                        appear\r\n                    >\r\n                            <ModalWindow\r\n                                eventStreamBuild = {props.eventStreamBuild}\r\n                                idComponent = {this.state.componentStats.id}\r\n                                modalSearchMode = {this.state.modal.modalSearchMode}\r\n                                key = 'ModalWindow' workMode = 'Search'\r\n                            />\r\n                    </CSSTransition>\r\n                        <InstrumentsPanel\r\n                            key = {`InstrumentsPanel${this.state.componentStats.id}`}\r\n                            eventStreamBuild = {props.eventStreamBuild}\r\n                            editComponentName = {this.state.editComponentName}\r\n                            componentStats = {this.state.componentStats}\r\n                            instrumentPanel = {this.state.instrumentPanel}\r\n                        />\r\n                </Fragment>\r\n            )\r\n        } else return <Fragment></Fragment>;\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.props.eventStreamBuild.on('EventModalSearchOn', this.modalSearchOn);\r\n        this.props.eventStreamBuild.on('EventView', this.ViewerSwitch);\r\n        this.props.eventStreamBuild.on('EventClosePanel', this.closePanel);\r\n        this.props.eventEmitter.on('EventInstrumentPanel', this.openInstrument);\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        this.props.eventStreamBuild.off('EventModalSearchOn', this.modalSearchOn);\r\n        this.props.eventEmitter.off('EventInstrumentPanel', this.openInstrument);\r\n        this.props.eventStreamBuild.off('EventView', this.ViewerSwitch);\r\n        this.props.eventStreamBuild.off('EventClosePanel', this.closePanel);\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport default AdditionalTools;","import React,{Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Input from '../buildComponents/components/Input';\r\nimport Media from '../buildComponents/components/Media';\r\nimport Image from '../buildComponents/components/Image';\r\nimport TextComponent from '../buildComponents/components/Text';\r\nimport BackgroundComponent from '../buildComponents/components/Background';\r\n\r\nimport './buildMenu.scss';\r\n\r\nclass BuildMenu extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        mode: PropTypes.string.isRequired, /** @String work mode component */\r\n        editComponentName: PropTypes.string,\r\n        eventStreamBuild: PropTypes.object, /** @Events stream build */\r\n        countSection: PropTypes.number, /** @Number for new section id */\r\n        countComponents: PropTypes.number, /** @Number last project */\r\n        sizeParentBox: PropTypes.object /** @Object with width and height parent(bg) */\r\n    }\r\n\r\n\r\n    state = {\r\n        mode: this.props.mode,\r\n        sizeParentBox: {...this.props.sizeParentBox},\r\n        title: 'Title'\r\n    }\r\n\r\n    addText = event => {\r\n        let id = Math.random().toFixed(3);\r\n\r\n        const componentsPatternText = {\r\n            type: 'text',\r\n            font: 'Arial',\r\n            color: null,\r\n            rotate: 0,\r\n            scale: 1,\r\n            opacity: 1,\r\n            fontSize: null,\r\n            content: 'Title',\r\n            coords: {x: null, y: null}, // x, y\r\n            id: id,\r\n            targetSection: this.props.editComponentName,\r\n        };\r\n        this.props.eventStreamBuild.emit('EventBuildComponents',{\r\n            componentsPattern: componentsPatternText,\r\n            type: componentsPatternText.type,\r\n            component: <TextComponent\r\n                            key = {`text${id}`}\r\n                            mode = 'dev'\r\n                            {...componentsPatternText}\r\n                            sizeParentBox = {{...this.props.sizeParentBox}}\r\n                            id = {id}\r\n                        >Title</TextComponent>\r\n        });\r\n        event.stopPropagation();\r\n    }\r\n\r\n    addBackground = event => {\r\n        let id = Math.random().toFixed(3);\r\n\r\n        const componentsPatternBackground = {\r\n            id: id,\r\n            type: 'background',\r\n            backgroundColor: null,\r\n            backgroundImage: null,\r\n            targetSection: this.state.editComponentName,\r\n        };\r\n\r\n        this.props.eventStreamBuild.emit('EventBuildComponents',{\r\n            componentsPattern: componentsPatternBackground,\r\n            type: componentsPatternBackground.type,\r\n            component: <BackgroundComponent\r\n                            targetSection = {this.props.editComponentName}\r\n                            {...componentsPatternBackground}\r\n                            key = {`bg${id}`}\r\n                            id = {id}\r\n                        />\r\n        });\r\n\r\n        event.stopPropagation();\r\n    }\r\n\r\n    addImage = event => {\r\n        let id = Math.random().toFixed(3);\r\n\r\n        const componentsPatternImage = {\r\n            borderRadius: 0,\r\n            type: 'image',\r\n            size: {w: 30, h: 50},\r\n            opacity: 1,\r\n            rotate: 0,\r\n            zIndex: null,\r\n            image: process.env.PUBLIC_URL + '/img/photoPattern.svg',\r\n            coords: {x: null, y: null}, // x, y\r\n            id: id,\r\n            targetSection: this.props.editComponentName,\r\n        };\r\n        this.props.eventStreamBuild.emit('EventBuildComponents',{\r\n            componentsPattern: componentsPatternImage,\r\n            type: componentsPatternImage.type,\r\n            component: <Image\r\n                            key = {`image${id}`}\r\n                            sizeParentBox = {this.props.sizeParentBox}\r\n                            id = {id}\r\n                            mode = 'dev'\r\n                            path = {'/img/photoPattern.svg'}\r\n                            {...componentsPatternImage}\r\n                            type = 'image' />\r\n        });\r\n        event.stopPropagation();\r\n    }\r\n\r\n    addMedia = event => {\r\n        let id = Math.random().toFixed(3);\r\n\r\n        const  componentsPatternMedia = {\r\n            type: 'media',\r\n            size: {w: null, h: null},\r\n            content: null,\r\n            coords: {x: null, y: null}, // x, y\r\n            id: id,\r\n            targetSection: this.props.editComponentName,\r\n        };\r\n\r\n        this.props.eventStreamBuild.emit('EventBuildComponents', {\r\n            componentsPattern: componentsPatternMedia,\r\n            type: componentsPatternMedia.type,\r\n            component: <Media\r\n                            key = {`media${id}`}\r\n                            targetSection = {this.props.editComponentName}\r\n                            sizeParentBox = {this.props.sizeParentBox}\r\n                            content = {null}\r\n                            id = {id}\r\n                            path = {'/img/photoPattern.mp4'}\r\n                            {...componentsPatternMedia}\r\n                            type = 'media'\r\n                            mode = 'dev'\r\n                        />\r\n        });\r\n        event.stopPropagation();\r\n    }\r\n\r\n    addInput = event => {\r\n        let id = Math.random().toFixed(3);\r\n\r\n        const  componentsPatternInput = {\r\n            type: 'input',\r\n            size: {w: null, h: null},\r\n            typeInput: 'button',\r\n            color: null,\r\n            fontSize: null,\r\n            borderRadius: null,\r\n            content: null,\r\n            coords: {x: null, y: null}, // x, y\r\n            id: id,\r\n            targetSection: this.props.editComponentName,\r\n        };\r\n\r\n        this.props.eventStreamBuild.emit('EventBuildComponents', {\r\n            componentsPattern: componentsPatternInput,\r\n            type: componentsPatternInput.type,\r\n            component: <Input\r\n                            key = {`input${id}`}\r\n                            targetSection = {this.props.editComponentName}\r\n                            sizeParentBox = {this.props.sizeParentBox}\r\n                            id = {id}\r\n                            inputType = 'button'\r\n                            {...componentsPatternInput}\r\n                            type = 'input'\r\n                            mode = 'dev'\r\n                        />\r\n        });\r\n        event.stopPropagation();\r\n    }\r\n\r\n    addSection = event => {\r\n        let id = Math.random().toFixed(3);\r\n\r\n        const componentsPatternBackground = {\r\n            backgroundColor: null,\r\n            backgroundImage: null,\r\n            targetSection: `Section${id}`,\r\n            id: `Section${id}`,\r\n            type: 'background',\r\n        };\r\n        this.props.eventStreamBuild.emit('EventNewSection', {\r\n            componentsPattern: componentsPatternBackground,\r\n            component: <BackgroundComponent\r\n                            {...componentsPatternBackground}\r\n                            key = {`bg${id}`}\r\n                            id = {id}\r\n                            targetSection = {`Section${id}`}\r\n                            width = '100%'\r\n                            height = '800px'\r\n                            type = 'background'\r\n                            mode = 'dev'\r\n                        />\r\n        });\r\n        event.stopPropagation();\r\n    }\r\n\r\n    render(){\r\n\r\n        if (this.state.mode === 'build'){\r\n            return (\r\n                <div className = 'ComponentsMenu'>\r\n                    <button \r\n                        onClick = {this.addImage} \r\n                        className = 'ImageTool CompoentnsMenu_button' \r\n                    >\r\n                        <span>Image</span>\r\n                    </button>\r\n                    <button \r\n                        onClick = {this.addText} \r\n                        className = 'TextTool CompoentnsMenu_button' >\r\n                        <span>Text</span>\r\n                    </button>\r\n                    <button\r\n                        onClick = {this.addInput}\r\n                        disabled = {this.props.editComponentName !== 'Header' ? false : true}\r\n                        className = 'ButtonTool CompoentnsMenu_button' >\r\n                        <span>Button</span>\r\n                    </button>\r\n                    <button onClick = {this.addMedia}\r\n                        className = 'VideoTool CompoentnsMenu_button'\r\n                    >\r\n                        <span>Video</span>\r\n                    </button>\r\n                </div>\r\n            )\r\n        } else if (this.state.mode === 'section') {\r\n            return (\r\n                <div className = 'sectionMode'>\r\n                    <button\r\n                        onClick = {this.addSection}\r\n                        className = 'newSectionTool CompoentnsMenu_button'\r\n                    >\r\n                        <span>New section</span>\r\n                    </button>\r\n                </div>\r\n            )\r\n        } else return <Fragment></Fragment>\r\n    }\r\n}\r\n\r\nexport default BuildMenu;","import React,{Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Icon from '../Icon/icon';\r\nimport BuildMenu from '../componentsBuildMenu/BuildMenu';\r\n\r\nimport './controllers.scss';\r\n\r\nclass Controllers extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        countComponents: PropTypes.number.isRequired, /** @number last project id */\r\n        sizeParentBox: PropTypes.object, /** @Object with width and height parent(bg) */\r\n        eventStreamBuild: PropTypes.object, /** @Events stream */\r\n        menuActive: PropTypes.bool, /** @Bool value active menu or unactive */\r\n    }\r\n\r\n    state = {\r\n        viewComponentMenu: false,\r\n        editComponentName: this.props.editComponentName,\r\n        shiftX: 0,\r\n        shiftY: 0,\r\n        coordsX: '50%',\r\n        coordsY: '0',\r\n        shadowDisplay: 'block'\r\n    }\r\n\r\n    componentMenu = event => {\r\n        this.setState({viewComponentMenu: this.state.viewComponentMenu ? false : true});\r\n        event.stopPropagation();\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <Fragment>\r\n            {\r\n                <div\r\n                ref = {this.refControll}\r\n                className = 'ControllersEditComponent'\r\n                >\r\n                    <Icon\r\n                        onClick = {this.componentMenu}\r\n                        className = 'ControllersEditComponent__addButton'\r\n                        path = '/img/addButton.png'\r\n                    />\r\n                    { this.state.viewComponentMenu ?\r\n                        <BuildMenu\r\n                            key = {`buildMenu ${this.state.editComponentName}`}\r\n                            mode = 'build'\r\n                            eventStreamBuild = {this.props.eventStreamBuild}\r\n                            editComponentName = {this.state.editComponentName}\r\n                            sizeParentBox = {this.props.sizeParentBox}\r\n                            countComponents = {this.props.countComponents}\r\n                        /> : null\r\n                    }\r\n                </div>\r\n            }\r\n            </Fragment>\r\n        )\r\n    }\r\n\r\n    componentDidUpdate = () => {\r\n        if (this.props.editComponentName !== this.state.editComponentName)\r\n            this.setState({\r\n                ...this.state,\r\n                editComponentName: this.props.editComponentName\r\n            })\r\n    }\r\n\r\n}\r\n\r\nexport default Controllers;","import React,{Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport RenderInBrowser from 'react-render-in-browser';\r\n/* ------- Events streams ------- */\r\nimport eventEmitter from '../../EventEmitter'; // common\r\nimport EventBuild from 'events'; // for builder controllers\r\n/* ------- For load project and exit from project ------- */\r\nimport {loadCurrentProjectAction, exitProjectAction} from '../../redux/actions';\r\n/* ------- Moddlewares ------- */\r\nimport {middlewareDeleteProjectComponent} from '../../redux/middleware/middlewareDelete';\r\nimport updateMiddleware from '../../redux/middleware/updateMiddleware';\r\n/* ------- HOC for het firebase controll object ------- */\r\nimport withScroll from '../../components/withScroll';\r\nimport withFirebase from '../../components/withFirebase';\r\n/* ------- Child components ------- */\r\nimport AdditionalTools from '../../components/additionalTools/additionalTools';\r\nimport builderHOC from '../../components/builderHOC';\r\nimport Controllers from '../../components/controllers/controllers';\r\nimport Loader from '../../components/loading/Loader';\r\nimport Header from '../../components/header/Header';\r\nimport Section from '../../components/buildComponents/section';\r\nimport BuildMenu from '../../components/componentsBuildMenu/BuildMenu';\r\n\r\nimport './build.scss';\r\n\r\nclass Build extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        firebase: PropTypes.object.isRequired, /** @firebase class for use firebase functions */\r\n        active: PropTypes.bool, /** @active - status firebase auth */\r\n        dispatch: PropTypes.func.isRequired, /** @dispatch - redux */\r\n        history: PropTypes.object, /** @Router HTML5 history */\r\n        location: PropTypes.object, /** @Router */\r\n        match: PropTypes.object.isRequired, /** @Router */\r\n        userData: PropTypes.object.isRequired, /** @UserData data about projects,user and current edit prject */\r\n    }\r\n\r\n    state = {\r\n            idProject: parseInt(this.props.match.params.param), /** @Id project */\r\n            editStart: false, /** @Bool start edit or no */\r\n            isChange: false, /** @Bool detected changes */\r\n            isLoadComponents: true, /** @Bool load all necessary components  */\r\n            projectEmpty: false, /** @Bool detected project undefiend */\r\n            componentJSX: [], /** @Array with JSX */\r\n            editComponentName:  null, /** @String | @null name current edit component */\r\n            menuActive: false, /** @bool active menu or no */\r\n            sizeParentBox: null, /** @Object size store */\r\n        }\r\n\r\n        eventEmitterBuild = new EventBuild(); // events stream for controllers\r\n        timer = null; // save timer\r\n\r\n    workModeEdit = itemEvent => {\r\n        /* set edit mode */\r\n        if (itemEvent.editStart)\r\n        this.setState({\r\n            ...this.state,\r\n            editStart: itemEvent.editStart,\r\n            editComponentName: itemEvent.targetSection,\r\n            menuActive: true,\r\n        });\r\n    }\r\n\r\n    deleteComponent = eventItem => {\r\n        /* delete component from DB and from JSX array */\r\n        if (eventItem.id === 'Header' && eventItem.type === 'background') return;\r\n        let {currentProjectsData} = this.props.userData;\r\n        let {componentJSX} = this.state;\r\n\r\n        const data = {\r\n            id: this.state.idProject,\r\n            uid: this.props.userData.idUser,\r\n            idComponent: eventItem.id,\r\n            sectionsProject: [...currentProjectsData.sectionsProject],\r\n            type: eventItem.type\r\n        }\r\n\r\n        this.props.dispatch(middlewareDeleteProjectComponent(data))\r\n        .then(id => {\r\n            if (id !== null){\r\n               const _componentJSX = componentJSX.filter(item => item.id !== id);\r\n            this.setState({\r\n                ...this.state,\r\n                componentJSX: _componentJSX\r\n            });\r\n        }\r\n        });\r\n    }\r\n\r\n    addComponentsFromBD = (array, sizeParentBox) => {\r\n        /* build JSX components from DB */\r\n        if (!sizeParentBox) sizeParentBox = this.state.sizeParentBox;\r\n        let {componentJSX} = this.state;\r\n        let componentsFromDB = [];\r\n\r\n        array.forEach(item => {\r\n            if (item.type !== 'background'){\r\n                const itemHash = {\r\n                    props: {\r\n                        ...item,\r\n                        sizeParentBox,\r\n                        mode: 'dev',\r\n                    },\r\n                    type: item.type,\r\n                    id: item.id,\r\n                }\r\n                const patternJSX = {\r\n                    id: item.id,\r\n                    targetSection: item.targetSection,\r\n                    component: builderHOC(itemHash)(Fragment)\r\n                };\r\n                componentsFromDB.push(patternJSX);\r\n            }\r\n        });\r\n            this.setState({\r\n                ...this.state,\r\n                isLoadComponents: false,\r\n                sizeParentBox: {...sizeParentBox},\r\n                componentJSX: [...componentJSX, ...componentsFromDB],\r\n            });\r\n    };\r\n\r\n    addComponent = itemEvent => {\r\n         /* create new component */\r\n        let {componentJSX} = this.state;\r\n        let {componentsPattern} = itemEvent;\r\n\r\n        const patternJSX = {\r\n            id: componentsPattern.id,\r\n            targetSection: componentsPattern.targetSection,\r\n            component: itemEvent.component\r\n        };\r\n            this.setState({\r\n                ...this.state,\r\n                componentJSX: [...componentJSX, patternJSX],\r\n            });\r\n    };\r\n\r\n    saveChangesComponent = itemEvent => {\r\n        /* save detected changes in DB and call confirm modal */\r\n        const {ms} = itemEvent;\r\n        if (this.timer) clearTimeout(this.timer);\r\n\r\n        this.timer = setTimeout(() => {\r\n            const {currentProjectsData} = this.props.userData;\r\n            const {userData} = this.props;\r\n            let findCurrentItem = false;\r\n            const _components = currentProjectsData.components.map(item => {\r\n                if (item.id === itemEvent.id) { findCurrentItem = true; return {...itemEvent}; }\r\n                return item;\r\n            });\r\n\r\n            if (!findCurrentItem) _components.push(itemEvent);\r\n\r\n            this.props.dispatch(updateMiddleware({\r\n                uid: userData.idUser,\r\n                projects: [...userData.projects],\r\n                components: _components,\r\n                sectionsProject: [...currentProjectsData.sectionsProject],\r\n                idProject: this.state.idProject\r\n            })).then(() =>\r\n                eventEmitter.emit('EventRedirectConfirm', {false: false, confirm: false}));\r\n        },ms);\r\n    };\r\n\r\n    mainComponent = null;\r\n    mainRefComponent = node => node ?\r\n        this.mainComponent = {data: node.getBoundingClientRect(), node: node} : node;\r\n\r\n    addNewSection = eventItem => {\r\n    /* create new project section */\r\n        const {userData} = this.props;\r\n        const {currentProjectsData} = userData;\r\n        console.log(eventItem);\r\n        this.props.dispatch(updateMiddleware({\r\n                uid: userData.idUser,\r\n                projects: [...userData.projects],\r\n                components: [...currentProjectsData.components,\r\n                            eventItem.componentsPattern],\r\n                sectionsProject: [\r\n                    ...currentProjectsData.sectionsProject,\r\n                    eventItem.componentsPattern.id\r\n                ],\r\n                idProject: this.state.idProject\r\n        })).then(() => {\r\n            this.setState({\r\n                ...this.state,\r\n                componentJSX:[\r\n                    ...this.state.componentJSX,\r\n                    eventItem.component\r\n                ]\r\n            }, () => {\r\n                eventEmitter.emit('EventSetState', currentProjectsData.sectionsProject.length);\r\n            });\r\n        });\r\n}\r\n\r\n    render(){\r\n\r\n        if (this.state.projectEmpty) return this.props.history.push('/Cabinet');\r\n        \r\n        const {userData} = this.props;\r\n        const {currentProjectsData} = userData;\r\n        const section = currentProjectsData.sectionsProject;\r\n\r\n        if (userData.active && currentProjectsData.loadProject){\r\n            return (\r\n                <Fragment>\r\n                    <Header key = 'Header' title = \"Constructor\" idUser = {userData.idUser}  />\r\n                    <RenderInBrowser ie only>\r\n                        <h2 className = 'ie'>\r\n                            All the magic tricks in this app work best in Chrome/Firefox/Opera and other.\r\n                            <hr/>\r\n                            Internet explorer deprecated.\r\n                        </h2>\r\n                    </RenderInBrowser>\r\n                    <RenderInBrowser except ie>\r\n                        <div\r\n                            ref = {this.mainRefComponent} \r\n                            onMouseMove = {this.showAddSection} \r\n                            className = 'Build' \r\n                            key = 'Build'\r\n                        >\r\n                            { this.state.editStart &&\r\n                                <Controllers\r\n                                    key = 'controllers'\r\n                                    eventStreamBuild = {this.eventEmitterBuild}\r\n                                    editComponentName = {this.state.editComponentName}\r\n                                    countComponents = {currentProjectsData.components.length}\r\n                                    menuActive = {this.state.menuActive}\r\n                                    sizeParentBox = {this.state.sizeParentBox}\r\n                                />\r\n                            }\r\n                                <BuildMenu\r\n                                    key = 'buildMenu'\r\n                                    eventStreamBuild = {this.eventEmitterBuild}\r\n                                    countSection = {this.state.componentJSX.length * 5}\r\n                                    mode = \"section\"\r\n                                    className = 'menu'\r\n                                />\r\n                                <AdditionalTools key = 'tools'\r\n                                    eventStreamBuild = {this.eventEmitterBuild}\r\n                                    eventEmitter = {eventEmitter}\r\n                                    editComponentName = {this.state.editComponentName}\r\n                                />\r\n                            {section.length &&\r\n                                <Section mode = 'dev' key = 'section'\r\n                                    componentJSX = {this.state.componentJSX}\r\n                                    editComponentName = {this.state.editComponentName}\r\n                                    menuActive = {this.state.menuActive}\r\n                                    sizeParentBox = {this.state.sizeParentBox}\r\n                                    userData = {userData}\r\n                                />\r\n                            }\r\n                        </div>\r\n                    </RenderInBrowser>\r\n                </Fragment>\r\n            )\r\n        } else if (!this.props.firebase.getCurrentUser()) return <Redirect to = '/' />\r\n        else return <Loader  key = 'Loader' path = '/img/loading.gif' type = 'build' />\r\n    }\r\n\r\n//     dispatch: ƒ ()\r\n// firebase: Firebase {auth: Cm, db: Firestore}\r\n// history: {length: 3, action: \"POP\", location: {…}, createHref: ƒ, push: ƒ, …}\r\n// location: {pathname: \"/Cabinet/Build/2\", search: \"\", hash: \"\", state: undefined}\r\n// match: {path: \"/Cabinet/Build/:param\", url: \"/Cabinet/Build/2\", isExact: true, params: {…}}\r\n// staticContext: undefined\r\n// userData: {active: true, idUser: \"gCAGBdHWM8Sy4DhQxYGgE4FEqbc2\", projects: Array(6), currentProjectsData: {…}}\r\n// __proto__: Object\r\n\r\n    componentDidUpdate = (prevProps) => {\r\n\r\n        console.log(this.state);\r\n        if (prevProps.location.pathname !== this.props.location.pathname)\r\n            this.props.history.push(this.props.location.pathname);\r\n        let {userData} = this.props;\r\n        let {currentProjectsData} = userData;\r\n        console.log(this.props);\r\n        const isLoadComponents = this.state.isLoadComponents;\r\n        let sizeParentBox = null;\r\n\r\n        if (this.mainComponent && this.state.sizeParentBox === null)\r\n            sizeParentBox = {\r\n                width: this.mainComponent.data.width,\r\n                height: this.mainComponent.data.height,\r\n                top: this.mainComponent.data.top,\r\n                left: this.mainComponent.data.left,\r\n            }\r\n\r\n\r\n        if (userData.active && !currentProjectsData.loadProject) {\r\n            /** load current project of user session active and load project - false */\r\n            const current =  userData.projects.find(item => /* find current project */\r\n                                                    item.id === this.state.idProject)\r\n            if (current){ /* load data */\r\n                this.props.dispatch(loadCurrentProjectAction({\r\n                    id: current.id,\r\n                    typeProject: current.type,\r\n                    sectionsProject: [...current.sectionsProject],\r\n                    components: [...current.components]\r\n                }))\r\n                /* else redirect */\r\n            } else this.setState({...this.state, projectEmpty: true});\r\n        }\r\n        if (currentProjectsData.loadProject && isLoadComponents) {\r\n             /* if all components load build our JSX */\r\n            if (this.state.sizeParentBox === null && sizeParentBox !== null)\r\n                this.addComponentsFromBD([...currentProjectsData.components], sizeParentBox);\r\n            else this.addComponentsFromBD([...currentProjectsData.components]);\r\n            /** For scroll component */\r\n            eventEmitter.emit('EventSetState',currentProjectsData.sectionsProject.length-1);\r\n        }\r\n\r\n        // if delete section change count for scroller\r\n        const currentSection = currentProjectsData.sectionsProject.length;\r\n        const  prevSection = prevProps.userData.currentProjectsData.sectionsProject.length;\r\n        if (currentSection !== prevSection){\r\n        eventEmitter.emit('EventSetState', currentProjectsData.sectionsProject.length-1);\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        let {userData} = this.props;\r\n        let {currentProjectsData} = userData;\r\n        /**  If the session is already active, immediately load */\r\n        if (userData.active && !currentProjectsData.loadProject) {\r\n        /** load current project of user session active and load project - false */\r\n            const current =  userData.projects.find(item => item.id === this.state.idProject);\r\n\r\n            if (current)\r\n            this.props.dispatch(loadCurrentProjectAction({\r\n                id: current.id,\r\n                sectionsProject: [...current.sectionsProject],\r\n                typeProject: current.type,\r\n                components: [...current.components]\r\n            }));\r\n        else this.setState({...this.state, projectEmpty: true});\r\n            eventEmitter.on('EventModeEdit', this.workModeEdit);\r\n            this.eventEmitterBuild.on('EventBuildComponents', this.addComponent);\r\n            this.eventEmitterBuild.on('EventDeleteComponent', this.deleteComponent);\r\n            this.eventEmitterBuild.on('EventNewSection', this.addNewSection);\r\n            this.eventEmitterBuild.on('EventSaveChangesComponent', this.saveChangesComponent);\r\n        }; /** else redirect */\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n\r\n        let {userData} = this.props;\r\n        if (userData.active){\r\n            this.props.dispatch(exitProjectAction(true));\r\n            eventEmitter.off('EventModeEdit', this.workModeEdit);\r\n            this.eventEmitterBuild.off('EventBuildComponents', this.addComponent);\r\n            this.eventEmitterBuild.off('EventDeleteComponent', this.deleteComponent);\r\n            this.eventEmitterBuild.off('EventNewSection', this.addNewSection);\r\n            this.eventEmitterBuild.off('EventSaveChangesComponent', this.saveChangesComponent);\r\n        }\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        userData: {\r\n            active: state.cabinet.active,\r\n            idUser: state.cabinet.idUser,\r\n            projects: [...state.cabinet.projects],\r\n           currentProjectsData: {...state.builder}\r\n        },\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(withFirebase(withScroll(Build)));\r\n","import React from 'react';\r\n\r\n\r\nconst OpenPanel = props => {\r\n\r\n\r\n\r\n    return (\r\n        <div className = 'guide openPanelGuide'>\r\n            <h4 className = 'guide__title'>Open panel</h4>\r\n            <p className = 'guide_content'>\r\n                If you want to open the toolbar, you should double-click on the background.\r\n            </p>\r\n            <img src = {process.env.PUBLIC_URL + '/img/guideOpenPanel.gif'} alt = 'guide'></img>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OpenPanel;","import React from 'react';\r\n\r\n\r\nconst SearchGuide = props => {\r\n    return (\r\n        <div className = 'guide addComponents'>\r\n            <h4 className = 'guide__title'>Search guide</h4>\r\n            <p className = 'guide_content'>\r\n                On the toolbar, click on the \"Search\" button and\r\n                enter a keyword in the search field.\r\n            </p>\r\n            <img src = {process.env.PUBLIC_URL + '/img/search.gif'} alt = 'guide'></img>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchGuide;","import React from 'react';\r\n\r\n\r\nconst AddComponents = props => {\r\n    return (\r\n        <div className = 'guide addComponents'>\r\n            <h4 className = 'guide__title'>Add components</h4>\r\n            <p className = 'guide_content'>\r\n                Click on the button at the top of the screen\r\n                and select a component.\r\n            </p>\r\n            <img src = {process.env.PUBLIC_URL + '/img/add.gif'} alt = 'guide'></img>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddComponents;","import React from 'react';\r\n\r\n\r\nconst AddNewSection = props => {\r\n    return (\r\n        <div className = 'guide addComponents'>\r\n            <h4 className = 'guide__title'>Add components</h4>\r\n            <p className = 'guide_content'>\r\n                If you want to add a new section,\r\n                click on the button at the bottom of the page.\r\n            </p>\r\n            <img src = {process.env.PUBLIC_URL + '/img/newSection.gif'} alt = 'guide'></img>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddNewSection;","import React from 'react';\r\n\r\n\r\nconst CreateNewProject = props => {\r\n    return (\r\n        <div className = 'guide addComponents'>\r\n            <h4 className = 'guide__title'>Add components</h4>\r\n            <p className = 'guide_content'>\r\n                If you want to create a new project,\r\n                in your account (/ Cabinet) click on the button at the top of the page.\r\n            </p>\r\n            <img src = {process.env.PUBLIC_URL + '/img/newProject.gif'} alt = 'guide'></img>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CreateNewProject;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport OpenPanel from './Guides/OpenPanel';\r\nimport SearchGuide from './Guides/SearchGuide';\r\nimport AddComponents from './Guides/AddComponents';\r\nimport AddNewSection from './Guides/AddNewSection';\r\nimport CreateNewProject from './Guides/CreateNewProject';\r\nimport Icon from '../Icon/icon';\r\nimport './switchContainer.scss';\r\n\r\nclass SwitchContainer extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        mode: PropTypes.string,\r\n    }\r\n\r\n    state = {\r\n        mode: 'panel'\r\n    }\r\n\r\n    changeWorkMode = event => {\r\n        event.target === this.refOP &&\r\n        this.setState({\r\n            ...this.state,\r\n            mode: 'panel'\r\n        });\r\n        event.target === this.refSE &&\r\n        this.setState({\r\n            ...this.state,\r\n            mode: 'search'\r\n        });\r\n        event.target === this.refADD &&\r\n        this.setState({\r\n            ...this.state,\r\n            mode: 'add'\r\n        });\r\n        event.target === this.refSN &&\r\n        this.setState({\r\n            ...this.state,\r\n            mode: 'section'\r\n        });\r\n        event.target === this.refPR &&\r\n        this.setState({\r\n            ...this.state,\r\n            mode: 'project'\r\n        });\r\n        event.stopPropagation();\r\n    }\r\n\r\n    refOP = null;\r\n    refSE = null;\r\n    refADD = null;\r\n    refSN = null;\r\n    refPR = null\r\n\r\n    refOpenPanel  = node => this.refOP = node;\r\n    refSearch = node => this.refSE = node;\r\n    refAdd = node => this.refADD = node;\r\n    refSection = node => this.refSN = node;\r\n    refProject = node => this.refPR = node;\r\n\r\n    render(){\r\n        return(\r\n            <div className = 'switchContainer'>\r\n                <div className = 'col--17 col-sm-10 switchContainer__controllers'>\r\n                    <Icon className = 'switchContainer__menu' path = '/img/Menu_Burder.png' />\r\n                    <ul className = 'guide_list list'>\r\n                        <li>\r\n                            <input\r\n                                onClick = {this.changeWorkMode}\r\n                                className = {\r\n                                    this.state.mode !== 'panel' ?\r\n                                    'switch__button panel'\r\n                                    : 'switch__button panel activeButton'\r\n                                }\r\n                                type = 'button'\r\n                                ref = {this.refOpenPanel}\r\n                                value = 'Open panel for edit'\r\n                            />\r\n                        </li>\r\n                        <li>\r\n                            <input\r\n                                onClick = {this.changeWorkMode}\r\n                                className = {\r\n                                    this.state.mode !== 'search' ?\r\n                                    'switch__button search'\r\n                                    : 'switch__button search activeButton'\r\n                                }\r\n                                type = 'button'\r\n                                ref = {this.refSearch}\r\n                                value ='Search image/media'\r\n                            />\r\n                        </li>\r\n                        <li>\r\n                            <input\r\n                                onClick = {this.changeWorkMode}\r\n                                className = {\r\n                                    this.state.mode !== 'add' ?\r\n                                    'switch__button add'\r\n                                    : 'switch__button add activeButton'\r\n                                }\r\n                                type = 'button'\r\n                                ref = {this.refAdd}\r\n                                value ='Adding components'\r\n                            />\r\n                        </li>\r\n                        <li>\r\n                            <input\r\n                                onClick = {this.changeWorkMode}\r\n                                className = {\r\n                                    this.state.mode !== 'section' ?\r\n                                    'switch__button section'\r\n                                    : 'switch__button section activeButton'\r\n                                }\r\n                                type = 'button'\r\n                                ref = {this.refSection}\r\n                                value ='Adding new section'\r\n                            />\r\n                        </li>\r\n                        <li>\r\n                            <input\r\n                                onClick = {this.changeWorkMode}\r\n                                className = {\r\n                                    this.state.mode !== 'project' ?\r\n                                    'switch__button project'\r\n                                    : 'switch__button project activeButton'\r\n                                }\r\n                                type = 'button'\r\n                                ref = {this.refProject}\r\n                                value ='Create new project'\r\n                            />\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n                <div className = 'col--80--1'>\r\n                    {this.state.mode === 'panel' &&\r\n                        <OpenPanel />\r\n                    }\r\n                    {this.state.mode === 'search' &&\r\n                        <SearchGuide />\r\n                    }\r\n                    {this.state.mode === 'add' &&\r\n                        <AddComponents />\r\n                    }\r\n                    {this.state.mode === 'section' &&\r\n                        <AddNewSection />\r\n                    }\r\n                    {this.state.mode === 'project' &&\r\n                        <CreateNewProject />\r\n                }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SwitchContainer;","import React,{Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\n\r\nimport SwitchContainer from '../../components/SwitchContainer/SwitchContainer';\r\nimport withFirebase from '../../components/withFirebase';\r\nimport Header from '../../components/header/Header';\r\nimport Loader from '../../components/loading/Loader';\r\n\r\nimport './guide.scss';\r\nclass Guide extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        config: PropTypes.object.isRequired, /** @Config app */\r\n        firebase: PropTypes.object.isRequired, /** @firebase class for use firebase functions */\r\n        history: PropTypes.object, /** @Router HTML5 history */\r\n        location: PropTypes.object, /** @Router */\r\n        match: PropTypes.object, /** @Router */\r\n    }\r\n\r\n    state = {\r\n        config: this.props.config\r\n    };\r\n\r\n    render(){\r\n\r\n        console.log(this.props);\r\n        let user = this.props.firebase.getCurrentUser();\r\n        if (user && this.props.idUser) {\r\n            const { config } = this.state;\r\n            return (\r\n                <Fragment>\r\n                    <Header title = {config.title} idUser = {user.uid} />\r\n                    <section className = 'Guide'>\r\n                        <div className = 'container guide--flex'>\r\n                            <div className = 'Guide__about'>\r\n                                <h2>Documentation</h2>\r\n                                <p>Get started with {config.title}</p>\r\n                                <p className = 'Guide__about__rev'>\r\n                                    The Constructor guides are step-by-step walkthroughs\r\n                                    that help you get started using Constructor.\r\n                                </p>\r\n                            </div>\r\n                            <SwitchContainer />\r\n                        </div>\r\n                    </section>\r\n                </Fragment>\r\n            )\r\n        } else if (!user) return <Redirect to = { '/'} />\r\n        else return <Loader path = '/img/loading.gif' type = 'About' />\r\n\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n      idUser: state.cabinet.idUser,\r\n    }\r\n  };\r\n\r\nexport default connect(mapStateToProps)(withFirebase(Guide));","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {connect} from 'react-redux';\r\nimport {Route, Switch} from 'react-router-dom';\r\n/* ------- Moddlewares ------- */\r\nimport {middlewareLoadUserData} from './redux/middleware/loadUserMiddleware';\r\n/* ------- Child components ------- */\r\nimport withFirebase from './components/withFirebase';\r\nimport Loader from './components/loading/Loader';\r\nimport Index from './Pages/Index/Index';\r\nimport Cabinet from './Pages/Cabinet/Cabinet';\r\nimport Production from './Pages/Production/Production';\r\nimport About from './Pages/About/About';\r\nimport Build from './Pages/Build/Build';\r\nimport Guide from './Pages/Guide/Guide';\r\nimport ErrorPage from './components/ErrorCatch/ErrorPage';\r\nimport './root.scss';\r\n\r\nclass App extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        config: PropTypes.object.isRequired, /** @Config app */\r\n        firebase: PropTypes.object.isRequired, /** @firebase class for use firebase functions */\r\n        dispatch: PropTypes.func.isRequired, /** @dispatch - redux */\r\n    }\r\n\r\n    state = {\r\n        firebase: this.props.firebase,\r\n        firebaseLoadState: false,\r\n        config: this.props.config,\r\n    }\r\n\r\n    componentDidMount(){\r\n        /** Listening firebase answer after first load app */\r\n        this.props.firebase.auth.onAuthStateChanged((user) => {\r\n            if (!this.state.firebaseLoadState){\r\n                /** if user - true, loading data in store */\r\n                if (user) this.props.dispatch(middlewareLoadUserData(user.uid))\r\n                .then((res) =>  { /** show loader */\r\n                    this.setState({...this.state, firebaseLoadState: res});\r\n                }); /** if loading = redirect */\r\n                else  this.setState({...this.state, firebaseLoadState: true});\r\n            }\r\n        });\r\n    }\r\n\r\n    render(){\r\n        if (this.state.firebaseLoadState){\r\n            return (\r\n                <Switch>\r\n                        <Route\r\n                            path = {'/'} exact\r\n                            render = {(props) => <Index {...props} config = {this.state.config} />}\r\n                        />\r\n                        <Route \r\n                            path = '/Cabinet/' exact \r\n                            render = {(props) => <Cabinet {...props} config = {this.state.config} />}\r\n                        />\r\n                        <Route\r\n                            path = {'/Cabinet/About'}\r\n                            render = {(props) => <About {...props} config = {this.state.config} />}\r\n                        />\r\n                        <Route path = {'/Cabinet/Guide'} exact \r\n                        render = {(props) => <Guide {...props} config = {this.state.config} />}\r\n                        />\r\n                        <Route path = {'/Cabinet/Build/:param'} exact\r\n                            render = {(props) => <Build {...props} />}\r\n                        />\r\n                        <Route path = {'/Cabinet/Build/:param/Production'} exact component = {Production} />\r\n                        <Route path = {'/crashPage'} component = {ErrorPage} />\r\n                </Switch>\r\n            )\r\n        } else return <Loader path = { '/img/loading.gif'} type = 'application' />\r\n    }\r\n}\r\n\r\nexport default connect()(withFirebase(App));","\r\n/** IE supports polyfills */\r\nimport 'core-js/es/map';\r\nimport 'core-js/es/set';\r\nimport 'core-js/es/symbol';\r\nimport 'core-js/es/array/includes';\r\nimport 'core-js/es/array/find';\r\nimport 'core-js/es/string/includes';\r\nimport 'core-js/es/object/assign';\r\n/** --------------------- */\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport firebase from './Firebase/Firebase';\r\nimport ErrorBoundary from './components/ErrorCatch/ErrorBoundary';\r\nimport {HashRouter } from 'react-router-dom';\r\nimport {Provider} from 'react-redux';\r\nimport store from './redux/store';\r\nimport App from './App.jsx';\r\nimport 'normalize.css';\r\n\r\nimport firebaseContext from './Firebase/firebaseContext'; /** firebase contect API */\r\nimport config from './config.json'; /** app config file */\r\n\r\n\r\nReactDOM.render(\r\n        <HashRouter>\r\n            <ErrorBoundary>\r\n                <firebaseContext.Provider value = {firebase}>\r\n                    <Provider store = {store}>\r\n                        <App config = {config} />\r\n                    </Provider>\r\n                </firebaseContext.Provider>\r\n            </ErrorBoundary>\r\n        </HashRouter>,\r\n        document.getElementById('root')\r\n);\r\n\r\n\r\nserviceWorker.register();\r\n\r\n"],"sourceRoot":""}